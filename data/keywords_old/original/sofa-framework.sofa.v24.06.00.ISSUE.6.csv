id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/sofa-framework/sofa/pull/2030:873,Performance,perform,perform,873,"SAP is usually a method to discriminate pairs of objects that are not in collision. The output is pairs of objects to be further investigated in the narrow phase.; However, in SOFA, the `DirectSAP` component is written as a component doing the broad phase and the narrow phase. Almost all the work is actually done in the narrow phase. That is why, we can consider this component is mainly a narrow phase component.; All the broad phase code has been removed. It is still a broad phase, but the code is located in its base class: `BruteForceBroadPhase`.; The narrow phase code has been extracted and put in a new component: `DirectSAPNarrowPhase`. `DirectSAP` inherits from `DirectSAPNarrowPhase`.; In the narrow phase, the result of the broad phase is used to skip the boxes which have been totally ignored in the broad phase. Initially, the `DirectSAP` component did not perform any discrimination in its broad phase. Now it performs a `BruteForceBroadPhase`. It is not yet clear if it is always a good choice regarding the performances. In the case of the caduceus scene, the performances are slightly better. I guess if the broad phase takes a lot of time (many objects), it is better to avoid it. `DirectSAP` would not be the best choice. I would use a more performant broad phase, or no broad phase, when used with `DirectSAPNarrowPhase`. From now, the user can decide to design its scene with two different ways resulting to the same behavior:; ```; <DirectSAP/>; ```; or; ```; <BruteForceBroadPhase/>; <DirectSAPNarrowPhase/>; ```; In the second option, it will be possible to change the combination of broad phase/narrow phase.; Note: I kept the component `DirectSAP`, but I don't think its name is meaningful. This is the following of the work started in #2010 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/so",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2030
https://github.com/sofa-framework/sofa/pull/2030:927,Performance,perform,performs,927,"SAP is usually a method to discriminate pairs of objects that are not in collision. The output is pairs of objects to be further investigated in the narrow phase.; However, in SOFA, the `DirectSAP` component is written as a component doing the broad phase and the narrow phase. Almost all the work is actually done in the narrow phase. That is why, we can consider this component is mainly a narrow phase component.; All the broad phase code has been removed. It is still a broad phase, but the code is located in its base class: `BruteForceBroadPhase`.; The narrow phase code has been extracted and put in a new component: `DirectSAPNarrowPhase`. `DirectSAP` inherits from `DirectSAPNarrowPhase`.; In the narrow phase, the result of the broad phase is used to skip the boxes which have been totally ignored in the broad phase. Initially, the `DirectSAP` component did not perform any discrimination in its broad phase. Now it performs a `BruteForceBroadPhase`. It is not yet clear if it is always a good choice regarding the performances. In the case of the caduceus scene, the performances are slightly better. I guess if the broad phase takes a lot of time (many objects), it is better to avoid it. `DirectSAP` would not be the best choice. I would use a more performant broad phase, or no broad phase, when used with `DirectSAPNarrowPhase`. From now, the user can decide to design its scene with two different ways resulting to the same behavior:; ```; <DirectSAP/>; ```; or; ```; <BruteForceBroadPhase/>; <DirectSAPNarrowPhase/>; ```; In the second option, it will be possible to change the combination of broad phase/narrow phase.; Note: I kept the component `DirectSAP`, but I don't think its name is meaningful. This is the following of the work started in #2010 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/so",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2030
https://github.com/sofa-framework/sofa/pull/2030:1026,Performance,perform,performances,1026,"SAP is usually a method to discriminate pairs of objects that are not in collision. The output is pairs of objects to be further investigated in the narrow phase.; However, in SOFA, the `DirectSAP` component is written as a component doing the broad phase and the narrow phase. Almost all the work is actually done in the narrow phase. That is why, we can consider this component is mainly a narrow phase component.; All the broad phase code has been removed. It is still a broad phase, but the code is located in its base class: `BruteForceBroadPhase`.; The narrow phase code has been extracted and put in a new component: `DirectSAPNarrowPhase`. `DirectSAP` inherits from `DirectSAPNarrowPhase`.; In the narrow phase, the result of the broad phase is used to skip the boxes which have been totally ignored in the broad phase. Initially, the `DirectSAP` component did not perform any discrimination in its broad phase. Now it performs a `BruteForceBroadPhase`. It is not yet clear if it is always a good choice regarding the performances. In the case of the caduceus scene, the performances are slightly better. I guess if the broad phase takes a lot of time (many objects), it is better to avoid it. `DirectSAP` would not be the best choice. I would use a more performant broad phase, or no broad phase, when used with `DirectSAPNarrowPhase`. From now, the user can decide to design its scene with two different ways resulting to the same behavior:; ```; <DirectSAP/>; ```; or; ```; <BruteForceBroadPhase/>; <DirectSAPNarrowPhase/>; ```; In the second option, it will be possible to change the combination of broad phase/narrow phase.; Note: I kept the component `DirectSAP`, but I don't think its name is meaningful. This is the following of the work started in #2010 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/s",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2030
https://github.com/sofa-framework/sofa/pull/2030:1079,Performance,perform,performances,1079,"llision. The output is pairs of objects to be further investigated in the narrow phase.; However, in SOFA, the `DirectSAP` component is written as a component doing the broad phase and the narrow phase. Almost all the work is actually done in the narrow phase. That is why, we can consider this component is mainly a narrow phase component.; All the broad phase code has been removed. It is still a broad phase, but the code is located in its base class: `BruteForceBroadPhase`.; The narrow phase code has been extracted and put in a new component: `DirectSAPNarrowPhase`. `DirectSAP` inherits from `DirectSAPNarrowPhase`.; In the narrow phase, the result of the broad phase is used to skip the boxes which have been totally ignored in the broad phase. Initially, the `DirectSAP` component did not perform any discrimination in its broad phase. Now it performs a `BruteForceBroadPhase`. It is not yet clear if it is always a good choice regarding the performances. In the case of the caduceus scene, the performances are slightly better. I guess if the broad phase takes a lot of time (many objects), it is better to avoid it. `DirectSAP` would not be the best choice. I would use a more performant broad phase, or no broad phase, when used with `DirectSAPNarrowPhase`. From now, the user can decide to design its scene with two different ways resulting to the same behavior:; ```; <DirectSAP/>; ```; or; ```; <BruteForceBroadPhase/>; <DirectSAPNarrowPhase/>; ```; In the second option, it will be possible to change the combination of broad phase/narrow phase.; Note: I kept the component `DirectSAP`, but I don't think its name is meaningful. This is the following of the work started in #2010 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2030
https://github.com/sofa-framework/sofa/pull/2030:1263,Performance,perform,performant,1263,"work is actually done in the narrow phase. That is why, we can consider this component is mainly a narrow phase component.; All the broad phase code has been removed. It is still a broad phase, but the code is located in its base class: `BruteForceBroadPhase`.; The narrow phase code has been extracted and put in a new component: `DirectSAPNarrowPhase`. `DirectSAP` inherits from `DirectSAPNarrowPhase`.; In the narrow phase, the result of the broad phase is used to skip the boxes which have been totally ignored in the broad phase. Initially, the `DirectSAP` component did not perform any discrimination in its broad phase. Now it performs a `BruteForceBroadPhase`. It is not yet clear if it is always a good choice regarding the performances. In the case of the caduceus scene, the performances are slightly better. I guess if the broad phase takes a lot of time (many objects), it is better to avoid it. `DirectSAP` would not be the best choice. I would use a more performant broad phase, or no broad phase, when used with `DirectSAPNarrowPhase`. From now, the user can decide to design its scene with two different ways resulting to the same behavior:; ```; <DirectSAP/>; ```; or; ```; <BruteForceBroadPhase/>; <DirectSAPNarrowPhase/>; ```; In the second option, it will be possible to change the combination of broad phase/narrow phase.; Note: I kept the component `DirectSAP`, but I don't think its name is meaningful. This is the following of the work started in #2010 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2030
https://github.com/sofa-framework/sofa/pull/2030:1192,Safety,avoid,avoid,1192,"phase.; However, in SOFA, the `DirectSAP` component is written as a component doing the broad phase and the narrow phase. Almost all the work is actually done in the narrow phase. That is why, we can consider this component is mainly a narrow phase component.; All the broad phase code has been removed. It is still a broad phase, but the code is located in its base class: `BruteForceBroadPhase`.; The narrow phase code has been extracted and put in a new component: `DirectSAPNarrowPhase`. `DirectSAP` inherits from `DirectSAPNarrowPhase`.; In the narrow phase, the result of the broad phase is used to skip the boxes which have been totally ignored in the broad phase. Initially, the `DirectSAP` component did not perform any discrimination in its broad phase. Now it performs a `BruteForceBroadPhase`. It is not yet clear if it is always a good choice regarding the performances. In the case of the caduceus scene, the performances are slightly better. I guess if the broad phase takes a lot of time (many objects), it is better to avoid it. `DirectSAP` would not be the best choice. I would use a more performant broad phase, or no broad phase, when used with `DirectSAPNarrowPhase`. From now, the user can decide to design its scene with two different ways resulting to the same behavior:; ```; <DirectSAP/>; ```; or; ```; <BruteForceBroadPhase/>; <DirectSAPNarrowPhase/>; ```; In the second option, it will be possible to change the combination of broad phase/narrow phase.; Note: I kept the component `DirectSAP`, but I don't think its name is meaningful. This is the following of the work started in #2010 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2030
https://github.com/sofa-framework/sofa/pull/2030:1936,Security,Certificate,Certificate,1936,"a broad phase, but the code is located in its base class: `BruteForceBroadPhase`.; The narrow phase code has been extracted and put in a new component: `DirectSAPNarrowPhase`. `DirectSAP` inherits from `DirectSAPNarrowPhase`.; In the narrow phase, the result of the broad phase is used to skip the boxes which have been totally ignored in the broad phase. Initially, the `DirectSAP` component did not perform any discrimination in its broad phase. Now it performs a `BruteForceBroadPhase`. It is not yet clear if it is always a good choice regarding the performances. In the case of the caduceus scene, the performances are slightly better. I guess if the broad phase takes a lot of time (many objects), it is better to avoid it. `DirectSAP` would not be the best choice. I would use a more performant broad phase, or no broad phase, when used with `DirectSAPNarrowPhase`. From now, the user can decide to design its scene with two different ways resulting to the same behavior:; ```; <DirectSAP/>; ```; or; ```; <BruteForceBroadPhase/>; <DirectSAPNarrowPhase/>; ```; In the second option, it will be possible to change the combination of broad phase/narrow phase.; Note: I kept the component `DirectSAP`, but I don't think its name is meaningful. This is the following of the work started in #2010 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2030
https://github.com/sofa-framework/sofa/pull/2030:2047,Security,certificate,certificate-of-origin-dco,2047,"a broad phase, but the code is located in its base class: `BruteForceBroadPhase`.; The narrow phase code has been extracted and put in a new component: `DirectSAPNarrowPhase`. `DirectSAP` inherits from `DirectSAPNarrowPhase`.; In the narrow phase, the result of the broad phase is used to skip the boxes which have been totally ignored in the broad phase. Initially, the `DirectSAP` component did not perform any discrimination in its broad phase. Now it performs a `BruteForceBroadPhase`. It is not yet clear if it is always a good choice regarding the performances. In the case of the caduceus scene, the performances are slightly better. I guess if the broad phase takes a lot of time (many objects), it is better to avoid it. `DirectSAP` would not be the best choice. I would use a more performant broad phase, or no broad phase, when used with `DirectSAPNarrowPhase`. From now, the user can decide to design its scene with two different ways resulting to the same behavior:; ```; <DirectSAP/>; ```; or; ```; <BruteForceBroadPhase/>; <DirectSAPNarrowPhase/>; ```; In the second option, it will be possible to change the combination of broad phase/narrow phase.; Note: I kept the component `DirectSAP`, but I don't think its name is meaningful. This is the following of the work started in #2010 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2030
https://github.com/sofa-framework/sofa/pull/2030:2312,Testability,test,test,2312,"a broad phase, but the code is located in its base class: `BruteForceBroadPhase`.; The narrow phase code has been extracted and put in a new component: `DirectSAPNarrowPhase`. `DirectSAP` inherits from `DirectSAPNarrowPhase`.; In the narrow phase, the result of the broad phase is used to skip the boxes which have been totally ignored in the broad phase. Initially, the `DirectSAP` component did not perform any discrimination in its broad phase. Now it performs a `BruteForceBroadPhase`. It is not yet clear if it is always a good choice regarding the performances. In the case of the caduceus scene, the performances are slightly better. I guess if the broad phase takes a lot of time (many objects), it is better to avoid it. `DirectSAP` would not be the best choice. I would use a more performant broad phase, or no broad phase, when used with `DirectSAPNarrowPhase`. From now, the user can decide to design its scene with two different ways resulting to the same behavior:; ```; <DirectSAP/>; ```; or; ```; <BruteForceBroadPhase/>; <DirectSAPNarrowPhase/>; ```; In the second option, it will be possible to change the combination of broad phase/narrow phase.; Note: I kept the component `DirectSAP`, but I don't think its name is meaningful. This is the following of the work started in #2010 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2030
https://github.com/sofa-framework/sofa/pull/2030:2361,Testability,test,test,2361,"a broad phase, but the code is located in its base class: `BruteForceBroadPhase`.; The narrow phase code has been extracted and put in a new component: `DirectSAPNarrowPhase`. `DirectSAP` inherits from `DirectSAPNarrowPhase`.; In the narrow phase, the result of the broad phase is used to skip the boxes which have been totally ignored in the broad phase. Initially, the `DirectSAP` component did not perform any discrimination in its broad phase. Now it performs a `BruteForceBroadPhase`. It is not yet clear if it is always a good choice regarding the performances. In the case of the caduceus scene, the performances are slightly better. I guess if the broad phase takes a lot of time (many objects), it is better to avoid it. `DirectSAP` would not be the best choice. I would use a more performant broad phase, or no broad phase, when used with `DirectSAPNarrowPhase`. From now, the user can decide to design its scene with two different ways resulting to the same behavior:; ```; <DirectSAP/>; ```; or; ```; <BruteForceBroadPhase/>; <DirectSAPNarrowPhase/>; ```; In the second option, it will be possible to change the combination of broad phase/narrow phase.; Note: I kept the component `DirectSAP`, but I don't think its name is meaningful. This is the following of the work started in #2010 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2030
https://github.com/sofa-framework/sofa/pull/2030:976,Usability,clear,clear,976,"SAP is usually a method to discriminate pairs of objects that are not in collision. The output is pairs of objects to be further investigated in the narrow phase.; However, in SOFA, the `DirectSAP` component is written as a component doing the broad phase and the narrow phase. Almost all the work is actually done in the narrow phase. That is why, we can consider this component is mainly a narrow phase component.; All the broad phase code has been removed. It is still a broad phase, but the code is located in its base class: `BruteForceBroadPhase`.; The narrow phase code has been extracted and put in a new component: `DirectSAPNarrowPhase`. `DirectSAP` inherits from `DirectSAPNarrowPhase`.; In the narrow phase, the result of the broad phase is used to skip the boxes which have been totally ignored in the broad phase. Initially, the `DirectSAP` component did not perform any discrimination in its broad phase. Now it performs a `BruteForceBroadPhase`. It is not yet clear if it is always a good choice regarding the performances. In the case of the caduceus scene, the performances are slightly better. I guess if the broad phase takes a lot of time (many objects), it is better to avoid it. `DirectSAP` would not be the best choice. I would use a more performant broad phase, or no broad phase, when used with `DirectSAPNarrowPhase`. From now, the user can decide to design its scene with two different ways resulting to the same behavior:; ```; <DirectSAP/>; ```; or; ```; <BruteForceBroadPhase/>; <DirectSAPNarrowPhase/>; ```; In the second option, it will be possible to change the combination of broad phase/narrow phase.; Note: I kept the component `DirectSAP`, but I don't think its name is meaningful. This is the following of the work started in #2010 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/s",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2030
https://github.com/sofa-framework/sofa/pull/2031:903,Availability,failure,failures,903,"(For Windows); - Specialized functions of BilateralInteractionConstraint on Rigids were declared in the header file (useless); - the definition of these specialized functions did not have the _API keyword (exporting these symbols in the dll). There is currently no problem because components using BilateralInteractionConstraint are all in the same module... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2031
https://github.com/sofa-framework/sofa/pull/2031:952,Availability,failure,failures,952,"(For Windows); - Specialized functions of BilateralInteractionConstraint on Rigids were declared in the header file (useless); - the definition of these specialized functions did not have the _API keyword (exporting these symbols in the dll). There is currently no problem because components using BilateralInteractionConstraint are all in the same module... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2031
https://github.com/sofa-framework/sofa/pull/2031:522,Security,Certificate,Certificate,522,"(For Windows); - Specialized functions of BilateralInteractionConstraint on Rigids were declared in the header file (useless); - the definition of these specialized functions did not have the _API keyword (exporting these symbols in the dll). There is currently no problem because components using BilateralInteractionConstraint are all in the same module... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2031
https://github.com/sofa-framework/sofa/pull/2031:633,Security,certificate,certificate-of-origin-dco,633,"(For Windows); - Specialized functions of BilateralInteractionConstraint on Rigids were declared in the header file (useless); - the definition of these specialized functions did not have the _API keyword (exporting these symbols in the dll). There is currently no problem because components using BilateralInteractionConstraint are all in the same module... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2031
https://github.com/sofa-framework/sofa/pull/2031:898,Testability,test,test,898,"(For Windows); - Specialized functions of BilateralInteractionConstraint on Rigids were declared in the header file (useless); - the definition of these specialized functions did not have the _API keyword (exporting these symbols in the dll). There is currently no problem because components using BilateralInteractionConstraint are all in the same module... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2031
https://github.com/sofa-framework/sofa/pull/2031:947,Testability,test,test,947,"(For Windows); - Specialized functions of BilateralInteractionConstraint on Rigids were declared in the header file (useless); - the definition of these specialized functions did not have the _API keyword (exporting these symbols in the dll). There is currently no problem because components using BilateralInteractionConstraint are all in the same module... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2031
https://github.com/sofa-framework/sofa/pull/2033:612,Availability,failure,failures,612,"remove call to setValue using execParams which has been depreciate. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2033
https://github.com/sofa-framework/sofa/pull/2033:661,Availability,failure,failures,661,"remove call to setValue using execParams which has been depreciate. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2033
https://github.com/sofa-framework/sofa/pull/2033:231,Security,Certificate,Certificate,231,"remove call to setValue using execParams which has been depreciate. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2033
https://github.com/sofa-framework/sofa/pull/2033:342,Security,certificate,certificate-of-origin-dco,342,"remove call to setValue using execParams which has been depreciate. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2033
https://github.com/sofa-framework/sofa/pull/2033:607,Testability,test,test,607,"remove call to setValue using execParams which has been depreciate. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2033
https://github.com/sofa-framework/sofa/pull/2033:656,Testability,test,test,656,"remove call to setValue using execParams which has been depreciate. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2033
https://github.com/sofa-framework/sofa/pull/2034:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2034
https://github.com/sofa-framework/sofa/pull/2034:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2034
https://github.com/sofa-framework/sofa/pull/2034:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2034
https://github.com/sofa-framework/sofa/pull/2034:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2034
https://github.com/sofa-framework/sofa/pull/2034:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2034
https://github.com/sofa-framework/sofa/pull/2034:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2034
https://github.com/sofa-framework/sofa/pull/2035:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2035
https://github.com/sofa-framework/sofa/pull/2035:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2035
https://github.com/sofa-framework/sofa/pull/2035:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2035
https://github.com/sofa-framework/sofa/pull/2035:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2035
https://github.com/sofa-framework/sofa/pull/2035:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2035
https://github.com/sofa-framework/sofa/pull/2035:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2035
https://github.com/sofa-framework/sofa/pull/2036:1100,Availability,failure,failures,1100,"This is a test to use Callbacks instead of inheriting from ```TopologyHandler```. - Callback have been added inside ```TopologyDat``` a to define specific method when creating/destroying element (call by remove/add). See ```TriangularFEMForceField``` for an example; - Map of Callback has been added inside TopologyHandler to set specific callback depending on the topology event. See ```TriangularBendingSprings``` as an example which handle Edge but also Triangle removing/adding. To discuss if this is better than inheriting from ```TopologyHandler```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2036
https://github.com/sofa-framework/sofa/pull/2036:1149,Availability,failure,failures,1149,"This is a test to use Callbacks instead of inheriting from ```TopologyHandler```. - Callback have been added inside ```TopologyDat``` a to define specific method when creating/destroying element (call by remove/add). See ```TriangularFEMForceField``` for an example; - Map of Callback has been added inside TopologyHandler to set specific callback depending on the topology event. See ```TriangularBendingSprings``` as an example which handle Edge but also Triangle removing/adding. To discuss if this is better than inheriting from ```TopologyHandler```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2036
https://github.com/sofa-framework/sofa/pull/2036:348,Integrability,depend,depending,348,"This is a test to use Callbacks instead of inheriting from ```TopologyHandler```. - Callback have been added inside ```TopologyDat``` a to define specific method when creating/destroying element (call by remove/add). See ```TriangularFEMForceField``` for an example; - Map of Callback has been added inside TopologyHandler to set specific callback depending on the topology event. See ```TriangularBendingSprings``` as an example which handle Edge but also Triangle removing/adding. To discuss if this is better than inheriting from ```TopologyHandler```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2036
https://github.com/sofa-framework/sofa/pull/2036:43,Modifiability,inherit,inheriting,43,"This is a test to use Callbacks instead of inheriting from ```TopologyHandler```. - Callback have been added inside ```TopologyDat``` a to define specific method when creating/destroying element (call by remove/add). See ```TriangularFEMForceField``` for an example; - Map of Callback has been added inside TopologyHandler to set specific callback depending on the topology event. See ```TriangularBendingSprings``` as an example which handle Edge but also Triangle removing/adding. To discuss if this is better than inheriting from ```TopologyHandler```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2036
https://github.com/sofa-framework/sofa/pull/2036:517,Modifiability,inherit,inheriting,517,"This is a test to use Callbacks instead of inheriting from ```TopologyHandler```. - Callback have been added inside ```TopologyDat``` a to define specific method when creating/destroying element (call by remove/add). See ```TriangularFEMForceField``` for an example; - Map of Callback has been added inside TopologyHandler to set specific callback depending on the topology event. See ```TriangularBendingSprings``` as an example which handle Edge but also Triangle removing/adding. To discuss if this is better than inheriting from ```TopologyHandler```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2036
https://github.com/sofa-framework/sofa/pull/2036:719,Security,Certificate,Certificate,719,"This is a test to use Callbacks instead of inheriting from ```TopologyHandler```. - Callback have been added inside ```TopologyDat``` a to define specific method when creating/destroying element (call by remove/add). See ```TriangularFEMForceField``` for an example; - Map of Callback has been added inside TopologyHandler to set specific callback depending on the topology event. See ```TriangularBendingSprings``` as an example which handle Edge but also Triangle removing/adding. To discuss if this is better than inheriting from ```TopologyHandler```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2036
https://github.com/sofa-framework/sofa/pull/2036:830,Security,certificate,certificate-of-origin-dco,830,"This is a test to use Callbacks instead of inheriting from ```TopologyHandler```. - Callback have been added inside ```TopologyDat``` a to define specific method when creating/destroying element (call by remove/add). See ```TriangularFEMForceField``` for an example; - Map of Callback has been added inside TopologyHandler to set specific callback depending on the topology event. See ```TriangularBendingSprings``` as an example which handle Edge but also Triangle removing/adding. To discuss if this is better than inheriting from ```TopologyHandler```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2036
https://github.com/sofa-framework/sofa/pull/2036:10,Testability,test,test,10,"This is a test to use Callbacks instead of inheriting from ```TopologyHandler```. - Callback have been added inside ```TopologyDat``` a to define specific method when creating/destroying element (call by remove/add). See ```TriangularFEMForceField``` for an example; - Map of Callback has been added inside TopologyHandler to set specific callback depending on the topology event. See ```TriangularBendingSprings``` as an example which handle Edge but also Triangle removing/adding. To discuss if this is better than inheriting from ```TopologyHandler```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2036
https://github.com/sofa-framework/sofa/pull/2036:1095,Testability,test,test,1095,"This is a test to use Callbacks instead of inheriting from ```TopologyHandler```. - Callback have been added inside ```TopologyDat``` a to define specific method when creating/destroying element (call by remove/add). See ```TriangularFEMForceField``` for an example; - Map of Callback has been added inside TopologyHandler to set specific callback depending on the topology event. See ```TriangularBendingSprings``` as an example which handle Edge but also Triangle removing/adding. To discuss if this is better than inheriting from ```TopologyHandler```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2036
https://github.com/sofa-framework/sofa/pull/2036:1144,Testability,test,test,1144,"This is a test to use Callbacks instead of inheriting from ```TopologyHandler```. - Callback have been added inside ```TopologyDat``` a to define specific method when creating/destroying element (call by remove/add). See ```TriangularFEMForceField``` for an example; - Map of Callback has been added inside TopologyHandler to set specific callback depending on the topology event. See ```TriangularBendingSprings``` as an example which handle Edge but also Triangle removing/adding. To discuss if this is better than inheriting from ```TopologyHandler```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2036
https://github.com/sofa-framework/sofa/pull/2037:717,Availability,failure,failures,717,"Very useful variable to have a default `COMPONENT` value for every `install` call :+1:; Also, clean 2 missing `<build-dir>/cmake --> <build-dir>/lib/cmake` for consistency. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2037
https://github.com/sofa-framework/sofa/pull/2037:766,Availability,failure,failures,766,"Very useful variable to have a default `COMPONENT` value for every `install` call :+1:; Also, clean 2 missing `<build-dir>/cmake --> <build-dir>/lib/cmake` for consistency. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2037
https://github.com/sofa-framework/sofa/pull/2037:68,Deployability,install,install,68,"Very useful variable to have a default `COMPONENT` value for every `install` call :+1:; Also, clean 2 missing `<build-dir>/cmake --> <build-dir>/lib/cmake` for consistency. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2037
https://github.com/sofa-framework/sofa/pull/2037:12,Modifiability,variab,variable,12,"Very useful variable to have a default `COMPONENT` value for every `install` call :+1:; Also, clean 2 missing `<build-dir>/cmake --> <build-dir>/lib/cmake` for consistency. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2037
https://github.com/sofa-framework/sofa/pull/2037:336,Security,Certificate,Certificate,336,"Very useful variable to have a default `COMPONENT` value for every `install` call :+1:; Also, clean 2 missing `<build-dir>/cmake --> <build-dir>/lib/cmake` for consistency. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2037
https://github.com/sofa-framework/sofa/pull/2037:447,Security,certificate,certificate-of-origin-dco,447,"Very useful variable to have a default `COMPONENT` value for every `install` call :+1:; Also, clean 2 missing `<build-dir>/cmake --> <build-dir>/lib/cmake` for consistency. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2037
https://github.com/sofa-framework/sofa/pull/2037:712,Testability,test,test,712,"Very useful variable to have a default `COMPONENT` value for every `install` call :+1:; Also, clean 2 missing `<build-dir>/cmake --> <build-dir>/lib/cmake` for consistency. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2037
https://github.com/sofa-framework/sofa/pull/2037:761,Testability,test,test,761,"Very useful variable to have a default `COMPONENT` value for every `install` call :+1:; Also, clean 2 missing `<build-dir>/cmake --> <build-dir>/lib/cmake` for consistency. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2037
https://github.com/sofa-framework/sofa/pull/2038:1670,Availability,failure,failures,1670,"Introduction of a new component in the MultiThreading plugin: `ParallelBruteForceBroadPhase`. As the name suggests, it is a parallel implementation of the algorithm in the component `BruteForceBroadPhase`.; An example scene is also added to illustrate the use of this component. This is a comment I wrote in the example scene:. > ParallelBruteForceBroadPhase is interesting when there are many objects potentially in collision.; This scene has 72 cubes and a floor.; Each cube has a TriangleCollisionModel, a LineCollisionModel and a PointCollisionModel.; The floor has only a TriangleCollisionModel.; It results in n = 72 * 3 + 1 = 217 collision models.; It makes n*(n-1)/2 = 23436 pairs of collision models to test.; On a CPU with 6 cores, each core tests 3906 pairs of collision models. I tested this scene with 6 threads:; - Broad phase runs in 4.09 ms with the sequential implementation: `BruteForceBroadPhase`; - Broad phase runs in 1.56 ms with the parallel implementation: `ParallelBruteForceBroadPhase`. ![cubes](https://user-images.githubusercontent.com/10572752/115710959-3fb00980-a373-11eb-92ee-d16df0c190d4.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2038
https://github.com/sofa-framework/sofa/pull/2038:1719,Availability,failure,failures,1719,"Introduction of a new component in the MultiThreading plugin: `ParallelBruteForceBroadPhase`. As the name suggests, it is a parallel implementation of the algorithm in the component `BruteForceBroadPhase`.; An example scene is also added to illustrate the use of this component. This is a comment I wrote in the example scene:. > ParallelBruteForceBroadPhase is interesting when there are many objects potentially in collision.; This scene has 72 cubes and a floor.; Each cube has a TriangleCollisionModel, a LineCollisionModel and a PointCollisionModel.; The floor has only a TriangleCollisionModel.; It results in n = 72 * 3 + 1 = 217 collision models.; It makes n*(n-1)/2 = 23436 pairs of collision models to test.; On a CPU with 6 cores, each core tests 3906 pairs of collision models. I tested this scene with 6 threads:; - Broad phase runs in 4.09 ms with the sequential implementation: `BruteForceBroadPhase`; - Broad phase runs in 1.56 ms with the parallel implementation: `ParallelBruteForceBroadPhase`. ![cubes](https://user-images.githubusercontent.com/10572752/115710959-3fb00980-a373-11eb-92ee-d16df0c190d4.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2038
https://github.com/sofa-framework/sofa/pull/2038:54,Modifiability,plugin,plugin,54,"Introduction of a new component in the MultiThreading plugin: `ParallelBruteForceBroadPhase`. As the name suggests, it is a parallel implementation of the algorithm in the component `BruteForceBroadPhase`.; An example scene is also added to illustrate the use of this component. This is a comment I wrote in the example scene:. > ParallelBruteForceBroadPhase is interesting when there are many objects potentially in collision.; This scene has 72 cubes and a floor.; Each cube has a TriangleCollisionModel, a LineCollisionModel and a PointCollisionModel.; The floor has only a TriangleCollisionModel.; It results in n = 72 * 3 + 1 = 217 collision models.; It makes n*(n-1)/2 = 23436 pairs of collision models to test.; On a CPU with 6 cores, each core tests 3906 pairs of collision models. I tested this scene with 6 threads:; - Broad phase runs in 4.09 ms with the sequential implementation: `BruteForceBroadPhase`; - Broad phase runs in 1.56 ms with the parallel implementation: `ParallelBruteForceBroadPhase`. ![cubes](https://user-images.githubusercontent.com/10572752/115710959-3fb00980-a373-11eb-92ee-d16df0c190d4.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2038
https://github.com/sofa-framework/sofa/pull/2038:1289,Security,Certificate,Certificate,1289,"Introduction of a new component in the MultiThreading plugin: `ParallelBruteForceBroadPhase`. As the name suggests, it is a parallel implementation of the algorithm in the component `BruteForceBroadPhase`.; An example scene is also added to illustrate the use of this component. This is a comment I wrote in the example scene:. > ParallelBruteForceBroadPhase is interesting when there are many objects potentially in collision.; This scene has 72 cubes and a floor.; Each cube has a TriangleCollisionModel, a LineCollisionModel and a PointCollisionModel.; The floor has only a TriangleCollisionModel.; It results in n = 72 * 3 + 1 = 217 collision models.; It makes n*(n-1)/2 = 23436 pairs of collision models to test.; On a CPU with 6 cores, each core tests 3906 pairs of collision models. I tested this scene with 6 threads:; - Broad phase runs in 4.09 ms with the sequential implementation: `BruteForceBroadPhase`; - Broad phase runs in 1.56 ms with the parallel implementation: `ParallelBruteForceBroadPhase`. ![cubes](https://user-images.githubusercontent.com/10572752/115710959-3fb00980-a373-11eb-92ee-d16df0c190d4.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2038
https://github.com/sofa-framework/sofa/pull/2038:1400,Security,certificate,certificate-of-origin-dco,1400,"Introduction of a new component in the MultiThreading plugin: `ParallelBruteForceBroadPhase`. As the name suggests, it is a parallel implementation of the algorithm in the component `BruteForceBroadPhase`.; An example scene is also added to illustrate the use of this component. This is a comment I wrote in the example scene:. > ParallelBruteForceBroadPhase is interesting when there are many objects potentially in collision.; This scene has 72 cubes and a floor.; Each cube has a TriangleCollisionModel, a LineCollisionModel and a PointCollisionModel.; The floor has only a TriangleCollisionModel.; It results in n = 72 * 3 + 1 = 217 collision models.; It makes n*(n-1)/2 = 23436 pairs of collision models to test.; On a CPU with 6 cores, each core tests 3906 pairs of collision models. I tested this scene with 6 threads:; - Broad phase runs in 4.09 ms with the sequential implementation: `BruteForceBroadPhase`; - Broad phase runs in 1.56 ms with the parallel implementation: `ParallelBruteForceBroadPhase`. ![cubes](https://user-images.githubusercontent.com/10572752/115710959-3fb00980-a373-11eb-92ee-d16df0c190d4.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2038
https://github.com/sofa-framework/sofa/pull/2038:712,Testability,test,test,712,"Introduction of a new component in the MultiThreading plugin: `ParallelBruteForceBroadPhase`. As the name suggests, it is a parallel implementation of the algorithm in the component `BruteForceBroadPhase`.; An example scene is also added to illustrate the use of this component. This is a comment I wrote in the example scene:. > ParallelBruteForceBroadPhase is interesting when there are many objects potentially in collision.; This scene has 72 cubes and a floor.; Each cube has a TriangleCollisionModel, a LineCollisionModel and a PointCollisionModel.; The floor has only a TriangleCollisionModel.; It results in n = 72 * 3 + 1 = 217 collision models.; It makes n*(n-1)/2 = 23436 pairs of collision models to test.; On a CPU with 6 cores, each core tests 3906 pairs of collision models. I tested this scene with 6 threads:; - Broad phase runs in 4.09 ms with the sequential implementation: `BruteForceBroadPhase`; - Broad phase runs in 1.56 ms with the parallel implementation: `ParallelBruteForceBroadPhase`. ![cubes](https://user-images.githubusercontent.com/10572752/115710959-3fb00980-a373-11eb-92ee-d16df0c190d4.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2038
https://github.com/sofa-framework/sofa/pull/2038:752,Testability,test,tests,752,"Introduction of a new component in the MultiThreading plugin: `ParallelBruteForceBroadPhase`. As the name suggests, it is a parallel implementation of the algorithm in the component `BruteForceBroadPhase`.; An example scene is also added to illustrate the use of this component. This is a comment I wrote in the example scene:. > ParallelBruteForceBroadPhase is interesting when there are many objects potentially in collision.; This scene has 72 cubes and a floor.; Each cube has a TriangleCollisionModel, a LineCollisionModel and a PointCollisionModel.; The floor has only a TriangleCollisionModel.; It results in n = 72 * 3 + 1 = 217 collision models.; It makes n*(n-1)/2 = 23436 pairs of collision models to test.; On a CPU with 6 cores, each core tests 3906 pairs of collision models. I tested this scene with 6 threads:; - Broad phase runs in 4.09 ms with the sequential implementation: `BruteForceBroadPhase`; - Broad phase runs in 1.56 ms with the parallel implementation: `ParallelBruteForceBroadPhase`. ![cubes](https://user-images.githubusercontent.com/10572752/115710959-3fb00980-a373-11eb-92ee-d16df0c190d4.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2038
https://github.com/sofa-framework/sofa/pull/2038:792,Testability,test,tested,792,"Introduction of a new component in the MultiThreading plugin: `ParallelBruteForceBroadPhase`. As the name suggests, it is a parallel implementation of the algorithm in the component `BruteForceBroadPhase`.; An example scene is also added to illustrate the use of this component. This is a comment I wrote in the example scene:. > ParallelBruteForceBroadPhase is interesting when there are many objects potentially in collision.; This scene has 72 cubes and a floor.; Each cube has a TriangleCollisionModel, a LineCollisionModel and a PointCollisionModel.; The floor has only a TriangleCollisionModel.; It results in n = 72 * 3 + 1 = 217 collision models.; It makes n*(n-1)/2 = 23436 pairs of collision models to test.; On a CPU with 6 cores, each core tests 3906 pairs of collision models. I tested this scene with 6 threads:; - Broad phase runs in 4.09 ms with the sequential implementation: `BruteForceBroadPhase`; - Broad phase runs in 1.56 ms with the parallel implementation: `ParallelBruteForceBroadPhase`. ![cubes](https://user-images.githubusercontent.com/10572752/115710959-3fb00980-a373-11eb-92ee-d16df0c190d4.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2038
https://github.com/sofa-framework/sofa/pull/2038:1665,Testability,test,test,1665,"Introduction of a new component in the MultiThreading plugin: `ParallelBruteForceBroadPhase`. As the name suggests, it is a parallel implementation of the algorithm in the component `BruteForceBroadPhase`.; An example scene is also added to illustrate the use of this component. This is a comment I wrote in the example scene:. > ParallelBruteForceBroadPhase is interesting when there are many objects potentially in collision.; This scene has 72 cubes and a floor.; Each cube has a TriangleCollisionModel, a LineCollisionModel and a PointCollisionModel.; The floor has only a TriangleCollisionModel.; It results in n = 72 * 3 + 1 = 217 collision models.; It makes n*(n-1)/2 = 23436 pairs of collision models to test.; On a CPU with 6 cores, each core tests 3906 pairs of collision models. I tested this scene with 6 threads:; - Broad phase runs in 4.09 ms with the sequential implementation: `BruteForceBroadPhase`; - Broad phase runs in 1.56 ms with the parallel implementation: `ParallelBruteForceBroadPhase`. ![cubes](https://user-images.githubusercontent.com/10572752/115710959-3fb00980-a373-11eb-92ee-d16df0c190d4.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2038
https://github.com/sofa-framework/sofa/pull/2038:1714,Testability,test,test,1714,"Introduction of a new component in the MultiThreading plugin: `ParallelBruteForceBroadPhase`. As the name suggests, it is a parallel implementation of the algorithm in the component `BruteForceBroadPhase`.; An example scene is also added to illustrate the use of this component. This is a comment I wrote in the example scene:. > ParallelBruteForceBroadPhase is interesting when there are many objects potentially in collision.; This scene has 72 cubes and a floor.; Each cube has a TriangleCollisionModel, a LineCollisionModel and a PointCollisionModel.; The floor has only a TriangleCollisionModel.; It results in n = 72 * 3 + 1 = 217 collision models.; It makes n*(n-1)/2 = 23436 pairs of collision models to test.; On a CPU with 6 cores, each core tests 3906 pairs of collision models. I tested this scene with 6 threads:; - Broad phase runs in 4.09 ms with the sequential implementation: `BruteForceBroadPhase`; - Broad phase runs in 1.56 ms with the parallel implementation: `ParallelBruteForceBroadPhase`. ![cubes](https://user-images.githubusercontent.com/10572752/115710959-3fb00980-a373-11eb-92ee-d16df0c190d4.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2038
https://github.com/sofa-framework/sofa/pull/2039:667,Availability,failure,failures,667,"STLExporter had a useless dependency on VisualModelImpl.; Removing it removes the need on SofaBaseVisual for SofaExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2039
https://github.com/sofa-framework/sofa/pull/2039:716,Availability,failure,failures,716,"STLExporter had a useless dependency on VisualModelImpl.; Removing it removes the need on SofaBaseVisual for SofaExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2039
https://github.com/sofa-framework/sofa/pull/2039:26,Integrability,depend,dependency,26,"STLExporter had a useless dependency on VisualModelImpl.; Removing it removes the need on SofaBaseVisual for SofaExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2039
https://github.com/sofa-framework/sofa/pull/2039:286,Security,Certificate,Certificate,286,"STLExporter had a useless dependency on VisualModelImpl.; Removing it removes the need on SofaBaseVisual for SofaExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2039
https://github.com/sofa-framework/sofa/pull/2039:397,Security,certificate,certificate-of-origin-dco,397,"STLExporter had a useless dependency on VisualModelImpl.; Removing it removes the need on SofaBaseVisual for SofaExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2039
https://github.com/sofa-framework/sofa/pull/2039:662,Testability,test,test,662,"STLExporter had a useless dependency on VisualModelImpl.; Removing it removes the need on SofaBaseVisual for SofaExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2039
https://github.com/sofa-framework/sofa/pull/2039:711,Testability,test,test,711,"STLExporter had a useless dependency on VisualModelImpl.; Removing it removes the need on SofaBaseVisual for SofaExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2039
https://github.com/sofa-framework/sofa/pull/2040:1776,Availability,failure,failures,1776,"In `FreeMotionAnimationLoop`, the collision detection and the free motion can be computed concurrently. A Data<bool> allows to specify if both steps are executed in parallel or in sequence. By default, the algorithm is sequential. This parallel approach is the most useful when free motion and collision detection takes about the same time. An example scene is provided to validate the speed up. The details about the speed up are here: https://github.com/sofa-framework/sofa/commit/0f94b063ae3f3efbd2e0dc2f50d4bff706cd4734:. > On my computer, with the single threaded scene, FreeMotion+CollisionDetection runs in 24.92 ms in average. FreeMotion runs in 7.7 ms and CollisionDetection in 16.36 ms. If these two steps runs in parallel, we expect a gain of 7.7 ms (the minimum between 7.7 and 16.36).; On my computer, with the multi-threaded scene, FreeMotion+CollisionDetection runs in 16.93 ms in average. It is a gain of 7.99 ms (=24.92-16.93), which is about what we expected.; It validates the implementation of the parallelization of the collision detection and the free motion steps in the FreeMotionAnimationLoop. ![cubes](https://user-images.githubusercontent.com/10572752/115711281-9f0e1980-a373-11eb-9a69-aaece62f6cb9.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2040
https://github.com/sofa-framework/sofa/pull/2040:1825,Availability,failure,failures,1825,"In `FreeMotionAnimationLoop`, the collision detection and the free motion can be computed concurrently. A Data<bool> allows to specify if both steps are executed in parallel or in sequence. By default, the algorithm is sequential. This parallel approach is the most useful when free motion and collision detection takes about the same time. An example scene is provided to validate the speed up. The details about the speed up are here: https://github.com/sofa-framework/sofa/commit/0f94b063ae3f3efbd2e0dc2f50d4bff706cd4734:. > On my computer, with the single threaded scene, FreeMotion+CollisionDetection runs in 24.92 ms in average. FreeMotion runs in 7.7 ms and CollisionDetection in 16.36 ms. If these two steps runs in parallel, we expect a gain of 7.7 ms (the minimum between 7.7 and 16.36).; On my computer, with the multi-threaded scene, FreeMotion+CollisionDetection runs in 16.93 ms in average. It is a gain of 7.99 ms (=24.92-16.93), which is about what we expected.; It validates the implementation of the parallelization of the collision detection and the free motion steps in the FreeMotionAnimationLoop. ![cubes](https://user-images.githubusercontent.com/10572752/115711281-9f0e1980-a373-11eb-9a69-aaece62f6cb9.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2040
https://github.com/sofa-framework/sofa/pull/2040:90,Performance,concurren,concurrently,90,"In `FreeMotionAnimationLoop`, the collision detection and the free motion can be computed concurrently. A Data<bool> allows to specify if both steps are executed in parallel or in sequence. By default, the algorithm is sequential. This parallel approach is the most useful when free motion and collision detection takes about the same time. An example scene is provided to validate the speed up. The details about the speed up are here: https://github.com/sofa-framework/sofa/commit/0f94b063ae3f3efbd2e0dc2f50d4bff706cd4734:. > On my computer, with the single threaded scene, FreeMotion+CollisionDetection runs in 24.92 ms in average. FreeMotion runs in 7.7 ms and CollisionDetection in 16.36 ms. If these two steps runs in parallel, we expect a gain of 7.7 ms (the minimum between 7.7 and 16.36).; On my computer, with the multi-threaded scene, FreeMotion+CollisionDetection runs in 16.93 ms in average. It is a gain of 7.99 ms (=24.92-16.93), which is about what we expected.; It validates the implementation of the parallelization of the collision detection and the free motion steps in the FreeMotionAnimationLoop. ![cubes](https://user-images.githubusercontent.com/10572752/115711281-9f0e1980-a373-11eb-9a69-aaece62f6cb9.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2040
https://github.com/sofa-framework/sofa/pull/2040:824,Performance,multi-thread,multi-threaded,824,"In `FreeMotionAnimationLoop`, the collision detection and the free motion can be computed concurrently. A Data<bool> allows to specify if both steps are executed in parallel or in sequence. By default, the algorithm is sequential. This parallel approach is the most useful when free motion and collision detection takes about the same time. An example scene is provided to validate the speed up. The details about the speed up are here: https://github.com/sofa-framework/sofa/commit/0f94b063ae3f3efbd2e0dc2f50d4bff706cd4734:. > On my computer, with the single threaded scene, FreeMotion+CollisionDetection runs in 24.92 ms in average. FreeMotion runs in 7.7 ms and CollisionDetection in 16.36 ms. If these two steps runs in parallel, we expect a gain of 7.7 ms (the minimum between 7.7 and 16.36).; On my computer, with the multi-threaded scene, FreeMotion+CollisionDetection runs in 16.93 ms in average. It is a gain of 7.99 ms (=24.92-16.93), which is about what we expected.; It validates the implementation of the parallelization of the collision detection and the free motion steps in the FreeMotionAnimationLoop. ![cubes](https://user-images.githubusercontent.com/10572752/115711281-9f0e1980-a373-11eb-9a69-aaece62f6cb9.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2040
https://github.com/sofa-framework/sofa/pull/2040:44,Safety,detect,detection,44,"In `FreeMotionAnimationLoop`, the collision detection and the free motion can be computed concurrently. A Data<bool> allows to specify if both steps are executed in parallel or in sequence. By default, the algorithm is sequential. This parallel approach is the most useful when free motion and collision detection takes about the same time. An example scene is provided to validate the speed up. The details about the speed up are here: https://github.com/sofa-framework/sofa/commit/0f94b063ae3f3efbd2e0dc2f50d4bff706cd4734:. > On my computer, with the single threaded scene, FreeMotion+CollisionDetection runs in 24.92 ms in average. FreeMotion runs in 7.7 ms and CollisionDetection in 16.36 ms. If these two steps runs in parallel, we expect a gain of 7.7 ms (the minimum between 7.7 and 16.36).; On my computer, with the multi-threaded scene, FreeMotion+CollisionDetection runs in 16.93 ms in average. It is a gain of 7.99 ms (=24.92-16.93), which is about what we expected.; It validates the implementation of the parallelization of the collision detection and the free motion steps in the FreeMotionAnimationLoop. ![cubes](https://user-images.githubusercontent.com/10572752/115711281-9f0e1980-a373-11eb-9a69-aaece62f6cb9.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2040
https://github.com/sofa-framework/sofa/pull/2040:304,Safety,detect,detection,304,"In `FreeMotionAnimationLoop`, the collision detection and the free motion can be computed concurrently. A Data<bool> allows to specify if both steps are executed in parallel or in sequence. By default, the algorithm is sequential. This parallel approach is the most useful when free motion and collision detection takes about the same time. An example scene is provided to validate the speed up. The details about the speed up are here: https://github.com/sofa-framework/sofa/commit/0f94b063ae3f3efbd2e0dc2f50d4bff706cd4734:. > On my computer, with the single threaded scene, FreeMotion+CollisionDetection runs in 24.92 ms in average. FreeMotion runs in 7.7 ms and CollisionDetection in 16.36 ms. If these two steps runs in parallel, we expect a gain of 7.7 ms (the minimum between 7.7 and 16.36).; On my computer, with the multi-threaded scene, FreeMotion+CollisionDetection runs in 16.93 ms in average. It is a gain of 7.99 ms (=24.92-16.93), which is about what we expected.; It validates the implementation of the parallelization of the collision detection and the free motion steps in the FreeMotionAnimationLoop. ![cubes](https://user-images.githubusercontent.com/10572752/115711281-9f0e1980-a373-11eb-9a69-aaece62f6cb9.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2040
https://github.com/sofa-framework/sofa/pull/2040:1051,Safety,detect,detection,1051,"In `FreeMotionAnimationLoop`, the collision detection and the free motion can be computed concurrently. A Data<bool> allows to specify if both steps are executed in parallel or in sequence. By default, the algorithm is sequential. This parallel approach is the most useful when free motion and collision detection takes about the same time. An example scene is provided to validate the speed up. The details about the speed up are here: https://github.com/sofa-framework/sofa/commit/0f94b063ae3f3efbd2e0dc2f50d4bff706cd4734:. > On my computer, with the single threaded scene, FreeMotion+CollisionDetection runs in 24.92 ms in average. FreeMotion runs in 7.7 ms and CollisionDetection in 16.36 ms. If these two steps runs in parallel, we expect a gain of 7.7 ms (the minimum between 7.7 and 16.36).; On my computer, with the multi-threaded scene, FreeMotion+CollisionDetection runs in 16.93 ms in average. It is a gain of 7.99 ms (=24.92-16.93), which is about what we expected.; It validates the implementation of the parallelization of the collision detection and the free motion steps in the FreeMotionAnimationLoop. ![cubes](https://user-images.githubusercontent.com/10572752/115711281-9f0e1980-a373-11eb-9a69-aaece62f6cb9.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2040
https://github.com/sofa-framework/sofa/pull/2040:373,Security,validat,validate,373,"In `FreeMotionAnimationLoop`, the collision detection and the free motion can be computed concurrently. A Data<bool> allows to specify if both steps are executed in parallel or in sequence. By default, the algorithm is sequential. This parallel approach is the most useful when free motion and collision detection takes about the same time. An example scene is provided to validate the speed up. The details about the speed up are here: https://github.com/sofa-framework/sofa/commit/0f94b063ae3f3efbd2e0dc2f50d4bff706cd4734:. > On my computer, with the single threaded scene, FreeMotion+CollisionDetection runs in 24.92 ms in average. FreeMotion runs in 7.7 ms and CollisionDetection in 16.36 ms. If these two steps runs in parallel, we expect a gain of 7.7 ms (the minimum between 7.7 and 16.36).; On my computer, with the multi-threaded scene, FreeMotion+CollisionDetection runs in 16.93 ms in average. It is a gain of 7.99 ms (=24.92-16.93), which is about what we expected.; It validates the implementation of the parallelization of the collision detection and the free motion steps in the FreeMotionAnimationLoop. ![cubes](https://user-images.githubusercontent.com/10572752/115711281-9f0e1980-a373-11eb-9a69-aaece62f6cb9.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2040
https://github.com/sofa-framework/sofa/pull/2040:982,Security,validat,validates,982,"In `FreeMotionAnimationLoop`, the collision detection and the free motion can be computed concurrently. A Data<bool> allows to specify if both steps are executed in parallel or in sequence. By default, the algorithm is sequential. This parallel approach is the most useful when free motion and collision detection takes about the same time. An example scene is provided to validate the speed up. The details about the speed up are here: https://github.com/sofa-framework/sofa/commit/0f94b063ae3f3efbd2e0dc2f50d4bff706cd4734:. > On my computer, with the single threaded scene, FreeMotion+CollisionDetection runs in 24.92 ms in average. FreeMotion runs in 7.7 ms and CollisionDetection in 16.36 ms. If these two steps runs in parallel, we expect a gain of 7.7 ms (the minimum between 7.7 and 16.36).; On my computer, with the multi-threaded scene, FreeMotion+CollisionDetection runs in 16.93 ms in average. It is a gain of 7.99 ms (=24.92-16.93), which is about what we expected.; It validates the implementation of the parallelization of the collision detection and the free motion steps in the FreeMotionAnimationLoop. ![cubes](https://user-images.githubusercontent.com/10572752/115711281-9f0e1980-a373-11eb-9a69-aaece62f6cb9.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2040
https://github.com/sofa-framework/sofa/pull/2040:1395,Security,Certificate,Certificate,1395,"In `FreeMotionAnimationLoop`, the collision detection and the free motion can be computed concurrently. A Data<bool> allows to specify if both steps are executed in parallel or in sequence. By default, the algorithm is sequential. This parallel approach is the most useful when free motion and collision detection takes about the same time. An example scene is provided to validate the speed up. The details about the speed up are here: https://github.com/sofa-framework/sofa/commit/0f94b063ae3f3efbd2e0dc2f50d4bff706cd4734:. > On my computer, with the single threaded scene, FreeMotion+CollisionDetection runs in 24.92 ms in average. FreeMotion runs in 7.7 ms and CollisionDetection in 16.36 ms. If these two steps runs in parallel, we expect a gain of 7.7 ms (the minimum between 7.7 and 16.36).; On my computer, with the multi-threaded scene, FreeMotion+CollisionDetection runs in 16.93 ms in average. It is a gain of 7.99 ms (=24.92-16.93), which is about what we expected.; It validates the implementation of the parallelization of the collision detection and the free motion steps in the FreeMotionAnimationLoop. ![cubes](https://user-images.githubusercontent.com/10572752/115711281-9f0e1980-a373-11eb-9a69-aaece62f6cb9.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2040
https://github.com/sofa-framework/sofa/pull/2040:1506,Security,certificate,certificate-of-origin-dco,1506,"In `FreeMotionAnimationLoop`, the collision detection and the free motion can be computed concurrently. A Data<bool> allows to specify if both steps are executed in parallel or in sequence. By default, the algorithm is sequential. This parallel approach is the most useful when free motion and collision detection takes about the same time. An example scene is provided to validate the speed up. The details about the speed up are here: https://github.com/sofa-framework/sofa/commit/0f94b063ae3f3efbd2e0dc2f50d4bff706cd4734:. > On my computer, with the single threaded scene, FreeMotion+CollisionDetection runs in 24.92 ms in average. FreeMotion runs in 7.7 ms and CollisionDetection in 16.36 ms. If these two steps runs in parallel, we expect a gain of 7.7 ms (the minimum between 7.7 and 16.36).; On my computer, with the multi-threaded scene, FreeMotion+CollisionDetection runs in 16.93 ms in average. It is a gain of 7.99 ms (=24.92-16.93), which is about what we expected.; It validates the implementation of the parallelization of the collision detection and the free motion steps in the FreeMotionAnimationLoop. ![cubes](https://user-images.githubusercontent.com/10572752/115711281-9f0e1980-a373-11eb-9a69-aaece62f6cb9.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2040
https://github.com/sofa-framework/sofa/pull/2040:1771,Testability,test,test,1771,"In `FreeMotionAnimationLoop`, the collision detection and the free motion can be computed concurrently. A Data<bool> allows to specify if both steps are executed in parallel or in sequence. By default, the algorithm is sequential. This parallel approach is the most useful when free motion and collision detection takes about the same time. An example scene is provided to validate the speed up. The details about the speed up are here: https://github.com/sofa-framework/sofa/commit/0f94b063ae3f3efbd2e0dc2f50d4bff706cd4734:. > On my computer, with the single threaded scene, FreeMotion+CollisionDetection runs in 24.92 ms in average. FreeMotion runs in 7.7 ms and CollisionDetection in 16.36 ms. If these two steps runs in parallel, we expect a gain of 7.7 ms (the minimum between 7.7 and 16.36).; On my computer, with the multi-threaded scene, FreeMotion+CollisionDetection runs in 16.93 ms in average. It is a gain of 7.99 ms (=24.92-16.93), which is about what we expected.; It validates the implementation of the parallelization of the collision detection and the free motion steps in the FreeMotionAnimationLoop. ![cubes](https://user-images.githubusercontent.com/10572752/115711281-9f0e1980-a373-11eb-9a69-aaece62f6cb9.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2040
https://github.com/sofa-framework/sofa/pull/2040:1820,Testability,test,test,1820,"In `FreeMotionAnimationLoop`, the collision detection and the free motion can be computed concurrently. A Data<bool> allows to specify if both steps are executed in parallel or in sequence. By default, the algorithm is sequential. This parallel approach is the most useful when free motion and collision detection takes about the same time. An example scene is provided to validate the speed up. The details about the speed up are here: https://github.com/sofa-framework/sofa/commit/0f94b063ae3f3efbd2e0dc2f50d4bff706cd4734:. > On my computer, with the single threaded scene, FreeMotion+CollisionDetection runs in 24.92 ms in average. FreeMotion runs in 7.7 ms and CollisionDetection in 16.36 ms. If these two steps runs in parallel, we expect a gain of 7.7 ms (the minimum between 7.7 and 16.36).; On my computer, with the multi-threaded scene, FreeMotion+CollisionDetection runs in 16.93 ms in average. It is a gain of 7.99 ms (=24.92-16.93), which is about what we expected.; It validates the implementation of the parallelization of the collision detection and the free motion steps in the FreeMotionAnimationLoop. ![cubes](https://user-images.githubusercontent.com/10572752/115711281-9f0e1980-a373-11eb-9a69-aaece62f6cb9.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2040
https://github.com/sofa-framework/sofa/pull/2041:799,Availability,failure,failures,799,"`BroadPhaseDetection` and `NarrowPhaseDetection` classes did not have any source files. The class member functions were defined in the header file.; I created the associated cpp files and moved the definitions into them.; I also added the symbol exports. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041
https://github.com/sofa-framework/sofa/pull/2041:848,Availability,failure,failures,848,"`BroadPhaseDetection` and `NarrowPhaseDetection` classes did not have any source files. The class member functions were defined in the header file.; I created the associated cpp files and moved the definitions into them.; I also added the symbol exports. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041
https://github.com/sofa-framework/sofa/pull/2041:418,Security,Certificate,Certificate,418,"`BroadPhaseDetection` and `NarrowPhaseDetection` classes did not have any source files. The class member functions were defined in the header file.; I created the associated cpp files and moved the definitions into them.; I also added the symbol exports. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041
https://github.com/sofa-framework/sofa/pull/2041:529,Security,certificate,certificate-of-origin-dco,529,"`BroadPhaseDetection` and `NarrowPhaseDetection` classes did not have any source files. The class member functions were defined in the header file.; I created the associated cpp files and moved the definitions into them.; I also added the symbol exports. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041
https://github.com/sofa-framework/sofa/pull/2041:794,Testability,test,test,794,"`BroadPhaseDetection` and `NarrowPhaseDetection` classes did not have any source files. The class member functions were defined in the header file.; I created the associated cpp files and moved the definitions into them.; I also added the symbol exports. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041
https://github.com/sofa-framework/sofa/pull/2041:843,Testability,test,test,843,"`BroadPhaseDetection` and `NarrowPhaseDetection` classes did not have any source files. The class member functions were defined in the header file.; I created the associated cpp files and moved the definitions into them.; I also added the symbol exports. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041
https://github.com/sofa-framework/sofa/pull/2042:1454,Availability,failure,failures,1454,"Following https://github.com/sofa-framework/sofa/pull/2016. I thought SofaCUDA scenes were not tested at all on CI but actually they are (some of them at least).; A `.scene-test` file is used to ignore all the scenes that require SofaCUDA. Here are the scenes that are successfully tested (check them out [here](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/2474/testReport/SceneTests/applications_plugins_SofaCUDA_examples/)):; - StandardTetrahedralFEMForceFieldCPU.scn; - TetrahedralTensorMassForceFieldCPU.scn; - beam10x10x46-fem-implicit-CPU.scn; - beam10x10x46-hexafem-implicit-CPU.scn; - beam10x10x46-hexafem-rk4-CPU.scn; - beam16x16x76-fem-implicit-CPU.scn; - beam16x16x76-hexafem-rk4-CPU.scn; - quadSpringSphere.scn. Does it makes sense to have non-CUDA scenes in SofaCUDA? ; Maybe should we ignore all the plugin scenes?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2042
https://github.com/sofa-framework/sofa/pull/2042:1503,Availability,failure,failures,1503,"Following https://github.com/sofa-framework/sofa/pull/2016. I thought SofaCUDA scenes were not tested at all on CI but actually they are (some of them at least).; A `.scene-test` file is used to ignore all the scenes that require SofaCUDA. Here are the scenes that are successfully tested (check them out [here](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/2474/testReport/SceneTests/applications_plugins_SofaCUDA_examples/)):; - StandardTetrahedralFEMForceFieldCPU.scn; - TetrahedralTensorMassForceFieldCPU.scn; - beam10x10x46-fem-implicit-CPU.scn; - beam10x10x46-hexafem-implicit-CPU.scn; - beam10x10x46-hexafem-rk4-CPU.scn; - beam16x16x76-fem-implicit-CPU.scn; - beam16x16x76-hexafem-rk4-CPU.scn; - quadSpringSphere.scn. Does it makes sense to have non-CUDA scenes in SofaCUDA? ; Maybe should we ignore all the plugin scenes?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2042
https://github.com/sofa-framework/sofa/pull/2042:429,Deployability,release,release,429,"Following https://github.com/sofa-framework/sofa/pull/2016. I thought SofaCUDA scenes were not tested at all on CI but actually they are (some of them at least).; A `.scene-test` file is used to ignore all the scenes that require SofaCUDA. Here are the scenes that are successfully tested (check them out [here](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/2474/testReport/SceneTests/applications_plugins_SofaCUDA_examples/)):; - StandardTetrahedralFEMForceFieldCPU.scn; - TetrahedralTensorMassForceFieldCPU.scn; - beam10x10x46-fem-implicit-CPU.scn; - beam10x10x46-hexafem-implicit-CPU.scn; - beam10x10x46-hexafem-rk4-CPU.scn; - beam16x16x76-fem-implicit-CPU.scn; - beam16x16x76-hexafem-rk4-CPU.scn; - quadSpringSphere.scn. Does it makes sense to have non-CUDA scenes in SofaCUDA? ; Maybe should we ignore all the plugin scenes?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2042
https://github.com/sofa-framework/sofa/pull/2042:894,Modifiability,plugin,plugin,894,"Following https://github.com/sofa-framework/sofa/pull/2016. I thought SofaCUDA scenes were not tested at all on CI but actually they are (some of them at least).; A `.scene-test` file is used to ignore all the scenes that require SofaCUDA. Here are the scenes that are successfully tested (check them out [here](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/2474/testReport/SceneTests/applications_plugins_SofaCUDA_examples/)):; - StandardTetrahedralFEMForceFieldCPU.scn; - TetrahedralTensorMassForceFieldCPU.scn; - beam10x10x46-fem-implicit-CPU.scn; - beam10x10x46-hexafem-implicit-CPU.scn; - beam10x10x46-hexafem-rk4-CPU.scn; - beam16x16x76-fem-implicit-CPU.scn; - beam16x16x76-hexafem-rk4-CPU.scn; - quadSpringSphere.scn. Does it makes sense to have non-CUDA scenes in SofaCUDA? ; Maybe should we ignore all the plugin scenes?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2042
https://github.com/sofa-framework/sofa/pull/2042:1073,Security,Certificate,Certificate,1073,"Following https://github.com/sofa-framework/sofa/pull/2016. I thought SofaCUDA scenes were not tested at all on CI but actually they are (some of them at least).; A `.scene-test` file is used to ignore all the scenes that require SofaCUDA. Here are the scenes that are successfully tested (check them out [here](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/2474/testReport/SceneTests/applications_plugins_SofaCUDA_examples/)):; - StandardTetrahedralFEMForceFieldCPU.scn; - TetrahedralTensorMassForceFieldCPU.scn; - beam10x10x46-fem-implicit-CPU.scn; - beam10x10x46-hexafem-implicit-CPU.scn; - beam10x10x46-hexafem-rk4-CPU.scn; - beam16x16x76-fem-implicit-CPU.scn; - beam16x16x76-hexafem-rk4-CPU.scn; - quadSpringSphere.scn. Does it makes sense to have non-CUDA scenes in SofaCUDA? ; Maybe should we ignore all the plugin scenes?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2042
https://github.com/sofa-framework/sofa/pull/2042:1184,Security,certificate,certificate-of-origin-dco,1184,"Following https://github.com/sofa-framework/sofa/pull/2016. I thought SofaCUDA scenes were not tested at all on CI but actually they are (some of them at least).; A `.scene-test` file is used to ignore all the scenes that require SofaCUDA. Here are the scenes that are successfully tested (check them out [here](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/2474/testReport/SceneTests/applications_plugins_SofaCUDA_examples/)):; - StandardTetrahedralFEMForceFieldCPU.scn; - TetrahedralTensorMassForceFieldCPU.scn; - beam10x10x46-fem-implicit-CPU.scn; - beam10x10x46-hexafem-implicit-CPU.scn; - beam10x10x46-hexafem-rk4-CPU.scn; - beam16x16x76-fem-implicit-CPU.scn; - beam16x16x76-hexafem-rk4-CPU.scn; - quadSpringSphere.scn. Does it makes sense to have non-CUDA scenes in SofaCUDA? ; Maybe should we ignore all the plugin scenes?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2042
https://github.com/sofa-framework/sofa/pull/2042:95,Testability,test,tested,95,"Following https://github.com/sofa-framework/sofa/pull/2016. I thought SofaCUDA scenes were not tested at all on CI but actually they are (some of them at least).; A `.scene-test` file is used to ignore all the scenes that require SofaCUDA. Here are the scenes that are successfully tested (check them out [here](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/2474/testReport/SceneTests/applications_plugins_SofaCUDA_examples/)):; - StandardTetrahedralFEMForceFieldCPU.scn; - TetrahedralTensorMassForceFieldCPU.scn; - beam10x10x46-fem-implicit-CPU.scn; - beam10x10x46-hexafem-implicit-CPU.scn; - beam10x10x46-hexafem-rk4-CPU.scn; - beam16x16x76-fem-implicit-CPU.scn; - beam16x16x76-hexafem-rk4-CPU.scn; - quadSpringSphere.scn. Does it makes sense to have non-CUDA scenes in SofaCUDA? ; Maybe should we ignore all the plugin scenes?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2042
https://github.com/sofa-framework/sofa/pull/2042:173,Testability,test,test,173,"Following https://github.com/sofa-framework/sofa/pull/2016. I thought SofaCUDA scenes were not tested at all on CI but actually they are (some of them at least).; A `.scene-test` file is used to ignore all the scenes that require SofaCUDA. Here are the scenes that are successfully tested (check them out [here](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/2474/testReport/SceneTests/applications_plugins_SofaCUDA_examples/)):; - StandardTetrahedralFEMForceFieldCPU.scn; - TetrahedralTensorMassForceFieldCPU.scn; - beam10x10x46-fem-implicit-CPU.scn; - beam10x10x46-hexafem-implicit-CPU.scn; - beam10x10x46-hexafem-rk4-CPU.scn; - beam16x16x76-fem-implicit-CPU.scn; - beam16x16x76-hexafem-rk4-CPU.scn; - quadSpringSphere.scn. Does it makes sense to have non-CUDA scenes in SofaCUDA? ; Maybe should we ignore all the plugin scenes?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2042
https://github.com/sofa-framework/sofa/pull/2042:282,Testability,test,tested,282,"Following https://github.com/sofa-framework/sofa/pull/2016. I thought SofaCUDA scenes were not tested at all on CI but actually they are (some of them at least).; A `.scene-test` file is used to ignore all the scenes that require SofaCUDA. Here are the scenes that are successfully tested (check them out [here](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/2474/testReport/SceneTests/applications_plugins_SofaCUDA_examples/)):; - StandardTetrahedralFEMForceFieldCPU.scn; - TetrahedralTensorMassForceFieldCPU.scn; - beam10x10x46-fem-implicit-CPU.scn; - beam10x10x46-hexafem-implicit-CPU.scn; - beam10x10x46-hexafem-rk4-CPU.scn; - beam16x16x76-fem-implicit-CPU.scn; - beam16x16x76-hexafem-rk4-CPU.scn; - quadSpringSphere.scn. Does it makes sense to have non-CUDA scenes in SofaCUDA? ; Maybe should we ignore all the plugin scenes?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2042
https://github.com/sofa-framework/sofa/pull/2042:442,Testability,test,testReport,442,"Following https://github.com/sofa-framework/sofa/pull/2016. I thought SofaCUDA scenes were not tested at all on CI but actually they are (some of them at least).; A `.scene-test` file is used to ignore all the scenes that require SofaCUDA. Here are the scenes that are successfully tested (check them out [here](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/2474/testReport/SceneTests/applications_plugins_SofaCUDA_examples/)):; - StandardTetrahedralFEMForceFieldCPU.scn; - TetrahedralTensorMassForceFieldCPU.scn; - beam10x10x46-fem-implicit-CPU.scn; - beam10x10x46-hexafem-implicit-CPU.scn; - beam10x10x46-hexafem-rk4-CPU.scn; - beam16x16x76-fem-implicit-CPU.scn; - beam16x16x76-hexafem-rk4-CPU.scn; - quadSpringSphere.scn. Does it makes sense to have non-CUDA scenes in SofaCUDA? ; Maybe should we ignore all the plugin scenes?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2042
https://github.com/sofa-framework/sofa/pull/2042:1449,Testability,test,test,1449,"Following https://github.com/sofa-framework/sofa/pull/2016. I thought SofaCUDA scenes were not tested at all on CI but actually they are (some of them at least).; A `.scene-test` file is used to ignore all the scenes that require SofaCUDA. Here are the scenes that are successfully tested (check them out [here](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/2474/testReport/SceneTests/applications_plugins_SofaCUDA_examples/)):; - StandardTetrahedralFEMForceFieldCPU.scn; - TetrahedralTensorMassForceFieldCPU.scn; - beam10x10x46-fem-implicit-CPU.scn; - beam10x10x46-hexafem-implicit-CPU.scn; - beam10x10x46-hexafem-rk4-CPU.scn; - beam16x16x76-fem-implicit-CPU.scn; - beam16x16x76-hexafem-rk4-CPU.scn; - quadSpringSphere.scn. Does it makes sense to have non-CUDA scenes in SofaCUDA? ; Maybe should we ignore all the plugin scenes?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2042
https://github.com/sofa-framework/sofa/pull/2042:1498,Testability,test,test,1498,"Following https://github.com/sofa-framework/sofa/pull/2016. I thought SofaCUDA scenes were not tested at all on CI but actually they are (some of them at least).; A `.scene-test` file is used to ignore all the scenes that require SofaCUDA. Here are the scenes that are successfully tested (check them out [here](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/2474/testReport/SceneTests/applications_plugins_SofaCUDA_examples/)):; - StandardTetrahedralFEMForceFieldCPU.scn; - TetrahedralTensorMassForceFieldCPU.scn; - beam10x10x46-fem-implicit-CPU.scn; - beam10x10x46-hexafem-implicit-CPU.scn; - beam10x10x46-hexafem-rk4-CPU.scn; - beam16x16x76-fem-implicit-CPU.scn; - beam16x16x76-hexafem-rk4-CPU.scn; - quadSpringSphere.scn. Does it makes sense to have non-CUDA scenes in SofaCUDA? ; Maybe should we ignore all the plugin scenes?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2042
https://github.com/sofa-framework/sofa/pull/2043:716,Availability,failure,failures,716,"- As announced in #2010, `BruteForceDetection` can inherit from `BruteForceBroadPhase`.; - The narrow phase code has been extracted into a new component: `BVHNarrowPhase`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2043
https://github.com/sofa-framework/sofa/pull/2043:765,Availability,failure,failures,765,"- As announced in #2010, `BruteForceDetection` can inherit from `BruteForceBroadPhase`.; - The narrow phase code has been extracted into a new component: `BVHNarrowPhase`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2043
https://github.com/sofa-framework/sofa/pull/2043:51,Modifiability,inherit,inherit,51,"- As announced in #2010, `BruteForceDetection` can inherit from `BruteForceBroadPhase`.; - The narrow phase code has been extracted into a new component: `BVHNarrowPhase`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2043
https://github.com/sofa-framework/sofa/pull/2043:335,Security,Certificate,Certificate,335,"- As announced in #2010, `BruteForceDetection` can inherit from `BruteForceBroadPhase`.; - The narrow phase code has been extracted into a new component: `BVHNarrowPhase`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2043
https://github.com/sofa-framework/sofa/pull/2043:446,Security,certificate,certificate-of-origin-dco,446,"- As announced in #2010, `BruteForceDetection` can inherit from `BruteForceBroadPhase`.; - The narrow phase code has been extracted into a new component: `BVHNarrowPhase`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2043
https://github.com/sofa-framework/sofa/pull/2043:711,Testability,test,test,711,"- As announced in #2010, `BruteForceDetection` can inherit from `BruteForceBroadPhase`.; - The narrow phase code has been extracted into a new component: `BVHNarrowPhase`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2043
https://github.com/sofa-framework/sofa/pull/2043:760,Testability,test,test,760,"- As announced in #2010, `BruteForceDetection` can inherit from `BruteForceBroadPhase`.; - The narrow phase code has been extracted into a new component: `BVHNarrowPhase`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2043
https://github.com/sofa-framework/sofa/pull/2044:649,Availability,failure,failures,649,"The compatibility file SofaGuiQt.h (redirecting to sofa/gui/qt/config.h) had a `#endif` without a `#if`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2044
https://github.com/sofa-framework/sofa/pull/2044:698,Availability,failure,failures,698,"The compatibility file SofaGuiQt.h (redirecting to sofa/gui/qt/config.h) had a `#endif` without a `#if`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2044
https://github.com/sofa-framework/sofa/pull/2044:63,Modifiability,config,config,63,"The compatibility file SofaGuiQt.h (redirecting to sofa/gui/qt/config.h) had a `#endif` without a `#if`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2044
https://github.com/sofa-framework/sofa/pull/2044:268,Security,Certificate,Certificate,268,"The compatibility file SofaGuiQt.h (redirecting to sofa/gui/qt/config.h) had a `#endif` without a `#if`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2044
https://github.com/sofa-framework/sofa/pull/2044:379,Security,certificate,certificate-of-origin-dco,379,"The compatibility file SofaGuiQt.h (redirecting to sofa/gui/qt/config.h) had a `#endif` without a `#if`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2044
https://github.com/sofa-framework/sofa/pull/2044:644,Testability,test,test,644,"The compatibility file SofaGuiQt.h (redirecting to sofa/gui/qt/config.h) had a `#endif` without a `#if`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2044
https://github.com/sofa-framework/sofa/pull/2044:693,Testability,test,test,693,"The compatibility file SofaGuiQt.h (redirecting to sofa/gui/qt/config.h) had a `#endif` without a `#if`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2044
https://github.com/sofa-framework/sofa/pull/2045:641,Availability,failure,failures,641,"Title says all, this PR removes all deprecated headers, occurring since the creation of Sofa.GL. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2045
https://github.com/sofa-framework/sofa/pull/2045:690,Availability,failure,failures,690,"Title says all, this PR removes all deprecated headers, occurring since the creation of Sofa.GL. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2045
https://github.com/sofa-framework/sofa/pull/2045:260,Security,Certificate,Certificate,260,"Title says all, this PR removes all deprecated headers, occurring since the creation of Sofa.GL. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2045
https://github.com/sofa-framework/sofa/pull/2045:371,Security,certificate,certificate-of-origin-dco,371,"Title says all, this PR removes all deprecated headers, occurring since the creation of Sofa.GL. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2045
https://github.com/sofa-framework/sofa/pull/2045:636,Testability,test,test,636,"Title says all, this PR removes all deprecated headers, occurring since the creation of Sofa.GL. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2045
https://github.com/sofa-framework/sofa/pull/2045:685,Testability,test,test,685,"Title says all, this PR removes all deprecated headers, occurring since the creation of Sofa.GL. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2045
https://github.com/sofa-framework/sofa/pull/2046:611,Availability,failure,failures,611,"A PR with a high _NumberOfWarnings/NumberOfModifiedFiles_ ratio 😗. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2046
https://github.com/sofa-framework/sofa/pull/2046:660,Availability,failure,failures,660,"A PR with a high _NumberOfWarnings/NumberOfModifiedFiles_ ratio 😗. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2046
https://github.com/sofa-framework/sofa/pull/2046:230,Security,Certificate,Certificate,230,"A PR with a high _NumberOfWarnings/NumberOfModifiedFiles_ ratio 😗. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2046
https://github.com/sofa-framework/sofa/pull/2046:341,Security,certificate,certificate-of-origin-dco,341,"A PR with a high _NumberOfWarnings/NumberOfModifiedFiles_ ratio 😗. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2046
https://github.com/sofa-framework/sofa/pull/2046:606,Testability,test,test,606,"A PR with a high _NumberOfWarnings/NumberOfModifiedFiles_ ratio 😗. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2046
https://github.com/sofa-framework/sofa/pull/2046:655,Testability,test,test,655,"A PR with a high _NumberOfWarnings/NumberOfModifiedFiles_ ratio 😗. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2046
https://github.com/sofa-framework/sofa/pull/2047:3688,Availability,failure,failures,3688," ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 38.3 us 38.3 us 18336; BM_NarrowPhaseDetection_getDetectionOutputs/16 234 us 234 us 3010; BM_NarrowPhaseDetection_getDetectionOutputs/32 1373 us 1373 us 506; BM_NarrowPhaseDetection_getDetectionOutputs/64 8055 us 8056 us 88; BM_NarrowPhaseDetection_getDetectionOutputs/128 45349 us 45348 us 15; BM_NarrowPhaseDetection_getDetectionOutputs/256 243190 us 243189 us 3; ```; The benchmarks were performed using https://github.com/alxbilger/SofaBenchmark.; `BM_NarrowPhaseDetection_getDetectionOutputs/n` corresponds to a map containing `n^2` pairs of `CollisionModel*`. ## Discussion. It is undeniable that `std::map` and `std::unordered_map` are faster than `sofa::helper::map_ptr_stable_compare`. However, I don't know how crucial it is to have this kind of map with a dedicated comparator. Is this feature necessary? If not, I am in favour of using `std::unordered_map` wherever `sofa::helper::map_ptr_stable_compare` is used, for performances reasons. Overall, we won't get a huge gain of fps, but still it has an impact on the peformances of `NarrowPhaseDetection`. Initially, I wondered why `NarrowPhaseDetection` took so much time for so simple instructions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2047
https://github.com/sofa-framework/sofa/pull/2047:3737,Availability,failure,failures,3737," ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 38.3 us 38.3 us 18336; BM_NarrowPhaseDetection_getDetectionOutputs/16 234 us 234 us 3010; BM_NarrowPhaseDetection_getDetectionOutputs/32 1373 us 1373 us 506; BM_NarrowPhaseDetection_getDetectionOutputs/64 8055 us 8056 us 88; BM_NarrowPhaseDetection_getDetectionOutputs/128 45349 us 45348 us 15; BM_NarrowPhaseDetection_getDetectionOutputs/256 243190 us 243189 us 3; ```; The benchmarks were performed using https://github.com/alxbilger/SofaBenchmark.; `BM_NarrowPhaseDetection_getDetectionOutputs/n` corresponds to a map containing `n^2` pairs of `CollisionModel*`. ## Discussion. It is undeniable that `std::map` and `std::unordered_map` are faster than `sofa::helper::map_ptr_stable_compare`. However, I don't know how crucial it is to have this kind of map with a dedicated comparator. Is this feature necessary? If not, I am in favour of using `std::unordered_map` wherever `sofa::helper::map_ptr_stable_compare` is used, for performances reasons. Overall, we won't get a huge gain of fps, but still it has an impact on the peformances of `NarrowPhaseDetection`. Initially, I wondered why `NarrowPhaseDetection` took so much time for so simple instructions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2047
https://github.com/sofa-framework/sofa/pull/2047:2373,Performance,perform,performed,2373,"--------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 18.4 us 18.4 us 36921; BM_NarrowPhaseDetection_getDetectionOutputs/16 54.1 us 54.1 us 12873; BM_NarrowPhaseDetection_getDetectionOutputs/32 177 us 177 us 3973; BM_NarrowPhaseDetection_getDetectionOutputs/64 631 us 631 us 1116; BM_NarrowPhaseDetection_getDetectionOutputs/128 2587 us 2587 us 268; BM_NarrowPhaseDetection_getDetectionOutputs/256 10649 us 10649 us 67; ```; ## `sofa::helper::map_ptr_stable_compare`; ```; ------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 38.3 us 38.3 us 18336; BM_NarrowPhaseDetection_getDetectionOutputs/16 234 us 234 us 3010; BM_NarrowPhaseDetection_getDetectionOutputs/32 1373 us 1373 us 506; BM_NarrowPhaseDetection_getDetectionOutputs/64 8055 us 8056 us 88; BM_NarrowPhaseDetection_getDetectionOutputs/128 45349 us 45348 us 15; BM_NarrowPhaseDetection_getDetectionOutputs/256 243190 us 243189 us 3; ```; The benchmarks were performed using https://github.com/alxbilger/SofaBenchmark.; `BM_NarrowPhaseDetection_getDetectionOutputs/n` corresponds to a map containing `n^2` pairs of `CollisionModel*`. ## Discussion. It is undeniable that `std::map` and `std::unordered_map` are faster than `sofa::helper::map_ptr_stable_compare`. However, I don't know how crucial it is to have this kind of map with a dedicated comparator. Is this feature necessary? If not, I am in favour of using `std::unordered_map` wherever `sofa::helper::map_ptr_stable_compare` is used, for performances reasons. Overall, we won't get a huge gain of fps, but still it has an impact on the peformances of `NarrowPhaseDetection`. Initially, I wondered why `NarrowPhaseDetection` took so much time for so simple instructions. ______________________________________________________.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2047
https://github.com/sofa-framework/sofa/pull/2047:2912,Performance,perform,performances,2912," ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 38.3 us 38.3 us 18336; BM_NarrowPhaseDetection_getDetectionOutputs/16 234 us 234 us 3010; BM_NarrowPhaseDetection_getDetectionOutputs/32 1373 us 1373 us 506; BM_NarrowPhaseDetection_getDetectionOutputs/64 8055 us 8056 us 88; BM_NarrowPhaseDetection_getDetectionOutputs/128 45349 us 45348 us 15; BM_NarrowPhaseDetection_getDetectionOutputs/256 243190 us 243189 us 3; ```; The benchmarks were performed using https://github.com/alxbilger/SofaBenchmark.; `BM_NarrowPhaseDetection_getDetectionOutputs/n` corresponds to a map containing `n^2` pairs of `CollisionModel*`. ## Discussion. It is undeniable that `std::map` and `std::unordered_map` are faster than `sofa::helper::map_ptr_stable_compare`. However, I don't know how crucial it is to have this kind of map with a dedicated comparator. Is this feature necessary? If not, I am in favour of using `std::unordered_map` wherever `sofa::helper::map_ptr_stable_compare` is used, for performances reasons. Overall, we won't get a huge gain of fps, but still it has an impact on the peformances of `NarrowPhaseDetection`. Initially, I wondered why `NarrowPhaseDetection` took so much time for so simple instructions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2047
https://github.com/sofa-framework/sofa/pull/2047:3307,Security,Certificate,Certificate,3307," ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 38.3 us 38.3 us 18336; BM_NarrowPhaseDetection_getDetectionOutputs/16 234 us 234 us 3010; BM_NarrowPhaseDetection_getDetectionOutputs/32 1373 us 1373 us 506; BM_NarrowPhaseDetection_getDetectionOutputs/64 8055 us 8056 us 88; BM_NarrowPhaseDetection_getDetectionOutputs/128 45349 us 45348 us 15; BM_NarrowPhaseDetection_getDetectionOutputs/256 243190 us 243189 us 3; ```; The benchmarks were performed using https://github.com/alxbilger/SofaBenchmark.; `BM_NarrowPhaseDetection_getDetectionOutputs/n` corresponds to a map containing `n^2` pairs of `CollisionModel*`. ## Discussion. It is undeniable that `std::map` and `std::unordered_map` are faster than `sofa::helper::map_ptr_stable_compare`. However, I don't know how crucial it is to have this kind of map with a dedicated comparator. Is this feature necessary? If not, I am in favour of using `std::unordered_map` wherever `sofa::helper::map_ptr_stable_compare` is used, for performances reasons. Overall, we won't get a huge gain of fps, but still it has an impact on the peformances of `NarrowPhaseDetection`. Initially, I wondered why `NarrowPhaseDetection` took so much time for so simple instructions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2047
https://github.com/sofa-framework/sofa/pull/2047:3418,Security,certificate,certificate-of-origin-dco,3418," ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 38.3 us 38.3 us 18336; BM_NarrowPhaseDetection_getDetectionOutputs/16 234 us 234 us 3010; BM_NarrowPhaseDetection_getDetectionOutputs/32 1373 us 1373 us 506; BM_NarrowPhaseDetection_getDetectionOutputs/64 8055 us 8056 us 88; BM_NarrowPhaseDetection_getDetectionOutputs/128 45349 us 45348 us 15; BM_NarrowPhaseDetection_getDetectionOutputs/256 243190 us 243189 us 3; ```; The benchmarks were performed using https://github.com/alxbilger/SofaBenchmark.; `BM_NarrowPhaseDetection_getDetectionOutputs/n` corresponds to a map containing `n^2` pairs of `CollisionModel*`. ## Discussion. It is undeniable that `std::map` and `std::unordered_map` are faster than `sofa::helper::map_ptr_stable_compare`. However, I don't know how crucial it is to have this kind of map with a dedicated comparator. Is this feature necessary? If not, I am in favour of using `std::unordered_map` wherever `sofa::helper::map_ptr_stable_compare` is used, for performances reasons. Overall, we won't get a huge gain of fps, but still it has an impact on the peformances of `NarrowPhaseDetection`. Initially, I wondered why `NarrowPhaseDetection` took so much time for so simple instructions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2047
https://github.com/sofa-framework/sofa/pull/2047:194,Testability,benchmark,benchmarks,194,"This is a discussion about the need for `sofa::helper::map_ptr_stable_compare`, in `NarrowPhaseDetection`, but also in Sofa in general (it is also used in `DefaultContactManager`). According to benchmarks comparing 3 different types of maps, `sofa::helper::map_ptr_stable_compare` is several orders of magnitude slower than `std::map` and `std::unordered_map`. ## `std::unordered_map`; ```; ------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 19.8 us 19.7 us 32412; BM_NarrowPhaseDetection_getDetectionOutputs/16 42.8 us 42.8 us 16528; BM_NarrowPhaseDetection_getDetectionOutputs/32 121 us 121 us 5764; BM_NarrowPhaseDetection_getDetectionOutputs/64 401 us 401 us 1750; BM_NarrowPhaseDetection_getDetectionOutputs/128 2228 us 2228 us 316; BM_NarrowPhaseDetection_getDetectionOutputs/256 9252 us 9253 us 75; ```; ## `std::map`; ```; ------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 18.4 us 18.4 us 36921; BM_NarrowPhaseDetection_getDetectionOutputs/16 54.1 us 54.1 us 12873; BM_NarrowPhaseDetection_getDetectionOutputs/32 177 us 177 us 3973; BM_NarrowPhaseDetection_getDetectionOutputs/64 631 us 631 us 1116; BM_NarrowPhaseDetection_getDetectionOutputs/128 2587 us 2587 us 268; BM_NarrowPhaseDetection_getDetectionOutputs/256 10649 us 10649 us 67; ```; ## `sofa::helper::map_ptr_stable_compare`; ```; ------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 38.3 us 38.3 us 183",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2047
https://github.com/sofa-framework/sofa/pull/2047:483,Testability,Benchmark,Benchmark,483,"This is a discussion about the need for `sofa::helper::map_ptr_stable_compare`, in `NarrowPhaseDetection`, but also in Sofa in general (it is also used in `DefaultContactManager`). According to benchmarks comparing 3 different types of maps, `sofa::helper::map_ptr_stable_compare` is several orders of magnitude slower than `std::map` and `std::unordered_map`. ## `std::unordered_map`; ```; ------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 19.8 us 19.7 us 32412; BM_NarrowPhaseDetection_getDetectionOutputs/16 42.8 us 42.8 us 16528; BM_NarrowPhaseDetection_getDetectionOutputs/32 121 us 121 us 5764; BM_NarrowPhaseDetection_getDetectionOutputs/64 401 us 401 us 1750; BM_NarrowPhaseDetection_getDetectionOutputs/128 2228 us 2228 us 316; BM_NarrowPhaseDetection_getDetectionOutputs/256 9252 us 9253 us 75; ```; ## `std::map`; ```; ------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 18.4 us 18.4 us 36921; BM_NarrowPhaseDetection_getDetectionOutputs/16 54.1 us 54.1 us 12873; BM_NarrowPhaseDetection_getDetectionOutputs/32 177 us 177 us 3973; BM_NarrowPhaseDetection_getDetectionOutputs/64 631 us 631 us 1116; BM_NarrowPhaseDetection_getDetectionOutputs/128 2587 us 2587 us 268; BM_NarrowPhaseDetection_getDetectionOutputs/256 10649 us 10649 us 67; ```; ## `sofa::helper::map_ptr_stable_compare`; ```; ------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 38.3 us 38.3 us 183",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2047
https://github.com/sofa-framework/sofa/pull/2047:1133,Testability,Benchmark,Benchmark,1133,"n about the need for `sofa::helper::map_ptr_stable_compare`, in `NarrowPhaseDetection`, but also in Sofa in general (it is also used in `DefaultContactManager`). According to benchmarks comparing 3 different types of maps, `sofa::helper::map_ptr_stable_compare` is several orders of magnitude slower than `std::map` and `std::unordered_map`. ## `std::unordered_map`; ```; ------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 19.8 us 19.7 us 32412; BM_NarrowPhaseDetection_getDetectionOutputs/16 42.8 us 42.8 us 16528; BM_NarrowPhaseDetection_getDetectionOutputs/32 121 us 121 us 5764; BM_NarrowPhaseDetection_getDetectionOutputs/64 401 us 401 us 1750; BM_NarrowPhaseDetection_getDetectionOutputs/128 2228 us 2228 us 316; BM_NarrowPhaseDetection_getDetectionOutputs/256 9252 us 9253 us 75; ```; ## `std::map`; ```; ------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 18.4 us 18.4 us 36921; BM_NarrowPhaseDetection_getDetectionOutputs/16 54.1 us 54.1 us 12873; BM_NarrowPhaseDetection_getDetectionOutputs/32 177 us 177 us 3973; BM_NarrowPhaseDetection_getDetectionOutputs/64 631 us 631 us 1116; BM_NarrowPhaseDetection_getDetectionOutputs/128 2587 us 2587 us 268; BM_NarrowPhaseDetection_getDetectionOutputs/256 10649 us 10649 us 67; ```; ## `sofa::helper::map_ptr_stable_compare`; ```; ------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 38.3 us 38.3 us 18336; BM_NarrowPhase",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2047
https://github.com/sofa-framework/sofa/pull/2047:1813,Testability,Benchmark,Benchmark,1813,PhaseDetection_getDetectionOutputs/16 42.8 us 42.8 us 16528; BM_NarrowPhaseDetection_getDetectionOutputs/32 121 us 121 us 5764; BM_NarrowPhaseDetection_getDetectionOutputs/64 401 us 401 us 1750; BM_NarrowPhaseDetection_getDetectionOutputs/128 2228 us 2228 us 316; BM_NarrowPhaseDetection_getDetectionOutputs/256 9252 us 9253 us 75; ```; ## `std::map`; ```; ------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 18.4 us 18.4 us 36921; BM_NarrowPhaseDetection_getDetectionOutputs/16 54.1 us 54.1 us 12873; BM_NarrowPhaseDetection_getDetectionOutputs/32 177 us 177 us 3973; BM_NarrowPhaseDetection_getDetectionOutputs/64 631 us 631 us 1116; BM_NarrowPhaseDetection_getDetectionOutputs/128 2587 us 2587 us 268; BM_NarrowPhaseDetection_getDetectionOutputs/256 10649 us 10649 us 67; ```; ## `sofa::helper::map_ptr_stable_compare`; ```; ------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 38.3 us 38.3 us 18336; BM_NarrowPhaseDetection_getDetectionOutputs/16 234 us 234 us 3010; BM_NarrowPhaseDetection_getDetectionOutputs/32 1373 us 1373 us 506; BM_NarrowPhaseDetection_getDetectionOutputs/64 8055 us 8056 us 88; BM_NarrowPhaseDetection_getDetectionOutputs/128 45349 us 45348 us 15; BM_NarrowPhaseDetection_getDetectionOutputs/256 243190 us 243189 us 3; ```; The benchmarks were performed using https://github.com/alxbilger/SofaBenchmark.; `BM_NarrowPhaseDetection_getDetectionOutputs/n` corresponds to a map containing `n^2` pairs of `CollisionModel*`. ## Discussion. It is undeniable that `std::map` and `std::unordered_map` are faster than `sofa::helper::map_ptr_stable_compare`. However,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2047
https://github.com/sofa-framework/sofa/pull/2047:2357,Testability,benchmark,benchmarks,2357,"--------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 18.4 us 18.4 us 36921; BM_NarrowPhaseDetection_getDetectionOutputs/16 54.1 us 54.1 us 12873; BM_NarrowPhaseDetection_getDetectionOutputs/32 177 us 177 us 3973; BM_NarrowPhaseDetection_getDetectionOutputs/64 631 us 631 us 1116; BM_NarrowPhaseDetection_getDetectionOutputs/128 2587 us 2587 us 268; BM_NarrowPhaseDetection_getDetectionOutputs/256 10649 us 10649 us 67; ```; ## `sofa::helper::map_ptr_stable_compare`; ```; ------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 38.3 us 38.3 us 18336; BM_NarrowPhaseDetection_getDetectionOutputs/16 234 us 234 us 3010; BM_NarrowPhaseDetection_getDetectionOutputs/32 1373 us 1373 us 506; BM_NarrowPhaseDetection_getDetectionOutputs/64 8055 us 8056 us 88; BM_NarrowPhaseDetection_getDetectionOutputs/128 45349 us 45348 us 15; BM_NarrowPhaseDetection_getDetectionOutputs/256 243190 us 243189 us 3; ```; The benchmarks were performed using https://github.com/alxbilger/SofaBenchmark.; `BM_NarrowPhaseDetection_getDetectionOutputs/n` corresponds to a map containing `n^2` pairs of `CollisionModel*`. ## Discussion. It is undeniable that `std::map` and `std::unordered_map` are faster than `sofa::helper::map_ptr_stable_compare`. However, I don't know how crucial it is to have this kind of map with a dedicated comparator. Is this feature necessary? If not, I am in favour of using `std::unordered_map` wherever `sofa::helper::map_ptr_stable_compare` is used, for performances reasons. Overall, we won't get a huge gain of fps, but still it has an impact on the peformances of `NarrowPhaseDetection`. Initially, I wondered why `NarrowPhaseDetection` took so much time for so simple instructions. ______________________________________________________.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2047
https://github.com/sofa-framework/sofa/pull/2047:3683,Testability,test,test,3683," ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 38.3 us 38.3 us 18336; BM_NarrowPhaseDetection_getDetectionOutputs/16 234 us 234 us 3010; BM_NarrowPhaseDetection_getDetectionOutputs/32 1373 us 1373 us 506; BM_NarrowPhaseDetection_getDetectionOutputs/64 8055 us 8056 us 88; BM_NarrowPhaseDetection_getDetectionOutputs/128 45349 us 45348 us 15; BM_NarrowPhaseDetection_getDetectionOutputs/256 243190 us 243189 us 3; ```; The benchmarks were performed using https://github.com/alxbilger/SofaBenchmark.; `BM_NarrowPhaseDetection_getDetectionOutputs/n` corresponds to a map containing `n^2` pairs of `CollisionModel*`. ## Discussion. It is undeniable that `std::map` and `std::unordered_map` are faster than `sofa::helper::map_ptr_stable_compare`. However, I don't know how crucial it is to have this kind of map with a dedicated comparator. Is this feature necessary? If not, I am in favour of using `std::unordered_map` wherever `sofa::helper::map_ptr_stable_compare` is used, for performances reasons. Overall, we won't get a huge gain of fps, but still it has an impact on the peformances of `NarrowPhaseDetection`. Initially, I wondered why `NarrowPhaseDetection` took so much time for so simple instructions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2047
https://github.com/sofa-framework/sofa/pull/2047:3732,Testability,test,test,3732," ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 38.3 us 38.3 us 18336; BM_NarrowPhaseDetection_getDetectionOutputs/16 234 us 234 us 3010; BM_NarrowPhaseDetection_getDetectionOutputs/32 1373 us 1373 us 506; BM_NarrowPhaseDetection_getDetectionOutputs/64 8055 us 8056 us 88; BM_NarrowPhaseDetection_getDetectionOutputs/128 45349 us 45348 us 15; BM_NarrowPhaseDetection_getDetectionOutputs/256 243190 us 243189 us 3; ```; The benchmarks were performed using https://github.com/alxbilger/SofaBenchmark.; `BM_NarrowPhaseDetection_getDetectionOutputs/n` corresponds to a map containing `n^2` pairs of `CollisionModel*`. ## Discussion. It is undeniable that `std::map` and `std::unordered_map` are faster than `sofa::helper::map_ptr_stable_compare`. However, I don't know how crucial it is to have this kind of map with a dedicated comparator. Is this feature necessary? If not, I am in favour of using `std::unordered_map` wherever `sofa::helper::map_ptr_stable_compare` is used, for performances reasons. Overall, we won't get a huge gain of fps, but still it has an impact on the peformances of `NarrowPhaseDetection`. Initially, I wondered why `NarrowPhaseDetection` took so much time for so simple instructions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2047
https://github.com/sofa-framework/sofa/pull/2047:3123,Usability,simpl,simple,3123," ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 38.3 us 38.3 us 18336; BM_NarrowPhaseDetection_getDetectionOutputs/16 234 us 234 us 3010; BM_NarrowPhaseDetection_getDetectionOutputs/32 1373 us 1373 us 506; BM_NarrowPhaseDetection_getDetectionOutputs/64 8055 us 8056 us 88; BM_NarrowPhaseDetection_getDetectionOutputs/128 45349 us 45348 us 15; BM_NarrowPhaseDetection_getDetectionOutputs/256 243190 us 243189 us 3; ```; The benchmarks were performed using https://github.com/alxbilger/SofaBenchmark.; `BM_NarrowPhaseDetection_getDetectionOutputs/n` corresponds to a map containing `n^2` pairs of `CollisionModel*`. ## Discussion. It is undeniable that `std::map` and `std::unordered_map` are faster than `sofa::helper::map_ptr_stable_compare`. However, I don't know how crucial it is to have this kind of map with a dedicated comparator. Is this feature necessary? If not, I am in favour of using `std::unordered_map` wherever `sofa::helper::map_ptr_stable_compare` is used, for performances reasons. Overall, we won't get a huge gain of fps, but still it has an impact on the peformances of `NarrowPhaseDetection`. Initially, I wondered why `NarrowPhaseDetection` took so much time for so simple instructions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2047
https://github.com/sofa-framework/sofa/issues/2048:26,Deployability,update,updated,26,- Documentation should be updated; - User (scene) API could be simplified/clarified (one broad and one narrow phase component in the scene),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2048
https://github.com/sofa-framework/sofa/issues/2048:63,Usability,simpl,simplified,63,- Documentation should be updated; - User (scene) API could be simplified/clarified (one broad and one narrow phase component in the scene),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2048
https://github.com/sofa-framework/sofa/issues/2049:33,Modifiability,plugin,plugins,33,Implementations are sometimes in plugins and sometimes use a `d_multithreading` data.; We should find a way to make this homogeneous. Maybe as CUDA : a MTDataType ?,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2049
https://github.com/sofa-framework/sofa/pull/2050:761,Availability,error,error,761,"This commit rewrites the static ODE solver, implements two additional convergence criteria, improves the documentation of every step found in the ""solve"" method, and adds useful doxygen documentation of the Newton algorithms executed by the component. Up until this commit, the only convergence criteria of the static ODE solver were absolute force residual norms, and absolute (displacement) increment norm. Using absolute values for convergence criteria means that the value set by the user is dependent on the simulation scale. For example, setting an absolute displacement norm of 1e-5 might seem enough for a liver mesh set in millimetres, but is definitely not adequate for the same liver using this time a mesh scaled in metres. This is a source of user error, and is probably why many FEM software will use relative convergence criteria. The two additional criteria are:. 1. The relative residual norm |R|/|R0| where |R| is the norm of the force vector after the last Newton iteration, and |R0| is the norm of the force vector after the first Newton iteration.; 2. The relative displacement norm |dx|/|U| where |dx| is the norm of the latest solution vector, and |U| is the norm of the sum over all previous solution vectors of the current time step. To remove any confusion between absolute and relative criteria, the convergence data field ""correction_tolerance_threshold"" and ""residual_tolerance_threshold"" were renamed for ""absolute_correction_tolerance_threshold"" and ""absolute_residual_tolerance_threshold"", respectively. Note that to keep a compatibility layer with older scene files, these old data field names are still available, but a deprecated warning is shown to the user, inviting him to update its scene. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/147]. EDIT: Fix #224. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050
https://github.com/sofa-framework/sofa/pull/2050:1637,Availability,avail,available,1637,"ulation scale. For example, setting an absolute displacement norm of 1e-5 might seem enough for a liver mesh set in millimetres, but is definitely not adequate for the same liver using this time a mesh scaled in metres. This is a source of user error, and is probably why many FEM software will use relative convergence criteria. The two additional criteria are:. 1. The relative residual norm |R|/|R0| where |R| is the norm of the force vector after the last Newton iteration, and |R0| is the norm of the force vector after the first Newton iteration.; 2. The relative displacement norm |dx|/|U| where |dx| is the norm of the latest solution vector, and |U| is the norm of the sum over all previous solution vectors of the current time step. To remove any confusion between absolute and relative criteria, the convergence data field ""correction_tolerance_threshold"" and ""residual_tolerance_threshold"" were renamed for ""absolute_correction_tolerance_threshold"" and ""absolute_residual_tolerance_threshold"", respectively. Note that to keep a compatibility layer with older scene files, these old data field names are still available, but a deprecated warning is shown to the user, inviting him to update its scene. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/147]. EDIT: Fix #224. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050
https://github.com/sofa-framework/sofa/pull/2050:2361,Availability,failure,failures,2361,"ulation scale. For example, setting an absolute displacement norm of 1e-5 might seem enough for a liver mesh set in millimetres, but is definitely not adequate for the same liver using this time a mesh scaled in metres. This is a source of user error, and is probably why many FEM software will use relative convergence criteria. The two additional criteria are:. 1. The relative residual norm |R|/|R0| where |R| is the norm of the force vector after the last Newton iteration, and |R0| is the norm of the force vector after the first Newton iteration.; 2. The relative displacement norm |dx|/|U| where |dx| is the norm of the latest solution vector, and |U| is the norm of the sum over all previous solution vectors of the current time step. To remove any confusion between absolute and relative criteria, the convergence data field ""correction_tolerance_threshold"" and ""residual_tolerance_threshold"" were renamed for ""absolute_correction_tolerance_threshold"" and ""absolute_residual_tolerance_threshold"", respectively. Note that to keep a compatibility layer with older scene files, these old data field names are still available, but a deprecated warning is shown to the user, inviting him to update its scene. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/147]. EDIT: Fix #224. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050
https://github.com/sofa-framework/sofa/pull/2050:2410,Availability,failure,failures,2410,"ulation scale. For example, setting an absolute displacement norm of 1e-5 might seem enough for a liver mesh set in millimetres, but is definitely not adequate for the same liver using this time a mesh scaled in metres. This is a source of user error, and is probably why many FEM software will use relative convergence criteria. The two additional criteria are:. 1. The relative residual norm |R|/|R0| where |R| is the norm of the force vector after the last Newton iteration, and |R0| is the norm of the force vector after the first Newton iteration.; 2. The relative displacement norm |dx|/|U| where |dx| is the norm of the latest solution vector, and |U| is the norm of the sum over all previous solution vectors of the current time step. To remove any confusion between absolute and relative criteria, the convergence data field ""correction_tolerance_threshold"" and ""residual_tolerance_threshold"" were renamed for ""absolute_correction_tolerance_threshold"" and ""absolute_residual_tolerance_threshold"", respectively. Note that to keep a compatibility layer with older scene files, these old data field names are still available, but a deprecated warning is shown to the user, inviting him to update its scene. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/147]. EDIT: Fix #224. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050
https://github.com/sofa-framework/sofa/pull/2050:1711,Deployability,update,update,1711,"ulation scale. For example, setting an absolute displacement norm of 1e-5 might seem enough for a liver mesh set in millimetres, but is definitely not adequate for the same liver using this time a mesh scaled in metres. This is a source of user error, and is probably why many FEM software will use relative convergence criteria. The two additional criteria are:. 1. The relative residual norm |R|/|R0| where |R| is the norm of the force vector after the last Newton iteration, and |R0| is the norm of the force vector after the first Newton iteration.; 2. The relative displacement norm |dx|/|U| where |dx| is the norm of the latest solution vector, and |U| is the norm of the sum over all previous solution vectors of the current time step. To remove any confusion between absolute and relative criteria, the convergence data field ""correction_tolerance_threshold"" and ""residual_tolerance_threshold"" were renamed for ""absolute_correction_tolerance_threshold"" and ""absolute_residual_tolerance_threshold"", respectively. Note that to keep a compatibility layer with older scene files, these old data field names are still available, but a deprecated warning is shown to the user, inviting him to update its scene. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/147]. EDIT: Fix #224. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050
https://github.com/sofa-framework/sofa/pull/2050:496,Integrability,depend,dependent,496,"This commit rewrites the static ODE solver, implements two additional convergence criteria, improves the documentation of every step found in the ""solve"" method, and adds useful doxygen documentation of the Newton algorithms executed by the component. Up until this commit, the only convergence criteria of the static ODE solver were absolute force residual norms, and absolute (displacement) increment norm. Using absolute values for convergence criteria means that the value set by the user is dependent on the simulation scale. For example, setting an absolute displacement norm of 1e-5 might seem enough for a liver mesh set in millimetres, but is definitely not adequate for the same liver using this time a mesh scaled in metres. This is a source of user error, and is probably why many FEM software will use relative convergence criteria. The two additional criteria are:. 1. The relative residual norm |R|/|R0| where |R| is the norm of the force vector after the last Newton iteration, and |R0| is the norm of the force vector after the first Newton iteration.; 2. The relative displacement norm |dx|/|U| where |dx| is the norm of the latest solution vector, and |U| is the norm of the sum over all previous solution vectors of the current time step. To remove any confusion between absolute and relative criteria, the convergence data field ""correction_tolerance_threshold"" and ""residual_tolerance_threshold"" were renamed for ""absolute_correction_tolerance_threshold"" and ""absolute_residual_tolerance_threshold"", respectively. Note that to keep a compatibility layer with older scene files, these old data field names are still available, but a deprecated warning is shown to the user, inviting him to update its scene. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/147]. EDIT: Fix #224. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050
https://github.com/sofa-framework/sofa/pull/2050:1733,Integrability,depend,depends-on,1733,"ulation scale. For example, setting an absolute displacement norm of 1e-5 might seem enough for a liver mesh set in millimetres, but is definitely not adequate for the same liver using this time a mesh scaled in metres. This is a source of user error, and is probably why many FEM software will use relative convergence criteria. The two additional criteria are:. 1. The relative residual norm |R|/|R0| where |R| is the norm of the force vector after the last Newton iteration, and |R0| is the norm of the force vector after the first Newton iteration.; 2. The relative displacement norm |dx|/|U| where |dx| is the norm of the latest solution vector, and |U| is the norm of the sum over all previous solution vectors of the current time step. To remove any confusion between absolute and relative criteria, the convergence data field ""correction_tolerance_threshold"" and ""residual_tolerance_threshold"" were renamed for ""absolute_correction_tolerance_threshold"" and ""absolute_residual_tolerance_threshold"", respectively. Note that to keep a compatibility layer with older scene files, these old data field names are still available, but a deprecated warning is shown to the user, inviting him to update its scene. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/147]. EDIT: Fix #224. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050
https://github.com/sofa-framework/sofa/pull/2050:12,Modifiability,rewrite,rewrites,12,"This commit rewrites the static ODE solver, implements two additional convergence criteria, improves the documentation of every step found in the ""solve"" method, and adds useful doxygen documentation of the Newton algorithms executed by the component. Up until this commit, the only convergence criteria of the static ODE solver were absolute force residual norms, and absolute (displacement) increment norm. Using absolute values for convergence criteria means that the value set by the user is dependent on the simulation scale. For example, setting an absolute displacement norm of 1e-5 might seem enough for a liver mesh set in millimetres, but is definitely not adequate for the same liver using this time a mesh scaled in metres. This is a source of user error, and is probably why many FEM software will use relative convergence criteria. The two additional criteria are:. 1. The relative residual norm |R|/|R0| where |R| is the norm of the force vector after the last Newton iteration, and |R0| is the norm of the force vector after the first Newton iteration.; 2. The relative displacement norm |dx|/|U| where |dx| is the norm of the latest solution vector, and |U| is the norm of the sum over all previous solution vectors of the current time step. To remove any confusion between absolute and relative criteria, the convergence data field ""correction_tolerance_threshold"" and ""residual_tolerance_threshold"" were renamed for ""absolute_correction_tolerance_threshold"" and ""absolute_residual_tolerance_threshold"", respectively. Note that to keep a compatibility layer with older scene files, these old data field names are still available, but a deprecated warning is shown to the user, inviting him to update its scene. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/147]. EDIT: Fix #224. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050
https://github.com/sofa-framework/sofa/pull/2050:1980,Security,Certificate,Certificate,1980,"ulation scale. For example, setting an absolute displacement norm of 1e-5 might seem enough for a liver mesh set in millimetres, but is definitely not adequate for the same liver using this time a mesh scaled in metres. This is a source of user error, and is probably why many FEM software will use relative convergence criteria. The two additional criteria are:. 1. The relative residual norm |R|/|R0| where |R| is the norm of the force vector after the last Newton iteration, and |R0| is the norm of the force vector after the first Newton iteration.; 2. The relative displacement norm |dx|/|U| where |dx| is the norm of the latest solution vector, and |U| is the norm of the sum over all previous solution vectors of the current time step. To remove any confusion between absolute and relative criteria, the convergence data field ""correction_tolerance_threshold"" and ""residual_tolerance_threshold"" were renamed for ""absolute_correction_tolerance_threshold"" and ""absolute_residual_tolerance_threshold"", respectively. Note that to keep a compatibility layer with older scene files, these old data field names are still available, but a deprecated warning is shown to the user, inviting him to update its scene. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/147]. EDIT: Fix #224. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050
https://github.com/sofa-framework/sofa/pull/2050:2091,Security,certificate,certificate-of-origin-dco,2091,"ulation scale. For example, setting an absolute displacement norm of 1e-5 might seem enough for a liver mesh set in millimetres, but is definitely not adequate for the same liver using this time a mesh scaled in metres. This is a source of user error, and is probably why many FEM software will use relative convergence criteria. The two additional criteria are:. 1. The relative residual norm |R|/|R0| where |R| is the norm of the force vector after the last Newton iteration, and |R0| is the norm of the force vector after the first Newton iteration.; 2. The relative displacement norm |dx|/|U| where |dx| is the norm of the latest solution vector, and |U| is the norm of the sum over all previous solution vectors of the current time step. To remove any confusion between absolute and relative criteria, the convergence data field ""correction_tolerance_threshold"" and ""residual_tolerance_threshold"" were renamed for ""absolute_correction_tolerance_threshold"" and ""absolute_residual_tolerance_threshold"", respectively. Note that to keep a compatibility layer with older scene files, these old data field names are still available, but a deprecated warning is shown to the user, inviting him to update its scene. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/147]. EDIT: Fix #224. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050
https://github.com/sofa-framework/sofa/pull/2050:2356,Testability,test,test,2356,"ulation scale. For example, setting an absolute displacement norm of 1e-5 might seem enough for a liver mesh set in millimetres, but is definitely not adequate for the same liver using this time a mesh scaled in metres. This is a source of user error, and is probably why many FEM software will use relative convergence criteria. The two additional criteria are:. 1. The relative residual norm |R|/|R0| where |R| is the norm of the force vector after the last Newton iteration, and |R0| is the norm of the force vector after the first Newton iteration.; 2. The relative displacement norm |dx|/|U| where |dx| is the norm of the latest solution vector, and |U| is the norm of the sum over all previous solution vectors of the current time step. To remove any confusion between absolute and relative criteria, the convergence data field ""correction_tolerance_threshold"" and ""residual_tolerance_threshold"" were renamed for ""absolute_correction_tolerance_threshold"" and ""absolute_residual_tolerance_threshold"", respectively. Note that to keep a compatibility layer with older scene files, these old data field names are still available, but a deprecated warning is shown to the user, inviting him to update its scene. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/147]. EDIT: Fix #224. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050
https://github.com/sofa-framework/sofa/pull/2050:2405,Testability,test,test,2405,"ulation scale. For example, setting an absolute displacement norm of 1e-5 might seem enough for a liver mesh set in millimetres, but is definitely not adequate for the same liver using this time a mesh scaled in metres. This is a source of user error, and is probably why many FEM software will use relative convergence criteria. The two additional criteria are:. 1. The relative residual norm |R|/|R0| where |R| is the norm of the force vector after the last Newton iteration, and |R0| is the norm of the force vector after the first Newton iteration.; 2. The relative displacement norm |dx|/|U| where |dx| is the norm of the latest solution vector, and |U| is the norm of the sum over all previous solution vectors of the current time step. To remove any confusion between absolute and relative criteria, the convergence data field ""correction_tolerance_threshold"" and ""residual_tolerance_threshold"" were renamed for ""absolute_correction_tolerance_threshold"" and ""absolute_residual_tolerance_threshold"", respectively. Note that to keep a compatibility layer with older scene files, these old data field names are still available, but a deprecated warning is shown to the user, inviting him to update its scene. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/147]. EDIT: Fix #224. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050
https://github.com/sofa-framework/sofa/pull/2052:682,Availability,failure,failures,682,"SofaMiscCollisionConfig.cmake.in was ill-formed, so projects using it in out-of-tree builds are stuck in the cmake configuration process. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2052
https://github.com/sofa-framework/sofa/pull/2052:731,Availability,failure,failures,731,"SofaMiscCollisionConfig.cmake.in was ill-formed, so projects using it in out-of-tree builds are stuck in the cmake configuration process. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2052
https://github.com/sofa-framework/sofa/pull/2052:115,Deployability,configurat,configuration,115,"SofaMiscCollisionConfig.cmake.in was ill-formed, so projects using it in out-of-tree builds are stuck in the cmake configuration process. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2052
https://github.com/sofa-framework/sofa/pull/2052:115,Modifiability,config,configuration,115,"SofaMiscCollisionConfig.cmake.in was ill-formed, so projects using it in out-of-tree builds are stuck in the cmake configuration process. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2052
https://github.com/sofa-framework/sofa/pull/2052:301,Security,Certificate,Certificate,301,"SofaMiscCollisionConfig.cmake.in was ill-formed, so projects using it in out-of-tree builds are stuck in the cmake configuration process. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2052
https://github.com/sofa-framework/sofa/pull/2052:412,Security,certificate,certificate-of-origin-dco,412,"SofaMiscCollisionConfig.cmake.in was ill-formed, so projects using it in out-of-tree builds are stuck in the cmake configuration process. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2052
https://github.com/sofa-framework/sofa/pull/2052:677,Testability,test,test,677,"SofaMiscCollisionConfig.cmake.in was ill-formed, so projects using it in out-of-tree builds are stuck in the cmake configuration process. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2052
https://github.com/sofa-framework/sofa/pull/2052:726,Testability,test,test,726,"SofaMiscCollisionConfig.cmake.in was ill-formed, so projects using it in out-of-tree builds are stuck in the cmake configuration process. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2052
https://github.com/sofa-framework/sofa/pull/2053:1669,Availability,failure,failures,1669,"Based on #2043. A new component is introduced: `ParallelBVHNarrowPhase`. As the name suggests, it is the parallel implementation of `BVHNarrowPhase`. ## Details. The broad phase provides a list of pairs of collision models. In the initial `BVHNarrowPhase` component, the list was processed sequentially. In `ParallelBVHNarrowPhase` each pair is processed in a task, which is given to a thread pool. Note that the traversal of the bounding volume hierarchy is not parallel. It is still single threaded. Due to race conditions, some operations must be done prior to the parallel tasks: . 1. Detection output creation. This operation is very time consuming (see #2047). If #2047 is merged, we can expect better results.; 2. Topology initialization. ## Results. The tested scene is `applications/plugins/MultiThreading/examples/ParallelBruteForceBroadPhase.scn` during 500 time steps. The narrow phase duration has been measured with `ParallelBVHNarrowPhase` compared to `BVHNarrowPhase`. ```; BVHNarrowPhase 3.5 ms; BVHNarrowPhase + PR#2047 2.36 ms; ParallelBVHNarrowPhase 2.1 ms; ParallelBVHNarrowPhase + PR#2047 0.97 ms; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2053
https://github.com/sofa-framework/sofa/pull/2053:1718,Availability,failure,failures,1718,"Based on #2043. A new component is introduced: `ParallelBVHNarrowPhase`. As the name suggests, it is the parallel implementation of `BVHNarrowPhase`. ## Details. The broad phase provides a list of pairs of collision models. In the initial `BVHNarrowPhase` component, the list was processed sequentially. In `ParallelBVHNarrowPhase` each pair is processed in a task, which is given to a thread pool. Note that the traversal of the bounding volume hierarchy is not parallel. It is still single threaded. Due to race conditions, some operations must be done prior to the parallel tasks: . 1. Detection output creation. This operation is very time consuming (see #2047). If #2047 is merged, we can expect better results.; 2. Topology initialization. ## Results. The tested scene is `applications/plugins/MultiThreading/examples/ParallelBruteForceBroadPhase.scn` during 500 time steps. The narrow phase duration has been measured with `ParallelBVHNarrowPhase` compared to `BVHNarrowPhase`. ```; BVHNarrowPhase 3.5 ms; BVHNarrowPhase + PR#2047 2.36 ms; ParallelBVHNarrowPhase 2.1 ms; ParallelBVHNarrowPhase + PR#2047 0.97 ms; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2053
https://github.com/sofa-framework/sofa/pull/2053:792,Modifiability,plugin,plugins,792,"Based on #2043. A new component is introduced: `ParallelBVHNarrowPhase`. As the name suggests, it is the parallel implementation of `BVHNarrowPhase`. ## Details. The broad phase provides a list of pairs of collision models. In the initial `BVHNarrowPhase` component, the list was processed sequentially. In `ParallelBVHNarrowPhase` each pair is processed in a task, which is given to a thread pool. Note that the traversal of the bounding volume hierarchy is not parallel. It is still single threaded. Due to race conditions, some operations must be done prior to the parallel tasks: . 1. Detection output creation. This operation is very time consuming (see #2047). If #2047 is merged, we can expect better results.; 2. Topology initialization. ## Results. The tested scene is `applications/plugins/MultiThreading/examples/ParallelBruteForceBroadPhase.scn` during 500 time steps. The narrow phase duration has been measured with `ParallelBVHNarrowPhase` compared to `BVHNarrowPhase`. ```; BVHNarrowPhase 3.5 ms; BVHNarrowPhase + PR#2047 2.36 ms; ParallelBVHNarrowPhase 2.1 ms; ParallelBVHNarrowPhase + PR#2047 0.97 ms; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2053
https://github.com/sofa-framework/sofa/pull/2053:509,Performance,race condition,race conditions,509,"Based on #2043. A new component is introduced: `ParallelBVHNarrowPhase`. As the name suggests, it is the parallel implementation of `BVHNarrowPhase`. ## Details. The broad phase provides a list of pairs of collision models. In the initial `BVHNarrowPhase` component, the list was processed sequentially. In `ParallelBVHNarrowPhase` each pair is processed in a task, which is given to a thread pool. Note that the traversal of the bounding volume hierarchy is not parallel. It is still single threaded. Due to race conditions, some operations must be done prior to the parallel tasks: . 1. Detection output creation. This operation is very time consuming (see #2047). If #2047 is merged, we can expect better results.; 2. Topology initialization. ## Results. The tested scene is `applications/plugins/MultiThreading/examples/ParallelBruteForceBroadPhase.scn` during 500 time steps. The narrow phase duration has been measured with `ParallelBVHNarrowPhase` compared to `BVHNarrowPhase`. ```; BVHNarrowPhase 3.5 ms; BVHNarrowPhase + PR#2047 2.36 ms; ParallelBVHNarrowPhase 2.1 ms; ParallelBVHNarrowPhase + PR#2047 0.97 ms; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2053
https://github.com/sofa-framework/sofa/pull/2053:589,Safety,Detect,Detection,589,"Based on #2043. A new component is introduced: `ParallelBVHNarrowPhase`. As the name suggests, it is the parallel implementation of `BVHNarrowPhase`. ## Details. The broad phase provides a list of pairs of collision models. In the initial `BVHNarrowPhase` component, the list was processed sequentially. In `ParallelBVHNarrowPhase` each pair is processed in a task, which is given to a thread pool. Note that the traversal of the bounding volume hierarchy is not parallel. It is still single threaded. Due to race conditions, some operations must be done prior to the parallel tasks: . 1. Detection output creation. This operation is very time consuming (see #2047). If #2047 is merged, we can expect better results.; 2. Topology initialization. ## Results. The tested scene is `applications/plugins/MultiThreading/examples/ParallelBruteForceBroadPhase.scn` during 500 time steps. The narrow phase duration has been measured with `ParallelBVHNarrowPhase` compared to `BVHNarrowPhase`. ```; BVHNarrowPhase 3.5 ms; BVHNarrowPhase + PR#2047 2.36 ms; ParallelBVHNarrowPhase 2.1 ms; ParallelBVHNarrowPhase + PR#2047 0.97 ms; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2053
https://github.com/sofa-framework/sofa/pull/2053:1288,Security,Certificate,Certificate,1288,"Based on #2043. A new component is introduced: `ParallelBVHNarrowPhase`. As the name suggests, it is the parallel implementation of `BVHNarrowPhase`. ## Details. The broad phase provides a list of pairs of collision models. In the initial `BVHNarrowPhase` component, the list was processed sequentially. In `ParallelBVHNarrowPhase` each pair is processed in a task, which is given to a thread pool. Note that the traversal of the bounding volume hierarchy is not parallel. It is still single threaded. Due to race conditions, some operations must be done prior to the parallel tasks: . 1. Detection output creation. This operation is very time consuming (see #2047). If #2047 is merged, we can expect better results.; 2. Topology initialization. ## Results. The tested scene is `applications/plugins/MultiThreading/examples/ParallelBruteForceBroadPhase.scn` during 500 time steps. The narrow phase duration has been measured with `ParallelBVHNarrowPhase` compared to `BVHNarrowPhase`. ```; BVHNarrowPhase 3.5 ms; BVHNarrowPhase + PR#2047 2.36 ms; ParallelBVHNarrowPhase 2.1 ms; ParallelBVHNarrowPhase + PR#2047 0.97 ms; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2053
https://github.com/sofa-framework/sofa/pull/2053:1399,Security,certificate,certificate-of-origin-dco,1399,"Based on #2043. A new component is introduced: `ParallelBVHNarrowPhase`. As the name suggests, it is the parallel implementation of `BVHNarrowPhase`. ## Details. The broad phase provides a list of pairs of collision models. In the initial `BVHNarrowPhase` component, the list was processed sequentially. In `ParallelBVHNarrowPhase` each pair is processed in a task, which is given to a thread pool. Note that the traversal of the bounding volume hierarchy is not parallel. It is still single threaded. Due to race conditions, some operations must be done prior to the parallel tasks: . 1. Detection output creation. This operation is very time consuming (see #2047). If #2047 is merged, we can expect better results.; 2. Topology initialization. ## Results. The tested scene is `applications/plugins/MultiThreading/examples/ParallelBruteForceBroadPhase.scn` during 500 time steps. The narrow phase duration has been measured with `ParallelBVHNarrowPhase` compared to `BVHNarrowPhase`. ```; BVHNarrowPhase 3.5 ms; BVHNarrowPhase + PR#2047 2.36 ms; ParallelBVHNarrowPhase 2.1 ms; ParallelBVHNarrowPhase + PR#2047 0.97 ms; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2053
https://github.com/sofa-framework/sofa/pull/2053:762,Testability,test,tested,762,"Based on #2043. A new component is introduced: `ParallelBVHNarrowPhase`. As the name suggests, it is the parallel implementation of `BVHNarrowPhase`. ## Details. The broad phase provides a list of pairs of collision models. In the initial `BVHNarrowPhase` component, the list was processed sequentially. In `ParallelBVHNarrowPhase` each pair is processed in a task, which is given to a thread pool. Note that the traversal of the bounding volume hierarchy is not parallel. It is still single threaded. Due to race conditions, some operations must be done prior to the parallel tasks: . 1. Detection output creation. This operation is very time consuming (see #2047). If #2047 is merged, we can expect better results.; 2. Topology initialization. ## Results. The tested scene is `applications/plugins/MultiThreading/examples/ParallelBruteForceBroadPhase.scn` during 500 time steps. The narrow phase duration has been measured with `ParallelBVHNarrowPhase` compared to `BVHNarrowPhase`. ```; BVHNarrowPhase 3.5 ms; BVHNarrowPhase + PR#2047 2.36 ms; ParallelBVHNarrowPhase 2.1 ms; ParallelBVHNarrowPhase + PR#2047 0.97 ms; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2053
https://github.com/sofa-framework/sofa/pull/2053:1664,Testability,test,test,1664,"Based on #2043. A new component is introduced: `ParallelBVHNarrowPhase`. As the name suggests, it is the parallel implementation of `BVHNarrowPhase`. ## Details. The broad phase provides a list of pairs of collision models. In the initial `BVHNarrowPhase` component, the list was processed sequentially. In `ParallelBVHNarrowPhase` each pair is processed in a task, which is given to a thread pool. Note that the traversal of the bounding volume hierarchy is not parallel. It is still single threaded. Due to race conditions, some operations must be done prior to the parallel tasks: . 1. Detection output creation. This operation is very time consuming (see #2047). If #2047 is merged, we can expect better results.; 2. Topology initialization. ## Results. The tested scene is `applications/plugins/MultiThreading/examples/ParallelBruteForceBroadPhase.scn` during 500 time steps. The narrow phase duration has been measured with `ParallelBVHNarrowPhase` compared to `BVHNarrowPhase`. ```; BVHNarrowPhase 3.5 ms; BVHNarrowPhase + PR#2047 2.36 ms; ParallelBVHNarrowPhase 2.1 ms; ParallelBVHNarrowPhase + PR#2047 0.97 ms; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2053
https://github.com/sofa-framework/sofa/pull/2053:1713,Testability,test,test,1713,"Based on #2043. A new component is introduced: `ParallelBVHNarrowPhase`. As the name suggests, it is the parallel implementation of `BVHNarrowPhase`. ## Details. The broad phase provides a list of pairs of collision models. In the initial `BVHNarrowPhase` component, the list was processed sequentially. In `ParallelBVHNarrowPhase` each pair is processed in a task, which is given to a thread pool. Note that the traversal of the bounding volume hierarchy is not parallel. It is still single threaded. Due to race conditions, some operations must be done prior to the parallel tasks: . 1. Detection output creation. This operation is very time consuming (see #2047). If #2047 is merged, we can expect better results.; 2. Topology initialization. ## Results. The tested scene is `applications/plugins/MultiThreading/examples/ParallelBruteForceBroadPhase.scn` during 500 time steps. The narrow phase duration has been measured with `ParallelBVHNarrowPhase` compared to `BVHNarrowPhase`. ```; BVHNarrowPhase 3.5 ms; BVHNarrowPhase + PR#2047 2.36 ms; ParallelBVHNarrowPhase 2.1 ms; ParallelBVHNarrowPhase + PR#2047 0.97 ms; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2053
https://github.com/sofa-framework/sofa/pull/2054:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2054
https://github.com/sofa-framework/sofa/pull/2054:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2054
https://github.com/sofa-framework/sofa/pull/2054:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2054
https://github.com/sofa-framework/sofa/pull/2054:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2054
https://github.com/sofa-framework/sofa/pull/2054:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2054
https://github.com/sofa-framework/sofa/pull/2054:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2054
https://github.com/sofa-framework/sofa/pull/2055:638,Availability,failure,failures,638,"- Fix warnings in `UniformMass`; - Add `RequiredPlugin`; - Add `OglGrid` and `OglSceneFrame`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2055
https://github.com/sofa-framework/sofa/pull/2055:687,Availability,failure,failures,687,"- Fix warnings in `UniformMass`; - Add `RequiredPlugin`; - Add `OglGrid` and `OglSceneFrame`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2055
https://github.com/sofa-framework/sofa/pull/2055:257,Security,Certificate,Certificate,257,"- Fix warnings in `UniformMass`; - Add `RequiredPlugin`; - Add `OglGrid` and `OglSceneFrame`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2055
https://github.com/sofa-framework/sofa/pull/2055:368,Security,certificate,certificate-of-origin-dco,368,"- Fix warnings in `UniformMass`; - Add `RequiredPlugin`; - Add `OglGrid` and `OglSceneFrame`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2055
https://github.com/sofa-framework/sofa/pull/2055:633,Testability,test,test,633,"- Fix warnings in `UniformMass`; - Add `RequiredPlugin`; - Add `OglGrid` and `OglSceneFrame`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2055
https://github.com/sofa-framework/sofa/pull/2055:682,Testability,test,test,682,"- Fix warnings in `UniformMass`; - Add `RequiredPlugin`; - Add `OglGrid` and `OglSceneFrame`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2055
https://github.com/sofa-framework/sofa/issues/2057:259,Availability,Down,Downloads,259,"Bug reported by @olumide-x :. Right-clicking on a node and selecting ""expand node"" crashes runSofa master and 20.12.02. ```; #0 0x00007ff666876a98 in sofa::component::visualmodel::LightManager::handleEvent(sofa::core::objectmodel::Event*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaOpenglVisual.so; #1 0x00007ff67b4f2276 in sofa::simulation::PropagateEventVisitor::processNodeTopDown(sofa::simulation::Node*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #2 0x00007ff67cc2aa57 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:451,Availability,Down,Downloads,451,"Bug reported by @olumide-x :. Right-clicking on a node and selecting ""expand node"" crashes runSofa master and 20.12.02. ```; #0 0x00007ff666876a98 in sofa::component::visualmodel::LightManager::handleEvent(sofa::core::objectmodel::Event*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaOpenglVisual.so; #1 0x00007ff67b4f2276 in sofa::simulation::PropagateEventVisitor::processNodeTopDown(sofa::simulation::Node*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #2 0x00007ff67cc2aa57 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:1054,Availability,Down,Downloads,1054,"Bug reported by @olumide-x :. Right-clicking on a node and selecting ""expand node"" crashes runSofa master and 20.12.02. ```; #0 0x00007ff666876a98 in sofa::component::visualmodel::LightManager::handleEvent(sofa::core::objectmodel::Event*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaOpenglVisual.so; #1 0x00007ff67b4f2276 in sofa::simulation::PropagateEventVisitor::processNodeTopDown(sofa::simulation::Node*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #2 0x00007ff67cc2aa57 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:1258,Availability,Down,Downloads,1258,"ectmodel::Event*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaOpenglVisual.so; #1 0x00007ff67b4f2276 in sofa::simulation::PropagateEventVisitor::processNodeTopDown(sofa::simulation::Node*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #2 0x00007ff67cc2aa57 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaLis",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:1481,Availability,Down,Downloads,1481,"at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #2 0x00007ff67cc2aa57 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /h",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:1642,Availability,Down,Downloads,1642,"::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downlo",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:1836,Availability,Down,Downloads,1836,"ulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #12 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:2110,Availability,Down,Downloads,2110,"/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #12 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #13 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #14 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeW",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:2278,Availability,Down,Downloads,2278,"/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #12 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #13 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #14 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #15 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandN",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:2447,Availability,Down,Downloads,2447," const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #12 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #13 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #14 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #15 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; ```. Same issue on windows with up to date version. Collapse o",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:2616,Availability,Down,Downloads,2616,"model::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #12 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #13 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #14 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #15 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; ```. Same issue on windows with up to date version. Collapse option doesn't work neither.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:2785,Availability,Down,Downloads,2785,"model::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #12 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #13 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #14 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #15 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; ```. Same issue on windows with up to date version. Collapse option doesn't work neither.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:2954,Availability,Down,Downloads,2954,"model::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #12 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #13 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #14 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #15 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; ```. Same issue on windows with up to date version. Collapse option doesn't work neither.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:3123,Availability,Down,Downloads,3123,"model::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #12 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #13 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #14 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #15 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; ```. Same issue on windows with up to date version. Collapse option doesn't work neither.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:3292,Availability,Down,Downloads,3292,"model::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #12 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #13 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #14 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #15 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; ```. Same issue on windows with up to date version. Collapse option doesn't work neither.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:285,Deployability,Release,Release,285,"Bug reported by @olumide-x :. Right-clicking on a node and selecting ""expand node"" crashes runSofa master and 20.12.02. ```; #0 0x00007ff666876a98 in sofa::component::visualmodel::LightManager::handleEvent(sofa::core::objectmodel::Event*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaOpenglVisual.so; #1 0x00007ff67b4f2276 in sofa::simulation::PropagateEventVisitor::processNodeTopDown(sofa::simulation::Node*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #2 0x00007ff67cc2aa57 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:477,Deployability,Release,Release,477,"Bug reported by @olumide-x :. Right-clicking on a node and selecting ""expand node"" crashes runSofa master and 20.12.02. ```; #0 0x00007ff666876a98 in sofa::component::visualmodel::LightManager::handleEvent(sofa::core::objectmodel::Event*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaOpenglVisual.so; #1 0x00007ff67b4f2276 in sofa::simulation::PropagateEventVisitor::processNodeTopDown(sofa::simulation::Node*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #2 0x00007ff67cc2aa57 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:1080,Deployability,Release,Release,1080,"Bug reported by @olumide-x :. Right-clicking on a node and selecting ""expand node"" crashes runSofa master and 20.12.02. ```; #0 0x00007ff666876a98 in sofa::component::visualmodel::LightManager::handleEvent(sofa::core::objectmodel::Event*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaOpenglVisual.so; #1 0x00007ff67b4f2276 in sofa::simulation::PropagateEventVisitor::processNodeTopDown(sofa::simulation::Node*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #2 0x00007ff67cc2aa57 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:1284,Deployability,Release,Release,1284,"ectmodel::Event*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaOpenglVisual.so; #1 0x00007ff67b4f2276 in sofa::simulation::PropagateEventVisitor::processNodeTopDown(sofa::simulation::Node*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #2 0x00007ff67cc2aa57 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaLis",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:1507,Deployability,Release,Release,1507,"at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #2 0x00007ff67cc2aa57 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /h",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:1668,Deployability,Release,Release,1668,"::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downlo",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:1862,Deployability,Release,Release,1862,"ulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #12 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:2136,Deployability,Release,Release,2136,"/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #12 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #13 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #14 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeW",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:2304,Deployability,Release,Release,2304,"/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #12 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #13 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #14 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #15 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandN",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:2473,Deployability,Release,Release,2473," const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #12 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #13 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #14 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #15 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; ```. Same issue on windows with up to date version. Collapse o",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:2642,Deployability,Release,Release,2642,"model::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #12 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #13 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #14 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #15 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; ```. Same issue on windows with up to date version. Collapse option doesn't work neither.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:2811,Deployability,Release,Release,2811,"model::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #12 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #13 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #14 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #15 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; ```. Same issue on windows with up to date version. Collapse option doesn't work neither.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:2980,Deployability,Release,Release,2980,"model::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #12 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #13 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #14 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #15 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; ```. Same issue on windows with up to date version. Collapse option doesn't work neither.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:3149,Deployability,Release,Release,3149,"model::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #12 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #13 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #14 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #15 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; ```. Same issue on windows with up to date version. Collapse option doesn't work neither.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/issues/2057:3318,Deployability,Release,Release,3318,"model::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #12 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #13 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #14 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #15 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; ```. Same issue on windows with up to date version. Collapse option doesn't work neither.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057
https://github.com/sofa-framework/sofa/pull/2058:860,Availability,failure,failures,860,"Mostly cleaning of the GUI `HeadlessRecorder`, but it also adds support for background color. In the future, I suggest to move `GLBackend` out of the qt namespace/folder, so it can be used in `HeadlessRecorder`. A lot of code can be shared between both, and `GLBackend` is not dependant on Qt. I'll create an issue. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2058
https://github.com/sofa-framework/sofa/pull/2058:909,Availability,failure,failures,909,"Mostly cleaning of the GUI `HeadlessRecorder`, but it also adds support for background color. In the future, I suggest to move `GLBackend` out of the qt namespace/folder, so it can be used in `HeadlessRecorder`. A lot of code can be shared between both, and `GLBackend` is not dependant on Qt. I'll create an issue. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2058
https://github.com/sofa-framework/sofa/pull/2058:277,Integrability,depend,dependant,277,"Mostly cleaning of the GUI `HeadlessRecorder`, but it also adds support for background color. In the future, I suggest to move `GLBackend` out of the qt namespace/folder, so it can be used in `HeadlessRecorder`. A lot of code can be shared between both, and `GLBackend` is not dependant on Qt. I'll create an issue. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2058
https://github.com/sofa-framework/sofa/pull/2058:479,Security,Certificate,Certificate,479,"Mostly cleaning of the GUI `HeadlessRecorder`, but it also adds support for background color. In the future, I suggest to move `GLBackend` out of the qt namespace/folder, so it can be used in `HeadlessRecorder`. A lot of code can be shared between both, and `GLBackend` is not dependant on Qt. I'll create an issue. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2058
https://github.com/sofa-framework/sofa/pull/2058:590,Security,certificate,certificate-of-origin-dco,590,"Mostly cleaning of the GUI `HeadlessRecorder`, but it also adds support for background color. In the future, I suggest to move `GLBackend` out of the qt namespace/folder, so it can be used in `HeadlessRecorder`. A lot of code can be shared between both, and `GLBackend` is not dependant on Qt. I'll create an issue. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2058
https://github.com/sofa-framework/sofa/pull/2058:855,Testability,test,test,855,"Mostly cleaning of the GUI `HeadlessRecorder`, but it also adds support for background color. In the future, I suggest to move `GLBackend` out of the qt namespace/folder, so it can be used in `HeadlessRecorder`. A lot of code can be shared between both, and `GLBackend` is not dependant on Qt. I'll create an issue. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2058
https://github.com/sofa-framework/sofa/pull/2058:904,Testability,test,test,904,"Mostly cleaning of the GUI `HeadlessRecorder`, but it also adds support for background color. In the future, I suggest to move `GLBackend` out of the qt namespace/folder, so it can be used in `HeadlessRecorder`. A lot of code can be shared between both, and `GLBackend` is not dependant on Qt. I'll create an issue. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2058
https://github.com/sofa-framework/sofa/pull/2059:649,Availability,failure,failures,649,"It looks like this is the reason why SofaPython3 tests are failing.; I still have no idea why for now... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2059
https://github.com/sofa-framework/sofa/pull/2059:698,Availability,failure,failures,698,"It looks like this is the reason why SofaPython3 tests are failing.; I still have no idea why for now... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2059
https://github.com/sofa-framework/sofa/pull/2059:268,Security,Certificate,Certificate,268,"It looks like this is the reason why SofaPython3 tests are failing.; I still have no idea why for now... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2059
https://github.com/sofa-framework/sofa/pull/2059:379,Security,certificate,certificate-of-origin-dco,379,"It looks like this is the reason why SofaPython3 tests are failing.; I still have no idea why for now... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2059
https://github.com/sofa-framework/sofa/pull/2059:49,Testability,test,tests,49,"It looks like this is the reason why SofaPython3 tests are failing.; I still have no idea why for now... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2059
https://github.com/sofa-framework/sofa/pull/2059:644,Testability,test,test,644,"It looks like this is the reason why SofaPython3 tests are failing.; I still have no idea why for now... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2059
https://github.com/sofa-framework/sofa/pull/2059:693,Testability,test,test,693,"It looks like this is the reason why SofaPython3 tests are failing.; I still have no idea why for now... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2059
https://github.com/sofa-framework/sofa/pull/2061:657,Availability,failure,failures,657,"Just a PR to restore the SofaFramework folder for its modules (it was spread at the root of the project before). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2061
https://github.com/sofa-framework/sofa/pull/2061:706,Availability,failure,failures,706,"Just a PR to restore the SofaFramework folder for its modules (it was spread at the root of the project before). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2061
https://github.com/sofa-framework/sofa/pull/2061:276,Security,Certificate,Certificate,276,"Just a PR to restore the SofaFramework folder for its modules (it was spread at the root of the project before). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2061
https://github.com/sofa-framework/sofa/pull/2061:387,Security,certificate,certificate-of-origin-dco,387,"Just a PR to restore the SofaFramework folder for its modules (it was spread at the root of the project before). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2061
https://github.com/sofa-framework/sofa/pull/2061:652,Testability,test,test,652,"Just a PR to restore the SofaFramework folder for its modules (it was spread at the root of the project before). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2061
https://github.com/sofa-framework/sofa/pull/2061:701,Testability,test,test,701,"Just a PR to restore the SofaFramework folder for its modules (it was spread at the root of the project before). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2061
https://github.com/sofa-framework/sofa/pull/2062:1572,Availability,failure,failures,1572,"https://github.com/fredroy/SofaGLFW. Why?; - Bothersome to need Qt to have a 3D rendering of a scene; - The existing ""simple"" GUI SofaGLUT is not supported anymore and is based on a deprecated library (glut). This PR brings a simple GUI based on GLFW (a spiritual heir of Glut).; It only needs SofaGUICommon, SofaBaseVisual and Sofa.GL as dependencies.; Integration of GLFW is automatic (automatic fetching and integration with cmake), and linked statically (does not need a glfw.dll to be shipped with). This GUI is launchable with the standard runSofa (with the parameter ""-g glfw""), or can be used with a (provided) stand-alone executable (which needs much less dependencies than runSofa). Lastly, this GUI was designed to support multiple windows in the same time and multiple simulations. So when multiple simulations is possible is the future, it should be easy to modify the code to support this feature.; And multiple windows could be based on the fact having multiple Camera in the scene (feature not implemented yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2062
https://github.com/sofa-framework/sofa/pull/2062:1621,Availability,failure,failures,1621,"https://github.com/fredroy/SofaGLFW. Why?; - Bothersome to need Qt to have a 3D rendering of a scene; - The existing ""simple"" GUI SofaGLUT is not supported anymore and is based on a deprecated library (glut). This PR brings a simple GUI based on GLFW (a spiritual heir of Glut).; It only needs SofaGUICommon, SofaBaseVisual and Sofa.GL as dependencies.; Integration of GLFW is automatic (automatic fetching and integration with cmake), and linked statically (does not need a glfw.dll to be shipped with). This GUI is launchable with the standard runSofa (with the parameter ""-g glfw""), or can be used with a (provided) stand-alone executable (which needs much less dependencies than runSofa). Lastly, this GUI was designed to support multiple windows in the same time and multiple simulations. So when multiple simulations is possible is the future, it should be easy to modify the code to support this feature.; And multiple windows could be based on the fact having multiple Camera in the scene (feature not implemented yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2062
https://github.com/sofa-framework/sofa/pull/2062:354,Deployability,Integrat,Integration,354,"https://github.com/fredroy/SofaGLFW. Why?; - Bothersome to need Qt to have a 3D rendering of a scene; - The existing ""simple"" GUI SofaGLUT is not supported anymore and is based on a deprecated library (glut). This PR brings a simple GUI based on GLFW (a spiritual heir of Glut).; It only needs SofaGUICommon, SofaBaseVisual and Sofa.GL as dependencies.; Integration of GLFW is automatic (automatic fetching and integration with cmake), and linked statically (does not need a glfw.dll to be shipped with). This GUI is launchable with the standard runSofa (with the parameter ""-g glfw""), or can be used with a (provided) stand-alone executable (which needs much less dependencies than runSofa). Lastly, this GUI was designed to support multiple windows in the same time and multiple simulations. So when multiple simulations is possible is the future, it should be easy to modify the code to support this feature.; And multiple windows could be based on the fact having multiple Camera in the scene (feature not implemented yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2062
https://github.com/sofa-framework/sofa/pull/2062:411,Deployability,integrat,integration,411,"https://github.com/fredroy/SofaGLFW. Why?; - Bothersome to need Qt to have a 3D rendering of a scene; - The existing ""simple"" GUI SofaGLUT is not supported anymore and is based on a deprecated library (glut). This PR brings a simple GUI based on GLFW (a spiritual heir of Glut).; It only needs SofaGUICommon, SofaBaseVisual and Sofa.GL as dependencies.; Integration of GLFW is automatic (automatic fetching and integration with cmake), and linked statically (does not need a glfw.dll to be shipped with). This GUI is launchable with the standard runSofa (with the parameter ""-g glfw""), or can be used with a (provided) stand-alone executable (which needs much less dependencies than runSofa). Lastly, this GUI was designed to support multiple windows in the same time and multiple simulations. So when multiple simulations is possible is the future, it should be easy to modify the code to support this feature.; And multiple windows could be based on the fact having multiple Camera in the scene (feature not implemented yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2062
https://github.com/sofa-framework/sofa/pull/2062:339,Integrability,depend,dependencies,339,"https://github.com/fredroy/SofaGLFW. Why?; - Bothersome to need Qt to have a 3D rendering of a scene; - The existing ""simple"" GUI SofaGLUT is not supported anymore and is based on a deprecated library (glut). This PR brings a simple GUI based on GLFW (a spiritual heir of Glut).; It only needs SofaGUICommon, SofaBaseVisual and Sofa.GL as dependencies.; Integration of GLFW is automatic (automatic fetching and integration with cmake), and linked statically (does not need a glfw.dll to be shipped with). This GUI is launchable with the standard runSofa (with the parameter ""-g glfw""), or can be used with a (provided) stand-alone executable (which needs much less dependencies than runSofa). Lastly, this GUI was designed to support multiple windows in the same time and multiple simulations. So when multiple simulations is possible is the future, it should be easy to modify the code to support this feature.; And multiple windows could be based on the fact having multiple Camera in the scene (feature not implemented yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2062
https://github.com/sofa-framework/sofa/pull/2062:354,Integrability,Integrat,Integration,354,"https://github.com/fredroy/SofaGLFW. Why?; - Bothersome to need Qt to have a 3D rendering of a scene; - The existing ""simple"" GUI SofaGLUT is not supported anymore and is based on a deprecated library (glut). This PR brings a simple GUI based on GLFW (a spiritual heir of Glut).; It only needs SofaGUICommon, SofaBaseVisual and Sofa.GL as dependencies.; Integration of GLFW is automatic (automatic fetching and integration with cmake), and linked statically (does not need a glfw.dll to be shipped with). This GUI is launchable with the standard runSofa (with the parameter ""-g glfw""), or can be used with a (provided) stand-alone executable (which needs much less dependencies than runSofa). Lastly, this GUI was designed to support multiple windows in the same time and multiple simulations. So when multiple simulations is possible is the future, it should be easy to modify the code to support this feature.; And multiple windows could be based on the fact having multiple Camera in the scene (feature not implemented yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2062
https://github.com/sofa-framework/sofa/pull/2062:411,Integrability,integrat,integration,411,"https://github.com/fredroy/SofaGLFW. Why?; - Bothersome to need Qt to have a 3D rendering of a scene; - The existing ""simple"" GUI SofaGLUT is not supported anymore and is based on a deprecated library (glut). This PR brings a simple GUI based on GLFW (a spiritual heir of Glut).; It only needs SofaGUICommon, SofaBaseVisual and Sofa.GL as dependencies.; Integration of GLFW is automatic (automatic fetching and integration with cmake), and linked statically (does not need a glfw.dll to be shipped with). This GUI is launchable with the standard runSofa (with the parameter ""-g glfw""), or can be used with a (provided) stand-alone executable (which needs much less dependencies than runSofa). Lastly, this GUI was designed to support multiple windows in the same time and multiple simulations. So when multiple simulations is possible is the future, it should be easy to modify the code to support this feature.; And multiple windows could be based on the fact having multiple Camera in the scene (feature not implemented yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2062
https://github.com/sofa-framework/sofa/pull/2062:665,Integrability,depend,dependencies,665,"https://github.com/fredroy/SofaGLFW. Why?; - Bothersome to need Qt to have a 3D rendering of a scene; - The existing ""simple"" GUI SofaGLUT is not supported anymore and is based on a deprecated library (glut). This PR brings a simple GUI based on GLFW (a spiritual heir of Glut).; It only needs SofaGUICommon, SofaBaseVisual and Sofa.GL as dependencies.; Integration of GLFW is automatic (automatic fetching and integration with cmake), and linked statically (does not need a glfw.dll to be shipped with). This GUI is launchable with the standard runSofa (with the parameter ""-g glfw""), or can be used with a (provided) stand-alone executable (which needs much less dependencies than runSofa). Lastly, this GUI was designed to support multiple windows in the same time and multiple simulations. So when multiple simulations is possible is the future, it should be easy to modify the code to support this feature.; And multiple windows could be based on the fact having multiple Camera in the scene (feature not implemented yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2062
https://github.com/sofa-framework/sofa/pull/2062:1191,Security,Certificate,Certificate,1191,"https://github.com/fredroy/SofaGLFW. Why?; - Bothersome to need Qt to have a 3D rendering of a scene; - The existing ""simple"" GUI SofaGLUT is not supported anymore and is based on a deprecated library (glut). This PR brings a simple GUI based on GLFW (a spiritual heir of Glut).; It only needs SofaGUICommon, SofaBaseVisual and Sofa.GL as dependencies.; Integration of GLFW is automatic (automatic fetching and integration with cmake), and linked statically (does not need a glfw.dll to be shipped with). This GUI is launchable with the standard runSofa (with the parameter ""-g glfw""), or can be used with a (provided) stand-alone executable (which needs much less dependencies than runSofa). Lastly, this GUI was designed to support multiple windows in the same time and multiple simulations. So when multiple simulations is possible is the future, it should be easy to modify the code to support this feature.; And multiple windows could be based on the fact having multiple Camera in the scene (feature not implemented yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2062
https://github.com/sofa-framework/sofa/pull/2062:1302,Security,certificate,certificate-of-origin-dco,1302,"https://github.com/fredroy/SofaGLFW. Why?; - Bothersome to need Qt to have a 3D rendering of a scene; - The existing ""simple"" GUI SofaGLUT is not supported anymore and is based on a deprecated library (glut). This PR brings a simple GUI based on GLFW (a spiritual heir of Glut).; It only needs SofaGUICommon, SofaBaseVisual and Sofa.GL as dependencies.; Integration of GLFW is automatic (automatic fetching and integration with cmake), and linked statically (does not need a glfw.dll to be shipped with). This GUI is launchable with the standard runSofa (with the parameter ""-g glfw""), or can be used with a (provided) stand-alone executable (which needs much less dependencies than runSofa). Lastly, this GUI was designed to support multiple windows in the same time and multiple simulations. So when multiple simulations is possible is the future, it should be easy to modify the code to support this feature.; And multiple windows could be based on the fact having multiple Camera in the scene (feature not implemented yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2062
https://github.com/sofa-framework/sofa/pull/2062:1567,Testability,test,test,1567,"https://github.com/fredroy/SofaGLFW. Why?; - Bothersome to need Qt to have a 3D rendering of a scene; - The existing ""simple"" GUI SofaGLUT is not supported anymore and is based on a deprecated library (glut). This PR brings a simple GUI based on GLFW (a spiritual heir of Glut).; It only needs SofaGUICommon, SofaBaseVisual and Sofa.GL as dependencies.; Integration of GLFW is automatic (automatic fetching and integration with cmake), and linked statically (does not need a glfw.dll to be shipped with). This GUI is launchable with the standard runSofa (with the parameter ""-g glfw""), or can be used with a (provided) stand-alone executable (which needs much less dependencies than runSofa). Lastly, this GUI was designed to support multiple windows in the same time and multiple simulations. So when multiple simulations is possible is the future, it should be easy to modify the code to support this feature.; And multiple windows could be based on the fact having multiple Camera in the scene (feature not implemented yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2062
https://github.com/sofa-framework/sofa/pull/2062:1616,Testability,test,test,1616,"https://github.com/fredroy/SofaGLFW. Why?; - Bothersome to need Qt to have a 3D rendering of a scene; - The existing ""simple"" GUI SofaGLUT is not supported anymore and is based on a deprecated library (glut). This PR brings a simple GUI based on GLFW (a spiritual heir of Glut).; It only needs SofaGUICommon, SofaBaseVisual and Sofa.GL as dependencies.; Integration of GLFW is automatic (automatic fetching and integration with cmake), and linked statically (does not need a glfw.dll to be shipped with). This GUI is launchable with the standard runSofa (with the parameter ""-g glfw""), or can be used with a (provided) stand-alone executable (which needs much less dependencies than runSofa). Lastly, this GUI was designed to support multiple windows in the same time and multiple simulations. So when multiple simulations is possible is the future, it should be easy to modify the code to support this feature.; And multiple windows could be based on the fact having multiple Camera in the scene (feature not implemented yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2062
https://github.com/sofa-framework/sofa/pull/2062:118,Usability,simpl,simple,118,"https://github.com/fredroy/SofaGLFW. Why?; - Bothersome to need Qt to have a 3D rendering of a scene; - The existing ""simple"" GUI SofaGLUT is not supported anymore and is based on a deprecated library (glut). This PR brings a simple GUI based on GLFW (a spiritual heir of Glut).; It only needs SofaGUICommon, SofaBaseVisual and Sofa.GL as dependencies.; Integration of GLFW is automatic (automatic fetching and integration with cmake), and linked statically (does not need a glfw.dll to be shipped with). This GUI is launchable with the standard runSofa (with the parameter ""-g glfw""), or can be used with a (provided) stand-alone executable (which needs much less dependencies than runSofa). Lastly, this GUI was designed to support multiple windows in the same time and multiple simulations. So when multiple simulations is possible is the future, it should be easy to modify the code to support this feature.; And multiple windows could be based on the fact having multiple Camera in the scene (feature not implemented yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2062
https://github.com/sofa-framework/sofa/pull/2062:226,Usability,simpl,simple,226,"https://github.com/fredroy/SofaGLFW. Why?; - Bothersome to need Qt to have a 3D rendering of a scene; - The existing ""simple"" GUI SofaGLUT is not supported anymore and is based on a deprecated library (glut). This PR brings a simple GUI based on GLFW (a spiritual heir of Glut).; It only needs SofaGUICommon, SofaBaseVisual and Sofa.GL as dependencies.; Integration of GLFW is automatic (automatic fetching and integration with cmake), and linked statically (does not need a glfw.dll to be shipped with). This GUI is launchable with the standard runSofa (with the parameter ""-g glfw""), or can be used with a (provided) stand-alone executable (which needs much less dependencies than runSofa). Lastly, this GUI was designed to support multiple windows in the same time and multiple simulations. So when multiple simulations is possible is the future, it should be easy to modify the code to support this feature.; And multiple windows could be based on the fact having multiple Camera in the scene (feature not implemented yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2062
https://github.com/sofa-framework/sofa/pull/2064:690,Availability,failure,failures,690,"A small PR to remove unncessary includes, either because they are useless or classes can be forwarded.; Some _API keyword were incorrect as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2064
https://github.com/sofa-framework/sofa/pull/2064:739,Availability,failure,failures,739,"A small PR to remove unncessary includes, either because they are useless or classes can be forwarded.; Some _API keyword were incorrect as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2064
https://github.com/sofa-framework/sofa/pull/2064:309,Security,Certificate,Certificate,309,"A small PR to remove unncessary includes, either because they are useless or classes can be forwarded.; Some _API keyword were incorrect as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2064
https://github.com/sofa-framework/sofa/pull/2064:420,Security,certificate,certificate-of-origin-dco,420,"A small PR to remove unncessary includes, either because they are useless or classes can be forwarded.; Some _API keyword were incorrect as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2064
https://github.com/sofa-framework/sofa/pull/2064:685,Testability,test,test,685,"A small PR to remove unncessary includes, either because they are useless or classes can be forwarded.; Some _API keyword were incorrect as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2064
https://github.com/sofa-framework/sofa/pull/2064:734,Testability,test,test,734,"A small PR to remove unncessary includes, either because they are useless or classes can be forwarded.; Some _API keyword were incorrect as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2064
https://github.com/sofa-framework/sofa/pull/2065:49,Availability,error,errors,49,"Hello Everyone,. @ziqiu-zeng noticed compilation errors in the CGALPlugin with the latest changes in SOFA. Here are the quick fixes we came up together. Please let us know if anything else should be needed. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2065
https://github.com/sofa-framework/sofa/pull/2065:758,Availability,failure,failures,758,"Hello Everyone,. @ziqiu-zeng noticed compilation errors in the CGALPlugin with the latest changes in SOFA. Here are the quick fixes we came up together. Please let us know if anything else should be needed. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2065
https://github.com/sofa-framework/sofa/pull/2065:807,Availability,failure,failures,807,"Hello Everyone,. @ziqiu-zeng noticed compilation errors in the CGALPlugin with the latest changes in SOFA. Here are the quick fixes we came up together. Please let us know if anything else should be needed. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2065
https://github.com/sofa-framework/sofa/pull/2065:377,Security,Certificate,Certificate,377,"Hello Everyone,. @ziqiu-zeng noticed compilation errors in the CGALPlugin with the latest changes in SOFA. Here are the quick fixes we came up together. Please let us know if anything else should be needed. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2065
https://github.com/sofa-framework/sofa/pull/2065:488,Security,certificate,certificate-of-origin-dco,488,"Hello Everyone,. @ziqiu-zeng noticed compilation errors in the CGALPlugin with the latest changes in SOFA. Here are the quick fixes we came up together. Please let us know if anything else should be needed. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2065
https://github.com/sofa-framework/sofa/pull/2065:753,Testability,test,test,753,"Hello Everyone,. @ziqiu-zeng noticed compilation errors in the CGALPlugin with the latest changes in SOFA. Here are the quick fixes we came up together. Please let us know if anything else should be needed. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2065
https://github.com/sofa-framework/sofa/pull/2065:802,Testability,test,test,802,"Hello Everyone,. @ziqiu-zeng noticed compilation errors in the CGALPlugin with the latest changes in SOFA. Here are the quick fixes we came up together. Please let us know if anything else should be needed. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2065
https://github.com/sofa-framework/sofa/issues/2066:198,Deployability,update,updated,198,"The component `DefaultCollisionGroupManager` manipulates the scene graph structure, by creating nodes, and moving nodes or objects. It happens when there are contacts.; The scene graph is correctly updated, but the tree in the runSofa Qt panel is not correctly updated according to the new graph structure.; Here is an example:; ![Capture d’écran du 2021-05-06 23-25-18](https://user-images.githubusercontent.com/10572752/117368218-80efff80-aec3-11eb-9169-44da8211f75c.png); In the screenshot, we can see that the root node has only one child node in the Qt panel (`SaladBowl`), but it has two child nodes in its Data `child` (`SaladBowl` and `collision1`). `collision1` is created by `DefaultCollisionGroupManager` after a contact and should contain other nodes and objects.; The issue arises in `examples/Tutorials/Collision/MultipleObjectsDynamicCollisionGroups.scn` where I took the screenshot, but also in other scenes with a `DefaultCollisionGroupManager`. Note: `DefaultCollisionGroupManager` is optional in a scene.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2066
https://github.com/sofa-framework/sofa/issues/2066:261,Deployability,update,updated,261,"The component `DefaultCollisionGroupManager` manipulates the scene graph structure, by creating nodes, and moving nodes or objects. It happens when there are contacts.; The scene graph is correctly updated, but the tree in the runSofa Qt panel is not correctly updated according to the new graph structure.; Here is an example:; ![Capture d’écran du 2021-05-06 23-25-18](https://user-images.githubusercontent.com/10572752/117368218-80efff80-aec3-11eb-9169-44da8211f75c.png); In the screenshot, we can see that the root node has only one child node in the Qt panel (`SaladBowl`), but it has two child nodes in its Data `child` (`SaladBowl` and `collision1`). `collision1` is created by `DefaultCollisionGroupManager` after a contact and should contain other nodes and objects.; The issue arises in `examples/Tutorials/Collision/MultipleObjectsDynamicCollisionGroups.scn` where I took the screenshot, but also in other scenes with a `DefaultCollisionGroupManager`. Note: `DefaultCollisionGroupManager` is optional in a scene.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2066
https://github.com/sofa-framework/sofa/pull/2067:1539,Availability,failure,failures,1539,"In this PR, `map_ptr_stable_compare` is preferred over `unordered_map`, as it allows reproducible contact response. However, `unordered_map` is still a lot faster. #2047 leads to a crash in `examples/Components/collision/RayTraceCollision.scn`. I suspect the cause of this crash existed before #2047, and that #2047 revealed the crash by processing the contacts in a non-deterministic order. With the non-deterministic order, I can see that the crash does not happen always at the same current time step. It even happened that there was no crash. Currently, I am not able to fix the crash. But I will continue investigating. As a workaround I restore the stable map to have deterministic contacts. IMO, it hides the cause of the crash. In the end, I think the stable map should be proposed to the user (as a parameter?) by default. Let's see if we can accelerate it (perhaps with [Insimo version](https://github.com/InSimo/ISSofa/commits/issofa/framework/sofa/helper/map_ptr_stable_compare.h)). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2067
https://github.com/sofa-framework/sofa/pull/2067:1588,Availability,failure,failures,1588,"In this PR, `map_ptr_stable_compare` is preferred over `unordered_map`, as it allows reproducible contact response. However, `unordered_map` is still a lot faster. #2047 leads to a crash in `examples/Components/collision/RayTraceCollision.scn`. I suspect the cause of this crash existed before #2047, and that #2047 revealed the crash by processing the contacts in a non-deterministic order. With the non-deterministic order, I can see that the crash does not happen always at the same current time step. It even happened that there was no crash. Currently, I am not able to fix the crash. But I will continue investigating. As a workaround I restore the stable map to have deterministic contacts. IMO, it hides the cause of the crash. In the end, I think the stable map should be proposed to the user (as a parameter?) by default. Let's see if we can accelerate it (perhaps with [Insimo version](https://github.com/InSimo/ISSofa/commits/issofa/framework/sofa/helper/map_ptr_stable_compare.h)). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2067
https://github.com/sofa-framework/sofa/pull/2067:1158,Security,Certificate,Certificate,1158,"In this PR, `map_ptr_stable_compare` is preferred over `unordered_map`, as it allows reproducible contact response. However, `unordered_map` is still a lot faster. #2047 leads to a crash in `examples/Components/collision/RayTraceCollision.scn`. I suspect the cause of this crash existed before #2047, and that #2047 revealed the crash by processing the contacts in a non-deterministic order. With the non-deterministic order, I can see that the crash does not happen always at the same current time step. It even happened that there was no crash. Currently, I am not able to fix the crash. But I will continue investigating. As a workaround I restore the stable map to have deterministic contacts. IMO, it hides the cause of the crash. In the end, I think the stable map should be proposed to the user (as a parameter?) by default. Let's see if we can accelerate it (perhaps with [Insimo version](https://github.com/InSimo/ISSofa/commits/issofa/framework/sofa/helper/map_ptr_stable_compare.h)). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2067
https://github.com/sofa-framework/sofa/pull/2067:1269,Security,certificate,certificate-of-origin-dco,1269,"In this PR, `map_ptr_stable_compare` is preferred over `unordered_map`, as it allows reproducible contact response. However, `unordered_map` is still a lot faster. #2047 leads to a crash in `examples/Components/collision/RayTraceCollision.scn`. I suspect the cause of this crash existed before #2047, and that #2047 revealed the crash by processing the contacts in a non-deterministic order. With the non-deterministic order, I can see that the crash does not happen always at the same current time step. It even happened that there was no crash. Currently, I am not able to fix the crash. But I will continue investigating. As a workaround I restore the stable map to have deterministic contacts. IMO, it hides the cause of the crash. In the end, I think the stable map should be proposed to the user (as a parameter?) by default. Let's see if we can accelerate it (perhaps with [Insimo version](https://github.com/InSimo/ISSofa/commits/issofa/framework/sofa/helper/map_ptr_stable_compare.h)). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2067
https://github.com/sofa-framework/sofa/pull/2067:1534,Testability,test,test,1534,"In this PR, `map_ptr_stable_compare` is preferred over `unordered_map`, as it allows reproducible contact response. However, `unordered_map` is still a lot faster. #2047 leads to a crash in `examples/Components/collision/RayTraceCollision.scn`. I suspect the cause of this crash existed before #2047, and that #2047 revealed the crash by processing the contacts in a non-deterministic order. With the non-deterministic order, I can see that the crash does not happen always at the same current time step. It even happened that there was no crash. Currently, I am not able to fix the crash. But I will continue investigating. As a workaround I restore the stable map to have deterministic contacts. IMO, it hides the cause of the crash. In the end, I think the stable map should be proposed to the user (as a parameter?) by default. Let's see if we can accelerate it (perhaps with [Insimo version](https://github.com/InSimo/ISSofa/commits/issofa/framework/sofa/helper/map_ptr_stable_compare.h)). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2067
https://github.com/sofa-framework/sofa/pull/2067:1583,Testability,test,test,1583,"In this PR, `map_ptr_stable_compare` is preferred over `unordered_map`, as it allows reproducible contact response. However, `unordered_map` is still a lot faster. #2047 leads to a crash in `examples/Components/collision/RayTraceCollision.scn`. I suspect the cause of this crash existed before #2047, and that #2047 revealed the crash by processing the contacts in a non-deterministic order. With the non-deterministic order, I can see that the crash does not happen always at the same current time step. It even happened that there was no crash. Currently, I am not able to fix the crash. But I will continue investigating. As a workaround I restore the stable map to have deterministic contacts. IMO, it hides the cause of the crash. In the end, I think the stable map should be proposed to the user (as a parameter?) by default. Let's see if we can accelerate it (perhaps with [Insimo version](https://github.com/InSimo/ISSofa/commits/issofa/framework/sofa/helper/map_ptr_stable_compare.h)). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2067
https://github.com/sofa-framework/sofa/pull/2068:629,Availability,failure,failures,629,"Fix #2056 . May be fix rendering issues for people using VisualManagerSecondaryPass. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2068
https://github.com/sofa-framework/sofa/pull/2068:678,Availability,failure,failures,678,"Fix #2056 . May be fix rendering issues for people using VisualManagerSecondaryPass. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2068
https://github.com/sofa-framework/sofa/pull/2068:248,Security,Certificate,Certificate,248,"Fix #2056 . May be fix rendering issues for people using VisualManagerSecondaryPass. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2068
https://github.com/sofa-framework/sofa/pull/2068:359,Security,certificate,certificate-of-origin-dco,359,"Fix #2056 . May be fix rendering issues for people using VisualManagerSecondaryPass. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2068
https://github.com/sofa-framework/sofa/pull/2068:624,Testability,test,test,624,"Fix #2056 . May be fix rendering issues for people using VisualManagerSecondaryPass. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2068
https://github.com/sofa-framework/sofa/pull/2068:673,Testability,test,test,673,"Fix #2056 . May be fix rendering issues for people using VisualManagerSecondaryPass. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2068
https://github.com/sofa-framework/sofa/pull/2069:650,Availability,failure,failures,650,"Expanding Node (with the context menu) was leading to a stack overflow.; This PR corrects it. Fix #2057 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2069
https://github.com/sofa-framework/sofa/pull/2069:699,Availability,failure,failures,699,"Expanding Node (with the context menu) was leading to a stack overflow.; This PR corrects it. Fix #2057 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2069
https://github.com/sofa-framework/sofa/pull/2069:269,Security,Certificate,Certificate,269,"Expanding Node (with the context menu) was leading to a stack overflow.; This PR corrects it. Fix #2057 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2069
https://github.com/sofa-framework/sofa/pull/2069:380,Security,certificate,certificate-of-origin-dco,380,"Expanding Node (with the context menu) was leading to a stack overflow.; This PR corrects it. Fix #2057 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2069
https://github.com/sofa-framework/sofa/pull/2069:645,Testability,test,test,645,"Expanding Node (with the context menu) was leading to a stack overflow.; This PR corrects it. Fix #2057 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2069
https://github.com/sofa-framework/sofa/pull/2069:694,Testability,test,test,694,"Expanding Node (with the context menu) was leading to a stack overflow.; This PR corrects it. Fix #2057 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2069
https://github.com/sofa-framework/sofa/issues/2070:14,Modifiability,plugin,plugins,14,(applications/plugins/Geomagic/src/Geomagic/GeomagicDriver.cpp) (line 35): . Code:; #include <Geomagic/GeomagicVisualModel.h>; #include thread; #include chrono . #include chrono // <- twice; #include thread // <- twice,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2070
https://github.com/sofa-framework/sofa/issues/2071:55,Performance,load,load,55,"# Example 1; Steps to reproduce:; 1. run `runSofa` and load `examples/Demos/caduceus.scn`; 2. `File` -> `Save as...`; 3. Save a new file; 4. Notice that some Data are missing from objects. # Example 2; Steps to reproduce:; 1. run `runSofa` and load `examples/Components/collision/RayTraceCollision.scn`; 2. Click on `Step` (this performs a time step. The graph structure is then modified); 2. `File` -> `Save as...`; 3. Save a new file; 4. Notice that some Data are missing from objects, even for the field `name`. # Hint; All Data are visited and there is a condition to write it or not:; https://github.com/sofa-framework/sofa/blob/5ce03e67e2b31ee1e53277ac33cb35e7598944ac/SofaKernel/modules/SofaCore/src/sofa/core/objectmodel/Base.cpp#L627. This condition filters too many Data. If I remove the condition `field->isPersistent()`, too much Data are written (for example including the positions loaded from a mesh file). A more clever condition must be found.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2071
https://github.com/sofa-framework/sofa/issues/2071:244,Performance,load,load,244,"# Example 1; Steps to reproduce:; 1. run `runSofa` and load `examples/Demos/caduceus.scn`; 2. `File` -> `Save as...`; 3. Save a new file; 4. Notice that some Data are missing from objects. # Example 2; Steps to reproduce:; 1. run `runSofa` and load `examples/Components/collision/RayTraceCollision.scn`; 2. Click on `Step` (this performs a time step. The graph structure is then modified); 2. `File` -> `Save as...`; 3. Save a new file; 4. Notice that some Data are missing from objects, even for the field `name`. # Hint; All Data are visited and there is a condition to write it or not:; https://github.com/sofa-framework/sofa/blob/5ce03e67e2b31ee1e53277ac33cb35e7598944ac/SofaKernel/modules/SofaCore/src/sofa/core/objectmodel/Base.cpp#L627. This condition filters too many Data. If I remove the condition `field->isPersistent()`, too much Data are written (for example including the positions loaded from a mesh file). A more clever condition must be found.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2071
https://github.com/sofa-framework/sofa/issues/2071:329,Performance,perform,performs,329,"# Example 1; Steps to reproduce:; 1. run `runSofa` and load `examples/Demos/caduceus.scn`; 2. `File` -> `Save as...`; 3. Save a new file; 4. Notice that some Data are missing from objects. # Example 2; Steps to reproduce:; 1. run `runSofa` and load `examples/Components/collision/RayTraceCollision.scn`; 2. Click on `Step` (this performs a time step. The graph structure is then modified); 2. `File` -> `Save as...`; 3. Save a new file; 4. Notice that some Data are missing from objects, even for the field `name`. # Hint; All Data are visited and there is a condition to write it or not:; https://github.com/sofa-framework/sofa/blob/5ce03e67e2b31ee1e53277ac33cb35e7598944ac/SofaKernel/modules/SofaCore/src/sofa/core/objectmodel/Base.cpp#L627. This condition filters too many Data. If I remove the condition `field->isPersistent()`, too much Data are written (for example including the positions loaded from a mesh file). A more clever condition must be found.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2071
https://github.com/sofa-framework/sofa/issues/2071:896,Performance,load,loaded,896,"# Example 1; Steps to reproduce:; 1. run `runSofa` and load `examples/Demos/caduceus.scn`; 2. `File` -> `Save as...`; 3. Save a new file; 4. Notice that some Data are missing from objects. # Example 2; Steps to reproduce:; 1. run `runSofa` and load `examples/Components/collision/RayTraceCollision.scn`; 2. Click on `Step` (this performs a time step. The graph structure is then modified); 2. `File` -> `Save as...`; 3. Save a new file; 4. Notice that some Data are missing from objects, even for the field `name`. # Hint; All Data are visited and there is a condition to write it or not:; https://github.com/sofa-framework/sofa/blob/5ce03e67e2b31ee1e53277ac33cb35e7598944ac/SofaKernel/modules/SofaCore/src/sofa/core/objectmodel/Base.cpp#L627. This condition filters too many Data. If I remove the condition `field->isPersistent()`, too much Data are written (for example including the positions loaded from a mesh file). A more clever condition must be found.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2071
https://github.com/sofa-framework/sofa/pull/2072:562,Availability,failure,failures,562,"Fix issue #2070 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2072
https://github.com/sofa-framework/sofa/pull/2072:611,Availability,failure,failures,611,"Fix issue #2070 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2072
https://github.com/sofa-framework/sofa/pull/2072:181,Security,Certificate,Certificate,181,"Fix issue #2070 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2072
https://github.com/sofa-framework/sofa/pull/2072:292,Security,certificate,certificate-of-origin-dco,292,"Fix issue #2070 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2072
https://github.com/sofa-framework/sofa/pull/2072:557,Testability,test,test,557,"Fix issue #2070 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2072
https://github.com/sofa-framework/sofa/pull/2072:606,Testability,test,test,606,"Fix issue #2070 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2072
https://github.com/sofa-framework/sofa/pull/2073:1032,Availability,failure,failures,1032,"First step to remove OBBMode/CapsuleModel from SofaBaseCollision, as those primitives are not really deemed as ""basic"".; They are instead displaced into SofaMiscCollision, with other custom primitives. The code in DiscreteIntersection, etc is much clearer in this way, and leads to less cluttering in dependencies. Next steps:; - refactor Intr* utilities classes; - refactor FixParticlePerformer; - finally move OBBModel and CapsuleModel (and their sidecar files) into SofaMiscCollision. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2073
https://github.com/sofa-framework/sofa/pull/2073:1081,Availability,failure,failures,1081,"First step to remove OBBMode/CapsuleModel from SofaBaseCollision, as those primitives are not really deemed as ""basic"".; They are instead displaced into SofaMiscCollision, with other custom primitives. The code in DiscreteIntersection, etc is much clearer in this way, and leads to less cluttering in dependencies. Next steps:; - refactor Intr* utilities classes; - refactor FixParticlePerformer; - finally move OBBModel and CapsuleModel (and their sidecar files) into SofaMiscCollision. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2073
https://github.com/sofa-framework/sofa/pull/2073:301,Integrability,depend,dependencies,301,"First step to remove OBBMode/CapsuleModel from SofaBaseCollision, as those primitives are not really deemed as ""basic"".; They are instead displaced into SofaMiscCollision, with other custom primitives. The code in DiscreteIntersection, etc is much clearer in this way, and leads to less cluttering in dependencies. Next steps:; - refactor Intr* utilities classes; - refactor FixParticlePerformer; - finally move OBBModel and CapsuleModel (and their sidecar files) into SofaMiscCollision. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2073
https://github.com/sofa-framework/sofa/pull/2073:330,Modifiability,refactor,refactor,330,"First step to remove OBBMode/CapsuleModel from SofaBaseCollision, as those primitives are not really deemed as ""basic"".; They are instead displaced into SofaMiscCollision, with other custom primitives. The code in DiscreteIntersection, etc is much clearer in this way, and leads to less cluttering in dependencies. Next steps:; - refactor Intr* utilities classes; - refactor FixParticlePerformer; - finally move OBBModel and CapsuleModel (and their sidecar files) into SofaMiscCollision. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2073
https://github.com/sofa-framework/sofa/pull/2073:366,Modifiability,refactor,refactor,366,"First step to remove OBBMode/CapsuleModel from SofaBaseCollision, as those primitives are not really deemed as ""basic"".; They are instead displaced into SofaMiscCollision, with other custom primitives. The code in DiscreteIntersection, etc is much clearer in this way, and leads to less cluttering in dependencies. Next steps:; - refactor Intr* utilities classes; - refactor FixParticlePerformer; - finally move OBBModel and CapsuleModel (and their sidecar files) into SofaMiscCollision. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2073
https://github.com/sofa-framework/sofa/pull/2073:651,Security,Certificate,Certificate,651,"First step to remove OBBMode/CapsuleModel from SofaBaseCollision, as those primitives are not really deemed as ""basic"".; They are instead displaced into SofaMiscCollision, with other custom primitives. The code in DiscreteIntersection, etc is much clearer in this way, and leads to less cluttering in dependencies. Next steps:; - refactor Intr* utilities classes; - refactor FixParticlePerformer; - finally move OBBModel and CapsuleModel (and their sidecar files) into SofaMiscCollision. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2073
https://github.com/sofa-framework/sofa/pull/2073:762,Security,certificate,certificate-of-origin-dco,762,"First step to remove OBBMode/CapsuleModel from SofaBaseCollision, as those primitives are not really deemed as ""basic"".; They are instead displaced into SofaMiscCollision, with other custom primitives. The code in DiscreteIntersection, etc is much clearer in this way, and leads to less cluttering in dependencies. Next steps:; - refactor Intr* utilities classes; - refactor FixParticlePerformer; - finally move OBBModel and CapsuleModel (and their sidecar files) into SofaMiscCollision. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2073
https://github.com/sofa-framework/sofa/pull/2073:1027,Testability,test,test,1027,"First step to remove OBBMode/CapsuleModel from SofaBaseCollision, as those primitives are not really deemed as ""basic"".; They are instead displaced into SofaMiscCollision, with other custom primitives. The code in DiscreteIntersection, etc is much clearer in this way, and leads to less cluttering in dependencies. Next steps:; - refactor Intr* utilities classes; - refactor FixParticlePerformer; - finally move OBBModel and CapsuleModel (and their sidecar files) into SofaMiscCollision. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2073
https://github.com/sofa-framework/sofa/pull/2073:1076,Testability,test,test,1076,"First step to remove OBBMode/CapsuleModel from SofaBaseCollision, as those primitives are not really deemed as ""basic"".; They are instead displaced into SofaMiscCollision, with other custom primitives. The code in DiscreteIntersection, etc is much clearer in this way, and leads to less cluttering in dependencies. Next steps:; - refactor Intr* utilities classes; - refactor FixParticlePerformer; - finally move OBBModel and CapsuleModel (and their sidecar files) into SofaMiscCollision. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2073
https://github.com/sofa-framework/sofa/pull/2073:248,Usability,clear,clearer,248,"First step to remove OBBMode/CapsuleModel from SofaBaseCollision, as those primitives are not really deemed as ""basic"".; They are instead displaced into SofaMiscCollision, with other custom primitives. The code in DiscreteIntersection, etc is much clearer in this way, and leads to less cluttering in dependencies. Next steps:; - refactor Intr* utilities classes; - refactor FixParticlePerformer; - finally move OBBModel and CapsuleModel (and their sidecar files) into SofaMiscCollision. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2073
https://github.com/sofa-framework/sofa/issues/2074:598,Usability,clear,clear,598,"I am having a look at the CGLinearSolver and the ShewchukPCGLinearSolver. The purpose is to add a preconditioner to my system and I am following the algorithm from https://www.cs.ubc.ca/~ascher/papers/ab.pdf. Lets ignore for now the preconditioner and look the CGLinearSolver (or the Shewchuk but without preconditioner). The `r` vector at initialization should be S * (b - Ax). By looking at the code, I can see sofa does . CGLinearSolver.inl; ```; /// Compute the initial residual r; if( f_warmStart.getValue() ); {; r = M * x;; r.eq( b, r, -1.0 ); // initial residual r = b - Ax;; }; else; {; x.clear();; r = b; // initial residual; }; ```. or; ShewchukPCGLinearSolver; ```; r = M * x;; cgstep_beta(r,b,-1);// r = -1 * r + b = b - (M * x); ```; r = M*x is correct, since the operation is doing `mop.projectResponse`, but here `b` is not projected afaik. Where is this projection happening? . Later, in the ShewchukPCGLinearSolver, we have this. ```; if (apply_precond) {; sofa::helper::AdvancedTimer::stepBegin(""PCGLinearSolver::apply Precond"");; m_preconditioners->setSystemLHVector(w);; m_preconditioners->setSystemRHVector(r);; m_preconditioners->solveSystem();. sofa::helper::AdvancedTimer::stepEnd(""PCGLinearSolver::apply Precond"");; } else {; w = r;; }; double r_norm = r.dot(w);; graph_error.push_back(r_norm/b_norm);. unsigned iter=1;; while ((iter <= f_maxIter.getValue()) && (r_norm > tol)) {; s = M * w;; ```; which is essentially implementing `w = P^{-1} * r`. Then, we use that w to multiply it by M (s = M*w), which as said before, includes the projection. This is essentially the following computation (s = S * M * P^{-1} * r), which is different from what the paper says (s = S * M * S * P^{-1} * r). Is this a bug or am I missing something?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2074
https://github.com/sofa-framework/sofa/issues/2075:49,Availability,error,error,49,Can someone help me? I am stuck in the following error when compiling SOFA with CGAL plugin:. FAILED: applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o ; /usr/bin/g++ -DCGALPlugin_EXPORTS -DCGAL_MESH_3_VERBOSE=0 -DNDEBUG -DSOFA_BUILD_CGALPLUGIN -I../applications/plugins/CGALPlugin/src -Iinclude/CGALPlugin -I../SofaKernel/modules/SofaCore/src -Iinclude/Sofa.Core -I../SofaKernel/modules/SofaHelper/src -Iinclude/Sofa.Helper -I../SofaKernel/modules/Sofa.Config/src -Iinclude/Sofa.Config -I../SofaKernel/modules/Sofa.Type/src -Iinclude/Sofa.Type -I../SofaKernel/modules/Sofa.Compat/src -Iinclude/Sofa.Compat -I../SofaKernel/modules/Sofa.Topology/src -Iinclude/Sofa.Topology -I../SofaKernel/modules/Sofa.Geometry/src -Iinclude/Sofa.Geometry -I../SofaKernel/modules/SofaDefaultType/src -Iinclude/Sofa.DefaultType -I../SofaKernel/modules/SofaSimulationCommon/src -Iinclude/SofaSimulationCommon -I../SofaKernel/modules/SofaSimulationCore/src -Iinclude/Sofa.SimulationCore -isystem ../SofaKernel/extlibs/json -isystem /usr/include/eigen3 -O3 -DNDEBUG -fPIC -Wno-attributes -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -Wall -W -Wno-padded -pthread -frounding-math -std=gnu++17 -MD -MT applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o -MF applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o.d -o applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o -c ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.cpp; In file included from ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.cpp:25:; ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.inl:25:10: fatal error: sofa/gl/template.h: Arquivo ou diretório inexistente; 25 | #include <sofa/gl/template.h>; | ^~~~~~~~~~~~~~~~~~~~; compilation terminated.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2075
https://github.com/sofa-framework/sofa/issues/2075:1770,Availability,error,error,1770,Can someone help me? I am stuck in the following error when compiling SOFA with CGAL plugin:. FAILED: applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o ; /usr/bin/g++ -DCGALPlugin_EXPORTS -DCGAL_MESH_3_VERBOSE=0 -DNDEBUG -DSOFA_BUILD_CGALPLUGIN -I../applications/plugins/CGALPlugin/src -Iinclude/CGALPlugin -I../SofaKernel/modules/SofaCore/src -Iinclude/Sofa.Core -I../SofaKernel/modules/SofaHelper/src -Iinclude/Sofa.Helper -I../SofaKernel/modules/Sofa.Config/src -Iinclude/Sofa.Config -I../SofaKernel/modules/Sofa.Type/src -Iinclude/Sofa.Type -I../SofaKernel/modules/Sofa.Compat/src -Iinclude/Sofa.Compat -I../SofaKernel/modules/Sofa.Topology/src -Iinclude/Sofa.Topology -I../SofaKernel/modules/Sofa.Geometry/src -Iinclude/Sofa.Geometry -I../SofaKernel/modules/SofaDefaultType/src -Iinclude/Sofa.DefaultType -I../SofaKernel/modules/SofaSimulationCommon/src -Iinclude/SofaSimulationCommon -I../SofaKernel/modules/SofaSimulationCore/src -Iinclude/Sofa.SimulationCore -isystem ../SofaKernel/extlibs/json -isystem /usr/include/eigen3 -O3 -DNDEBUG -fPIC -Wno-attributes -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -Wall -W -Wno-padded -pthread -frounding-math -std=gnu++17 -MD -MT applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o -MF applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o.d -o applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o -c ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.cpp; In file included from ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.cpp:25:; ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.inl:25:10: fatal error: sofa/gl/template.h: Arquivo ou diretório inexistente; 25 | #include <sofa/gl/template.h>; | ^~~~~~~~~~~~~~~~~~~~; compilation terminated.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2075
https://github.com/sofa-framework/sofa/issues/2075:85,Modifiability,plugin,plugin,85,Can someone help me? I am stuck in the following error when compiling SOFA with CGAL plugin:. FAILED: applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o ; /usr/bin/g++ -DCGALPlugin_EXPORTS -DCGAL_MESH_3_VERBOSE=0 -DNDEBUG -DSOFA_BUILD_CGALPLUGIN -I../applications/plugins/CGALPlugin/src -Iinclude/CGALPlugin -I../SofaKernel/modules/SofaCore/src -Iinclude/Sofa.Core -I../SofaKernel/modules/SofaHelper/src -Iinclude/Sofa.Helper -I../SofaKernel/modules/Sofa.Config/src -Iinclude/Sofa.Config -I../SofaKernel/modules/Sofa.Type/src -Iinclude/Sofa.Type -I../SofaKernel/modules/Sofa.Compat/src -Iinclude/Sofa.Compat -I../SofaKernel/modules/Sofa.Topology/src -Iinclude/Sofa.Topology -I../SofaKernel/modules/Sofa.Geometry/src -Iinclude/Sofa.Geometry -I../SofaKernel/modules/SofaDefaultType/src -Iinclude/Sofa.DefaultType -I../SofaKernel/modules/SofaSimulationCommon/src -Iinclude/SofaSimulationCommon -I../SofaKernel/modules/SofaSimulationCore/src -Iinclude/Sofa.SimulationCore -isystem ../SofaKernel/extlibs/json -isystem /usr/include/eigen3 -O3 -DNDEBUG -fPIC -Wno-attributes -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -Wall -W -Wno-padded -pthread -frounding-math -std=gnu++17 -MD -MT applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o -MF applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o.d -o applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o -c ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.cpp; In file included from ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.cpp:25:; ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.inl:25:10: fatal error: sofa/gl/template.h: Arquivo ou diretório inexistente; 25 | #include <sofa/gl/template.h>; | ^~~~~~~~~~~~~~~~~~~~; compilation terminated.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2075
https://github.com/sofa-framework/sofa/issues/2075:115,Modifiability,plugin,plugins,115,Can someone help me? I am stuck in the following error when compiling SOFA with CGAL plugin:. FAILED: applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o ; /usr/bin/g++ -DCGALPlugin_EXPORTS -DCGAL_MESH_3_VERBOSE=0 -DNDEBUG -DSOFA_BUILD_CGALPLUGIN -I../applications/plugins/CGALPlugin/src -Iinclude/CGALPlugin -I../SofaKernel/modules/SofaCore/src -Iinclude/Sofa.Core -I../SofaKernel/modules/SofaHelper/src -Iinclude/Sofa.Helper -I../SofaKernel/modules/Sofa.Config/src -Iinclude/Sofa.Config -I../SofaKernel/modules/Sofa.Type/src -Iinclude/Sofa.Type -I../SofaKernel/modules/Sofa.Compat/src -Iinclude/Sofa.Compat -I../SofaKernel/modules/Sofa.Topology/src -Iinclude/Sofa.Topology -I../SofaKernel/modules/Sofa.Geometry/src -Iinclude/Sofa.Geometry -I../SofaKernel/modules/SofaDefaultType/src -Iinclude/Sofa.DefaultType -I../SofaKernel/modules/SofaSimulationCommon/src -Iinclude/SofaSimulationCommon -I../SofaKernel/modules/SofaSimulationCore/src -Iinclude/Sofa.SimulationCore -isystem ../SofaKernel/extlibs/json -isystem /usr/include/eigen3 -O3 -DNDEBUG -fPIC -Wno-attributes -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -Wall -W -Wno-padded -pthread -frounding-math -std=gnu++17 -MD -MT applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o -MF applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o.d -o applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o -c ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.cpp; In file included from ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.cpp:25:; ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.inl:25:10: fatal error: sofa/gl/template.h: Arquivo ou diretório inexistente; 25 | #include <sofa/gl/template.h>; | ^~~~~~~~~~~~~~~~~~~~; compilation terminated.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2075
https://github.com/sofa-framework/sofa/issues/2075:305,Modifiability,plugin,plugins,305,Can someone help me? I am stuck in the following error when compiling SOFA with CGAL plugin:. FAILED: applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o ; /usr/bin/g++ -DCGALPlugin_EXPORTS -DCGAL_MESH_3_VERBOSE=0 -DNDEBUG -DSOFA_BUILD_CGALPLUGIN -I../applications/plugins/CGALPlugin/src -Iinclude/CGALPlugin -I../SofaKernel/modules/SofaCore/src -Iinclude/Sofa.Core -I../SofaKernel/modules/SofaHelper/src -Iinclude/Sofa.Helper -I../SofaKernel/modules/Sofa.Config/src -Iinclude/Sofa.Config -I../SofaKernel/modules/Sofa.Type/src -Iinclude/Sofa.Type -I../SofaKernel/modules/Sofa.Compat/src -Iinclude/Sofa.Compat -I../SofaKernel/modules/Sofa.Topology/src -Iinclude/Sofa.Topology -I../SofaKernel/modules/Sofa.Geometry/src -Iinclude/Sofa.Geometry -I../SofaKernel/modules/SofaDefaultType/src -Iinclude/Sofa.DefaultType -I../SofaKernel/modules/SofaSimulationCommon/src -Iinclude/SofaSimulationCommon -I../SofaKernel/modules/SofaSimulationCore/src -Iinclude/Sofa.SimulationCore -isystem ../SofaKernel/extlibs/json -isystem /usr/include/eigen3 -O3 -DNDEBUG -fPIC -Wno-attributes -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -Wall -W -Wno-padded -pthread -frounding-math -std=gnu++17 -MD -MT applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o -MF applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o.d -o applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o -c ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.cpp; In file included from ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.cpp:25:; ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.inl:25:10: fatal error: sofa/gl/template.h: Arquivo ou diretório inexistente; 25 | #include <sofa/gl/template.h>; | ^~~~~~~~~~~~~~~~~~~~; compilation terminated.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2075
https://github.com/sofa-framework/sofa/issues/2075:496,Modifiability,Config,Config,496,Can someone help me? I am stuck in the following error when compiling SOFA with CGAL plugin:. FAILED: applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o ; /usr/bin/g++ -DCGALPlugin_EXPORTS -DCGAL_MESH_3_VERBOSE=0 -DNDEBUG -DSOFA_BUILD_CGALPLUGIN -I../applications/plugins/CGALPlugin/src -Iinclude/CGALPlugin -I../SofaKernel/modules/SofaCore/src -Iinclude/Sofa.Core -I../SofaKernel/modules/SofaHelper/src -Iinclude/Sofa.Helper -I../SofaKernel/modules/Sofa.Config/src -Iinclude/Sofa.Config -I../SofaKernel/modules/Sofa.Type/src -Iinclude/Sofa.Type -I../SofaKernel/modules/Sofa.Compat/src -Iinclude/Sofa.Compat -I../SofaKernel/modules/Sofa.Topology/src -Iinclude/Sofa.Topology -I../SofaKernel/modules/Sofa.Geometry/src -Iinclude/Sofa.Geometry -I../SofaKernel/modules/SofaDefaultType/src -Iinclude/Sofa.DefaultType -I../SofaKernel/modules/SofaSimulationCommon/src -Iinclude/SofaSimulationCommon -I../SofaKernel/modules/SofaSimulationCore/src -Iinclude/Sofa.SimulationCore -isystem ../SofaKernel/extlibs/json -isystem /usr/include/eigen3 -O3 -DNDEBUG -fPIC -Wno-attributes -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -Wall -W -Wno-padded -pthread -frounding-math -std=gnu++17 -MD -MT applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o -MF applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o.d -o applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o -c ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.cpp; In file included from ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.cpp:25:; ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.inl:25:10: fatal error: sofa/gl/template.h: Arquivo ou diretório inexistente; 25 | #include <sofa/gl/template.h>; | ^~~~~~~~~~~~~~~~~~~~; compilation terminated.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2075
https://github.com/sofa-framework/sofa/issues/2075:522,Modifiability,Config,Config,522,Can someone help me? I am stuck in the following error when compiling SOFA with CGAL plugin:. FAILED: applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o ; /usr/bin/g++ -DCGALPlugin_EXPORTS -DCGAL_MESH_3_VERBOSE=0 -DNDEBUG -DSOFA_BUILD_CGALPLUGIN -I../applications/plugins/CGALPlugin/src -Iinclude/CGALPlugin -I../SofaKernel/modules/SofaCore/src -Iinclude/Sofa.Core -I../SofaKernel/modules/SofaHelper/src -Iinclude/Sofa.Helper -I../SofaKernel/modules/Sofa.Config/src -Iinclude/Sofa.Config -I../SofaKernel/modules/Sofa.Type/src -Iinclude/Sofa.Type -I../SofaKernel/modules/Sofa.Compat/src -Iinclude/Sofa.Compat -I../SofaKernel/modules/Sofa.Topology/src -Iinclude/Sofa.Topology -I../SofaKernel/modules/Sofa.Geometry/src -Iinclude/Sofa.Geometry -I../SofaKernel/modules/SofaDefaultType/src -Iinclude/Sofa.DefaultType -I../SofaKernel/modules/SofaSimulationCommon/src -Iinclude/SofaSimulationCommon -I../SofaKernel/modules/SofaSimulationCore/src -Iinclude/Sofa.SimulationCore -isystem ../SofaKernel/extlibs/json -isystem /usr/include/eigen3 -O3 -DNDEBUG -fPIC -Wno-attributes -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -Wall -W -Wno-padded -pthread -frounding-math -std=gnu++17 -MD -MT applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o -MF applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o.d -o applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o -c ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.cpp; In file included from ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.cpp:25:; ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.inl:25:10: fatal error: sofa/gl/template.h: Arquivo ou diretório inexistente; 25 | #include <sofa/gl/template.h>; | ^~~~~~~~~~~~~~~~~~~~; compilation terminated.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2075
https://github.com/sofa-framework/sofa/issues/2075:1253,Modifiability,plugin,plugins,1253,Can someone help me? I am stuck in the following error when compiling SOFA with CGAL plugin:. FAILED: applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o ; /usr/bin/g++ -DCGALPlugin_EXPORTS -DCGAL_MESH_3_VERBOSE=0 -DNDEBUG -DSOFA_BUILD_CGALPLUGIN -I../applications/plugins/CGALPlugin/src -Iinclude/CGALPlugin -I../SofaKernel/modules/SofaCore/src -Iinclude/Sofa.Core -I../SofaKernel/modules/SofaHelper/src -Iinclude/Sofa.Helper -I../SofaKernel/modules/Sofa.Config/src -Iinclude/Sofa.Config -I../SofaKernel/modules/Sofa.Type/src -Iinclude/Sofa.Type -I../SofaKernel/modules/Sofa.Compat/src -Iinclude/Sofa.Compat -I../SofaKernel/modules/Sofa.Topology/src -Iinclude/Sofa.Topology -I../SofaKernel/modules/Sofa.Geometry/src -Iinclude/Sofa.Geometry -I../SofaKernel/modules/SofaDefaultType/src -Iinclude/Sofa.DefaultType -I../SofaKernel/modules/SofaSimulationCommon/src -Iinclude/SofaSimulationCommon -I../SofaKernel/modules/SofaSimulationCore/src -Iinclude/Sofa.SimulationCore -isystem ../SofaKernel/extlibs/json -isystem /usr/include/eigen3 -O3 -DNDEBUG -fPIC -Wno-attributes -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -Wall -W -Wno-padded -pthread -frounding-math -std=gnu++17 -MD -MT applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o -MF applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o.d -o applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o -c ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.cpp; In file included from ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.cpp:25:; ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.inl:25:10: fatal error: sofa/gl/template.h: Arquivo ou diretório inexistente; 25 | #include <sofa/gl/template.h>; | ^~~~~~~~~~~~~~~~~~~~; compilation terminated.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2075
https://github.com/sofa-framework/sofa/issues/2075:1349,Modifiability,plugin,plugins,1349,Can someone help me? I am stuck in the following error when compiling SOFA with CGAL plugin:. FAILED: applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o ; /usr/bin/g++ -DCGALPlugin_EXPORTS -DCGAL_MESH_3_VERBOSE=0 -DNDEBUG -DSOFA_BUILD_CGALPLUGIN -I../applications/plugins/CGALPlugin/src -Iinclude/CGALPlugin -I../SofaKernel/modules/SofaCore/src -Iinclude/Sofa.Core -I../SofaKernel/modules/SofaHelper/src -Iinclude/Sofa.Helper -I../SofaKernel/modules/Sofa.Config/src -Iinclude/Sofa.Config -I../SofaKernel/modules/Sofa.Type/src -Iinclude/Sofa.Type -I../SofaKernel/modules/Sofa.Compat/src -Iinclude/Sofa.Compat -I../SofaKernel/modules/Sofa.Topology/src -Iinclude/Sofa.Topology -I../SofaKernel/modules/Sofa.Geometry/src -Iinclude/Sofa.Geometry -I../SofaKernel/modules/SofaDefaultType/src -Iinclude/Sofa.DefaultType -I../SofaKernel/modules/SofaSimulationCommon/src -Iinclude/SofaSimulationCommon -I../SofaKernel/modules/SofaSimulationCore/src -Iinclude/Sofa.SimulationCore -isystem ../SofaKernel/extlibs/json -isystem /usr/include/eigen3 -O3 -DNDEBUG -fPIC -Wno-attributes -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -Wall -W -Wno-padded -pthread -frounding-math -std=gnu++17 -MD -MT applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o -MF applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o.d -o applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o -c ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.cpp; In file included from ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.cpp:25:; ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.inl:25:10: fatal error: sofa/gl/template.h: Arquivo ou diretório inexistente; 25 | #include <sofa/gl/template.h>; | ^~~~~~~~~~~~~~~~~~~~; compilation terminated.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2075
https://github.com/sofa-framework/sofa/issues/2075:1446,Modifiability,plugin,plugins,1446,Can someone help me? I am stuck in the following error when compiling SOFA with CGAL plugin:. FAILED: applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o ; /usr/bin/g++ -DCGALPlugin_EXPORTS -DCGAL_MESH_3_VERBOSE=0 -DNDEBUG -DSOFA_BUILD_CGALPLUGIN -I../applications/plugins/CGALPlugin/src -Iinclude/CGALPlugin -I../SofaKernel/modules/SofaCore/src -Iinclude/Sofa.Core -I../SofaKernel/modules/SofaHelper/src -Iinclude/Sofa.Helper -I../SofaKernel/modules/Sofa.Config/src -Iinclude/Sofa.Config -I../SofaKernel/modules/Sofa.Type/src -Iinclude/Sofa.Type -I../SofaKernel/modules/Sofa.Compat/src -Iinclude/Sofa.Compat -I../SofaKernel/modules/Sofa.Topology/src -Iinclude/Sofa.Topology -I../SofaKernel/modules/Sofa.Geometry/src -Iinclude/Sofa.Geometry -I../SofaKernel/modules/SofaDefaultType/src -Iinclude/Sofa.DefaultType -I../SofaKernel/modules/SofaSimulationCommon/src -Iinclude/SofaSimulationCommon -I../SofaKernel/modules/SofaSimulationCore/src -Iinclude/Sofa.SimulationCore -isystem ../SofaKernel/extlibs/json -isystem /usr/include/eigen3 -O3 -DNDEBUG -fPIC -Wno-attributes -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -Wall -W -Wno-padded -pthread -frounding-math -std=gnu++17 -MD -MT applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o -MF applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o.d -o applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o -c ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.cpp; In file included from ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.cpp:25:; ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.inl:25:10: fatal error: sofa/gl/template.h: Arquivo ou diretório inexistente; 25 | #include <sofa/gl/template.h>; | ^~~~~~~~~~~~~~~~~~~~; compilation terminated.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2075
https://github.com/sofa-framework/sofa/issues/2075:1544,Modifiability,plugin,plugins,1544,Can someone help me? I am stuck in the following error when compiling SOFA with CGAL plugin:. FAILED: applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o ; /usr/bin/g++ -DCGALPlugin_EXPORTS -DCGAL_MESH_3_VERBOSE=0 -DNDEBUG -DSOFA_BUILD_CGALPLUGIN -I../applications/plugins/CGALPlugin/src -Iinclude/CGALPlugin -I../SofaKernel/modules/SofaCore/src -Iinclude/Sofa.Core -I../SofaKernel/modules/SofaHelper/src -Iinclude/Sofa.Helper -I../SofaKernel/modules/Sofa.Config/src -Iinclude/Sofa.Config -I../SofaKernel/modules/Sofa.Type/src -Iinclude/Sofa.Type -I../SofaKernel/modules/Sofa.Compat/src -Iinclude/Sofa.Compat -I../SofaKernel/modules/Sofa.Topology/src -Iinclude/Sofa.Topology -I../SofaKernel/modules/Sofa.Geometry/src -Iinclude/Sofa.Geometry -I../SofaKernel/modules/SofaDefaultType/src -Iinclude/Sofa.DefaultType -I../SofaKernel/modules/SofaSimulationCommon/src -Iinclude/SofaSimulationCommon -I../SofaKernel/modules/SofaSimulationCore/src -Iinclude/Sofa.SimulationCore -isystem ../SofaKernel/extlibs/json -isystem /usr/include/eigen3 -O3 -DNDEBUG -fPIC -Wno-attributes -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -Wall -W -Wno-padded -pthread -frounding-math -std=gnu++17 -MD -MT applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o -MF applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o.d -o applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o -c ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.cpp; In file included from ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.cpp:25:; ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.inl:25:10: fatal error: sofa/gl/template.h: Arquivo ou diretório inexistente; 25 | #include <sofa/gl/template.h>; | ^~~~~~~~~~~~~~~~~~~~; compilation terminated.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2075
https://github.com/sofa-framework/sofa/issues/2075:1634,Modifiability,plugin,plugins,1634,Can someone help me? I am stuck in the following error when compiling SOFA with CGAL plugin:. FAILED: applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o ; /usr/bin/g++ -DCGALPlugin_EXPORTS -DCGAL_MESH_3_VERBOSE=0 -DNDEBUG -DSOFA_BUILD_CGALPLUGIN -I../applications/plugins/CGALPlugin/src -Iinclude/CGALPlugin -I../SofaKernel/modules/SofaCore/src -Iinclude/Sofa.Core -I../SofaKernel/modules/SofaHelper/src -Iinclude/Sofa.Helper -I../SofaKernel/modules/Sofa.Config/src -Iinclude/Sofa.Config -I../SofaKernel/modules/Sofa.Type/src -Iinclude/Sofa.Type -I../SofaKernel/modules/Sofa.Compat/src -Iinclude/Sofa.Compat -I../SofaKernel/modules/Sofa.Topology/src -Iinclude/Sofa.Topology -I../SofaKernel/modules/Sofa.Geometry/src -Iinclude/Sofa.Geometry -I../SofaKernel/modules/SofaDefaultType/src -Iinclude/Sofa.DefaultType -I../SofaKernel/modules/SofaSimulationCommon/src -Iinclude/SofaSimulationCommon -I../SofaKernel/modules/SofaSimulationCore/src -Iinclude/Sofa.SimulationCore -isystem ../SofaKernel/extlibs/json -isystem /usr/include/eigen3 -O3 -DNDEBUG -fPIC -Wno-attributes -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -Wall -W -Wno-padded -pthread -frounding-math -std=gnu++17 -MD -MT applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o -MF applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o.d -o applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o -c ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.cpp; In file included from ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.cpp:25:; ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.inl:25:10: fatal error: sofa/gl/template.h: Arquivo ou diretório inexistente; 25 | #include <sofa/gl/template.h>; | ^~~~~~~~~~~~~~~~~~~~; compilation terminated.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2075
https://github.com/sofa-framework/sofa/issues/2075:1706,Modifiability,plugin,plugins,1706,Can someone help me? I am stuck in the following error when compiling SOFA with CGAL plugin:. FAILED: applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o ; /usr/bin/g++ -DCGALPlugin_EXPORTS -DCGAL_MESH_3_VERBOSE=0 -DNDEBUG -DSOFA_BUILD_CGALPLUGIN -I../applications/plugins/CGALPlugin/src -Iinclude/CGALPlugin -I../SofaKernel/modules/SofaCore/src -Iinclude/Sofa.Core -I../SofaKernel/modules/SofaHelper/src -Iinclude/Sofa.Helper -I../SofaKernel/modules/Sofa.Config/src -Iinclude/Sofa.Config -I../SofaKernel/modules/Sofa.Type/src -Iinclude/Sofa.Type -I../SofaKernel/modules/Sofa.Compat/src -Iinclude/Sofa.Compat -I../SofaKernel/modules/Sofa.Topology/src -Iinclude/Sofa.Topology -I../SofaKernel/modules/Sofa.Geometry/src -Iinclude/Sofa.Geometry -I../SofaKernel/modules/SofaDefaultType/src -Iinclude/Sofa.DefaultType -I../SofaKernel/modules/SofaSimulationCommon/src -Iinclude/SofaSimulationCommon -I../SofaKernel/modules/SofaSimulationCore/src -Iinclude/Sofa.SimulationCore -isystem ../SofaKernel/extlibs/json -isystem /usr/include/eigen3 -O3 -DNDEBUG -fPIC -Wno-attributes -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -Wall -W -Wno-padded -pthread -frounding-math -std=gnu++17 -MD -MT applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o -MF applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o.d -o applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o -c ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.cpp; In file included from ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.cpp:25:; ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.inl:25:10: fatal error: sofa/gl/template.h: Arquivo ou diretório inexistente; 25 | #include <sofa/gl/template.h>; | ^~~~~~~~~~~~~~~~~~~~; compilation terminated.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2075
https://github.com/sofa-framework/sofa/pull/2076:3800,Availability,failure,failures,3800,"ene test has been added to check collision is working with a stationary object. # Fix freeze; This freeze happened before #2047.; It is due to an infinite loop here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L235; This happened because a map was not updated after some merge operations. And we relied on the value in the map, for example here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L137. # Fix crash detected in #2047. ## Before #2047; The scene freezes always at the same time. In #2067 I explain that the simulation is deterministic. Now that the freeze is fixed, we can notice a crash still occurs, but after the time step of the freeze. ## After #2047 ; A crash occurs, but not always at the same time step. This is because the simulation is no longer deterministic (because of #2047). . Conclusion: #2047 revealed this crash, but was not the cause. It means that a non-deterministic simulation is not a source of crash. ## Fix; The crash is fixed also by updating the values of the map, similarly to the freeze fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076
https://github.com/sofa-framework/sofa/pull/2076:3849,Availability,failure,failures,3849,"ene test has been added to check collision is working with a stationary object. # Fix freeze; This freeze happened before #2047.; It is due to an infinite loop here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L235; This happened because a map was not updated after some merge operations. And we relied on the value in the map, for example here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L137. # Fix crash detected in #2047. ## Before #2047; The scene freezes always at the same time. In #2067 I explain that the simulation is deterministic. Now that the freeze is fixed, we can notice a crash still occurs, but after the time step of the freeze. ## After #2047 ; A crash occurs, but not always at the same time step. This is because the simulation is no longer deterministic (because of #2047). . Conclusion: #2047 revealed this crash, but was not the cause. It means that a non-deterministic simulation is not a source of crash. ## Fix; The crash is fixed also by updating the values of the map, similarly to the freeze fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076
https://github.com/sofa-framework/sofa/pull/2076:613,Deployability,pipeline,pipeline,613,"The initial objective of this Pull Request was to fix the scene crash detected in #2047 (https://www.sofa-framework.org/dash/?branch=origin/PR-2047). What this PR really does:; 1. Clean and make `DefaultCollisionGroupManager` and `DefaultContactManager` more readable; 2. Fix absence of collision response when using `DefaultCollisionGroupManager` with a stationary object. A scene test is provided; 3. Fix freeze happening in `examples/Components/collision/RayTraceCollision.scn` after some time; 4. Fix crash detected in #2047. . Everything is related to `DefaultCollisionGroupManager`. Note:; In the collision pipeline, the group manager responsibilities are:; 1. Combine `Node`s which are involved in a contact (which has been detected before). It is a manipulation of the scene graph which depends on the collision detection.; 2. Create the contact response. # Cleaning; - Split large functions into smaller to make them more readable; - More null pointer checks; - Add lots of comments; - Minor cleaning such as namespace concatenation, ... # Fix absence of collision response with stationary object; The contact with stationary objects are supposed to be handled by the collision pipeline before creating groups with the group manager. In the group manager, it supposes all the objects in contacts are associated with an ODE solver (since they cannot be stationary). Actually, the collision pipeline check if an object is stationary based on the value of `isSimulated()`. It means it's up to the user to set this Data. If it not done, the object is considered moving and goes to the group manager. The ODE solver is not found, so it is skipped:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L91; And collision response is not created.; In this PR, this case is not skipped and a collision response is created. A scene test has been added to check collision is ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076
https://github.com/sofa-framework/sofa/pull/2076:1187,Deployability,pipeline,pipeline,1187,"047). What this PR really does:; 1. Clean and make `DefaultCollisionGroupManager` and `DefaultContactManager` more readable; 2. Fix absence of collision response when using `DefaultCollisionGroupManager` with a stationary object. A scene test is provided; 3. Fix freeze happening in `examples/Components/collision/RayTraceCollision.scn` after some time; 4. Fix crash detected in #2047. . Everything is related to `DefaultCollisionGroupManager`. Note:; In the collision pipeline, the group manager responsibilities are:; 1. Combine `Node`s which are involved in a contact (which has been detected before). It is a manipulation of the scene graph which depends on the collision detection.; 2. Create the contact response. # Cleaning; - Split large functions into smaller to make them more readable; - More null pointer checks; - Add lots of comments; - Minor cleaning such as namespace concatenation, ... # Fix absence of collision response with stationary object; The contact with stationary objects are supposed to be handled by the collision pipeline before creating groups with the group manager. In the group manager, it supposes all the objects in contacts are associated with an ODE solver (since they cannot be stationary). Actually, the collision pipeline check if an object is stationary based on the value of `isSimulated()`. It means it's up to the user to set this Data. If it not done, the object is considered moving and goes to the group manager. The ODE solver is not found, so it is skipped:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L91; And collision response is not created.; In this PR, this case is not skipped and a collision response is created. A scene test has been added to check collision is working with a stationary object. # Fix freeze; This freeze happened before #2047.; It is due to an infinite loop here:; https://github.com/sof",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076
https://github.com/sofa-framework/sofa/pull/2076:1398,Deployability,pipeline,pipeline,1398,"n `examples/Components/collision/RayTraceCollision.scn` after some time; 4. Fix crash detected in #2047. . Everything is related to `DefaultCollisionGroupManager`. Note:; In the collision pipeline, the group manager responsibilities are:; 1. Combine `Node`s which are involved in a contact (which has been detected before). It is a manipulation of the scene graph which depends on the collision detection.; 2. Create the contact response. # Cleaning; - Split large functions into smaller to make them more readable; - More null pointer checks; - Add lots of comments; - Minor cleaning such as namespace concatenation, ... # Fix absence of collision response with stationary object; The contact with stationary objects are supposed to be handled by the collision pipeline before creating groups with the group manager. In the group manager, it supposes all the objects in contacts are associated with an ODE solver (since they cannot be stationary). Actually, the collision pipeline check if an object is stationary based on the value of `isSimulated()`. It means it's up to the user to set this Data. If it not done, the object is considered moving and goes to the group manager. The ODE solver is not found, so it is skipped:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L91; And collision response is not created.; In this PR, this case is not skipped and a collision response is created. A scene test has been added to check collision is working with a stationary object. # Fix freeze; This freeze happened before #2047.; It is due to an infinite loop here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L235; This happened because a map was not updated after some merge operations. And we relied on the value in the map, for exa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076
https://github.com/sofa-framework/sofa/pull/2076:2343,Deployability,update,updated,2343," (since they cannot be stationary). Actually, the collision pipeline check if an object is stationary based on the value of `isSimulated()`. It means it's up to the user to set this Data. If it not done, the object is considered moving and goes to the group manager. The ODE solver is not found, so it is skipped:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L91; And collision response is not created.; In this PR, this case is not skipped and a collision response is created. A scene test has been added to check collision is working with a stationary object. # Fix freeze; This freeze happened before #2047.; It is due to an infinite loop here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L235; This happened because a map was not updated after some merge operations. And we relied on the value in the map, for example here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L137. # Fix crash detected in #2047. ## Before #2047; The scene freezes always at the same time. In #2067 I explain that the simulation is deterministic. Now that the freeze is fixed, we can notice a crash still occurs, but after the time step of the freeze. ## After #2047 ; A crash occurs, but not always at the same time step. This is because the simulation is no longer deterministic (because of #2047). . Conclusion: #2047 revealed this crash, but was not the cause. It means that a non-deterministic simulation is not a source of crash. ## Fix; The crash is fixed also by updating the values of the map, similarly to the freeze fix. ______________________________________________________. By submitting this pull re",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076
https://github.com/sofa-framework/sofa/pull/2076:795,Integrability,depend,depends,795,"The initial objective of this Pull Request was to fix the scene crash detected in #2047 (https://www.sofa-framework.org/dash/?branch=origin/PR-2047). What this PR really does:; 1. Clean and make `DefaultCollisionGroupManager` and `DefaultContactManager` more readable; 2. Fix absence of collision response when using `DefaultCollisionGroupManager` with a stationary object. A scene test is provided; 3. Fix freeze happening in `examples/Components/collision/RayTraceCollision.scn` after some time; 4. Fix crash detected in #2047. . Everything is related to `DefaultCollisionGroupManager`. Note:; In the collision pipeline, the group manager responsibilities are:; 1. Combine `Node`s which are involved in a contact (which has been detected before). It is a manipulation of the scene graph which depends on the collision detection.; 2. Create the contact response. # Cleaning; - Split large functions into smaller to make them more readable; - More null pointer checks; - Add lots of comments; - Minor cleaning such as namespace concatenation, ... # Fix absence of collision response with stationary object; The contact with stationary objects are supposed to be handled by the collision pipeline before creating groups with the group manager. In the group manager, it supposes all the objects in contacts are associated with an ODE solver (since they cannot be stationary). Actually, the collision pipeline check if an object is stationary based on the value of `isSimulated()`. It means it's up to the user to set this Data. If it not done, the object is considered moving and goes to the group manager. The ODE solver is not found, so it is skipped:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L91; And collision response is not created.; In this PR, this case is not skipped and a collision response is created. A scene test has been added to check collision is ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076
https://github.com/sofa-framework/sofa/pull/2076:1751,Modifiability,plugin,plugins,1751," It is a manipulation of the scene graph which depends on the collision detection.; 2. Create the contact response. # Cleaning; - Split large functions into smaller to make them more readable; - More null pointer checks; - Add lots of comments; - Minor cleaning such as namespace concatenation, ... # Fix absence of collision response with stationary object; The contact with stationary objects are supposed to be handled by the collision pipeline before creating groups with the group manager. In the group manager, it supposes all the objects in contacts are associated with an ODE solver (since they cannot be stationary). Actually, the collision pipeline check if an object is stationary based on the value of `isSimulated()`. It means it's up to the user to set this Data. If it not done, the object is considered moving and goes to the group manager. The ODE solver is not found, so it is skipped:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L91; And collision response is not created.; In this PR, this case is not skipped and a collision response is created. A scene test has been added to check collision is working with a stationary object. # Fix freeze; This freeze happened before #2047.; It is due to an infinite loop here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L235; This happened because a map was not updated after some merge operations. And we relied on the value in the map, for example here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L137. # Fix crash detected in #2047. ## Before #2047; The scene freezes always at the same time. In #2067 I explain that the simula",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076
https://github.com/sofa-framework/sofa/pull/2076:2220,Modifiability,plugin,plugins,2220,"s with the group manager. In the group manager, it supposes all the objects in contacts are associated with an ODE solver (since they cannot be stationary). Actually, the collision pipeline check if an object is stationary based on the value of `isSimulated()`. It means it's up to the user to set this Data. If it not done, the object is considered moving and goes to the group manager. The ODE solver is not found, so it is skipped:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L91; And collision response is not created.; In this PR, this case is not skipped and a collision response is created. A scene test has been added to check collision is working with a stationary object. # Fix freeze; This freeze happened before #2047.; It is due to an infinite loop here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L235; This happened because a map was not updated after some merge operations. And we relied on the value in the map, for example here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L137. # Fix crash detected in #2047. ## Before #2047; The scene freezes always at the same time. In #2067 I explain that the simulation is deterministic. Now that the freeze is fixed, we can notice a crash still occurs, but after the time step of the freeze. ## After #2047 ; A crash occurs, but not always at the same time step. This is because the simulation is no longer deterministic (because of #2047). . Conclusion: #2047 revealed this crash, but was not the cause. It means that a non-deterministic simulation is not a source of crash. ## Fix; The crash is fixed also by updating the values of",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076
https://github.com/sofa-framework/sofa/pull/2076:2536,Modifiability,plugin,plugins,2536,"ot done, the object is considered moving and goes to the group manager. The ODE solver is not found, so it is skipped:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L91; And collision response is not created.; In this PR, this case is not skipped and a collision response is created. A scene test has been added to check collision is working with a stationary object. # Fix freeze; This freeze happened before #2047.; It is due to an infinite loop here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L235; This happened because a map was not updated after some merge operations. And we relied on the value in the map, for example here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L137. # Fix crash detected in #2047. ## Before #2047; The scene freezes always at the same time. In #2067 I explain that the simulation is deterministic. Now that the freeze is fixed, we can notice a crash still occurs, but after the time step of the freeze. ## After #2047 ; A crash occurs, but not always at the same time step. This is because the simulation is no longer deterministic (because of #2047). . Conclusion: #2047 revealed this crash, but was not the cause. It means that a non-deterministic simulation is not a source of crash. ## Fix; The crash is fixed also by updating the values of the map, similarly to the freeze fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-cer",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076
https://github.com/sofa-framework/sofa/pull/2076:70,Safety,detect,detected,70,"The initial objective of this Pull Request was to fix the scene crash detected in #2047 (https://www.sofa-framework.org/dash/?branch=origin/PR-2047). What this PR really does:; 1. Clean and make `DefaultCollisionGroupManager` and `DefaultContactManager` more readable; 2. Fix absence of collision response when using `DefaultCollisionGroupManager` with a stationary object. A scene test is provided; 3. Fix freeze happening in `examples/Components/collision/RayTraceCollision.scn` after some time; 4. Fix crash detected in #2047. . Everything is related to `DefaultCollisionGroupManager`. Note:; In the collision pipeline, the group manager responsibilities are:; 1. Combine `Node`s which are involved in a contact (which has been detected before). It is a manipulation of the scene graph which depends on the collision detection.; 2. Create the contact response. # Cleaning; - Split large functions into smaller to make them more readable; - More null pointer checks; - Add lots of comments; - Minor cleaning such as namespace concatenation, ... # Fix absence of collision response with stationary object; The contact with stationary objects are supposed to be handled by the collision pipeline before creating groups with the group manager. In the group manager, it supposes all the objects in contacts are associated with an ODE solver (since they cannot be stationary). Actually, the collision pipeline check if an object is stationary based on the value of `isSimulated()`. It means it's up to the user to set this Data. If it not done, the object is considered moving and goes to the group manager. The ODE solver is not found, so it is skipped:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L91; And collision response is not created.; In this PR, this case is not skipped and a collision response is created. A scene test has been added to check collision is ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076
https://github.com/sofa-framework/sofa/pull/2076:511,Safety,detect,detected,511,"The initial objective of this Pull Request was to fix the scene crash detected in #2047 (https://www.sofa-framework.org/dash/?branch=origin/PR-2047). What this PR really does:; 1. Clean and make `DefaultCollisionGroupManager` and `DefaultContactManager` more readable; 2. Fix absence of collision response when using `DefaultCollisionGroupManager` with a stationary object. A scene test is provided; 3. Fix freeze happening in `examples/Components/collision/RayTraceCollision.scn` after some time; 4. Fix crash detected in #2047. . Everything is related to `DefaultCollisionGroupManager`. Note:; In the collision pipeline, the group manager responsibilities are:; 1. Combine `Node`s which are involved in a contact (which has been detected before). It is a manipulation of the scene graph which depends on the collision detection.; 2. Create the contact response. # Cleaning; - Split large functions into smaller to make them more readable; - More null pointer checks; - Add lots of comments; - Minor cleaning such as namespace concatenation, ... # Fix absence of collision response with stationary object; The contact with stationary objects are supposed to be handled by the collision pipeline before creating groups with the group manager. In the group manager, it supposes all the objects in contacts are associated with an ODE solver (since they cannot be stationary). Actually, the collision pipeline check if an object is stationary based on the value of `isSimulated()`. It means it's up to the user to set this Data. If it not done, the object is considered moving and goes to the group manager. The ODE solver is not found, so it is skipped:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L91; And collision response is not created.; In this PR, this case is not skipped and a collision response is created. A scene test has been added to check collision is ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076
https://github.com/sofa-framework/sofa/pull/2076:731,Safety,detect,detected,731,"The initial objective of this Pull Request was to fix the scene crash detected in #2047 (https://www.sofa-framework.org/dash/?branch=origin/PR-2047). What this PR really does:; 1. Clean and make `DefaultCollisionGroupManager` and `DefaultContactManager` more readable; 2. Fix absence of collision response when using `DefaultCollisionGroupManager` with a stationary object. A scene test is provided; 3. Fix freeze happening in `examples/Components/collision/RayTraceCollision.scn` after some time; 4. Fix crash detected in #2047. . Everything is related to `DefaultCollisionGroupManager`. Note:; In the collision pipeline, the group manager responsibilities are:; 1. Combine `Node`s which are involved in a contact (which has been detected before). It is a manipulation of the scene graph which depends on the collision detection.; 2. Create the contact response. # Cleaning; - Split large functions into smaller to make them more readable; - More null pointer checks; - Add lots of comments; - Minor cleaning such as namespace concatenation, ... # Fix absence of collision response with stationary object; The contact with stationary objects are supposed to be handled by the collision pipeline before creating groups with the group manager. In the group manager, it supposes all the objects in contacts are associated with an ODE solver (since they cannot be stationary). Actually, the collision pipeline check if an object is stationary based on the value of `isSimulated()`. It means it's up to the user to set this Data. If it not done, the object is considered moving and goes to the group manager. The ODE solver is not found, so it is skipped:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L91; And collision response is not created.; In this PR, this case is not skipped and a collision response is created. A scene test has been added to check collision is ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076
https://github.com/sofa-framework/sofa/pull/2076:820,Safety,detect,detection,820,"The initial objective of this Pull Request was to fix the scene crash detected in #2047 (https://www.sofa-framework.org/dash/?branch=origin/PR-2047). What this PR really does:; 1. Clean and make `DefaultCollisionGroupManager` and `DefaultContactManager` more readable; 2. Fix absence of collision response when using `DefaultCollisionGroupManager` with a stationary object. A scene test is provided; 3. Fix freeze happening in `examples/Components/collision/RayTraceCollision.scn` after some time; 4. Fix crash detected in #2047. . Everything is related to `DefaultCollisionGroupManager`. Note:; In the collision pipeline, the group manager responsibilities are:; 1. Combine `Node`s which are involved in a contact (which has been detected before). It is a manipulation of the scene graph which depends on the collision detection.; 2. Create the contact response. # Cleaning; - Split large functions into smaller to make them more readable; - More null pointer checks; - Add lots of comments; - Minor cleaning such as namespace concatenation, ... # Fix absence of collision response with stationary object; The contact with stationary objects are supposed to be handled by the collision pipeline before creating groups with the group manager. In the group manager, it supposes all the objects in contacts are associated with an ODE solver (since they cannot be stationary). Actually, the collision pipeline check if an object is stationary based on the value of `isSimulated()`. It means it's up to the user to set this Data. If it not done, the object is considered moving and goes to the group manager. The ODE solver is not found, so it is skipped:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L91; And collision response is not created.; In this PR, this case is not skipped and a collision response is created. A scene test has been added to check collision is ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076
https://github.com/sofa-framework/sofa/pull/2076:2635,Safety,detect,detected,2635,"it is skipped:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L91; And collision response is not created.; In this PR, this case is not skipped and a collision response is created. A scene test has been added to check collision is working with a stationary object. # Fix freeze; This freeze happened before #2047.; It is due to an infinite loop here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L235; This happened because a map was not updated after some merge operations. And we relied on the value in the map, for example here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L137. # Fix crash detected in #2047. ## Before #2047; The scene freezes always at the same time. In #2067 I explain that the simulation is deterministic. Now that the freeze is fixed, we can notice a crash still occurs, but after the time step of the freeze. ## After #2047 ; A crash occurs, but not always at the same time step. This is because the simulation is no longer deterministic (because of #2047). . Conclusion: #2047 revealed this crash, but was not the cause. It means that a non-deterministic simulation is not a source of crash. ## Fix; The crash is fixed also by updating the values of the map, similarly to the freeze fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merg",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076
https://github.com/sofa-framework/sofa/pull/2076:3419,Security,Certificate,Certificate,3419,"ene test has been added to check collision is working with a stationary object. # Fix freeze; This freeze happened before #2047.; It is due to an infinite loop here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L235; This happened because a map was not updated after some merge operations. And we relied on the value in the map, for example here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L137. # Fix crash detected in #2047. ## Before #2047; The scene freezes always at the same time. In #2067 I explain that the simulation is deterministic. Now that the freeze is fixed, we can notice a crash still occurs, but after the time step of the freeze. ## After #2047 ; A crash occurs, but not always at the same time step. This is because the simulation is no longer deterministic (because of #2047). . Conclusion: #2047 revealed this crash, but was not the cause. It means that a non-deterministic simulation is not a source of crash. ## Fix; The crash is fixed also by updating the values of the map, similarly to the freeze fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076
https://github.com/sofa-framework/sofa/pull/2076:3530,Security,certificate,certificate-of-origin-dco,3530,"ene test has been added to check collision is working with a stationary object. # Fix freeze; This freeze happened before #2047.; It is due to an infinite loop here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L235; This happened because a map was not updated after some merge operations. And we relied on the value in the map, for example here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L137. # Fix crash detected in #2047. ## Before #2047; The scene freezes always at the same time. In #2067 I explain that the simulation is deterministic. Now that the freeze is fixed, we can notice a crash still occurs, but after the time step of the freeze. ## After #2047 ; A crash occurs, but not always at the same time step. This is because the simulation is no longer deterministic (because of #2047). . Conclusion: #2047 revealed this crash, but was not the cause. It means that a non-deterministic simulation is not a source of crash. ## Fix; The crash is fixed also by updating the values of the map, similarly to the freeze fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076
https://github.com/sofa-framework/sofa/pull/2076:382,Testability,test,test,382,"The initial objective of this Pull Request was to fix the scene crash detected in #2047 (https://www.sofa-framework.org/dash/?branch=origin/PR-2047). What this PR really does:; 1. Clean and make `DefaultCollisionGroupManager` and `DefaultContactManager` more readable; 2. Fix absence of collision response when using `DefaultCollisionGroupManager` with a stationary object. A scene test is provided; 3. Fix freeze happening in `examples/Components/collision/RayTraceCollision.scn` after some time; 4. Fix crash detected in #2047. . Everything is related to `DefaultCollisionGroupManager`. Note:; In the collision pipeline, the group manager responsibilities are:; 1. Combine `Node`s which are involved in a contact (which has been detected before). It is a manipulation of the scene graph which depends on the collision detection.; 2. Create the contact response. # Cleaning; - Split large functions into smaller to make them more readable; - More null pointer checks; - Add lots of comments; - Minor cleaning such as namespace concatenation, ... # Fix absence of collision response with stationary object; The contact with stationary objects are supposed to be handled by the collision pipeline before creating groups with the group manager. In the group manager, it supposes all the objects in contacts are associated with an ODE solver (since they cannot be stationary). Actually, the collision pipeline check if an object is stationary based on the value of `isSimulated()`. It means it's up to the user to set this Data. If it not done, the object is considered moving and goes to the group manager. The ODE solver is not found, so it is skipped:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L91; And collision response is not created.; In this PR, this case is not skipped and a collision response is created. A scene test has been added to check collision is ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076
https://github.com/sofa-framework/sofa/pull/2076:1959,Testability,test,test,1959," - Minor cleaning such as namespace concatenation, ... # Fix absence of collision response with stationary object; The contact with stationary objects are supposed to be handled by the collision pipeline before creating groups with the group manager. In the group manager, it supposes all the objects in contacts are associated with an ODE solver (since they cannot be stationary). Actually, the collision pipeline check if an object is stationary based on the value of `isSimulated()`. It means it's up to the user to set this Data. If it not done, the object is considered moving and goes to the group manager. The ODE solver is not found, so it is skipped:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L91; And collision response is not created.; In this PR, this case is not skipped and a collision response is created. A scene test has been added to check collision is working with a stationary object. # Fix freeze; This freeze happened before #2047.; It is due to an infinite loop here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L235; This happened because a map was not updated after some merge operations. And we relied on the value in the map, for example here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L137. # Fix crash detected in #2047. ## Before #2047; The scene freezes always at the same time. In #2067 I explain that the simulation is deterministic. Now that the freeze is fixed, we can notice a crash still occurs, but after the time step of the freeze. ## After #2047 ; A crash occurs, but not always at the same time step. This is because the simulation is no longer d",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076
https://github.com/sofa-framework/sofa/pull/2076:3795,Testability,test,test,3795,"ene test has been added to check collision is working with a stationary object. # Fix freeze; This freeze happened before #2047.; It is due to an infinite loop here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L235; This happened because a map was not updated after some merge operations. And we relied on the value in the map, for example here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L137. # Fix crash detected in #2047. ## Before #2047; The scene freezes always at the same time. In #2067 I explain that the simulation is deterministic. Now that the freeze is fixed, we can notice a crash still occurs, but after the time step of the freeze. ## After #2047 ; A crash occurs, but not always at the same time step. This is because the simulation is no longer deterministic (because of #2047). . Conclusion: #2047 revealed this crash, but was not the cause. It means that a non-deterministic simulation is not a source of crash. ## Fix; The crash is fixed also by updating the values of the map, similarly to the freeze fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076
https://github.com/sofa-framework/sofa/pull/2076:3844,Testability,test,test,3844,"ene test has been added to check collision is working with a stationary object. # Fix freeze; This freeze happened before #2047.; It is due to an infinite loop here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L235; This happened because a map was not updated after some merge operations. And we relied on the value in the map, for example here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L137. # Fix crash detected in #2047. ## Before #2047; The scene freezes always at the same time. In #2067 I explain that the simulation is deterministic. Now that the freeze is fixed, we can notice a crash still occurs, but after the time step of the freeze. ## After #2047 ; A crash occurs, but not always at the same time step. This is because the simulation is no longer deterministic (because of #2047). . Conclusion: #2047 revealed this crash, but was not the cause. It means that a non-deterministic simulation is not a source of crash. ## Fix; The crash is fixed also by updating the values of the map, similarly to the freeze fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076
https://github.com/sofa-framework/sofa/issues/2077:77,Performance,perform,performed,77,Further to a discussion with @alxbilger and @ChristianDuriez ; Some check is performed in LocalMinDistance leading to possible null determinant. Case: two adjacent lines (with a common vertex) then of collide lines will coincide; However I do not see how to prevent / sort this before `LocalMinDistance::testIntersection()`. BruteForce::canIntersect → MemberElementIntersector::canIntersect() → LocalMinDistance::testIntersection(),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2077
https://github.com/sofa-framework/sofa/issues/2077:304,Testability,test,testIntersection,304,Further to a discussion with @alxbilger and @ChristianDuriez ; Some check is performed in LocalMinDistance leading to possible null determinant. Case: two adjacent lines (with a common vertex) then of collide lines will coincide; However I do not see how to prevent / sort this before `LocalMinDistance::testIntersection()`. BruteForce::canIntersect → MemberElementIntersector::canIntersect() → LocalMinDistance::testIntersection(),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2077
https://github.com/sofa-framework/sofa/issues/2077:413,Testability,test,testIntersection,413,Further to a discussion with @alxbilger and @ChristianDuriez ; Some check is performed in LocalMinDistance leading to possible null determinant. Case: two adjacent lines (with a common vertex) then of collide lines will coincide; However I do not see how to prevent / sort this before `LocalMinDistance::testIntersection()`. BruteForce::canIntersect → MemberElementIntersector::canIntersect() → LocalMinDistance::testIntersection(),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2077
https://github.com/sofa-framework/sofa/issues/2080:73,Deployability,update,updateImage,73,"sofa-master/applications/plugins/image/ImageFilter.h line 645; code:; if(updateImage); {; unsigned int axis=0; if(p.size()) axis=(unsigned int)p[0];; if(axis==0) cimglist_for(img,l) img(l)=inimg(l).get_mirror ('x');; else if(axis==0) cimglist_for(img,l) img(l)=inimg(l).get_mirror ('y'); // <- identical; else cimglist_for(img,l) img(l)=inimg(l).get_mirror ('z');; }",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2080
https://github.com/sofa-framework/sofa/issues/2080:25,Modifiability,plugin,plugins,25,"sofa-master/applications/plugins/image/ImageFilter.h line 645; code:; if(updateImage); {; unsigned int axis=0; if(p.size()) axis=(unsigned int)p[0];; if(axis==0) cimglist_for(img,l) img(l)=inimg(l).get_mirror ('x');; else if(axis==0) cimglist_for(img,l) img(l)=inimg(l).get_mirror ('y'); // <- identical; else cimglist_for(img,l) img(l)=inimg(l).get_mirror ('z');; }",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2080
https://github.com/sofa-framework/sofa/pull/2081:683,Availability,error,error,683,"This follows #2073 . BaseIntTool/MeshIntTool (and their friends IntrUtility stuff) was mostly created to handle OBB/Capsule.; Their design is quite weird (at least to me) and it is [based on a code copied from GeometricTools](https://github.com/sofa-framework/sofa/blob/44001a4da752dc91078b8e10ca035e07845ecb66/SofaKernel/modules/SofaBaseCollision/src/SofaBaseCollision/IntrUtility3.h#L22) (so the copyright/licensing is nebulous in the best case). This PR makes SofaBaseCollision to not rely at all on those code, mainly to revert back the code from a long time ago.; It fixes also the fact that DiscreteIntersection was using proximities for the various computeIntersection() [1st error], but not using proximities in the various testIntersection in the proximities-based Intersections [2nd error]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2081
https://github.com/sofa-framework/sofa/pull/2081:793,Availability,error,error,793,"This follows #2073 . BaseIntTool/MeshIntTool (and their friends IntrUtility stuff) was mostly created to handle OBB/Capsule.; Their design is quite weird (at least to me) and it is [based on a code copied from GeometricTools](https://github.com/sofa-framework/sofa/blob/44001a4da752dc91078b8e10ca035e07845ecb66/SofaKernel/modules/SofaBaseCollision/src/SofaBaseCollision/IntrUtility3.h#L22) (so the copyright/licensing is nebulous in the best case). This PR makes SofaBaseCollision to not rely at all on those code, mainly to revert back the code from a long time ago.; It fixes also the fact that DiscreteIntersection was using proximities for the various computeIntersection() [1st error], but not using proximities in the various testIntersection in the proximities-based Intersections [2nd error]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2081
https://github.com/sofa-framework/sofa/pull/2081:1345,Availability,failure,failures,1345,"This follows #2073 . BaseIntTool/MeshIntTool (and their friends IntrUtility stuff) was mostly created to handle OBB/Capsule.; Their design is quite weird (at least to me) and it is [based on a code copied from GeometricTools](https://github.com/sofa-framework/sofa/blob/44001a4da752dc91078b8e10ca035e07845ecb66/SofaKernel/modules/SofaBaseCollision/src/SofaBaseCollision/IntrUtility3.h#L22) (so the copyright/licensing is nebulous in the best case). This PR makes SofaBaseCollision to not rely at all on those code, mainly to revert back the code from a long time ago.; It fixes also the fact that DiscreteIntersection was using proximities for the various computeIntersection() [1st error], but not using proximities in the various testIntersection in the proximities-based Intersections [2nd error]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2081
https://github.com/sofa-framework/sofa/pull/2081:1394,Availability,failure,failures,1394,"This follows #2073 . BaseIntTool/MeshIntTool (and their friends IntrUtility stuff) was mostly created to handle OBB/Capsule.; Their design is quite weird (at least to me) and it is [based on a code copied from GeometricTools](https://github.com/sofa-framework/sofa/blob/44001a4da752dc91078b8e10ca035e07845ecb66/SofaKernel/modules/SofaBaseCollision/src/SofaBaseCollision/IntrUtility3.h#L22) (so the copyright/licensing is nebulous in the best case). This PR makes SofaBaseCollision to not rely at all on those code, mainly to revert back the code from a long time ago.; It fixes also the fact that DiscreteIntersection was using proximities for the various computeIntersection() [1st error], but not using proximities in the various testIntersection in the proximities-based Intersections [2nd error]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2081
https://github.com/sofa-framework/sofa/pull/2081:964,Security,Certificate,Certificate,964,"This follows #2073 . BaseIntTool/MeshIntTool (and their friends IntrUtility stuff) was mostly created to handle OBB/Capsule.; Their design is quite weird (at least to me) and it is [based on a code copied from GeometricTools](https://github.com/sofa-framework/sofa/blob/44001a4da752dc91078b8e10ca035e07845ecb66/SofaKernel/modules/SofaBaseCollision/src/SofaBaseCollision/IntrUtility3.h#L22) (so the copyright/licensing is nebulous in the best case). This PR makes SofaBaseCollision to not rely at all on those code, mainly to revert back the code from a long time ago.; It fixes also the fact that DiscreteIntersection was using proximities for the various computeIntersection() [1st error], but not using proximities in the various testIntersection in the proximities-based Intersections [2nd error]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2081
https://github.com/sofa-framework/sofa/pull/2081:1075,Security,certificate,certificate-of-origin-dco,1075,"This follows #2073 . BaseIntTool/MeshIntTool (and their friends IntrUtility stuff) was mostly created to handle OBB/Capsule.; Their design is quite weird (at least to me) and it is [based on a code copied from GeometricTools](https://github.com/sofa-framework/sofa/blob/44001a4da752dc91078b8e10ca035e07845ecb66/SofaKernel/modules/SofaBaseCollision/src/SofaBaseCollision/IntrUtility3.h#L22) (so the copyright/licensing is nebulous in the best case). This PR makes SofaBaseCollision to not rely at all on those code, mainly to revert back the code from a long time ago.; It fixes also the fact that DiscreteIntersection was using proximities for the various computeIntersection() [1st error], but not using proximities in the various testIntersection in the proximities-based Intersections [2nd error]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2081
https://github.com/sofa-framework/sofa/pull/2081:732,Testability,test,testIntersection,732,"This follows #2073 . BaseIntTool/MeshIntTool (and their friends IntrUtility stuff) was mostly created to handle OBB/Capsule.; Their design is quite weird (at least to me) and it is [based on a code copied from GeometricTools](https://github.com/sofa-framework/sofa/blob/44001a4da752dc91078b8e10ca035e07845ecb66/SofaKernel/modules/SofaBaseCollision/src/SofaBaseCollision/IntrUtility3.h#L22) (so the copyright/licensing is nebulous in the best case). This PR makes SofaBaseCollision to not rely at all on those code, mainly to revert back the code from a long time ago.; It fixes also the fact that DiscreteIntersection was using proximities for the various computeIntersection() [1st error], but not using proximities in the various testIntersection in the proximities-based Intersections [2nd error]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2081
https://github.com/sofa-framework/sofa/pull/2081:1340,Testability,test,test,1340,"This follows #2073 . BaseIntTool/MeshIntTool (and their friends IntrUtility stuff) was mostly created to handle OBB/Capsule.; Their design is quite weird (at least to me) and it is [based on a code copied from GeometricTools](https://github.com/sofa-framework/sofa/blob/44001a4da752dc91078b8e10ca035e07845ecb66/SofaKernel/modules/SofaBaseCollision/src/SofaBaseCollision/IntrUtility3.h#L22) (so the copyright/licensing is nebulous in the best case). This PR makes SofaBaseCollision to not rely at all on those code, mainly to revert back the code from a long time ago.; It fixes also the fact that DiscreteIntersection was using proximities for the various computeIntersection() [1st error], but not using proximities in the various testIntersection in the proximities-based Intersections [2nd error]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2081
https://github.com/sofa-framework/sofa/pull/2081:1389,Testability,test,test,1389,"This follows #2073 . BaseIntTool/MeshIntTool (and their friends IntrUtility stuff) was mostly created to handle OBB/Capsule.; Their design is quite weird (at least to me) and it is [based on a code copied from GeometricTools](https://github.com/sofa-framework/sofa/blob/44001a4da752dc91078b8e10ca035e07845ecb66/SofaKernel/modules/SofaBaseCollision/src/SofaBaseCollision/IntrUtility3.h#L22) (so the copyright/licensing is nebulous in the best case). This PR makes SofaBaseCollision to not rely at all on those code, mainly to revert back the code from a long time ago.; It fixes also the fact that DiscreteIntersection was using proximities for the various computeIntersection() [1st error], but not using proximities in the various testIntersection in the proximities-based Intersections [2nd error]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2081
https://github.com/sofa-framework/sofa/pull/2082:682,Availability,failure,failures,682,"remove [ ] operator and some constructors. Warning as discussed, this will not be merged directly in master but in a PoC topology branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2082
https://github.com/sofa-framework/sofa/pull/2082:731,Availability,failure,failures,731,"remove [ ] operator and some constructors. Warning as discussed, this will not be merged directly in master but in a PoC topology branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2082
https://github.com/sofa-framework/sofa/pull/2082:301,Security,Certificate,Certificate,301,"remove [ ] operator and some constructors. Warning as discussed, this will not be merged directly in master but in a PoC topology branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2082
https://github.com/sofa-framework/sofa/pull/2082:412,Security,certificate,certificate-of-origin-dco,412,"remove [ ] operator and some constructors. Warning as discussed, this will not be merged directly in master but in a PoC topology branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2082
https://github.com/sofa-framework/sofa/pull/2082:677,Testability,test,test,677,"remove [ ] operator and some constructors. Warning as discussed, this will not be merged directly in master but in a PoC topology branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2082
https://github.com/sofa-framework/sofa/pull/2082:726,Testability,test,test,726,"remove [ ] operator and some constructors. Warning as discussed, this will not be merged directly in master but in a PoC topology branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2082
https://github.com/sofa-framework/sofa/pull/2083:561,Availability,failure,failures,561,"Fix issue #2080. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2083
https://github.com/sofa-framework/sofa/pull/2083:610,Availability,failure,failures,610,"Fix issue #2080. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2083
https://github.com/sofa-framework/sofa/pull/2083:180,Security,Certificate,Certificate,180,"Fix issue #2080. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2083
https://github.com/sofa-framework/sofa/pull/2083:291,Security,certificate,certificate-of-origin-dco,291,"Fix issue #2080. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2083
https://github.com/sofa-framework/sofa/pull/2083:556,Testability,test,test,556,"Fix issue #2080. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2083
https://github.com/sofa-framework/sofa/pull/2083:605,Testability,test,test,605,"Fix issue #2080. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2083
https://github.com/sofa-framework/sofa/pull/2084:1401,Availability,failure,failures,1401,"Follows #2073 and then #2081. PickParticlePerformer has a hard dependency on OBBModel & CapsuleModel to compute where it sets its constraint with the mouse while picking.; So this forces the modules SofaUserInteraction to know those classes before hand. This design is not that good, as it is not possible for someone creating a new CollisionModel (in a plugin, etc) and use the PickParticlePerformer. This PR adds a (static) registration system, similar to the ObjectFactory and co., so if anybody wants to add a new collision model to pick on, it just has to register its model, along a callable (lambda, std::function, etc) on how to get the points on this model.; PickParticlePerformer registers by itself the triangle, sphere and rigidsphere models.; SofaMiscCollision (where OBB&Capsule are) registers the obb and capsule model functions. Fix #1624 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2084
https://github.com/sofa-framework/sofa/pull/2084:1450,Availability,failure,failures,1450,"Follows #2073 and then #2081. PickParticlePerformer has a hard dependency on OBBModel & CapsuleModel to compute where it sets its constraint with the mouse while picking.; So this forces the modules SofaUserInteraction to know those classes before hand. This design is not that good, as it is not possible for someone creating a new CollisionModel (in a plugin, etc) and use the PickParticlePerformer. This PR adds a (static) registration system, similar to the ObjectFactory and co., so if anybody wants to add a new collision model to pick on, it just has to register its model, along a callable (lambda, std::function, etc) on how to get the points on this model.; PickParticlePerformer registers by itself the triangle, sphere and rigidsphere models.; SofaMiscCollision (where OBB&Capsule are) registers the obb and capsule model functions. Fix #1624 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2084
https://github.com/sofa-framework/sofa/pull/2084:63,Integrability,depend,dependency,63,"Follows #2073 and then #2081. PickParticlePerformer has a hard dependency on OBBModel & CapsuleModel to compute where it sets its constraint with the mouse while picking.; So this forces the modules SofaUserInteraction to know those classes before hand. This design is not that good, as it is not possible for someone creating a new CollisionModel (in a plugin, etc) and use the PickParticlePerformer. This PR adds a (static) registration system, similar to the ObjectFactory and co., so if anybody wants to add a new collision model to pick on, it just has to register its model, along a callable (lambda, std::function, etc) on how to get the points on this model.; PickParticlePerformer registers by itself the triangle, sphere and rigidsphere models.; SofaMiscCollision (where OBB&Capsule are) registers the obb and capsule model functions. Fix #1624 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2084
https://github.com/sofa-framework/sofa/pull/2084:354,Modifiability,plugin,plugin,354,"Follows #2073 and then #2081. PickParticlePerformer has a hard dependency on OBBModel & CapsuleModel to compute where it sets its constraint with the mouse while picking.; So this forces the modules SofaUserInteraction to know those classes before hand. This design is not that good, as it is not possible for someone creating a new CollisionModel (in a plugin, etc) and use the PickParticlePerformer. This PR adds a (static) registration system, similar to the ObjectFactory and co., so if anybody wants to add a new collision model to pick on, it just has to register its model, along a callable (lambda, std::function, etc) on how to get the points on this model.; PickParticlePerformer registers by itself the triangle, sphere and rigidsphere models.; SofaMiscCollision (where OBB&Capsule are) registers the obb and capsule model functions. Fix #1624 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2084
https://github.com/sofa-framework/sofa/pull/2084:1020,Security,Certificate,Certificate,1020,"Follows #2073 and then #2081. PickParticlePerformer has a hard dependency on OBBModel & CapsuleModel to compute where it sets its constraint with the mouse while picking.; So this forces the modules SofaUserInteraction to know those classes before hand. This design is not that good, as it is not possible for someone creating a new CollisionModel (in a plugin, etc) and use the PickParticlePerformer. This PR adds a (static) registration system, similar to the ObjectFactory and co., so if anybody wants to add a new collision model to pick on, it just has to register its model, along a callable (lambda, std::function, etc) on how to get the points on this model.; PickParticlePerformer registers by itself the triangle, sphere and rigidsphere models.; SofaMiscCollision (where OBB&Capsule are) registers the obb and capsule model functions. Fix #1624 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2084
https://github.com/sofa-framework/sofa/pull/2084:1131,Security,certificate,certificate-of-origin-dco,1131,"Follows #2073 and then #2081. PickParticlePerformer has a hard dependency on OBBModel & CapsuleModel to compute where it sets its constraint with the mouse while picking.; So this forces the modules SofaUserInteraction to know those classes before hand. This design is not that good, as it is not possible for someone creating a new CollisionModel (in a plugin, etc) and use the PickParticlePerformer. This PR adds a (static) registration system, similar to the ObjectFactory and co., so if anybody wants to add a new collision model to pick on, it just has to register its model, along a callable (lambda, std::function, etc) on how to get the points on this model.; PickParticlePerformer registers by itself the triangle, sphere and rigidsphere models.; SofaMiscCollision (where OBB&Capsule are) registers the obb and capsule model functions. Fix #1624 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2084
https://github.com/sofa-framework/sofa/pull/2084:1396,Testability,test,test,1396,"Follows #2073 and then #2081. PickParticlePerformer has a hard dependency on OBBModel & CapsuleModel to compute where it sets its constraint with the mouse while picking.; So this forces the modules SofaUserInteraction to know those classes before hand. This design is not that good, as it is not possible for someone creating a new CollisionModel (in a plugin, etc) and use the PickParticlePerformer. This PR adds a (static) registration system, similar to the ObjectFactory and co., so if anybody wants to add a new collision model to pick on, it just has to register its model, along a callable (lambda, std::function, etc) on how to get the points on this model.; PickParticlePerformer registers by itself the triangle, sphere and rigidsphere models.; SofaMiscCollision (where OBB&Capsule are) registers the obb and capsule model functions. Fix #1624 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2084
https://github.com/sofa-framework/sofa/pull/2084:1445,Testability,test,test,1445,"Follows #2073 and then #2081. PickParticlePerformer has a hard dependency on OBBModel & CapsuleModel to compute where it sets its constraint with the mouse while picking.; So this forces the modules SofaUserInteraction to know those classes before hand. This design is not that good, as it is not possible for someone creating a new CollisionModel (in a plugin, etc) and use the PickParticlePerformer. This PR adds a (static) registration system, similar to the ObjectFactory and co., so if anybody wants to add a new collision model to pick on, it just has to register its model, along a callable (lambda, std::function, etc) on how to get the points on this model.; PickParticlePerformer registers by itself the triangle, sphere and rigidsphere models.; SofaMiscCollision (where OBB&Capsule are) registers the obb and capsule model functions. Fix #1624 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2084
https://github.com/sofa-framework/sofa/pull/2085:878,Availability,failure,failures,878,"This PR includes PR #2082 . - move topology pointer in mother class TopologyHandler instead of TopologyDataHandler; - Register TopologyHandler directly in each TopologyContainer level instead of inside a global list.; - Remove Data list of TopologyChange from each TopologyHandler and use directly the one from the TopologyContainer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2085
https://github.com/sofa-framework/sofa/pull/2085:927,Availability,failure,failures,927,"This PR includes PR #2082 . - move topology pointer in mother class TopologyHandler instead of TopologyDataHandler; - Register TopologyHandler directly in each TopologyContainer level instead of inside a global list.; - Remove Data list of TopologyChange from each TopologyHandler and use directly the one from the TopologyContainer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2085
https://github.com/sofa-framework/sofa/pull/2085:497,Security,Certificate,Certificate,497,"This PR includes PR #2082 . - move topology pointer in mother class TopologyHandler instead of TopologyDataHandler; - Register TopologyHandler directly in each TopologyContainer level instead of inside a global list.; - Remove Data list of TopologyChange from each TopologyHandler and use directly the one from the TopologyContainer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2085
https://github.com/sofa-framework/sofa/pull/2085:608,Security,certificate,certificate-of-origin-dco,608,"This PR includes PR #2082 . - move topology pointer in mother class TopologyHandler instead of TopologyDataHandler; - Register TopologyHandler directly in each TopologyContainer level instead of inside a global list.; - Remove Data list of TopologyChange from each TopologyHandler and use directly the one from the TopologyContainer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2085
https://github.com/sofa-framework/sofa/pull/2085:873,Testability,test,test,873,"This PR includes PR #2082 . - move topology pointer in mother class TopologyHandler instead of TopologyDataHandler; - Register TopologyHandler directly in each TopologyContainer level instead of inside a global list.; - Remove Data list of TopologyChange from each TopologyHandler and use directly the one from the TopologyContainer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2085
https://github.com/sofa-framework/sofa/pull/2085:922,Testability,test,test,922,"This PR includes PR #2082 . - move topology pointer in mother class TopologyHandler instead of TopologyDataHandler; - Register TopologyHandler directly in each TopologyContainer level instead of inside a global list.; - Remove Data list of TopologyChange from each TopologyHandler and use directly the one from the TopologyContainer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2085
https://github.com/sofa-framework/sofa/pull/2086:731,Availability,failure,failures,731,"This PR includes PR #2085 and #2082; will be merge in TopologyChange Poc branch. This method is not needed anymore in the TopologyHandler mechanism. Remove this call from all components. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2086
https://github.com/sofa-framework/sofa/pull/2086:780,Availability,failure,failures,780,"This PR includes PR #2085 and #2082; will be merge in TopologyChange Poc branch. This method is not needed anymore in the TopologyHandler mechanism. Remove this call from all components. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2086
https://github.com/sofa-framework/sofa/pull/2086:350,Security,Certificate,Certificate,350,"This PR includes PR #2085 and #2082; will be merge in TopologyChange Poc branch. This method is not needed anymore in the TopologyHandler mechanism. Remove this call from all components. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2086
https://github.com/sofa-framework/sofa/pull/2086:461,Security,certificate,certificate-of-origin-dco,461,"This PR includes PR #2085 and #2082; will be merge in TopologyChange Poc branch. This method is not needed anymore in the TopologyHandler mechanism. Remove this call from all components. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2086
https://github.com/sofa-framework/sofa/pull/2086:726,Testability,test,test,726,"This PR includes PR #2085 and #2082; will be merge in TopologyChange Poc branch. This method is not needed anymore in the TopologyHandler mechanism. Remove this call from all components. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2086
https://github.com/sofa-framework/sofa/pull/2086:775,Testability,test,test,775,"This PR includes PR #2085 and #2082; will be merge in TopologyChange Poc branch. This method is not needed anymore in the TopologyHandler mechanism. Remove this call from all components. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2086
https://github.com/sofa-framework/sofa/pull/2087:1307,Availability,failure,failures,1307,"PR #2036 rebased and to be merge inside topologyChanges PoC branch. Add mechanism of callbacks inside ```TopologyHandler``` instead of inheriting from it and override methods. - Callback have been added inside ```TopologyDat``` a to define specific method when creating/destroying element (call by remove/add). See ```TriangularFEMForceField``` for an example; - Map of Callback has been added inside TopologyHandler to set specific callback depending on the topology event. See ```TriangularBendingSprings``` as an example which handle Edge but also Triangle removing/adding. To discuss if this is better than inheriting from ```TopologyHandler```. ![image](https://user-images.githubusercontent.com/21199245/121326580-fa3f9f80-c912-11eb-9d89-0966330bbded.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2087
https://github.com/sofa-framework/sofa/pull/2087:1356,Availability,failure,failures,1356,"PR #2036 rebased and to be merge inside topologyChanges PoC branch. Add mechanism of callbacks inside ```TopologyHandler``` instead of inheriting from it and override methods. - Callback have been added inside ```TopologyDat``` a to define specific method when creating/destroying element (call by remove/add). See ```TriangularFEMForceField``` for an example; - Map of Callback has been added inside TopologyHandler to set specific callback depending on the topology event. See ```TriangularBendingSprings``` as an example which handle Edge but also Triangle removing/adding. To discuss if this is better than inheriting from ```TopologyHandler```. ![image](https://user-images.githubusercontent.com/21199245/121326580-fa3f9f80-c912-11eb-9d89-0966330bbded.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2087
https://github.com/sofa-framework/sofa/pull/2087:442,Integrability,depend,depending,442,"PR #2036 rebased and to be merge inside topologyChanges PoC branch. Add mechanism of callbacks inside ```TopologyHandler``` instead of inheriting from it and override methods. - Callback have been added inside ```TopologyDat``` a to define specific method when creating/destroying element (call by remove/add). See ```TriangularFEMForceField``` for an example; - Map of Callback has been added inside TopologyHandler to set specific callback depending on the topology event. See ```TriangularBendingSprings``` as an example which handle Edge but also Triangle removing/adding. To discuss if this is better than inheriting from ```TopologyHandler```. ![image](https://user-images.githubusercontent.com/21199245/121326580-fa3f9f80-c912-11eb-9d89-0966330bbded.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2087
https://github.com/sofa-framework/sofa/pull/2087:135,Modifiability,inherit,inheriting,135,"PR #2036 rebased and to be merge inside topologyChanges PoC branch. Add mechanism of callbacks inside ```TopologyHandler``` instead of inheriting from it and override methods. - Callback have been added inside ```TopologyDat``` a to define specific method when creating/destroying element (call by remove/add). See ```TriangularFEMForceField``` for an example; - Map of Callback has been added inside TopologyHandler to set specific callback depending on the topology event. See ```TriangularBendingSprings``` as an example which handle Edge but also Triangle removing/adding. To discuss if this is better than inheriting from ```TopologyHandler```. ![image](https://user-images.githubusercontent.com/21199245/121326580-fa3f9f80-c912-11eb-9d89-0966330bbded.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2087
https://github.com/sofa-framework/sofa/pull/2087:611,Modifiability,inherit,inheriting,611,"PR #2036 rebased and to be merge inside topologyChanges PoC branch. Add mechanism of callbacks inside ```TopologyHandler``` instead of inheriting from it and override methods. - Callback have been added inside ```TopologyDat``` a to define specific method when creating/destroying element (call by remove/add). See ```TriangularFEMForceField``` for an example; - Map of Callback has been added inside TopologyHandler to set specific callback depending on the topology event. See ```TriangularBendingSprings``` as an example which handle Edge but also Triangle removing/adding. To discuss if this is better than inheriting from ```TopologyHandler```. ![image](https://user-images.githubusercontent.com/21199245/121326580-fa3f9f80-c912-11eb-9d89-0966330bbded.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2087
https://github.com/sofa-framework/sofa/pull/2087:926,Security,Certificate,Certificate,926,"PR #2036 rebased and to be merge inside topologyChanges PoC branch. Add mechanism of callbacks inside ```TopologyHandler``` instead of inheriting from it and override methods. - Callback have been added inside ```TopologyDat``` a to define specific method when creating/destroying element (call by remove/add). See ```TriangularFEMForceField``` for an example; - Map of Callback has been added inside TopologyHandler to set specific callback depending on the topology event. See ```TriangularBendingSprings``` as an example which handle Edge but also Triangle removing/adding. To discuss if this is better than inheriting from ```TopologyHandler```. ![image](https://user-images.githubusercontent.com/21199245/121326580-fa3f9f80-c912-11eb-9d89-0966330bbded.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2087
https://github.com/sofa-framework/sofa/pull/2087:1037,Security,certificate,certificate-of-origin-dco,1037,"PR #2036 rebased and to be merge inside topologyChanges PoC branch. Add mechanism of callbacks inside ```TopologyHandler``` instead of inheriting from it and override methods. - Callback have been added inside ```TopologyDat``` a to define specific method when creating/destroying element (call by remove/add). See ```TriangularFEMForceField``` for an example; - Map of Callback has been added inside TopologyHandler to set specific callback depending on the topology event. See ```TriangularBendingSprings``` as an example which handle Edge but also Triangle removing/adding. To discuss if this is better than inheriting from ```TopologyHandler```. ![image](https://user-images.githubusercontent.com/21199245/121326580-fa3f9f80-c912-11eb-9d89-0966330bbded.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2087
https://github.com/sofa-framework/sofa/pull/2087:1302,Testability,test,test,1302,"PR #2036 rebased and to be merge inside topologyChanges PoC branch. Add mechanism of callbacks inside ```TopologyHandler``` instead of inheriting from it and override methods. - Callback have been added inside ```TopologyDat``` a to define specific method when creating/destroying element (call by remove/add). See ```TriangularFEMForceField``` for an example; - Map of Callback has been added inside TopologyHandler to set specific callback depending on the topology event. See ```TriangularBendingSprings``` as an example which handle Edge but also Triangle removing/adding. To discuss if this is better than inheriting from ```TopologyHandler```. ![image](https://user-images.githubusercontent.com/21199245/121326580-fa3f9f80-c912-11eb-9d89-0966330bbded.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2087
https://github.com/sofa-framework/sofa/pull/2087:1351,Testability,test,test,1351,"PR #2036 rebased and to be merge inside topologyChanges PoC branch. Add mechanism of callbacks inside ```TopologyHandler``` instead of inheriting from it and override methods. - Callback have been added inside ```TopologyDat``` a to define specific method when creating/destroying element (call by remove/add). See ```TriangularFEMForceField``` for an example; - Map of Callback has been added inside TopologyHandler to set specific callback depending on the topology event. See ```TriangularBendingSprings``` as an example which handle Edge but also Triangle removing/adding. To discuss if this is better than inheriting from ```TopologyHandler```. ![image](https://user-images.githubusercontent.com/21199245/121326580-fa3f9f80-c912-11eb-9d89-0966330bbded.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2087
https://github.com/sofa-framework/sofa/pull/2089:35223,Availability,failure,failures,35223," 85!809@63043915; 3 	 9.90	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: 3@$$%7#90620#1@; 3 	 9.90	 0.30	 0 	 0.02	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: $6635#@9%@01449; 3 	 9.90	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: 0$%3@43%672$7@2; 4 	 9.95	 0.61	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: triangleCollisionModel2-lineCollisionModel3; 4 	 9.96	 0.61	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: lineCollisionModel2-lineCollisionModel3; 4 	 9.96	 0.61	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: lineCollisionModel3-pointCollisionModel2; 3 	 9.98	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: #%#0#443865$42#; 3 	 9.98	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: 9$@$$8293@70939; 3 	 10.06	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: 9$@$$8293@70939; 3 	 10.06	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: #%#0#443865$42#; 3 	 10.07	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: 0$%3@43%672$7@2; 3 	 10.07	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: $6635#@9%@01449; 3 	 10.07	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: 3@$$%7#90620#1@. ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089
https://github.com/sofa-framework/sofa/pull/2089:35272,Availability,failure,failures,35272," 85!809@63043915; 3 	 9.90	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: 3@$$%7#90620#1@; 3 	 9.90	 0.30	 0 	 0.02	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: $6635#@9%@01449; 3 	 9.90	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: 0$%3@43%672$7@2; 4 	 9.95	 0.61	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: triangleCollisionModel2-lineCollisionModel3; 4 	 9.96	 0.61	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: lineCollisionModel2-lineCollisionModel3; 4 	 9.96	 0.61	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: lineCollisionModel3-pointCollisionModel2; 3 	 9.98	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: #%#0#443865$42#; 3 	 9.98	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: 9$@$$8293@70939; 3 	 10.06	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: 9$@$$8293@70939; 3 	 10.06	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: #%#0#443865$42#; 3 	 10.07	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: 0$%3@43%672$7@2; 3 	 10.07	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: $6635#@9%@01449; 3 	 10.07	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: 3@$$%7#90620#1@. ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089
https://github.com/sofa-framework/sofa/pull/2089:1108,Deployability,Update,UpdateInternalDataVisitor,1108,ther is without.; The goal is to evaluate the effects of a group manager on the simulation and on the performances. # Performances. running CollisionGroupManager_with.scn for 1000 time steps: 8.2129 s ( 121.76 FPS); running CollisionGroupManager_without.scn for 1000 time steps: 4.82236 s ( 207.368 FPS). Similar results if run with #2076. # Behavior. The simulation seems to behave differently with or without the group manager:; ![groupmanager](https://user-images.githubusercontent.com/10572752/118451813-ea5ae400-b6f5-11eb-992f-65f047f1107c.gif). #2076 seems to have no effect on the behavior. # Benchmark Details. ## without. ```; Steps Duration Statistics (in ms) :; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 0 	 0 	1000 	 4.04	 9 	 4.79	 0.46	4786.01	 100 	TOTAL; 1 	 0 	 1 	 4.04	 8.98	 4.78	 0.46	 4.78	 99.98	.Simulation::animate; 2 	 0.01	 1 	 0 	 0.03	 0.01	 0 	 0.01	 0.12	..BehaviorUpdatePositionVisitor; 2 	 0.02	 1 	 0.01	 0.04	 0.01	 0 	 0.01	 0.17	..UpdateInternalDataVisitor; 2 	 0.02	 1 	 3.87	 8.73	 4.57	 0.44	 4.57	 95.56	..AnimateVisitor; 3 	 0.04	 1 	 2.29	 7.10	 3.03	 0.36	 3.03	 63.35	...Collision; 4 	 0.04	 1 	 0 	 0.03	 0.01	 0 	 0.01	 0.17	....begin collision; 4 	 0.05	 1 	 0 	 0.04	 0.01	 0 	 0.01	 0.25	....CollisionReset; 4 	 0.08	 1 	 2.06	 4.76	 2.70	 0.31	 2.70	 56.49	....doCollisionDetection; 5 	 0.08	 1 	 0.07	 1.33	 0.08	 0.04	 0.08	 1.61	.....ComputeBoundingTree; 6 	 0.08	 1 	 0.01	 0.22	 0.01	 0.01	 0.01	 0.30	......Compute BoundingTree: triangleCollisionModel1; 6 	 0.10	 1 	 0.01	 0.20	 0.02	 0.01	 0.02	 0.33	......Compute BoundingTree: lineCollisionModel1; 6 	 0.11	 1 	 0 	 0.13	 0.01	 0 	 0.01	 0.12	......Compute BoundingTree: pointCollisionModel1; 6 	 0.12	 1 	 0.01	 0.16	 0.01	 0.01	 0.01	 0.26	......Compute BoundingTree: triangleCollisionModel2; 6 	 0.13	 1 	 0.01	 0.20	 0.01	 0.01	 0.01	 0.31	......Compute BoundingTree: lineCollisionModel2; 6 	 0.15	 1 	 0 	 0.13	 0.01	 0 	 0.01	 0.12	......Compute BoundingTree: pointCol,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089
https://github.com/sofa-framework/sofa/pull/2089:3245,Deployability,Update,UpdateVAndX,3245,9	 0 	 0 	 0 	 0.04	......Compute BoundingTree: lineCollisionModel3; 6 	 0.16	 1 	 0 	 0.10	 0 	 0 	 0 	 0.03	......Compute BoundingTree: pointCollisionModel3; 5 	 0.16	 1 	 0.01	 0.03	 0.01	 0 	 0.01	 0.19	.....BroadPhase; 5 	 0.17	 1 	 1.98	 3.67	 2.62	 0.30	 2.62	 54.67	.....NarrowPhase; 4 	 2.78	 1 	 0.17	 2.29	 0.27	 0.08	 0.27	 5.59	....CollisionResponse; 4 	 3.06	 1 	 0.01	 0.06	 0.01	 0 	 0.01	 0.20	....end collision; 3 	 3.07	 9 	 0 	 0.03	 0 	 0 	 0.01	 0.13	...InteractionFF; 3 	 3.08	 2 	 0.19	 1.48	 0.76	 0.18	 1.51	 31.59	...Mechanical; 4 	 3.11	 2 	 0.05	 0.14	 0.06	 0.01	 0.12	 2.53	....ComputeForce; 4 	 3.17	 2 	 0.03	 0.11	 0.04	 0.01	 0.08	 1.68	....ComputeRHTerm; 4 	 3.22	 2 	 0 	 0.02	 0 	 0 	 0 	 0.09	....MBKBuild; 5 	 3.22	 2 	 0 	 0.02	 0 	 0 	 0 	 0.03	.....CG-setSystemMBKMatrix; 4 	 3.22	 2 	 0.06	 1.24	 0.60	 0.16	 1.21	 25.25	....MBKSolve; 5 	 3.25	 2 	 0.04	 1.20	 0.57	 0.16	 1.14	 23.86	.....CG-Solve; 4 	 3.94	 2 	 0 	 0.02	 0 	 0 	 0.01	 0.15	....UpdateVAndX; 2 	 4.60	 1 	 0.01	 0.03	 0.01	 0 	 0.01	 0.23	..UpdateSimulationContextVisitor; 2 	 4.62	 1 	 0.02	 0.07	 0.02	 0.01	 0.02	 0.46	..UpdateMapping; 3 	 4.62	 26.67	 0 	 0.02	 0 	 0 	 0 	 0.05	...MappingVisitor - processMechanicalMapping: unnamed; 2 	 4.64	 1 	 0.12	 0.44	 0.14	 0.03	 0.14	 3.02	..UpdateBBox; 3 	 4.64	 1 	 0.01	 0.07	 0.02	 0 	 0.02	 0.35	...BoundingBoxVisitor - ProcessTopDown: root; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaGeneralDeformable; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMiscCollision; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaImplicitOdeSolver; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMeshCollision; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaTopologyMapping; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaLoader; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: visualStyle1; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: defaultPipeline1; 4 	 4.65	 1 	 ,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089
https://github.com/sofa-framework/sofa/pull/2089:3307,Deployability,Update,UpdateSimulationContextVisitor,3307, 0.16	 1 	 0 	 0.10	 0 	 0 	 0 	 0.03	......Compute BoundingTree: pointCollisionModel3; 5 	 0.16	 1 	 0.01	 0.03	 0.01	 0 	 0.01	 0.19	.....BroadPhase; 5 	 0.17	 1 	 1.98	 3.67	 2.62	 0.30	 2.62	 54.67	.....NarrowPhase; 4 	 2.78	 1 	 0.17	 2.29	 0.27	 0.08	 0.27	 5.59	....CollisionResponse; 4 	 3.06	 1 	 0.01	 0.06	 0.01	 0 	 0.01	 0.20	....end collision; 3 	 3.07	 9 	 0 	 0.03	 0 	 0 	 0.01	 0.13	...InteractionFF; 3 	 3.08	 2 	 0.19	 1.48	 0.76	 0.18	 1.51	 31.59	...Mechanical; 4 	 3.11	 2 	 0.05	 0.14	 0.06	 0.01	 0.12	 2.53	....ComputeForce; 4 	 3.17	 2 	 0.03	 0.11	 0.04	 0.01	 0.08	 1.68	....ComputeRHTerm; 4 	 3.22	 2 	 0 	 0.02	 0 	 0 	 0 	 0.09	....MBKBuild; 5 	 3.22	 2 	 0 	 0.02	 0 	 0 	 0 	 0.03	.....CG-setSystemMBKMatrix; 4 	 3.22	 2 	 0.06	 1.24	 0.60	 0.16	 1.21	 25.25	....MBKSolve; 5 	 3.25	 2 	 0.04	 1.20	 0.57	 0.16	 1.14	 23.86	.....CG-Solve; 4 	 3.94	 2 	 0 	 0.02	 0 	 0 	 0.01	 0.15	....UpdateVAndX; 2 	 4.60	 1 	 0.01	 0.03	 0.01	 0 	 0.01	 0.23	..UpdateSimulationContextVisitor; 2 	 4.62	 1 	 0.02	 0.07	 0.02	 0.01	 0.02	 0.46	..UpdateMapping; 3 	 4.62	 26.67	 0 	 0.02	 0 	 0 	 0 	 0.05	...MappingVisitor - processMechanicalMapping: unnamed; 2 	 4.64	 1 	 0.12	 0.44	 0.14	 0.03	 0.14	 3.02	..UpdateBBox; 3 	 4.64	 1 	 0.01	 0.07	 0.02	 0 	 0.02	 0.35	...BoundingBoxVisitor - ProcessTopDown: root; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaGeneralDeformable; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMiscCollision; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaImplicitOdeSolver; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMeshCollision; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaTopologyMapping; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaLoader; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: visualStyle1; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: defaultPipeline1; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bruteForceBroadPhase1; 4 	 4.65,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089
https://github.com/sofa-framework/sofa/pull/2089:3390,Deployability,Update,UpdateMapping,3390,lisionModel3; 5 	 0.16	 1 	 0.01	 0.03	 0.01	 0 	 0.01	 0.19	.....BroadPhase; 5 	 0.17	 1 	 1.98	 3.67	 2.62	 0.30	 2.62	 54.67	.....NarrowPhase; 4 	 2.78	 1 	 0.17	 2.29	 0.27	 0.08	 0.27	 5.59	....CollisionResponse; 4 	 3.06	 1 	 0.01	 0.06	 0.01	 0 	 0.01	 0.20	....end collision; 3 	 3.07	 9 	 0 	 0.03	 0 	 0 	 0.01	 0.13	...InteractionFF; 3 	 3.08	 2 	 0.19	 1.48	 0.76	 0.18	 1.51	 31.59	...Mechanical; 4 	 3.11	 2 	 0.05	 0.14	 0.06	 0.01	 0.12	 2.53	....ComputeForce; 4 	 3.17	 2 	 0.03	 0.11	 0.04	 0.01	 0.08	 1.68	....ComputeRHTerm; 4 	 3.22	 2 	 0 	 0.02	 0 	 0 	 0 	 0.09	....MBKBuild; 5 	 3.22	 2 	 0 	 0.02	 0 	 0 	 0 	 0.03	.....CG-setSystemMBKMatrix; 4 	 3.22	 2 	 0.06	 1.24	 0.60	 0.16	 1.21	 25.25	....MBKSolve; 5 	 3.25	 2 	 0.04	 1.20	 0.57	 0.16	 1.14	 23.86	.....CG-Solve; 4 	 3.94	 2 	 0 	 0.02	 0 	 0 	 0.01	 0.15	....UpdateVAndX; 2 	 4.60	 1 	 0.01	 0.03	 0.01	 0 	 0.01	 0.23	..UpdateSimulationContextVisitor; 2 	 4.62	 1 	 0.02	 0.07	 0.02	 0.01	 0.02	 0.46	..UpdateMapping; 3 	 4.62	 26.67	 0 	 0.02	 0 	 0 	 0 	 0.05	...MappingVisitor - processMechanicalMapping: unnamed; 2 	 4.64	 1 	 0.12	 0.44	 0.14	 0.03	 0.14	 3.02	..UpdateBBox; 3 	 4.64	 1 	 0.01	 0.07	 0.02	 0 	 0.02	 0.35	...BoundingBoxVisitor - ProcessTopDown: root; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaGeneralDeformable; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMiscCollision; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaImplicitOdeSolver; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMeshCollision; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaTopologyMapping; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaLoader; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: visualStyle1; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: defaultPipeline1; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bruteForceBroadPhase1; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bVHNarrowPhase1; 4 	 4.65	 1 ,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089
https://github.com/sofa-framework/sofa/pull/2089:3555,Deployability,Update,UpdateBBox,3555,	 2.29	 0.27	 0.08	 0.27	 5.59	....CollisionResponse; 4 	 3.06	 1 	 0.01	 0.06	 0.01	 0 	 0.01	 0.20	....end collision; 3 	 3.07	 9 	 0 	 0.03	 0 	 0 	 0.01	 0.13	...InteractionFF; 3 	 3.08	 2 	 0.19	 1.48	 0.76	 0.18	 1.51	 31.59	...Mechanical; 4 	 3.11	 2 	 0.05	 0.14	 0.06	 0.01	 0.12	 2.53	....ComputeForce; 4 	 3.17	 2 	 0.03	 0.11	 0.04	 0.01	 0.08	 1.68	....ComputeRHTerm; 4 	 3.22	 2 	 0 	 0.02	 0 	 0 	 0 	 0.09	....MBKBuild; 5 	 3.22	 2 	 0 	 0.02	 0 	 0 	 0 	 0.03	.....CG-setSystemMBKMatrix; 4 	 3.22	 2 	 0.06	 1.24	 0.60	 0.16	 1.21	 25.25	....MBKSolve; 5 	 3.25	 2 	 0.04	 1.20	 0.57	 0.16	 1.14	 23.86	.....CG-Solve; 4 	 3.94	 2 	 0 	 0.02	 0 	 0 	 0.01	 0.15	....UpdateVAndX; 2 	 4.60	 1 	 0.01	 0.03	 0.01	 0 	 0.01	 0.23	..UpdateSimulationContextVisitor; 2 	 4.62	 1 	 0.02	 0.07	 0.02	 0.01	 0.02	 0.46	..UpdateMapping; 3 	 4.62	 26.67	 0 	 0.02	 0 	 0 	 0 	 0.05	...MappingVisitor - processMechanicalMapping: unnamed; 2 	 4.64	 1 	 0.12	 0.44	 0.14	 0.03	 0.14	 3.02	..UpdateBBox; 3 	 4.64	 1 	 0.01	 0.07	 0.02	 0 	 0.02	 0.35	...BoundingBoxVisitor - ProcessTopDown: root; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaGeneralDeformable; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMiscCollision; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaImplicitOdeSolver; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMeshCollision; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaTopologyMapping; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaLoader; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: visualStyle1; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: defaultPipeline1; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bruteForceBroadPhase1; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bVHNarrowPhase1; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: Proximity; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: Response; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....Compu,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089
https://github.com/sofa-framework/sofa/pull/2089:16975,Deployability,Update,UpdateInternalDataVisitor,16975,odel3-pointCollisionModel2; 3 	 5.03	 0.32	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: 2!@!3539%65%105; 3 	 5.05	 0.32	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: 94$380727253%1$; 3 	 5.05	 0.32	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: 6389%3%2#589529; 3 	 5.06	 0.32	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: 6389%3%2#589529; 3 	 5.06	 0.32	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: 94$380727253%1$; 3 	 5.06	 0.32	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: 2!@!3539%65%105; ```; ## with. ```; Steps Duration Statistics (in ms) :; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 0 	 0 	1000 	 5.74	 12.76	 8.17	 1.42	8172.89	 100 	TOTAL; 1 	 0 	 1 	 5.74	 12.75	 8.17	 1.42	 8.17	 99.97	.Simulation::animate; 2 	 0.01	 1 	 0 	 0.02	 0.01	 0 	 0.01	 0.08	..BehaviorUpdatePositionVisitor; 2 	 0.02	 1 	 0.01	 0.04	 0.01	 0 	 0.01	 0.12	..UpdateInternalDataVisitor; 2 	 0.03	 1 	 5.56	 12.13	 7.90	 1.38	 7.90	 96.70	..AnimateVisitor; 3 	 0.05	 1 	 3.47	 7.77	 4.76	 0.90	 4.76	 58.22	...Collision; 4 	 0.05	 1 	 0 	 0.04	 0.01	 0 	 0.01	 0.10	....begin collision; 4 	 0.06	 1 	 0 	 0.24	 0.05	 0.02	 0.05	 0.64	....CollisionReset; 4 	 0.14	 1 	 1.99	 5.48	 2.69	 0.36	 2.69	 32.94	....doCollisionDetection; 5 	 0.14	 1 	 0.07	 1.43	 0.10	 0.04	 0.10	 1.16	.....ComputeBoundingTree; 6 	 0.19	 1 	 0.01	 0.22	 0.02	 0.01	 0.02	 0.19	......Compute BoundingTree: triangleCollisionModel1; 6 	 0.21	 1 	 0.02	 0.20	 0.02	 0.01	 0.02	 0.21	......Compute BoundingTree: lineCollisionModel1; 6 	 0.22	 1 	 0.01	 0.13	 0.01	 0 	 0.01	 0.10	......Compute BoundingTree: pointCollisionModel1; 6 	 0.15	 1 	 0.01	 0.16	 0.01	 0 	 0.01	 0.18	......Compute BoundingTree: triangleCollisionModel2; 6 	 0.17	 1 	 0.01	 0.22	 0.02	 0.01	 0.02	 0.21	......Compute BoundingTree: lineCollisionModel2; 6 	 0.18	 1 	 0.01	 0.17	 0.01	 0.01	 0.01	 0.09	......Compute BoundingTree: p,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089
https://github.com/sofa-framework/sofa/pull/2089:19061,Deployability,Update,UpdateVAndX,19061,undingTree: triangleCollisionModel3; 6 	 0.15	 1 	 0 	 0.16	 0 	 0.01	 0 	 0.04	......Compute BoundingTree: lineCollisionModel3; 6 	 0.15	 1 	 0 	 0.09	 0 	 0 	 0 	 0.03	......Compute BoundingTree: pointCollisionModel3; 5 	 0.23	 1 	 0.01	 0.04	 0.01	 0 	 0.01	 0.17	.....BroadPhase; 5 	 0.25	 1 	 1.88	 5.32	 2.58	 0.36	 2.58	 31.60	.....NarrowPhase; 4 	 2.83	 1 	 0.70	 4.50	 1.95	 0.89	 1.95	 23.87	....CollisionResponse; 4 	 4.79	 1 	 0.01	 0.03	 0.01	 0 	 0.01	 0.15	....end collision; 3 	 4.81	 1 	 1.75	 5.13	 3.12	 0.54	 3.12	 38.16	...Mechanical; 4 	 5.02	 1 	 0.12	 0.24	 0.14	 0.02	 0.14	 1.70	....ComputeForce; 4 	 5.16	 1 	 0.08	 0.27	 0.10	 0.01	 0.10	 1.17	....ComputeRHTerm; 4 	 5.26	 1 	 0 	 0.02	 0 	 0 	 0 	 0.04	....MBKBuild; 5 	 5.26	 1 	 0 	 0.01	 0 	 0 	 0 	 0.02	.....CG-setSystemMBKMatrix; 4 	 5.26	 1 	 1.38	 4.15	 2.11	 0.34	 2.11	 25.84	....MBKSolve; 5 	 5.35	 1 	 1.29	 3.98	 2 	 0.34	 2 	 24.46	.....CG-Solve; 4 	 7.37	 1 	 0.01	 0.04	 0.01	 0 	 0.01	 0.09	....UpdateVAndX; 2 	 7.93	 1 	 0.01	 0.05	 0.02	 0 	 0.02	 0.19	..UpdateSimulationContextVisitor; 2 	 7.96	 1 	 0.02	 0.23	 0.03	 0.01	 0.03	 0.32	..UpdateMapping; 3 	 7.96	 26.51	 0 	 0.01	 0 	 0 	 0 	 0.03	...MappingVisitor - processMechanicalMapping: unnamed; 2 	 7.99	 1 	 0.13	 0.51	 0.18	 0.04	 0.18	 2.26	..UpdateBBox; 3 	 7.99	 1 	 0.01	 0.05	 0.01	 0 	 0.01	 0.17	...BoundingBoxVisitor - ProcessTopDown: root; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaGeneralDeformable; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMiscCollision; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaImplicitOdeSolver; 4 	 8 	 1 	 0 	 0.01	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMeshCollision; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaTopologyMapping; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaLoader; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: visualStyle1; 4 	 8 	 1 	 0 	 0.02	 0 	 0 	 0 	 0 	....ComputeBBox: defaultPipeline1; 4 	 8 	 1 	 0 	 0 	 ,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089
https://github.com/sofa-framework/sofa/pull/2089:19123,Deployability,Update,UpdateSimulationContextVisitor,19123, 	 0.04	......Compute BoundingTree: lineCollisionModel3; 6 	 0.15	 1 	 0 	 0.09	 0 	 0 	 0 	 0.03	......Compute BoundingTree: pointCollisionModel3; 5 	 0.23	 1 	 0.01	 0.04	 0.01	 0 	 0.01	 0.17	.....BroadPhase; 5 	 0.25	 1 	 1.88	 5.32	 2.58	 0.36	 2.58	 31.60	.....NarrowPhase; 4 	 2.83	 1 	 0.70	 4.50	 1.95	 0.89	 1.95	 23.87	....CollisionResponse; 4 	 4.79	 1 	 0.01	 0.03	 0.01	 0 	 0.01	 0.15	....end collision; 3 	 4.81	 1 	 1.75	 5.13	 3.12	 0.54	 3.12	 38.16	...Mechanical; 4 	 5.02	 1 	 0.12	 0.24	 0.14	 0.02	 0.14	 1.70	....ComputeForce; 4 	 5.16	 1 	 0.08	 0.27	 0.10	 0.01	 0.10	 1.17	....ComputeRHTerm; 4 	 5.26	 1 	 0 	 0.02	 0 	 0 	 0 	 0.04	....MBKBuild; 5 	 5.26	 1 	 0 	 0.01	 0 	 0 	 0 	 0.02	.....CG-setSystemMBKMatrix; 4 	 5.26	 1 	 1.38	 4.15	 2.11	 0.34	 2.11	 25.84	....MBKSolve; 5 	 5.35	 1 	 1.29	 3.98	 2 	 0.34	 2 	 24.46	.....CG-Solve; 4 	 7.37	 1 	 0.01	 0.04	 0.01	 0 	 0.01	 0.09	....UpdateVAndX; 2 	 7.93	 1 	 0.01	 0.05	 0.02	 0 	 0.02	 0.19	..UpdateSimulationContextVisitor; 2 	 7.96	 1 	 0.02	 0.23	 0.03	 0.01	 0.03	 0.32	..UpdateMapping; 3 	 7.96	 26.51	 0 	 0.01	 0 	 0 	 0 	 0.03	...MappingVisitor - processMechanicalMapping: unnamed; 2 	 7.99	 1 	 0.13	 0.51	 0.18	 0.04	 0.18	 2.26	..UpdateBBox; 3 	 7.99	 1 	 0.01	 0.05	 0.01	 0 	 0.01	 0.17	...BoundingBoxVisitor - ProcessTopDown: root; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaGeneralDeformable; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMiscCollision; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaImplicitOdeSolver; 4 	 8 	 1 	 0 	 0.01	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMeshCollision; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaTopologyMapping; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaLoader; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: visualStyle1; 4 	 8 	 1 	 0 	 0.02	 0 	 0 	 0 	 0 	....ComputeBBox: defaultPipeline1; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bruteForceBroadPhase1; 4 	 8 	 1 	 0 	 ,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089
https://github.com/sofa-framework/sofa/pull/2089:19206,Deployability,Update,UpdateMapping,19206, 0.09	 0 	 0 	 0 	 0.03	......Compute BoundingTree: pointCollisionModel3; 5 	 0.23	 1 	 0.01	 0.04	 0.01	 0 	 0.01	 0.17	.....BroadPhase; 5 	 0.25	 1 	 1.88	 5.32	 2.58	 0.36	 2.58	 31.60	.....NarrowPhase; 4 	 2.83	 1 	 0.70	 4.50	 1.95	 0.89	 1.95	 23.87	....CollisionResponse; 4 	 4.79	 1 	 0.01	 0.03	 0.01	 0 	 0.01	 0.15	....end collision; 3 	 4.81	 1 	 1.75	 5.13	 3.12	 0.54	 3.12	 38.16	...Mechanical; 4 	 5.02	 1 	 0.12	 0.24	 0.14	 0.02	 0.14	 1.70	....ComputeForce; 4 	 5.16	 1 	 0.08	 0.27	 0.10	 0.01	 0.10	 1.17	....ComputeRHTerm; 4 	 5.26	 1 	 0 	 0.02	 0 	 0 	 0 	 0.04	....MBKBuild; 5 	 5.26	 1 	 0 	 0.01	 0 	 0 	 0 	 0.02	.....CG-setSystemMBKMatrix; 4 	 5.26	 1 	 1.38	 4.15	 2.11	 0.34	 2.11	 25.84	....MBKSolve; 5 	 5.35	 1 	 1.29	 3.98	 2 	 0.34	 2 	 24.46	.....CG-Solve; 4 	 7.37	 1 	 0.01	 0.04	 0.01	 0 	 0.01	 0.09	....UpdateVAndX; 2 	 7.93	 1 	 0.01	 0.05	 0.02	 0 	 0.02	 0.19	..UpdateSimulationContextVisitor; 2 	 7.96	 1 	 0.02	 0.23	 0.03	 0.01	 0.03	 0.32	..UpdateMapping; 3 	 7.96	 26.51	 0 	 0.01	 0 	 0 	 0 	 0.03	...MappingVisitor - processMechanicalMapping: unnamed; 2 	 7.99	 1 	 0.13	 0.51	 0.18	 0.04	 0.18	 2.26	..UpdateBBox; 3 	 7.99	 1 	 0.01	 0.05	 0.01	 0 	 0.01	 0.17	...BoundingBoxVisitor - ProcessTopDown: root; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaGeneralDeformable; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMiscCollision; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaImplicitOdeSolver; 4 	 8 	 1 	 0 	 0.01	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMeshCollision; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaTopologyMapping; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaLoader; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: visualStyle1; 4 	 8 	 1 	 0 	 0.02	 0 	 0 	 0 	 0 	....ComputeBBox: defaultPipeline1; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bruteForceBroadPhase1; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bVHNarrowPhase1; 4 	 8 	 1 	 0 	 0 	 0 ,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089
https://github.com/sofa-framework/sofa/pull/2089:19371,Deployability,Update,UpdateBBox,19371,2.58	 0.36	 2.58	 31.60	.....NarrowPhase; 4 	 2.83	 1 	 0.70	 4.50	 1.95	 0.89	 1.95	 23.87	....CollisionResponse; 4 	 4.79	 1 	 0.01	 0.03	 0.01	 0 	 0.01	 0.15	....end collision; 3 	 4.81	 1 	 1.75	 5.13	 3.12	 0.54	 3.12	 38.16	...Mechanical; 4 	 5.02	 1 	 0.12	 0.24	 0.14	 0.02	 0.14	 1.70	....ComputeForce; 4 	 5.16	 1 	 0.08	 0.27	 0.10	 0.01	 0.10	 1.17	....ComputeRHTerm; 4 	 5.26	 1 	 0 	 0.02	 0 	 0 	 0 	 0.04	....MBKBuild; 5 	 5.26	 1 	 0 	 0.01	 0 	 0 	 0 	 0.02	.....CG-setSystemMBKMatrix; 4 	 5.26	 1 	 1.38	 4.15	 2.11	 0.34	 2.11	 25.84	....MBKSolve; 5 	 5.35	 1 	 1.29	 3.98	 2 	 0.34	 2 	 24.46	.....CG-Solve; 4 	 7.37	 1 	 0.01	 0.04	 0.01	 0 	 0.01	 0.09	....UpdateVAndX; 2 	 7.93	 1 	 0.01	 0.05	 0.02	 0 	 0.02	 0.19	..UpdateSimulationContextVisitor; 2 	 7.96	 1 	 0.02	 0.23	 0.03	 0.01	 0.03	 0.32	..UpdateMapping; 3 	 7.96	 26.51	 0 	 0.01	 0 	 0 	 0 	 0.03	...MappingVisitor - processMechanicalMapping: unnamed; 2 	 7.99	 1 	 0.13	 0.51	 0.18	 0.04	 0.18	 2.26	..UpdateBBox; 3 	 7.99	 1 	 0.01	 0.05	 0.01	 0 	 0.01	 0.17	...BoundingBoxVisitor - ProcessTopDown: root; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaGeneralDeformable; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMiscCollision; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaImplicitOdeSolver; 4 	 8 	 1 	 0 	 0.01	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMeshCollision; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaTopologyMapping; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaLoader; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: visualStyle1; 4 	 8 	 1 	 0 	 0.02	 0 	 0 	 0 	 0 	....ComputeBBox: defaultPipeline1; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bruteForceBroadPhase1; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bVHNarrowPhase1; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: Proximity; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: Response; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: GroupMan,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089
https://github.com/sofa-framework/sofa/pull/2089:226,Performance,perform,performances,226,"Introduction of two scene files. This is actually the same scene, but one is with a `DefaultCollisionGroupManager` and the other is without.; The goal is to evaluate the effects of a group manager on the simulation and on the performances. # Performances. running CollisionGroupManager_with.scn for 1000 time steps: 8.2129 s ( 121.76 FPS); running CollisionGroupManager_without.scn for 1000 time steps: 4.82236 s ( 207.368 FPS). Similar results if run with #2076. # Behavior. The simulation seems to behave differently with or without the group manager:; ![groupmanager](https://user-images.githubusercontent.com/10572752/118451813-ea5ae400-b6f5-11eb-992f-65f047f1107c.gif). #2076 seems to have no effect on the behavior. # Benchmark Details. ## without. ```; Steps Duration Statistics (in ms) :; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 0 	 0 	1000 	 4.04	 9 	 4.79	 0.46	4786.01	 100 	TOTAL; 1 	 0 	 1 	 4.04	 8.98	 4.78	 0.46	 4.78	 99.98	.Simulation::animate; 2 	 0.01	 1 	 0 	 0.03	 0.01	 0 	 0.01	 0.12	..BehaviorUpdatePositionVisitor; 2 	 0.02	 1 	 0.01	 0.04	 0.01	 0 	 0.01	 0.17	..UpdateInternalDataVisitor; 2 	 0.02	 1 	 3.87	 8.73	 4.57	 0.44	 4.57	 95.56	..AnimateVisitor; 3 	 0.04	 1 	 2.29	 7.10	 3.03	 0.36	 3.03	 63.35	...Collision; 4 	 0.04	 1 	 0 	 0.03	 0.01	 0 	 0.01	 0.17	....begin collision; 4 	 0.05	 1 	 0 	 0.04	 0.01	 0 	 0.01	 0.25	....CollisionReset; 4 	 0.08	 1 	 2.06	 4.76	 2.70	 0.31	 2.70	 56.49	....doCollisionDetection; 5 	 0.08	 1 	 0.07	 1.33	 0.08	 0.04	 0.08	 1.61	.....ComputeBoundingTree; 6 	 0.08	 1 	 0.01	 0.22	 0.01	 0.01	 0.01	 0.30	......Compute BoundingTree: triangleCollisionModel1; 6 	 0.10	 1 	 0.01	 0.20	 0.02	 0.01	 0.02	 0.33	......Compute BoundingTree: lineCollisionModel1; 6 	 0.11	 1 	 0 	 0.13	 0.01	 0 	 0.01	 0.12	......Compute BoundingTree: pointCollisionModel1; 6 	 0.12	 1 	 0.01	 0.16	 0.01	 0.01	 0.01	 0.26	......Compute BoundingTree: triangleCollisionModel2; 6 	 0.13	 1 	 0.01	 0.20	 0.01	 0.01	 0.01	 0.31	......",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089
https://github.com/sofa-framework/sofa/pull/2089:242,Performance,Perform,Performances,242,"Introduction of two scene files. This is actually the same scene, but one is with a `DefaultCollisionGroupManager` and the other is without.; The goal is to evaluate the effects of a group manager on the simulation and on the performances. # Performances. running CollisionGroupManager_with.scn for 1000 time steps: 8.2129 s ( 121.76 FPS); running CollisionGroupManager_without.scn for 1000 time steps: 4.82236 s ( 207.368 FPS). Similar results if run with #2076. # Behavior. The simulation seems to behave differently with or without the group manager:; ![groupmanager](https://user-images.githubusercontent.com/10572752/118451813-ea5ae400-b6f5-11eb-992f-65f047f1107c.gif). #2076 seems to have no effect on the behavior. # Benchmark Details. ## without. ```; Steps Duration Statistics (in ms) :; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 0 	 0 	1000 	 4.04	 9 	 4.79	 0.46	4786.01	 100 	TOTAL; 1 	 0 	 1 	 4.04	 8.98	 4.78	 0.46	 4.78	 99.98	.Simulation::animate; 2 	 0.01	 1 	 0 	 0.03	 0.01	 0 	 0.01	 0.12	..BehaviorUpdatePositionVisitor; 2 	 0.02	 1 	 0.01	 0.04	 0.01	 0 	 0.01	 0.17	..UpdateInternalDataVisitor; 2 	 0.02	 1 	 3.87	 8.73	 4.57	 0.44	 4.57	 95.56	..AnimateVisitor; 3 	 0.04	 1 	 2.29	 7.10	 3.03	 0.36	 3.03	 63.35	...Collision; 4 	 0.04	 1 	 0 	 0.03	 0.01	 0 	 0.01	 0.17	....begin collision; 4 	 0.05	 1 	 0 	 0.04	 0.01	 0 	 0.01	 0.25	....CollisionReset; 4 	 0.08	 1 	 2.06	 4.76	 2.70	 0.31	 2.70	 56.49	....doCollisionDetection; 5 	 0.08	 1 	 0.07	 1.33	 0.08	 0.04	 0.08	 1.61	.....ComputeBoundingTree; 6 	 0.08	 1 	 0.01	 0.22	 0.01	 0.01	 0.01	 0.30	......Compute BoundingTree: triangleCollisionModel1; 6 	 0.10	 1 	 0.01	 0.20	 0.02	 0.01	 0.02	 0.33	......Compute BoundingTree: lineCollisionModel1; 6 	 0.11	 1 	 0 	 0.13	 0.01	 0 	 0.01	 0.12	......Compute BoundingTree: pointCollisionModel1; 6 	 0.12	 1 	 0.01	 0.16	 0.01	 0.01	 0.01	 0.26	......Compute BoundingTree: triangleCollisionModel2; 6 	 0.13	 1 	 0.01	 0.20	 0.01	 0.01	 0.01	 0.31	......",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089
https://github.com/sofa-framework/sofa/pull/2089:9764,Performance,load,loader,9764,.ComputeBBox: hexa2QuadTopologicalMapping2; 4 	 4.72	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: triangleCollisionModel2; 4 	 4.73	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: lineCollisionModel2; 4 	 4.73	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: pointCollisionModel2; 3 	 4.74	 1 	 0 	 0.02	 0 	 0 	 0 	 0.03	...BoundingBoxVisitor - ProcessTopDown: $1#!8!1#9127548; 3 	 4.74	 1 	 0 	 0 	 0 	 0 	 0 	 0.02	...BoundingBoxVisitor - ProcessTopDown: %##3%#$117936%%; 3 	 4.74	 1 	 0 	 0.03	 0 	 0 	 0 	 0.02	...BoundingBoxVisitor - ProcessTopDown: 00%#@519$290#0%; 3 	 4.74	 1 	 0 	 0.01	 0 	 0 	 0 	 0.02	...BoundingBoxVisitor - ProcessTopDown: 622##7@15@10%4%; 3 	 4.74	 1 	 0 	 0.02	 0 	 0 	 0 	 0.02	...BoundingBoxVisitor - ProcessTopDown: 339#26%3085%754; 3 	 4.74	 1 	 0 	 0 	 0 	 0 	 0 	 0.02	...BoundingBoxVisitor - ProcessTopDown: 23%318!7@!0110$; 3 	 4.75	 1 	 0 	 0.03	 0 	 0 	 0 	 0.10	...BoundingBoxVisitor - ProcessTopDown: Floor; 4 	 4.75	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: loader; 4 	 4.75	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: meshTopology1; 4 	 4.75	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: mObject1; 4 	 4.75	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: triangleCollisionModel3; 4 	 4.75	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: lineCollisionModel3; 4 	 4.75	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: pointCollisionModel3; 3 	 4.75	 1 	 0 	 0.02	 0 	 0 	 0 	 0.03	...BoundingBoxVisitor - ProcessTopDown: 5$!%4942@362!91; 3 	 4.76	 1 	 0 	 0 	 0 	 0 	 0 	 0.02	...BoundingBoxVisitor - ProcessTopDown: !%6#67064322$79; 3 	 4.76	 1 	 0 	 0.01	 0 	 0 	 0 	 0.02	...BoundingBoxVisitor - ProcessTopDown: 415253259$047%@; 3 	 4.76	 1 	 0 	 0.02	 0 	 0 	 0 	 0.03	...BoundingBoxVisitor - ProcessTopDown: 8595%691#!%4%%3; 3 	 4.76	 1 	 0 	 0.02	 0 	 0 	 0 	 0.02	...BoundingBoxVisitor - ProcessTopDown: 69477@%1#334733; 3 	 4.76	 1 	 0 	 0.01	 0 	 0 	 0 	 0.03	...BoundingBoxVisitor - ProcessTopDown: 5632%!$$3287602; 3 	 4.77	 1 	 0 	 0 	 0 	 0 	 0 	 0 	...Boun,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089
https://github.com/sofa-framework/sofa/pull/2089:20684,Performance,load,loader,20684,er; 4 	 8 	 1 	 0 	 0.01	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMeshCollision; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaTopologyMapping; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaLoader; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: visualStyle1; 4 	 8 	 1 	 0 	 0.02	 0 	 0 	 0 	 0 	....ComputeBBox: defaultPipeline1; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bruteForceBroadPhase1; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bVHNarrowPhase1; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: Proximity; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: Response; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: GroupManager; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: defaultAnimationLoop; 4 	 8 	 1 	 0 	 0.01	 0 	 0 	 0 	 0 	....ComputeBBox: defaultVisualManagerLoop; 3 	 8 	 1 	 0.01	 0.07	 0.01	 0 	 0.01	 0.11	...BoundingBoxVisitor - ProcessTopDown: Floor; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: loader; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: meshTopology1; 4 	 8.01	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: mObject1; 4 	 8.01	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: triangleCollisionModel3; 4 	 8.01	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: lineCollisionModel3; 4 	 8.01	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: pointCollisionModel3; 3 	 8.01	 1 	 0 	 0 	 0 	 0 	 0 	 0.02	...BoundingBoxVisitor - ProcessTopDown: 5$!%4942@362!91; 4 	 8.01	 55.02	 0 	 0.01	 0 	 0 	 0.01	 0.07	....ComputeBBox: unnamed; 3 	 10.30	 0 	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessTopDown: !%6#67064322$79; 3 	 8.01	 1 	 0 	 0 	 0 	 0 	 0 	 0.02	...BoundingBoxVisitor - ProcessTopDown: 415253259$047%@; 3 	 8.01	 1 	 0 	 0 	 0 	 0 	 0 	 0.02	...BoundingBoxVisitor - ProcessTopDown: 8595%691#!%4%%3; 3 	 10.30	 0 	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessTopDown: 69477@%1#334733; 3 	 8.02	 1 	 0 	 0 	 0 	 0 	 0 	 0.02	...BoundingBoxVisitor - ProcessTopDown: 5632%!$$3287602; 3,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089
https://github.com/sofa-framework/sofa/pull/2089:34842,Security,Certificate,Certificate,34842," 85!809@63043915; 3 	 9.90	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: 3@$$%7#90620#1@; 3 	 9.90	 0.30	 0 	 0.02	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: $6635#@9%@01449; 3 	 9.90	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: 0$%3@43%672$7@2; 4 	 9.95	 0.61	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: triangleCollisionModel2-lineCollisionModel3; 4 	 9.96	 0.61	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: lineCollisionModel2-lineCollisionModel3; 4 	 9.96	 0.61	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: lineCollisionModel3-pointCollisionModel2; 3 	 9.98	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: #%#0#443865$42#; 3 	 9.98	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: 9$@$$8293@70939; 3 	 10.06	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: 9$@$$8293@70939; 3 	 10.06	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: #%#0#443865$42#; 3 	 10.07	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: 0$%3@43%672$7@2; 3 	 10.07	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: $6635#@9%@01449; 3 	 10.07	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: 3@$$%7#90620#1@. ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089
https://github.com/sofa-framework/sofa/pull/2089:34953,Security,certificate,certificate-of-origin-dco,34953," 85!809@63043915; 3 	 9.90	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: 3@$$%7#90620#1@; 3 	 9.90	 0.30	 0 	 0.02	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: $6635#@9%@01449; 3 	 9.90	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: 0$%3@43%672$7@2; 4 	 9.95	 0.61	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: triangleCollisionModel2-lineCollisionModel3; 4 	 9.96	 0.61	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: lineCollisionModel2-lineCollisionModel3; 4 	 9.96	 0.61	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: lineCollisionModel3-pointCollisionModel2; 3 	 9.98	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: #%#0#443865$42#; 3 	 9.98	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: 9$@$$8293@70939; 3 	 10.06	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: 9$@$$8293@70939; 3 	 10.06	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: #%#0#443865$42#; 3 	 10.07	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: 0$%3@43%672$7@2; 3 	 10.07	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: $6635#@9%@01449; 3 	 10.07	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: 3@$$%7#90620#1@. ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089
https://github.com/sofa-framework/sofa/pull/2089:724,Testability,Benchmark,Benchmark,724,"Introduction of two scene files. This is actually the same scene, but one is with a `DefaultCollisionGroupManager` and the other is without.; The goal is to evaluate the effects of a group manager on the simulation and on the performances. # Performances. running CollisionGroupManager_with.scn for 1000 time steps: 8.2129 s ( 121.76 FPS); running CollisionGroupManager_without.scn for 1000 time steps: 4.82236 s ( 207.368 FPS). Similar results if run with #2076. # Behavior. The simulation seems to behave differently with or without the group manager:; ![groupmanager](https://user-images.githubusercontent.com/10572752/118451813-ea5ae400-b6f5-11eb-992f-65f047f1107c.gif). #2076 seems to have no effect on the behavior. # Benchmark Details. ## without. ```; Steps Duration Statistics (in ms) :; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 0 	 0 	1000 	 4.04	 9 	 4.79	 0.46	4786.01	 100 	TOTAL; 1 	 0 	 1 	 4.04	 8.98	 4.78	 0.46	 4.78	 99.98	.Simulation::animate; 2 	 0.01	 1 	 0 	 0.03	 0.01	 0 	 0.01	 0.12	..BehaviorUpdatePositionVisitor; 2 	 0.02	 1 	 0.01	 0.04	 0.01	 0 	 0.01	 0.17	..UpdateInternalDataVisitor; 2 	 0.02	 1 	 3.87	 8.73	 4.57	 0.44	 4.57	 95.56	..AnimateVisitor; 3 	 0.04	 1 	 2.29	 7.10	 3.03	 0.36	 3.03	 63.35	...Collision; 4 	 0.04	 1 	 0 	 0.03	 0.01	 0 	 0.01	 0.17	....begin collision; 4 	 0.05	 1 	 0 	 0.04	 0.01	 0 	 0.01	 0.25	....CollisionReset; 4 	 0.08	 1 	 2.06	 4.76	 2.70	 0.31	 2.70	 56.49	....doCollisionDetection; 5 	 0.08	 1 	 0.07	 1.33	 0.08	 0.04	 0.08	 1.61	.....ComputeBoundingTree; 6 	 0.08	 1 	 0.01	 0.22	 0.01	 0.01	 0.01	 0.30	......Compute BoundingTree: triangleCollisionModel1; 6 	 0.10	 1 	 0.01	 0.20	 0.02	 0.01	 0.02	 0.33	......Compute BoundingTree: lineCollisionModel1; 6 	 0.11	 1 	 0 	 0.13	 0.01	 0 	 0.01	 0.12	......Compute BoundingTree: pointCollisionModel1; 6 	 0.12	 1 	 0.01	 0.16	 0.01	 0.01	 0.01	 0.26	......Compute BoundingTree: triangleCollisionModel2; 6 	 0.13	 1 	 0.01	 0.20	 0.01	 0.01	 0.01	 0.31	......",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089
https://github.com/sofa-framework/sofa/pull/2089:35218,Testability,test,test,35218," 85!809@63043915; 3 	 9.90	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: 3@$$%7#90620#1@; 3 	 9.90	 0.30	 0 	 0.02	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: $6635#@9%@01449; 3 	 9.90	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: 0$%3@43%672$7@2; 4 	 9.95	 0.61	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: triangleCollisionModel2-lineCollisionModel3; 4 	 9.96	 0.61	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: lineCollisionModel2-lineCollisionModel3; 4 	 9.96	 0.61	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: lineCollisionModel3-pointCollisionModel2; 3 	 9.98	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: #%#0#443865$42#; 3 	 9.98	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: 9$@$$8293@70939; 3 	 10.06	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: 9$@$$8293@70939; 3 	 10.06	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: #%#0#443865$42#; 3 	 10.07	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: 0$%3@43%672$7@2; 3 	 10.07	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: $6635#@9%@01449; 3 	 10.07	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: 3@$$%7#90620#1@. ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089
https://github.com/sofa-framework/sofa/pull/2089:35267,Testability,test,test,35267," 85!809@63043915; 3 	 9.90	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: 3@$$%7#90620#1@; 3 	 9.90	 0.30	 0 	 0.02	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: $6635#@9%@01449; 3 	 9.90	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: 0$%3@43%672$7@2; 4 	 9.95	 0.61	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: triangleCollisionModel2-lineCollisionModel3; 4 	 9.96	 0.61	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: lineCollisionModel2-lineCollisionModel3; 4 	 9.96	 0.61	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: lineCollisionModel3-pointCollisionModel2; 3 	 9.98	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: #%#0#443865$42#; 3 	 9.98	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: 9$@$$8293@70939; 3 	 10.06	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: 9$@$$8293@70939; 3 	 10.06	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: #%#0#443865$42#; 3 	 10.07	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: 0$%3@43%672$7@2; 3 	 10.07	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: $6635#@9%@01449; 3 	 10.07	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: 3@$$%7#90620#1@. ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089
https://github.com/sofa-framework/sofa/pull/2090:854,Availability,failure,failures,854,"IdentityMapping.h possesses some helper functions (eq & peq on float <-> double, and Coord <->OtherCoord); This should be moved in a later PR. This PR just removes the need of those utility functions in GenerateGrid (which has nothing to do with IdentityMapping obviously), thus removing the header inclusion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2090
https://github.com/sofa-framework/sofa/pull/2090:903,Availability,failure,failures,903,"IdentityMapping.h possesses some helper functions (eq & peq on float <-> double, and Coord <->OtherCoord); This should be moved in a later PR. This PR just removes the need of those utility functions in GenerateGrid (which has nothing to do with IdentityMapping obviously), thus removing the header inclusion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2090
https://github.com/sofa-framework/sofa/pull/2090:473,Security,Certificate,Certificate,473,"IdentityMapping.h possesses some helper functions (eq & peq on float <-> double, and Coord <->OtherCoord); This should be moved in a later PR. This PR just removes the need of those utility functions in GenerateGrid (which has nothing to do with IdentityMapping obviously), thus removing the header inclusion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2090
https://github.com/sofa-framework/sofa/pull/2090:584,Security,certificate,certificate-of-origin-dco,584,"IdentityMapping.h possesses some helper functions (eq & peq on float <-> double, and Coord <->OtherCoord); This should be moved in a later PR. This PR just removes the need of those utility functions in GenerateGrid (which has nothing to do with IdentityMapping obviously), thus removing the header inclusion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2090
https://github.com/sofa-framework/sofa/pull/2090:849,Testability,test,test,849,"IdentityMapping.h possesses some helper functions (eq & peq on float <-> double, and Coord <->OtherCoord); This should be moved in a later PR. This PR just removes the need of those utility functions in GenerateGrid (which has nothing to do with IdentityMapping obviously), thus removing the header inclusion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2090
https://github.com/sofa-framework/sofa/pull/2090:898,Testability,test,test,898,"IdentityMapping.h possesses some helper functions (eq & peq on float <-> double, and Coord <->OtherCoord); This should be moved in a later PR. This PR just removes the need of those utility functions in GenerateGrid (which has nothing to do with IdentityMapping obviously), thus removing the header inclusion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2090
https://github.com/sofa-framework/sofa/pull/2091:568,Availability,failure,failures,568,"remove shadow variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2091
https://github.com/sofa-framework/sofa/pull/2091:617,Availability,failure,failures,617,"remove shadow variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2091
https://github.com/sofa-framework/sofa/pull/2091:14,Modifiability,variab,variable,14,"remove shadow variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2091
https://github.com/sofa-framework/sofa/pull/2091:187,Security,Certificate,Certificate,187,"remove shadow variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2091
https://github.com/sofa-framework/sofa/pull/2091:298,Security,certificate,certificate-of-origin-dco,298,"remove shadow variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2091
https://github.com/sofa-framework/sofa/pull/2091:563,Testability,test,test,563,"remove shadow variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2091
https://github.com/sofa-framework/sofa/pull/2091:612,Testability,test,test,612,"remove shadow variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2091
https://github.com/sofa-framework/sofa/pull/2092:670,Availability,failure,failures,670,"Add different collision models and highlight more the beam model as shown below:. ![](https://i.ibb.co/StrTkW2/snapshot.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2092
https://github.com/sofa-framework/sofa/pull/2092:719,Availability,failure,failures,719,"Add different collision models and highlight more the beam model as shown below:. ![](https://i.ibb.co/StrTkW2/snapshot.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2092
https://github.com/sofa-framework/sofa/pull/2092:289,Security,Certificate,Certificate,289,"Add different collision models and highlight more the beam model as shown below:. ![](https://i.ibb.co/StrTkW2/snapshot.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2092
https://github.com/sofa-framework/sofa/pull/2092:400,Security,certificate,certificate-of-origin-dco,400,"Add different collision models and highlight more the beam model as shown below:. ![](https://i.ibb.co/StrTkW2/snapshot.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2092
https://github.com/sofa-framework/sofa/pull/2092:665,Testability,test,test,665,"Add different collision models and highlight more the beam model as shown below:. ![](https://i.ibb.co/StrTkW2/snapshot.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2092
https://github.com/sofa-framework/sofa/pull/2092:714,Testability,test,test,714,"Add different collision models and highlight more the beam model as shown below:. ![](https://i.ibb.co/StrTkW2/snapshot.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2092
https://github.com/sofa-framework/sofa/pull/2093:571,Availability,failure,failures,571,"For you @guparan :heart: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2093
https://github.com/sofa-framework/sofa/pull/2093:620,Availability,failure,failures,620,"For you @guparan :heart: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2093
https://github.com/sofa-framework/sofa/pull/2093:190,Security,Certificate,Certificate,190,"For you @guparan :heart: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2093
https://github.com/sofa-framework/sofa/pull/2093:301,Security,certificate,certificate-of-origin-dco,301,"For you @guparan :heart: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2093
https://github.com/sofa-framework/sofa/pull/2093:566,Testability,test,test,566,"For you @guparan :heart: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2093
https://github.com/sofa-framework/sofa/pull/2093:615,Testability,test,test,615,"For you @guparan :heart: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2093
https://github.com/sofa-framework/sofa/pull/2094:744,Availability,failure,failures,744,"Suggestion fixes #1666 ; I would like to know if @damienmarchal or @marques-bruno (if watching) sees possible problems while using SofaQtQuick.; But relying only on the callback should be sufficient. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2094
https://github.com/sofa-framework/sofa/pull/2094:793,Availability,failure,failures,793,"Suggestion fixes #1666 ; I would like to know if @damienmarchal or @marques-bruno (if watching) sees possible problems while using SofaQtQuick.; But relying only on the callback should be sufficient. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2094
https://github.com/sofa-framework/sofa/pull/2094:363,Security,Certificate,Certificate,363,"Suggestion fixes #1666 ; I would like to know if @damienmarchal or @marques-bruno (if watching) sees possible problems while using SofaQtQuick.; But relying only on the callback should be sufficient. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2094
https://github.com/sofa-framework/sofa/pull/2094:474,Security,certificate,certificate-of-origin-dco,474,"Suggestion fixes #1666 ; I would like to know if @damienmarchal or @marques-bruno (if watching) sees possible problems while using SofaQtQuick.; But relying only on the callback should be sufficient. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2094
https://github.com/sofa-framework/sofa/pull/2094:739,Testability,test,test,739,"Suggestion fixes #1666 ; I would like to know if @damienmarchal or @marques-bruno (if watching) sees possible problems while using SofaQtQuick.; But relying only on the callback should be sufficient. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2094
https://github.com/sofa-framework/sofa/pull/2094:788,Testability,test,test,788,"Suggestion fixes #1666 ; I would like to know if @damienmarchal or @marques-bruno (if watching) sees possible problems while using SofaQtQuick.; But relying only on the callback should be sufficient. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2094
https://github.com/sofa-framework/sofa/pull/2095:616,Availability,failure,failures,616,"`m_filename` now becomes `d_filename` as simple (and breaking as that). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2095
https://github.com/sofa-framework/sofa/pull/2095:665,Availability,failure,failures,665,"`m_filename` now becomes `d_filename` as simple (and breaking as that). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2095
https://github.com/sofa-framework/sofa/pull/2095:235,Security,Certificate,Certificate,235,"`m_filename` now becomes `d_filename` as simple (and breaking as that). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2095
https://github.com/sofa-framework/sofa/pull/2095:346,Security,certificate,certificate-of-origin-dco,346,"`m_filename` now becomes `d_filename` as simple (and breaking as that). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2095
https://github.com/sofa-framework/sofa/pull/2095:611,Testability,test,test,611,"`m_filename` now becomes `d_filename` as simple (and breaking as that). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2095
https://github.com/sofa-framework/sofa/pull/2095:660,Testability,test,test,660,"`m_filename` now becomes `d_filename` as simple (and breaking as that). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2095
https://github.com/sofa-framework/sofa/pull/2095:41,Usability,simpl,simple,41,"`m_filename` now becomes `d_filename` as simple (and breaking as that). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2095
https://github.com/sofa-framework/sofa/pull/2097:584,Availability,failure,failures,584,"As simple as that.; Mostly brackets ^^. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2097
https://github.com/sofa-framework/sofa/pull/2097:633,Availability,failure,failures,633,"As simple as that.; Mostly brackets ^^. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2097
https://github.com/sofa-framework/sofa/pull/2097:203,Security,Certificate,Certificate,203,"As simple as that.; Mostly brackets ^^. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2097
https://github.com/sofa-framework/sofa/pull/2097:314,Security,certificate,certificate-of-origin-dco,314,"As simple as that.; Mostly brackets ^^. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2097
https://github.com/sofa-framework/sofa/pull/2097:579,Testability,test,test,579,"As simple as that.; Mostly brackets ^^. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2097
https://github.com/sofa-framework/sofa/pull/2097:628,Testability,test,test,628,"As simple as that.; Mostly brackets ^^. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2097
https://github.com/sofa-framework/sofa/pull/2097:3,Usability,simpl,simple,3,"As simple as that.; Mostly brackets ^^. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2097
https://github.com/sofa-framework/sofa/pull/2098:692,Availability,failure,failures,692,"- Document the steps of the CGLinearSolver; - Remove the useless data verbose; - Use d_ for data name; - Propagate this joyeuserie. :man_dancing: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2098
https://github.com/sofa-framework/sofa/pull/2098:741,Availability,failure,failures,741,"- Document the steps of the CGLinearSolver; - Remove the useless data verbose; - Use d_ for data name; - Propagate this joyeuserie. :man_dancing: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2098
https://github.com/sofa-framework/sofa/pull/2098:311,Security,Certificate,Certificate,311,"- Document the steps of the CGLinearSolver; - Remove the useless data verbose; - Use d_ for data name; - Propagate this joyeuserie. :man_dancing: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2098
https://github.com/sofa-framework/sofa/pull/2098:422,Security,certificate,certificate-of-origin-dco,422,"- Document the steps of the CGLinearSolver; - Remove the useless data verbose; - Use d_ for data name; - Propagate this joyeuserie. :man_dancing: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2098
https://github.com/sofa-framework/sofa/pull/2098:687,Testability,test,test,687,"- Document the steps of the CGLinearSolver; - Remove the useless data verbose; - Use d_ for data name; - Propagate this joyeuserie. :man_dancing: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2098
https://github.com/sofa-framework/sofa/pull/2098:736,Testability,test,test,736,"- Document the steps of the CGLinearSolver; - Remove the useless data verbose; - Use d_ for data name; - Propagate this joyeuserie. :man_dancing: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2098
https://github.com/sofa-framework/sofa/pull/2099:1370,Availability,failure,failures,1370,"(not the topological ones 😏). {Length,Radius,Stiffness,Poisson}Container was created a **long time ago** to provide an ""external location"" where to set data per element, regardless of the component.; But: ; - the design was flawed (hard deps, not generic at all); - the remaining files are just interfaces (virtual ... =0) and there is no implementation at all in the whole codebase (deleted files in the past? forgotten plugins?), so the code itself at the moment is totally useless. Actually 3 of them was even not including the necessary headers... So the best course of action to do IMO is to delete them, and maybe find an other design later to provide means to get data per element (opposed to data for the whole set of elements). A nice side effect is that SofaTopologicalMapping just depends on SofaBaseTopology now.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2099
https://github.com/sofa-framework/sofa/pull/2099:1419,Availability,failure,failures,1419,"(not the topological ones 😏). {Length,Radius,Stiffness,Poisson}Container was created a **long time ago** to provide an ""external location"" where to set data per element, regardless of the component.; But: ; - the design was flawed (hard deps, not generic at all); - the remaining files are just interfaces (virtual ... =0) and there is no implementation at all in the whole codebase (deleted files in the past? forgotten plugins?), so the code itself at the moment is totally useless. Actually 3 of them was even not including the necessary headers... So the best course of action to do IMO is to delete them, and maybe find an other design later to provide means to get data per element (opposed to data for the whole set of elements). A nice side effect is that SofaTopologicalMapping just depends on SofaBaseTopology now.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2099
https://github.com/sofa-framework/sofa/pull/2099:295,Integrability,interface,interfaces,295,"(not the topological ones 😏). {Length,Radius,Stiffness,Poisson}Container was created a **long time ago** to provide an ""external location"" where to set data per element, regardless of the component.; But: ; - the design was flawed (hard deps, not generic at all); - the remaining files are just interfaces (virtual ... =0) and there is no implementation at all in the whole codebase (deleted files in the past? forgotten plugins?), so the code itself at the moment is totally useless. Actually 3 of them was even not including the necessary headers... So the best course of action to do IMO is to delete them, and maybe find an other design later to provide means to get data per element (opposed to data for the whole set of elements). A nice side effect is that SofaTopologicalMapping just depends on SofaBaseTopology now.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2099
https://github.com/sofa-framework/sofa/pull/2099:792,Integrability,depend,depends,792,"(not the topological ones 😏). {Length,Radius,Stiffness,Poisson}Container was created a **long time ago** to provide an ""external location"" where to set data per element, regardless of the component.; But: ; - the design was flawed (hard deps, not generic at all); - the remaining files are just interfaces (virtual ... =0) and there is no implementation at all in the whole codebase (deleted files in the past? forgotten plugins?), so the code itself at the moment is totally useless. Actually 3 of them was even not including the necessary headers... So the best course of action to do IMO is to delete them, and maybe find an other design later to provide means to get data per element (opposed to data for the whole set of elements). A nice side effect is that SofaTopologicalMapping just depends on SofaBaseTopology now.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2099
https://github.com/sofa-framework/sofa/pull/2099:421,Modifiability,plugin,plugins,421,"(not the topological ones 😏). {Length,Radius,Stiffness,Poisson}Container was created a **long time ago** to provide an ""external location"" where to set data per element, regardless of the component.; But: ; - the design was flawed (hard deps, not generic at all); - the remaining files are just interfaces (virtual ... =0) and there is no implementation at all in the whole codebase (deleted files in the past? forgotten plugins?), so the code itself at the moment is totally useless. Actually 3 of them was even not including the necessary headers... So the best course of action to do IMO is to delete them, and maybe find an other design later to provide means to get data per element (opposed to data for the whole set of elements). A nice side effect is that SofaTopologicalMapping just depends on SofaBaseTopology now.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2099
https://github.com/sofa-framework/sofa/pull/2099:989,Security,Certificate,Certificate,989,"(not the topological ones 😏). {Length,Radius,Stiffness,Poisson}Container was created a **long time ago** to provide an ""external location"" where to set data per element, regardless of the component.; But: ; - the design was flawed (hard deps, not generic at all); - the remaining files are just interfaces (virtual ... =0) and there is no implementation at all in the whole codebase (deleted files in the past? forgotten plugins?), so the code itself at the moment is totally useless. Actually 3 of them was even not including the necessary headers... So the best course of action to do IMO is to delete them, and maybe find an other design later to provide means to get data per element (opposed to data for the whole set of elements). A nice side effect is that SofaTopologicalMapping just depends on SofaBaseTopology now.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2099
https://github.com/sofa-framework/sofa/pull/2099:1100,Security,certificate,certificate-of-origin-dco,1100,"(not the topological ones 😏). {Length,Radius,Stiffness,Poisson}Container was created a **long time ago** to provide an ""external location"" where to set data per element, regardless of the component.; But: ; - the design was flawed (hard deps, not generic at all); - the remaining files are just interfaces (virtual ... =0) and there is no implementation at all in the whole codebase (deleted files in the past? forgotten plugins?), so the code itself at the moment is totally useless. Actually 3 of them was even not including the necessary headers... So the best course of action to do IMO is to delete them, and maybe find an other design later to provide means to get data per element (opposed to data for the whole set of elements). A nice side effect is that SofaTopologicalMapping just depends on SofaBaseTopology now.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2099
https://github.com/sofa-framework/sofa/pull/2099:1365,Testability,test,test,1365,"(not the topological ones 😏). {Length,Radius,Stiffness,Poisson}Container was created a **long time ago** to provide an ""external location"" where to set data per element, regardless of the component.; But: ; - the design was flawed (hard deps, not generic at all); - the remaining files are just interfaces (virtual ... =0) and there is no implementation at all in the whole codebase (deleted files in the past? forgotten plugins?), so the code itself at the moment is totally useless. Actually 3 of them was even not including the necessary headers... So the best course of action to do IMO is to delete them, and maybe find an other design later to provide means to get data per element (opposed to data for the whole set of elements). A nice side effect is that SofaTopologicalMapping just depends on SofaBaseTopology now.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2099
https://github.com/sofa-framework/sofa/pull/2099:1414,Testability,test,test,1414,"(not the topological ones 😏). {Length,Radius,Stiffness,Poisson}Container was created a **long time ago** to provide an ""external location"" where to set data per element, regardless of the component.; But: ; - the design was flawed (hard deps, not generic at all); - the remaining files are just interfaces (virtual ... =0) and there is no implementation at all in the whole codebase (deleted files in the past? forgotten plugins?), so the code itself at the moment is totally useless. Actually 3 of them was even not including the necessary headers... So the best course of action to do IMO is to delete them, and maybe find an other design later to provide means to get data per element (opposed to data for the whole set of elements). A nice side effect is that SofaTopologicalMapping just depends on SofaBaseTopology now.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2099
https://github.com/sofa-framework/sofa/pull/2100:571,Availability,failure,failures,571,"As announced @nhnhan92 ;). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2100
https://github.com/sofa-framework/sofa/pull/2100:620,Availability,failure,failures,620,"As announced @nhnhan92 ;). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2100
https://github.com/sofa-framework/sofa/pull/2100:190,Security,Certificate,Certificate,190,"As announced @nhnhan92 ;). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2100
https://github.com/sofa-framework/sofa/pull/2100:301,Security,certificate,certificate-of-origin-dco,301,"As announced @nhnhan92 ;). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2100
https://github.com/sofa-framework/sofa/pull/2100:566,Testability,test,test,566,"As announced @nhnhan92 ;). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2100
https://github.com/sofa-framework/sofa/pull/2100:615,Testability,test,test,615,"As announced @nhnhan92 ;). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2100
https://github.com/sofa-framework/sofa/issues/2101:356,Performance,perform,performances,356,"As mentioned in #2089, the component `DefaultCollisionGroupManager` seems to have some issues. 3 similar scenes files were compared:. 1. 2 cubes under a single system; 2. 2 cubes each with its own system; 3. 2 cubes each with its own system, and a `DefaultCollisionGroupManager` in the scene. (1) and (2) are very similar in terms of simulation result and performances. (3) gives a different simulation result and performances are poor compared to (1) and (2). It has also been notice that vectors are endlessly created in the `MechanicalObjects`.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2101
https://github.com/sofa-framework/sofa/issues/2101:414,Performance,perform,performances,414,"As mentioned in #2089, the component `DefaultCollisionGroupManager` seems to have some issues. 3 similar scenes files were compared:. 1. 2 cubes under a single system; 2. 2 cubes each with its own system; 3. 2 cubes each with its own system, and a `DefaultCollisionGroupManager` in the scene. (1) and (2) are very similar in terms of simulation result and performances. (3) gives a different simulation result and performances are poor compared to (1) and (2). It has also been notice that vectors are endlessly created in the `MechanicalObjects`.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2101
https://github.com/sofa-framework/sofa/pull/2102:570,Availability,failure,failures,570,"Proper use of `msg_info`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2102
https://github.com/sofa-framework/sofa/pull/2102:619,Availability,failure,failures,619,"Proper use of `msg_info`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2102
https://github.com/sofa-framework/sofa/pull/2102:189,Security,Certificate,Certificate,189,"Proper use of `msg_info`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2102
https://github.com/sofa-framework/sofa/pull/2102:300,Security,certificate,certificate-of-origin-dco,300,"Proper use of `msg_info`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2102
https://github.com/sofa-framework/sofa/pull/2102:565,Testability,test,test,565,"Proper use of `msg_info`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2102
https://github.com/sofa-framework/sofa/pull/2102:614,Testability,test,test,614,"Proper use of `msg_info`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2102
https://github.com/sofa-framework/sofa/pull/2103:932,Availability,failure,failures,932,"Using this in your scene:; ```xml; <APIVersion level=""21.06"" />; ```; gave (before this PR):; ```; [WARNING] [APIVersion(APIVersion)] The provided level '21.06' is now valid.; ```; and now gives (with this PR);; ```; [WARNING] [APIVersion(APIVersion)] The provided level '21.06' is not valid. Allowed versions are [17.06, 17.12, 18.06, 18.12, 19.06, 19.12, 20.06, 20.12, 20.12.99].; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2103
https://github.com/sofa-framework/sofa/pull/2103:981,Availability,failure,failures,981,"Using this in your scene:; ```xml; <APIVersion level=""21.06"" />; ```; gave (before this PR):; ```; [WARNING] [APIVersion(APIVersion)] The provided level '21.06' is now valid.; ```; and now gives (with this PR);; ```; [WARNING] [APIVersion(APIVersion)] The provided level '21.06' is not valid. Allowed versions are [17.06, 17.12, 18.06, 18.12, 19.06, 19.12, 20.06, 20.12, 20.12.99].; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2103
https://github.com/sofa-framework/sofa/pull/2103:551,Security,Certificate,Certificate,551,"Using this in your scene:; ```xml; <APIVersion level=""21.06"" />; ```; gave (before this PR):; ```; [WARNING] [APIVersion(APIVersion)] The provided level '21.06' is now valid.; ```; and now gives (with this PR);; ```; [WARNING] [APIVersion(APIVersion)] The provided level '21.06' is not valid. Allowed versions are [17.06, 17.12, 18.06, 18.12, 19.06, 19.12, 20.06, 20.12, 20.12.99].; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2103
https://github.com/sofa-framework/sofa/pull/2103:662,Security,certificate,certificate-of-origin-dco,662,"Using this in your scene:; ```xml; <APIVersion level=""21.06"" />; ```; gave (before this PR):; ```; [WARNING] [APIVersion(APIVersion)] The provided level '21.06' is now valid.; ```; and now gives (with this PR);; ```; [WARNING] [APIVersion(APIVersion)] The provided level '21.06' is not valid. Allowed versions are [17.06, 17.12, 18.06, 18.12, 19.06, 19.12, 20.06, 20.12, 20.12.99].; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2103
https://github.com/sofa-framework/sofa/pull/2103:927,Testability,test,test,927,"Using this in your scene:; ```xml; <APIVersion level=""21.06"" />; ```; gave (before this PR):; ```; [WARNING] [APIVersion(APIVersion)] The provided level '21.06' is now valid.; ```; and now gives (with this PR);; ```; [WARNING] [APIVersion(APIVersion)] The provided level '21.06' is not valid. Allowed versions are [17.06, 17.12, 18.06, 18.12, 19.06, 19.12, 20.06, 20.12, 20.12.99].; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2103
https://github.com/sofa-framework/sofa/pull/2103:976,Testability,test,test,976,"Using this in your scene:; ```xml; <APIVersion level=""21.06"" />; ```; gave (before this PR):; ```; [WARNING] [APIVersion(APIVersion)] The provided level '21.06' is now valid.; ```; and now gives (with this PR);; ```; [WARNING] [APIVersion(APIVersion)] The provided level '21.06' is not valid. Allowed versions are [17.06, 17.12, 18.06, 18.12, 19.06, 19.12, 20.06, 20.12, 20.12.99].; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2103
https://github.com/sofa-framework/sofa/pull/2104:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2104
https://github.com/sofa-framework/sofa/pull/2104:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2104
https://github.com/sofa-framework/sofa/pull/2104:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2104
https://github.com/sofa-framework/sofa/pull/2104:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2104
https://github.com/sofa-framework/sofa/pull/2104:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2104
https://github.com/sofa-framework/sofa/pull/2104:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2104
https://github.com/sofa-framework/sofa/pull/2105:945,Availability,failure,failures,945,"`map_ptr_stable_compare` is used in the `NarrowPhase` components. In this PR:. - The use of `map_ptr_stable_compare` is optimized in `NarrowPhase` components; - `map_ptr_stable_compare` itself is a bit optimized. The benchmark results show great performances improvements at the level of the container manipulation.; However, at the level of a simulation the performances improvements are negligible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2105
https://github.com/sofa-framework/sofa/pull/2105:994,Availability,failure,failures,994,"`map_ptr_stable_compare` is used in the `NarrowPhase` components. In this PR:. - The use of `map_ptr_stable_compare` is optimized in `NarrowPhase` components; - `map_ptr_stable_compare` itself is a bit optimized. The benchmark results show great performances improvements at the level of the container manipulation.; However, at the level of a simulation the performances improvements are negligible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2105
https://github.com/sofa-framework/sofa/pull/2105:120,Performance,optimiz,optimized,120,"`map_ptr_stable_compare` is used in the `NarrowPhase` components. In this PR:. - The use of `map_ptr_stable_compare` is optimized in `NarrowPhase` components; - `map_ptr_stable_compare` itself is a bit optimized. The benchmark results show great performances improvements at the level of the container manipulation.; However, at the level of a simulation the performances improvements are negligible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2105
https://github.com/sofa-framework/sofa/pull/2105:202,Performance,optimiz,optimized,202,"`map_ptr_stable_compare` is used in the `NarrowPhase` components. In this PR:. - The use of `map_ptr_stable_compare` is optimized in `NarrowPhase` components; - `map_ptr_stable_compare` itself is a bit optimized. The benchmark results show great performances improvements at the level of the container manipulation.; However, at the level of a simulation the performances improvements are negligible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2105
https://github.com/sofa-framework/sofa/pull/2105:246,Performance,perform,performances,246,"`map_ptr_stable_compare` is used in the `NarrowPhase` components. In this PR:. - The use of `map_ptr_stable_compare` is optimized in `NarrowPhase` components; - `map_ptr_stable_compare` itself is a bit optimized. The benchmark results show great performances improvements at the level of the container manipulation.; However, at the level of a simulation the performances improvements are negligible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2105
https://github.com/sofa-framework/sofa/pull/2105:359,Performance,perform,performances,359,"`map_ptr_stable_compare` is used in the `NarrowPhase` components. In this PR:. - The use of `map_ptr_stable_compare` is optimized in `NarrowPhase` components; - `map_ptr_stable_compare` itself is a bit optimized. The benchmark results show great performances improvements at the level of the container manipulation.; However, at the level of a simulation the performances improvements are negligible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2105
https://github.com/sofa-framework/sofa/pull/2105:564,Security,Certificate,Certificate,564,"`map_ptr_stable_compare` is used in the `NarrowPhase` components. In this PR:. - The use of `map_ptr_stable_compare` is optimized in `NarrowPhase` components; - `map_ptr_stable_compare` itself is a bit optimized. The benchmark results show great performances improvements at the level of the container manipulation.; However, at the level of a simulation the performances improvements are negligible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2105
https://github.com/sofa-framework/sofa/pull/2105:675,Security,certificate,certificate-of-origin-dco,675,"`map_ptr_stable_compare` is used in the `NarrowPhase` components. In this PR:. - The use of `map_ptr_stable_compare` is optimized in `NarrowPhase` components; - `map_ptr_stable_compare` itself is a bit optimized. The benchmark results show great performances improvements at the level of the container manipulation.; However, at the level of a simulation the performances improvements are negligible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2105
https://github.com/sofa-framework/sofa/pull/2105:217,Testability,benchmark,benchmark,217,"`map_ptr_stable_compare` is used in the `NarrowPhase` components. In this PR:. - The use of `map_ptr_stable_compare` is optimized in `NarrowPhase` components; - `map_ptr_stable_compare` itself is a bit optimized. The benchmark results show great performances improvements at the level of the container manipulation.; However, at the level of a simulation the performances improvements are negligible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2105
https://github.com/sofa-framework/sofa/pull/2105:940,Testability,test,test,940,"`map_ptr_stable_compare` is used in the `NarrowPhase` components. In this PR:. - The use of `map_ptr_stable_compare` is optimized in `NarrowPhase` components; - `map_ptr_stable_compare` itself is a bit optimized. The benchmark results show great performances improvements at the level of the container manipulation.; However, at the level of a simulation the performances improvements are negligible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2105
https://github.com/sofa-framework/sofa/pull/2105:989,Testability,test,test,989,"`map_ptr_stable_compare` is used in the `NarrowPhase` components. In this PR:. - The use of `map_ptr_stable_compare` is optimized in `NarrowPhase` components; - `map_ptr_stable_compare` itself is a bit optimized. The benchmark results show great performances improvements at the level of the container manipulation.; However, at the level of a simulation the performances improvements are negligible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2105
https://github.com/sofa-framework/sofa/issues/2106:52,Usability,Simpl,SimpleTesselatedTetraMechanicalMapping,52,modules/SofaTopologyMapping/src/SofaTopologyMapping/SimpleTesselatedTetraMechanicalMapping.inl line 163. Code:; typename Out::MatrixDeriv::ColConstIterator colIt = rowIt.begin();; typename Out::MatrixDeriv::ColConstIterator colItEnd = rowIt.end();. // Creates a constraints if the input constraint is not empty.; if (colIt != colItEnd); {; typename In::MatrixDeriv::RowIterator o = out.writeLine(rowIt.index());. for (typename Out::MatrixDeriv::ColConstIterator colIt = rowIt.begin(); colIt != colItEnd; ++colIt) // <- shadow,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2106
https://github.com/sofa-framework/sofa/pull/2109:670,Availability,failure,failures,670,"The collision tree were built only if the broad phase algorithm requires it. But it is also up to the narrow phase to decide. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2109
https://github.com/sofa-framework/sofa/pull/2109:719,Availability,failure,failures,719,"The collision tree were built only if the broad phase algorithm requires it. But it is also up to the narrow phase to decide. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2109
https://github.com/sofa-framework/sofa/pull/2109:289,Security,Certificate,Certificate,289,"The collision tree were built only if the broad phase algorithm requires it. But it is also up to the narrow phase to decide. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2109
https://github.com/sofa-framework/sofa/pull/2109:400,Security,certificate,certificate-of-origin-dco,400,"The collision tree were built only if the broad phase algorithm requires it. But it is also up to the narrow phase to decide. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2109
https://github.com/sofa-framework/sofa/pull/2109:665,Testability,test,test,665,"The collision tree were built only if the broad phase algorithm requires it. But it is also up to the narrow phase to decide. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2109
https://github.com/sofa-framework/sofa/pull/2109:714,Testability,test,test,714,"The collision tree were built only if the broad phase algorithm requires it. But it is also up to the narrow phase to decide. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2109
https://github.com/sofa-framework/sofa/pull/2110:705,Availability,failure,failures,705,"1. `NonBuiltConstraintCorrection.scn` is fixed to really not build the lcp; 2. 2 scenes are added for performances benchmark; 3. Cubes scene does not build lcp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2110
https://github.com/sofa-framework/sofa/pull/2110:754,Availability,failure,failures,754,"1. `NonBuiltConstraintCorrection.scn` is fixed to really not build the lcp; 2. 2 scenes are added for performances benchmark; 3. Cubes scene does not build lcp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2110
https://github.com/sofa-framework/sofa/pull/2110:102,Performance,perform,performances,102,"1. `NonBuiltConstraintCorrection.scn` is fixed to really not build the lcp; 2. 2 scenes are added for performances benchmark; 3. Cubes scene does not build lcp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2110
https://github.com/sofa-framework/sofa/pull/2110:324,Security,Certificate,Certificate,324,"1. `NonBuiltConstraintCorrection.scn` is fixed to really not build the lcp; 2. 2 scenes are added for performances benchmark; 3. Cubes scene does not build lcp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2110
https://github.com/sofa-framework/sofa/pull/2110:435,Security,certificate,certificate-of-origin-dco,435,"1. `NonBuiltConstraintCorrection.scn` is fixed to really not build the lcp; 2. 2 scenes are added for performances benchmark; 3. Cubes scene does not build lcp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2110
https://github.com/sofa-framework/sofa/pull/2110:115,Testability,benchmark,benchmark,115,"1. `NonBuiltConstraintCorrection.scn` is fixed to really not build the lcp; 2. 2 scenes are added for performances benchmark; 3. Cubes scene does not build lcp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2110
https://github.com/sofa-framework/sofa/pull/2110:700,Testability,test,test,700,"1. `NonBuiltConstraintCorrection.scn` is fixed to really not build the lcp; 2. 2 scenes are added for performances benchmark; 3. Cubes scene does not build lcp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2110
https://github.com/sofa-framework/sofa/pull/2110:749,Testability,test,test,749,"1. `NonBuiltConstraintCorrection.scn` is fixed to really not build the lcp; 2. 2 scenes are added for performances benchmark; 3. Cubes scene does not build lcp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2110
https://github.com/sofa-framework/sofa/pull/2111:3094,Availability,failure,failures,3094,"='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField, ]--> ; ```. # After; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the beginning of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBVHNarrowPhase, ParallelBruteForceBroadPhase]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [FreeMotionAnimationLoop, LCPConstraintSolver, UncoupledConstraintCorrection]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [LineCollisionModel, PointCollisionModel, TriangleCollisionModel]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [LightManager, OglModel, SpotLight]--> ; <RequiredPlugin name='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField]--> ; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2111
https://github.com/sofa-framework/sofa/pull/2111:3143,Availability,failure,failures,3143,"='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField, ]--> ; ```. # After; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the beginning of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBVHNarrowPhase, ParallelBruteForceBroadPhase]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [FreeMotionAnimationLoop, LCPConstraintSolver, UncoupledConstraintCorrection]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [LineCollisionModel, PointCollisionModel, TriangleCollisionModel]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [LightManager, OglModel, SpotLight]--> ; <RequiredPlugin name='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField]--> ; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2111
https://github.com/sofa-framework/sofa/pull/2111:208,Modifiability,plugin,plugins,208,"- Avoid trailing comma; - Consistent indentation; - Typo 'begining' -> 'beginning'; - Sort by name (bonus). # Before; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBruteForceBroadPhase, ParallelBVHNarrowPhase, ]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [LCPConstraintSolver, FreeMotionAnimationLoop, UncoupledConstraintCorrection, ]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver, ]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader, ]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [TriangleCollisionModel, LineCollisionModel, PointCollisionModel, ]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [LightManager, SpotLight, OglModel, ]--> ; <RequiredPlugin name='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField, ]--> ; ```. # After; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the beginning of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBVHNarrowPhase, ParallelBruteForceBroadPhase]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [FreeMotionAnimationLoop, LCPConstraintSolver, UncoupledConstraintCorrection]--> ; <Req",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2111
https://github.com/sofa-framework/sofa/pull/2111:250,Modifiability,plugin,plugins,250,"- Avoid trailing comma; - Consistent indentation; - Typo 'begining' -> 'beginning'; - Sort by name (bonus). # Before; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBruteForceBroadPhase, ParallelBVHNarrowPhase, ]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [LCPConstraintSolver, FreeMotionAnimationLoop, UncoupledConstraintCorrection, ]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver, ]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader, ]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [TriangleCollisionModel, LineCollisionModel, PointCollisionModel, ]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [LightManager, SpotLight, OglModel, ]--> ; <RequiredPlugin name='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField, ]--> ; ```. # After; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the beginning of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBVHNarrowPhase, ParallelBruteForceBroadPhase]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [FreeMotionAnimationLoop, LCPConstraintSolver, UncoupledConstraintCorrection]--> ; <Req",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2111
https://github.com/sofa-framework/sofa/pull/2111:333,Modifiability,plugin,plugins,333,"- Avoid trailing comma; - Consistent indentation; - Typo 'begining' -> 'beginning'; - Sort by name (bonus). # Before; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBruteForceBroadPhase, ParallelBVHNarrowPhase, ]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [LCPConstraintSolver, FreeMotionAnimationLoop, UncoupledConstraintCorrection, ]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver, ]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader, ]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [TriangleCollisionModel, LineCollisionModel, PointCollisionModel, ]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [LightManager, SpotLight, OglModel, ]--> ; <RequiredPlugin name='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField, ]--> ; ```. # After; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the beginning of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBVHNarrowPhase, ParallelBruteForceBroadPhase]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [FreeMotionAnimationLoop, LCPConstraintSolver, UncoupledConstraintCorrection]--> ; <Req",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2111
https://github.com/sofa-framework/sofa/pull/2111:1435,Modifiability,plugin,plugins,1435,"aste the following lines at the begining of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBruteForceBroadPhase, ParallelBVHNarrowPhase, ]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [LCPConstraintSolver, FreeMotionAnimationLoop, UncoupledConstraintCorrection, ]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver, ]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader, ]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [TriangleCollisionModel, LineCollisionModel, PointCollisionModel, ]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [LightManager, SpotLight, OglModel, ]--> ; <RequiredPlugin name='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField, ]--> ; ```. # After; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the beginning of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBVHNarrowPhase, ParallelBruteForceBroadPhase]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [FreeMotionAnimationLoop, LCPConstraintSolver, UncoupledConstraintCorrection]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [LineCollisionModel, PointCollisionModel, TriangleCollisionModel]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [Light",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2111
https://github.com/sofa-framework/sofa/pull/2111:1477,Modifiability,plugin,plugins,1477,"aste the following lines at the begining of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBruteForceBroadPhase, ParallelBVHNarrowPhase, ]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [LCPConstraintSolver, FreeMotionAnimationLoop, UncoupledConstraintCorrection, ]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver, ]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader, ]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [TriangleCollisionModel, LineCollisionModel, PointCollisionModel, ]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [LightManager, SpotLight, OglModel, ]--> ; <RequiredPlugin name='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField, ]--> ; ```. # After; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the beginning of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBVHNarrowPhase, ParallelBruteForceBroadPhase]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [FreeMotionAnimationLoop, LCPConstraintSolver, UncoupledConstraintCorrection]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [LineCollisionModel, PointCollisionModel, TriangleCollisionModel]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [Light",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2111
https://github.com/sofa-framework/sofa/pull/2111:1560,Modifiability,plugin,plugins,1560,"<!-- Needed to use components [ParallelBruteForceBroadPhase, ParallelBVHNarrowPhase, ]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [LCPConstraintSolver, FreeMotionAnimationLoop, UncoupledConstraintCorrection, ]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver, ]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader, ]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [TriangleCollisionModel, LineCollisionModel, PointCollisionModel, ]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [LightManager, SpotLight, OglModel, ]--> ; <RequiredPlugin name='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField, ]--> ; ```. # After; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the beginning of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBVHNarrowPhase, ParallelBruteForceBroadPhase]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [FreeMotionAnimationLoop, LCPConstraintSolver, UncoupledConstraintCorrection]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [LineCollisionModel, PointCollisionModel, TriangleCollisionModel]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [LightManager, OglModel, SpotLight]--> ; <RequiredPlugin name='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFE",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2111
https://github.com/sofa-framework/sofa/pull/2111:326,Performance,load,loaded,326,"- Avoid trailing comma; - Consistent indentation; - Typo 'begining' -> 'beginning'; - Sort by name (bonus). # Before; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBruteForceBroadPhase, ParallelBVHNarrowPhase, ]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [LCPConstraintSolver, FreeMotionAnimationLoop, UncoupledConstraintCorrection, ]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver, ]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader, ]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [TriangleCollisionModel, LineCollisionModel, PointCollisionModel, ]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [LightManager, SpotLight, OglModel, ]--> ; <RequiredPlugin name='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField, ]--> ; ```. # After; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the beginning of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBVHNarrowPhase, ParallelBruteForceBroadPhase]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [FreeMotionAnimationLoop, LCPConstraintSolver, UncoupledConstraintCorrection]--> ; <Req",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2111
https://github.com/sofa-framework/sofa/pull/2111:1553,Performance,load,loaded,1553,"<!-- Needed to use components [ParallelBruteForceBroadPhase, ParallelBVHNarrowPhase, ]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [LCPConstraintSolver, FreeMotionAnimationLoop, UncoupledConstraintCorrection, ]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver, ]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader, ]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [TriangleCollisionModel, LineCollisionModel, PointCollisionModel, ]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [LightManager, SpotLight, OglModel, ]--> ; <RequiredPlugin name='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField, ]--> ; ```. # After; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the beginning of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBVHNarrowPhase, ParallelBruteForceBroadPhase]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [FreeMotionAnimationLoop, LCPConstraintSolver, UncoupledConstraintCorrection]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [LineCollisionModel, PointCollisionModel, TriangleCollisionModel]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [LightManager, OglModel, SpotLight]--> ; <RequiredPlugin name='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFE",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2111
https://github.com/sofa-framework/sofa/pull/2111:2,Safety,Avoid,Avoid,2,"- Avoid trailing comma; - Consistent indentation; - Typo 'begining' -> 'beginning'; - Sort by name (bonus). # Before; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBruteForceBroadPhase, ParallelBVHNarrowPhase, ]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [LCPConstraintSolver, FreeMotionAnimationLoop, UncoupledConstraintCorrection, ]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver, ]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader, ]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [TriangleCollisionModel, LineCollisionModel, PointCollisionModel, ]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [LightManager, SpotLight, OglModel, ]--> ; <RequiredPlugin name='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField, ]--> ; ```. # After; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the beginning of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBVHNarrowPhase, ParallelBruteForceBroadPhase]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [FreeMotionAnimationLoop, LCPConstraintSolver, UncoupledConstraintCorrection]--> ; <Req",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2111
https://github.com/sofa-framework/sofa/pull/2111:2713,Security,Certificate,Certificate,2713,"='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField, ]--> ; ```. # After; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the beginning of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBVHNarrowPhase, ParallelBruteForceBroadPhase]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [FreeMotionAnimationLoop, LCPConstraintSolver, UncoupledConstraintCorrection]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [LineCollisionModel, PointCollisionModel, TriangleCollisionModel]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [LightManager, OglModel, SpotLight]--> ; <RequiredPlugin name='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField]--> ; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2111
https://github.com/sofa-framework/sofa/pull/2111:2824,Security,certificate,certificate-of-origin-dco,2824,"='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField, ]--> ; ```. # After; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the beginning of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBVHNarrowPhase, ParallelBruteForceBroadPhase]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [FreeMotionAnimationLoop, LCPConstraintSolver, UncoupledConstraintCorrection]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [LineCollisionModel, PointCollisionModel, TriangleCollisionModel]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [LightManager, OglModel, SpotLight]--> ; <RequiredPlugin name='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField]--> ; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2111
https://github.com/sofa-framework/sofa/pull/2111:3089,Testability,test,test,3089,"='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField, ]--> ; ```. # After; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the beginning of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBVHNarrowPhase, ParallelBruteForceBroadPhase]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [FreeMotionAnimationLoop, LCPConstraintSolver, UncoupledConstraintCorrection]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [LineCollisionModel, PointCollisionModel, TriangleCollisionModel]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [LightManager, OglModel, SpotLight]--> ; <RequiredPlugin name='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField]--> ; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2111
https://github.com/sofa-framework/sofa/pull/2111:3138,Testability,test,test,3138,"='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField, ]--> ; ```. # After; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the beginning of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBVHNarrowPhase, ParallelBruteForceBroadPhase]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [FreeMotionAnimationLoop, LCPConstraintSolver, UncoupledConstraintCorrection]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [LineCollisionModel, PointCollisionModel, TriangleCollisionModel]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [LightManager, OglModel, SpotLight]--> ; <RequiredPlugin name='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField]--> ; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2111
https://github.com/sofa-framework/sofa/pull/2112:962,Availability,failure,failures,962,"A scene is added in the MultiThreading plugin. Its goal is to show the difference between the parallel collision detection algorithms and the single threaded equivalents, in terms of performances. My results after 1000 time steps:. # Single thread; 43.6893 s ( 22.8889 FPS). ; `doCollisionDetection` runs in ~28.99 ms (mean). # Multi thread; 22.9585 s ( 43.5568 FPS). ; `doCollisionDetection` runs in ~7.81 ms (mean). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2112
https://github.com/sofa-framework/sofa/pull/2112:1011,Availability,failure,failures,1011,"A scene is added in the MultiThreading plugin. Its goal is to show the difference between the parallel collision detection algorithms and the single threaded equivalents, in terms of performances. My results after 1000 time steps:. # Single thread; 43.6893 s ( 22.8889 FPS). ; `doCollisionDetection` runs in ~28.99 ms (mean). # Multi thread; 22.9585 s ( 43.5568 FPS). ; `doCollisionDetection` runs in ~7.81 ms (mean). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2112
https://github.com/sofa-framework/sofa/pull/2112:39,Modifiability,plugin,plugin,39,"A scene is added in the MultiThreading plugin. Its goal is to show the difference between the parallel collision detection algorithms and the single threaded equivalents, in terms of performances. My results after 1000 time steps:. # Single thread; 43.6893 s ( 22.8889 FPS). ; `doCollisionDetection` runs in ~28.99 ms (mean). # Multi thread; 22.9585 s ( 43.5568 FPS). ; `doCollisionDetection` runs in ~7.81 ms (mean). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2112
https://github.com/sofa-framework/sofa/pull/2112:183,Performance,perform,performances,183,"A scene is added in the MultiThreading plugin. Its goal is to show the difference between the parallel collision detection algorithms and the single threaded equivalents, in terms of performances. My results after 1000 time steps:. # Single thread; 43.6893 s ( 22.8889 FPS). ; `doCollisionDetection` runs in ~28.99 ms (mean). # Multi thread; 22.9585 s ( 43.5568 FPS). ; `doCollisionDetection` runs in ~7.81 ms (mean). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2112
https://github.com/sofa-framework/sofa/pull/2112:113,Safety,detect,detection,113,"A scene is added in the MultiThreading plugin. Its goal is to show the difference between the parallel collision detection algorithms and the single threaded equivalents, in terms of performances. My results after 1000 time steps:. # Single thread; 43.6893 s ( 22.8889 FPS). ; `doCollisionDetection` runs in ~28.99 ms (mean). # Multi thread; 22.9585 s ( 43.5568 FPS). ; `doCollisionDetection` runs in ~7.81 ms (mean). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2112
https://github.com/sofa-framework/sofa/pull/2112:581,Security,Certificate,Certificate,581,"A scene is added in the MultiThreading plugin. Its goal is to show the difference between the parallel collision detection algorithms and the single threaded equivalents, in terms of performances. My results after 1000 time steps:. # Single thread; 43.6893 s ( 22.8889 FPS). ; `doCollisionDetection` runs in ~28.99 ms (mean). # Multi thread; 22.9585 s ( 43.5568 FPS). ; `doCollisionDetection` runs in ~7.81 ms (mean). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2112
https://github.com/sofa-framework/sofa/pull/2112:692,Security,certificate,certificate-of-origin-dco,692,"A scene is added in the MultiThreading plugin. Its goal is to show the difference between the parallel collision detection algorithms and the single threaded equivalents, in terms of performances. My results after 1000 time steps:. # Single thread; 43.6893 s ( 22.8889 FPS). ; `doCollisionDetection` runs in ~28.99 ms (mean). # Multi thread; 22.9585 s ( 43.5568 FPS). ; `doCollisionDetection` runs in ~7.81 ms (mean). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2112
https://github.com/sofa-framework/sofa/pull/2112:957,Testability,test,test,957,"A scene is added in the MultiThreading plugin. Its goal is to show the difference between the parallel collision detection algorithms and the single threaded equivalents, in terms of performances. My results after 1000 time steps:. # Single thread; 43.6893 s ( 22.8889 FPS). ; `doCollisionDetection` runs in ~28.99 ms (mean). # Multi thread; 22.9585 s ( 43.5568 FPS). ; `doCollisionDetection` runs in ~7.81 ms (mean). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2112
https://github.com/sofa-framework/sofa/pull/2112:1006,Testability,test,test,1006,"A scene is added in the MultiThreading plugin. Its goal is to show the difference between the parallel collision detection algorithms and the single threaded equivalents, in terms of performances. My results after 1000 time steps:. # Single thread; 43.6893 s ( 22.8889 FPS). ; `doCollisionDetection` runs in ~28.99 ms (mean). # Multi thread; 22.9585 s ( 43.5568 FPS). ; `doCollisionDetection` runs in ~7.81 ms (mean). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2112
https://github.com/sofa-framework/sofa/pull/2113:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2113
https://github.com/sofa-framework/sofa/pull/2113:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2113
https://github.com/sofa-framework/sofa/pull/2113:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2113
https://github.com/sofa-framework/sofa/pull/2113:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2113
https://github.com/sofa-framework/sofa/pull/2113:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2113
https://github.com/sofa-framework/sofa/pull/2113:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2113
https://github.com/sofa-framework/sofa/pull/2114:1224,Availability,failure,failures,1224,"Right now in SOFA we have:; - TopologySubsetData: templated but working only with ```unsigned int``` to store a list of indices following the topology. For example the ```indices``` of a FixedConstraint.; - TopologySparseData: templated on any structure (like TopologyData) but on a smaller set. This Data works with a second vector of indices as a map between the Topology buffer and this Data. This PR merge both code inside TopologySubSetData. If the second vector is not set and the TopologySubSetData is templated on ; ```unsigned int``` it will work as before. ![image](https://user-images.githubusercontent.com/21199245/121327022-5d313680-c913-11eb-99b4-3d543893ae06.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2114
https://github.com/sofa-framework/sofa/pull/2114:1273,Availability,failure,failures,1273,"Right now in SOFA we have:; - TopologySubsetData: templated but working only with ```unsigned int``` to store a list of indices following the topology. For example the ```indices``` of a FixedConstraint.; - TopologySparseData: templated on any structure (like TopologyData) but on a smaller set. This Data works with a second vector of indices as a map between the Topology buffer and this Data. This PR merge both code inside TopologySubSetData. If the second vector is not set and the TopologySubSetData is templated on ; ```unsigned int``` it will work as before. ![image](https://user-images.githubusercontent.com/21199245/121327022-5d313680-c913-11eb-99b4-3d543893ae06.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2114
https://github.com/sofa-framework/sofa/pull/2114:843,Security,Certificate,Certificate,843,"Right now in SOFA we have:; - TopologySubsetData: templated but working only with ```unsigned int``` to store a list of indices following the topology. For example the ```indices``` of a FixedConstraint.; - TopologySparseData: templated on any structure (like TopologyData) but on a smaller set. This Data works with a second vector of indices as a map between the Topology buffer and this Data. This PR merge both code inside TopologySubSetData. If the second vector is not set and the TopologySubSetData is templated on ; ```unsigned int``` it will work as before. ![image](https://user-images.githubusercontent.com/21199245/121327022-5d313680-c913-11eb-99b4-3d543893ae06.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2114
https://github.com/sofa-framework/sofa/pull/2114:954,Security,certificate,certificate-of-origin-dco,954,"Right now in SOFA we have:; - TopologySubsetData: templated but working only with ```unsigned int``` to store a list of indices following the topology. For example the ```indices``` of a FixedConstraint.; - TopologySparseData: templated on any structure (like TopologyData) but on a smaller set. This Data works with a second vector of indices as a map between the Topology buffer and this Data. This PR merge both code inside TopologySubSetData. If the second vector is not set and the TopologySubSetData is templated on ; ```unsigned int``` it will work as before. ![image](https://user-images.githubusercontent.com/21199245/121327022-5d313680-c913-11eb-99b4-3d543893ae06.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2114
https://github.com/sofa-framework/sofa/pull/2114:1219,Testability,test,test,1219,"Right now in SOFA we have:; - TopologySubsetData: templated but working only with ```unsigned int``` to store a list of indices following the topology. For example the ```indices``` of a FixedConstraint.; - TopologySparseData: templated on any structure (like TopologyData) but on a smaller set. This Data works with a second vector of indices as a map between the Topology buffer and this Data. This PR merge both code inside TopologySubSetData. If the second vector is not set and the TopologySubSetData is templated on ; ```unsigned int``` it will work as before. ![image](https://user-images.githubusercontent.com/21199245/121327022-5d313680-c913-11eb-99b4-3d543893ae06.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2114
https://github.com/sofa-framework/sofa/pull/2114:1268,Testability,test,test,1268,"Right now in SOFA we have:; - TopologySubsetData: templated but working only with ```unsigned int``` to store a list of indices following the topology. For example the ```indices``` of a FixedConstraint.; - TopologySparseData: templated on any structure (like TopologyData) but on a smaller set. This Data works with a second vector of indices as a map between the Topology buffer and this Data. This PR merge both code inside TopologySubSetData. If the second vector is not set and the TopologySubSetData is templated on ; ```unsigned int``` it will work as before. ![image](https://user-images.githubusercontent.com/21199245/121327022-5d313680-c913-11eb-99b4-3d543893ae06.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2114
https://github.com/sofa-framework/sofa/pull/2115:693,Availability,failure,failures,693,"Fix compilation without openHaptics to be able to activate it on the CI. ; Warning the GeomagicDriver will be invalid by default. include PR #2113 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2115
https://github.com/sofa-framework/sofa/pull/2115:742,Availability,failure,failures,742,"Fix compilation without openHaptics to be able to activate it on the CI. ; Warning the GeomagicDriver will be invalid by default. include PR #2113 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2115
https://github.com/sofa-framework/sofa/pull/2115:312,Security,Certificate,Certificate,312,"Fix compilation without openHaptics to be able to activate it on the CI. ; Warning the GeomagicDriver will be invalid by default. include PR #2113 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2115
https://github.com/sofa-framework/sofa/pull/2115:423,Security,certificate,certificate-of-origin-dco,423,"Fix compilation without openHaptics to be able to activate it on the CI. ; Warning the GeomagicDriver will be invalid by default. include PR #2113 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2115
https://github.com/sofa-framework/sofa/pull/2115:688,Testability,test,test,688,"Fix compilation without openHaptics to be able to activate it on the CI. ; Warning the GeomagicDriver will be invalid by default. include PR #2113 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2115
https://github.com/sofa-framework/sofa/pull/2115:737,Testability,test,test,737,"Fix compilation without openHaptics to be able to activate it on the CI. ; Warning the GeomagicDriver will be invalid by default. include PR #2113 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2115
https://github.com/sofa-framework/sofa/pull/2116:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2116
https://github.com/sofa-framework/sofa/pull/2116:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2116
https://github.com/sofa-framework/sofa/pull/2116:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2116
https://github.com/sofa-framework/sofa/pull/2116:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2116
https://github.com/sofa-framework/sofa/pull/2116:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2116
https://github.com/sofa-framework/sofa/pull/2116:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2116
https://github.com/sofa-framework/sofa/issues/2117:120,Modifiability,plugin,plugins,120,Code is duplicated in:. - SofaKernel/modules/SofaBaseCollision/SofaBaseCollision_test/BroadPhase_test.h; - applications/plugins/SofaTest/BroadPhase_test.h,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2117
https://github.com/sofa-framework/sofa/pull/2118:2284,Availability,failure,failures,2284,"ction object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `BVHNarrowPhase` component, and warn the user.; - `DirectSAP` is no longer a collision detection object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `DirectSAPNarrowPhase` component, and warn the user.; - `BruteForceDetection` has been replaced with `BruteForceBroadPhase` and `BVHNarrowPhase` in all scenes (xml, python etc); - `CudaCollisionDetection` no longer inherits from `BruteForceDetection`. Instead, it inherits from `BruteForceBroadPhase` and `NarrowPhaseDetection`. In a future PR, this component can be transformed to a narrow phase only.; - Fix code where `BruteForceDetection` is used. If `BruteForceDetection` is found in the scene, the warning to the user looks like:; ```; [DEPRECATED] [BruteForceDetection(bruteForceDetection1)] BruteForceDetection component is deprecated. ; As a replacement, use a BroadPhase component, such as [BruteForceBroadPhase, IncrSAP, ParallelBruteForceBroadPhase, RayTraceDetection], ; AND a NarrowPhase component, such as [BVHNarrowPhase, DirectSAPNarrowPhase, IncrSAP, ParallelBVHNarrowPhase, RayTraceDetection]. ; BruteForceBroadPhase and BVHNarrowPhase have been automatically added to your scene for backward compatibility. ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2118
https://github.com/sofa-framework/sofa/pull/2118:2333,Availability,failure,failures,2333,"ction object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `BVHNarrowPhase` component, and warn the user.; - `DirectSAP` is no longer a collision detection object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `DirectSAPNarrowPhase` component, and warn the user.; - `BruteForceDetection` has been replaced with `BruteForceBroadPhase` and `BVHNarrowPhase` in all scenes (xml, python etc); - `CudaCollisionDetection` no longer inherits from `BruteForceDetection`. Instead, it inherits from `BruteForceBroadPhase` and `NarrowPhaseDetection`. In a future PR, this component can be transformed to a narrow phase only.; - Fix code where `BruteForceDetection` is used. If `BruteForceDetection` is found in the scene, the warning to the user looks like:; ```; [DEPRECATED] [BruteForceDetection(bruteForceDetection1)] BruteForceDetection component is deprecated. ; As a replacement, use a BroadPhase component, such as [BruteForceBroadPhase, IncrSAP, ParallelBruteForceBroadPhase, RayTraceDetection], ; AND a NarrowPhase component, such as [BVHNarrowPhase, DirectSAPNarrowPhase, IncrSAP, ParallelBVHNarrowPhase, RayTraceDetection]. ; BruteForceBroadPhase and BVHNarrowPhase have been automatically added to your scene for backward compatibility. ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2118
https://github.com/sofa-framework/sofa/pull/2118:923,Modifiability,inherit,inherits,923,"Almost all collision detection components in SOFA were a fusion of the broad phase and the narrow phase in a single component. This prevents some combination and confuses about what the component really does.; Following the work in #2010 and #2043, some components such as `BruteForceDetection` and `DirectSAP` can be removed in favour of a broad phase and a narrow phase. In this PR:. - `BruteForceDetection` is no longer a collision detection object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `BVHNarrowPhase` component, and warn the user.; - `DirectSAP` is no longer a collision detection object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `DirectSAPNarrowPhase` component, and warn the user.; - `BruteForceDetection` has been replaced with `BruteForceBroadPhase` and `BVHNarrowPhase` in all scenes (xml, python etc); - `CudaCollisionDetection` no longer inherits from `BruteForceDetection`. Instead, it inherits from `BruteForceBroadPhase` and `NarrowPhaseDetection`. In a future PR, this component can be transformed to a narrow phase only.; - Fix code where `BruteForceDetection` is used. If `BruteForceDetection` is found in the scene, the warning to the user looks like:; ```; [DEPRECATED] [BruteForceDetection(bruteForceDetection1)] BruteForceDetection component is deprecated. ; As a replacement, use a BroadPhase component, such as [BruteForceBroadPhase, IncrSAP, ParallelBruteForceBroadPhase, RayTraceDetection], ; AND a NarrowPhase component, such as [BVHNarrowPhase, DirectSAPNarrowPhase, IncrSAP, ParallelBVHNarrowPhase, RayTraceDetection]. ; BruteForceBroadPhase and BVHNarrowPhase have been automatically added to your scene for backward compatibility. ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#so",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2118
https://github.com/sofa-framework/sofa/pull/2118:972,Modifiability,inherit,inherits,972,"Almost all collision detection components in SOFA were a fusion of the broad phase and the narrow phase in a single component. This prevents some combination and confuses about what the component really does.; Following the work in #2010 and #2043, some components such as `BruteForceDetection` and `DirectSAP` can be removed in favour of a broad phase and a narrow phase. In this PR:. - `BruteForceDetection` is no longer a collision detection object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `BVHNarrowPhase` component, and warn the user.; - `DirectSAP` is no longer a collision detection object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `DirectSAPNarrowPhase` component, and warn the user.; - `BruteForceDetection` has been replaced with `BruteForceBroadPhase` and `BVHNarrowPhase` in all scenes (xml, python etc); - `CudaCollisionDetection` no longer inherits from `BruteForceDetection`. Instead, it inherits from `BruteForceBroadPhase` and `NarrowPhaseDetection`. In a future PR, this component can be transformed to a narrow phase only.; - Fix code where `BruteForceDetection` is used. If `BruteForceDetection` is found in the scene, the warning to the user looks like:; ```; [DEPRECATED] [BruteForceDetection(bruteForceDetection1)] BruteForceDetection component is deprecated. ; As a replacement, use a BroadPhase component, such as [BruteForceBroadPhase, IncrSAP, ParallelBruteForceBroadPhase, RayTraceDetection], ; AND a NarrowPhase component, such as [BVHNarrowPhase, DirectSAPNarrowPhase, IncrSAP, ParallelBVHNarrowPhase, RayTraceDetection]. ; BruteForceBroadPhase and BVHNarrowPhase have been automatically added to your scene for backward compatibility. ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#so",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2118
https://github.com/sofa-framework/sofa/pull/2118:21,Safety,detect,detection,21,"Almost all collision detection components in SOFA were a fusion of the broad phase and the narrow phase in a single component. This prevents some combination and confuses about what the component really does.; Following the work in #2010 and #2043, some components such as `BruteForceDetection` and `DirectSAP` can be removed in favour of a broad phase and a narrow phase. In this PR:. - `BruteForceDetection` is no longer a collision detection object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `BVHNarrowPhase` component, and warn the user.; - `DirectSAP` is no longer a collision detection object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `DirectSAPNarrowPhase` component, and warn the user.; - `BruteForceDetection` has been replaced with `BruteForceBroadPhase` and `BVHNarrowPhase` in all scenes (xml, python etc); - `CudaCollisionDetection` no longer inherits from `BruteForceDetection`. Instead, it inherits from `BruteForceBroadPhase` and `NarrowPhaseDetection`. In a future PR, this component can be transformed to a narrow phase only.; - Fix code where `BruteForceDetection` is used. If `BruteForceDetection` is found in the scene, the warning to the user looks like:; ```; [DEPRECATED] [BruteForceDetection(bruteForceDetection1)] BruteForceDetection component is deprecated. ; As a replacement, use a BroadPhase component, such as [BruteForceBroadPhase, IncrSAP, ParallelBruteForceBroadPhase, RayTraceDetection], ; AND a NarrowPhase component, such as [BVHNarrowPhase, DirectSAPNarrowPhase, IncrSAP, ParallelBVHNarrowPhase, RayTraceDetection]. ; BruteForceBroadPhase and BVHNarrowPhase have been automatically added to your scene for backward compatibility. ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#so",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2118
https://github.com/sofa-framework/sofa/pull/2118:435,Safety,detect,detection,435,"Almost all collision detection components in SOFA were a fusion of the broad phase and the narrow phase in a single component. This prevents some combination and confuses about what the component really does.; Following the work in #2010 and #2043, some components such as `BruteForceDetection` and `DirectSAP` can be removed in favour of a broad phase and a narrow phase. In this PR:. - `BruteForceDetection` is no longer a collision detection object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `BVHNarrowPhase` component, and warn the user.; - `DirectSAP` is no longer a collision detection object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `DirectSAPNarrowPhase` component, and warn the user.; - `BruteForceDetection` has been replaced with `BruteForceBroadPhase` and `BVHNarrowPhase` in all scenes (xml, python etc); - `CudaCollisionDetection` no longer inherits from `BruteForceDetection`. Instead, it inherits from `BruteForceBroadPhase` and `NarrowPhaseDetection`. In a future PR, this component can be transformed to a narrow phase only.; - Fix code where `BruteForceDetection` is used. If `BruteForceDetection` is found in the scene, the warning to the user looks like:; ```; [DEPRECATED] [BruteForceDetection(bruteForceDetection1)] BruteForceDetection component is deprecated. ; As a replacement, use a BroadPhase component, such as [BruteForceBroadPhase, IncrSAP, ParallelBruteForceBroadPhase, RayTraceDetection], ; AND a NarrowPhase component, such as [BVHNarrowPhase, DirectSAPNarrowPhase, IncrSAP, ParallelBVHNarrowPhase, RayTraceDetection]. ; BruteForceBroadPhase and BVHNarrowPhase have been automatically added to your scene for backward compatibility. ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#so",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2118
https://github.com/sofa-framework/sofa/pull/2118:615,Safety,detect,detection,615,"Almost all collision detection components in SOFA were a fusion of the broad phase and the narrow phase in a single component. This prevents some combination and confuses about what the component really does.; Following the work in #2010 and #2043, some components such as `BruteForceDetection` and `DirectSAP` can be removed in favour of a broad phase and a narrow phase. In this PR:. - `BruteForceDetection` is no longer a collision detection object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `BVHNarrowPhase` component, and warn the user.; - `DirectSAP` is no longer a collision detection object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `DirectSAPNarrowPhase` component, and warn the user.; - `BruteForceDetection` has been replaced with `BruteForceBroadPhase` and `BVHNarrowPhase` in all scenes (xml, python etc); - `CudaCollisionDetection` no longer inherits from `BruteForceDetection`. Instead, it inherits from `BruteForceBroadPhase` and `NarrowPhaseDetection`. In a future PR, this component can be transformed to a narrow phase only.; - Fix code where `BruteForceDetection` is used. If `BruteForceDetection` is found in the scene, the warning to the user looks like:; ```; [DEPRECATED] [BruteForceDetection(bruteForceDetection1)] BruteForceDetection component is deprecated. ; As a replacement, use a BroadPhase component, such as [BruteForceBroadPhase, IncrSAP, ParallelBruteForceBroadPhase, RayTraceDetection], ; AND a NarrowPhase component, such as [BVHNarrowPhase, DirectSAPNarrowPhase, IncrSAP, ParallelBVHNarrowPhase, RayTraceDetection]. ; BruteForceBroadPhase and BVHNarrowPhase have been automatically added to your scene for backward compatibility. ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#so",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2118
https://github.com/sofa-framework/sofa/pull/2118:1903,Security,Certificate,Certificate,1903,"ction object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `BVHNarrowPhase` component, and warn the user.; - `DirectSAP` is no longer a collision detection object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `DirectSAPNarrowPhase` component, and warn the user.; - `BruteForceDetection` has been replaced with `BruteForceBroadPhase` and `BVHNarrowPhase` in all scenes (xml, python etc); - `CudaCollisionDetection` no longer inherits from `BruteForceDetection`. Instead, it inherits from `BruteForceBroadPhase` and `NarrowPhaseDetection`. In a future PR, this component can be transformed to a narrow phase only.; - Fix code where `BruteForceDetection` is used. If `BruteForceDetection` is found in the scene, the warning to the user looks like:; ```; [DEPRECATED] [BruteForceDetection(bruteForceDetection1)] BruteForceDetection component is deprecated. ; As a replacement, use a BroadPhase component, such as [BruteForceBroadPhase, IncrSAP, ParallelBruteForceBroadPhase, RayTraceDetection], ; AND a NarrowPhase component, such as [BVHNarrowPhase, DirectSAPNarrowPhase, IncrSAP, ParallelBVHNarrowPhase, RayTraceDetection]. ; BruteForceBroadPhase and BVHNarrowPhase have been automatically added to your scene for backward compatibility. ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2118
https://github.com/sofa-framework/sofa/pull/2118:2014,Security,certificate,certificate-of-origin-dco,2014,"ction object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `BVHNarrowPhase` component, and warn the user.; - `DirectSAP` is no longer a collision detection object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `DirectSAPNarrowPhase` component, and warn the user.; - `BruteForceDetection` has been replaced with `BruteForceBroadPhase` and `BVHNarrowPhase` in all scenes (xml, python etc); - `CudaCollisionDetection` no longer inherits from `BruteForceDetection`. Instead, it inherits from `BruteForceBroadPhase` and `NarrowPhaseDetection`. In a future PR, this component can be transformed to a narrow phase only.; - Fix code where `BruteForceDetection` is used. If `BruteForceDetection` is found in the scene, the warning to the user looks like:; ```; [DEPRECATED] [BruteForceDetection(bruteForceDetection1)] BruteForceDetection component is deprecated. ; As a replacement, use a BroadPhase component, such as [BruteForceBroadPhase, IncrSAP, ParallelBruteForceBroadPhase, RayTraceDetection], ; AND a NarrowPhase component, such as [BVHNarrowPhase, DirectSAPNarrowPhase, IncrSAP, ParallelBVHNarrowPhase, RayTraceDetection]. ; BruteForceBroadPhase and BVHNarrowPhase have been automatically added to your scene for backward compatibility. ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2118
https://github.com/sofa-framework/sofa/pull/2118:2279,Testability,test,test,2279,"ction object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `BVHNarrowPhase` component, and warn the user.; - `DirectSAP` is no longer a collision detection object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `DirectSAPNarrowPhase` component, and warn the user.; - `BruteForceDetection` has been replaced with `BruteForceBroadPhase` and `BVHNarrowPhase` in all scenes (xml, python etc); - `CudaCollisionDetection` no longer inherits from `BruteForceDetection`. Instead, it inherits from `BruteForceBroadPhase` and `NarrowPhaseDetection`. In a future PR, this component can be transformed to a narrow phase only.; - Fix code where `BruteForceDetection` is used. If `BruteForceDetection` is found in the scene, the warning to the user looks like:; ```; [DEPRECATED] [BruteForceDetection(bruteForceDetection1)] BruteForceDetection component is deprecated. ; As a replacement, use a BroadPhase component, such as [BruteForceBroadPhase, IncrSAP, ParallelBruteForceBroadPhase, RayTraceDetection], ; AND a NarrowPhase component, such as [BVHNarrowPhase, DirectSAPNarrowPhase, IncrSAP, ParallelBVHNarrowPhase, RayTraceDetection]. ; BruteForceBroadPhase and BVHNarrowPhase have been automatically added to your scene for backward compatibility. ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2118
https://github.com/sofa-framework/sofa/pull/2118:2328,Testability,test,test,2328,"ction object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `BVHNarrowPhase` component, and warn the user.; - `DirectSAP` is no longer a collision detection object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `DirectSAPNarrowPhase` component, and warn the user.; - `BruteForceDetection` has been replaced with `BruteForceBroadPhase` and `BVHNarrowPhase` in all scenes (xml, python etc); - `CudaCollisionDetection` no longer inherits from `BruteForceDetection`. Instead, it inherits from `BruteForceBroadPhase` and `NarrowPhaseDetection`. In a future PR, this component can be transformed to a narrow phase only.; - Fix code where `BruteForceDetection` is used. If `BruteForceDetection` is found in the scene, the warning to the user looks like:; ```; [DEPRECATED] [BruteForceDetection(bruteForceDetection1)] BruteForceDetection component is deprecated. ; As a replacement, use a BroadPhase component, such as [BruteForceBroadPhase, IncrSAP, ParallelBruteForceBroadPhase, RayTraceDetection], ; AND a NarrowPhase component, such as [BVHNarrowPhase, DirectSAPNarrowPhase, IncrSAP, ParallelBVHNarrowPhase, RayTraceDetection]. ; BruteForceBroadPhase and BVHNarrowPhase have been automatically added to your scene for backward compatibility. ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2118
https://github.com/sofa-framework/sofa/issues/2119:84,Availability,mask,mask,84,"Roadmap STC11. \<to be filled by people working on the subject\>. References:; #26 (mask); #800 (eigen); #1350 (visitors); #1341 (api); #1636 (getJ, getK)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2119
https://github.com/sofa-framework/sofa/pull/2120:599,Availability,failure,failures,599,"Harmless PR to clean the logs when packaging on MacOS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2120
https://github.com/sofa-framework/sofa/pull/2120:648,Availability,failure,failures,648,"Harmless PR to clean the logs when packaging on MacOS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2120
https://github.com/sofa-framework/sofa/pull/2120:218,Security,Certificate,Certificate,218,"Harmless PR to clean the logs when packaging on MacOS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2120
https://github.com/sofa-framework/sofa/pull/2120:329,Security,certificate,certificate-of-origin-dco,329,"Harmless PR to clean the logs when packaging on MacOS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2120
https://github.com/sofa-framework/sofa/pull/2120:25,Testability,log,logs,25,"Harmless PR to clean the logs when packaging on MacOS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2120
https://github.com/sofa-framework/sofa/pull/2120:594,Testability,test,test,594,"Harmless PR to clean the logs when packaging on MacOS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2120
https://github.com/sofa-framework/sofa/pull/2120:643,Testability,test,test,643,"Harmless PR to clean the logs when packaging on MacOS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2120
https://github.com/sofa-framework/sofa/pull/2121:554,Availability,failure,failures,554,"Fix #528. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2121
https://github.com/sofa-framework/sofa/pull/2121:603,Availability,failure,failures,603,"Fix #528. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2121
https://github.com/sofa-framework/sofa/pull/2121:173,Security,Certificate,Certificate,173,"Fix #528. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2121
https://github.com/sofa-framework/sofa/pull/2121:284,Security,certificate,certificate-of-origin-dco,284,"Fix #528. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2121
https://github.com/sofa-framework/sofa/pull/2121:549,Testability,test,test,549,"Fix #528. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2121
https://github.com/sofa-framework/sofa/pull/2121:598,Testability,test,test,598,"Fix #528. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2121
https://github.com/sofa-framework/sofa/issues/2123:148,Energy Efficiency,reduce,reduces-gravity-by-,148,Related to the following PRs:. #1369; #2110; and on [this post](https://www.sofa-framework.org/community/forum/topic/bilateralinteractionconstraint-reduces-gravity-by-100x/),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2123
https://github.com/sofa-framework/sofa/pull/2124:1304,Availability,failure,failures,1304,"Adds new features with examples:; - BooleanOperations; ![image](https://user-images.githubusercontent.com/12150715/121251475-e9d8e780-c874-11eb-8118-15d3dd24b54e.png); - UpsamplePointCloud; ![image](https://user-images.githubusercontent.com/12150715/121252236-c4001280-c875-11eb-8290-6c92b30fd82d.png); - PoissonSurfaceReconstruction; ![image](https://user-images.githubusercontent.com/12150715/121251754-37edeb00-c875-11eb-99f0-a120bff4f2f1.png) ; - FrontSurfaceReconstruction; ![image](https://user-images.githubusercontent.com/12150715/121251927-679cf300-c875-11eb-9114-9ebbd3d50789.png). Fixes compilation in CylinderMesh:; - **EDIT**: removed unused `#include <sofa/gl/template.h>`. Minor cleaning in DecimateMesh:; - Data member variables names with d_. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2124
https://github.com/sofa-framework/sofa/pull/2124:1353,Availability,failure,failures,1353,"Adds new features with examples:; - BooleanOperations; ![image](https://user-images.githubusercontent.com/12150715/121251475-e9d8e780-c874-11eb-8118-15d3dd24b54e.png); - UpsamplePointCloud; ![image](https://user-images.githubusercontent.com/12150715/121252236-c4001280-c875-11eb-8290-6c92b30fd82d.png); - PoissonSurfaceReconstruction; ![image](https://user-images.githubusercontent.com/12150715/121251754-37edeb00-c875-11eb-99f0-a120bff4f2f1.png) ; - FrontSurfaceReconstruction; ![image](https://user-images.githubusercontent.com/12150715/121251927-679cf300-c875-11eb-9114-9ebbd3d50789.png). Fixes compilation in CylinderMesh:; - **EDIT**: removed unused `#include <sofa/gl/template.h>`. Minor cleaning in DecimateMesh:; - Data member variables names with d_. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2124
https://github.com/sofa-framework/sofa/pull/2124:735,Modifiability,variab,variables,735,"Adds new features with examples:; - BooleanOperations; ![image](https://user-images.githubusercontent.com/12150715/121251475-e9d8e780-c874-11eb-8118-15d3dd24b54e.png); - UpsamplePointCloud; ![image](https://user-images.githubusercontent.com/12150715/121252236-c4001280-c875-11eb-8290-6c92b30fd82d.png); - PoissonSurfaceReconstruction; ![image](https://user-images.githubusercontent.com/12150715/121251754-37edeb00-c875-11eb-99f0-a120bff4f2f1.png) ; - FrontSurfaceReconstruction; ![image](https://user-images.githubusercontent.com/12150715/121251927-679cf300-c875-11eb-9114-9ebbd3d50789.png). Fixes compilation in CylinderMesh:; - **EDIT**: removed unused `#include <sofa/gl/template.h>`. Minor cleaning in DecimateMesh:; - Data member variables names with d_. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2124
https://github.com/sofa-framework/sofa/pull/2124:923,Security,Certificate,Certificate,923,"Adds new features with examples:; - BooleanOperations; ![image](https://user-images.githubusercontent.com/12150715/121251475-e9d8e780-c874-11eb-8118-15d3dd24b54e.png); - UpsamplePointCloud; ![image](https://user-images.githubusercontent.com/12150715/121252236-c4001280-c875-11eb-8290-6c92b30fd82d.png); - PoissonSurfaceReconstruction; ![image](https://user-images.githubusercontent.com/12150715/121251754-37edeb00-c875-11eb-99f0-a120bff4f2f1.png) ; - FrontSurfaceReconstruction; ![image](https://user-images.githubusercontent.com/12150715/121251927-679cf300-c875-11eb-9114-9ebbd3d50789.png). Fixes compilation in CylinderMesh:; - **EDIT**: removed unused `#include <sofa/gl/template.h>`. Minor cleaning in DecimateMesh:; - Data member variables names with d_. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2124
https://github.com/sofa-framework/sofa/pull/2124:1034,Security,certificate,certificate-of-origin-dco,1034,"Adds new features with examples:; - BooleanOperations; ![image](https://user-images.githubusercontent.com/12150715/121251475-e9d8e780-c874-11eb-8118-15d3dd24b54e.png); - UpsamplePointCloud; ![image](https://user-images.githubusercontent.com/12150715/121252236-c4001280-c875-11eb-8290-6c92b30fd82d.png); - PoissonSurfaceReconstruction; ![image](https://user-images.githubusercontent.com/12150715/121251754-37edeb00-c875-11eb-99f0-a120bff4f2f1.png) ; - FrontSurfaceReconstruction; ![image](https://user-images.githubusercontent.com/12150715/121251927-679cf300-c875-11eb-9114-9ebbd3d50789.png). Fixes compilation in CylinderMesh:; - **EDIT**: removed unused `#include <sofa/gl/template.h>`. Minor cleaning in DecimateMesh:; - Data member variables names with d_. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2124
https://github.com/sofa-framework/sofa/pull/2124:1299,Testability,test,test,1299,"Adds new features with examples:; - BooleanOperations; ![image](https://user-images.githubusercontent.com/12150715/121251475-e9d8e780-c874-11eb-8118-15d3dd24b54e.png); - UpsamplePointCloud; ![image](https://user-images.githubusercontent.com/12150715/121252236-c4001280-c875-11eb-8290-6c92b30fd82d.png); - PoissonSurfaceReconstruction; ![image](https://user-images.githubusercontent.com/12150715/121251754-37edeb00-c875-11eb-99f0-a120bff4f2f1.png) ; - FrontSurfaceReconstruction; ![image](https://user-images.githubusercontent.com/12150715/121251927-679cf300-c875-11eb-9114-9ebbd3d50789.png). Fixes compilation in CylinderMesh:; - **EDIT**: removed unused `#include <sofa/gl/template.h>`. Minor cleaning in DecimateMesh:; - Data member variables names with d_. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2124
https://github.com/sofa-framework/sofa/pull/2124:1348,Testability,test,test,1348,"Adds new features with examples:; - BooleanOperations; ![image](https://user-images.githubusercontent.com/12150715/121251475-e9d8e780-c874-11eb-8118-15d3dd24b54e.png); - UpsamplePointCloud; ![image](https://user-images.githubusercontent.com/12150715/121252236-c4001280-c875-11eb-8290-6c92b30fd82d.png); - PoissonSurfaceReconstruction; ![image](https://user-images.githubusercontent.com/12150715/121251754-37edeb00-c875-11eb-99f0-a120bff4f2f1.png) ; - FrontSurfaceReconstruction; ![image](https://user-images.githubusercontent.com/12150715/121251927-679cf300-c875-11eb-9114-9ebbd3d50789.png). Fixes compilation in CylinderMesh:; - **EDIT**: removed unused `#include <sofa/gl/template.h>`. Minor cleaning in DecimateMesh:; - Data member variables names with d_. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2124
https://github.com/sofa-framework/sofa/pull/2125:749,Availability,error,errors,749,"In this PR:. - Added static class member `Visitor::runVisitorTask`; - Used `Visitor::runVisitorTask` in BaseMechanicalVisitor to replace all the boilerplate code; - Simplify the logic in `BaseMechanicalVisitor::processNodeTopDown` even though I have some concerns; - `Visitor::for_each` is now static; - `Visitor::for_each` accepts an optional string parameter giving the type of visitor ""fwd"" or ""bwd""; - `Visitor::for_each_r` is removed in favour of an overload of `Visitor::for_each`; - SOFA_VERBOSE_TRAVERSAL surrounds the calls of `debug_write_state_before` and `debug_write_state_after`, instead of the functions themselves. Doing that, it allows to actually compile the debug content of both function. And I noticed that they had compilation errors (we could not detect it as SOFA_VERBOSE_TRAVERSAL is never defined). My concerns:. 1. I wanted to use `Visitor::runVisitorTask` in other visitors than BaseMechanicalVisitor. But the logic is not the same. BaseMechanialVisitor is the only visitor checking the tags. Should we always check the tags? Also, the debug boilerplate code is not consistent over all the visitors.; 2. `Visitor::for_each` returns only the result of the last call in the loop. In another loop on the solvers at the beginning of `BaseMechanicalVisitor::processNodeTopDown`, we check the intermediate values. It is not consistent. I suspect that `Visitor::for_each` must also check intermediate values.; 3. In `BaseMechanicalVisitor::processNodeTopDown`, between the process of `mechanicalMapping` and `mechanicalState`, we don't check if `res == RESULT_PRUNE`. It means we do the process of `mechanicalState` even if the process of `mechanicalMapping` returned `RESULT_PRUNE`. It's not consistent with the rest of the code.; 4. It is not possible to define SOFA_VERBOSE_TRAVERSAL through cmake. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2125
https://github.com/sofa-framework/sofa/pull/2125:2367,Availability,failure,failures,2367," the calls of `debug_write_state_before` and `debug_write_state_after`, instead of the functions themselves. Doing that, it allows to actually compile the debug content of both function. And I noticed that they had compilation errors (we could not detect it as SOFA_VERBOSE_TRAVERSAL is never defined). My concerns:. 1. I wanted to use `Visitor::runVisitorTask` in other visitors than BaseMechanicalVisitor. But the logic is not the same. BaseMechanialVisitor is the only visitor checking the tags. Should we always check the tags? Also, the debug boilerplate code is not consistent over all the visitors.; 2. `Visitor::for_each` returns only the result of the last call in the loop. In another loop on the solvers at the beginning of `BaseMechanicalVisitor::processNodeTopDown`, we check the intermediate values. It is not consistent. I suspect that `Visitor::for_each` must also check intermediate values.; 3. In `BaseMechanicalVisitor::processNodeTopDown`, between the process of `mechanicalMapping` and `mechanicalState`, we don't check if `res == RESULT_PRUNE`. It means we do the process of `mechanicalState` even if the process of `mechanicalMapping` returned `RESULT_PRUNE`. It's not consistent with the rest of the code.; 4. It is not possible to define SOFA_VERBOSE_TRAVERSAL through cmake. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2125
https://github.com/sofa-framework/sofa/pull/2125:2416,Availability,failure,failures,2416," the calls of `debug_write_state_before` and `debug_write_state_after`, instead of the functions themselves. Doing that, it allows to actually compile the debug content of both function. And I noticed that they had compilation errors (we could not detect it as SOFA_VERBOSE_TRAVERSAL is never defined). My concerns:. 1. I wanted to use `Visitor::runVisitorTask` in other visitors than BaseMechanicalVisitor. But the logic is not the same. BaseMechanialVisitor is the only visitor checking the tags. Should we always check the tags? Also, the debug boilerplate code is not consistent over all the visitors.; 2. `Visitor::for_each` returns only the result of the last call in the loop. In another loop on the solvers at the beginning of `BaseMechanicalVisitor::processNodeTopDown`, we check the intermediate values. It is not consistent. I suspect that `Visitor::for_each` must also check intermediate values.; 3. In `BaseMechanicalVisitor::processNodeTopDown`, between the process of `mechanicalMapping` and `mechanicalState`, we don't check if `res == RESULT_PRUNE`. It means we do the process of `mechanicalState` even if the process of `mechanicalMapping` returned `RESULT_PRUNE`. It's not consistent with the rest of the code.; 4. It is not possible to define SOFA_VERBOSE_TRAVERSAL through cmake. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2125
https://github.com/sofa-framework/sofa/pull/2125:770,Safety,detect,detect,770,"In this PR:. - Added static class member `Visitor::runVisitorTask`; - Used `Visitor::runVisitorTask` in BaseMechanicalVisitor to replace all the boilerplate code; - Simplify the logic in `BaseMechanicalVisitor::processNodeTopDown` even though I have some concerns; - `Visitor::for_each` is now static; - `Visitor::for_each` accepts an optional string parameter giving the type of visitor ""fwd"" or ""bwd""; - `Visitor::for_each_r` is removed in favour of an overload of `Visitor::for_each`; - SOFA_VERBOSE_TRAVERSAL surrounds the calls of `debug_write_state_before` and `debug_write_state_after`, instead of the functions themselves. Doing that, it allows to actually compile the debug content of both function. And I noticed that they had compilation errors (we could not detect it as SOFA_VERBOSE_TRAVERSAL is never defined). My concerns:. 1. I wanted to use `Visitor::runVisitorTask` in other visitors than BaseMechanicalVisitor. But the logic is not the same. BaseMechanialVisitor is the only visitor checking the tags. Should we always check the tags? Also, the debug boilerplate code is not consistent over all the visitors.; 2. `Visitor::for_each` returns only the result of the last call in the loop. In another loop on the solvers at the beginning of `BaseMechanicalVisitor::processNodeTopDown`, we check the intermediate values. It is not consistent. I suspect that `Visitor::for_each` must also check intermediate values.; 3. In `BaseMechanicalVisitor::processNodeTopDown`, between the process of `mechanicalMapping` and `mechanicalState`, we don't check if `res == RESULT_PRUNE`. It means we do the process of `mechanicalState` even if the process of `mechanicalMapping` returned `RESULT_PRUNE`. It's not consistent with the rest of the code.; 4. It is not possible to define SOFA_VERBOSE_TRAVERSAL through cmake. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2125
https://github.com/sofa-framework/sofa/pull/2125:1986,Security,Certificate,Certificate,1986," the calls of `debug_write_state_before` and `debug_write_state_after`, instead of the functions themselves. Doing that, it allows to actually compile the debug content of both function. And I noticed that they had compilation errors (we could not detect it as SOFA_VERBOSE_TRAVERSAL is never defined). My concerns:. 1. I wanted to use `Visitor::runVisitorTask` in other visitors than BaseMechanicalVisitor. But the logic is not the same. BaseMechanialVisitor is the only visitor checking the tags. Should we always check the tags? Also, the debug boilerplate code is not consistent over all the visitors.; 2. `Visitor::for_each` returns only the result of the last call in the loop. In another loop on the solvers at the beginning of `BaseMechanicalVisitor::processNodeTopDown`, we check the intermediate values. It is not consistent. I suspect that `Visitor::for_each` must also check intermediate values.; 3. In `BaseMechanicalVisitor::processNodeTopDown`, between the process of `mechanicalMapping` and `mechanicalState`, we don't check if `res == RESULT_PRUNE`. It means we do the process of `mechanicalState` even if the process of `mechanicalMapping` returned `RESULT_PRUNE`. It's not consistent with the rest of the code.; 4. It is not possible to define SOFA_VERBOSE_TRAVERSAL through cmake. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2125
https://github.com/sofa-framework/sofa/pull/2125:2097,Security,certificate,certificate-of-origin-dco,2097," the calls of `debug_write_state_before` and `debug_write_state_after`, instead of the functions themselves. Doing that, it allows to actually compile the debug content of both function. And I noticed that they had compilation errors (we could not detect it as SOFA_VERBOSE_TRAVERSAL is never defined). My concerns:. 1. I wanted to use `Visitor::runVisitorTask` in other visitors than BaseMechanicalVisitor. But the logic is not the same. BaseMechanialVisitor is the only visitor checking the tags. Should we always check the tags? Also, the debug boilerplate code is not consistent over all the visitors.; 2. `Visitor::for_each` returns only the result of the last call in the loop. In another loop on the solvers at the beginning of `BaseMechanicalVisitor::processNodeTopDown`, we check the intermediate values. It is not consistent. I suspect that `Visitor::for_each` must also check intermediate values.; 3. In `BaseMechanicalVisitor::processNodeTopDown`, between the process of `mechanicalMapping` and `mechanicalState`, we don't check if `res == RESULT_PRUNE`. It means we do the process of `mechanicalState` even if the process of `mechanicalMapping` returned `RESULT_PRUNE`. It's not consistent with the rest of the code.; 4. It is not possible to define SOFA_VERBOSE_TRAVERSAL through cmake. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2125
https://github.com/sofa-framework/sofa/pull/2125:178,Testability,log,logic,178,"In this PR:. - Added static class member `Visitor::runVisitorTask`; - Used `Visitor::runVisitorTask` in BaseMechanicalVisitor to replace all the boilerplate code; - Simplify the logic in `BaseMechanicalVisitor::processNodeTopDown` even though I have some concerns; - `Visitor::for_each` is now static; - `Visitor::for_each` accepts an optional string parameter giving the type of visitor ""fwd"" or ""bwd""; - `Visitor::for_each_r` is removed in favour of an overload of `Visitor::for_each`; - SOFA_VERBOSE_TRAVERSAL surrounds the calls of `debug_write_state_before` and `debug_write_state_after`, instead of the functions themselves. Doing that, it allows to actually compile the debug content of both function. And I noticed that they had compilation errors (we could not detect it as SOFA_VERBOSE_TRAVERSAL is never defined). My concerns:. 1. I wanted to use `Visitor::runVisitorTask` in other visitors than BaseMechanicalVisitor. But the logic is not the same. BaseMechanialVisitor is the only visitor checking the tags. Should we always check the tags? Also, the debug boilerplate code is not consistent over all the visitors.; 2. `Visitor::for_each` returns only the result of the last call in the loop. In another loop on the solvers at the beginning of `BaseMechanicalVisitor::processNodeTopDown`, we check the intermediate values. It is not consistent. I suspect that `Visitor::for_each` must also check intermediate values.; 3. In `BaseMechanicalVisitor::processNodeTopDown`, between the process of `mechanicalMapping` and `mechanicalState`, we don't check if `res == RESULT_PRUNE`. It means we do the process of `mechanicalState` even if the process of `mechanicalMapping` returned `RESULT_PRUNE`. It's not consistent with the rest of the code.; 4. It is not possible to define SOFA_VERBOSE_TRAVERSAL through cmake. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2125
https://github.com/sofa-framework/sofa/pull/2125:938,Testability,log,logic,938,"In this PR:. - Added static class member `Visitor::runVisitorTask`; - Used `Visitor::runVisitorTask` in BaseMechanicalVisitor to replace all the boilerplate code; - Simplify the logic in `BaseMechanicalVisitor::processNodeTopDown` even though I have some concerns; - `Visitor::for_each` is now static; - `Visitor::for_each` accepts an optional string parameter giving the type of visitor ""fwd"" or ""bwd""; - `Visitor::for_each_r` is removed in favour of an overload of `Visitor::for_each`; - SOFA_VERBOSE_TRAVERSAL surrounds the calls of `debug_write_state_before` and `debug_write_state_after`, instead of the functions themselves. Doing that, it allows to actually compile the debug content of both function. And I noticed that they had compilation errors (we could not detect it as SOFA_VERBOSE_TRAVERSAL is never defined). My concerns:. 1. I wanted to use `Visitor::runVisitorTask` in other visitors than BaseMechanicalVisitor. But the logic is not the same. BaseMechanialVisitor is the only visitor checking the tags. Should we always check the tags? Also, the debug boilerplate code is not consistent over all the visitors.; 2. `Visitor::for_each` returns only the result of the last call in the loop. In another loop on the solvers at the beginning of `BaseMechanicalVisitor::processNodeTopDown`, we check the intermediate values. It is not consistent. I suspect that `Visitor::for_each` must also check intermediate values.; 3. In `BaseMechanicalVisitor::processNodeTopDown`, between the process of `mechanicalMapping` and `mechanicalState`, we don't check if `res == RESULT_PRUNE`. It means we do the process of `mechanicalState` even if the process of `mechanicalMapping` returned `RESULT_PRUNE`. It's not consistent with the rest of the code.; 4. It is not possible to define SOFA_VERBOSE_TRAVERSAL through cmake. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2125
https://github.com/sofa-framework/sofa/pull/2125:2362,Testability,test,test,2362," the calls of `debug_write_state_before` and `debug_write_state_after`, instead of the functions themselves. Doing that, it allows to actually compile the debug content of both function. And I noticed that they had compilation errors (we could not detect it as SOFA_VERBOSE_TRAVERSAL is never defined). My concerns:. 1. I wanted to use `Visitor::runVisitorTask` in other visitors than BaseMechanicalVisitor. But the logic is not the same. BaseMechanialVisitor is the only visitor checking the tags. Should we always check the tags? Also, the debug boilerplate code is not consistent over all the visitors.; 2. `Visitor::for_each` returns only the result of the last call in the loop. In another loop on the solvers at the beginning of `BaseMechanicalVisitor::processNodeTopDown`, we check the intermediate values. It is not consistent. I suspect that `Visitor::for_each` must also check intermediate values.; 3. In `BaseMechanicalVisitor::processNodeTopDown`, between the process of `mechanicalMapping` and `mechanicalState`, we don't check if `res == RESULT_PRUNE`. It means we do the process of `mechanicalState` even if the process of `mechanicalMapping` returned `RESULT_PRUNE`. It's not consistent with the rest of the code.; 4. It is not possible to define SOFA_VERBOSE_TRAVERSAL through cmake. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2125
https://github.com/sofa-framework/sofa/pull/2125:2411,Testability,test,test,2411," the calls of `debug_write_state_before` and `debug_write_state_after`, instead of the functions themselves. Doing that, it allows to actually compile the debug content of both function. And I noticed that they had compilation errors (we could not detect it as SOFA_VERBOSE_TRAVERSAL is never defined). My concerns:. 1. I wanted to use `Visitor::runVisitorTask` in other visitors than BaseMechanicalVisitor. But the logic is not the same. BaseMechanialVisitor is the only visitor checking the tags. Should we always check the tags? Also, the debug boilerplate code is not consistent over all the visitors.; 2. `Visitor::for_each` returns only the result of the last call in the loop. In another loop on the solvers at the beginning of `BaseMechanicalVisitor::processNodeTopDown`, we check the intermediate values. It is not consistent. I suspect that `Visitor::for_each` must also check intermediate values.; 3. In `BaseMechanicalVisitor::processNodeTopDown`, between the process of `mechanicalMapping` and `mechanicalState`, we don't check if `res == RESULT_PRUNE`. It means we do the process of `mechanicalState` even if the process of `mechanicalMapping` returned `RESULT_PRUNE`. It's not consistent with the rest of the code.; 4. It is not possible to define SOFA_VERBOSE_TRAVERSAL through cmake. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2125
https://github.com/sofa-framework/sofa/pull/2125:165,Usability,Simpl,Simplify,165,"In this PR:. - Added static class member `Visitor::runVisitorTask`; - Used `Visitor::runVisitorTask` in BaseMechanicalVisitor to replace all the boilerplate code; - Simplify the logic in `BaseMechanicalVisitor::processNodeTopDown` even though I have some concerns; - `Visitor::for_each` is now static; - `Visitor::for_each` accepts an optional string parameter giving the type of visitor ""fwd"" or ""bwd""; - `Visitor::for_each_r` is removed in favour of an overload of `Visitor::for_each`; - SOFA_VERBOSE_TRAVERSAL surrounds the calls of `debug_write_state_before` and `debug_write_state_after`, instead of the functions themselves. Doing that, it allows to actually compile the debug content of both function. And I noticed that they had compilation errors (we could not detect it as SOFA_VERBOSE_TRAVERSAL is never defined). My concerns:. 1. I wanted to use `Visitor::runVisitorTask` in other visitors than BaseMechanicalVisitor. But the logic is not the same. BaseMechanialVisitor is the only visitor checking the tags. Should we always check the tags? Also, the debug boilerplate code is not consistent over all the visitors.; 2. `Visitor::for_each` returns only the result of the last call in the loop. In another loop on the solvers at the beginning of `BaseMechanicalVisitor::processNodeTopDown`, we check the intermediate values. It is not consistent. I suspect that `Visitor::for_each` must also check intermediate values.; 3. In `BaseMechanicalVisitor::processNodeTopDown`, between the process of `mechanicalMapping` and `mechanicalState`, we don't check if `res == RESULT_PRUNE`. It means we do the process of `mechanicalState` even if the process of `mechanicalMapping` returned `RESULT_PRUNE`. It's not consistent with the rest of the code.; 4. It is not possible to define SOFA_VERBOSE_TRAVERSAL through cmake. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2125
https://github.com/sofa-framework/sofa/pull/2126:84,Availability,error,error,84,"Fix failing test because the user is giving a focal radius of zero.; This became an error in #2099 . But it could happen that a user gives both a radius (non zero) and a focal radius (with zero).; This should not be really a fatal error (acting like the focal radius has not be given), ; but more a ""warning"" (a ""focal"" radius at 0 is still wrong after all). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2126
https://github.com/sofa-framework/sofa/pull/2126:231,Availability,error,error,231,"Fix failing test because the user is giving a focal radius of zero.; This became an error in #2099 . But it could happen that a user gives both a radius (non zero) and a focal radius (with zero).; This should not be really a fatal error (acting like the focal radius has not be given), ; but more a ""warning"" (a ""focal"" radius at 0 is still wrong after all). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2126
https://github.com/sofa-framework/sofa/pull/2126:903,Availability,failure,failures,903,"Fix failing test because the user is giving a focal radius of zero.; This became an error in #2099 . But it could happen that a user gives both a radius (non zero) and a focal radius (with zero).; This should not be really a fatal error (acting like the focal radius has not be given), ; but more a ""warning"" (a ""focal"" radius at 0 is still wrong after all). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2126
https://github.com/sofa-framework/sofa/pull/2126:952,Availability,failure,failures,952,"Fix failing test because the user is giving a focal radius of zero.; This became an error in #2099 . But it could happen that a user gives both a radius (non zero) and a focal radius (with zero).; This should not be really a fatal error (acting like the focal radius has not be given), ; but more a ""warning"" (a ""focal"" radius at 0 is still wrong after all). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2126
https://github.com/sofa-framework/sofa/pull/2126:522,Security,Certificate,Certificate,522,"Fix failing test because the user is giving a focal radius of zero.; This became an error in #2099 . But it could happen that a user gives both a radius (non zero) and a focal radius (with zero).; This should not be really a fatal error (acting like the focal radius has not be given), ; but more a ""warning"" (a ""focal"" radius at 0 is still wrong after all). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2126
https://github.com/sofa-framework/sofa/pull/2126:633,Security,certificate,certificate-of-origin-dco,633,"Fix failing test because the user is giving a focal radius of zero.; This became an error in #2099 . But it could happen that a user gives both a radius (non zero) and a focal radius (with zero).; This should not be really a fatal error (acting like the focal radius has not be given), ; but more a ""warning"" (a ""focal"" radius at 0 is still wrong after all). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2126
https://github.com/sofa-framework/sofa/pull/2126:12,Testability,test,test,12,"Fix failing test because the user is giving a focal radius of zero.; This became an error in #2099 . But it could happen that a user gives both a radius (non zero) and a focal radius (with zero).; This should not be really a fatal error (acting like the focal radius has not be given), ; but more a ""warning"" (a ""focal"" radius at 0 is still wrong after all). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2126
https://github.com/sofa-framework/sofa/pull/2126:898,Testability,test,test,898,"Fix failing test because the user is giving a focal radius of zero.; This became an error in #2099 . But it could happen that a user gives both a radius (non zero) and a focal radius (with zero).; This should not be really a fatal error (acting like the focal radius has not be given), ; but more a ""warning"" (a ""focal"" radius at 0 is still wrong after all). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2126
https://github.com/sofa-framework/sofa/pull/2126:947,Testability,test,test,947,"Fix failing test because the user is giving a focal radius of zero.; This became an error in #2099 . But it could happen that a user gives both a radius (non zero) and a focal radius (with zero).; This should not be really a fatal error (acting like the focal radius has not be given), ; but more a ""warning"" (a ""focal"" radius at 0 is still wrong after all). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2126
https://github.com/sofa-framework/sofa/pull/2127:712,Availability,failure,failures,712,"As convened. To have more consistency with the other SofaMisc* modules.; It should also simplify things when using SofaComponentAll, as SofaMiscCollision was excluded. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2127
https://github.com/sofa-framework/sofa/pull/2127:761,Availability,failure,failures,761,"As convened. To have more consistency with the other SofaMisc* modules.; It should also simplify things when using SofaComponentAll, as SofaMiscCollision was excluded. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2127
https://github.com/sofa-framework/sofa/pull/2127:331,Security,Certificate,Certificate,331,"As convened. To have more consistency with the other SofaMisc* modules.; It should also simplify things when using SofaComponentAll, as SofaMiscCollision was excluded. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2127
https://github.com/sofa-framework/sofa/pull/2127:442,Security,certificate,certificate-of-origin-dco,442,"As convened. To have more consistency with the other SofaMisc* modules.; It should also simplify things when using SofaComponentAll, as SofaMiscCollision was excluded. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2127
https://github.com/sofa-framework/sofa/pull/2127:707,Testability,test,test,707,"As convened. To have more consistency with the other SofaMisc* modules.; It should also simplify things when using SofaComponentAll, as SofaMiscCollision was excluded. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2127
https://github.com/sofa-framework/sofa/pull/2127:756,Testability,test,test,756,"As convened. To have more consistency with the other SofaMisc* modules.; It should also simplify things when using SofaComponentAll, as SofaMiscCollision was excluded. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2127
https://github.com/sofa-framework/sofa/pull/2127:88,Usability,simpl,simplify,88,"As convened. To have more consistency with the other SofaMisc* modules.; It should also simplify things when using SofaComponentAll, as SofaMiscCollision was excluded. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2127
https://github.com/sofa-framework/sofa/issues/2128:15,Testability,test,test,15,"The regression test fails after #2076.; See the difference in the following picture:; ![image](https://user-images.githubusercontent.com/10572752/119788296-50075700-bed2-11eb-930e-fc67f3aba386.png); The screenshot is taken after 1200 iterations. #2076 deals with the group manager. It's probably the source of the difference.; In the scene, there is a static object (no ODE solver, and collision models define `simulated=""false""`). In #2076, there is a fix on object without any ODE solver, but where collision models don't define `simulated=""false""`. We are not in this case. The source of the difference is elsewhere.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2128
https://github.com/sofa-framework/sofa/issues/2129:188,Deployability,install,installation,188,https://github.com/jnbrunet/caribou. TODOs:; - Ensure in-tree and out-of-tree builds and tests are passing; - Use SOFA macros in the plugin part (SofaCaribou); - Ensure proper relocatable installation for integration in future SOFA binaries (see SofaPython3 as example),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2129
https://github.com/sofa-framework/sofa/issues/2129:205,Deployability,integrat,integration,205,https://github.com/jnbrunet/caribou. TODOs:; - Ensure in-tree and out-of-tree builds and tests are passing; - Use SOFA macros in the plugin part (SofaCaribou); - Ensure proper relocatable installation for integration in future SOFA binaries (see SofaPython3 as example),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2129
https://github.com/sofa-framework/sofa/issues/2129:205,Integrability,integrat,integration,205,https://github.com/jnbrunet/caribou. TODOs:; - Ensure in-tree and out-of-tree builds and tests are passing; - Use SOFA macros in the plugin part (SofaCaribou); - Ensure proper relocatable installation for integration in future SOFA binaries (see SofaPython3 as example),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2129
https://github.com/sofa-framework/sofa/issues/2129:133,Modifiability,plugin,plugin,133,https://github.com/jnbrunet/caribou. TODOs:; - Ensure in-tree and out-of-tree builds and tests are passing; - Use SOFA macros in the plugin part (SofaCaribou); - Ensure proper relocatable installation for integration in future SOFA binaries (see SofaPython3 as example),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2129
https://github.com/sofa-framework/sofa/issues/2129:89,Testability,test,tests,89,https://github.com/jnbrunet/caribou. TODOs:; - Ensure in-tree and out-of-tree builds and tests are passing; - Use SOFA macros in the plugin part (SofaCaribou); - Ensure proper relocatable installation for integration in future SOFA binaries (see SofaPython3 as example),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2129
https://github.com/sofa-framework/sofa/issues/2130:21,Usability,guid,guidelines,21,"We should have clean guidelines for issue creation.; --> What is an issue, what is not? If something is not an issue, what should we do?; --> What are the guidelines for issue title?; --> What are the guidelines for issue description?. TODOs:; - [ ] See how other projects are handling this; - [ ] Propose a nice solution. Some leads:; - https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests; - https://github.com/devspace/awesome-github-templates; - https://github.com/stevemao/github-issue-templates",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2130
https://github.com/sofa-framework/sofa/issues/2130:155,Usability,guid,guidelines,155,"We should have clean guidelines for issue creation.; --> What is an issue, what is not? If something is not an issue, what should we do?; --> What are the guidelines for issue title?; --> What are the guidelines for issue description?. TODOs:; - [ ] See how other projects are handling this; - [ ] Propose a nice solution. Some leads:; - https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests; - https://github.com/devspace/awesome-github-templates; - https://github.com/stevemao/github-issue-templates",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2130
https://github.com/sofa-framework/sofa/issues/2130:201,Usability,guid,guidelines,201,"We should have clean guidelines for issue creation.; --> What is an issue, what is not? If something is not an issue, what should we do?; --> What are the guidelines for issue title?; --> What are the guidelines for issue description?. TODOs:; - [ ] See how other projects are handling this; - [ ] Propose a nice solution. Some leads:; - https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests; - https://github.com/devspace/awesome-github-templates; - https://github.com/stevemao/github-issue-templates",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2130
https://github.com/sofa-framework/sofa/pull/2131:775,Availability,failure,failures,775,"get intersections between triangle and segment, get intersection between edge and segment. - computeEdgeSegmentIntersection; - computeIntersectionsLineTriangle. EDIT from @guparan : this PR also fixes #2107 (STC#11 coding sprint). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2131
https://github.com/sofa-framework/sofa/pull/2131:824,Availability,failure,failures,824,"get intersections between triangle and segment, get intersection between edge and segment. - computeEdgeSegmentIntersection; - computeIntersectionsLineTriangle. EDIT from @guparan : this PR also fixes #2107 (STC#11 coding sprint). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2131
https://github.com/sofa-framework/sofa/pull/2131:394,Security,Certificate,Certificate,394,"get intersections between triangle and segment, get intersection between edge and segment. - computeEdgeSegmentIntersection; - computeIntersectionsLineTriangle. EDIT from @guparan : this PR also fixes #2107 (STC#11 coding sprint). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2131
https://github.com/sofa-framework/sofa/pull/2131:505,Security,certificate,certificate-of-origin-dco,505,"get intersections between triangle and segment, get intersection between edge and segment. - computeEdgeSegmentIntersection; - computeIntersectionsLineTriangle. EDIT from @guparan : this PR also fixes #2107 (STC#11 coding sprint). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2131
https://github.com/sofa-framework/sofa/pull/2131:770,Testability,test,test,770,"get intersections between triangle and segment, get intersection between edge and segment. - computeEdgeSegmentIntersection; - computeIntersectionsLineTriangle. EDIT from @guparan : this PR also fixes #2107 (STC#11 coding sprint). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2131
https://github.com/sofa-framework/sofa/pull/2131:819,Testability,test,test,819,"get intersections between triangle and segment, get intersection between edge and segment. - computeEdgeSegmentIntersection; - computeIntersectionsLineTriangle. EDIT from @guparan : this PR also fixes #2107 (STC#11 coding sprint). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2131
https://github.com/sofa-framework/sofa/pull/2132:626,Availability,failure,failures,626,"Warnings were added in #2076. They were not taken into account in the unit tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2132
https://github.com/sofa-framework/sofa/pull/2132:675,Availability,failure,failures,675,"Warnings were added in #2076. They were not taken into account in the unit tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2132
https://github.com/sofa-framework/sofa/pull/2132:245,Security,Certificate,Certificate,245,"Warnings were added in #2076. They were not taken into account in the unit tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2132
https://github.com/sofa-framework/sofa/pull/2132:356,Security,certificate,certificate-of-origin-dco,356,"Warnings were added in #2076. They were not taken into account in the unit tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2132
https://github.com/sofa-framework/sofa/pull/2132:75,Testability,test,tests,75,"Warnings were added in #2076. They were not taken into account in the unit tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2132
https://github.com/sofa-framework/sofa/pull/2132:621,Testability,test,test,621,"Warnings were added in #2076. They were not taken into account in the unit tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2132
https://github.com/sofa-framework/sofa/pull/2132:670,Testability,test,test,670,"Warnings were added in #2076. They were not taken into account in the unit tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2132
https://github.com/sofa-framework/sofa/pull/2134:896,Availability,failure,failures,896,"In #2076, a `vector` was replaced in favour of a `map`. It has a consequence on the order of traversal, therefore on the contact response creation. With a `map`, the order is based on the contact pointer address, which can be random. The vector is ordered by insertion.; This PR restores the `vector` for reproducible simulations. It should fix #2128. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2134
https://github.com/sofa-framework/sofa/pull/2134:945,Availability,failure,failures,945,"In #2076, a `vector` was replaced in favour of a `map`. It has a consequence on the order of traversal, therefore on the contact response creation. With a `map`, the order is based on the contact pointer address, which can be random. The vector is ordered by insertion.; This PR restores the `vector` for reproducible simulations. It should fix #2128. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2134
https://github.com/sofa-framework/sofa/pull/2134:515,Security,Certificate,Certificate,515,"In #2076, a `vector` was replaced in favour of a `map`. It has a consequence on the order of traversal, therefore on the contact response creation. With a `map`, the order is based on the contact pointer address, which can be random. The vector is ordered by insertion.; This PR restores the `vector` for reproducible simulations. It should fix #2128. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2134
https://github.com/sofa-framework/sofa/pull/2134:626,Security,certificate,certificate-of-origin-dco,626,"In #2076, a `vector` was replaced in favour of a `map`. It has a consequence on the order of traversal, therefore on the contact response creation. With a `map`, the order is based on the contact pointer address, which can be random. The vector is ordered by insertion.; This PR restores the `vector` for reproducible simulations. It should fix #2128. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2134
https://github.com/sofa-framework/sofa/pull/2134:891,Testability,test,test,891,"In #2076, a `vector` was replaced in favour of a `map`. It has a consequence on the order of traversal, therefore on the contact response creation. With a `map`, the order is based on the contact pointer address, which can be random. The vector is ordered by insertion.; This PR restores the `vector` for reproducible simulations. It should fix #2128. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2134
https://github.com/sofa-framework/sofa/pull/2134:940,Testability,test,test,940,"In #2076, a `vector` was replaced in favour of a `map`. It has a consequence on the order of traversal, therefore on the contact response creation. With a `map`, the order is based on the contact pointer address, which can be random. The vector is ordered by insertion.; This PR restores the `vector` for reproducible simulations. It should fix #2128. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2134
https://github.com/sofa-framework/sofa/pull/2135:1711,Availability,failure,failures,1711,"If multiple objects have their own ODE solver, they can be solved concurrently in the `FreeMotionAnimationLoop`. # Results. Scene: applications/plugins/MultiThreading/examples/5DeformableCubesConstraints.scn; Nb time steps: 1000. ```; Parallel ODE solving + parallel collision detection:; 22.9566 s ( 43.5605 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.37 1 0.38 7.85 2.88 0.92 2.88 12.69 ...FreeMotion; 3 3.42 1 0.72 6.29 2.32 0.66 2.32 10.22 ...CollisionDetection; . Sequential ODE solving + parallel collision detection:; 26.762 s ( 37.3664 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.35 1 1.23 10.94 7.05 1.98 7.05 26.62 ...FreeMotion; 3 7.57 1 0.74 7.04 2.33 0.64 2.33 8.81 ...CollisionDetection; . Sequential ODE solving + sequential collision detection:; 30.2183 s ( 33.0926 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.36 1 0.73 13.35 7.13 2 7.14 23.79 ...FreeMotion; 3 7.66 1 1.69 8.49 5.32 1.42 5.32 17.72 ...CollisionDetection; ```. The bottleneck is the constraint solving:; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 2 5.89 1 0.38 75.75 15.49 11.98 15.49 68.37 ..ConstraintSolver; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2135
https://github.com/sofa-framework/sofa/pull/2135:1760,Availability,failure,failures,1760,"If multiple objects have their own ODE solver, they can be solved concurrently in the `FreeMotionAnimationLoop`. # Results. Scene: applications/plugins/MultiThreading/examples/5DeformableCubesConstraints.scn; Nb time steps: 1000. ```; Parallel ODE solving + parallel collision detection:; 22.9566 s ( 43.5605 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.37 1 0.38 7.85 2.88 0.92 2.88 12.69 ...FreeMotion; 3 3.42 1 0.72 6.29 2.32 0.66 2.32 10.22 ...CollisionDetection; . Sequential ODE solving + parallel collision detection:; 26.762 s ( 37.3664 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.35 1 1.23 10.94 7.05 1.98 7.05 26.62 ...FreeMotion; 3 7.57 1 0.74 7.04 2.33 0.64 2.33 8.81 ...CollisionDetection; . Sequential ODE solving + sequential collision detection:; 30.2183 s ( 33.0926 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.36 1 0.73 13.35 7.13 2 7.14 23.79 ...FreeMotion; 3 7.66 1 1.69 8.49 5.32 1.42 5.32 17.72 ...CollisionDetection; ```. The bottleneck is the constraint solving:; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 2 5.89 1 0.38 75.75 15.49 11.98 15.49 68.37 ..ConstraintSolver; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2135
https://github.com/sofa-framework/sofa/pull/2135:144,Modifiability,plugin,plugins,144,"If multiple objects have their own ODE solver, they can be solved concurrently in the `FreeMotionAnimationLoop`. # Results. Scene: applications/plugins/MultiThreading/examples/5DeformableCubesConstraints.scn; Nb time steps: 1000. ```; Parallel ODE solving + parallel collision detection:; 22.9566 s ( 43.5605 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.37 1 0.38 7.85 2.88 0.92 2.88 12.69 ...FreeMotion; 3 3.42 1 0.72 6.29 2.32 0.66 2.32 10.22 ...CollisionDetection; . Sequential ODE solving + parallel collision detection:; 26.762 s ( 37.3664 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.35 1 1.23 10.94 7.05 1.98 7.05 26.62 ...FreeMotion; 3 7.57 1 0.74 7.04 2.33 0.64 2.33 8.81 ...CollisionDetection; . Sequential ODE solving + sequential collision detection:; 30.2183 s ( 33.0926 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.36 1 0.73 13.35 7.13 2 7.14 23.79 ...FreeMotion; 3 7.66 1 1.69 8.49 5.32 1.42 5.32 17.72 ...CollisionDetection; ```. The bottleneck is the constraint solving:; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 2 5.89 1 0.38 75.75 15.49 11.98 15.49 68.37 ..ConstraintSolver; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2135
https://github.com/sofa-framework/sofa/pull/2135:66,Performance,concurren,concurrently,66,"If multiple objects have their own ODE solver, they can be solved concurrently in the `FreeMotionAnimationLoop`. # Results. Scene: applications/plugins/MultiThreading/examples/5DeformableCubesConstraints.scn; Nb time steps: 1000. ```; Parallel ODE solving + parallel collision detection:; 22.9566 s ( 43.5605 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.37 1 0.38 7.85 2.88 0.92 2.88 12.69 ...FreeMotion; 3 3.42 1 0.72 6.29 2.32 0.66 2.32 10.22 ...CollisionDetection; . Sequential ODE solving + parallel collision detection:; 26.762 s ( 37.3664 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.35 1 1.23 10.94 7.05 1.98 7.05 26.62 ...FreeMotion; 3 7.57 1 0.74 7.04 2.33 0.64 2.33 8.81 ...CollisionDetection; . Sequential ODE solving + sequential collision detection:; 30.2183 s ( 33.0926 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.36 1 0.73 13.35 7.13 2 7.14 23.79 ...FreeMotion; 3 7.66 1 1.69 8.49 5.32 1.42 5.32 17.72 ...CollisionDetection; ```. The bottleneck is the constraint solving:; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 2 5.89 1 0.38 75.75 15.49 11.98 15.49 68.37 ..ConstraintSolver; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2135
https://github.com/sofa-framework/sofa/pull/2135:1003,Performance,bottleneck,bottleneck,1003,"If multiple objects have their own ODE solver, they can be solved concurrently in the `FreeMotionAnimationLoop`. # Results. Scene: applications/plugins/MultiThreading/examples/5DeformableCubesConstraints.scn; Nb time steps: 1000. ```; Parallel ODE solving + parallel collision detection:; 22.9566 s ( 43.5605 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.37 1 0.38 7.85 2.88 0.92 2.88 12.69 ...FreeMotion; 3 3.42 1 0.72 6.29 2.32 0.66 2.32 10.22 ...CollisionDetection; . Sequential ODE solving + parallel collision detection:; 26.762 s ( 37.3664 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.35 1 1.23 10.94 7.05 1.98 7.05 26.62 ...FreeMotion; 3 7.57 1 0.74 7.04 2.33 0.64 2.33 8.81 ...CollisionDetection; . Sequential ODE solving + sequential collision detection:; 30.2183 s ( 33.0926 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.36 1 0.73 13.35 7.13 2 7.14 23.79 ...FreeMotion; 3 7.66 1 1.69 8.49 5.32 1.42 5.32 17.72 ...CollisionDetection; ```. The bottleneck is the constraint solving:; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 2 5.89 1 0.38 75.75 15.49 11.98 15.49 68.37 ..ConstraintSolver; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2135
https://github.com/sofa-framework/sofa/pull/2135:277,Safety,detect,detection,277,"If multiple objects have their own ODE solver, they can be solved concurrently in the `FreeMotionAnimationLoop`. # Results. Scene: applications/plugins/MultiThreading/examples/5DeformableCubesConstraints.scn; Nb time steps: 1000. ```; Parallel ODE solving + parallel collision detection:; 22.9566 s ( 43.5605 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.37 1 0.38 7.85 2.88 0.92 2.88 12.69 ...FreeMotion; 3 3.42 1 0.72 6.29 2.32 0.66 2.32 10.22 ...CollisionDetection; . Sequential ODE solving + parallel collision detection:; 26.762 s ( 37.3664 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.35 1 1.23 10.94 7.05 1.98 7.05 26.62 ...FreeMotion; 3 7.57 1 0.74 7.04 2.33 0.64 2.33 8.81 ...CollisionDetection; . Sequential ODE solving + sequential collision detection:; 30.2183 s ( 33.0926 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.36 1 0.73 13.35 7.13 2 7.14 23.79 ...FreeMotion; 3 7.66 1 1.69 8.49 5.32 1.42 5.32 17.72 ...CollisionDetection; ```. The bottleneck is the constraint solving:; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 2 5.89 1 0.38 75.75 15.49 11.98 15.49 68.37 ..ConstraintSolver; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2135
https://github.com/sofa-framework/sofa/pull/2135:532,Safety,detect,detection,532,"If multiple objects have their own ODE solver, they can be solved concurrently in the `FreeMotionAnimationLoop`. # Results. Scene: applications/plugins/MultiThreading/examples/5DeformableCubesConstraints.scn; Nb time steps: 1000. ```; Parallel ODE solving + parallel collision detection:; 22.9566 s ( 43.5605 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.37 1 0.38 7.85 2.88 0.92 2.88 12.69 ...FreeMotion; 3 3.42 1 0.72 6.29 2.32 0.66 2.32 10.22 ...CollisionDetection; . Sequential ODE solving + parallel collision detection:; 26.762 s ( 37.3664 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.35 1 1.23 10.94 7.05 1.98 7.05 26.62 ...FreeMotion; 3 7.57 1 0.74 7.04 2.33 0.64 2.33 8.81 ...CollisionDetection; . Sequential ODE solving + sequential collision detection:; 30.2183 s ( 33.0926 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.36 1 0.73 13.35 7.13 2 7.14 23.79 ...FreeMotion; 3 7.66 1 1.69 8.49 5.32 1.42 5.32 17.72 ...CollisionDetection; ```. The bottleneck is the constraint solving:; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 2 5.89 1 0.38 75.75 15.49 11.98 15.49 68.37 ..ConstraintSolver; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2135
https://github.com/sofa-framework/sofa/pull/2135:787,Safety,detect,detection,787,"If multiple objects have their own ODE solver, they can be solved concurrently in the `FreeMotionAnimationLoop`. # Results. Scene: applications/plugins/MultiThreading/examples/5DeformableCubesConstraints.scn; Nb time steps: 1000. ```; Parallel ODE solving + parallel collision detection:; 22.9566 s ( 43.5605 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.37 1 0.38 7.85 2.88 0.92 2.88 12.69 ...FreeMotion; 3 3.42 1 0.72 6.29 2.32 0.66 2.32 10.22 ...CollisionDetection; . Sequential ODE solving + parallel collision detection:; 26.762 s ( 37.3664 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.35 1 1.23 10.94 7.05 1.98 7.05 26.62 ...FreeMotion; 3 7.57 1 0.74 7.04 2.33 0.64 2.33 8.81 ...CollisionDetection; . Sequential ODE solving + sequential collision detection:; 30.2183 s ( 33.0926 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.36 1 0.73 13.35 7.13 2 7.14 23.79 ...FreeMotion; 3 7.66 1 1.69 8.49 5.32 1.42 5.32 17.72 ...CollisionDetection; ```. The bottleneck is the constraint solving:; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 2 5.89 1 0.38 75.75 15.49 11.98 15.49 68.37 ..ConstraintSolver; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2135
https://github.com/sofa-framework/sofa/pull/2135:1330,Security,Certificate,Certificate,1330,"If multiple objects have their own ODE solver, they can be solved concurrently in the `FreeMotionAnimationLoop`. # Results. Scene: applications/plugins/MultiThreading/examples/5DeformableCubesConstraints.scn; Nb time steps: 1000. ```; Parallel ODE solving + parallel collision detection:; 22.9566 s ( 43.5605 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.37 1 0.38 7.85 2.88 0.92 2.88 12.69 ...FreeMotion; 3 3.42 1 0.72 6.29 2.32 0.66 2.32 10.22 ...CollisionDetection; . Sequential ODE solving + parallel collision detection:; 26.762 s ( 37.3664 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.35 1 1.23 10.94 7.05 1.98 7.05 26.62 ...FreeMotion; 3 7.57 1 0.74 7.04 2.33 0.64 2.33 8.81 ...CollisionDetection; . Sequential ODE solving + sequential collision detection:; 30.2183 s ( 33.0926 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.36 1 0.73 13.35 7.13 2 7.14 23.79 ...FreeMotion; 3 7.66 1 1.69 8.49 5.32 1.42 5.32 17.72 ...CollisionDetection; ```. The bottleneck is the constraint solving:; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 2 5.89 1 0.38 75.75 15.49 11.98 15.49 68.37 ..ConstraintSolver; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2135
https://github.com/sofa-framework/sofa/pull/2135:1441,Security,certificate,certificate-of-origin-dco,1441,"If multiple objects have their own ODE solver, they can be solved concurrently in the `FreeMotionAnimationLoop`. # Results. Scene: applications/plugins/MultiThreading/examples/5DeformableCubesConstraints.scn; Nb time steps: 1000. ```; Parallel ODE solving + parallel collision detection:; 22.9566 s ( 43.5605 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.37 1 0.38 7.85 2.88 0.92 2.88 12.69 ...FreeMotion; 3 3.42 1 0.72 6.29 2.32 0.66 2.32 10.22 ...CollisionDetection; . Sequential ODE solving + parallel collision detection:; 26.762 s ( 37.3664 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.35 1 1.23 10.94 7.05 1.98 7.05 26.62 ...FreeMotion; 3 7.57 1 0.74 7.04 2.33 0.64 2.33 8.81 ...CollisionDetection; . Sequential ODE solving + sequential collision detection:; 30.2183 s ( 33.0926 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.36 1 0.73 13.35 7.13 2 7.14 23.79 ...FreeMotion; 3 7.66 1 1.69 8.49 5.32 1.42 5.32 17.72 ...CollisionDetection; ```. The bottleneck is the constraint solving:; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 2 5.89 1 0.38 75.75 15.49 11.98 15.49 68.37 ..ConstraintSolver; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2135
https://github.com/sofa-framework/sofa/pull/2135:1706,Testability,test,test,1706,"If multiple objects have their own ODE solver, they can be solved concurrently in the `FreeMotionAnimationLoop`. # Results. Scene: applications/plugins/MultiThreading/examples/5DeformableCubesConstraints.scn; Nb time steps: 1000. ```; Parallel ODE solving + parallel collision detection:; 22.9566 s ( 43.5605 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.37 1 0.38 7.85 2.88 0.92 2.88 12.69 ...FreeMotion; 3 3.42 1 0.72 6.29 2.32 0.66 2.32 10.22 ...CollisionDetection; . Sequential ODE solving + parallel collision detection:; 26.762 s ( 37.3664 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.35 1 1.23 10.94 7.05 1.98 7.05 26.62 ...FreeMotion; 3 7.57 1 0.74 7.04 2.33 0.64 2.33 8.81 ...CollisionDetection; . Sequential ODE solving + sequential collision detection:; 30.2183 s ( 33.0926 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.36 1 0.73 13.35 7.13 2 7.14 23.79 ...FreeMotion; 3 7.66 1 1.69 8.49 5.32 1.42 5.32 17.72 ...CollisionDetection; ```. The bottleneck is the constraint solving:; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 2 5.89 1 0.38 75.75 15.49 11.98 15.49 68.37 ..ConstraintSolver; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2135
https://github.com/sofa-framework/sofa/pull/2135:1755,Testability,test,test,1755,"If multiple objects have their own ODE solver, they can be solved concurrently in the `FreeMotionAnimationLoop`. # Results. Scene: applications/plugins/MultiThreading/examples/5DeformableCubesConstraints.scn; Nb time steps: 1000. ```; Parallel ODE solving + parallel collision detection:; 22.9566 s ( 43.5605 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.37 1 0.38 7.85 2.88 0.92 2.88 12.69 ...FreeMotion; 3 3.42 1 0.72 6.29 2.32 0.66 2.32 10.22 ...CollisionDetection; . Sequential ODE solving + parallel collision detection:; 26.762 s ( 37.3664 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.35 1 1.23 10.94 7.05 1.98 7.05 26.62 ...FreeMotion; 3 7.57 1 0.74 7.04 2.33 0.64 2.33 8.81 ...CollisionDetection; . Sequential ODE solving + sequential collision detection:; 30.2183 s ( 33.0926 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.36 1 0.73 13.35 7.13 2 7.14 23.79 ...FreeMotion; 3 7.66 1 1.69 8.49 5.32 1.42 5.32 17.72 ...CollisionDetection; ```. The bottleneck is the constraint solving:; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 2 5.89 1 0.38 75.75 15.49 11.98 15.49 68.37 ..ConstraintSolver; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2135
https://github.com/sofa-framework/sofa/pull/2136:617,Availability,failure,failures,617,"unit Test for FixConstraint class to test topologicalChanges. Fix #1589. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2136
https://github.com/sofa-framework/sofa/pull/2136:666,Availability,failure,failures,666,"unit Test for FixConstraint class to test topologicalChanges. Fix #1589. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2136
https://github.com/sofa-framework/sofa/pull/2136:236,Security,Certificate,Certificate,236,"unit Test for FixConstraint class to test topologicalChanges. Fix #1589. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2136
https://github.com/sofa-framework/sofa/pull/2136:347,Security,certificate,certificate-of-origin-dco,347,"unit Test for FixConstraint class to test topologicalChanges. Fix #1589. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2136
https://github.com/sofa-framework/sofa/pull/2136:5,Testability,Test,Test,5,"unit Test for FixConstraint class to test topologicalChanges. Fix #1589. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2136
https://github.com/sofa-framework/sofa/pull/2136:37,Testability,test,test,37,"unit Test for FixConstraint class to test topologicalChanges. Fix #1589. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2136
https://github.com/sofa-framework/sofa/pull/2136:612,Testability,test,test,612,"unit Test for FixConstraint class to test topologicalChanges. Fix #1589. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2136
https://github.com/sofa-framework/sofa/pull/2136:661,Testability,test,test,661,"unit Test for FixConstraint class to test topologicalChanges. Fix #1589. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2136
https://github.com/sofa-framework/sofa/pull/2137:972,Availability,failure,failures,972,"eq/peq() functions defined in IdentityMapping should be moved elsewhere; no need to know IdentityMapping to use them. These functions are now located in a file core/MappingHelper.h alongside Mapping.h, as these functions would likely be used only by mappings. Some points to discuss:; - header filename ?; - eq/peq functions name themselves are not very informative... should it be assign() and add() for example ?. Fix #2122 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2137
https://github.com/sofa-framework/sofa/pull/2137:1021,Availability,failure,failures,1021,"eq/peq() functions defined in IdentityMapping should be moved elsewhere; no need to know IdentityMapping to use them. These functions are now located in a file core/MappingHelper.h alongside Mapping.h, as these functions would likely be used only by mappings. Some points to discuss:; - header filename ?; - eq/peq functions name themselves are not very informative... should it be assign() and add() for example ?. Fix #2122 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2137
https://github.com/sofa-framework/sofa/pull/2137:591,Security,Certificate,Certificate,591,"eq/peq() functions defined in IdentityMapping should be moved elsewhere; no need to know IdentityMapping to use them. These functions are now located in a file core/MappingHelper.h alongside Mapping.h, as these functions would likely be used only by mappings. Some points to discuss:; - header filename ?; - eq/peq functions name themselves are not very informative... should it be assign() and add() for example ?. Fix #2122 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2137
https://github.com/sofa-framework/sofa/pull/2137:702,Security,certificate,certificate-of-origin-dco,702,"eq/peq() functions defined in IdentityMapping should be moved elsewhere; no need to know IdentityMapping to use them. These functions are now located in a file core/MappingHelper.h alongside Mapping.h, as these functions would likely be used only by mappings. Some points to discuss:; - header filename ?; - eq/peq functions name themselves are not very informative... should it be assign() and add() for example ?. Fix #2122 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2137
https://github.com/sofa-framework/sofa/pull/2137:967,Testability,test,test,967,"eq/peq() functions defined in IdentityMapping should be moved elsewhere; no need to know IdentityMapping to use them. These functions are now located in a file core/MappingHelper.h alongside Mapping.h, as these functions would likely be used only by mappings. Some points to discuss:; - header filename ?; - eq/peq functions name themselves are not very informative... should it be assign() and add() for example ?. Fix #2122 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2137
https://github.com/sofa-framework/sofa/pull/2137:1016,Testability,test,test,1016,"eq/peq() functions defined in IdentityMapping should be moved elsewhere; no need to know IdentityMapping to use them. These functions are now located in a file core/MappingHelper.h alongside Mapping.h, as these functions would likely be used only by mappings. Some points to discuss:; - header filename ?; - eq/peq functions name themselves are not very informative... should it be assign() and add() for example ?. Fix #2122 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2137
https://github.com/sofa-framework/sofa/pull/2138:646,Availability,failure,failures,646,"- Simplify instructions in ConstraintSolver; - Fix scene sofa_1000PR.scn (and make it multithreaded). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2138
https://github.com/sofa-framework/sofa/pull/2138:695,Availability,failure,failures,695,"- Simplify instructions in ConstraintSolver; - Fix scene sofa_1000PR.scn (and make it multithreaded). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2138
https://github.com/sofa-framework/sofa/pull/2138:265,Security,Certificate,Certificate,265,"- Simplify instructions in ConstraintSolver; - Fix scene sofa_1000PR.scn (and make it multithreaded). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2138
https://github.com/sofa-framework/sofa/pull/2138:376,Security,certificate,certificate-of-origin-dco,376,"- Simplify instructions in ConstraintSolver; - Fix scene sofa_1000PR.scn (and make it multithreaded). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2138
https://github.com/sofa-framework/sofa/pull/2138:641,Testability,test,test,641,"- Simplify instructions in ConstraintSolver; - Fix scene sofa_1000PR.scn (and make it multithreaded). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2138
https://github.com/sofa-framework/sofa/pull/2138:690,Testability,test,test,690,"- Simplify instructions in ConstraintSolver; - Fix scene sofa_1000PR.scn (and make it multithreaded). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2138
https://github.com/sofa-framework/sofa/pull/2138:2,Usability,Simpl,Simplify,2,"- Simplify instructions in ConstraintSolver; - Fix scene sofa_1000PR.scn (and make it multithreaded). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2138
https://github.com/sofa-framework/sofa/pull/2139:606,Availability,failure,failures,606,"Add tooltips to describe columns in the `SofaWindowProfiler`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2139
https://github.com/sofa-framework/sofa/pull/2139:655,Availability,failure,failures,655,"Add tooltips to describe columns in the `SofaWindowProfiler`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2139
https://github.com/sofa-framework/sofa/pull/2139:225,Security,Certificate,Certificate,225,"Add tooltips to describe columns in the `SofaWindowProfiler`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2139
https://github.com/sofa-framework/sofa/pull/2139:336,Security,certificate,certificate-of-origin-dco,336,"Add tooltips to describe columns in the `SofaWindowProfiler`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2139
https://github.com/sofa-framework/sofa/pull/2139:601,Testability,test,test,601,"Add tooltips to describe columns in the `SofaWindowProfiler`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2139
https://github.com/sofa-framework/sofa/pull/2139:650,Testability,test,test,650,"Add tooltips to describe columns in the `SofaWindowProfiler`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2139
https://github.com/sofa-framework/sofa/pull/2140:571,Availability,failure,failures,571,"Set of fixes for warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2140
https://github.com/sofa-framework/sofa/pull/2140:620,Availability,failure,failures,620,"Set of fixes for warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2140
https://github.com/sofa-framework/sofa/pull/2140:190,Security,Certificate,Certificate,190,"Set of fixes for warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2140
https://github.com/sofa-framework/sofa/pull/2140:301,Security,certificate,certificate-of-origin-dco,301,"Set of fixes for warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2140
https://github.com/sofa-framework/sofa/pull/2140:566,Testability,test,test,566,"Set of fixes for warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2140
https://github.com/sofa-framework/sofa/pull/2140:615,Testability,test,test,615,"Set of fixes for warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2140
https://github.com/sofa-framework/sofa/pull/2141:759,Availability,failure,failures,759,"It is possible to select multiple timers to be displayed in the chart through checkboxes. ![multipleSelection](https://user-images.githubusercontent.com/10572752/120432765-a9f89880-c37a-11eb-8605-2886ec7dd893.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2141
https://github.com/sofa-framework/sofa/pull/2141:808,Availability,failure,failures,808,"It is possible to select multiple timers to be displayed in the chart through checkboxes. ![multipleSelection](https://user-images.githubusercontent.com/10572752/120432765-a9f89880-c37a-11eb-8605-2886ec7dd893.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2141
https://github.com/sofa-framework/sofa/pull/2141:378,Security,Certificate,Certificate,378,"It is possible to select multiple timers to be displayed in the chart through checkboxes. ![multipleSelection](https://user-images.githubusercontent.com/10572752/120432765-a9f89880-c37a-11eb-8605-2886ec7dd893.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2141
https://github.com/sofa-framework/sofa/pull/2141:489,Security,certificate,certificate-of-origin-dco,489,"It is possible to select multiple timers to be displayed in the chart through checkboxes. ![multipleSelection](https://user-images.githubusercontent.com/10572752/120432765-a9f89880-c37a-11eb-8605-2886ec7dd893.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2141
https://github.com/sofa-framework/sofa/pull/2141:754,Testability,test,test,754,"It is possible to select multiple timers to be displayed in the chart through checkboxes. ![multipleSelection](https://user-images.githubusercontent.com/10572752/120432765-a9f89880-c37a-11eb-8605-2886ec7dd893.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2141
https://github.com/sofa-framework/sofa/pull/2141:803,Testability,test,test,803,"It is possible to select multiple timers to be displayed in the chart through checkboxes. ![multipleSelection](https://user-images.githubusercontent.com/10572752/120432765-a9f89880-c37a-11eb-8605-2886ec7dd893.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2141
https://github.com/sofa-framework/sofa/issues/2142:36,Availability,down,down,36,"The Qt application is highly slowed down when the profiler window is displayed. The reasons:. - The tree is updated at each frame from scratch: 1) clearing the tree is time consuming, 2) building the widget tree is time consuming and 3) converting all the data (double) to `QString` is time consuming. I am not sure it is necessary to update the tree at each frame. We would need to find another mechanism (for example only when the button `Animate` is unpressed).; - The chart is updated at each frame from scratch",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2142
https://github.com/sofa-framework/sofa/issues/2142:108,Deployability,update,updated,108,"The Qt application is highly slowed down when the profiler window is displayed. The reasons:. - The tree is updated at each frame from scratch: 1) clearing the tree is time consuming, 2) building the widget tree is time consuming and 3) converting all the data (double) to `QString` is time consuming. I am not sure it is necessary to update the tree at each frame. We would need to find another mechanism (for example only when the button `Animate` is unpressed).; - The chart is updated at each frame from scratch",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2142
https://github.com/sofa-framework/sofa/issues/2142:335,Deployability,update,update,335,"The Qt application is highly slowed down when the profiler window is displayed. The reasons:. - The tree is updated at each frame from scratch: 1) clearing the tree is time consuming, 2) building the widget tree is time consuming and 3) converting all the data (double) to `QString` is time consuming. I am not sure it is necessary to update the tree at each frame. We would need to find another mechanism (for example only when the button `Animate` is unpressed).; - The chart is updated at each frame from scratch",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2142
https://github.com/sofa-framework/sofa/issues/2142:481,Deployability,update,updated,481,"The Qt application is highly slowed down when the profiler window is displayed. The reasons:. - The tree is updated at each frame from scratch: 1) clearing the tree is time consuming, 2) building the widget tree is time consuming and 3) converting all the data (double) to `QString` is time consuming. I am not sure it is necessary to update the tree at each frame. We would need to find another mechanism (for example only when the button `Animate` is unpressed).; - The chart is updated at each frame from scratch",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2142
https://github.com/sofa-framework/sofa/issues/2142:147,Usability,clear,clearing,147,"The Qt application is highly slowed down when the profiler window is displayed. The reasons:. - The tree is updated at each frame from scratch: 1) clearing the tree is time consuming, 2) building the widget tree is time consuming and 3) converting all the data (double) to `QString` is time consuming. I am not sure it is necessary to update the tree at each frame. We would need to find another mechanism (for example only when the button `Animate` is unpressed).; - The chart is updated at each frame from scratch",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2142
https://github.com/sofa-framework/sofa/pull/2143:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2143
https://github.com/sofa-framework/sofa/pull/2143:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2143
https://github.com/sofa-framework/sofa/pull/2143:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2143
https://github.com/sofa-framework/sofa/pull/2143:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2143
https://github.com/sofa-framework/sofa/pull/2143:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2143
https://github.com/sofa-framework/sofa/pull/2143:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2143
https://github.com/sofa-framework/sofa/pull/2144:564,Availability,failure,failures,564,"…Sofa_Test. #1885 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2144
https://github.com/sofa-framework/sofa/pull/2144:613,Availability,failure,failures,613,"…Sofa_Test. #1885 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2144
https://github.com/sofa-framework/sofa/pull/2144:183,Security,Certificate,Certificate,183,"…Sofa_Test. #1885 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2144
https://github.com/sofa-framework/sofa/pull/2144:294,Security,certificate,certificate-of-origin-dco,294,"…Sofa_Test. #1885 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2144
https://github.com/sofa-framework/sofa/pull/2144:559,Testability,test,test,559,"…Sofa_Test. #1885 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2144
https://github.com/sofa-framework/sofa/pull/2144:608,Testability,test,test,608,"…Sofa_Test. #1885 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2144
https://github.com/sofa-framework/sofa/pull/2145:894,Availability,failure,failures,894,"As the continuation of the modularization of the collision components, `RayTraceDetection` can be split into two components: `BruteForceBroadPhase` and `RayTraceNarrowPhase`. The latest is introduced in this PR.; In a future PR, `RayTraceDetection` will be marked as deprecated (similarly to #2118). I did not change the code itself, just moving it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2145
https://github.com/sofa-framework/sofa/pull/2145:943,Availability,failure,failures,943,"As the continuation of the modularization of the collision components, `RayTraceDetection` can be split into two components: `BruteForceBroadPhase` and `RayTraceNarrowPhase`. The latest is introduced in this PR.; In a future PR, `RayTraceDetection` will be marked as deprecated (similarly to #2118). I did not change the code itself, just moving it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2145
https://github.com/sofa-framework/sofa/pull/2145:513,Security,Certificate,Certificate,513,"As the continuation of the modularization of the collision components, `RayTraceDetection` can be split into two components: `BruteForceBroadPhase` and `RayTraceNarrowPhase`. The latest is introduced in this PR.; In a future PR, `RayTraceDetection` will be marked as deprecated (similarly to #2118). I did not change the code itself, just moving it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2145
https://github.com/sofa-framework/sofa/pull/2145:624,Security,certificate,certificate-of-origin-dco,624,"As the continuation of the modularization of the collision components, `RayTraceDetection` can be split into two components: `BruteForceBroadPhase` and `RayTraceNarrowPhase`. The latest is introduced in this PR.; In a future PR, `RayTraceDetection` will be marked as deprecated (similarly to #2118). I did not change the code itself, just moving it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2145
https://github.com/sofa-framework/sofa/pull/2145:889,Testability,test,test,889,"As the continuation of the modularization of the collision components, `RayTraceDetection` can be split into two components: `BruteForceBroadPhase` and `RayTraceNarrowPhase`. The latest is introduced in this PR.; In a future PR, `RayTraceDetection` will be marked as deprecated (similarly to #2118). I did not change the code itself, just moving it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2145
https://github.com/sofa-framework/sofa/pull/2145:938,Testability,test,test,938,"As the continuation of the modularization of the collision components, `RayTraceDetection` can be split into two components: `BruteForceBroadPhase` and `RayTraceNarrowPhase`. The latest is introduced in this PR.; In a future PR, `RayTraceDetection` will be marked as deprecated (similarly to #2118). I did not change the code itself, just moving it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2145
https://github.com/sofa-framework/sofa/pull/2146:622,Availability,failure,failures,622,"#1885 . + some dispatch to SofaMeshCollision_test and SofaMiscCollision_test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2146
https://github.com/sofa-framework/sofa/pull/2146:671,Availability,failure,failures,671,"#1885 . + some dispatch to SofaMeshCollision_test and SofaMiscCollision_test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2146
https://github.com/sofa-framework/sofa/pull/2146:241,Security,Certificate,Certificate,241,"#1885 . + some dispatch to SofaMeshCollision_test and SofaMiscCollision_test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2146
https://github.com/sofa-framework/sofa/pull/2146:352,Security,certificate,certificate-of-origin-dco,352,"#1885 . + some dispatch to SofaMeshCollision_test and SofaMiscCollision_test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2146
https://github.com/sofa-framework/sofa/pull/2146:617,Testability,test,test,617,"#1885 . + some dispatch to SofaMeshCollision_test and SofaMiscCollision_test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2146
https://github.com/sofa-framework/sofa/pull/2146:666,Testability,test,test,666,"#1885 . + some dispatch to SofaMeshCollision_test and SofaMiscCollision_test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2146
https://github.com/sofa-framework/sofa/pull/2147:884,Availability,failure,failures,884,"- `ImageCImg_ReadBlackWhite` is split into 4 tests, each corresponding to an file extension. They were all tested inside the same test. It allows to debug a failing test more easily.; - Some memory leaks are fixed; - `ImageCImg_ReadBlackWhite_jpg` is fixed. The problem was due to a bad logic of conversion from `float` to `unsigned char`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2147
https://github.com/sofa-framework/sofa/pull/2147:933,Availability,failure,failures,933,"- `ImageCImg_ReadBlackWhite` is split into 4 tests, each corresponding to an file extension. They were all tested inside the same test. It allows to debug a failing test more easily.; - Some memory leaks are fixed; - `ImageCImg_ReadBlackWhite_jpg` is fixed. The problem was due to a bad logic of conversion from `float` to `unsigned char`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2147
https://github.com/sofa-framework/sofa/pull/2147:503,Security,Certificate,Certificate,503,"- `ImageCImg_ReadBlackWhite` is split into 4 tests, each corresponding to an file extension. They were all tested inside the same test. It allows to debug a failing test more easily.; - Some memory leaks are fixed; - `ImageCImg_ReadBlackWhite_jpg` is fixed. The problem was due to a bad logic of conversion from `float` to `unsigned char`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2147
https://github.com/sofa-framework/sofa/pull/2147:614,Security,certificate,certificate-of-origin-dco,614,"- `ImageCImg_ReadBlackWhite` is split into 4 tests, each corresponding to an file extension. They were all tested inside the same test. It allows to debug a failing test more easily.; - Some memory leaks are fixed; - `ImageCImg_ReadBlackWhite_jpg` is fixed. The problem was due to a bad logic of conversion from `float` to `unsigned char`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2147
https://github.com/sofa-framework/sofa/pull/2147:45,Testability,test,tests,45,"- `ImageCImg_ReadBlackWhite` is split into 4 tests, each corresponding to an file extension. They were all tested inside the same test. It allows to debug a failing test more easily.; - Some memory leaks are fixed; - `ImageCImg_ReadBlackWhite_jpg` is fixed. The problem was due to a bad logic of conversion from `float` to `unsigned char`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2147
https://github.com/sofa-framework/sofa/pull/2147:107,Testability,test,tested,107,"- `ImageCImg_ReadBlackWhite` is split into 4 tests, each corresponding to an file extension. They were all tested inside the same test. It allows to debug a failing test more easily.; - Some memory leaks are fixed; - `ImageCImg_ReadBlackWhite_jpg` is fixed. The problem was due to a bad logic of conversion from `float` to `unsigned char`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2147
https://github.com/sofa-framework/sofa/pull/2147:130,Testability,test,test,130,"- `ImageCImg_ReadBlackWhite` is split into 4 tests, each corresponding to an file extension. They were all tested inside the same test. It allows to debug a failing test more easily.; - Some memory leaks are fixed; - `ImageCImg_ReadBlackWhite_jpg` is fixed. The problem was due to a bad logic of conversion from `float` to `unsigned char`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2147
https://github.com/sofa-framework/sofa/pull/2147:165,Testability,test,test,165,"- `ImageCImg_ReadBlackWhite` is split into 4 tests, each corresponding to an file extension. They were all tested inside the same test. It allows to debug a failing test more easily.; - Some memory leaks are fixed; - `ImageCImg_ReadBlackWhite_jpg` is fixed. The problem was due to a bad logic of conversion from `float` to `unsigned char`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2147
https://github.com/sofa-framework/sofa/pull/2147:287,Testability,log,logic,287,"- `ImageCImg_ReadBlackWhite` is split into 4 tests, each corresponding to an file extension. They were all tested inside the same test. It allows to debug a failing test more easily.; - Some memory leaks are fixed; - `ImageCImg_ReadBlackWhite_jpg` is fixed. The problem was due to a bad logic of conversion from `float` to `unsigned char`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2147
https://github.com/sofa-framework/sofa/pull/2147:879,Testability,test,test,879,"- `ImageCImg_ReadBlackWhite` is split into 4 tests, each corresponding to an file extension. They were all tested inside the same test. It allows to debug a failing test more easily.; - Some memory leaks are fixed; - `ImageCImg_ReadBlackWhite_jpg` is fixed. The problem was due to a bad logic of conversion from `float` to `unsigned char`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2147
https://github.com/sofa-framework/sofa/pull/2147:928,Testability,test,test,928,"- `ImageCImg_ReadBlackWhite` is split into 4 tests, each corresponding to an file extension. They were all tested inside the same test. It allows to debug a failing test more easily.; - Some memory leaks are fixed; - `ImageCImg_ReadBlackWhite_jpg` is fixed. The problem was due to a bad logic of conversion from `float` to `unsigned char`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2147
https://github.com/sofa-framework/sofa/pull/2148:78,Availability,avail,available,78,"Simply add an example scene for the THMPGSpatialHashing plugin. No scene were available. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2148
https://github.com/sofa-framework/sofa/pull/2148:633,Availability,failure,failures,633,"Simply add an example scene for the THMPGSpatialHashing plugin. No scene were available. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2148
https://github.com/sofa-framework/sofa/pull/2148:682,Availability,failure,failures,682,"Simply add an example scene for the THMPGSpatialHashing plugin. No scene were available. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2148
https://github.com/sofa-framework/sofa/pull/2148:56,Modifiability,plugin,plugin,56,"Simply add an example scene for the THMPGSpatialHashing plugin. No scene were available. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2148
https://github.com/sofa-framework/sofa/pull/2148:252,Security,Certificate,Certificate,252,"Simply add an example scene for the THMPGSpatialHashing plugin. No scene were available. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2148
https://github.com/sofa-framework/sofa/pull/2148:363,Security,certificate,certificate-of-origin-dco,363,"Simply add an example scene for the THMPGSpatialHashing plugin. No scene were available. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2148
https://github.com/sofa-framework/sofa/pull/2148:628,Testability,test,test,628,"Simply add an example scene for the THMPGSpatialHashing plugin. No scene were available. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2148
https://github.com/sofa-framework/sofa/pull/2148:677,Testability,test,test,677,"Simply add an example scene for the THMPGSpatialHashing plugin. No scene were available. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2148
https://github.com/sofa-framework/sofa/pull/2148:0,Usability,Simpl,Simply,0,"Simply add an example scene for the THMPGSpatialHashing plugin. No scene were available. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2148
https://github.com/sofa-framework/sofa/issues/2149:57,Integrability,depend,depending,57,`CentralDifferenceSolver::solve` has two ways of solving depending on the definition of `SOFA_NO_VMULTIOP`.; The benchmark could be used to decide if one of the way could be removed.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2149
https://github.com/sofa-framework/sofa/issues/2149:113,Testability,benchmark,benchmark,113,`CentralDifferenceSolver::solve` has two ways of solving depending on the definition of `SOFA_NO_VMULTIOP`.; The benchmark could be used to decide if one of the way could be removed.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2149
https://github.com/sofa-framework/sofa/pull/2151:557,Availability,failure,failures,557,"Fixes #2133. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2151
https://github.com/sofa-framework/sofa/pull/2151:606,Availability,failure,failures,606,"Fixes #2133. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2151
https://github.com/sofa-framework/sofa/pull/2151:176,Security,Certificate,Certificate,176,"Fixes #2133. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2151
https://github.com/sofa-framework/sofa/pull/2151:287,Security,certificate,certificate-of-origin-dco,287,"Fixes #2133. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2151
https://github.com/sofa-framework/sofa/pull/2151:552,Testability,test,test,552,"Fixes #2133. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2151
https://github.com/sofa-framework/sofa/pull/2151:601,Testability,test,test,601,"Fixes #2133. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2151
https://github.com/sofa-framework/sofa/pull/2152:605,Availability,failure,failures,605,"Also display them only if component printLog is set to true. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2152
https://github.com/sofa-framework/sofa/pull/2152:654,Availability,failure,failures,654,"Also display them only if component printLog is set to true. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2152
https://github.com/sofa-framework/sofa/pull/2152:224,Security,Certificate,Certificate,224,"Also display them only if component printLog is set to true. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2152
https://github.com/sofa-framework/sofa/pull/2152:335,Security,certificate,certificate-of-origin-dco,335,"Also display them only if component printLog is set to true. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2152
https://github.com/sofa-framework/sofa/pull/2152:600,Testability,test,test,600,"Also display them only if component printLog is set to true. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2152
https://github.com/sofa-framework/sofa/pull/2152:649,Testability,test,test,649,"Also display them only if component printLog is set to true. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2152
https://github.com/sofa-framework/sofa/pull/2153:551,Availability,failure,failures,551,"#1885. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2153
https://github.com/sofa-framework/sofa/pull/2153:600,Availability,failure,failures,600,"#1885. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2153
https://github.com/sofa-framework/sofa/pull/2153:170,Security,Certificate,Certificate,170,"#1885. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2153
https://github.com/sofa-framework/sofa/pull/2153:281,Security,certificate,certificate-of-origin-dco,281,"#1885. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2153
https://github.com/sofa-framework/sofa/pull/2153:546,Testability,test,test,546,"#1885. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2153
https://github.com/sofa-framework/sofa/pull/2153:595,Testability,test,test,595,"#1885. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2153
https://github.com/sofa-framework/sofa/pull/2154:586,Availability,failure,failures,586,"#1885 . Add some licences here and there. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2154
https://github.com/sofa-framework/sofa/pull/2154:635,Availability,failure,failures,635,"#1885 . Add some licences here and there. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2154
https://github.com/sofa-framework/sofa/pull/2154:205,Security,Certificate,Certificate,205,"#1885 . Add some licences here and there. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2154
https://github.com/sofa-framework/sofa/pull/2154:316,Security,certificate,certificate-of-origin-dco,316,"#1885 . Add some licences here and there. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2154
https://github.com/sofa-framework/sofa/pull/2154:581,Testability,test,test,581,"#1885 . Add some licences here and there. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2154
https://github.com/sofa-framework/sofa/pull/2154:630,Testability,test,test,630,"#1885 . Add some licences here and there. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2154
https://github.com/sofa-framework/sofa/pull/2155:1368,Availability,failure,failures,1368,"This is an attempt at fixing #1528. At the moment, file parsing in MeshGmsh.cpp and MeshGmshLoader.cpp is (hopefully) correctly handled, including more recent MSH file formats (=>4.0).; EDIT: I don't fully understand how the loader works, mainly why MeshGmshLoader::readGmsh() is temporarily not used (commented in l.111), with the parsing apparently relying only on MeshGmsh::readGmsh(). However I tried to keep the same structure as before, simply taking into account the case where the .msh version is > 2.; A .msh file with version 4.1 is added (share/mesh/msh4_cube.msh), and its parsing by the MeshGmshLoader is tested both in examples/Components/loader/MeshGmshLoader.scn and in a new unit test. Both tests are working locally. Regarding the original purpose of #1528, the PR should be sufficient. Fixes #2433 #1528; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2155
https://github.com/sofa-framework/sofa/pull/2155:1417,Availability,failure,failures,1417,"This is an attempt at fixing #1528. At the moment, file parsing in MeshGmsh.cpp and MeshGmshLoader.cpp is (hopefully) correctly handled, including more recent MSH file formats (=>4.0).; EDIT: I don't fully understand how the loader works, mainly why MeshGmshLoader::readGmsh() is temporarily not used (commented in l.111), with the parsing apparently relying only on MeshGmsh::readGmsh(). However I tried to keep the same structure as before, simply taking into account the case where the .msh version is > 2.; A .msh file with version 4.1 is added (share/mesh/msh4_cube.msh), and its parsing by the MeshGmshLoader is tested both in examples/Components/loader/MeshGmshLoader.scn and in a new unit test. Both tests are working locally. Regarding the original purpose of #1528, the PR should be sufficient. Fixes #2433 #1528; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2155
https://github.com/sofa-framework/sofa/pull/2155:225,Performance,load,loader,225,"This is an attempt at fixing #1528. At the moment, file parsing in MeshGmsh.cpp and MeshGmshLoader.cpp is (hopefully) correctly handled, including more recent MSH file formats (=>4.0).; EDIT: I don't fully understand how the loader works, mainly why MeshGmshLoader::readGmsh() is temporarily not used (commented in l.111), with the parsing apparently relying only on MeshGmsh::readGmsh(). However I tried to keep the same structure as before, simply taking into account the case where the .msh version is > 2.; A .msh file with version 4.1 is added (share/mesh/msh4_cube.msh), and its parsing by the MeshGmshLoader is tested both in examples/Components/loader/MeshGmshLoader.scn and in a new unit test. Both tests are working locally. Regarding the original purpose of #1528, the PR should be sufficient. Fixes #2433 #1528; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2155
https://github.com/sofa-framework/sofa/pull/2155:653,Performance,load,loader,653,"This is an attempt at fixing #1528. At the moment, file parsing in MeshGmsh.cpp and MeshGmshLoader.cpp is (hopefully) correctly handled, including more recent MSH file formats (=>4.0).; EDIT: I don't fully understand how the loader works, mainly why MeshGmshLoader::readGmsh() is temporarily not used (commented in l.111), with the parsing apparently relying only on MeshGmsh::readGmsh(). However I tried to keep the same structure as before, simply taking into account the case where the .msh version is > 2.; A .msh file with version 4.1 is added (share/mesh/msh4_cube.msh), and its parsing by the MeshGmshLoader is tested both in examples/Components/loader/MeshGmshLoader.scn and in a new unit test. Both tests are working locally. Regarding the original purpose of #1528, the PR should be sufficient. Fixes #2433 #1528; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2155
https://github.com/sofa-framework/sofa/pull/2155:987,Security,Certificate,Certificate,987,"This is an attempt at fixing #1528. At the moment, file parsing in MeshGmsh.cpp and MeshGmshLoader.cpp is (hopefully) correctly handled, including more recent MSH file formats (=>4.0).; EDIT: I don't fully understand how the loader works, mainly why MeshGmshLoader::readGmsh() is temporarily not used (commented in l.111), with the parsing apparently relying only on MeshGmsh::readGmsh(). However I tried to keep the same structure as before, simply taking into account the case where the .msh version is > 2.; A .msh file with version 4.1 is added (share/mesh/msh4_cube.msh), and its parsing by the MeshGmshLoader is tested both in examples/Components/loader/MeshGmshLoader.scn and in a new unit test. Both tests are working locally. Regarding the original purpose of #1528, the PR should be sufficient. Fixes #2433 #1528; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2155
https://github.com/sofa-framework/sofa/pull/2155:1098,Security,certificate,certificate-of-origin-dco,1098,"This is an attempt at fixing #1528. At the moment, file parsing in MeshGmsh.cpp and MeshGmshLoader.cpp is (hopefully) correctly handled, including more recent MSH file formats (=>4.0).; EDIT: I don't fully understand how the loader works, mainly why MeshGmshLoader::readGmsh() is temporarily not used (commented in l.111), with the parsing apparently relying only on MeshGmsh::readGmsh(). However I tried to keep the same structure as before, simply taking into account the case where the .msh version is > 2.; A .msh file with version 4.1 is added (share/mesh/msh4_cube.msh), and its parsing by the MeshGmshLoader is tested both in examples/Components/loader/MeshGmshLoader.scn and in a new unit test. Both tests are working locally. Regarding the original purpose of #1528, the PR should be sufficient. Fixes #2433 #1528; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2155
https://github.com/sofa-framework/sofa/pull/2155:618,Testability,test,tested,618,"This is an attempt at fixing #1528. At the moment, file parsing in MeshGmsh.cpp and MeshGmshLoader.cpp is (hopefully) correctly handled, including more recent MSH file formats (=>4.0).; EDIT: I don't fully understand how the loader works, mainly why MeshGmshLoader::readGmsh() is temporarily not used (commented in l.111), with the parsing apparently relying only on MeshGmsh::readGmsh(). However I tried to keep the same structure as before, simply taking into account the case where the .msh version is > 2.; A .msh file with version 4.1 is added (share/mesh/msh4_cube.msh), and its parsing by the MeshGmshLoader is tested both in examples/Components/loader/MeshGmshLoader.scn and in a new unit test. Both tests are working locally. Regarding the original purpose of #1528, the PR should be sufficient. Fixes #2433 #1528; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2155
https://github.com/sofa-framework/sofa/pull/2155:697,Testability,test,test,697,"This is an attempt at fixing #1528. At the moment, file parsing in MeshGmsh.cpp and MeshGmshLoader.cpp is (hopefully) correctly handled, including more recent MSH file formats (=>4.0).; EDIT: I don't fully understand how the loader works, mainly why MeshGmshLoader::readGmsh() is temporarily not used (commented in l.111), with the parsing apparently relying only on MeshGmsh::readGmsh(). However I tried to keep the same structure as before, simply taking into account the case where the .msh version is > 2.; A .msh file with version 4.1 is added (share/mesh/msh4_cube.msh), and its parsing by the MeshGmshLoader is tested both in examples/Components/loader/MeshGmshLoader.scn and in a new unit test. Both tests are working locally. Regarding the original purpose of #1528, the PR should be sufficient. Fixes #2433 #1528; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2155
https://github.com/sofa-framework/sofa/pull/2155:708,Testability,test,tests,708,"This is an attempt at fixing #1528. At the moment, file parsing in MeshGmsh.cpp and MeshGmshLoader.cpp is (hopefully) correctly handled, including more recent MSH file formats (=>4.0).; EDIT: I don't fully understand how the loader works, mainly why MeshGmshLoader::readGmsh() is temporarily not used (commented in l.111), with the parsing apparently relying only on MeshGmsh::readGmsh(). However I tried to keep the same structure as before, simply taking into account the case where the .msh version is > 2.; A .msh file with version 4.1 is added (share/mesh/msh4_cube.msh), and its parsing by the MeshGmshLoader is tested both in examples/Components/loader/MeshGmshLoader.scn and in a new unit test. Both tests are working locally. Regarding the original purpose of #1528, the PR should be sufficient. Fixes #2433 #1528; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2155
https://github.com/sofa-framework/sofa/pull/2155:1363,Testability,test,test,1363,"This is an attempt at fixing #1528. At the moment, file parsing in MeshGmsh.cpp and MeshGmshLoader.cpp is (hopefully) correctly handled, including more recent MSH file formats (=>4.0).; EDIT: I don't fully understand how the loader works, mainly why MeshGmshLoader::readGmsh() is temporarily not used (commented in l.111), with the parsing apparently relying only on MeshGmsh::readGmsh(). However I tried to keep the same structure as before, simply taking into account the case where the .msh version is > 2.; A .msh file with version 4.1 is added (share/mesh/msh4_cube.msh), and its parsing by the MeshGmshLoader is tested both in examples/Components/loader/MeshGmshLoader.scn and in a new unit test. Both tests are working locally. Regarding the original purpose of #1528, the PR should be sufficient. Fixes #2433 #1528; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2155
https://github.com/sofa-framework/sofa/pull/2155:1412,Testability,test,test,1412,"This is an attempt at fixing #1528. At the moment, file parsing in MeshGmsh.cpp and MeshGmshLoader.cpp is (hopefully) correctly handled, including more recent MSH file formats (=>4.0).; EDIT: I don't fully understand how the loader works, mainly why MeshGmshLoader::readGmsh() is temporarily not used (commented in l.111), with the parsing apparently relying only on MeshGmsh::readGmsh(). However I tried to keep the same structure as before, simply taking into account the case where the .msh version is > 2.; A .msh file with version 4.1 is added (share/mesh/msh4_cube.msh), and its parsing by the MeshGmshLoader is tested both in examples/Components/loader/MeshGmshLoader.scn and in a new unit test. Both tests are working locally. Regarding the original purpose of #1528, the PR should be sufficient. Fixes #2433 #1528; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2155
https://github.com/sofa-framework/sofa/pull/2155:443,Usability,simpl,simply,443,"This is an attempt at fixing #1528. At the moment, file parsing in MeshGmsh.cpp and MeshGmshLoader.cpp is (hopefully) correctly handled, including more recent MSH file formats (=>4.0).; EDIT: I don't fully understand how the loader works, mainly why MeshGmshLoader::readGmsh() is temporarily not used (commented in l.111), with the parsing apparently relying only on MeshGmsh::readGmsh(). However I tried to keep the same structure as before, simply taking into account the case where the .msh version is > 2.; A .msh file with version 4.1 is added (share/mesh/msh4_cube.msh), and its parsing by the MeshGmshLoader is tested both in examples/Components/loader/MeshGmshLoader.scn and in a new unit test. Both tests are working locally. Regarding the original purpose of #1528, the PR should be sufficient. Fixes #2433 #1528; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2155
https://github.com/sofa-framework/sofa/pull/2156:682,Availability,failure,failures,682,"Was crashing when activating the boolean option ""showVonMisesStressPerNode"" while the data ""computeVonMisesStress"" was not set to 1 or 2. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2156
https://github.com/sofa-framework/sofa/pull/2156:731,Availability,failure,failures,731,"Was crashing when activating the boolean option ""showVonMisesStressPerNode"" while the data ""computeVonMisesStress"" was not set to 1 or 2. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2156
https://github.com/sofa-framework/sofa/pull/2156:301,Security,Certificate,Certificate,301,"Was crashing when activating the boolean option ""showVonMisesStressPerNode"" while the data ""computeVonMisesStress"" was not set to 1 or 2. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2156
https://github.com/sofa-framework/sofa/pull/2156:412,Security,certificate,certificate-of-origin-dco,412,"Was crashing when activating the boolean option ""showVonMisesStressPerNode"" while the data ""computeVonMisesStress"" was not set to 1 or 2. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2156
https://github.com/sofa-framework/sofa/pull/2156:677,Testability,test,test,677,"Was crashing when activating the boolean option ""showVonMisesStressPerNode"" while the data ""computeVonMisesStress"" was not set to 1 or 2. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2156
https://github.com/sofa-framework/sofa/pull/2156:726,Testability,test,test,726,"Was crashing when activating the boolean option ""showVonMisesStressPerNode"" while the data ""computeVonMisesStress"" was not set to 1 or 2. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2156
https://github.com/sofa-framework/sofa/issues/2159:34,Usability,Simpl,SimpleGUI,34,applications/projects/SofaGuiGlut/SimpleGUI.cpp line 1124. Code:; case 'q': //GLUT_KEY_Escape:; {; exit(0);; break; // <- unreachable; },MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2159
https://github.com/sofa-framework/sofa/pull/2160:1061,Availability,failure,failures,1061,"Stumbled on this file while compiling on M1 Silicon (ARM). atomic.h was used to have atomic operations before the stl introduced it in c++11. 1- this utility class is not compatible with other instructions sets than i386/amd64(e.g arm); 2- the STL version is obviously much better; 3- nobody is using it in the sofa code base actually (except its own testing suite). This PR allows the compilation of SOFA on M1 (and other arm in general). I let a file in Sofa.Compat to warn the eventual user to use the STL atomic. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2160
https://github.com/sofa-framework/sofa/pull/2160:1110,Availability,failure,failures,1110,"Stumbled on this file while compiling on M1 Silicon (ARM). atomic.h was used to have atomic operations before the stl introduced it in c++11. 1- this utility class is not compatible with other instructions sets than i386/amd64(e.g arm); 2- the STL version is obviously much better; 3- nobody is using it in the sofa code base actually (except its own testing suite). This PR allows the compilation of SOFA on M1 (and other arm in general). I let a file in Sofa.Compat to warn the eventual user to use the STL atomic. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2160
https://github.com/sofa-framework/sofa/pull/2160:680,Security,Certificate,Certificate,680,"Stumbled on this file while compiling on M1 Silicon (ARM). atomic.h was used to have atomic operations before the stl introduced it in c++11. 1- this utility class is not compatible with other instructions sets than i386/amd64(e.g arm); 2- the STL version is obviously much better; 3- nobody is using it in the sofa code base actually (except its own testing suite). This PR allows the compilation of SOFA on M1 (and other arm in general). I let a file in Sofa.Compat to warn the eventual user to use the STL atomic. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2160
https://github.com/sofa-framework/sofa/pull/2160:791,Security,certificate,certificate-of-origin-dco,791,"Stumbled on this file while compiling on M1 Silicon (ARM). atomic.h was used to have atomic operations before the stl introduced it in c++11. 1- this utility class is not compatible with other instructions sets than i386/amd64(e.g arm); 2- the STL version is obviously much better; 3- nobody is using it in the sofa code base actually (except its own testing suite). This PR allows the compilation of SOFA on M1 (and other arm in general). I let a file in Sofa.Compat to warn the eventual user to use the STL atomic. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2160
https://github.com/sofa-framework/sofa/pull/2160:351,Testability,test,testing,351,"Stumbled on this file while compiling on M1 Silicon (ARM). atomic.h was used to have atomic operations before the stl introduced it in c++11. 1- this utility class is not compatible with other instructions sets than i386/amd64(e.g arm); 2- the STL version is obviously much better; 3- nobody is using it in the sofa code base actually (except its own testing suite). This PR allows the compilation of SOFA on M1 (and other arm in general). I let a file in Sofa.Compat to warn the eventual user to use the STL atomic. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2160
https://github.com/sofa-framework/sofa/pull/2160:1056,Testability,test,test,1056,"Stumbled on this file while compiling on M1 Silicon (ARM). atomic.h was used to have atomic operations before the stl introduced it in c++11. 1- this utility class is not compatible with other instructions sets than i386/amd64(e.g arm); 2- the STL version is obviously much better; 3- nobody is using it in the sofa code base actually (except its own testing suite). This PR allows the compilation of SOFA on M1 (and other arm in general). I let a file in Sofa.Compat to warn the eventual user to use the STL atomic. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2160
https://github.com/sofa-framework/sofa/pull/2160:1105,Testability,test,test,1105,"Stumbled on this file while compiling on M1 Silicon (ARM). atomic.h was used to have atomic operations before the stl introduced it in c++11. 1- this utility class is not compatible with other instructions sets than i386/amd64(e.g arm); 2- the STL version is obviously much better; 3- nobody is using it in the sofa code base actually (except its own testing suite). This PR allows the compilation of SOFA on M1 (and other arm in general). I let a file in Sofa.Compat to warn the eventual user to use the STL atomic. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2160
https://github.com/sofa-framework/sofa/pull/2161:847,Availability,failure,failures,847,"It would be better as unit test.. (when I have time), but until then, I put those scenes inside examples/benchmarks/TopologicalChanges. NB: some scenes are crashing. This reveals some component have been created with a copy past of the TopologyHandler but are not really handling topological changes. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2161
https://github.com/sofa-framework/sofa/pull/2161:896,Availability,failure,failures,896,"It would be better as unit test.. (when I have time), but until then, I put those scenes inside examples/benchmarks/TopologicalChanges. NB: some scenes are crashing. This reveals some component have been created with a copy past of the TopologyHandler but are not really handling topological changes. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2161
https://github.com/sofa-framework/sofa/pull/2161:466,Security,Certificate,Certificate,466,"It would be better as unit test.. (when I have time), but until then, I put those scenes inside examples/benchmarks/TopologicalChanges. NB: some scenes are crashing. This reveals some component have been created with a copy past of the TopologyHandler but are not really handling topological changes. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2161
https://github.com/sofa-framework/sofa/pull/2161:577,Security,certificate,certificate-of-origin-dco,577,"It would be better as unit test.. (when I have time), but until then, I put those scenes inside examples/benchmarks/TopologicalChanges. NB: some scenes are crashing. This reveals some component have been created with a copy past of the TopologyHandler but are not really handling topological changes. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2161
https://github.com/sofa-framework/sofa/pull/2161:27,Testability,test,test,27,"It would be better as unit test.. (when I have time), but until then, I put those scenes inside examples/benchmarks/TopologicalChanges. NB: some scenes are crashing. This reveals some component have been created with a copy past of the TopologyHandler but are not really handling topological changes. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2161
https://github.com/sofa-framework/sofa/pull/2161:105,Testability,benchmark,benchmarks,105,"It would be better as unit test.. (when I have time), but until then, I put those scenes inside examples/benchmarks/TopologicalChanges. NB: some scenes are crashing. This reveals some component have been created with a copy past of the TopologyHandler but are not really handling topological changes. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2161
https://github.com/sofa-framework/sofa/pull/2161:842,Testability,test,test,842,"It would be better as unit test.. (when I have time), but until then, I put those scenes inside examples/benchmarks/TopologicalChanges. NB: some scenes are crashing. This reveals some component have been created with a copy past of the TopologyHandler but are not really handling topological changes. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2161
https://github.com/sofa-framework/sofa/pull/2161:891,Testability,test,test,891,"It would be better as unit test.. (when I have time), but until then, I put those scenes inside examples/benchmarks/TopologicalChanges. NB: some scenes are crashing. This reveals some component have been created with a copy past of the TopologyHandler but are not really handling topological changes. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2161
https://github.com/sofa-framework/sofa/pull/2162:913,Availability,failure,failures,913,"This PR integrate PR #2114 and will be merged inside branch inf_topologyChanges_POC. Remove several header includes not needed. Also remove all TopologyDataHandler in constraints as they were only redefining a Data resize operation. This is already done directly inside the TopologyData. ; The destroyFunction should be only overridden if a complex behavior is needed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2162
https://github.com/sofa-framework/sofa/pull/2162:962,Availability,failure,failures,962,"This PR integrate PR #2114 and will be merged inside branch inf_topologyChanges_POC. Remove several header includes not needed. Also remove all TopologyDataHandler in constraints as they were only redefining a Data resize operation. This is already done directly inside the TopologyData. ; The destroyFunction should be only overridden if a complex behavior is needed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2162
https://github.com/sofa-framework/sofa/pull/2162:8,Deployability,integrat,integrate,8,"This PR integrate PR #2114 and will be merged inside branch inf_topologyChanges_POC. Remove several header includes not needed. Also remove all TopologyDataHandler in constraints as they were only redefining a Data resize operation. This is already done directly inside the TopologyData. ; The destroyFunction should be only overridden if a complex behavior is needed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2162
https://github.com/sofa-framework/sofa/pull/2162:8,Integrability,integrat,integrate,8,"This PR integrate PR #2114 and will be merged inside branch inf_topologyChanges_POC. Remove several header includes not needed. Also remove all TopologyDataHandler in constraints as they were only redefining a Data resize operation. This is already done directly inside the TopologyData. ; The destroyFunction should be only overridden if a complex behavior is needed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2162
https://github.com/sofa-framework/sofa/pull/2162:532,Security,Certificate,Certificate,532,"This PR integrate PR #2114 and will be merged inside branch inf_topologyChanges_POC. Remove several header includes not needed. Also remove all TopologyDataHandler in constraints as they were only redefining a Data resize operation. This is already done directly inside the TopologyData. ; The destroyFunction should be only overridden if a complex behavior is needed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2162
https://github.com/sofa-framework/sofa/pull/2162:643,Security,certificate,certificate-of-origin-dco,643,"This PR integrate PR #2114 and will be merged inside branch inf_topologyChanges_POC. Remove several header includes not needed. Also remove all TopologyDataHandler in constraints as they were only redefining a Data resize operation. This is already done directly inside the TopologyData. ; The destroyFunction should be only overridden if a complex behavior is needed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2162
https://github.com/sofa-framework/sofa/pull/2162:908,Testability,test,test,908,"This PR integrate PR #2114 and will be merged inside branch inf_topologyChanges_POC. Remove several header includes not needed. Also remove all TopologyDataHandler in constraints as they were only redefining a Data resize operation. This is already done directly inside the TopologyData. ; The destroyFunction should be only overridden if a complex behavior is needed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2162
https://github.com/sofa-framework/sofa/pull/2162:957,Testability,test,test,957,"This PR integrate PR #2114 and will be merged inside branch inf_topologyChanges_POC. Remove several header includes not needed. Also remove all TopologyDataHandler in constraints as they were only redefining a Data resize operation. This is already done directly inside the TopologyData. ; The destroyFunction should be only overridden if a complex behavior is needed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2162
https://github.com/sofa-framework/sofa/pull/2163:941,Availability,failure,failures,941,"- Lots of comments; - Split into multiple functions (`solve` function easier to read). Next steps:. - Create a visitor to detect automatically if the mass matrix is trivially invertible (diagonal matrix), in order to replace `d_optimizedForDiagonalMatrix`.; - Benchmark with/without `SOFA_NO_VMULTIOP`; - More tests, in particular for the standard Euler method (not symplectic); - Update the doc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2163
https://github.com/sofa-framework/sofa/pull/2163:990,Availability,failure,failures,990,"- Lots of comments; - Split into multiple functions (`solve` function easier to read). Next steps:. - Create a visitor to detect automatically if the mass matrix is trivially invertible (diagonal matrix), in order to replace `d_optimizedForDiagonalMatrix`.; - Benchmark with/without `SOFA_NO_VMULTIOP`; - More tests, in particular for the standard Euler method (not symplectic); - Update the doc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2163
https://github.com/sofa-framework/sofa/pull/2163:381,Deployability,Update,Update,381,"- Lots of comments; - Split into multiple functions (`solve` function easier to read). Next steps:. - Create a visitor to detect automatically if the mass matrix is trivially invertible (diagonal matrix), in order to replace `d_optimizedForDiagonalMatrix`.; - Benchmark with/without `SOFA_NO_VMULTIOP`; - More tests, in particular for the standard Euler method (not symplectic); - Update the doc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2163
https://github.com/sofa-framework/sofa/pull/2163:122,Safety,detect,detect,122,"- Lots of comments; - Split into multiple functions (`solve` function easier to read). Next steps:. - Create a visitor to detect automatically if the mass matrix is trivially invertible (diagonal matrix), in order to replace `d_optimizedForDiagonalMatrix`.; - Benchmark with/without `SOFA_NO_VMULTIOP`; - More tests, in particular for the standard Euler method (not symplectic); - Update the doc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2163
https://github.com/sofa-framework/sofa/pull/2163:560,Security,Certificate,Certificate,560,"- Lots of comments; - Split into multiple functions (`solve` function easier to read). Next steps:. - Create a visitor to detect automatically if the mass matrix is trivially invertible (diagonal matrix), in order to replace `d_optimizedForDiagonalMatrix`.; - Benchmark with/without `SOFA_NO_VMULTIOP`; - More tests, in particular for the standard Euler method (not symplectic); - Update the doc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2163
https://github.com/sofa-framework/sofa/pull/2163:671,Security,certificate,certificate-of-origin-dco,671,"- Lots of comments; - Split into multiple functions (`solve` function easier to read). Next steps:. - Create a visitor to detect automatically if the mass matrix is trivially invertible (diagonal matrix), in order to replace `d_optimizedForDiagonalMatrix`.; - Benchmark with/without `SOFA_NO_VMULTIOP`; - More tests, in particular for the standard Euler method (not symplectic); - Update the doc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2163
https://github.com/sofa-framework/sofa/pull/2163:260,Testability,Benchmark,Benchmark,260,"- Lots of comments; - Split into multiple functions (`solve` function easier to read). Next steps:. - Create a visitor to detect automatically if the mass matrix is trivially invertible (diagonal matrix), in order to replace `d_optimizedForDiagonalMatrix`.; - Benchmark with/without `SOFA_NO_VMULTIOP`; - More tests, in particular for the standard Euler method (not symplectic); - Update the doc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2163
https://github.com/sofa-framework/sofa/pull/2163:310,Testability,test,tests,310,"- Lots of comments; - Split into multiple functions (`solve` function easier to read). Next steps:. - Create a visitor to detect automatically if the mass matrix is trivially invertible (diagonal matrix), in order to replace `d_optimizedForDiagonalMatrix`.; - Benchmark with/without `SOFA_NO_VMULTIOP`; - More tests, in particular for the standard Euler method (not symplectic); - Update the doc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2163
https://github.com/sofa-framework/sofa/pull/2163:936,Testability,test,test,936,"- Lots of comments; - Split into multiple functions (`solve` function easier to read). Next steps:. - Create a visitor to detect automatically if the mass matrix is trivially invertible (diagonal matrix), in order to replace `d_optimizedForDiagonalMatrix`.; - Benchmark with/without `SOFA_NO_VMULTIOP`; - More tests, in particular for the standard Euler method (not symplectic); - Update the doc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2163
https://github.com/sofa-framework/sofa/pull/2163:985,Testability,test,test,985,"- Lots of comments; - Split into multiple functions (`solve` function easier to read). Next steps:. - Create a visitor to detect automatically if the mass matrix is trivially invertible (diagonal matrix), in order to replace `d_optimizedForDiagonalMatrix`.; - Benchmark with/without `SOFA_NO_VMULTIOP`; - More tests, in particular for the standard Euler method (not symplectic); - Update the doc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2163
https://github.com/sofa-framework/sofa/pull/2164:1038,Availability,failure,failures,1038,"When removing point, mass vector was not following the vertex buffer. Which is using swap + pop_back.; This bug could create negative mass during further element deletion. The bug is easy to see with a high mass density:; ![ezgif com-gif-maker(5)](https://user-images.githubusercontent.com/21199245/121010323-917ee880-c795-11eb-9a1e-270c925d845f.gif). After fix:; ![ezgif com-gif-maker(4)](https://user-images.githubusercontent.com/21199245/121010119-4bc22000-c795-11eb-97ca-405644d13cd0.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2164
https://github.com/sofa-framework/sofa/pull/2164:1087,Availability,failure,failures,1087,"When removing point, mass vector was not following the vertex buffer. Which is using swap + pop_back.; This bug could create negative mass during further element deletion. The bug is easy to see with a high mass density:; ![ezgif com-gif-maker(5)](https://user-images.githubusercontent.com/21199245/121010323-917ee880-c795-11eb-9a1e-270c925d845f.gif). After fix:; ![ezgif com-gif-maker(4)](https://user-images.githubusercontent.com/21199245/121010119-4bc22000-c795-11eb-97ca-405644d13cd0.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2164
https://github.com/sofa-framework/sofa/pull/2164:657,Security,Certificate,Certificate,657,"When removing point, mass vector was not following the vertex buffer. Which is using swap + pop_back.; This bug could create negative mass during further element deletion. The bug is easy to see with a high mass density:; ![ezgif com-gif-maker(5)](https://user-images.githubusercontent.com/21199245/121010323-917ee880-c795-11eb-9a1e-270c925d845f.gif). After fix:; ![ezgif com-gif-maker(4)](https://user-images.githubusercontent.com/21199245/121010119-4bc22000-c795-11eb-97ca-405644d13cd0.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2164
https://github.com/sofa-framework/sofa/pull/2164:768,Security,certificate,certificate-of-origin-dco,768,"When removing point, mass vector was not following the vertex buffer. Which is using swap + pop_back.; This bug could create negative mass during further element deletion. The bug is easy to see with a high mass density:; ![ezgif com-gif-maker(5)](https://user-images.githubusercontent.com/21199245/121010323-917ee880-c795-11eb-9a1e-270c925d845f.gif). After fix:; ![ezgif com-gif-maker(4)](https://user-images.githubusercontent.com/21199245/121010119-4bc22000-c795-11eb-97ca-405644d13cd0.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2164
https://github.com/sofa-framework/sofa/pull/2164:1033,Testability,test,test,1033,"When removing point, mass vector was not following the vertex buffer. Which is using swap + pop_back.; This bug could create negative mass during further element deletion. The bug is easy to see with a high mass density:; ![ezgif com-gif-maker(5)](https://user-images.githubusercontent.com/21199245/121010323-917ee880-c795-11eb-9a1e-270c925d845f.gif). After fix:; ![ezgif com-gif-maker(4)](https://user-images.githubusercontent.com/21199245/121010119-4bc22000-c795-11eb-97ca-405644d13cd0.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2164
https://github.com/sofa-framework/sofa/pull/2164:1082,Testability,test,test,1082,"When removing point, mass vector was not following the vertex buffer. Which is using swap + pop_back.; This bug could create negative mass during further element deletion. The bug is easy to see with a high mass density:; ![ezgif com-gif-maker(5)](https://user-images.githubusercontent.com/21199245/121010323-917ee880-c795-11eb-9a1e-270c925d845f.gif). After fix:; ![ezgif com-gif-maker(4)](https://user-images.githubusercontent.com/21199245/121010119-4bc22000-c795-11eb-97ca-405644d13cd0.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2164
https://github.com/sofa-framework/sofa/pull/2165:750,Availability,failure,failures,750,"- Introduce visitor to know the number of non-diagonal mass matrices; - Use this new visitor in EulerExplicitSolver to apply the optimization based on diagonal matrices, or not. This PR is based on #2163 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2165
https://github.com/sofa-framework/sofa/pull/2165:799,Availability,failure,failures,799,"- Introduce visitor to know the number of non-diagonal mass matrices; - Use this new visitor in EulerExplicitSolver to apply the optimization based on diagonal matrices, or not. This PR is based on #2163 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2165
https://github.com/sofa-framework/sofa/pull/2165:129,Performance,optimiz,optimization,129,"- Introduce visitor to know the number of non-diagonal mass matrices; - Use this new visitor in EulerExplicitSolver to apply the optimization based on diagonal matrices, or not. This PR is based on #2163 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2165
https://github.com/sofa-framework/sofa/pull/2165:369,Security,Certificate,Certificate,369,"- Introduce visitor to know the number of non-diagonal mass matrices; - Use this new visitor in EulerExplicitSolver to apply the optimization based on diagonal matrices, or not. This PR is based on #2163 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2165
https://github.com/sofa-framework/sofa/pull/2165:480,Security,certificate,certificate-of-origin-dco,480,"- Introduce visitor to know the number of non-diagonal mass matrices; - Use this new visitor in EulerExplicitSolver to apply the optimization based on diagonal matrices, or not. This PR is based on #2163 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2165
https://github.com/sofa-framework/sofa/pull/2165:745,Testability,test,test,745,"- Introduce visitor to know the number of non-diagonal mass matrices; - Use this new visitor in EulerExplicitSolver to apply the optimization based on diagonal matrices, or not. This PR is based on #2163 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2165
https://github.com/sofa-framework/sofa/pull/2165:794,Testability,test,test,794,"- Introduce visitor to know the number of non-diagonal mass matrices; - Use this new visitor in EulerExplicitSolver to apply the optimization based on diagonal matrices, or not. This PR is based on #2163 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2165
https://github.com/sofa-framework/sofa/pull/2166:800,Availability,failure,failures,800,"This is an attempt to fix the failing unit tests about the links.; Only 2 changes of behavior:. 1. The function `read` returns `false` and don't do anything in case the link has no owner.; 2. Paths not starting with '@' are not added to the list of links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2166
https://github.com/sofa-framework/sofa/pull/2166:849,Availability,failure,failures,849,"This is an attempt to fix the failing unit tests about the links.; Only 2 changes of behavior:. 1. The function `read` returns `false` and don't do anything in case the link has no owner.; 2. Paths not starting with '@' are not added to the list of links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2166
https://github.com/sofa-framework/sofa/pull/2166:419,Security,Certificate,Certificate,419,"This is an attempt to fix the failing unit tests about the links.; Only 2 changes of behavior:. 1. The function `read` returns `false` and don't do anything in case the link has no owner.; 2. Paths not starting with '@' are not added to the list of links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2166
https://github.com/sofa-framework/sofa/pull/2166:530,Security,certificate,certificate-of-origin-dco,530,"This is an attempt to fix the failing unit tests about the links.; Only 2 changes of behavior:. 1. The function `read` returns `false` and don't do anything in case the link has no owner.; 2. Paths not starting with '@' are not added to the list of links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2166
https://github.com/sofa-framework/sofa/pull/2166:43,Testability,test,tests,43,"This is an attempt to fix the failing unit tests about the links.; Only 2 changes of behavior:. 1. The function `read` returns `false` and don't do anything in case the link has no owner.; 2. Paths not starting with '@' are not added to the list of links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2166
https://github.com/sofa-framework/sofa/pull/2166:795,Testability,test,test,795,"This is an attempt to fix the failing unit tests about the links.; Only 2 changes of behavior:. 1. The function `read` returns `false` and don't do anything in case the link has no owner.; 2. Paths not starting with '@' are not added to the list of links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2166
https://github.com/sofa-framework/sofa/pull/2166:844,Testability,test,test,844,"This is an attempt to fix the failing unit tests about the links.; Only 2 changes of behavior:. 1. The function `read` returns `false` and don't do anything in case the link has no owner.; 2. Paths not starting with '@' are not added to the list of links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2166
https://github.com/sofa-framework/sofa/pull/2167:822,Availability,failure,failures,822,"Operator= is deprecated because it hides operations. Readers might think that = is simply an assignment, but it is more than that. As a replacement, the method `setSystemMBKMatrix` is provided. Removing calls to operator= will be done in another PR, once this one is validated. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2167
https://github.com/sofa-framework/sofa/pull/2167:871,Availability,failure,failures,871,"Operator= is deprecated because it hides operations. Readers might think that = is simply an assignment, but it is more than that. As a replacement, the method `setSystemMBKMatrix` is provided. Removing calls to operator= will be done in another PR, once this one is validated. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2167
https://github.com/sofa-framework/sofa/pull/2167:267,Security,validat,validated,267,"Operator= is deprecated because it hides operations. Readers might think that = is simply an assignment, but it is more than that. As a replacement, the method `setSystemMBKMatrix` is provided. Removing calls to operator= will be done in another PR, once this one is validated. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2167
https://github.com/sofa-framework/sofa/pull/2167:441,Security,Certificate,Certificate,441,"Operator= is deprecated because it hides operations. Readers might think that = is simply an assignment, but it is more than that. As a replacement, the method `setSystemMBKMatrix` is provided. Removing calls to operator= will be done in another PR, once this one is validated. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2167
https://github.com/sofa-framework/sofa/pull/2167:552,Security,certificate,certificate-of-origin-dco,552,"Operator= is deprecated because it hides operations. Readers might think that = is simply an assignment, but it is more than that. As a replacement, the method `setSystemMBKMatrix` is provided. Removing calls to operator= will be done in another PR, once this one is validated. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2167
https://github.com/sofa-framework/sofa/pull/2167:817,Testability,test,test,817,"Operator= is deprecated because it hides operations. Readers might think that = is simply an assignment, but it is more than that. As a replacement, the method `setSystemMBKMatrix` is provided. Removing calls to operator= will be done in another PR, once this one is validated. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2167
https://github.com/sofa-framework/sofa/pull/2167:866,Testability,test,test,866,"Operator= is deprecated because it hides operations. Readers might think that = is simply an assignment, but it is more than that. As a replacement, the method `setSystemMBKMatrix` is provided. Removing calls to operator= will be done in another PR, once this one is validated. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2167
https://github.com/sofa-framework/sofa/pull/2167:83,Usability,simpl,simply,83,"Operator= is deprecated because it hides operations. Readers might think that = is simply an assignment, but it is more than that. As a replacement, the method `setSystemMBKMatrix` is provided. Removing calls to operator= will be done in another PR, once this one is validated. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2167
https://github.com/sofa-framework/sofa/pull/2168:712,Availability,failure,failures,712,"Last PR, moving finally all the code related to OBB and Capsule to SofaMiscCollision.; It should definitely cut some branches in the inclusion tree. Fix #1624 finally. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2168
https://github.com/sofa-framework/sofa/pull/2168:761,Availability,failure,failures,761,"Last PR, moving finally all the code related to OBB and Capsule to SofaMiscCollision.; It should definitely cut some branches in the inclusion tree. Fix #1624 finally. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2168
https://github.com/sofa-framework/sofa/pull/2168:331,Security,Certificate,Certificate,331,"Last PR, moving finally all the code related to OBB and Capsule to SofaMiscCollision.; It should definitely cut some branches in the inclusion tree. Fix #1624 finally. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2168
https://github.com/sofa-framework/sofa/pull/2168:442,Security,certificate,certificate-of-origin-dco,442,"Last PR, moving finally all the code related to OBB and Capsule to SofaMiscCollision.; It should definitely cut some branches in the inclusion tree. Fix #1624 finally. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2168
https://github.com/sofa-framework/sofa/pull/2168:707,Testability,test,test,707,"Last PR, moving finally all the code related to OBB and Capsule to SofaMiscCollision.; It should definitely cut some branches in the inclusion tree. Fix #1624 finally. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2168
https://github.com/sofa-framework/sofa/pull/2168:756,Testability,test,test,756,"Last PR, moving finally all the code related to OBB and Capsule to SofaMiscCollision.; It should definitely cut some branches in the inclusion tree. Fix #1624 finally. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2168
https://github.com/sofa-framework/sofa/pull/2169:661,Availability,failure,failures,661,"This PR adds a ""MOVED"" status to ComponentChange, as it was only handling deprecated, removed and pluginized status. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2169
https://github.com/sofa-framework/sofa/pull/2169:710,Availability,failure,failures,710,"This PR adds a ""MOVED"" status to ComponentChange, as it was only handling deprecated, removed and pluginized status. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2169
https://github.com/sofa-framework/sofa/pull/2169:98,Modifiability,plugin,pluginized,98,"This PR adds a ""MOVED"" status to ComponentChange, as it was only handling deprecated, removed and pluginized status. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2169
https://github.com/sofa-framework/sofa/pull/2169:280,Security,Certificate,Certificate,280,"This PR adds a ""MOVED"" status to ComponentChange, as it was only handling deprecated, removed and pluginized status. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2169
https://github.com/sofa-framework/sofa/pull/2169:391,Security,certificate,certificate-of-origin-dco,391,"This PR adds a ""MOVED"" status to ComponentChange, as it was only handling deprecated, removed and pluginized status. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2169
https://github.com/sofa-framework/sofa/pull/2169:656,Testability,test,test,656,"This PR adds a ""MOVED"" status to ComponentChange, as it was only handling deprecated, removed and pluginized status. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2169
https://github.com/sofa-framework/sofa/pull/2169:705,Testability,test,test,705,"This PR adds a ""MOVED"" status to ComponentChange, as it was only handling deprecated, removed and pluginized status. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2169
https://github.com/sofa-framework/sofa/pull/2170:14,Availability,error,errors,14,"This PR fixes errors on the CI. 1- SofaSph; SpatialGridPointModel should be in the same module as SpatialGridContainer (i.e SofaSphFluid). SPH is 100% linked with SpatialGridContainer and SpatialGridPointModel is always used with SPH so it makes much more sense to be in the SPH plugin.; The move is registered in the ComponentChange list. 2- SofaDistanceGrid; One file was present in SofaMiscCollision (namely FrictionContact_DistanceGrid.cpp) but was never enabled because of the dependency order. Moreover, the content of this file is already in SofaDistanceGrid, more precisely in RegisterModelToCollisionFactory.cpp). So this is totally useless. NB: the two scenes using SpatialGridPointModel does not need SofaMiscCollision anymore. Fix #1897. Contains #2169 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2170
https://github.com/sofa-framework/sofa/pull/2170:1311,Availability,failure,failures,1311,"This PR fixes errors on the CI. 1- SofaSph; SpatialGridPointModel should be in the same module as SpatialGridContainer (i.e SofaSphFluid). SPH is 100% linked with SpatialGridContainer and SpatialGridPointModel is always used with SPH so it makes much more sense to be in the SPH plugin.; The move is registered in the ComponentChange list. 2- SofaDistanceGrid; One file was present in SofaMiscCollision (namely FrictionContact_DistanceGrid.cpp) but was never enabled because of the dependency order. Moreover, the content of this file is already in SofaDistanceGrid, more precisely in RegisterModelToCollisionFactory.cpp). So this is totally useless. NB: the two scenes using SpatialGridPointModel does not need SofaMiscCollision anymore. Fix #1897. Contains #2169 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2170
https://github.com/sofa-framework/sofa/pull/2170:1360,Availability,failure,failures,1360,"This PR fixes errors on the CI. 1- SofaSph; SpatialGridPointModel should be in the same module as SpatialGridContainer (i.e SofaSphFluid). SPH is 100% linked with SpatialGridContainer and SpatialGridPointModel is always used with SPH so it makes much more sense to be in the SPH plugin.; The move is registered in the ComponentChange list. 2- SofaDistanceGrid; One file was present in SofaMiscCollision (namely FrictionContact_DistanceGrid.cpp) but was never enabled because of the dependency order. Moreover, the content of this file is already in SofaDistanceGrid, more precisely in RegisterModelToCollisionFactory.cpp). So this is totally useless. NB: the two scenes using SpatialGridPointModel does not need SofaMiscCollision anymore. Fix #1897. Contains #2169 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2170
https://github.com/sofa-framework/sofa/pull/2170:482,Integrability,depend,dependency,482,"This PR fixes errors on the CI. 1- SofaSph; SpatialGridPointModel should be in the same module as SpatialGridContainer (i.e SofaSphFluid). SPH is 100% linked with SpatialGridContainer and SpatialGridPointModel is always used with SPH so it makes much more sense to be in the SPH plugin.; The move is registered in the ComponentChange list. 2- SofaDistanceGrid; One file was present in SofaMiscCollision (namely FrictionContact_DistanceGrid.cpp) but was never enabled because of the dependency order. Moreover, the content of this file is already in SofaDistanceGrid, more precisely in RegisterModelToCollisionFactory.cpp). So this is totally useless. NB: the two scenes using SpatialGridPointModel does not need SofaMiscCollision anymore. Fix #1897. Contains #2169 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2170
https://github.com/sofa-framework/sofa/pull/2170:279,Modifiability,plugin,plugin,279,"This PR fixes errors on the CI. 1- SofaSph; SpatialGridPointModel should be in the same module as SpatialGridContainer (i.e SofaSphFluid). SPH is 100% linked with SpatialGridContainer and SpatialGridPointModel is always used with SPH so it makes much more sense to be in the SPH plugin.; The move is registered in the ComponentChange list. 2- SofaDistanceGrid; One file was present in SofaMiscCollision (namely FrictionContact_DistanceGrid.cpp) but was never enabled because of the dependency order. Moreover, the content of this file is already in SofaDistanceGrid, more precisely in RegisterModelToCollisionFactory.cpp). So this is totally useless. NB: the two scenes using SpatialGridPointModel does not need SofaMiscCollision anymore. Fix #1897. Contains #2169 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2170
https://github.com/sofa-framework/sofa/pull/2170:930,Security,Certificate,Certificate,930,"This PR fixes errors on the CI. 1- SofaSph; SpatialGridPointModel should be in the same module as SpatialGridContainer (i.e SofaSphFluid). SPH is 100% linked with SpatialGridContainer and SpatialGridPointModel is always used with SPH so it makes much more sense to be in the SPH plugin.; The move is registered in the ComponentChange list. 2- SofaDistanceGrid; One file was present in SofaMiscCollision (namely FrictionContact_DistanceGrid.cpp) but was never enabled because of the dependency order. Moreover, the content of this file is already in SofaDistanceGrid, more precisely in RegisterModelToCollisionFactory.cpp). So this is totally useless. NB: the two scenes using SpatialGridPointModel does not need SofaMiscCollision anymore. Fix #1897. Contains #2169 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2170
https://github.com/sofa-framework/sofa/pull/2170:1041,Security,certificate,certificate-of-origin-dco,1041,"This PR fixes errors on the CI. 1- SofaSph; SpatialGridPointModel should be in the same module as SpatialGridContainer (i.e SofaSphFluid). SPH is 100% linked with SpatialGridContainer and SpatialGridPointModel is always used with SPH so it makes much more sense to be in the SPH plugin.; The move is registered in the ComponentChange list. 2- SofaDistanceGrid; One file was present in SofaMiscCollision (namely FrictionContact_DistanceGrid.cpp) but was never enabled because of the dependency order. Moreover, the content of this file is already in SofaDistanceGrid, more precisely in RegisterModelToCollisionFactory.cpp). So this is totally useless. NB: the two scenes using SpatialGridPointModel does not need SofaMiscCollision anymore. Fix #1897. Contains #2169 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2170
https://github.com/sofa-framework/sofa/pull/2170:1306,Testability,test,test,1306,"This PR fixes errors on the CI. 1- SofaSph; SpatialGridPointModel should be in the same module as SpatialGridContainer (i.e SofaSphFluid). SPH is 100% linked with SpatialGridContainer and SpatialGridPointModel is always used with SPH so it makes much more sense to be in the SPH plugin.; The move is registered in the ComponentChange list. 2- SofaDistanceGrid; One file was present in SofaMiscCollision (namely FrictionContact_DistanceGrid.cpp) but was never enabled because of the dependency order. Moreover, the content of this file is already in SofaDistanceGrid, more precisely in RegisterModelToCollisionFactory.cpp). So this is totally useless. NB: the two scenes using SpatialGridPointModel does not need SofaMiscCollision anymore. Fix #1897. Contains #2169 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2170
https://github.com/sofa-framework/sofa/pull/2170:1355,Testability,test,test,1355,"This PR fixes errors on the CI. 1- SofaSph; SpatialGridPointModel should be in the same module as SpatialGridContainer (i.e SofaSphFluid). SPH is 100% linked with SpatialGridContainer and SpatialGridPointModel is always used with SPH so it makes much more sense to be in the SPH plugin.; The move is registered in the ComponentChange list. 2- SofaDistanceGrid; One file was present in SofaMiscCollision (namely FrictionContact_DistanceGrid.cpp) but was never enabled because of the dependency order. Moreover, the content of this file is already in SofaDistanceGrid, more precisely in RegisterModelToCollisionFactory.cpp). So this is totally useless. NB: the two scenes using SpatialGridPointModel does not need SofaMiscCollision anymore. Fix #1897. Contains #2169 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2170
https://github.com/sofa-framework/sofa/pull/2171:710,Availability,failure,failures,710,"This PR will be merged in the topologyChanges_POC branch. this method was never called and is not useful.; Add Disabled message. This need to be merged before #2114. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2171
https://github.com/sofa-framework/sofa/pull/2171:759,Availability,failure,failures,759,"This PR will be merged in the topologyChanges_POC branch. this method was never called and is not useful.; Add Disabled message. This need to be merged before #2114. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2171
https://github.com/sofa-framework/sofa/pull/2171:120,Integrability,message,message,120,"This PR will be merged in the topologyChanges_POC branch. this method was never called and is not useful.; Add Disabled message. This need to be merged before #2114. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2171
https://github.com/sofa-framework/sofa/pull/2171:329,Security,Certificate,Certificate,329,"This PR will be merged in the topologyChanges_POC branch. this method was never called and is not useful.; Add Disabled message. This need to be merged before #2114. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2171
https://github.com/sofa-framework/sofa/pull/2171:440,Security,certificate,certificate-of-origin-dco,440,"This PR will be merged in the topologyChanges_POC branch. this method was never called and is not useful.; Add Disabled message. This need to be merged before #2114. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2171
https://github.com/sofa-framework/sofa/pull/2171:705,Testability,test,test,705,"This PR will be merged in the topologyChanges_POC branch. this method was never called and is not useful.; Add Disabled message. This need to be merged before #2114. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2171
https://github.com/sofa-framework/sofa/pull/2171:754,Testability,test,test,754,"This PR will be merged in the topologyChanges_POC branch. this method was never called and is not useful.; Add Disabled message. This need to be merged before #2114. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2171
https://github.com/sofa-framework/sofa/pull/2172:1244,Availability,failure,failures,1244,"Update scene to show the different methods apply on a same beam (even if I can't see the diff...) ; Move the old TetrahedronFEMForceField.scn into TetrahedronFEMForceField_Chain.scn. TetrahedronFEMForceField.scn; ![Sofa - C__projects_sofa-src_examples_Components_forcefield_TetrahedronFEMForceField scn 6_11_2021 12_12_37 PM](https://user-images.githubusercontent.com/21199245/121693178-2bfa6700-cac9-11eb-846f-6395d00a1aa0.png). TetrahedralCorotationalFEMForceField.scn; ![Sofa - C__projects_sofa-src_examples_Components_forcefield_TetrahedralCorotationalFEMForceField scn 6_10_2021 9_26_44 AM](https://user-images.githubusercontent.com/21199245/121483753-d477d080-c9ce-11eb-968a-57009c936706.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2172
https://github.com/sofa-framework/sofa/pull/2172:1293,Availability,failure,failures,1293,"Update scene to show the different methods apply on a same beam (even if I can't see the diff...) ; Move the old TetrahedronFEMForceField.scn into TetrahedronFEMForceField_Chain.scn. TetrahedronFEMForceField.scn; ![Sofa - C__projects_sofa-src_examples_Components_forcefield_TetrahedronFEMForceField scn 6_11_2021 12_12_37 PM](https://user-images.githubusercontent.com/21199245/121693178-2bfa6700-cac9-11eb-846f-6395d00a1aa0.png). TetrahedralCorotationalFEMForceField.scn; ![Sofa - C__projects_sofa-src_examples_Components_forcefield_TetrahedralCorotationalFEMForceField scn 6_10_2021 9_26_44 AM](https://user-images.githubusercontent.com/21199245/121483753-d477d080-c9ce-11eb-968a-57009c936706.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2172
https://github.com/sofa-framework/sofa/pull/2172:0,Deployability,Update,Update,0,"Update scene to show the different methods apply on a same beam (even if I can't see the diff...) ; Move the old TetrahedronFEMForceField.scn into TetrahedronFEMForceField_Chain.scn. TetrahedronFEMForceField.scn; ![Sofa - C__projects_sofa-src_examples_Components_forcefield_TetrahedronFEMForceField scn 6_11_2021 12_12_37 PM](https://user-images.githubusercontent.com/21199245/121693178-2bfa6700-cac9-11eb-846f-6395d00a1aa0.png). TetrahedralCorotationalFEMForceField.scn; ![Sofa - C__projects_sofa-src_examples_Components_forcefield_TetrahedralCorotationalFEMForceField scn 6_10_2021 9_26_44 AM](https://user-images.githubusercontent.com/21199245/121483753-d477d080-c9ce-11eb-968a-57009c936706.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2172
https://github.com/sofa-framework/sofa/pull/2172:863,Security,Certificate,Certificate,863,"Update scene to show the different methods apply on a same beam (even if I can't see the diff...) ; Move the old TetrahedronFEMForceField.scn into TetrahedronFEMForceField_Chain.scn. TetrahedronFEMForceField.scn; ![Sofa - C__projects_sofa-src_examples_Components_forcefield_TetrahedronFEMForceField scn 6_11_2021 12_12_37 PM](https://user-images.githubusercontent.com/21199245/121693178-2bfa6700-cac9-11eb-846f-6395d00a1aa0.png). TetrahedralCorotationalFEMForceField.scn; ![Sofa - C__projects_sofa-src_examples_Components_forcefield_TetrahedralCorotationalFEMForceField scn 6_10_2021 9_26_44 AM](https://user-images.githubusercontent.com/21199245/121483753-d477d080-c9ce-11eb-968a-57009c936706.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2172
https://github.com/sofa-framework/sofa/pull/2172:974,Security,certificate,certificate-of-origin-dco,974,"Update scene to show the different methods apply on a same beam (even if I can't see the diff...) ; Move the old TetrahedronFEMForceField.scn into TetrahedronFEMForceField_Chain.scn. TetrahedronFEMForceField.scn; ![Sofa - C__projects_sofa-src_examples_Components_forcefield_TetrahedronFEMForceField scn 6_11_2021 12_12_37 PM](https://user-images.githubusercontent.com/21199245/121693178-2bfa6700-cac9-11eb-846f-6395d00a1aa0.png). TetrahedralCorotationalFEMForceField.scn; ![Sofa - C__projects_sofa-src_examples_Components_forcefield_TetrahedralCorotationalFEMForceField scn 6_10_2021 9_26_44 AM](https://user-images.githubusercontent.com/21199245/121483753-d477d080-c9ce-11eb-968a-57009c936706.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2172
https://github.com/sofa-framework/sofa/pull/2172:1239,Testability,test,test,1239,"Update scene to show the different methods apply on a same beam (even if I can't see the diff...) ; Move the old TetrahedronFEMForceField.scn into TetrahedronFEMForceField_Chain.scn. TetrahedronFEMForceField.scn; ![Sofa - C__projects_sofa-src_examples_Components_forcefield_TetrahedronFEMForceField scn 6_11_2021 12_12_37 PM](https://user-images.githubusercontent.com/21199245/121693178-2bfa6700-cac9-11eb-846f-6395d00a1aa0.png). TetrahedralCorotationalFEMForceField.scn; ![Sofa - C__projects_sofa-src_examples_Components_forcefield_TetrahedralCorotationalFEMForceField scn 6_10_2021 9_26_44 AM](https://user-images.githubusercontent.com/21199245/121483753-d477d080-c9ce-11eb-968a-57009c936706.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2172
https://github.com/sofa-framework/sofa/pull/2172:1288,Testability,test,test,1288,"Update scene to show the different methods apply on a same beam (even if I can't see the diff...) ; Move the old TetrahedronFEMForceField.scn into TetrahedronFEMForceField_Chain.scn. TetrahedronFEMForceField.scn; ![Sofa - C__projects_sofa-src_examples_Components_forcefield_TetrahedronFEMForceField scn 6_11_2021 12_12_37 PM](https://user-images.githubusercontent.com/21199245/121693178-2bfa6700-cac9-11eb-846f-6395d00a1aa0.png). TetrahedralCorotationalFEMForceField.scn; ![Sofa - C__projects_sofa-src_examples_Components_forcefield_TetrahedralCorotationalFEMForceField scn 6_10_2021 9_26_44 AM](https://user-images.githubusercontent.com/21199245/121483753-d477d080-c9ce-11eb-968a-57009c936706.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2172
https://github.com/sofa-framework/sofa/issues/2173:77,Deployability,update,update,77,"We need to define a better design to handle cross-dependency in the internal update of components (now using the callback mechanism introduced in #1406).; Cross-dependency between data (such as massDensity vs totalMass) is not currently well handled. Then, we could proceed to the deprecation of the doUpdateInternal see #3900",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2173
https://github.com/sofa-framework/sofa/issues/2173:50,Integrability,depend,dependency,50,"We need to define a better design to handle cross-dependency in the internal update of components (now using the callback mechanism introduced in #1406).; Cross-dependency between data (such as massDensity vs totalMass) is not currently well handled. Then, we could proceed to the deprecation of the doUpdateInternal see #3900",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2173
https://github.com/sofa-framework/sofa/issues/2173:161,Integrability,depend,dependency,161,"We need to define a better design to handle cross-dependency in the internal update of components (now using the callback mechanism introduced in #1406).; Cross-dependency between data (such as massDensity vs totalMass) is not currently well handled. Then, we could proceed to the deprecation of the doUpdateInternal see #3900",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2173
https://github.com/sofa-framework/sofa/pull/2174:653,Availability,failure,failures,653,"All in the title. - fix markdown bullet points in CONTRIBUTING; - undeed include in LCPConstraintSolver.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2174
https://github.com/sofa-framework/sofa/pull/2174:702,Availability,failure,failures,702,"All in the title. - fix markdown bullet points in CONTRIBUTING; - undeed include in LCPConstraintSolver.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2174
https://github.com/sofa-framework/sofa/pull/2174:272,Security,Certificate,Certificate,272,"All in the title. - fix markdown bullet points in CONTRIBUTING; - undeed include in LCPConstraintSolver.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2174
https://github.com/sofa-framework/sofa/pull/2174:383,Security,certificate,certificate-of-origin-dco,383,"All in the title. - fix markdown bullet points in CONTRIBUTING; - undeed include in LCPConstraintSolver.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2174
https://github.com/sofa-framework/sofa/pull/2174:648,Testability,test,test,648,"All in the title. - fix markdown bullet points in CONTRIBUTING; - undeed include in LCPConstraintSolver.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2174
https://github.com/sofa-framework/sofa/pull/2174:697,Testability,test,test,697,"All in the title. - fix markdown bullet points in CONTRIBUTING; - undeed include in LCPConstraintSolver.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2174
https://github.com/sofa-framework/sofa/pull/2175:73,Availability,error,error,73,"Imported targets can be aliased only if they are global. Otherwise, this error is raised:; ```; CMake Error at /data/Softwares/sofa/build/build-master/install/lib/cmake/SofaFramework/SofaFrameworkConfig.cmake:45 (add_library):; add_library cannot create ALIAS target ""SofaHelper"" because target; ""Sofa.Helper"" is imported but not globally visible.; Call Stack (most recent call first):; CMakeLists.txt:5 (find_package); ```. Thus, this PR adds the GLOBAL property to the imported targets we want to alias.; It also move all the alias definitions in their respective projects (not in SofaFramework anymore). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2175
https://github.com/sofa-framework/sofa/pull/2175:102,Availability,Error,Error,102,"Imported targets can be aliased only if they are global. Otherwise, this error is raised:; ```; CMake Error at /data/Softwares/sofa/build/build-master/install/lib/cmake/SofaFramework/SofaFrameworkConfig.cmake:45 (add_library):; add_library cannot create ALIAS target ""SofaHelper"" because target; ""Sofa.Helper"" is imported but not globally visible.; Call Stack (most recent call first):; CMakeLists.txt:5 (find_package); ```. Thus, this PR adds the GLOBAL property to the imported targets we want to alias.; It also move all the alias definitions in their respective projects (not in SofaFramework anymore). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2175
https://github.com/sofa-framework/sofa/pull/2175:1151,Availability,failure,failures,1151,"Imported targets can be aliased only if they are global. Otherwise, this error is raised:; ```; CMake Error at /data/Softwares/sofa/build/build-master/install/lib/cmake/SofaFramework/SofaFrameworkConfig.cmake:45 (add_library):; add_library cannot create ALIAS target ""SofaHelper"" because target; ""Sofa.Helper"" is imported but not globally visible.; Call Stack (most recent call first):; CMakeLists.txt:5 (find_package); ```. Thus, this PR adds the GLOBAL property to the imported targets we want to alias.; It also move all the alias definitions in their respective projects (not in SofaFramework anymore). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2175
https://github.com/sofa-framework/sofa/pull/2175:1200,Availability,failure,failures,1200,"Imported targets can be aliased only if they are global. Otherwise, this error is raised:; ```; CMake Error at /data/Softwares/sofa/build/build-master/install/lib/cmake/SofaFramework/SofaFrameworkConfig.cmake:45 (add_library):; add_library cannot create ALIAS target ""SofaHelper"" because target; ""Sofa.Helper"" is imported but not globally visible.; Call Stack (most recent call first):; CMakeLists.txt:5 (find_package); ```. Thus, this PR adds the GLOBAL property to the imported targets we want to alias.; It also move all the alias definitions in their respective projects (not in SofaFramework anymore). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2175
https://github.com/sofa-framework/sofa/pull/2175:151,Deployability,install,install,151,"Imported targets can be aliased only if they are global. Otherwise, this error is raised:; ```; CMake Error at /data/Softwares/sofa/build/build-master/install/lib/cmake/SofaFramework/SofaFrameworkConfig.cmake:45 (add_library):; add_library cannot create ALIAS target ""SofaHelper"" because target; ""Sofa.Helper"" is imported but not globally visible.; Call Stack (most recent call first):; CMakeLists.txt:5 (find_package); ```. Thus, this PR adds the GLOBAL property to the imported targets we want to alias.; It also move all the alias definitions in their respective projects (not in SofaFramework anymore). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2175
https://github.com/sofa-framework/sofa/pull/2175:770,Security,Certificate,Certificate,770,"Imported targets can be aliased only if they are global. Otherwise, this error is raised:; ```; CMake Error at /data/Softwares/sofa/build/build-master/install/lib/cmake/SofaFramework/SofaFrameworkConfig.cmake:45 (add_library):; add_library cannot create ALIAS target ""SofaHelper"" because target; ""Sofa.Helper"" is imported but not globally visible.; Call Stack (most recent call first):; CMakeLists.txt:5 (find_package); ```. Thus, this PR adds the GLOBAL property to the imported targets we want to alias.; It also move all the alias definitions in their respective projects (not in SofaFramework anymore). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2175
https://github.com/sofa-framework/sofa/pull/2175:881,Security,certificate,certificate-of-origin-dco,881,"Imported targets can be aliased only if they are global. Otherwise, this error is raised:; ```; CMake Error at /data/Softwares/sofa/build/build-master/install/lib/cmake/SofaFramework/SofaFrameworkConfig.cmake:45 (add_library):; add_library cannot create ALIAS target ""SofaHelper"" because target; ""Sofa.Helper"" is imported but not globally visible.; Call Stack (most recent call first):; CMakeLists.txt:5 (find_package); ```. Thus, this PR adds the GLOBAL property to the imported targets we want to alias.; It also move all the alias definitions in their respective projects (not in SofaFramework anymore). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2175
https://github.com/sofa-framework/sofa/pull/2175:1146,Testability,test,test,1146,"Imported targets can be aliased only if they are global. Otherwise, this error is raised:; ```; CMake Error at /data/Softwares/sofa/build/build-master/install/lib/cmake/SofaFramework/SofaFrameworkConfig.cmake:45 (add_library):; add_library cannot create ALIAS target ""SofaHelper"" because target; ""Sofa.Helper"" is imported but not globally visible.; Call Stack (most recent call first):; CMakeLists.txt:5 (find_package); ```. Thus, this PR adds the GLOBAL property to the imported targets we want to alias.; It also move all the alias definitions in their respective projects (not in SofaFramework anymore). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2175
https://github.com/sofa-framework/sofa/pull/2175:1195,Testability,test,test,1195,"Imported targets can be aliased only if they are global. Otherwise, this error is raised:; ```; CMake Error at /data/Softwares/sofa/build/build-master/install/lib/cmake/SofaFramework/SofaFrameworkConfig.cmake:45 (add_library):; add_library cannot create ALIAS target ""SofaHelper"" because target; ""Sofa.Helper"" is imported but not globally visible.; Call Stack (most recent call first):; CMakeLists.txt:5 (find_package); ```. Thus, this PR adds the GLOBAL property to the imported targets we want to alias.; It also move all the alias definitions in their respective projects (not in SofaFramework anymore). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2175
https://github.com/sofa-framework/sofa/pull/2176:577,Availability,failure,failures,577,"Also clean compilation warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2176
https://github.com/sofa-framework/sofa/pull/2176:626,Availability,failure,failures,626,"Also clean compilation warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2176
https://github.com/sofa-framework/sofa/pull/2176:196,Security,Certificate,Certificate,196,"Also clean compilation warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2176
https://github.com/sofa-framework/sofa/pull/2176:307,Security,certificate,certificate-of-origin-dco,307,"Also clean compilation warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2176
https://github.com/sofa-framework/sofa/pull/2176:572,Testability,test,test,572,"Also clean compilation warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2176
https://github.com/sofa-framework/sofa/pull/2176:621,Testability,test,test,621,"Also clean compilation warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2176
https://github.com/sofa-framework/sofa/pull/2177:2053,Availability,down,downside,2053,"05 ....UpdateVAndX. ```; ## Multi threaded; ```; 8.40483 s ( 118.979 FPS); LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.01 1 5.32 26.82 7.42 1.31 7.42 88.31 ...Mechanical; 4 0.02 1 0.22 0.88 0.32 0.07 0.32 3.80 ....ComputeForce; 4 0.34 1 0.19 0.70 0.28 0.06 0.28 3.29 ....ComputeRHTerm; 4 0.61 1 0 0.07 0.01 0 0.01 0.06 ....MBKBuild; 5 0.61 1 0 0.07 0 0 0 0.03 .....CG-setSystemMBKMatrix; 4 0.62 1 4.87 25.85 6.80 1.22 6.80 80.84 ....MBKSolve; 5 0.64 1 4.84 25.82 6.77 1.22 6.77 80.51 .....CG-Solve; 4 7.42 1 0.01 0.02 0.01 0 0.01 0.13 ....UpdateVAndX. ```. # Comments. - Code is in plugin MultiThreading because of the large amount of boilerplate code for the multi threading management, that would pollute the initial implementation in `HexahedronFemForceField`. I have some ideas to reduce this code, but it requires work on the task scheduler.; - A small part of the code is duplicated from `HexahedronFemForceField`.; - Initially, I wanted to accelerate the execution of the Conjugate Gradient for `GraphScattered` types. It is not possible to propose a generic multi-threaded acceleration for all force fields: for FEM, the most time consuming step in the CG is `ForceField::addDForce`. This is the method to accelerate. The downside is that it has to be done for every force field... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2177
https://github.com/sofa-framework/sofa/pull/2177:2657,Availability,failure,failures,2657,"05 ....UpdateVAndX. ```; ## Multi threaded; ```; 8.40483 s ( 118.979 FPS); LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.01 1 5.32 26.82 7.42 1.31 7.42 88.31 ...Mechanical; 4 0.02 1 0.22 0.88 0.32 0.07 0.32 3.80 ....ComputeForce; 4 0.34 1 0.19 0.70 0.28 0.06 0.28 3.29 ....ComputeRHTerm; 4 0.61 1 0 0.07 0.01 0 0.01 0.06 ....MBKBuild; 5 0.61 1 0 0.07 0 0 0 0.03 .....CG-setSystemMBKMatrix; 4 0.62 1 4.87 25.85 6.80 1.22 6.80 80.84 ....MBKSolve; 5 0.64 1 4.84 25.82 6.77 1.22 6.77 80.51 .....CG-Solve; 4 7.42 1 0.01 0.02 0.01 0 0.01 0.13 ....UpdateVAndX. ```. # Comments. - Code is in plugin MultiThreading because of the large amount of boilerplate code for the multi threading management, that would pollute the initial implementation in `HexahedronFemForceField`. I have some ideas to reduce this code, but it requires work on the task scheduler.; - A small part of the code is duplicated from `HexahedronFemForceField`.; - Initially, I wanted to accelerate the execution of the Conjugate Gradient for `GraphScattered` types. It is not possible to propose a generic multi-threaded acceleration for all force fields: for FEM, the most time consuming step in the CG is `ForceField::addDForce`. This is the method to accelerate. The downside is that it has to be done for every force field... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2177
https://github.com/sofa-framework/sofa/pull/2177:2706,Availability,failure,failures,2706,"05 ....UpdateVAndX. ```; ## Multi threaded; ```; 8.40483 s ( 118.979 FPS); LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.01 1 5.32 26.82 7.42 1.31 7.42 88.31 ...Mechanical; 4 0.02 1 0.22 0.88 0.32 0.07 0.32 3.80 ....ComputeForce; 4 0.34 1 0.19 0.70 0.28 0.06 0.28 3.29 ....ComputeRHTerm; 4 0.61 1 0 0.07 0.01 0 0.01 0.06 ....MBKBuild; 5 0.61 1 0 0.07 0 0 0 0.03 .....CG-setSystemMBKMatrix; 4 0.62 1 4.87 25.85 6.80 1.22 6.80 80.84 ....MBKSolve; 5 0.64 1 4.84 25.82 6.77 1.22 6.77 80.51 .....CG-Solve; 4 7.42 1 0.01 0.02 0.01 0 0.01 0.13 ....UpdateVAndX. ```. # Comments. - Code is in plugin MultiThreading because of the large amount of boilerplate code for the multi threading management, that would pollute the initial implementation in `HexahedronFemForceField`. I have some ideas to reduce this code, but it requires work on the task scheduler.; - A small part of the code is duplicated from `HexahedronFemForceField`.; - Initially, I wanted to accelerate the execution of the Conjugate Gradient for `GraphScattered` types. It is not possible to propose a generic multi-threaded acceleration for all force fields: for FEM, the most time consuming step in the CG is `ForceField::addDForce`. This is the method to accelerate. The downside is that it has to be done for every force field... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2177
https://github.com/sofa-framework/sofa/pull/2177:819,Deployability,Update,UpdateVAndX,819,"Parallel implementation of `HexahedronFEMForceField`. For details, see the comments of the class `ParallelHexahedronFEMForceField`, in `ParallelHexahedronFEMForceField.h`. # Results. On a cantilever beam (`ParallelHexahedronFEMForceField.scn`) with 1911 hexahedra, after 1000 time steps:. ## Single threaded; ```; 21.1615 s ( 47.2557 FPS); LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.01 1 19.42 28.17 20.23 0.83 20.23 95.51 ...Mechanical; 4 0.02 1 0.86 1.54 0.90 0.06 0.90 4.23 ....ComputeForce; 4 0.91 1 0.70 1.38 0.74 0.05 0.74 3.51 ....ComputeRHTerm; 4 1.66 1 0 0.03 0 0 0 0.02 ....MBKBuild; 5 1.66 1 0 0.02 0 0 0 0.01 .....CG-setSystemMBKMatrix; 4 1.66 1 17.79 26.51 18.56 0.78 18.56 87.62 ....MBKSolve; 5 1.68 1 17.76 26.48 18.53 0.77 18.53 87.49 .....CG-Solve; 4 20.22 1 0.01 0.04 0.01 0 0.01 0.05 ....UpdateVAndX. ```; ## Multi threaded; ```; 8.40483 s ( 118.979 FPS); LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.01 1 5.32 26.82 7.42 1.31 7.42 88.31 ...Mechanical; 4 0.02 1 0.22 0.88 0.32 0.07 0.32 3.80 ....ComputeForce; 4 0.34 1 0.19 0.70 0.28 0.06 0.28 3.29 ....ComputeRHTerm; 4 0.61 1 0 0.07 0.01 0 0.01 0.06 ....MBKBuild; 5 0.61 1 0 0.07 0 0 0 0.03 .....CG-setSystemMBKMatrix; 4 0.62 1 4.87 25.85 6.80 1.22 6.80 80.84 ....MBKSolve; 5 0.64 1 4.84 25.82 6.77 1.22 6.77 80.51 .....CG-Solve; 4 7.42 1 0.01 0.02 0.01 0 0.01 0.13 ....UpdateVAndX. ```. # Comments. - Code is in plugin MultiThreading because of the large amount of boilerplate code for the multi threading management, that would pollute the initial implementation in `HexahedronFemForceField`. I have some ideas to reduce this code, but it requires work on the task scheduler.; - A small part of the code is duplicated from `HexahedronFemForceField`.; - Initially, I wanted to accelerate the execution of the Conjugate Gradient for `GraphScattered` types. It is not possible to propose a generic multi-threaded acceleration for all force fields: for FEM, the most time consuming step in the CG is `ForceField",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2177
https://github.com/sofa-framework/sofa/pull/2177:1362,Deployability,Update,UpdateVAndX,1362," DEV TOTAL PERCENT ID; 3 0.01 1 19.42 28.17 20.23 0.83 20.23 95.51 ...Mechanical; 4 0.02 1 0.86 1.54 0.90 0.06 0.90 4.23 ....ComputeForce; 4 0.91 1 0.70 1.38 0.74 0.05 0.74 3.51 ....ComputeRHTerm; 4 1.66 1 0 0.03 0 0 0 0.02 ....MBKBuild; 5 1.66 1 0 0.02 0 0 0 0.01 .....CG-setSystemMBKMatrix; 4 1.66 1 17.79 26.51 18.56 0.78 18.56 87.62 ....MBKSolve; 5 1.68 1 17.76 26.48 18.53 0.77 18.53 87.49 .....CG-Solve; 4 20.22 1 0.01 0.04 0.01 0 0.01 0.05 ....UpdateVAndX. ```; ## Multi threaded; ```; 8.40483 s ( 118.979 FPS); LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.01 1 5.32 26.82 7.42 1.31 7.42 88.31 ...Mechanical; 4 0.02 1 0.22 0.88 0.32 0.07 0.32 3.80 ....ComputeForce; 4 0.34 1 0.19 0.70 0.28 0.06 0.28 3.29 ....ComputeRHTerm; 4 0.61 1 0 0.07 0.01 0 0.01 0.06 ....MBKBuild; 5 0.61 1 0 0.07 0 0 0 0.03 .....CG-setSystemMBKMatrix; 4 0.62 1 4.87 25.85 6.80 1.22 6.80 80.84 ....MBKSolve; 5 0.64 1 4.84 25.82 6.77 1.22 6.77 80.51 .....CG-Solve; 4 7.42 1 0.01 0.02 0.01 0 0.01 0.13 ....UpdateVAndX. ```. # Comments. - Code is in plugin MultiThreading because of the large amount of boilerplate code for the multi threading management, that would pollute the initial implementation in `HexahedronFemForceField`. I have some ideas to reduce this code, but it requires work on the task scheduler.; - A small part of the code is duplicated from `HexahedronFemForceField`.; - Initially, I wanted to accelerate the execution of the Conjugate Gradient for `GraphScattered` types. It is not possible to propose a generic multi-threaded acceleration for all force fields: for FEM, the most time consuming step in the CG is `ForceField::addDForce`. This is the method to accelerate. The downside is that it has to be done for every force field... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2177
https://github.com/sofa-framework/sofa/pull/2177:1608,Energy Efficiency,reduce,reduce,1608," 0.01 .....CG-setSystemMBKMatrix; 4 1.66 1 17.79 26.51 18.56 0.78 18.56 87.62 ....MBKSolve; 5 1.68 1 17.76 26.48 18.53 0.77 18.53 87.49 .....CG-Solve; 4 20.22 1 0.01 0.04 0.01 0 0.01 0.05 ....UpdateVAndX. ```; ## Multi threaded; ```; 8.40483 s ( 118.979 FPS); LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.01 1 5.32 26.82 7.42 1.31 7.42 88.31 ...Mechanical; 4 0.02 1 0.22 0.88 0.32 0.07 0.32 3.80 ....ComputeForce; 4 0.34 1 0.19 0.70 0.28 0.06 0.28 3.29 ....ComputeRHTerm; 4 0.61 1 0 0.07 0.01 0 0.01 0.06 ....MBKBuild; 5 0.61 1 0 0.07 0 0 0 0.03 .....CG-setSystemMBKMatrix; 4 0.62 1 4.87 25.85 6.80 1.22 6.80 80.84 ....MBKSolve; 5 0.64 1 4.84 25.82 6.77 1.22 6.77 80.51 .....CG-Solve; 4 7.42 1 0.01 0.02 0.01 0 0.01 0.13 ....UpdateVAndX. ```. # Comments. - Code is in plugin MultiThreading because of the large amount of boilerplate code for the multi threading management, that would pollute the initial implementation in `HexahedronFemForceField`. I have some ideas to reduce this code, but it requires work on the task scheduler.; - A small part of the code is duplicated from `HexahedronFemForceField`.; - Initially, I wanted to accelerate the execution of the Conjugate Gradient for `GraphScattered` types. It is not possible to propose a generic multi-threaded acceleration for all force fields: for FEM, the most time consuming step in the CG is `ForceField::addDForce`. This is the method to accelerate. The downside is that it has to be done for every force field... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it doe",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2177
https://github.com/sofa-framework/sofa/pull/2177:1659,Energy Efficiency,schedul,scheduler,1659," 0.01 .....CG-setSystemMBKMatrix; 4 1.66 1 17.79 26.51 18.56 0.78 18.56 87.62 ....MBKSolve; 5 1.68 1 17.76 26.48 18.53 0.77 18.53 87.49 .....CG-Solve; 4 20.22 1 0.01 0.04 0.01 0 0.01 0.05 ....UpdateVAndX. ```; ## Multi threaded; ```; 8.40483 s ( 118.979 FPS); LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.01 1 5.32 26.82 7.42 1.31 7.42 88.31 ...Mechanical; 4 0.02 1 0.22 0.88 0.32 0.07 0.32 3.80 ....ComputeForce; 4 0.34 1 0.19 0.70 0.28 0.06 0.28 3.29 ....ComputeRHTerm; 4 0.61 1 0 0.07 0.01 0 0.01 0.06 ....MBKBuild; 5 0.61 1 0 0.07 0 0 0 0.03 .....CG-setSystemMBKMatrix; 4 0.62 1 4.87 25.85 6.80 1.22 6.80 80.84 ....MBKSolve; 5 0.64 1 4.84 25.82 6.77 1.22 6.77 80.51 .....CG-Solve; 4 7.42 1 0.01 0.02 0.01 0 0.01 0.13 ....UpdateVAndX. ```. # Comments. - Code is in plugin MultiThreading because of the large amount of boilerplate code for the multi threading management, that would pollute the initial implementation in `HexahedronFemForceField`. I have some ideas to reduce this code, but it requires work on the task scheduler.; - A small part of the code is duplicated from `HexahedronFemForceField`.; - Initially, I wanted to accelerate the execution of the Conjugate Gradient for `GraphScattered` types. It is not possible to propose a generic multi-threaded acceleration for all force fields: for FEM, the most time consuming step in the CG is `ForceField::addDForce`. This is the method to accelerate. The downside is that it has to be done for every force field... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it doe",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2177
https://github.com/sofa-framework/sofa/pull/2177:1405,Modifiability,plugin,plugin,1405," ....ComputeForce; 4 0.91 1 0.70 1.38 0.74 0.05 0.74 3.51 ....ComputeRHTerm; 4 1.66 1 0 0.03 0 0 0 0.02 ....MBKBuild; 5 1.66 1 0 0.02 0 0 0 0.01 .....CG-setSystemMBKMatrix; 4 1.66 1 17.79 26.51 18.56 0.78 18.56 87.62 ....MBKSolve; 5 1.68 1 17.76 26.48 18.53 0.77 18.53 87.49 .....CG-Solve; 4 20.22 1 0.01 0.04 0.01 0 0.01 0.05 ....UpdateVAndX. ```; ## Multi threaded; ```; 8.40483 s ( 118.979 FPS); LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.01 1 5.32 26.82 7.42 1.31 7.42 88.31 ...Mechanical; 4 0.02 1 0.22 0.88 0.32 0.07 0.32 3.80 ....ComputeForce; 4 0.34 1 0.19 0.70 0.28 0.06 0.28 3.29 ....ComputeRHTerm; 4 0.61 1 0 0.07 0.01 0 0.01 0.06 ....MBKBuild; 5 0.61 1 0 0.07 0 0 0 0.03 .....CG-setSystemMBKMatrix; 4 0.62 1 4.87 25.85 6.80 1.22 6.80 80.84 ....MBKSolve; 5 0.64 1 4.84 25.82 6.77 1.22 6.77 80.51 .....CG-Solve; 4 7.42 1 0.01 0.02 0.01 0 0.01 0.13 ....UpdateVAndX. ```. # Comments. - Code is in plugin MultiThreading because of the large amount of boilerplate code for the multi threading management, that would pollute the initial implementation in `HexahedronFemForceField`. I have some ideas to reduce this code, but it requires work on the task scheduler.; - A small part of the code is duplicated from `HexahedronFemForceField`.; - Initially, I wanted to accelerate the execution of the Conjugate Gradient for `GraphScattered` types. It is not possible to propose a generic multi-threaded acceleration for all force fields: for FEM, the most time consuming step in the CG is `ForceField::addDForce`. This is the method to accelerate. The downside is that it has to be done for every force field... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers wil",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2177
https://github.com/sofa-framework/sofa/pull/2177:1889,Performance,multi-thread,multi-threaded,1889,"05 ....UpdateVAndX. ```; ## Multi threaded; ```; 8.40483 s ( 118.979 FPS); LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.01 1 5.32 26.82 7.42 1.31 7.42 88.31 ...Mechanical; 4 0.02 1 0.22 0.88 0.32 0.07 0.32 3.80 ....ComputeForce; 4 0.34 1 0.19 0.70 0.28 0.06 0.28 3.29 ....ComputeRHTerm; 4 0.61 1 0 0.07 0.01 0 0.01 0.06 ....MBKBuild; 5 0.61 1 0 0.07 0 0 0 0.03 .....CG-setSystemMBKMatrix; 4 0.62 1 4.87 25.85 6.80 1.22 6.80 80.84 ....MBKSolve; 5 0.64 1 4.84 25.82 6.77 1.22 6.77 80.51 .....CG-Solve; 4 7.42 1 0.01 0.02 0.01 0 0.01 0.13 ....UpdateVAndX. ```. # Comments. - Code is in plugin MultiThreading because of the large amount of boilerplate code for the multi threading management, that would pollute the initial implementation in `HexahedronFemForceField`. I have some ideas to reduce this code, but it requires work on the task scheduler.; - A small part of the code is duplicated from `HexahedronFemForceField`.; - Initially, I wanted to accelerate the execution of the Conjugate Gradient for `GraphScattered` types. It is not possible to propose a generic multi-threaded acceleration for all force fields: for FEM, the most time consuming step in the CG is `ForceField::addDForce`. This is the method to accelerate. The downside is that it has to be done for every force field... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2177
https://github.com/sofa-framework/sofa/pull/2177:2276,Security,Certificate,Certificate,2276,"05 ....UpdateVAndX. ```; ## Multi threaded; ```; 8.40483 s ( 118.979 FPS); LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.01 1 5.32 26.82 7.42 1.31 7.42 88.31 ...Mechanical; 4 0.02 1 0.22 0.88 0.32 0.07 0.32 3.80 ....ComputeForce; 4 0.34 1 0.19 0.70 0.28 0.06 0.28 3.29 ....ComputeRHTerm; 4 0.61 1 0 0.07 0.01 0 0.01 0.06 ....MBKBuild; 5 0.61 1 0 0.07 0 0 0 0.03 .....CG-setSystemMBKMatrix; 4 0.62 1 4.87 25.85 6.80 1.22 6.80 80.84 ....MBKSolve; 5 0.64 1 4.84 25.82 6.77 1.22 6.77 80.51 .....CG-Solve; 4 7.42 1 0.01 0.02 0.01 0 0.01 0.13 ....UpdateVAndX. ```. # Comments. - Code is in plugin MultiThreading because of the large amount of boilerplate code for the multi threading management, that would pollute the initial implementation in `HexahedronFemForceField`. I have some ideas to reduce this code, but it requires work on the task scheduler.; - A small part of the code is duplicated from `HexahedronFemForceField`.; - Initially, I wanted to accelerate the execution of the Conjugate Gradient for `GraphScattered` types. It is not possible to propose a generic multi-threaded acceleration for all force fields: for FEM, the most time consuming step in the CG is `ForceField::addDForce`. This is the method to accelerate. The downside is that it has to be done for every force field... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2177
https://github.com/sofa-framework/sofa/pull/2177:2387,Security,certificate,certificate-of-origin-dco,2387,"05 ....UpdateVAndX. ```; ## Multi threaded; ```; 8.40483 s ( 118.979 FPS); LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.01 1 5.32 26.82 7.42 1.31 7.42 88.31 ...Mechanical; 4 0.02 1 0.22 0.88 0.32 0.07 0.32 3.80 ....ComputeForce; 4 0.34 1 0.19 0.70 0.28 0.06 0.28 3.29 ....ComputeRHTerm; 4 0.61 1 0 0.07 0.01 0 0.01 0.06 ....MBKBuild; 5 0.61 1 0 0.07 0 0 0 0.03 .....CG-setSystemMBKMatrix; 4 0.62 1 4.87 25.85 6.80 1.22 6.80 80.84 ....MBKSolve; 5 0.64 1 4.84 25.82 6.77 1.22 6.77 80.51 .....CG-Solve; 4 7.42 1 0.01 0.02 0.01 0 0.01 0.13 ....UpdateVAndX. ```. # Comments. - Code is in plugin MultiThreading because of the large amount of boilerplate code for the multi threading management, that would pollute the initial implementation in `HexahedronFemForceField`. I have some ideas to reduce this code, but it requires work on the task scheduler.; - A small part of the code is duplicated from `HexahedronFemForceField`.; - Initially, I wanted to accelerate the execution of the Conjugate Gradient for `GraphScattered` types. It is not possible to propose a generic multi-threaded acceleration for all force fields: for FEM, the most time consuming step in the CG is `ForceField::addDForce`. This is the method to accelerate. The downside is that it has to be done for every force field... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2177
https://github.com/sofa-framework/sofa/pull/2177:2652,Testability,test,test,2652,"05 ....UpdateVAndX. ```; ## Multi threaded; ```; 8.40483 s ( 118.979 FPS); LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.01 1 5.32 26.82 7.42 1.31 7.42 88.31 ...Mechanical; 4 0.02 1 0.22 0.88 0.32 0.07 0.32 3.80 ....ComputeForce; 4 0.34 1 0.19 0.70 0.28 0.06 0.28 3.29 ....ComputeRHTerm; 4 0.61 1 0 0.07 0.01 0 0.01 0.06 ....MBKBuild; 5 0.61 1 0 0.07 0 0 0 0.03 .....CG-setSystemMBKMatrix; 4 0.62 1 4.87 25.85 6.80 1.22 6.80 80.84 ....MBKSolve; 5 0.64 1 4.84 25.82 6.77 1.22 6.77 80.51 .....CG-Solve; 4 7.42 1 0.01 0.02 0.01 0 0.01 0.13 ....UpdateVAndX. ```. # Comments. - Code is in plugin MultiThreading because of the large amount of boilerplate code for the multi threading management, that would pollute the initial implementation in `HexahedronFemForceField`. I have some ideas to reduce this code, but it requires work on the task scheduler.; - A small part of the code is duplicated from `HexahedronFemForceField`.; - Initially, I wanted to accelerate the execution of the Conjugate Gradient for `GraphScattered` types. It is not possible to propose a generic multi-threaded acceleration for all force fields: for FEM, the most time consuming step in the CG is `ForceField::addDForce`. This is the method to accelerate. The downside is that it has to be done for every force field... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2177
https://github.com/sofa-framework/sofa/pull/2177:2701,Testability,test,test,2701,"05 ....UpdateVAndX. ```; ## Multi threaded; ```; 8.40483 s ( 118.979 FPS); LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.01 1 5.32 26.82 7.42 1.31 7.42 88.31 ...Mechanical; 4 0.02 1 0.22 0.88 0.32 0.07 0.32 3.80 ....ComputeForce; 4 0.34 1 0.19 0.70 0.28 0.06 0.28 3.29 ....ComputeRHTerm; 4 0.61 1 0 0.07 0.01 0 0.01 0.06 ....MBKBuild; 5 0.61 1 0 0.07 0 0 0 0.03 .....CG-setSystemMBKMatrix; 4 0.62 1 4.87 25.85 6.80 1.22 6.80 80.84 ....MBKSolve; 5 0.64 1 4.84 25.82 6.77 1.22 6.77 80.51 .....CG-Solve; 4 7.42 1 0.01 0.02 0.01 0 0.01 0.13 ....UpdateVAndX. ```. # Comments. - Code is in plugin MultiThreading because of the large amount of boilerplate code for the multi threading management, that would pollute the initial implementation in `HexahedronFemForceField`. I have some ideas to reduce this code, but it requires work on the task scheduler.; - A small part of the code is duplicated from `HexahedronFemForceField`.; - Initially, I wanted to accelerate the execution of the Conjugate Gradient for `GraphScattered` types. It is not possible to propose a generic multi-threaded acceleration for all force fields: for FEM, the most time consuming step in the CG is `ForceField::addDForce`. This is the method to accelerate. The downside is that it has to be done for every force field... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2177
https://github.com/sofa-framework/sofa/pull/2178:917,Availability,failure,failures,917,"- `DiscreteIntersection::testIntersection` and `DiscreteIntersection::computeIntersection` are made virtual, so derived classes can override them; - Comments; - Simplification; - Removed unused code (draw, unused variables etc); - Fix `MinProximityIntersection::computeIntersection` and `NewProximityIntersection::computeIntersection` on cubes; - Fix compilation warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2178
https://github.com/sofa-framework/sofa/pull/2178:966,Availability,failure,failures,966,"- `DiscreteIntersection::testIntersection` and `DiscreteIntersection::computeIntersection` are made virtual, so derived classes can override them; - Comments; - Simplification; - Removed unused code (draw, unused variables etc); - Fix `MinProximityIntersection::computeIntersection` and `NewProximityIntersection::computeIntersection` on cubes; - Fix compilation warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2178
https://github.com/sofa-framework/sofa/pull/2178:213,Modifiability,variab,variables,213,"- `DiscreteIntersection::testIntersection` and `DiscreteIntersection::computeIntersection` are made virtual, so derived classes can override them; - Comments; - Simplification; - Removed unused code (draw, unused variables etc); - Fix `MinProximityIntersection::computeIntersection` and `NewProximityIntersection::computeIntersection` on cubes; - Fix compilation warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2178
https://github.com/sofa-framework/sofa/pull/2178:536,Security,Certificate,Certificate,536,"- `DiscreteIntersection::testIntersection` and `DiscreteIntersection::computeIntersection` are made virtual, so derived classes can override them; - Comments; - Simplification; - Removed unused code (draw, unused variables etc); - Fix `MinProximityIntersection::computeIntersection` and `NewProximityIntersection::computeIntersection` on cubes; - Fix compilation warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2178
https://github.com/sofa-framework/sofa/pull/2178:647,Security,certificate,certificate-of-origin-dco,647,"- `DiscreteIntersection::testIntersection` and `DiscreteIntersection::computeIntersection` are made virtual, so derived classes can override them; - Comments; - Simplification; - Removed unused code (draw, unused variables etc); - Fix `MinProximityIntersection::computeIntersection` and `NewProximityIntersection::computeIntersection` on cubes; - Fix compilation warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2178
https://github.com/sofa-framework/sofa/pull/2178:25,Testability,test,testIntersection,25,"- `DiscreteIntersection::testIntersection` and `DiscreteIntersection::computeIntersection` are made virtual, so derived classes can override them; - Comments; - Simplification; - Removed unused code (draw, unused variables etc); - Fix `MinProximityIntersection::computeIntersection` and `NewProximityIntersection::computeIntersection` on cubes; - Fix compilation warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2178
https://github.com/sofa-framework/sofa/pull/2178:912,Testability,test,test,912,"- `DiscreteIntersection::testIntersection` and `DiscreteIntersection::computeIntersection` are made virtual, so derived classes can override them; - Comments; - Simplification; - Removed unused code (draw, unused variables etc); - Fix `MinProximityIntersection::computeIntersection` and `NewProximityIntersection::computeIntersection` on cubes; - Fix compilation warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2178
https://github.com/sofa-framework/sofa/pull/2178:961,Testability,test,test,961,"- `DiscreteIntersection::testIntersection` and `DiscreteIntersection::computeIntersection` are made virtual, so derived classes can override them; - Comments; - Simplification; - Removed unused code (draw, unused variables etc); - Fix `MinProximityIntersection::computeIntersection` and `NewProximityIntersection::computeIntersection` on cubes; - Fix compilation warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2178
https://github.com/sofa-framework/sofa/pull/2178:161,Usability,Simpl,Simplification,161,"- `DiscreteIntersection::testIntersection` and `DiscreteIntersection::computeIntersection` are made virtual, so derived classes can override them; - Comments; - Simplification; - Removed unused code (draw, unused variables etc); - Fix `MinProximityIntersection::computeIntersection` and `NewProximityIntersection::computeIntersection` on cubes; - Fix compilation warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2178
https://github.com/sofa-framework/sofa/pull/2179:1554,Availability,failure,failures,1554,"⚠! Uber PR incoming! ⚠; (Will basically conflict every time a branch is merged 🤪) . This PR generalizes the use of the Sofa.Type module (with things formerly in SofaHelper, SofaDefaulttype and SofaCore).; E.g:; - helper::fixed_array becomes type::fixed_array; - defaulttype::Vec becomes type::Vec; - defaulttype::Quat and helper::Quater becomes type::Quat (and typedef *Quaternion* is removed); - helper::types::RGBAColor becomes type::RGBAColor; - and many more; More info in #1521 . These renames was handled in Sofa.Compat to be the less problematic possible while converting.; Now for the release of v21.06, it is logical to use the correct namespaces/headers. Big Warning though: the Sofa.Compat is still here for the external plugins, but as the headers/file inclusions changes, it is highly probable that they will break at compilation: a lot of people does not ""include what they use"" and what relying on the previous inclusions. Later TODO: add a cmake option to make the use of Sofa.Compat optional. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2179
https://github.com/sofa-framework/sofa/pull/2179:1603,Availability,failure,failures,1603,"⚠! Uber PR incoming! ⚠; (Will basically conflict every time a branch is merged 🤪) . This PR generalizes the use of the Sofa.Type module (with things formerly in SofaHelper, SofaDefaulttype and SofaCore).; E.g:; - helper::fixed_array becomes type::fixed_array; - defaulttype::Vec becomes type::Vec; - defaulttype::Quat and helper::Quater becomes type::Quat (and typedef *Quaternion* is removed); - helper::types::RGBAColor becomes type::RGBAColor; - and many more; More info in #1521 . These renames was handled in Sofa.Compat to be the less problematic possible while converting.; Now for the release of v21.06, it is logical to use the correct namespaces/headers. Big Warning though: the Sofa.Compat is still here for the external plugins, but as the headers/file inclusions changes, it is highly probable that they will break at compilation: a lot of people does not ""include what they use"" and what relying on the previous inclusions. Later TODO: add a cmake option to make the use of Sofa.Compat optional. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2179
https://github.com/sofa-framework/sofa/pull/2179:593,Deployability,release,release,593,"⚠! Uber PR incoming! ⚠; (Will basically conflict every time a branch is merged 🤪) . This PR generalizes the use of the Sofa.Type module (with things formerly in SofaHelper, SofaDefaulttype and SofaCore).; E.g:; - helper::fixed_array becomes type::fixed_array; - defaulttype::Vec becomes type::Vec; - defaulttype::Quat and helper::Quater becomes type::Quat (and typedef *Quaternion* is removed); - helper::types::RGBAColor becomes type::RGBAColor; - and many more; More info in #1521 . These renames was handled in Sofa.Compat to be the less problematic possible while converting.; Now for the release of v21.06, it is logical to use the correct namespaces/headers. Big Warning though: the Sofa.Compat is still here for the external plugins, but as the headers/file inclusions changes, it is highly probable that they will break at compilation: a lot of people does not ""include what they use"" and what relying on the previous inclusions. Later TODO: add a cmake option to make the use of Sofa.Compat optional. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2179
https://github.com/sofa-framework/sofa/pull/2179:732,Modifiability,plugin,plugins,732,"⚠! Uber PR incoming! ⚠; (Will basically conflict every time a branch is merged 🤪) . This PR generalizes the use of the Sofa.Type module (with things formerly in SofaHelper, SofaDefaulttype and SofaCore).; E.g:; - helper::fixed_array becomes type::fixed_array; - defaulttype::Vec becomes type::Vec; - defaulttype::Quat and helper::Quater becomes type::Quat (and typedef *Quaternion* is removed); - helper::types::RGBAColor becomes type::RGBAColor; - and many more; More info in #1521 . These renames was handled in Sofa.Compat to be the less problematic possible while converting.; Now for the release of v21.06, it is logical to use the correct namespaces/headers. Big Warning though: the Sofa.Compat is still here for the external plugins, but as the headers/file inclusions changes, it is highly probable that they will break at compilation: a lot of people does not ""include what they use"" and what relying on the previous inclusions. Later TODO: add a cmake option to make the use of Sofa.Compat optional. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2179
https://github.com/sofa-framework/sofa/pull/2179:1173,Security,Certificate,Certificate,1173,"⚠! Uber PR incoming! ⚠; (Will basically conflict every time a branch is merged 🤪) . This PR generalizes the use of the Sofa.Type module (with things formerly in SofaHelper, SofaDefaulttype and SofaCore).; E.g:; - helper::fixed_array becomes type::fixed_array; - defaulttype::Vec becomes type::Vec; - defaulttype::Quat and helper::Quater becomes type::Quat (and typedef *Quaternion* is removed); - helper::types::RGBAColor becomes type::RGBAColor; - and many more; More info in #1521 . These renames was handled in Sofa.Compat to be the less problematic possible while converting.; Now for the release of v21.06, it is logical to use the correct namespaces/headers. Big Warning though: the Sofa.Compat is still here for the external plugins, but as the headers/file inclusions changes, it is highly probable that they will break at compilation: a lot of people does not ""include what they use"" and what relying on the previous inclusions. Later TODO: add a cmake option to make the use of Sofa.Compat optional. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2179
https://github.com/sofa-framework/sofa/pull/2179:1284,Security,certificate,certificate-of-origin-dco,1284,"⚠! Uber PR incoming! ⚠; (Will basically conflict every time a branch is merged 🤪) . This PR generalizes the use of the Sofa.Type module (with things formerly in SofaHelper, SofaDefaulttype and SofaCore).; E.g:; - helper::fixed_array becomes type::fixed_array; - defaulttype::Vec becomes type::Vec; - defaulttype::Quat and helper::Quater becomes type::Quat (and typedef *Quaternion* is removed); - helper::types::RGBAColor becomes type::RGBAColor; - and many more; More info in #1521 . These renames was handled in Sofa.Compat to be the less problematic possible while converting.; Now for the release of v21.06, it is logical to use the correct namespaces/headers. Big Warning though: the Sofa.Compat is still here for the external plugins, but as the headers/file inclusions changes, it is highly probable that they will break at compilation: a lot of people does not ""include what they use"" and what relying on the previous inclusions. Later TODO: add a cmake option to make the use of Sofa.Compat optional. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2179
https://github.com/sofa-framework/sofa/pull/2179:618,Testability,log,logical,618,"⚠! Uber PR incoming! ⚠; (Will basically conflict every time a branch is merged 🤪) . This PR generalizes the use of the Sofa.Type module (with things formerly in SofaHelper, SofaDefaulttype and SofaCore).; E.g:; - helper::fixed_array becomes type::fixed_array; - defaulttype::Vec becomes type::Vec; - defaulttype::Quat and helper::Quater becomes type::Quat (and typedef *Quaternion* is removed); - helper::types::RGBAColor becomes type::RGBAColor; - and many more; More info in #1521 . These renames was handled in Sofa.Compat to be the less problematic possible while converting.; Now for the release of v21.06, it is logical to use the correct namespaces/headers. Big Warning though: the Sofa.Compat is still here for the external plugins, but as the headers/file inclusions changes, it is highly probable that they will break at compilation: a lot of people does not ""include what they use"" and what relying on the previous inclusions. Later TODO: add a cmake option to make the use of Sofa.Compat optional. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2179
https://github.com/sofa-framework/sofa/pull/2179:1549,Testability,test,test,1549,"⚠! Uber PR incoming! ⚠; (Will basically conflict every time a branch is merged 🤪) . This PR generalizes the use of the Sofa.Type module (with things formerly in SofaHelper, SofaDefaulttype and SofaCore).; E.g:; - helper::fixed_array becomes type::fixed_array; - defaulttype::Vec becomes type::Vec; - defaulttype::Quat and helper::Quater becomes type::Quat (and typedef *Quaternion* is removed); - helper::types::RGBAColor becomes type::RGBAColor; - and many more; More info in #1521 . These renames was handled in Sofa.Compat to be the less problematic possible while converting.; Now for the release of v21.06, it is logical to use the correct namespaces/headers. Big Warning though: the Sofa.Compat is still here for the external plugins, but as the headers/file inclusions changes, it is highly probable that they will break at compilation: a lot of people does not ""include what they use"" and what relying on the previous inclusions. Later TODO: add a cmake option to make the use of Sofa.Compat optional. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2179
https://github.com/sofa-framework/sofa/pull/2179:1598,Testability,test,test,1598,"⚠! Uber PR incoming! ⚠; (Will basically conflict every time a branch is merged 🤪) . This PR generalizes the use of the Sofa.Type module (with things formerly in SofaHelper, SofaDefaulttype and SofaCore).; E.g:; - helper::fixed_array becomes type::fixed_array; - defaulttype::Vec becomes type::Vec; - defaulttype::Quat and helper::Quater becomes type::Quat (and typedef *Quaternion* is removed); - helper::types::RGBAColor becomes type::RGBAColor; - and many more; More info in #1521 . These renames was handled in Sofa.Compat to be the less problematic possible while converting.; Now for the release of v21.06, it is logical to use the correct namespaces/headers. Big Warning though: the Sofa.Compat is still here for the external plugins, but as the headers/file inclusions changes, it is highly probable that they will break at compilation: a lot of people does not ""include what they use"" and what relying on the previous inclusions. Later TODO: add a cmake option to make the use of Sofa.Compat optional. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2179
https://github.com/sofa-framework/sofa/pull/2180:615,Availability,failure,failures,615,"![](https://i.ibb.co/hd3qhmc/Screenshot-from-2021-06-15-18-46-33.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2180
https://github.com/sofa-framework/sofa/pull/2180:664,Availability,failure,failures,664,"![](https://i.ibb.co/hd3qhmc/Screenshot-from-2021-06-15-18-46-33.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2180
https://github.com/sofa-framework/sofa/pull/2180:234,Security,Certificate,Certificate,234,"![](https://i.ibb.co/hd3qhmc/Screenshot-from-2021-06-15-18-46-33.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2180
https://github.com/sofa-framework/sofa/pull/2180:345,Security,certificate,certificate-of-origin-dco,345,"![](https://i.ibb.co/hd3qhmc/Screenshot-from-2021-06-15-18-46-33.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2180
https://github.com/sofa-framework/sofa/pull/2180:610,Testability,test,test,610,"![](https://i.ibb.co/hd3qhmc/Screenshot-from-2021-06-15-18-46-33.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2180
https://github.com/sofa-framework/sofa/pull/2180:659,Testability,test,test,659,"![](https://i.ibb.co/hd3qhmc/Screenshot-from-2021-06-15-18-46-33.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2180
https://github.com/sofa-framework/sofa/pull/2181:77,Availability,error,error,77,"Apparently GCC11, by default, treats the ""maybe uninitialized"" warning as an error. ; This occurs in our version of gtest.; ref: https://github.com/google/googletest/issues/3219. I did not consider updating gtest itself as it could be bothersome.; And I think the ""maybe uninitialized"" warning as an error itself is good ; (therefore no command line option fix to consider it only as a warning). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2181
https://github.com/sofa-framework/sofa/pull/2181:300,Availability,error,error,300,"Apparently GCC11, by default, treats the ""maybe uninitialized"" warning as an error. ; This occurs in our version of gtest.; ref: https://github.com/google/googletest/issues/3219. I did not consider updating gtest itself as it could be bothersome.; And I think the ""maybe uninitialized"" warning as an error itself is good ; (therefore no command line option fix to consider it only as a warning). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2181
https://github.com/sofa-framework/sofa/pull/2181:940,Availability,failure,failures,940,"Apparently GCC11, by default, treats the ""maybe uninitialized"" warning as an error. ; This occurs in our version of gtest.; ref: https://github.com/google/googletest/issues/3219. I did not consider updating gtest itself as it could be bothersome.; And I think the ""maybe uninitialized"" warning as an error itself is good ; (therefore no command line option fix to consider it only as a warning). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2181
https://github.com/sofa-framework/sofa/pull/2181:989,Availability,failure,failures,989,"Apparently GCC11, by default, treats the ""maybe uninitialized"" warning as an error. ; This occurs in our version of gtest.; ref: https://github.com/google/googletest/issues/3219. I did not consider updating gtest itself as it could be bothersome.; And I think the ""maybe uninitialized"" warning as an error itself is good ; (therefore no command line option fix to consider it only as a warning). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2181
https://github.com/sofa-framework/sofa/pull/2181:559,Security,Certificate,Certificate,559,"Apparently GCC11, by default, treats the ""maybe uninitialized"" warning as an error. ; This occurs in our version of gtest.; ref: https://github.com/google/googletest/issues/3219. I did not consider updating gtest itself as it could be bothersome.; And I think the ""maybe uninitialized"" warning as an error itself is good ; (therefore no command line option fix to consider it only as a warning). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2181
https://github.com/sofa-framework/sofa/pull/2181:670,Security,certificate,certificate-of-origin-dco,670,"Apparently GCC11, by default, treats the ""maybe uninitialized"" warning as an error. ; This occurs in our version of gtest.; ref: https://github.com/google/googletest/issues/3219. I did not consider updating gtest itself as it could be bothersome.; And I think the ""maybe uninitialized"" warning as an error itself is good ; (therefore no command line option fix to consider it only as a warning). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2181
https://github.com/sofa-framework/sofa/pull/2181:935,Testability,test,test,935,"Apparently GCC11, by default, treats the ""maybe uninitialized"" warning as an error. ; This occurs in our version of gtest.; ref: https://github.com/google/googletest/issues/3219. I did not consider updating gtest itself as it could be bothersome.; And I think the ""maybe uninitialized"" warning as an error itself is good ; (therefore no command line option fix to consider it only as a warning). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2181
https://github.com/sofa-framework/sofa/pull/2181:984,Testability,test,test,984,"Apparently GCC11, by default, treats the ""maybe uninitialized"" warning as an error. ; This occurs in our version of gtest.; ref: https://github.com/google/googletest/issues/3219. I did not consider updating gtest itself as it could be bothersome.; And I think the ""maybe uninitialized"" warning as an error itself is good ; (therefore no command line option fix to consider it only as a warning). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2181
https://github.com/sofa-framework/sofa/issues/2182:250,Availability,error,error,250,A warning as been introduce in PR #2131 ; ```; EdgeSetGeometryAlgorithms.inl:935:9: warning: logical not is only applied to the left hand side of this comparison [-Wlogical-not-parentheses]; if (!abs(deno) <= EPS); ```. This is a potential source of error.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2182
https://github.com/sofa-framework/sofa/issues/2182:93,Testability,log,logical,93,A warning as been introduce in PR #2131 ; ```; EdgeSetGeometryAlgorithms.inl:935:9: warning: logical not is only applied to the left hand side of this comparison [-Wlogical-not-parentheses]; if (!abs(deno) <= EPS); ```. This is a potential source of error.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2182
https://github.com/sofa-framework/sofa/pull/2183:870,Availability,failure,failures,870,"Check more values in DiagonalMass_test to be sure TotalMass, Density and VertexMass are well init from inputs. This reveals one bug when init using vertexMass resulting in one failing test:; UnitTests.SofaBaseMechanics_test/DiagonalMass3_test.checkMassDensityTotalMassFromVertexMass_Tetra. It will be fixed in next PR #2186 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2183
https://github.com/sofa-framework/sofa/pull/2183:919,Availability,failure,failures,919,"Check more values in DiagonalMass_test to be sure TotalMass, Density and VertexMass are well init from inputs. This reveals one bug when init using vertexMass resulting in one failing test:; UnitTests.SofaBaseMechanics_test/DiagonalMass3_test.checkMassDensityTotalMassFromVertexMass_Tetra. It will be fixed in next PR #2186 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2183
https://github.com/sofa-framework/sofa/pull/2183:489,Security,Certificate,Certificate,489,"Check more values in DiagonalMass_test to be sure TotalMass, Density and VertexMass are well init from inputs. This reveals one bug when init using vertexMass resulting in one failing test:; UnitTests.SofaBaseMechanics_test/DiagonalMass3_test.checkMassDensityTotalMassFromVertexMass_Tetra. It will be fixed in next PR #2186 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2183
https://github.com/sofa-framework/sofa/pull/2183:600,Security,certificate,certificate-of-origin-dco,600,"Check more values in DiagonalMass_test to be sure TotalMass, Density and VertexMass are well init from inputs. This reveals one bug when init using vertexMass resulting in one failing test:; UnitTests.SofaBaseMechanics_test/DiagonalMass3_test.checkMassDensityTotalMassFromVertexMass_Tetra. It will be fixed in next PR #2186 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2183
https://github.com/sofa-framework/sofa/pull/2183:184,Testability,test,test,184,"Check more values in DiagonalMass_test to be sure TotalMass, Density and VertexMass are well init from inputs. This reveals one bug when init using vertexMass resulting in one failing test:; UnitTests.SofaBaseMechanics_test/DiagonalMass3_test.checkMassDensityTotalMassFromVertexMass_Tetra. It will be fixed in next PR #2186 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2183
https://github.com/sofa-framework/sofa/pull/2183:865,Testability,test,test,865,"Check more values in DiagonalMass_test to be sure TotalMass, Density and VertexMass are well init from inputs. This reveals one bug when init using vertexMass resulting in one failing test:; UnitTests.SofaBaseMechanics_test/DiagonalMass3_test.checkMassDensityTotalMassFromVertexMass_Tetra. It will be fixed in next PR #2186 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2183
https://github.com/sofa-framework/sofa/pull/2183:914,Testability,test,test,914,"Check more values in DiagonalMass_test to be sure TotalMass, Density and VertexMass are well init from inputs. This reveals one bug when init using vertexMass resulting in one failing test:; UnitTests.SofaBaseMechanics_test/DiagonalMass3_test.checkMassDensityTotalMassFromVertexMass_Tetra. It will be fixed in next PR #2186 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2183
https://github.com/sofa-framework/sofa/pull/2184:556,Availability,failure,failures,556,"fix #2182 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2184
https://github.com/sofa-framework/sofa/pull/2184:605,Availability,failure,failures,605,"fix #2182 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2184
https://github.com/sofa-framework/sofa/pull/2184:175,Security,Certificate,Certificate,175,"fix #2182 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2184
https://github.com/sofa-framework/sofa/pull/2184:286,Security,certificate,certificate-of-origin-dco,286,"fix #2182 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2184
https://github.com/sofa-framework/sofa/pull/2184:551,Testability,test,test,551,"fix #2182 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2184
https://github.com/sofa-framework/sofa/pull/2184:600,Testability,test,test,600,"fix #2182 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2184
https://github.com/sofa-framework/sofa/pull/2185:703,Availability,failure,failures,703,"![VonMisesStress_TetrahedralCorotationalFEMForceField](https://user-images.githubusercontent.com/79743770/122370619-7cf1db80-cf5f-11eb-9304-4dcfa77504c4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2185
https://github.com/sofa-framework/sofa/pull/2185:752,Availability,failure,failures,752,"![VonMisesStress_TetrahedralCorotationalFEMForceField](https://user-images.githubusercontent.com/79743770/122370619-7cf1db80-cf5f-11eb-9304-4dcfa77504c4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2185
https://github.com/sofa-framework/sofa/pull/2185:322,Security,Certificate,Certificate,322,"![VonMisesStress_TetrahedralCorotationalFEMForceField](https://user-images.githubusercontent.com/79743770/122370619-7cf1db80-cf5f-11eb-9304-4dcfa77504c4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2185
https://github.com/sofa-framework/sofa/pull/2185:433,Security,certificate,certificate-of-origin-dco,433,"![VonMisesStress_TetrahedralCorotationalFEMForceField](https://user-images.githubusercontent.com/79743770/122370619-7cf1db80-cf5f-11eb-9304-4dcfa77504c4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2185
https://github.com/sofa-framework/sofa/pull/2185:698,Testability,test,test,698,"![VonMisesStress_TetrahedralCorotationalFEMForceField](https://user-images.githubusercontent.com/79743770/122370619-7cf1db80-cf5f-11eb-9304-4dcfa77504c4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2185
https://github.com/sofa-framework/sofa/pull/2185:747,Testability,test,test,747,"![VonMisesStress_TetrahedralCorotationalFEMForceField](https://user-images.githubusercontent.com/79743770/122370619-7cf1db80-cf5f-11eb-9304-4dcfa77504c4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2185
https://github.com/sofa-framework/sofa/pull/2186:881,Availability,failure,failures,881,"Add a new method to compute vertexMass using an input density and rework the different init to avoid calling several time the method computeMass which should not be used outside from the class. Fix test UnitTests.SofaBaseMechanics_test/DiagonalMass3_test.checkMassDensityTotalMassFromVertexMass_Tetra; which is failling since PR #2183 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2186
https://github.com/sofa-framework/sofa/pull/2186:930,Availability,failure,failures,930,"Add a new method to compute vertexMass using an input density and rework the different init to avoid calling several time the method computeMass which should not be used outside from the class. Fix test UnitTests.SofaBaseMechanics_test/DiagonalMass3_test.checkMassDensityTotalMassFromVertexMass_Tetra; which is failling since PR #2183 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2186
https://github.com/sofa-framework/sofa/pull/2186:95,Safety,avoid,avoid,95,"Add a new method to compute vertexMass using an input density and rework the different init to avoid calling several time the method computeMass which should not be used outside from the class. Fix test UnitTests.SofaBaseMechanics_test/DiagonalMass3_test.checkMassDensityTotalMassFromVertexMass_Tetra; which is failling since PR #2183 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2186
https://github.com/sofa-framework/sofa/pull/2186:500,Security,Certificate,Certificate,500,"Add a new method to compute vertexMass using an input density and rework the different init to avoid calling several time the method computeMass which should not be used outside from the class. Fix test UnitTests.SofaBaseMechanics_test/DiagonalMass3_test.checkMassDensityTotalMassFromVertexMass_Tetra; which is failling since PR #2183 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2186
https://github.com/sofa-framework/sofa/pull/2186:611,Security,certificate,certificate-of-origin-dco,611,"Add a new method to compute vertexMass using an input density and rework the different init to avoid calling several time the method computeMass which should not be used outside from the class. Fix test UnitTests.SofaBaseMechanics_test/DiagonalMass3_test.checkMassDensityTotalMassFromVertexMass_Tetra; which is failling since PR #2183 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2186
https://github.com/sofa-framework/sofa/pull/2186:198,Testability,test,test,198,"Add a new method to compute vertexMass using an input density and rework the different init to avoid calling several time the method computeMass which should not be used outside from the class. Fix test UnitTests.SofaBaseMechanics_test/DiagonalMass3_test.checkMassDensityTotalMassFromVertexMass_Tetra; which is failling since PR #2183 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2186
https://github.com/sofa-framework/sofa/pull/2186:876,Testability,test,test,876,"Add a new method to compute vertexMass using an input density and rework the different init to avoid calling several time the method computeMass which should not be used outside from the class. Fix test UnitTests.SofaBaseMechanics_test/DiagonalMass3_test.checkMassDensityTotalMassFromVertexMass_Tetra; which is failling since PR #2183 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2186
https://github.com/sofa-framework/sofa/pull/2186:925,Testability,test,test,925,"Add a new method to compute vertexMass using an input density and rework the different init to avoid calling several time the method computeMass which should not be used outside from the class. Fix test UnitTests.SofaBaseMechanics_test/DiagonalMass3_test.checkMassDensityTotalMassFromVertexMass_Tetra; which is failling since PR #2183 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2186
https://github.com/sofa-framework/sofa/pull/2187:430,Availability,error,error,430,"LCPSolver is a class performing LCP on a matrix (actually on a raw pointer, assuming you did allocate the memory beforehand), but the fact this is a class is irrelevant.; This is only used in proximity.cpp (in the repo), which used for some proximity detections. In the same way as other Matrix algo, I set this feature as a utility function in Mat_solve_LCP in Sofa.Type.; - use Sofa.Type types instead of pointer (less prone to error); - rewrote some preproc def into constexpr values.; - removed the print() function of the result, but you can just print the resulting type::matrix anyway. There are some comments in french but I did not bother translate them for now. There is a compat layer for this function in Sofa.Compat so this PR should not be breaking. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2187
https://github.com/sofa-framework/sofa/pull/2187:1308,Availability,failure,failures,1308,"LCPSolver is a class performing LCP on a matrix (actually on a raw pointer, assuming you did allocate the memory beforehand), but the fact this is a class is irrelevant.; This is only used in proximity.cpp (in the repo), which used for some proximity detections. In the same way as other Matrix algo, I set this feature as a utility function in Mat_solve_LCP in Sofa.Type.; - use Sofa.Type types instead of pointer (less prone to error); - rewrote some preproc def into constexpr values.; - removed the print() function of the result, but you can just print the resulting type::matrix anyway. There are some comments in french but I did not bother translate them for now. There is a compat layer for this function in Sofa.Compat so this PR should not be breaking. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2187
https://github.com/sofa-framework/sofa/pull/2187:1357,Availability,failure,failures,1357,"LCPSolver is a class performing LCP on a matrix (actually on a raw pointer, assuming you did allocate the memory beforehand), but the fact this is a class is irrelevant.; This is only used in proximity.cpp (in the repo), which used for some proximity detections. In the same way as other Matrix algo, I set this feature as a utility function in Mat_solve_LCP in Sofa.Type.; - use Sofa.Type types instead of pointer (less prone to error); - rewrote some preproc def into constexpr values.; - removed the print() function of the result, but you can just print the resulting type::matrix anyway. There are some comments in french but I did not bother translate them for now. There is a compat layer for this function in Sofa.Compat so this PR should not be breaking. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2187
https://github.com/sofa-framework/sofa/pull/2187:93,Energy Efficiency,allocate,allocate,93,"LCPSolver is a class performing LCP on a matrix (actually on a raw pointer, assuming you did allocate the memory beforehand), but the fact this is a class is irrelevant.; This is only used in proximity.cpp (in the repo), which used for some proximity detections. In the same way as other Matrix algo, I set this feature as a utility function in Mat_solve_LCP in Sofa.Type.; - use Sofa.Type types instead of pointer (less prone to error); - rewrote some preproc def into constexpr values.; - removed the print() function of the result, but you can just print the resulting type::matrix anyway. There are some comments in french but I did not bother translate them for now. There is a compat layer for this function in Sofa.Compat so this PR should not be breaking. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2187
https://github.com/sofa-framework/sofa/pull/2187:21,Performance,perform,performing,21,"LCPSolver is a class performing LCP on a matrix (actually on a raw pointer, assuming you did allocate the memory beforehand), but the fact this is a class is irrelevant.; This is only used in proximity.cpp (in the repo), which used for some proximity detections. In the same way as other Matrix algo, I set this feature as a utility function in Mat_solve_LCP in Sofa.Type.; - use Sofa.Type types instead of pointer (less prone to error); - rewrote some preproc def into constexpr values.; - removed the print() function of the result, but you can just print the resulting type::matrix anyway. There are some comments in french but I did not bother translate them for now. There is a compat layer for this function in Sofa.Compat so this PR should not be breaking. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2187
https://github.com/sofa-framework/sofa/pull/2187:251,Safety,detect,detections,251,"LCPSolver is a class performing LCP on a matrix (actually on a raw pointer, assuming you did allocate the memory beforehand), but the fact this is a class is irrelevant.; This is only used in proximity.cpp (in the repo), which used for some proximity detections. In the same way as other Matrix algo, I set this feature as a utility function in Mat_solve_LCP in Sofa.Type.; - use Sofa.Type types instead of pointer (less prone to error); - rewrote some preproc def into constexpr values.; - removed the print() function of the result, but you can just print the resulting type::matrix anyway. There are some comments in french but I did not bother translate them for now. There is a compat layer for this function in Sofa.Compat so this PR should not be breaking. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2187
https://github.com/sofa-framework/sofa/pull/2187:927,Security,Certificate,Certificate,927,"LCPSolver is a class performing LCP on a matrix (actually on a raw pointer, assuming you did allocate the memory beforehand), but the fact this is a class is irrelevant.; This is only used in proximity.cpp (in the repo), which used for some proximity detections. In the same way as other Matrix algo, I set this feature as a utility function in Mat_solve_LCP in Sofa.Type.; - use Sofa.Type types instead of pointer (less prone to error); - rewrote some preproc def into constexpr values.; - removed the print() function of the result, but you can just print the resulting type::matrix anyway. There are some comments in french but I did not bother translate them for now. There is a compat layer for this function in Sofa.Compat so this PR should not be breaking. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2187
https://github.com/sofa-framework/sofa/pull/2187:1038,Security,certificate,certificate-of-origin-dco,1038,"LCPSolver is a class performing LCP on a matrix (actually on a raw pointer, assuming you did allocate the memory beforehand), but the fact this is a class is irrelevant.; This is only used in proximity.cpp (in the repo), which used for some proximity detections. In the same way as other Matrix algo, I set this feature as a utility function in Mat_solve_LCP in Sofa.Type.; - use Sofa.Type types instead of pointer (less prone to error); - rewrote some preproc def into constexpr values.; - removed the print() function of the result, but you can just print the resulting type::matrix anyway. There are some comments in french but I did not bother translate them for now. There is a compat layer for this function in Sofa.Compat so this PR should not be breaking. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2187
https://github.com/sofa-framework/sofa/pull/2187:1303,Testability,test,test,1303,"LCPSolver is a class performing LCP on a matrix (actually on a raw pointer, assuming you did allocate the memory beforehand), but the fact this is a class is irrelevant.; This is only used in proximity.cpp (in the repo), which used for some proximity detections. In the same way as other Matrix algo, I set this feature as a utility function in Mat_solve_LCP in Sofa.Type.; - use Sofa.Type types instead of pointer (less prone to error); - rewrote some preproc def into constexpr values.; - removed the print() function of the result, but you can just print the resulting type::matrix anyway. There are some comments in french but I did not bother translate them for now. There is a compat layer for this function in Sofa.Compat so this PR should not be breaking. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2187
https://github.com/sofa-framework/sofa/pull/2187:1352,Testability,test,test,1352,"LCPSolver is a class performing LCP on a matrix (actually on a raw pointer, assuming you did allocate the memory beforehand), but the fact this is a class is irrelevant.; This is only used in proximity.cpp (in the repo), which used for some proximity detections. In the same way as other Matrix algo, I set this feature as a utility function in Mat_solve_LCP in Sofa.Type.; - use Sofa.Type types instead of pointer (less prone to error); - rewrote some preproc def into constexpr values.; - removed the print() function of the result, but you can just print the resulting type::matrix anyway. There are some comments in french but I did not bother translate them for now. There is a compat layer for this function in Sofa.Compat so this PR should not be breaking. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2187
https://github.com/sofa-framework/sofa/pull/2188:636,Availability,failure,failures,636,"#1885. Converts all tests in the rest of the modules (i.e not the plugins) to Sofa.Testing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2188
https://github.com/sofa-framework/sofa/pull/2188:685,Availability,failure,failures,685,"#1885. Converts all tests in the rest of the modules (i.e not the plugins) to Sofa.Testing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2188
https://github.com/sofa-framework/sofa/pull/2188:66,Modifiability,plugin,plugins,66,"#1885. Converts all tests in the rest of the modules (i.e not the plugins) to Sofa.Testing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2188
https://github.com/sofa-framework/sofa/pull/2188:255,Security,Certificate,Certificate,255,"#1885. Converts all tests in the rest of the modules (i.e not the plugins) to Sofa.Testing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2188
https://github.com/sofa-framework/sofa/pull/2188:366,Security,certificate,certificate-of-origin-dco,366,"#1885. Converts all tests in the rest of the modules (i.e not the plugins) to Sofa.Testing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2188
https://github.com/sofa-framework/sofa/pull/2188:20,Testability,test,tests,20,"#1885. Converts all tests in the rest of the modules (i.e not the plugins) to Sofa.Testing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2188
https://github.com/sofa-framework/sofa/pull/2188:83,Testability,Test,Testing,83,"#1885. Converts all tests in the rest of the modules (i.e not the plugins) to Sofa.Testing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2188
https://github.com/sofa-framework/sofa/pull/2188:631,Testability,test,test,631,"#1885. Converts all tests in the rest of the modules (i.e not the plugins) to Sofa.Testing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2188
https://github.com/sofa-framework/sofa/pull/2188:680,Testability,test,test,680,"#1885. Converts all tests in the rest of the modules (i.e not the plugins) to Sofa.Testing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2188
https://github.com/sofa-framework/sofa/issues/2189:219,Testability,Benchmark,Benchmark,219,some new scenes introduced in PR #2161 are crashing during mesh removal. ; This reveals some components created with a copy past of the TopologyHandler but not really handling topological changes. . SceneTests.examples/Benchmark/TopologicalChanges.ProjectToPlaneConstraint_RemovingMeshTest.scn; SceneTests.examples/Benchmark/TopologicalChanges.FixedPlaneConstraint_RemovingMeshTest.scn. Scenes ignored for the moment until components behavior is fixed.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2189
https://github.com/sofa-framework/sofa/issues/2189:315,Testability,Benchmark,Benchmark,315,some new scenes introduced in PR #2161 are crashing during mesh removal. ; This reveals some components created with a copy past of the TopologyHandler but not really handling topological changes. . SceneTests.examples/Benchmark/TopologicalChanges.ProjectToPlaneConstraint_RemovingMeshTest.scn; SceneTests.examples/Benchmark/TopologicalChanges.FixedPlaneConstraint_RemovingMeshTest.scn. Scenes ignored for the moment until components behavior is fixed.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2189
https://github.com/sofa-framework/sofa/pull/2190:1171,Availability,failure,failures,1171,"If testing is enabled, the list of projects(i.e targets) gets very long at the root of the SOFA project. This PR lists all targets which is suffixed with __test_ or __simutest_ and put them into the ""Testing"" folder (where gtest, Sofa.Testing are located as well). ![Capture](https://user-images.githubusercontent.com/11028016/122558586-8bfb8b00-d03e-11eb-9043-49d204482cd0.PNG). This is done with a new custom macro called _sofa_get_all_targets_ which gives all the targets enabled in the project. Here in this PR, it is located at the end of the global CMakeLists, so it will also get tests related to external plugins, etc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2190
https://github.com/sofa-framework/sofa/pull/2190:1220,Availability,failure,failures,1220,"If testing is enabled, the list of projects(i.e targets) gets very long at the root of the SOFA project. This PR lists all targets which is suffixed with __test_ or __simutest_ and put them into the ""Testing"" folder (where gtest, Sofa.Testing are located as well). ![Capture](https://user-images.githubusercontent.com/11028016/122558586-8bfb8b00-d03e-11eb-9043-49d204482cd0.PNG). This is done with a new custom macro called _sofa_get_all_targets_ which gives all the targets enabled in the project. Here in this PR, it is located at the end of the global CMakeLists, so it will also get tests related to external plugins, etc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2190
https://github.com/sofa-framework/sofa/pull/2190:613,Modifiability,plugin,plugins,613,"If testing is enabled, the list of projects(i.e targets) gets very long at the root of the SOFA project. This PR lists all targets which is suffixed with __test_ or __simutest_ and put them into the ""Testing"" folder (where gtest, Sofa.Testing are located as well). ![Capture](https://user-images.githubusercontent.com/11028016/122558586-8bfb8b00-d03e-11eb-9043-49d204482cd0.PNG). This is done with a new custom macro called _sofa_get_all_targets_ which gives all the targets enabled in the project. Here in this PR, it is located at the end of the global CMakeLists, so it will also get tests related to external plugins, etc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2190
https://github.com/sofa-framework/sofa/pull/2190:790,Security,Certificate,Certificate,790,"If testing is enabled, the list of projects(i.e targets) gets very long at the root of the SOFA project. This PR lists all targets which is suffixed with __test_ or __simutest_ and put them into the ""Testing"" folder (where gtest, Sofa.Testing are located as well). ![Capture](https://user-images.githubusercontent.com/11028016/122558586-8bfb8b00-d03e-11eb-9043-49d204482cd0.PNG). This is done with a new custom macro called _sofa_get_all_targets_ which gives all the targets enabled in the project. Here in this PR, it is located at the end of the global CMakeLists, so it will also get tests related to external plugins, etc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2190
https://github.com/sofa-framework/sofa/pull/2190:901,Security,certificate,certificate-of-origin-dco,901,"If testing is enabled, the list of projects(i.e targets) gets very long at the root of the SOFA project. This PR lists all targets which is suffixed with __test_ or __simutest_ and put them into the ""Testing"" folder (where gtest, Sofa.Testing are located as well). ![Capture](https://user-images.githubusercontent.com/11028016/122558586-8bfb8b00-d03e-11eb-9043-49d204482cd0.PNG). This is done with a new custom macro called _sofa_get_all_targets_ which gives all the targets enabled in the project. Here in this PR, it is located at the end of the global CMakeLists, so it will also get tests related to external plugins, etc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2190
https://github.com/sofa-framework/sofa/pull/2190:3,Testability,test,testing,3,"If testing is enabled, the list of projects(i.e targets) gets very long at the root of the SOFA project. This PR lists all targets which is suffixed with __test_ or __simutest_ and put them into the ""Testing"" folder (where gtest, Sofa.Testing are located as well). ![Capture](https://user-images.githubusercontent.com/11028016/122558586-8bfb8b00-d03e-11eb-9043-49d204482cd0.PNG). This is done with a new custom macro called _sofa_get_all_targets_ which gives all the targets enabled in the project. Here in this PR, it is located at the end of the global CMakeLists, so it will also get tests related to external plugins, etc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2190
https://github.com/sofa-framework/sofa/pull/2190:200,Testability,Test,Testing,200,"If testing is enabled, the list of projects(i.e targets) gets very long at the root of the SOFA project. This PR lists all targets which is suffixed with __test_ or __simutest_ and put them into the ""Testing"" folder (where gtest, Sofa.Testing are located as well). ![Capture](https://user-images.githubusercontent.com/11028016/122558586-8bfb8b00-d03e-11eb-9043-49d204482cd0.PNG). This is done with a new custom macro called _sofa_get_all_targets_ which gives all the targets enabled in the project. Here in this PR, it is located at the end of the global CMakeLists, so it will also get tests related to external plugins, etc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2190
https://github.com/sofa-framework/sofa/pull/2190:235,Testability,Test,Testing,235,"If testing is enabled, the list of projects(i.e targets) gets very long at the root of the SOFA project. This PR lists all targets which is suffixed with __test_ or __simutest_ and put them into the ""Testing"" folder (where gtest, Sofa.Testing are located as well). ![Capture](https://user-images.githubusercontent.com/11028016/122558586-8bfb8b00-d03e-11eb-9043-49d204482cd0.PNG). This is done with a new custom macro called _sofa_get_all_targets_ which gives all the targets enabled in the project. Here in this PR, it is located at the end of the global CMakeLists, so it will also get tests related to external plugins, etc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2190
https://github.com/sofa-framework/sofa/pull/2190:587,Testability,test,tests,587,"If testing is enabled, the list of projects(i.e targets) gets very long at the root of the SOFA project. This PR lists all targets which is suffixed with __test_ or __simutest_ and put them into the ""Testing"" folder (where gtest, Sofa.Testing are located as well). ![Capture](https://user-images.githubusercontent.com/11028016/122558586-8bfb8b00-d03e-11eb-9043-49d204482cd0.PNG). This is done with a new custom macro called _sofa_get_all_targets_ which gives all the targets enabled in the project. Here in this PR, it is located at the end of the global CMakeLists, so it will also get tests related to external plugins, etc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2190
https://github.com/sofa-framework/sofa/pull/2190:1166,Testability,test,test,1166,"If testing is enabled, the list of projects(i.e targets) gets very long at the root of the SOFA project. This PR lists all targets which is suffixed with __test_ or __simutest_ and put them into the ""Testing"" folder (where gtest, Sofa.Testing are located as well). ![Capture](https://user-images.githubusercontent.com/11028016/122558586-8bfb8b00-d03e-11eb-9043-49d204482cd0.PNG). This is done with a new custom macro called _sofa_get_all_targets_ which gives all the targets enabled in the project. Here in this PR, it is located at the end of the global CMakeLists, so it will also get tests related to external plugins, etc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2190
https://github.com/sofa-framework/sofa/pull/2190:1215,Testability,test,test,1215,"If testing is enabled, the list of projects(i.e targets) gets very long at the root of the SOFA project. This PR lists all targets which is suffixed with __test_ or __simutest_ and put them into the ""Testing"" folder (where gtest, Sofa.Testing are located as well). ![Capture](https://user-images.githubusercontent.com/11028016/122558586-8bfb8b00-d03e-11eb-9043-49d204482cd0.PNG). This is done with a new custom macro called _sofa_get_all_targets_ which gives all the targets enabled in the project. Here in this PR, it is located at the end of the global CMakeLists, so it will also get tests related to external plugins, etc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2190
https://github.com/sofa-framework/sofa/pull/2191:703,Availability,failure,failures,703,"- Use BaseTest instead of Sofa_test; - Check more values in the different tests. ; - Check several values from analytic values; - Clean some space and indent. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2191
https://github.com/sofa-framework/sofa/pull/2191:752,Availability,failure,failures,752,"- Use BaseTest instead of Sofa_test; - Check more values in the different tests. ; - Check several values from analytic values; - Clean some space and indent. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2191
https://github.com/sofa-framework/sofa/pull/2191:322,Security,Certificate,Certificate,322,"- Use BaseTest instead of Sofa_test; - Check more values in the different tests. ; - Check several values from analytic values; - Clean some space and indent. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2191
https://github.com/sofa-framework/sofa/pull/2191:433,Security,certificate,certificate-of-origin-dco,433,"- Use BaseTest instead of Sofa_test; - Check more values in the different tests. ; - Check several values from analytic values; - Clean some space and indent. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2191
https://github.com/sofa-framework/sofa/pull/2191:74,Testability,test,tests,74,"- Use BaseTest instead of Sofa_test; - Check more values in the different tests. ; - Check several values from analytic values; - Clean some space and indent. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2191
https://github.com/sofa-framework/sofa/pull/2191:698,Testability,test,test,698,"- Use BaseTest instead of Sofa_test; - Check more values in the different tests. ; - Check several values from analytic values; - Clean some space and indent. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2191
https://github.com/sofa-framework/sofa/pull/2191:747,Testability,test,test,747,"- Use BaseTest instead of Sofa_test; - Check more values in the different tests. ; - Check several values from analytic values; - Clean some space and indent. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2191
https://github.com/sofa-framework/sofa/pull/2192:1869,Availability,failure,failures,1869,"Data:; ```; Data< sofa::helper::vector< Real > > d_vertexMass;; Data< sofa::helper::vector< Real > > d_edgeMass;; ...; , d_vertexMass( initData(&d_vertexMass, ""vertexMass"", ""Specify a vector giving the mass of each vertex. If unspecified or wrongly set, another mass information is used."") ); , d_edgeMass( initData(&d_edgeMass, ""edgeMass"", ""values of the particles masses on edges"") ); ```; and topological Data with mechanism to update each other then they are changed or topological changes occurs.; ```; /// Values of the particles masses stored on vertices; topology::PointData<helper::vector<MassType> > d_vertexMass;; /// Values of the particles masses stored on edges; topology::EdgeData<helper::vector<MassType> > d_edgeMass;; ...; , d_vertexMassInfo( initData(&d_vertexMassInfo, ""vertexMassInfo"", ""internal values of the particles masses on vertices, supporting topological changes"") ); , d_edgeMassInfo( initData(&d_edgeMassInfo, ""edgeMassInfo"", ""internal values of the particles masses on edges, supporting topological changes"") ); ```. No need to have 2 sets of Data, topological Data can be used directly as PointData and EdgeData inherite from Data and support topological changes. -> Remove the normal Data but keep the names vertexMass and edgeMass which are used in code and scenes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2192
https://github.com/sofa-framework/sofa/pull/2192:1918,Availability,failure,failures,1918,"Data:; ```; Data< sofa::helper::vector< Real > > d_vertexMass;; Data< sofa::helper::vector< Real > > d_edgeMass;; ...; , d_vertexMass( initData(&d_vertexMass, ""vertexMass"", ""Specify a vector giving the mass of each vertex. If unspecified or wrongly set, another mass information is used."") ); , d_edgeMass( initData(&d_edgeMass, ""edgeMass"", ""values of the particles masses on edges"") ); ```; and topological Data with mechanism to update each other then they are changed or topological changes occurs.; ```; /// Values of the particles masses stored on vertices; topology::PointData<helper::vector<MassType> > d_vertexMass;; /// Values of the particles masses stored on edges; topology::EdgeData<helper::vector<MassType> > d_edgeMass;; ...; , d_vertexMassInfo( initData(&d_vertexMassInfo, ""vertexMassInfo"", ""internal values of the particles masses on vertices, supporting topological changes"") ); , d_edgeMassInfo( initData(&d_edgeMassInfo, ""edgeMassInfo"", ""internal values of the particles masses on edges, supporting topological changes"") ); ```. No need to have 2 sets of Data, topological Data can be used directly as PointData and EdgeData inherite from Data and support topological changes. -> Remove the normal Data but keep the names vertexMass and edgeMass which are used in code and scenes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2192
https://github.com/sofa-framework/sofa/pull/2192:455,Deployability,update,update,455,"There was normal vector Data:; ```; Data< sofa::helper::vector< Real > > d_vertexMass;; Data< sofa::helper::vector< Real > > d_edgeMass;; ...; , d_vertexMass( initData(&d_vertexMass, ""vertexMass"", ""Specify a vector giving the mass of each vertex. If unspecified or wrongly set, another mass information is used."") ); , d_edgeMass( initData(&d_edgeMass, ""edgeMass"", ""values of the particles masses on edges"") ); ```; and topological Data with mechanism to update each other then they are changed or topological changes occurs.; ```; /// Values of the particles masses stored on vertices; topology::PointData<helper::vector<MassType> > d_vertexMass;; /// Values of the particles masses stored on edges; topology::EdgeData<helper::vector<MassType> > d_edgeMass;; ...; , d_vertexMassInfo( initData(&d_vertexMassInfo, ""vertexMassInfo"", ""internal values of the particles masses on vertices, supporting topological changes"") ); , d_edgeMassInfo( initData(&d_edgeMassInfo, ""edgeMassInfo"", ""internal values of the particles masses on edges, supporting topological changes"") ); ```. No need to have 2 sets of Data, topological Data can be used directly as PointData and EdgeData inherite from Data and support topological changes. -> Remove the normal Data but keep the names vertexMass and edgeMass which are used in code and scenes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2192
https://github.com/sofa-framework/sofa/pull/2192:1169,Modifiability,inherit,inherite,1169,"Data:; ```; Data< sofa::helper::vector< Real > > d_vertexMass;; Data< sofa::helper::vector< Real > > d_edgeMass;; ...; , d_vertexMass( initData(&d_vertexMass, ""vertexMass"", ""Specify a vector giving the mass of each vertex. If unspecified or wrongly set, another mass information is used."") ); , d_edgeMass( initData(&d_edgeMass, ""edgeMass"", ""values of the particles masses on edges"") ); ```; and topological Data with mechanism to update each other then they are changed or topological changes occurs.; ```; /// Values of the particles masses stored on vertices; topology::PointData<helper::vector<MassType> > d_vertexMass;; /// Values of the particles masses stored on edges; topology::EdgeData<helper::vector<MassType> > d_edgeMass;; ...; , d_vertexMassInfo( initData(&d_vertexMassInfo, ""vertexMassInfo"", ""internal values of the particles masses on vertices, supporting topological changes"") ); , d_edgeMassInfo( initData(&d_edgeMassInfo, ""edgeMassInfo"", ""internal values of the particles masses on edges, supporting topological changes"") ); ```. No need to have 2 sets of Data, topological Data can be used directly as PointData and EdgeData inherite from Data and support topological changes. -> Remove the normal Data but keep the names vertexMass and edgeMass which are used in code and scenes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2192
https://github.com/sofa-framework/sofa/pull/2192:1488,Security,Certificate,Certificate,1488,"Data:; ```; Data< sofa::helper::vector< Real > > d_vertexMass;; Data< sofa::helper::vector< Real > > d_edgeMass;; ...; , d_vertexMass( initData(&d_vertexMass, ""vertexMass"", ""Specify a vector giving the mass of each vertex. If unspecified or wrongly set, another mass information is used."") ); , d_edgeMass( initData(&d_edgeMass, ""edgeMass"", ""values of the particles masses on edges"") ); ```; and topological Data with mechanism to update each other then they are changed or topological changes occurs.; ```; /// Values of the particles masses stored on vertices; topology::PointData<helper::vector<MassType> > d_vertexMass;; /// Values of the particles masses stored on edges; topology::EdgeData<helper::vector<MassType> > d_edgeMass;; ...; , d_vertexMassInfo( initData(&d_vertexMassInfo, ""vertexMassInfo"", ""internal values of the particles masses on vertices, supporting topological changes"") ); , d_edgeMassInfo( initData(&d_edgeMassInfo, ""edgeMassInfo"", ""internal values of the particles masses on edges, supporting topological changes"") ); ```. No need to have 2 sets of Data, topological Data can be used directly as PointData and EdgeData inherite from Data and support topological changes. -> Remove the normal Data but keep the names vertexMass and edgeMass which are used in code and scenes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2192
https://github.com/sofa-framework/sofa/pull/2192:1599,Security,certificate,certificate-of-origin-dco,1599,"Data:; ```; Data< sofa::helper::vector< Real > > d_vertexMass;; Data< sofa::helper::vector< Real > > d_edgeMass;; ...; , d_vertexMass( initData(&d_vertexMass, ""vertexMass"", ""Specify a vector giving the mass of each vertex. If unspecified or wrongly set, another mass information is used."") ); , d_edgeMass( initData(&d_edgeMass, ""edgeMass"", ""values of the particles masses on edges"") ); ```; and topological Data with mechanism to update each other then they are changed or topological changes occurs.; ```; /// Values of the particles masses stored on vertices; topology::PointData<helper::vector<MassType> > d_vertexMass;; /// Values of the particles masses stored on edges; topology::EdgeData<helper::vector<MassType> > d_edgeMass;; ...; , d_vertexMassInfo( initData(&d_vertexMassInfo, ""vertexMassInfo"", ""internal values of the particles masses on vertices, supporting topological changes"") ); , d_edgeMassInfo( initData(&d_edgeMassInfo, ""edgeMassInfo"", ""internal values of the particles masses on edges, supporting topological changes"") ); ```. No need to have 2 sets of Data, topological Data can be used directly as PointData and EdgeData inherite from Data and support topological changes. -> Remove the normal Data but keep the names vertexMass and edgeMass which are used in code and scenes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2192
https://github.com/sofa-framework/sofa/pull/2192:1864,Testability,test,test,1864,"Data:; ```; Data< sofa::helper::vector< Real > > d_vertexMass;; Data< sofa::helper::vector< Real > > d_edgeMass;; ...; , d_vertexMass( initData(&d_vertexMass, ""vertexMass"", ""Specify a vector giving the mass of each vertex. If unspecified or wrongly set, another mass information is used."") ); , d_edgeMass( initData(&d_edgeMass, ""edgeMass"", ""values of the particles masses on edges"") ); ```; and topological Data with mechanism to update each other then they are changed or topological changes occurs.; ```; /// Values of the particles masses stored on vertices; topology::PointData<helper::vector<MassType> > d_vertexMass;; /// Values of the particles masses stored on edges; topology::EdgeData<helper::vector<MassType> > d_edgeMass;; ...; , d_vertexMassInfo( initData(&d_vertexMassInfo, ""vertexMassInfo"", ""internal values of the particles masses on vertices, supporting topological changes"") ); , d_edgeMassInfo( initData(&d_edgeMassInfo, ""edgeMassInfo"", ""internal values of the particles masses on edges, supporting topological changes"") ); ```. No need to have 2 sets of Data, topological Data can be used directly as PointData and EdgeData inherite from Data and support topological changes. -> Remove the normal Data but keep the names vertexMass and edgeMass which are used in code and scenes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2192
https://github.com/sofa-framework/sofa/pull/2192:1913,Testability,test,test,1913,"Data:; ```; Data< sofa::helper::vector< Real > > d_vertexMass;; Data< sofa::helper::vector< Real > > d_edgeMass;; ...; , d_vertexMass( initData(&d_vertexMass, ""vertexMass"", ""Specify a vector giving the mass of each vertex. If unspecified or wrongly set, another mass information is used."") ); , d_edgeMass( initData(&d_edgeMass, ""edgeMass"", ""values of the particles masses on edges"") ); ```; and topological Data with mechanism to update each other then they are changed or topological changes occurs.; ```; /// Values of the particles masses stored on vertices; topology::PointData<helper::vector<MassType> > d_vertexMass;; /// Values of the particles masses stored on edges; topology::EdgeData<helper::vector<MassType> > d_edgeMass;; ...; , d_vertexMassInfo( initData(&d_vertexMassInfo, ""vertexMassInfo"", ""internal values of the particles masses on vertices, supporting topological changes"") ); , d_edgeMassInfo( initData(&d_edgeMassInfo, ""edgeMassInfo"", ""internal values of the particles masses on edges, supporting topological changes"") ); ```. No need to have 2 sets of Data, topological Data can be used directly as PointData and EdgeData inherite from Data and support topological changes. -> Remove the normal Data but keep the names vertexMass and edgeMass which are used in code and scenes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2192
https://github.com/sofa-framework/sofa/pull/2193:653,Availability,failure,failures,653,"Depends/include PR #2192 and PR #2191. [ci-depends-on https://github.com/sofa-framework/regression/pull/14]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2193
https://github.com/sofa-framework/sofa/pull/2193:702,Availability,failure,failures,702,"Depends/include PR #2192 and PR #2191. [ci-depends-on https://github.com/sofa-framework/regression/pull/14]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2193
https://github.com/sofa-framework/sofa/pull/2193:0,Integrability,Depend,Depends,0,"Depends/include PR #2192 and PR #2191. [ci-depends-on https://github.com/sofa-framework/regression/pull/14]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2193
https://github.com/sofa-framework/sofa/pull/2193:43,Integrability,depend,depends-on,43,"Depends/include PR #2192 and PR #2191. [ci-depends-on https://github.com/sofa-framework/regression/pull/14]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2193
https://github.com/sofa-framework/sofa/pull/2193:272,Security,Certificate,Certificate,272,"Depends/include PR #2192 and PR #2191. [ci-depends-on https://github.com/sofa-framework/regression/pull/14]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2193
https://github.com/sofa-framework/sofa/pull/2193:383,Security,certificate,certificate-of-origin-dco,383,"Depends/include PR #2192 and PR #2191. [ci-depends-on https://github.com/sofa-framework/regression/pull/14]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2193
https://github.com/sofa-framework/sofa/pull/2193:648,Testability,test,test,648,"Depends/include PR #2192 and PR #2191. [ci-depends-on https://github.com/sofa-framework/regression/pull/14]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2193
https://github.com/sofa-framework/sofa/pull/2193:697,Testability,test,test,697,"Depends/include PR #2192 and PR #2191. [ci-depends-on https://github.com/sofa-framework/regression/pull/14]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2193
https://github.com/sofa-framework/sofa/pull/2194:576,Availability,failure,failures,576,"Mainly remove unused functions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2194
https://github.com/sofa-framework/sofa/pull/2194:625,Availability,failure,failures,625,"Mainly remove unused functions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2194
https://github.com/sofa-framework/sofa/pull/2194:195,Security,Certificate,Certificate,195,"Mainly remove unused functions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2194
https://github.com/sofa-framework/sofa/pull/2194:306,Security,certificate,certificate-of-origin-dco,306,"Mainly remove unused functions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2194
https://github.com/sofa-framework/sofa/pull/2194:571,Testability,test,test,571,"Mainly remove unused functions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2194
https://github.com/sofa-framework/sofa/pull/2194:620,Testability,test,test,620,"Mainly remove unused functions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2194
https://github.com/sofa-framework/sofa/pull/2195:678,Availability,failure,failures,678,"Removed unused variables; Removed MechanicalGetDimensionVisitor which was no longer used; Renamed variables (groupData is not clear). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2195
https://github.com/sofa-framework/sofa/pull/2195:727,Availability,failure,failures,727,"Removed unused variables; Removed MechanicalGetDimensionVisitor which was no longer used; Renamed variables (groupData is not clear). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2195
https://github.com/sofa-framework/sofa/pull/2195:15,Modifiability,variab,variables,15,"Removed unused variables; Removed MechanicalGetDimensionVisitor which was no longer used; Renamed variables (groupData is not clear). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2195
https://github.com/sofa-framework/sofa/pull/2195:98,Modifiability,variab,variables,98,"Removed unused variables; Removed MechanicalGetDimensionVisitor which was no longer used; Renamed variables (groupData is not clear). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2195
https://github.com/sofa-framework/sofa/pull/2195:297,Security,Certificate,Certificate,297,"Removed unused variables; Removed MechanicalGetDimensionVisitor which was no longer used; Renamed variables (groupData is not clear). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2195
https://github.com/sofa-framework/sofa/pull/2195:408,Security,certificate,certificate-of-origin-dco,408,"Removed unused variables; Removed MechanicalGetDimensionVisitor which was no longer used; Renamed variables (groupData is not clear). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2195
https://github.com/sofa-framework/sofa/pull/2195:673,Testability,test,test,673,"Removed unused variables; Removed MechanicalGetDimensionVisitor which was no longer used; Renamed variables (groupData is not clear). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2195
https://github.com/sofa-framework/sofa/pull/2195:722,Testability,test,test,722,"Removed unused variables; Removed MechanicalGetDimensionVisitor which was no longer used; Renamed variables (groupData is not clear). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2195
https://github.com/sofa-framework/sofa/pull/2195:126,Usability,clear,clear,126,"Removed unused variables; Removed MechanicalGetDimensionVisitor which was no longer used; Renamed variables (groupData is not clear). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2195
https://github.com/sofa-framework/sofa/pull/2196:631,Availability,failure,failures,631,"Fix various warnings:; - type comparison; - misleading indentation; - unused variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2196
https://github.com/sofa-framework/sofa/pull/2196:680,Availability,failure,failures,680,"Fix various warnings:; - type comparison; - misleading indentation; - unused variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2196
https://github.com/sofa-framework/sofa/pull/2196:77,Modifiability,variab,variable,77,"Fix various warnings:; - type comparison; - misleading indentation; - unused variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2196
https://github.com/sofa-framework/sofa/pull/2196:250,Security,Certificate,Certificate,250,"Fix various warnings:; - type comparison; - misleading indentation; - unused variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2196
https://github.com/sofa-framework/sofa/pull/2196:361,Security,certificate,certificate-of-origin-dco,361,"Fix various warnings:; - type comparison; - misleading indentation; - unused variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2196
https://github.com/sofa-framework/sofa/pull/2196:626,Testability,test,test,626,"Fix various warnings:; - type comparison; - misleading indentation; - unused variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2196
https://github.com/sofa-framework/sofa/pull/2196:675,Testability,test,test,675,"Fix various warnings:; - type comparison; - misleading indentation; - unused variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2196
https://github.com/sofa-framework/sofa/pull/2197:307,Availability,error,error,307,"#1626 generalized the use of RGBAColor instead of Vec4f to select a color.; And all the functions were deprecated (but still usable) until the v21.06. For the upcoming release of v21.06, those functions have been deleted, but their definitions are still there, to inform the user how to fix the compilation error. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2197
https://github.com/sofa-framework/sofa/pull/2197:858,Availability,failure,failures,858,"#1626 generalized the use of RGBAColor instead of Vec4f to select a color.; And all the functions were deprecated (but still usable) until the v21.06. For the upcoming release of v21.06, those functions have been deleted, but their definitions are still there, to inform the user how to fix the compilation error. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2197
https://github.com/sofa-framework/sofa/pull/2197:907,Availability,failure,failures,907,"#1626 generalized the use of RGBAColor instead of Vec4f to select a color.; And all the functions were deprecated (but still usable) until the v21.06. For the upcoming release of v21.06, those functions have been deleted, but their definitions are still there, to inform the user how to fix the compilation error. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2197
https://github.com/sofa-framework/sofa/pull/2197:168,Deployability,release,release,168,"#1626 generalized the use of RGBAColor instead of Vec4f to select a color.; And all the functions were deprecated (but still usable) until the v21.06. For the upcoming release of v21.06, those functions have been deleted, but their definitions are still there, to inform the user how to fix the compilation error. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2197
https://github.com/sofa-framework/sofa/pull/2197:477,Security,Certificate,Certificate,477,"#1626 generalized the use of RGBAColor instead of Vec4f to select a color.; And all the functions were deprecated (but still usable) until the v21.06. For the upcoming release of v21.06, those functions have been deleted, but their definitions are still there, to inform the user how to fix the compilation error. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2197
https://github.com/sofa-framework/sofa/pull/2197:588,Security,certificate,certificate-of-origin-dco,588,"#1626 generalized the use of RGBAColor instead of Vec4f to select a color.; And all the functions were deprecated (but still usable) until the v21.06. For the upcoming release of v21.06, those functions have been deleted, but their definitions are still there, to inform the user how to fix the compilation error. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2197
https://github.com/sofa-framework/sofa/pull/2197:853,Testability,test,test,853,"#1626 generalized the use of RGBAColor instead of Vec4f to select a color.; And all the functions were deprecated (but still usable) until the v21.06. For the upcoming release of v21.06, those functions have been deleted, but their definitions are still there, to inform the user how to fix the compilation error. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2197
https://github.com/sofa-framework/sofa/pull/2197:902,Testability,test,test,902,"#1626 generalized the use of RGBAColor instead of Vec4f to select a color.; And all the functions were deprecated (but still usable) until the v21.06. For the upcoming release of v21.06, those functions have been deleted, but their definitions are still there, to inform the user how to fix the compilation error. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2197
https://github.com/sofa-framework/sofa/pull/2197:125,Usability,usab,usable,125,"#1626 generalized the use of RGBAColor instead of Vec4f to select a color.; And all the functions were deprecated (but still usable) until the v21.06. For the upcoming release of v21.06, those functions have been deleted, but their definitions are still there, to inform the user how to fix the compilation error. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2197
https://github.com/sofa-framework/sofa/pull/2198:992,Availability,failure,failures,992,"#2197 should be merged first. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/150]. Cleaning (removing or setting ""deleted"") things that have been deprecated for long enough (some of them since 2017...). Also ; - improved the SOFA_DEPRECATED_HEADER macro to be consistent with SOFA_ATTRIBUTE_DEPRECATED.; - added SOFA_DISABLED_HEADER and SOFA_DISABLED_HEADER_NOT_REPLACED macros; - expanded namespace deprecation in SofaExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2198
https://github.com/sofa-framework/sofa/pull/2198:1041,Availability,failure,failures,1041,"#2197 should be merged first. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/150]. Cleaning (removing or setting ""deleted"") things that have been deprecated for long enough (some of them since 2017...). Also ; - improved the SOFA_DEPRECATED_HEADER macro to be consistent with SOFA_ATTRIBUTE_DEPRECATED.; - added SOFA_DISABLED_HEADER and SOFA_DISABLED_HEADER_NOT_REPLACED macros; - expanded namespace deprecation in SofaExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2198
https://github.com/sofa-framework/sofa/pull/2198:34,Integrability,depend,depends-on,34,"#2197 should be merged first. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/150]. Cleaning (removing or setting ""deleted"") things that have been deprecated for long enough (some of them since 2017...). Also ; - improved the SOFA_DEPRECATED_HEADER macro to be consistent with SOFA_ATTRIBUTE_DEPRECATED.; - added SOFA_DISABLED_HEADER and SOFA_DISABLED_HEADER_NOT_REPLACED macros; - expanded namespace deprecation in SofaExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2198
https://github.com/sofa-framework/sofa/pull/2198:611,Security,Certificate,Certificate,611,"#2197 should be merged first. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/150]. Cleaning (removing or setting ""deleted"") things that have been deprecated for long enough (some of them since 2017...). Also ; - improved the SOFA_DEPRECATED_HEADER macro to be consistent with SOFA_ATTRIBUTE_DEPRECATED.; - added SOFA_DISABLED_HEADER and SOFA_DISABLED_HEADER_NOT_REPLACED macros; - expanded namespace deprecation in SofaExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2198
https://github.com/sofa-framework/sofa/pull/2198:722,Security,certificate,certificate-of-origin-dco,722,"#2197 should be merged first. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/150]. Cleaning (removing or setting ""deleted"") things that have been deprecated for long enough (some of them since 2017...). Also ; - improved the SOFA_DEPRECATED_HEADER macro to be consistent with SOFA_ATTRIBUTE_DEPRECATED.; - added SOFA_DISABLED_HEADER and SOFA_DISABLED_HEADER_NOT_REPLACED macros; - expanded namespace deprecation in SofaExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2198
https://github.com/sofa-framework/sofa/pull/2198:987,Testability,test,test,987,"#2197 should be merged first. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/150]. Cleaning (removing or setting ""deleted"") things that have been deprecated for long enough (some of them since 2017...). Also ; - improved the SOFA_DEPRECATED_HEADER macro to be consistent with SOFA_ATTRIBUTE_DEPRECATED.; - added SOFA_DISABLED_HEADER and SOFA_DISABLED_HEADER_NOT_REPLACED macros; - expanded namespace deprecation in SofaExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2198
https://github.com/sofa-framework/sofa/pull/2198:1036,Testability,test,test,1036,"#2197 should be merged first. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/150]. Cleaning (removing or setting ""deleted"") things that have been deprecated for long enough (some of them since 2017...). Also ; - improved the SOFA_DEPRECATED_HEADER macro to be consistent with SOFA_ATTRIBUTE_DEPRECATED.; - added SOFA_DISABLED_HEADER and SOFA_DISABLED_HEADER_NOT_REPLACED macros; - expanded namespace deprecation in SofaExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2198
https://github.com/sofa-framework/sofa/pull/2199:636,Deployability,update,updated,636,"Introduce examples scenes for 4 cases of Euler explicit solver:; 1) Mass matrix is not diagonal and Euler is not symplectic: EulerExplicitSolver.scn; 2) Mass matrix is diagonal and Euler is not symplectic: EulerExplicitSolver_diagonal.scn; 3) Mass matrix is not diagonal and Euler is symplectic: EulerSymplecticSolver.scn; 4) Mass matrix is diagonal and Euler is symplectic: EulerSymplecticSolver_diagonal.scn. I did my best to create stable scenes, but it is not that simple with an Euler explicit solver. Especially if not symplectic. It comes at the price of very small time step sizes. This PR is based on #2163. It will need to be updated after #2165 is merged. [ci-depends-on https://github.com/sofa-framework/Regression/pull/15]",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2199
https://github.com/sofa-framework/sofa/pull/2199:671,Integrability,depend,depends-on,671,"Introduce examples scenes for 4 cases of Euler explicit solver:; 1) Mass matrix is not diagonal and Euler is not symplectic: EulerExplicitSolver.scn; 2) Mass matrix is diagonal and Euler is not symplectic: EulerExplicitSolver_diagonal.scn; 3) Mass matrix is not diagonal and Euler is symplectic: EulerSymplecticSolver.scn; 4) Mass matrix is diagonal and Euler is symplectic: EulerSymplecticSolver_diagonal.scn. I did my best to create stable scenes, but it is not that simple with an Euler explicit solver. Especially if not symplectic. It comes at the price of very small time step sizes. This PR is based on #2163. It will need to be updated after #2165 is merged. [ci-depends-on https://github.com/sofa-framework/Regression/pull/15]",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2199
https://github.com/sofa-framework/sofa/pull/2199:469,Usability,simpl,simple,469,"Introduce examples scenes for 4 cases of Euler explicit solver:; 1) Mass matrix is not diagonal and Euler is not symplectic: EulerExplicitSolver.scn; 2) Mass matrix is diagonal and Euler is not symplectic: EulerExplicitSolver_diagonal.scn; 3) Mass matrix is not diagonal and Euler is symplectic: EulerSymplecticSolver.scn; 4) Mass matrix is diagonal and Euler is symplectic: EulerSymplecticSolver_diagonal.scn. I did my best to create stable scenes, but it is not that simple with an Euler explicit solver. Especially if not symplectic. It comes at the price of very small time step sizes. This PR is based on #2163. It will need to be updated after #2165 is merged. [ci-depends-on https://github.com/sofa-framework/Regression/pull/15]",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2199
https://github.com/sofa-framework/sofa/pull/2200:662,Availability,failure,failures,662,"Otherwise the parsing is dependent on the locale in use on the system which; leads to problems with decimals numbers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2200
https://github.com/sofa-framework/sofa/pull/2200:711,Availability,failure,failures,711,"Otherwise the parsing is dependent on the locale in use on the system which; leads to problems with decimals numbers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2200
https://github.com/sofa-framework/sofa/pull/2200:25,Integrability,depend,dependent,25,"Otherwise the parsing is dependent on the locale in use on the system which; leads to problems with decimals numbers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2200
https://github.com/sofa-framework/sofa/pull/2200:281,Security,Certificate,Certificate,281,"Otherwise the parsing is dependent on the locale in use on the system which; leads to problems with decimals numbers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2200
https://github.com/sofa-framework/sofa/pull/2200:392,Security,certificate,certificate-of-origin-dco,392,"Otherwise the parsing is dependent on the locale in use on the system which; leads to problems with decimals numbers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2200
https://github.com/sofa-framework/sofa/pull/2200:657,Testability,test,test,657,"Otherwise the parsing is dependent on the locale in use on the system which; leads to problems with decimals numbers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2200
https://github.com/sofa-framework/sofa/pull/2200:706,Testability,test,test,706,"Otherwise the parsing is dependent on the locale in use on the system which; leads to problems with decimals numbers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2200
https://github.com/sofa-framework/sofa/pull/2201:2078,Availability,failure,failures,2078,"] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```; Which indicates tthat the same loader is loading the file multiple times. With the PR it now gives:; ```; INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```. Depends on PR #2200 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2201
https://github.com/sofa-framework/sofa/pull/2201:2127,Availability,failure,failures,2127,"] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```; Which indicates tthat the same loader is loading the file multiple times. With the PR it now gives:; ```; INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```. Depends on PR #2200 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2201
https://github.com/sofa-framework/sofa/pull/2201:34,Integrability,depend,dependency,34,"This PR fix a bug due to circular dependency in the DDG. . To reproduce the bug:; In caduceus scene, activate the informations message with printLog=""1"". ; Run the scene... you should see for the visual_snale_body:; ```console; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```; Which indicates tthat the same loader is loading the file multiple times. With the PR it now gives:; ```; INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```. Depends on PR #2200 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2201
https://github.com/sofa-framework/sofa/pull/2201:127,Integrability,message,message,127,"This PR fix a bug due to circular dependency in the DDG. . To reproduce the bug:; In caduceus scene, activate the informations message with printLog=""1"". ; Run the scene... you should see for the visual_snale_body:; ```console; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```; Which indicates tthat the same loader is loading the file multiple times. With the PR it now gives:; ```; INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```. Depends on PR #2200 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2201
https://github.com/sofa-framework/sofa/pull/2201:1512,Integrability,Depend,Depends,1512,"] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```; Which indicates tthat the same loader is loading the file multiple times. With the PR it now gives:; ```; INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```. Depends on PR #2200 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2201
https://github.com/sofa-framework/sofa/pull/2201:270,Performance,Load,Loading,270,"This PR fix a bug due to circular dependency in the DDG. . To reproduce the bug:; In caduceus scene, activate the informations message with printLog=""1"". ; Run the scene... you should see for the visual_snale_body:; ```console; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```; Which indicates tthat the same loader is loading the file multiple times. With the PR it now gives:; ```; INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```. Depends on PR #2200 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2201
https://github.com/sofa-framework/sofa/pull/2201:351,Performance,Load,Loading,351,"This PR fix a bug due to circular dependency in the DDG. . To reproduce the bug:; In caduceus scene, activate the informations message with printLog=""1"". ; Run the scene... you should see for the visual_snale_body:; ```console; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```; Which indicates tthat the same loader is loading the file multiple times. With the PR it now gives:; ```; INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```. Depends on PR #2200 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2201
https://github.com/sofa-framework/sofa/pull/2201:432,Performance,Load,Loading,432,"This PR fix a bug due to circular dependency in the DDG. . To reproduce the bug:; In caduceus scene, activate the informations message with printLog=""1"". ; Run the scene... you should see for the visual_snale_body:; ```console; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```; Which indicates tthat the same loader is loading the file multiple times. With the PR it now gives:; ```; INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```. Depends on PR #2200 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2201
https://github.com/sofa-framework/sofa/pull/2201:513,Performance,Load,Loading,513,"This PR fix a bug due to circular dependency in the DDG. . To reproduce the bug:; In caduceus scene, activate the informations message with printLog=""1"". ; Run the scene... you should see for the visual_snale_body:; ```console; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```; Which indicates tthat the same loader is loading the file multiple times. With the PR it now gives:; ```; INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```. Depends on PR #2200 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2201
https://github.com/sofa-framework/sofa/pull/2201:680,Performance,Load,Loading,680,"This PR fix a bug due to circular dependency in the DDG. . To reproduce the bug:; In caduceus scene, activate the informations message with printLog=""1"". ; Run the scene... you should see for the visual_snale_body:; ```console; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```; Which indicates tthat the same loader is loading the file multiple times. With the PR it now gives:; ```; INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```. Depends on PR #2200 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2201
https://github.com/sofa-framework/sofa/pull/2201:1105,Performance,Load,Loading,1105," activate the informations message with printLog=""1"". ; Run the scene... you should see for the visual_snale_body:; ```console; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```; Which indicates tthat the same loader is loading the file multiple times. With the PR it now gives:; ```; INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```. Depends on PR #2200 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does n",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2201
https://github.com/sofa-framework/sofa/pull/2201:1266,Performance,load,loader,1266,"] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```; Which indicates tthat the same loader is loading the file multiple times. With the PR it now gives:; ```; INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```. Depends on PR #2200 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2201
https://github.com/sofa-framework/sofa/pull/2201:1276,Performance,load,loading,1276,"] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```; Which indicates tthat the same loader is loading the file multiple times. With the PR it now gives:; ```; INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```. Depends on PR #2200 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2201
https://github.com/sofa-framework/sofa/pull/2201:1382,Performance,Load,Loading,1382,"] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```; Which indicates tthat the same loader is loading the file multiple times. With the PR it now gives:; ```; INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```. Depends on PR #2200 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2201
https://github.com/sofa-framework/sofa/pull/2201:1697,Security,Certificate,Certificate,1697,"] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```; Which indicates tthat the same loader is loading the file multiple times. With the PR it now gives:; ```; INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```. Depends on PR #2200 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2201
https://github.com/sofa-framework/sofa/pull/2201:1808,Security,certificate,certificate-of-origin-dco,1808,"] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```; Which indicates tthat the same loader is loading the file multiple times. With the PR it now gives:; ```; INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```. Depends on PR #2200 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2201
https://github.com/sofa-framework/sofa/pull/2201:2073,Testability,test,test,2073,"] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```; Which indicates tthat the same loader is loading the file multiple times. With the PR it now gives:; ```; INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```. Depends on PR #2200 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2201
https://github.com/sofa-framework/sofa/pull/2201:2122,Testability,test,test,2122,"] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```; Which indicates tthat the same loader is loading the file multiple times. With the PR it now gives:; ```; INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```. Depends on PR #2200 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2201
https://github.com/sofa-framework/sofa/pull/2202:594,Availability,failure,failures,594,"Because it is useless and it generates a warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2202
https://github.com/sofa-framework/sofa/pull/2202:643,Availability,failure,failures,643,"Because it is useless and it generates a warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2202
https://github.com/sofa-framework/sofa/pull/2202:213,Security,Certificate,Certificate,213,"Because it is useless and it generates a warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2202
https://github.com/sofa-framework/sofa/pull/2202:324,Security,certificate,certificate-of-origin-dco,324,"Because it is useless and it generates a warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2202
https://github.com/sofa-framework/sofa/pull/2202:589,Testability,test,test,589,"Because it is useless and it generates a warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2202
https://github.com/sofa-framework/sofa/pull/2202:638,Testability,test,test,638,"Because it is useless and it generates a warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2202
https://github.com/sofa-framework/sofa/pull/2204:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2204
https://github.com/sofa-framework/sofa/pull/2204:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2204
https://github.com/sofa-framework/sofa/pull/2204:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2204
https://github.com/sofa-framework/sofa/pull/2204:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2204
https://github.com/sofa-framework/sofa/pull/2204:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2204
https://github.com/sofa-framework/sofa/pull/2204:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2204
https://github.com/sofa-framework/sofa/pull/2205:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2205
https://github.com/sofa-framework/sofa/pull/2205:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2205
https://github.com/sofa-framework/sofa/pull/2205:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2205
https://github.com/sofa-framework/sofa/pull/2205:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2205
https://github.com/sofa-framework/sofa/pull/2205:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2205
https://github.com/sofa-framework/sofa/pull/2205:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2205
https://github.com/sofa-framework/sofa/pull/2206:627,Availability,failure,failures,627,"Quick compilation fix for drawing variables and function calls of RGBAColor types. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2206
https://github.com/sofa-framework/sofa/pull/2206:676,Availability,failure,failures,676,"Quick compilation fix for drawing variables and function calls of RGBAColor types. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2206
https://github.com/sofa-framework/sofa/pull/2206:34,Modifiability,variab,variables,34,"Quick compilation fix for drawing variables and function calls of RGBAColor types. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2206
https://github.com/sofa-framework/sofa/pull/2206:246,Security,Certificate,Certificate,246,"Quick compilation fix for drawing variables and function calls of RGBAColor types. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2206
https://github.com/sofa-framework/sofa/pull/2206:357,Security,certificate,certificate-of-origin-dco,357,"Quick compilation fix for drawing variables and function calls of RGBAColor types. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2206
https://github.com/sofa-framework/sofa/pull/2206:622,Testability,test,test,622,"Quick compilation fix for drawing variables and function calls of RGBAColor types. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2206
https://github.com/sofa-framework/sofa/pull/2206:671,Testability,test,test,671,"Quick compilation fix for drawing variables and function calls of RGBAColor types. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2206
https://github.com/sofa-framework/sofa/pull/2207:58,Availability,avail,available,58,"When a template parameter is not found in the list of the available templates:. ```; [WARNING] [CGLinearSolver(cGLinearSolver1)] Template 'CompressedRowSparseMatrix3d' cannot be found in the list of available templates [CompressedRowSparseMatrixMat2x2d, CompressedRowSparseMatrixMat3x3d, CompressedRowSparseMatrixMat4x4d, CompressedRowSparseMatrixMat6x6d, CompressedRowSparseMatrixMat8x8d, CompressedRowSparseMatrixd, FullMatrix, GraphScattered, NewMat, NewMatBand, NewMatSymmetric, NewMatSymmetricBand, SparseMatrix].; 	'GraphScattered' is used instead; ```. instead of. `[WARNING] [CGLinearSolver(cGLinearSolver1)] Template CompressedRowSparseMatrix3d incorrect, used GraphScattered`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2207
https://github.com/sofa-framework/sofa/pull/2207:199,Availability,avail,available,199,"When a template parameter is not found in the list of the available templates:. ```; [WARNING] [CGLinearSolver(cGLinearSolver1)] Template 'CompressedRowSparseMatrix3d' cannot be found in the list of available templates [CompressedRowSparseMatrixMat2x2d, CompressedRowSparseMatrixMat3x3d, CompressedRowSparseMatrixMat4x4d, CompressedRowSparseMatrixMat6x6d, CompressedRowSparseMatrixMat8x8d, CompressedRowSparseMatrixd, FullMatrix, GraphScattered, NewMat, NewMatBand, NewMatSymmetric, NewMatSymmetricBand, SparseMatrix].; 	'GraphScattered' is used instead; ```. instead of. `[WARNING] [CGLinearSolver(cGLinearSolver1)] Template CompressedRowSparseMatrix3d incorrect, used GraphScattered`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2207
https://github.com/sofa-framework/sofa/pull/2207:1231,Availability,failure,failures,1231,"When a template parameter is not found in the list of the available templates:. ```; [WARNING] [CGLinearSolver(cGLinearSolver1)] Template 'CompressedRowSparseMatrix3d' cannot be found in the list of available templates [CompressedRowSparseMatrixMat2x2d, CompressedRowSparseMatrixMat3x3d, CompressedRowSparseMatrixMat4x4d, CompressedRowSparseMatrixMat6x6d, CompressedRowSparseMatrixMat8x8d, CompressedRowSparseMatrixd, FullMatrix, GraphScattered, NewMat, NewMatBand, NewMatSymmetric, NewMatSymmetricBand, SparseMatrix].; 	'GraphScattered' is used instead; ```. instead of. `[WARNING] [CGLinearSolver(cGLinearSolver1)] Template CompressedRowSparseMatrix3d incorrect, used GraphScattered`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2207
https://github.com/sofa-framework/sofa/pull/2207:1280,Availability,failure,failures,1280,"When a template parameter is not found in the list of the available templates:. ```; [WARNING] [CGLinearSolver(cGLinearSolver1)] Template 'CompressedRowSparseMatrix3d' cannot be found in the list of available templates [CompressedRowSparseMatrixMat2x2d, CompressedRowSparseMatrixMat3x3d, CompressedRowSparseMatrixMat4x4d, CompressedRowSparseMatrixMat6x6d, CompressedRowSparseMatrixMat8x8d, CompressedRowSparseMatrixd, FullMatrix, GraphScattered, NewMat, NewMatBand, NewMatSymmetric, NewMatSymmetricBand, SparseMatrix].; 	'GraphScattered' is used instead; ```. instead of. `[WARNING] [CGLinearSolver(cGLinearSolver1)] Template CompressedRowSparseMatrix3d incorrect, used GraphScattered`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2207
https://github.com/sofa-framework/sofa/pull/2207:850,Security,Certificate,Certificate,850,"When a template parameter is not found in the list of the available templates:. ```; [WARNING] [CGLinearSolver(cGLinearSolver1)] Template 'CompressedRowSparseMatrix3d' cannot be found in the list of available templates [CompressedRowSparseMatrixMat2x2d, CompressedRowSparseMatrixMat3x3d, CompressedRowSparseMatrixMat4x4d, CompressedRowSparseMatrixMat6x6d, CompressedRowSparseMatrixMat8x8d, CompressedRowSparseMatrixd, FullMatrix, GraphScattered, NewMat, NewMatBand, NewMatSymmetric, NewMatSymmetricBand, SparseMatrix].; 	'GraphScattered' is used instead; ```. instead of. `[WARNING] [CGLinearSolver(cGLinearSolver1)] Template CompressedRowSparseMatrix3d incorrect, used GraphScattered`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2207
https://github.com/sofa-framework/sofa/pull/2207:961,Security,certificate,certificate-of-origin-dco,961,"When a template parameter is not found in the list of the available templates:. ```; [WARNING] [CGLinearSolver(cGLinearSolver1)] Template 'CompressedRowSparseMatrix3d' cannot be found in the list of available templates [CompressedRowSparseMatrixMat2x2d, CompressedRowSparseMatrixMat3x3d, CompressedRowSparseMatrixMat4x4d, CompressedRowSparseMatrixMat6x6d, CompressedRowSparseMatrixMat8x8d, CompressedRowSparseMatrixd, FullMatrix, GraphScattered, NewMat, NewMatBand, NewMatSymmetric, NewMatSymmetricBand, SparseMatrix].; 	'GraphScattered' is used instead; ```. instead of. `[WARNING] [CGLinearSolver(cGLinearSolver1)] Template CompressedRowSparseMatrix3d incorrect, used GraphScattered`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2207
https://github.com/sofa-framework/sofa/pull/2207:1226,Testability,test,test,1226,"When a template parameter is not found in the list of the available templates:. ```; [WARNING] [CGLinearSolver(cGLinearSolver1)] Template 'CompressedRowSparseMatrix3d' cannot be found in the list of available templates [CompressedRowSparseMatrixMat2x2d, CompressedRowSparseMatrixMat3x3d, CompressedRowSparseMatrixMat4x4d, CompressedRowSparseMatrixMat6x6d, CompressedRowSparseMatrixMat8x8d, CompressedRowSparseMatrixd, FullMatrix, GraphScattered, NewMat, NewMatBand, NewMatSymmetric, NewMatSymmetricBand, SparseMatrix].; 	'GraphScattered' is used instead; ```. instead of. `[WARNING] [CGLinearSolver(cGLinearSolver1)] Template CompressedRowSparseMatrix3d incorrect, used GraphScattered`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2207
https://github.com/sofa-framework/sofa/pull/2207:1275,Testability,test,test,1275,"When a template parameter is not found in the list of the available templates:. ```; [WARNING] [CGLinearSolver(cGLinearSolver1)] Template 'CompressedRowSparseMatrix3d' cannot be found in the list of available templates [CompressedRowSparseMatrixMat2x2d, CompressedRowSparseMatrixMat3x3d, CompressedRowSparseMatrixMat4x4d, CompressedRowSparseMatrixMat6x6d, CompressedRowSparseMatrixMat8x8d, CompressedRowSparseMatrixd, FullMatrix, GraphScattered, NewMat, NewMatBand, NewMatSymmetric, NewMatSymmetricBand, SparseMatrix].; 	'GraphScattered' is used instead; ```. instead of. `[WARNING] [CGLinearSolver(cGLinearSolver1)] Template CompressedRowSparseMatrix3d incorrect, used GraphScattered`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2207
https://github.com/sofa-framework/sofa/pull/2208:1816,Availability,failure,failures,1816,"Similar scenes are introduced as a benchmark in order to compare their performances.; It's a cantilever beam simulated with 2.5k tetrahedra.; Depending on the scene, it is solved with either a Conjugate Gradient or a LDL solver.; The main difference is how the global system matrix is assembled (or not in case of a matrix free solver). This is defined by the template parameter of the linear solver. # Results. The results are the average duration in milliseconds of the AnimateVisitor step:. ```; MatrixAssembly_assembledCG_blocs.scn 6.54 ms; MatrixAssembly_assembledCG.scn 16.65 ms; MatrixAssembly_direct_blocs.scn 12.85 ms; MatrixAssembly_direct.scn 22.04 ms; MatrixAssembly_matrixfreeCG.scn 7.99 ms; ```. * MatrixAssembly_matrixfreeCG.scn: the linear solver is a Conjugate Gradient and the matrix is not built; * MatrixAssembly_assembledCG.scn: the linear solver is a Conjugate Gradient and the matrix is explicitly built; * MatrixAssembly_assembledCG_blocs.scn: the linear solver is a Conjugate Gradient and the bloc-based matrix is explicitly built; * MatrixAssembly_direct.scn: the linear solver is a LDL solver and the matrix is explicitly built; * MatrixAssembly_direct_blocs.scn: the linear solver is a LDL solver and the bloc-based matrix is explicitly built. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2208
https://github.com/sofa-framework/sofa/pull/2208:1865,Availability,failure,failures,1865,"Similar scenes are introduced as a benchmark in order to compare their performances.; It's a cantilever beam simulated with 2.5k tetrahedra.; Depending on the scene, it is solved with either a Conjugate Gradient or a LDL solver.; The main difference is how the global system matrix is assembled (or not in case of a matrix free solver). This is defined by the template parameter of the linear solver. # Results. The results are the average duration in milliseconds of the AnimateVisitor step:. ```; MatrixAssembly_assembledCG_blocs.scn 6.54 ms; MatrixAssembly_assembledCG.scn 16.65 ms; MatrixAssembly_direct_blocs.scn 12.85 ms; MatrixAssembly_direct.scn 22.04 ms; MatrixAssembly_matrixfreeCG.scn 7.99 ms; ```. * MatrixAssembly_matrixfreeCG.scn: the linear solver is a Conjugate Gradient and the matrix is not built; * MatrixAssembly_assembledCG.scn: the linear solver is a Conjugate Gradient and the matrix is explicitly built; * MatrixAssembly_assembledCG_blocs.scn: the linear solver is a Conjugate Gradient and the bloc-based matrix is explicitly built; * MatrixAssembly_direct.scn: the linear solver is a LDL solver and the matrix is explicitly built; * MatrixAssembly_direct_blocs.scn: the linear solver is a LDL solver and the bloc-based matrix is explicitly built. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2208
https://github.com/sofa-framework/sofa/pull/2208:142,Integrability,Depend,Depending,142,"Similar scenes are introduced as a benchmark in order to compare their performances.; It's a cantilever beam simulated with 2.5k tetrahedra.; Depending on the scene, it is solved with either a Conjugate Gradient or a LDL solver.; The main difference is how the global system matrix is assembled (or not in case of a matrix free solver). This is defined by the template parameter of the linear solver. # Results. The results are the average duration in milliseconds of the AnimateVisitor step:. ```; MatrixAssembly_assembledCG_blocs.scn 6.54 ms; MatrixAssembly_assembledCG.scn 16.65 ms; MatrixAssembly_direct_blocs.scn 12.85 ms; MatrixAssembly_direct.scn 22.04 ms; MatrixAssembly_matrixfreeCG.scn 7.99 ms; ```. * MatrixAssembly_matrixfreeCG.scn: the linear solver is a Conjugate Gradient and the matrix is not built; * MatrixAssembly_assembledCG.scn: the linear solver is a Conjugate Gradient and the matrix is explicitly built; * MatrixAssembly_assembledCG_blocs.scn: the linear solver is a Conjugate Gradient and the bloc-based matrix is explicitly built; * MatrixAssembly_direct.scn: the linear solver is a LDL solver and the matrix is explicitly built; * MatrixAssembly_direct_blocs.scn: the linear solver is a LDL solver and the bloc-based matrix is explicitly built. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2208
https://github.com/sofa-framework/sofa/pull/2208:71,Performance,perform,performances,71,"Similar scenes are introduced as a benchmark in order to compare their performances.; It's a cantilever beam simulated with 2.5k tetrahedra.; Depending on the scene, it is solved with either a Conjugate Gradient or a LDL solver.; The main difference is how the global system matrix is assembled (or not in case of a matrix free solver). This is defined by the template parameter of the linear solver. # Results. The results are the average duration in milliseconds of the AnimateVisitor step:. ```; MatrixAssembly_assembledCG_blocs.scn 6.54 ms; MatrixAssembly_assembledCG.scn 16.65 ms; MatrixAssembly_direct_blocs.scn 12.85 ms; MatrixAssembly_direct.scn 22.04 ms; MatrixAssembly_matrixfreeCG.scn 7.99 ms; ```. * MatrixAssembly_matrixfreeCG.scn: the linear solver is a Conjugate Gradient and the matrix is not built; * MatrixAssembly_assembledCG.scn: the linear solver is a Conjugate Gradient and the matrix is explicitly built; * MatrixAssembly_assembledCG_blocs.scn: the linear solver is a Conjugate Gradient and the bloc-based matrix is explicitly built; * MatrixAssembly_direct.scn: the linear solver is a LDL solver and the matrix is explicitly built; * MatrixAssembly_direct_blocs.scn: the linear solver is a LDL solver and the bloc-based matrix is explicitly built. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2208
https://github.com/sofa-framework/sofa/pull/2208:1435,Security,Certificate,Certificate,1435,"Similar scenes are introduced as a benchmark in order to compare their performances.; It's a cantilever beam simulated with 2.5k tetrahedra.; Depending on the scene, it is solved with either a Conjugate Gradient or a LDL solver.; The main difference is how the global system matrix is assembled (or not in case of a matrix free solver). This is defined by the template parameter of the linear solver. # Results. The results are the average duration in milliseconds of the AnimateVisitor step:. ```; MatrixAssembly_assembledCG_blocs.scn 6.54 ms; MatrixAssembly_assembledCG.scn 16.65 ms; MatrixAssembly_direct_blocs.scn 12.85 ms; MatrixAssembly_direct.scn 22.04 ms; MatrixAssembly_matrixfreeCG.scn 7.99 ms; ```. * MatrixAssembly_matrixfreeCG.scn: the linear solver is a Conjugate Gradient and the matrix is not built; * MatrixAssembly_assembledCG.scn: the linear solver is a Conjugate Gradient and the matrix is explicitly built; * MatrixAssembly_assembledCG_blocs.scn: the linear solver is a Conjugate Gradient and the bloc-based matrix is explicitly built; * MatrixAssembly_direct.scn: the linear solver is a LDL solver and the matrix is explicitly built; * MatrixAssembly_direct_blocs.scn: the linear solver is a LDL solver and the bloc-based matrix is explicitly built. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2208
https://github.com/sofa-framework/sofa/pull/2208:1546,Security,certificate,certificate-of-origin-dco,1546,"Similar scenes are introduced as a benchmark in order to compare their performances.; It's a cantilever beam simulated with 2.5k tetrahedra.; Depending on the scene, it is solved with either a Conjugate Gradient or a LDL solver.; The main difference is how the global system matrix is assembled (or not in case of a matrix free solver). This is defined by the template parameter of the linear solver. # Results. The results are the average duration in milliseconds of the AnimateVisitor step:. ```; MatrixAssembly_assembledCG_blocs.scn 6.54 ms; MatrixAssembly_assembledCG.scn 16.65 ms; MatrixAssembly_direct_blocs.scn 12.85 ms; MatrixAssembly_direct.scn 22.04 ms; MatrixAssembly_matrixfreeCG.scn 7.99 ms; ```. * MatrixAssembly_matrixfreeCG.scn: the linear solver is a Conjugate Gradient and the matrix is not built; * MatrixAssembly_assembledCG.scn: the linear solver is a Conjugate Gradient and the matrix is explicitly built; * MatrixAssembly_assembledCG_blocs.scn: the linear solver is a Conjugate Gradient and the bloc-based matrix is explicitly built; * MatrixAssembly_direct.scn: the linear solver is a LDL solver and the matrix is explicitly built; * MatrixAssembly_direct_blocs.scn: the linear solver is a LDL solver and the bloc-based matrix is explicitly built. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2208
https://github.com/sofa-framework/sofa/pull/2208:35,Testability,benchmark,benchmark,35,"Similar scenes are introduced as a benchmark in order to compare their performances.; It's a cantilever beam simulated with 2.5k tetrahedra.; Depending on the scene, it is solved with either a Conjugate Gradient or a LDL solver.; The main difference is how the global system matrix is assembled (or not in case of a matrix free solver). This is defined by the template parameter of the linear solver. # Results. The results are the average duration in milliseconds of the AnimateVisitor step:. ```; MatrixAssembly_assembledCG_blocs.scn 6.54 ms; MatrixAssembly_assembledCG.scn 16.65 ms; MatrixAssembly_direct_blocs.scn 12.85 ms; MatrixAssembly_direct.scn 22.04 ms; MatrixAssembly_matrixfreeCG.scn 7.99 ms; ```. * MatrixAssembly_matrixfreeCG.scn: the linear solver is a Conjugate Gradient and the matrix is not built; * MatrixAssembly_assembledCG.scn: the linear solver is a Conjugate Gradient and the matrix is explicitly built; * MatrixAssembly_assembledCG_blocs.scn: the linear solver is a Conjugate Gradient and the bloc-based matrix is explicitly built; * MatrixAssembly_direct.scn: the linear solver is a LDL solver and the matrix is explicitly built; * MatrixAssembly_direct_blocs.scn: the linear solver is a LDL solver and the bloc-based matrix is explicitly built. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2208
https://github.com/sofa-framework/sofa/pull/2208:1811,Testability,test,test,1811,"Similar scenes are introduced as a benchmark in order to compare their performances.; It's a cantilever beam simulated with 2.5k tetrahedra.; Depending on the scene, it is solved with either a Conjugate Gradient or a LDL solver.; The main difference is how the global system matrix is assembled (or not in case of a matrix free solver). This is defined by the template parameter of the linear solver. # Results. The results are the average duration in milliseconds of the AnimateVisitor step:. ```; MatrixAssembly_assembledCG_blocs.scn 6.54 ms; MatrixAssembly_assembledCG.scn 16.65 ms; MatrixAssembly_direct_blocs.scn 12.85 ms; MatrixAssembly_direct.scn 22.04 ms; MatrixAssembly_matrixfreeCG.scn 7.99 ms; ```. * MatrixAssembly_matrixfreeCG.scn: the linear solver is a Conjugate Gradient and the matrix is not built; * MatrixAssembly_assembledCG.scn: the linear solver is a Conjugate Gradient and the matrix is explicitly built; * MatrixAssembly_assembledCG_blocs.scn: the linear solver is a Conjugate Gradient and the bloc-based matrix is explicitly built; * MatrixAssembly_direct.scn: the linear solver is a LDL solver and the matrix is explicitly built; * MatrixAssembly_direct_blocs.scn: the linear solver is a LDL solver and the bloc-based matrix is explicitly built. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2208
https://github.com/sofa-framework/sofa/pull/2208:1860,Testability,test,test,1860,"Similar scenes are introduced as a benchmark in order to compare their performances.; It's a cantilever beam simulated with 2.5k tetrahedra.; Depending on the scene, it is solved with either a Conjugate Gradient or a LDL solver.; The main difference is how the global system matrix is assembled (or not in case of a matrix free solver). This is defined by the template parameter of the linear solver. # Results. The results are the average duration in milliseconds of the AnimateVisitor step:. ```; MatrixAssembly_assembledCG_blocs.scn 6.54 ms; MatrixAssembly_assembledCG.scn 16.65 ms; MatrixAssembly_direct_blocs.scn 12.85 ms; MatrixAssembly_direct.scn 22.04 ms; MatrixAssembly_matrixfreeCG.scn 7.99 ms; ```. * MatrixAssembly_matrixfreeCG.scn: the linear solver is a Conjugate Gradient and the matrix is not built; * MatrixAssembly_assembledCG.scn: the linear solver is a Conjugate Gradient and the matrix is explicitly built; * MatrixAssembly_assembledCG_blocs.scn: the linear solver is a Conjugate Gradient and the bloc-based matrix is explicitly built; * MatrixAssembly_direct.scn: the linear solver is a LDL solver and the matrix is explicitly built; * MatrixAssembly_direct_blocs.scn: the linear solver is a LDL solver and the bloc-based matrix is explicitly built. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2208
https://github.com/sofa-framework/sofa/pull/2209:171,Energy Efficiency,reduce,reduce,171,"This is a port of the a Newton based Euler implicit solver I had in another project. In that project the solver return a ConvergenceStatus, which in the end allowed me to reduce the dt if the step failed to covnerged. In this case its not possible without modifying the AnimationLoop, but in any case, I am restoring the original position and velocities (or trying to, because it's not actually happening).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2209
https://github.com/sofa-framework/sofa/pull/2210:1963,Availability,failure,failures,1963,"enforces if the given Mat is 3x3 or 4x4 (does not make sense otherwise, or could even crash); 3. add a function toHomogeneousMatrix() for Mat4x4 for RigidTypes (which will use the toHomogenous of Quat); 4. remove uses of operator= with MultiMatrix in ODESolvers; 5. HeadlessRecorder was using a deprecated feature of VisualParameters (sceneTransform); 6. Use PathResolver in MultiMapping; 7. Rename Deprecation Macro in BaseData.h, correct the fix message and remove use of setOwnerClass. Note for 7.: the GUI was displaying either ""Base"" for owner (when hovering on the Data name) or ""no owner found"". I dont really know what was supposed to be displayed.; Now with the correction, all the Data will display their owner's name, which seems a bit useless to me. Before:; ![prclean_2106_beforename](https://user-images.githubusercontent.com/11028016/123656430-35593280-d830-11eb-8f3a-bfd4283ac64f.png) ![prclean_2106_beforeflags](https://user-images.githubusercontent.com/11028016/123656436-368a5f80-d830-11eb-8a41-d772aa2f679a.png). After:; ![prclean_2106_aftername](https://user-images.githubusercontent.com/11028016/123656520-4ace5c80-d830-11eb-86ba-9a761911530b.png) ![prclean_2106_afterflags](https://user-images.githubusercontent.com/11028016/123656532-4d30b680-d830-11eb-8a6a-af7ec55843f4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2210
https://github.com/sofa-framework/sofa/pull/2210:2012,Availability,failure,failures,2012,"enforces if the given Mat is 3x3 or 4x4 (does not make sense otherwise, or could even crash); 3. add a function toHomogeneousMatrix() for Mat4x4 for RigidTypes (which will use the toHomogenous of Quat); 4. remove uses of operator= with MultiMatrix in ODESolvers; 5. HeadlessRecorder was using a deprecated feature of VisualParameters (sceneTransform); 6. Use PathResolver in MultiMapping; 7. Rename Deprecation Macro in BaseData.h, correct the fix message and remove use of setOwnerClass. Note for 7.: the GUI was displaying either ""Base"" for owner (when hovering on the Data name) or ""no owner found"". I dont really know what was supposed to be displayed.; Now with the correction, all the Data will display their owner's name, which seems a bit useless to me. Before:; ![prclean_2106_beforename](https://user-images.githubusercontent.com/11028016/123656430-35593280-d830-11eb-8f3a-bfd4283ac64f.png) ![prclean_2106_beforeflags](https://user-images.githubusercontent.com/11028016/123656436-368a5f80-d830-11eb-8a41-d772aa2f679a.png). After:; ![prclean_2106_aftername](https://user-images.githubusercontent.com/11028016/123656520-4ace5c80-d830-11eb-86ba-9a761911530b.png) ![prclean_2106_afterflags](https://user-images.githubusercontent.com/11028016/123656532-4d30b680-d830-11eb-8a6a-af7ec55843f4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2210
https://github.com/sofa-framework/sofa/pull/2210:27,Deployability,release,release,27,"Cleaning PR for the v21.06 release. 1. remove warnings about unused variables/parameters; 2. transformRotation of Mat enforces if the given Mat is 3x3 or 4x4 (does not make sense otherwise, or could even crash); 3. add a function toHomogeneousMatrix() for Mat4x4 for RigidTypes (which will use the toHomogenous of Quat); 4. remove uses of operator= with MultiMatrix in ODESolvers; 5. HeadlessRecorder was using a deprecated feature of VisualParameters (sceneTransform); 6. Use PathResolver in MultiMapping; 7. Rename Deprecation Macro in BaseData.h, correct the fix message and remove use of setOwnerClass. Note for 7.: the GUI was displaying either ""Base"" for owner (when hovering on the Data name) or ""no owner found"". I dont really know what was supposed to be displayed.; Now with the correction, all the Data will display their owner's name, which seems a bit useless to me. Before:; ![prclean_2106_beforename](https://user-images.githubusercontent.com/11028016/123656430-35593280-d830-11eb-8f3a-bfd4283ac64f.png) ![prclean_2106_beforeflags](https://user-images.githubusercontent.com/11028016/123656436-368a5f80-d830-11eb-8a41-d772aa2f679a.png). After:; ![prclean_2106_aftername](https://user-images.githubusercontent.com/11028016/123656520-4ace5c80-d830-11eb-86ba-9a761911530b.png) ![prclean_2106_afterflags](https://user-images.githubusercontent.com/11028016/123656532-4d30b680-d830-11eb-8a6a-af7ec55843f4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2210
https://github.com/sofa-framework/sofa/pull/2210:566,Integrability,message,message,566,"Cleaning PR for the v21.06 release. 1. remove warnings about unused variables/parameters; 2. transformRotation of Mat enforces if the given Mat is 3x3 or 4x4 (does not make sense otherwise, or could even crash); 3. add a function toHomogeneousMatrix() for Mat4x4 for RigidTypes (which will use the toHomogenous of Quat); 4. remove uses of operator= with MultiMatrix in ODESolvers; 5. HeadlessRecorder was using a deprecated feature of VisualParameters (sceneTransform); 6. Use PathResolver in MultiMapping; 7. Rename Deprecation Macro in BaseData.h, correct the fix message and remove use of setOwnerClass. Note for 7.: the GUI was displaying either ""Base"" for owner (when hovering on the Data name) or ""no owner found"". I dont really know what was supposed to be displayed.; Now with the correction, all the Data will display their owner's name, which seems a bit useless to me. Before:; ![prclean_2106_beforename](https://user-images.githubusercontent.com/11028016/123656430-35593280-d830-11eb-8f3a-bfd4283ac64f.png) ![prclean_2106_beforeflags](https://user-images.githubusercontent.com/11028016/123656436-368a5f80-d830-11eb-8a41-d772aa2f679a.png). After:; ![prclean_2106_aftername](https://user-images.githubusercontent.com/11028016/123656520-4ace5c80-d830-11eb-86ba-9a761911530b.png) ![prclean_2106_afterflags](https://user-images.githubusercontent.com/11028016/123656532-4d30b680-d830-11eb-8a6a-af7ec55843f4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2210
https://github.com/sofa-framework/sofa/pull/2210:68,Modifiability,variab,variables,68,"Cleaning PR for the v21.06 release. 1. remove warnings about unused variables/parameters; 2. transformRotation of Mat enforces if the given Mat is 3x3 or 4x4 (does not make sense otherwise, or could even crash); 3. add a function toHomogeneousMatrix() for Mat4x4 for RigidTypes (which will use the toHomogenous of Quat); 4. remove uses of operator= with MultiMatrix in ODESolvers; 5. HeadlessRecorder was using a deprecated feature of VisualParameters (sceneTransform); 6. Use PathResolver in MultiMapping; 7. Rename Deprecation Macro in BaseData.h, correct the fix message and remove use of setOwnerClass. Note for 7.: the GUI was displaying either ""Base"" for owner (when hovering on the Data name) or ""no owner found"". I dont really know what was supposed to be displayed.; Now with the correction, all the Data will display their owner's name, which seems a bit useless to me. Before:; ![prclean_2106_beforename](https://user-images.githubusercontent.com/11028016/123656430-35593280-d830-11eb-8f3a-bfd4283ac64f.png) ![prclean_2106_beforeflags](https://user-images.githubusercontent.com/11028016/123656436-368a5f80-d830-11eb-8a41-d772aa2f679a.png). After:; ![prclean_2106_aftername](https://user-images.githubusercontent.com/11028016/123656520-4ace5c80-d830-11eb-86ba-9a761911530b.png) ![prclean_2106_afterflags](https://user-images.githubusercontent.com/11028016/123656532-4d30b680-d830-11eb-8a6a-af7ec55843f4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2210
https://github.com/sofa-framework/sofa/pull/2210:1582,Security,Certificate,Certificate,1582,"enforces if the given Mat is 3x3 or 4x4 (does not make sense otherwise, or could even crash); 3. add a function toHomogeneousMatrix() for Mat4x4 for RigidTypes (which will use the toHomogenous of Quat); 4. remove uses of operator= with MultiMatrix in ODESolvers; 5. HeadlessRecorder was using a deprecated feature of VisualParameters (sceneTransform); 6. Use PathResolver in MultiMapping; 7. Rename Deprecation Macro in BaseData.h, correct the fix message and remove use of setOwnerClass. Note for 7.: the GUI was displaying either ""Base"" for owner (when hovering on the Data name) or ""no owner found"". I dont really know what was supposed to be displayed.; Now with the correction, all the Data will display their owner's name, which seems a bit useless to me. Before:; ![prclean_2106_beforename](https://user-images.githubusercontent.com/11028016/123656430-35593280-d830-11eb-8f3a-bfd4283ac64f.png) ![prclean_2106_beforeflags](https://user-images.githubusercontent.com/11028016/123656436-368a5f80-d830-11eb-8a41-d772aa2f679a.png). After:; ![prclean_2106_aftername](https://user-images.githubusercontent.com/11028016/123656520-4ace5c80-d830-11eb-86ba-9a761911530b.png) ![prclean_2106_afterflags](https://user-images.githubusercontent.com/11028016/123656532-4d30b680-d830-11eb-8a6a-af7ec55843f4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2210
https://github.com/sofa-framework/sofa/pull/2210:1693,Security,certificate,certificate-of-origin-dco,1693,"enforces if the given Mat is 3x3 or 4x4 (does not make sense otherwise, or could even crash); 3. add a function toHomogeneousMatrix() for Mat4x4 for RigidTypes (which will use the toHomogenous of Quat); 4. remove uses of operator= with MultiMatrix in ODESolvers; 5. HeadlessRecorder was using a deprecated feature of VisualParameters (sceneTransform); 6. Use PathResolver in MultiMapping; 7. Rename Deprecation Macro in BaseData.h, correct the fix message and remove use of setOwnerClass. Note for 7.: the GUI was displaying either ""Base"" for owner (when hovering on the Data name) or ""no owner found"". I dont really know what was supposed to be displayed.; Now with the correction, all the Data will display their owner's name, which seems a bit useless to me. Before:; ![prclean_2106_beforename](https://user-images.githubusercontent.com/11028016/123656430-35593280-d830-11eb-8f3a-bfd4283ac64f.png) ![prclean_2106_beforeflags](https://user-images.githubusercontent.com/11028016/123656436-368a5f80-d830-11eb-8a41-d772aa2f679a.png). After:; ![prclean_2106_aftername](https://user-images.githubusercontent.com/11028016/123656520-4ace5c80-d830-11eb-86ba-9a761911530b.png) ![prclean_2106_afterflags](https://user-images.githubusercontent.com/11028016/123656532-4d30b680-d830-11eb-8a6a-af7ec55843f4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2210
https://github.com/sofa-framework/sofa/pull/2210:1958,Testability,test,test,1958,"enforces if the given Mat is 3x3 or 4x4 (does not make sense otherwise, or could even crash); 3. add a function toHomogeneousMatrix() for Mat4x4 for RigidTypes (which will use the toHomogenous of Quat); 4. remove uses of operator= with MultiMatrix in ODESolvers; 5. HeadlessRecorder was using a deprecated feature of VisualParameters (sceneTransform); 6. Use PathResolver in MultiMapping; 7. Rename Deprecation Macro in BaseData.h, correct the fix message and remove use of setOwnerClass. Note for 7.: the GUI was displaying either ""Base"" for owner (when hovering on the Data name) or ""no owner found"". I dont really know what was supposed to be displayed.; Now with the correction, all the Data will display their owner's name, which seems a bit useless to me. Before:; ![prclean_2106_beforename](https://user-images.githubusercontent.com/11028016/123656430-35593280-d830-11eb-8f3a-bfd4283ac64f.png) ![prclean_2106_beforeflags](https://user-images.githubusercontent.com/11028016/123656436-368a5f80-d830-11eb-8a41-d772aa2f679a.png). After:; ![prclean_2106_aftername](https://user-images.githubusercontent.com/11028016/123656520-4ace5c80-d830-11eb-86ba-9a761911530b.png) ![prclean_2106_afterflags](https://user-images.githubusercontent.com/11028016/123656532-4d30b680-d830-11eb-8a6a-af7ec55843f4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2210
https://github.com/sofa-framework/sofa/pull/2210:2007,Testability,test,test,2007,"enforces if the given Mat is 3x3 or 4x4 (does not make sense otherwise, or could even crash); 3. add a function toHomogeneousMatrix() for Mat4x4 for RigidTypes (which will use the toHomogenous of Quat); 4. remove uses of operator= with MultiMatrix in ODESolvers; 5. HeadlessRecorder was using a deprecated feature of VisualParameters (sceneTransform); 6. Use PathResolver in MultiMapping; 7. Rename Deprecation Macro in BaseData.h, correct the fix message and remove use of setOwnerClass. Note for 7.: the GUI was displaying either ""Base"" for owner (when hovering on the Data name) or ""no owner found"". I dont really know what was supposed to be displayed.; Now with the correction, all the Data will display their owner's name, which seems a bit useless to me. Before:; ![prclean_2106_beforename](https://user-images.githubusercontent.com/11028016/123656430-35593280-d830-11eb-8f3a-bfd4283ac64f.png) ![prclean_2106_beforeflags](https://user-images.githubusercontent.com/11028016/123656436-368a5f80-d830-11eb-8a41-d772aa2f679a.png). After:; ![prclean_2106_aftername](https://user-images.githubusercontent.com/11028016/123656520-4ace5c80-d830-11eb-86ba-9a761911530b.png) ![prclean_2106_afterflags](https://user-images.githubusercontent.com/11028016/123656532-4d30b680-d830-11eb-8a6a-af7ec55843f4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2210
https://github.com/sofa-framework/sofa/pull/2211:667,Availability,failure,failures,667,"`parentData == nullptr` leads to a crash. I think it happens when the linked object could not be created for some reasons. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2211
https://github.com/sofa-framework/sofa/pull/2211:716,Availability,failure,failures,716,"`parentData == nullptr` leads to a crash. I think it happens when the linked object could not be created for some reasons. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2211
https://github.com/sofa-framework/sofa/pull/2211:286,Security,Certificate,Certificate,286,"`parentData == nullptr` leads to a crash. I think it happens when the linked object could not be created for some reasons. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2211
https://github.com/sofa-framework/sofa/pull/2211:397,Security,certificate,certificate-of-origin-dco,397,"`parentData == nullptr` leads to a crash. I think it happens when the linked object could not be created for some reasons. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2211
https://github.com/sofa-framework/sofa/pull/2211:662,Testability,test,test,662,"`parentData == nullptr` leads to a crash. I think it happens when the linked object could not be created for some reasons. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2211
https://github.com/sofa-framework/sofa/pull/2211:711,Testability,test,test,711,"`parentData == nullptr` leads to a crash. I think it happens when the linked object could not be created for some reasons. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2211
https://github.com/sofa-framework/sofa/pull/2212:725,Availability,failure,failures,725,"RayTraceDetection is deprecated. Use BruteForceBroadPhase and RayTraceNarrowPhase instead.; A message warns the user and it keeps compatibility with scenes using RayTraceDetection. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2212
https://github.com/sofa-framework/sofa/pull/2212:774,Availability,failure,failures,774,"RayTraceDetection is deprecated. Use BruteForceBroadPhase and RayTraceNarrowPhase instead.; A message warns the user and it keeps compatibility with scenes using RayTraceDetection. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2212
https://github.com/sofa-framework/sofa/pull/2212:94,Integrability,message,message,94,"RayTraceDetection is deprecated. Use BruteForceBroadPhase and RayTraceNarrowPhase instead.; A message warns the user and it keeps compatibility with scenes using RayTraceDetection. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2212
https://github.com/sofa-framework/sofa/pull/2212:344,Security,Certificate,Certificate,344,"RayTraceDetection is deprecated. Use BruteForceBroadPhase and RayTraceNarrowPhase instead.; A message warns the user and it keeps compatibility with scenes using RayTraceDetection. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2212
https://github.com/sofa-framework/sofa/pull/2212:455,Security,certificate,certificate-of-origin-dco,455,"RayTraceDetection is deprecated. Use BruteForceBroadPhase and RayTraceNarrowPhase instead.; A message warns the user and it keeps compatibility with scenes using RayTraceDetection. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2212
https://github.com/sofa-framework/sofa/pull/2212:720,Testability,test,test,720,"RayTraceDetection is deprecated. Use BruteForceBroadPhase and RayTraceNarrowPhase instead.; A message warns the user and it keeps compatibility with scenes using RayTraceDetection. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2212
https://github.com/sofa-framework/sofa/pull/2212:769,Testability,test,test,769,"RayTraceDetection is deprecated. Use BruteForceBroadPhase and RayTraceNarrowPhase instead.; A message warns the user and it keeps compatibility with scenes using RayTraceDetection. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2212
https://github.com/sofa-framework/sofa/pull/2213:583,Availability,failure,failures,583,"To identify where addDForce is called. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2213
https://github.com/sofa-framework/sofa/pull/2213:632,Availability,failure,failures,632,"To identify where addDForce is called. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2213
https://github.com/sofa-framework/sofa/pull/2213:202,Security,Certificate,Certificate,202,"To identify where addDForce is called. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2213
https://github.com/sofa-framework/sofa/pull/2213:313,Security,certificate,certificate-of-origin-dco,313,"To identify where addDForce is called. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2213
https://github.com/sofa-framework/sofa/pull/2213:578,Testability,test,test,578,"To identify where addDForce is called. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2213
https://github.com/sofa-framework/sofa/pull/2213:627,Testability,test,test,627,"To identify where addDForce is called. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2213
https://github.com/sofa-framework/sofa/pull/2214:49,Availability,error,error,49,"Reverts sofa-framework/sofa#2208. Sorry, made an error with github cli !",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2214
https://github.com/sofa-framework/sofa/pull/2215:728,Availability,failure,failures,728,"Add unit test for:; Hexahedron, tetrahedron, quad, triangle et edge removal. ; Edge is not supported for the moment. To be rebased on master when PR #2191, #2192 and #2193 are merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2215
https://github.com/sofa-framework/sofa/pull/2215:777,Availability,failure,failures,777,"Add unit test for:; Hexahedron, tetrahedron, quad, triangle et edge removal. ; Edge is not supported for the moment. To be rebased on master when PR #2191, #2192 and #2193 are merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2215
https://github.com/sofa-framework/sofa/pull/2215:347,Security,Certificate,Certificate,347,"Add unit test for:; Hexahedron, tetrahedron, quad, triangle et edge removal. ; Edge is not supported for the moment. To be rebased on master when PR #2191, #2192 and #2193 are merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2215
https://github.com/sofa-framework/sofa/pull/2215:458,Security,certificate,certificate-of-origin-dco,458,"Add unit test for:; Hexahedron, tetrahedron, quad, triangle et edge removal. ; Edge is not supported for the moment. To be rebased on master when PR #2191, #2192 and #2193 are merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2215
https://github.com/sofa-framework/sofa/pull/2215:9,Testability,test,test,9,"Add unit test for:; Hexahedron, tetrahedron, quad, triangle et edge removal. ; Edge is not supported for the moment. To be rebased on master when PR #2191, #2192 and #2193 are merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2215
https://github.com/sofa-framework/sofa/pull/2215:723,Testability,test,test,723,"Add unit test for:; Hexahedron, tetrahedron, quad, triangle et edge removal. ; Edge is not supported for the moment. To be rebased on master when PR #2191, #2192 and #2193 are merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2215
https://github.com/sofa-framework/sofa/pull/2215:772,Testability,test,test,772,"Add unit test for:; Hexahedron, tetrahedron, quad, triangle et edge removal. ; Edge is not supported for the moment. To be rebased on master when PR #2191, #2192 and #2193 are merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2215
https://github.com/sofa-framework/sofa/pull/2216:830,Availability,failure,failures,830,"Use of the compatibility layer becomes optional now. Useful if one needs to check if their code is fully v21.06.; ON is the default value for easy-transitioning (for now). It would be nice for one build on the CI to set the option to OFF (to detect PRs still using deprecated headers). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2216
https://github.com/sofa-framework/sofa/pull/2216:879,Availability,failure,failures,879,"Use of the compatibility layer becomes optional now. Useful if one needs to check if their code is fully v21.06.; ON is the default value for easy-transitioning (for now). It would be nice for one build on the CI to set the option to OFF (to detect PRs still using deprecated headers). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2216
https://github.com/sofa-framework/sofa/pull/2216:242,Safety,detect,detect,242,"Use of the compatibility layer becomes optional now. Useful if one needs to check if their code is fully v21.06.; ON is the default value for easy-transitioning (for now). It would be nice for one build on the CI to set the option to OFF (to detect PRs still using deprecated headers). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2216
https://github.com/sofa-framework/sofa/pull/2216:449,Security,Certificate,Certificate,449,"Use of the compatibility layer becomes optional now. Useful if one needs to check if their code is fully v21.06.; ON is the default value for easy-transitioning (for now). It would be nice for one build on the CI to set the option to OFF (to detect PRs still using deprecated headers). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2216
https://github.com/sofa-framework/sofa/pull/2216:560,Security,certificate,certificate-of-origin-dco,560,"Use of the compatibility layer becomes optional now. Useful if one needs to check if their code is fully v21.06.; ON is the default value for easy-transitioning (for now). It would be nice for one build on the CI to set the option to OFF (to detect PRs still using deprecated headers). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2216
https://github.com/sofa-framework/sofa/pull/2216:825,Testability,test,test,825,"Use of the compatibility layer becomes optional now. Useful if one needs to check if their code is fully v21.06.; ON is the default value for easy-transitioning (for now). It would be nice for one build on the CI to set the option to OFF (to detect PRs still using deprecated headers). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2216
https://github.com/sofa-framework/sofa/pull/2216:874,Testability,test,test,874,"Use of the compatibility layer becomes optional now. Useful if one needs to check if their code is fully v21.06.; ON is the default value for easy-transitioning (for now). It would be nice for one build on the CI to set the option to OFF (to detect PRs still using deprecated headers). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2216
https://github.com/sofa-framework/sofa/pull/2217:1344,Availability,failure,failures,1344,"1- MSVC was never throwing deprecation warnings because ... it was disabled with the compiler flags. A bit hard to inform the user that one feature or file is deprecated if he is not warned. ; So this PR re-enables 4996 (deprecation) warnings but still disable some msvc-specific deprecation notices (with some preprocessor defines). 2- A contrario, deprecation warnings in extlibs are quite annoying so they should be disabled IMO. 3- enabling deprecation warnings led to two types of deprecation in the SOFA code base:; - _sleep() is deprecated (used for WIN32 only); - unique() of shared_ptr is deprecated in c++17 : https://en.cppreference.com/w/cpp/memory/shared_ptr/unique ; Replaced with use_count() == 1 but this does not really address the issue of approximation in a multithreaded context. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2217
https://github.com/sofa-framework/sofa/pull/2217:1393,Availability,failure,failures,1393,"1- MSVC was never throwing deprecation warnings because ... it was disabled with the compiler flags. A bit hard to inform the user that one feature or file is deprecated if he is not warned. ; So this PR re-enables 4996 (deprecation) warnings but still disable some msvc-specific deprecation notices (with some preprocessor defines). 2- A contrario, deprecation warnings in extlibs are quite annoying so they should be disabled IMO. 3- enabling deprecation warnings led to two types of deprecation in the SOFA code base:; - _sleep() is deprecated (used for WIN32 only); - unique() of shared_ptr is deprecated in c++17 : https://en.cppreference.com/w/cpp/memory/shared_ptr/unique ; Replaced with use_count() == 1 but this does not really address the issue of approximation in a multithreaded context. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2217
https://github.com/sofa-framework/sofa/pull/2217:963,Security,Certificate,Certificate,963,"1- MSVC was never throwing deprecation warnings because ... it was disabled with the compiler flags. A bit hard to inform the user that one feature or file is deprecated if he is not warned. ; So this PR re-enables 4996 (deprecation) warnings but still disable some msvc-specific deprecation notices (with some preprocessor defines). 2- A contrario, deprecation warnings in extlibs are quite annoying so they should be disabled IMO. 3- enabling deprecation warnings led to two types of deprecation in the SOFA code base:; - _sleep() is deprecated (used for WIN32 only); - unique() of shared_ptr is deprecated in c++17 : https://en.cppreference.com/w/cpp/memory/shared_ptr/unique ; Replaced with use_count() == 1 but this does not really address the issue of approximation in a multithreaded context. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2217
https://github.com/sofa-framework/sofa/pull/2217:1074,Security,certificate,certificate-of-origin-dco,1074,"1- MSVC was never throwing deprecation warnings because ... it was disabled with the compiler flags. A bit hard to inform the user that one feature or file is deprecated if he is not warned. ; So this PR re-enables 4996 (deprecation) warnings but still disable some msvc-specific deprecation notices (with some preprocessor defines). 2- A contrario, deprecation warnings in extlibs are quite annoying so they should be disabled IMO. 3- enabling deprecation warnings led to two types of deprecation in the SOFA code base:; - _sleep() is deprecated (used for WIN32 only); - unique() of shared_ptr is deprecated in c++17 : https://en.cppreference.com/w/cpp/memory/shared_ptr/unique ; Replaced with use_count() == 1 but this does not really address the issue of approximation in a multithreaded context. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2217
https://github.com/sofa-framework/sofa/pull/2217:1339,Testability,test,test,1339,"1- MSVC was never throwing deprecation warnings because ... it was disabled with the compiler flags. A bit hard to inform the user that one feature or file is deprecated if he is not warned. ; So this PR re-enables 4996 (deprecation) warnings but still disable some msvc-specific deprecation notices (with some preprocessor defines). 2- A contrario, deprecation warnings in extlibs are quite annoying so they should be disabled IMO. 3- enabling deprecation warnings led to two types of deprecation in the SOFA code base:; - _sleep() is deprecated (used for WIN32 only); - unique() of shared_ptr is deprecated in c++17 : https://en.cppreference.com/w/cpp/memory/shared_ptr/unique ; Replaced with use_count() == 1 but this does not really address the issue of approximation in a multithreaded context. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2217
https://github.com/sofa-framework/sofa/pull/2217:1388,Testability,test,test,1388,"1- MSVC was never throwing deprecation warnings because ... it was disabled with the compiler flags. A bit hard to inform the user that one feature or file is deprecated if he is not warned. ; So this PR re-enables 4996 (deprecation) warnings but still disable some msvc-specific deprecation notices (with some preprocessor defines). 2- A contrario, deprecation warnings in extlibs are quite annoying so they should be disabled IMO. 3- enabling deprecation warnings led to two types of deprecation in the SOFA code base:; - _sleep() is deprecated (used for WIN32 only); - unique() of shared_ptr is deprecated in c++17 : https://en.cppreference.com/w/cpp/memory/shared_ptr/unique ; Replaced with use_count() == 1 but this does not really address the issue of approximation in a multithreaded context. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2217
https://github.com/sofa-framework/sofa/pull/2218:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2218
https://github.com/sofa-framework/sofa/pull/2218:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2218
https://github.com/sofa-framework/sofa/pull/2218:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2218
https://github.com/sofa-framework/sofa/pull/2218:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2218
https://github.com/sofa-framework/sofa/pull/2218:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2218
https://github.com/sofa-framework/sofa/pull/2218:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2218
https://github.com/sofa-framework/sofa/issues/2219:13,Modifiability,plugin,plugins,13,"applications/plugins/CGALPlugin/src/CGALPlugin/BooleanOperations.cpp line 274; Code:; helper::WriteAccessor< Data<helper::vector<int>> > indices1 = d_indices1Out;; helper::WriteAccessor< Data<helper::vector<int>> > indices2 = d_indices2Out;; m_distribution.clear();; std::pair<int, std::pair<int, int>> pair; // <- better with space (> >)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2219
https://github.com/sofa-framework/sofa/issues/2219:257,Usability,clear,clear,257,"applications/plugins/CGALPlugin/src/CGALPlugin/BooleanOperations.cpp line 274; Code:; helper::WriteAccessor< Data<helper::vector<int>> > indices1 = d_indices1Out;; helper::WriteAccessor< Data<helper::vector<int>> > indices2 = d_indices2Out;; m_distribution.clear();; std::pair<int, std::pair<int, int>> pair; // <- better with space (> >)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2219
https://github.com/sofa-framework/sofa/pull/2220:1231,Availability,failure,failures,1231,"The intention of `CRSMultiMatrixAccessor` was to use it as a replacement of `DefaultMultiMatrixAccessor` in `MatrixLinearSolver`. The switch is done at compilation time using a macro.; However, `CRSMultiMatrixAccessor` compilation was also controlled by the same macro which is not switched everyday. In other words, `CRSMultiMatrixAccessor` was almost dead code. I extracted the `CRSMultiMatrixAccessor` class from the `DefaultMultiMatrixAccessor` file to put it in its own file.; I removed the condition on the compilation of `CRSMultiMatrixAccessor` so that this code is always compiled. Currently, I don't know if `CRSMultiMatrixAccessor` is useful. It may be removed in the future. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2220
https://github.com/sofa-framework/sofa/pull/2220:1280,Availability,failure,failures,1280,"The intention of `CRSMultiMatrixAccessor` was to use it as a replacement of `DefaultMultiMatrixAccessor` in `MatrixLinearSolver`. The switch is done at compilation time using a macro.; However, `CRSMultiMatrixAccessor` compilation was also controlled by the same macro which is not switched everyday. In other words, `CRSMultiMatrixAccessor` was almost dead code. I extracted the `CRSMultiMatrixAccessor` class from the `DefaultMultiMatrixAccessor` file to put it in its own file.; I removed the condition on the compilation of `CRSMultiMatrixAccessor` so that this code is always compiled. Currently, I don't know if `CRSMultiMatrixAccessor` is useful. It may be removed in the future. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2220
https://github.com/sofa-framework/sofa/pull/2220:850,Security,Certificate,Certificate,850,"The intention of `CRSMultiMatrixAccessor` was to use it as a replacement of `DefaultMultiMatrixAccessor` in `MatrixLinearSolver`. The switch is done at compilation time using a macro.; However, `CRSMultiMatrixAccessor` compilation was also controlled by the same macro which is not switched everyday. In other words, `CRSMultiMatrixAccessor` was almost dead code. I extracted the `CRSMultiMatrixAccessor` class from the `DefaultMultiMatrixAccessor` file to put it in its own file.; I removed the condition on the compilation of `CRSMultiMatrixAccessor` so that this code is always compiled. Currently, I don't know if `CRSMultiMatrixAccessor` is useful. It may be removed in the future. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2220
https://github.com/sofa-framework/sofa/pull/2220:961,Security,certificate,certificate-of-origin-dco,961,"The intention of `CRSMultiMatrixAccessor` was to use it as a replacement of `DefaultMultiMatrixAccessor` in `MatrixLinearSolver`. The switch is done at compilation time using a macro.; However, `CRSMultiMatrixAccessor` compilation was also controlled by the same macro which is not switched everyday. In other words, `CRSMultiMatrixAccessor` was almost dead code. I extracted the `CRSMultiMatrixAccessor` class from the `DefaultMultiMatrixAccessor` file to put it in its own file.; I removed the condition on the compilation of `CRSMultiMatrixAccessor` so that this code is always compiled. Currently, I don't know if `CRSMultiMatrixAccessor` is useful. It may be removed in the future. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2220
https://github.com/sofa-framework/sofa/pull/2220:1226,Testability,test,test,1226,"The intention of `CRSMultiMatrixAccessor` was to use it as a replacement of `DefaultMultiMatrixAccessor` in `MatrixLinearSolver`. The switch is done at compilation time using a macro.; However, `CRSMultiMatrixAccessor` compilation was also controlled by the same macro which is not switched everyday. In other words, `CRSMultiMatrixAccessor` was almost dead code. I extracted the `CRSMultiMatrixAccessor` class from the `DefaultMultiMatrixAccessor` file to put it in its own file.; I removed the condition on the compilation of `CRSMultiMatrixAccessor` so that this code is always compiled. Currently, I don't know if `CRSMultiMatrixAccessor` is useful. It may be removed in the future. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2220
https://github.com/sofa-framework/sofa/pull/2220:1275,Testability,test,test,1275,"The intention of `CRSMultiMatrixAccessor` was to use it as a replacement of `DefaultMultiMatrixAccessor` in `MatrixLinearSolver`. The switch is done at compilation time using a macro.; However, `CRSMultiMatrixAccessor` compilation was also controlled by the same macro which is not switched everyday. In other words, `CRSMultiMatrixAccessor` was almost dead code. I extracted the `CRSMultiMatrixAccessor` class from the `DefaultMultiMatrixAccessor` file to put it in its own file.; I removed the condition on the compilation of `CRSMultiMatrixAccessor` so that this code is always compiled. Currently, I don't know if `CRSMultiMatrixAccessor` is useful. It may be removed in the future. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2220
https://github.com/sofa-framework/sofa/pull/2221:6,Availability,ERROR,ERROR,6,"```; [ERROR] [DAGNode(Snake)] A linear solver is required, but has not been found. Add a linear solver to your scene to fix this issue. The list of available linear solver components is: [BTDLinearSolver, BlockJacobiPreconditioner, CGLinearSolver, CholeskySolver, JacobiPreconditioner, LULinearSolver, MinResLinearSolver, PrecomputedLinearSolver, PrecomputedWarpPreconditioner, SSORPreconditioner, SVDLinearSolver, ShewchukPCGLinearSolver, SparseCholeskySolver, SparseLDLSolver, SparseLUSolver, WarpPreconditioner].; ```. instead of. ```; [ERROR] [DAGNode(Snake)] Requires a LinearSolver.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2221
https://github.com/sofa-framework/sofa/pull/2221:148,Availability,avail,available,148,"```; [ERROR] [DAGNode(Snake)] A linear solver is required, but has not been found. Add a linear solver to your scene to fix this issue. The list of available linear solver components is: [BTDLinearSolver, BlockJacobiPreconditioner, CGLinearSolver, CholeskySolver, JacobiPreconditioner, LULinearSolver, MinResLinearSolver, PrecomputedLinearSolver, PrecomputedWarpPreconditioner, SSORPreconditioner, SVDLinearSolver, ShewchukPCGLinearSolver, SparseCholeskySolver, SparseLDLSolver, SparseLUSolver, WarpPreconditioner].; ```. instead of. ```; [ERROR] [DAGNode(Snake)] Requires a LinearSolver.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2221
https://github.com/sofa-framework/sofa/pull/2221:540,Availability,ERROR,ERROR,540,"```; [ERROR] [DAGNode(Snake)] A linear solver is required, but has not been found. Add a linear solver to your scene to fix this issue. The list of available linear solver components is: [BTDLinearSolver, BlockJacobiPreconditioner, CGLinearSolver, CholeskySolver, JacobiPreconditioner, LULinearSolver, MinResLinearSolver, PrecomputedLinearSolver, PrecomputedWarpPreconditioner, SSORPreconditioner, SVDLinearSolver, ShewchukPCGLinearSolver, SparseCholeskySolver, SparseLDLSolver, SparseLUSolver, WarpPreconditioner].; ```. instead of. ```; [ERROR] [DAGNode(Snake)] Requires a LinearSolver.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2221
https://github.com/sofa-framework/sofa/pull/2221:1139,Availability,failure,failures,1139,"```; [ERROR] [DAGNode(Snake)] A linear solver is required, but has not been found. Add a linear solver to your scene to fix this issue. The list of available linear solver components is: [BTDLinearSolver, BlockJacobiPreconditioner, CGLinearSolver, CholeskySolver, JacobiPreconditioner, LULinearSolver, MinResLinearSolver, PrecomputedLinearSolver, PrecomputedWarpPreconditioner, SSORPreconditioner, SVDLinearSolver, ShewchukPCGLinearSolver, SparseCholeskySolver, SparseLDLSolver, SparseLUSolver, WarpPreconditioner].; ```. instead of. ```; [ERROR] [DAGNode(Snake)] Requires a LinearSolver.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2221
https://github.com/sofa-framework/sofa/pull/2221:1188,Availability,failure,failures,1188,"```; [ERROR] [DAGNode(Snake)] A linear solver is required, but has not been found. Add a linear solver to your scene to fix this issue. The list of available linear solver components is: [BTDLinearSolver, BlockJacobiPreconditioner, CGLinearSolver, CholeskySolver, JacobiPreconditioner, LULinearSolver, MinResLinearSolver, PrecomputedLinearSolver, PrecomputedWarpPreconditioner, SSORPreconditioner, SVDLinearSolver, ShewchukPCGLinearSolver, SparseCholeskySolver, SparseLDLSolver, SparseLUSolver, WarpPreconditioner].; ```. instead of. ```; [ERROR] [DAGNode(Snake)] Requires a LinearSolver.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2221
https://github.com/sofa-framework/sofa/pull/2221:758,Security,Certificate,Certificate,758,"```; [ERROR] [DAGNode(Snake)] A linear solver is required, but has not been found. Add a linear solver to your scene to fix this issue. The list of available linear solver components is: [BTDLinearSolver, BlockJacobiPreconditioner, CGLinearSolver, CholeskySolver, JacobiPreconditioner, LULinearSolver, MinResLinearSolver, PrecomputedLinearSolver, PrecomputedWarpPreconditioner, SSORPreconditioner, SVDLinearSolver, ShewchukPCGLinearSolver, SparseCholeskySolver, SparseLDLSolver, SparseLUSolver, WarpPreconditioner].; ```. instead of. ```; [ERROR] [DAGNode(Snake)] Requires a LinearSolver.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2221
https://github.com/sofa-framework/sofa/pull/2221:869,Security,certificate,certificate-of-origin-dco,869,"```; [ERROR] [DAGNode(Snake)] A linear solver is required, but has not been found. Add a linear solver to your scene to fix this issue. The list of available linear solver components is: [BTDLinearSolver, BlockJacobiPreconditioner, CGLinearSolver, CholeskySolver, JacobiPreconditioner, LULinearSolver, MinResLinearSolver, PrecomputedLinearSolver, PrecomputedWarpPreconditioner, SSORPreconditioner, SVDLinearSolver, ShewchukPCGLinearSolver, SparseCholeskySolver, SparseLDLSolver, SparseLUSolver, WarpPreconditioner].; ```. instead of. ```; [ERROR] [DAGNode(Snake)] Requires a LinearSolver.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2221
https://github.com/sofa-framework/sofa/pull/2221:1134,Testability,test,test,1134,"```; [ERROR] [DAGNode(Snake)] A linear solver is required, but has not been found. Add a linear solver to your scene to fix this issue. The list of available linear solver components is: [BTDLinearSolver, BlockJacobiPreconditioner, CGLinearSolver, CholeskySolver, JacobiPreconditioner, LULinearSolver, MinResLinearSolver, PrecomputedLinearSolver, PrecomputedWarpPreconditioner, SSORPreconditioner, SVDLinearSolver, ShewchukPCGLinearSolver, SparseCholeskySolver, SparseLDLSolver, SparseLUSolver, WarpPreconditioner].; ```. instead of. ```; [ERROR] [DAGNode(Snake)] Requires a LinearSolver.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2221
https://github.com/sofa-framework/sofa/pull/2221:1183,Testability,test,test,1183,"```; [ERROR] [DAGNode(Snake)] A linear solver is required, but has not been found. Add a linear solver to your scene to fix this issue. The list of available linear solver components is: [BTDLinearSolver, BlockJacobiPreconditioner, CGLinearSolver, CholeskySolver, JacobiPreconditioner, LULinearSolver, MinResLinearSolver, PrecomputedLinearSolver, PrecomputedWarpPreconditioner, SSORPreconditioner, SVDLinearSolver, ShewchukPCGLinearSolver, SparseCholeskySolver, SparseLDLSolver, SparseLUSolver, WarpPreconditioner].; ```. instead of. ```; [ERROR] [DAGNode(Snake)] Requires a LinearSolver.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2221
https://github.com/sofa-framework/sofa/pull/2222:829,Availability,failure,failures,829,"The `LCPConstraintSolver` in its unbuilt version crashed when a contact does not have an associated constraint correction, because of a null pointer dereference. Now, the pointer is checked for null. Also, if there are only contacts without constraint correction, the algorithm stops. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2222
https://github.com/sofa-framework/sofa/pull/2222:878,Availability,failure,failures,878,"The `LCPConstraintSolver` in its unbuilt version crashed when a contact does not have an associated constraint correction, because of a null pointer dereference. Now, the pointer is checked for null. Also, if there are only contacts without constraint correction, the algorithm stops. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2222
https://github.com/sofa-framework/sofa/pull/2222:448,Security,Certificate,Certificate,448,"The `LCPConstraintSolver` in its unbuilt version crashed when a contact does not have an associated constraint correction, because of a null pointer dereference. Now, the pointer is checked for null. Also, if there are only contacts without constraint correction, the algorithm stops. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2222
https://github.com/sofa-framework/sofa/pull/2222:559,Security,certificate,certificate-of-origin-dco,559,"The `LCPConstraintSolver` in its unbuilt version crashed when a contact does not have an associated constraint correction, because of a null pointer dereference. Now, the pointer is checked for null. Also, if there are only contacts without constraint correction, the algorithm stops. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2222
https://github.com/sofa-framework/sofa/pull/2222:824,Testability,test,test,824,"The `LCPConstraintSolver` in its unbuilt version crashed when a contact does not have an associated constraint correction, because of a null pointer dereference. Now, the pointer is checked for null. Also, if there are only contacts without constraint correction, the algorithm stops. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2222
https://github.com/sofa-framework/sofa/pull/2222:873,Testability,test,test,873,"The `LCPConstraintSolver` in its unbuilt version crashed when a contact does not have an associated constraint correction, because of a null pointer dereference. Now, the pointer is checked for null. Also, if there are only contacts without constraint correction, the algorithm stops. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2222
https://github.com/sofa-framework/sofa/pull/2223:698,Availability,failure,failures,698,"When trying to compile in Debug mode:; - (GCC/Clang) a header is missing in RigidType; - (MSVC) same header is missing in two files in SofaEulerianFluid. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2223
https://github.com/sofa-framework/sofa/pull/2223:747,Availability,failure,failures,747,"When trying to compile in Debug mode:; - (GCC/Clang) a header is missing in RigidType; - (MSVC) same header is missing in two files in SofaEulerianFluid. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2223
https://github.com/sofa-framework/sofa/pull/2223:317,Security,Certificate,Certificate,317,"When trying to compile in Debug mode:; - (GCC/Clang) a header is missing in RigidType; - (MSVC) same header is missing in two files in SofaEulerianFluid. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2223
https://github.com/sofa-framework/sofa/pull/2223:428,Security,certificate,certificate-of-origin-dco,428,"When trying to compile in Debug mode:; - (GCC/Clang) a header is missing in RigidType; - (MSVC) same header is missing in two files in SofaEulerianFluid. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2223
https://github.com/sofa-framework/sofa/pull/2223:693,Testability,test,test,693,"When trying to compile in Debug mode:; - (GCC/Clang) a header is missing in RigidType; - (MSVC) same header is missing in two files in SofaEulerianFluid. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2223
https://github.com/sofa-framework/sofa/pull/2223:742,Testability,test,test,742,"When trying to compile in Debug mode:; - (GCC/Clang) a header is missing in RigidType; - (MSVC) same header is missing in two files in SofaEulerianFluid. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2223
https://github.com/sofa-framework/sofa/pull/2224:835,Availability,failure,failures,835,"Move SofaPython code (using Python2) and its history to its own repository : https://github.com/sofa-framework/SofaPython. CI has been updated so it should fetch and enable SofaPython. (#1527 , #1442). TODO: convert MechanicalMatrixMapper.pyscn to a standard XML scene (in examples folder); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2224
https://github.com/sofa-framework/sofa/pull/2224:884,Availability,failure,failures,884,"Move SofaPython code (using Python2) and its history to its own repository : https://github.com/sofa-framework/SofaPython. CI has been updated so it should fetch and enable SofaPython. (#1527 , #1442). TODO: convert MechanicalMatrixMapper.pyscn to a standard XML scene (in examples folder); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2224
https://github.com/sofa-framework/sofa/pull/2224:135,Deployability,update,updated,135,"Move SofaPython code (using Python2) and its history to its own repository : https://github.com/sofa-framework/SofaPython. CI has been updated so it should fetch and enable SofaPython. (#1527 , #1442). TODO: convert MechanicalMatrixMapper.pyscn to a standard XML scene (in examples folder); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2224
https://github.com/sofa-framework/sofa/pull/2224:454,Security,Certificate,Certificate,454,"Move SofaPython code (using Python2) and its history to its own repository : https://github.com/sofa-framework/SofaPython. CI has been updated so it should fetch and enable SofaPython. (#1527 , #1442). TODO: convert MechanicalMatrixMapper.pyscn to a standard XML scene (in examples folder); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2224
https://github.com/sofa-framework/sofa/pull/2224:565,Security,certificate,certificate-of-origin-dco,565,"Move SofaPython code (using Python2) and its history to its own repository : https://github.com/sofa-framework/SofaPython. CI has been updated so it should fetch and enable SofaPython. (#1527 , #1442). TODO: convert MechanicalMatrixMapper.pyscn to a standard XML scene (in examples folder); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2224
https://github.com/sofa-framework/sofa/pull/2224:830,Testability,test,test,830,"Move SofaPython code (using Python2) and its history to its own repository : https://github.com/sofa-framework/SofaPython. CI has been updated so it should fetch and enable SofaPython. (#1527 , #1442). TODO: convert MechanicalMatrixMapper.pyscn to a standard XML scene (in examples folder); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2224
https://github.com/sofa-framework/sofa/pull/2224:879,Testability,test,test,879,"Move SofaPython code (using Python2) and its history to its own repository : https://github.com/sofa-framework/SofaPython. CI has been updated so it should fetch and enable SofaPython. (#1527 , #1442). TODO: convert MechanicalMatrixMapper.pyscn to a standard XML scene (in examples folder); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2224
https://github.com/sofa-framework/sofa/pull/2225:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2225
https://github.com/sofa-framework/sofa/pull/2225:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2225
https://github.com/sofa-framework/sofa/pull/2225:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2225
https://github.com/sofa-framework/sofa/pull/2225:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2225
https://github.com/sofa-framework/sofa/pull/2225:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2225
https://github.com/sofa-framework/sofa/pull/2225:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2225
https://github.com/sofa-framework/sofa/pull/2226:599,Availability,failure,failures,599,"Needed to create a clean and functional v21.06 branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2226
https://github.com/sofa-framework/sofa/pull/2226:648,Availability,failure,failures,648,"Needed to create a clean and functional v21.06 branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2226
https://github.com/sofa-framework/sofa/pull/2226:218,Security,Certificate,Certificate,218,"Needed to create a clean and functional v21.06 branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2226
https://github.com/sofa-framework/sofa/pull/2226:329,Security,certificate,certificate-of-origin-dco,329,"Needed to create a clean and functional v21.06 branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2226
https://github.com/sofa-framework/sofa/pull/2226:594,Testability,test,test,594,"Needed to create a clean and functional v21.06 branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2226
https://github.com/sofa-framework/sofa/pull/2226:643,Testability,test,test,643,"Needed to create a clean and functional v21.06 branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2226
https://github.com/sofa-framework/sofa/pull/2227:626,Availability,failure,failures,626,"... by removing a useless (and from the compatibility layer) in SofaMeshCollsion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2227
https://github.com/sofa-framework/sofa/pull/2227:675,Availability,failure,failures,675,"... by removing a useless (and from the compatibility layer) in SofaMeshCollsion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2227
https://github.com/sofa-framework/sofa/pull/2227:245,Security,Certificate,Certificate,245,"... by removing a useless (and from the compatibility layer) in SofaMeshCollsion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2227
https://github.com/sofa-framework/sofa/pull/2227:356,Security,certificate,certificate-of-origin-dco,356,"... by removing a useless (and from the compatibility layer) in SofaMeshCollsion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2227
https://github.com/sofa-framework/sofa/pull/2227:621,Testability,test,test,621,"... by removing a useless (and from the compatibility layer) in SofaMeshCollsion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2227
https://github.com/sofa-framework/sofa/pull/2227:670,Testability,test,test,670,"... by removing a useless (and from the compatibility layer) in SofaMeshCollsion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2227
https://github.com/sofa-framework/sofa/pull/2228:709,Availability,failure,failures,709,"This PR merge the branch topologyChanges_PoC inside master. ; This branch contains PR:; - #2082 ; - #2085 ; - #2086 ; - #2087 ; - #2114 ; - #2171 ; - (EDIT) #2162 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2228
https://github.com/sofa-framework/sofa/pull/2228:758,Availability,failure,failures,758,"This PR merge the branch topologyChanges_PoC inside master. ; This branch contains PR:; - #2082 ; - #2085 ; - #2086 ; - #2087 ; - #2114 ; - #2171 ; - (EDIT) #2162 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2228
https://github.com/sofa-framework/sofa/pull/2228:328,Security,Certificate,Certificate,328,"This PR merge the branch topologyChanges_PoC inside master. ; This branch contains PR:; - #2082 ; - #2085 ; - #2086 ; - #2087 ; - #2114 ; - #2171 ; - (EDIT) #2162 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2228
https://github.com/sofa-framework/sofa/pull/2228:439,Security,certificate,certificate-of-origin-dco,439,"This PR merge the branch topologyChanges_PoC inside master. ; This branch contains PR:; - #2082 ; - #2085 ; - #2086 ; - #2087 ; - #2114 ; - #2171 ; - (EDIT) #2162 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2228
https://github.com/sofa-framework/sofa/pull/2228:704,Testability,test,test,704,"This PR merge the branch topologyChanges_PoC inside master. ; This branch contains PR:; - #2082 ; - #2085 ; - #2086 ; - #2087 ; - #2114 ; - #2171 ; - (EDIT) #2162 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2228
https://github.com/sofa-framework/sofa/pull/2228:753,Testability,test,test,753,"This PR merge the branch topologyChanges_PoC inside master. ; This branch contains PR:; - #2082 ; - #2085 ; - #2086 ; - #2087 ; - #2114 ; - #2171 ; - (EDIT) #2162 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2228
https://github.com/sofa-framework/sofa/pull/2229:194,Availability,Error,Errors,194,"Lines 97, 100 and 101 not compiling: https://github.com/sofa-framework/sofa/blob/cfda6846a2b3135ac88d6f7a0f363641a556cbf0/applications/plugins/Geomagic/src/Geomagic/GeomagicDriver.cpp#L97-L101. Errors not detected on the CI because inside #if GEOMAGIC_HAVE_OPENHAPTICS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2229
https://github.com/sofa-framework/sofa/pull/2229:814,Availability,failure,failures,814,"Lines 97, 100 and 101 not compiling: https://github.com/sofa-framework/sofa/blob/cfda6846a2b3135ac88d6f7a0f363641a556cbf0/applications/plugins/Geomagic/src/Geomagic/GeomagicDriver.cpp#L97-L101. Errors not detected on the CI because inside #if GEOMAGIC_HAVE_OPENHAPTICS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2229
https://github.com/sofa-framework/sofa/pull/2229:863,Availability,failure,failures,863,"Lines 97, 100 and 101 not compiling: https://github.com/sofa-framework/sofa/blob/cfda6846a2b3135ac88d6f7a0f363641a556cbf0/applications/plugins/Geomagic/src/Geomagic/GeomagicDriver.cpp#L97-L101. Errors not detected on the CI because inside #if GEOMAGIC_HAVE_OPENHAPTICS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2229
https://github.com/sofa-framework/sofa/pull/2229:135,Modifiability,plugin,plugins,135,"Lines 97, 100 and 101 not compiling: https://github.com/sofa-framework/sofa/blob/cfda6846a2b3135ac88d6f7a0f363641a556cbf0/applications/plugins/Geomagic/src/Geomagic/GeomagicDriver.cpp#L97-L101. Errors not detected on the CI because inside #if GEOMAGIC_HAVE_OPENHAPTICS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2229
https://github.com/sofa-framework/sofa/pull/2229:205,Safety,detect,detected,205,"Lines 97, 100 and 101 not compiling: https://github.com/sofa-framework/sofa/blob/cfda6846a2b3135ac88d6f7a0f363641a556cbf0/applications/plugins/Geomagic/src/Geomagic/GeomagicDriver.cpp#L97-L101. Errors not detected on the CI because inside #if GEOMAGIC_HAVE_OPENHAPTICS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2229
https://github.com/sofa-framework/sofa/pull/2229:433,Security,Certificate,Certificate,433,"Lines 97, 100 and 101 not compiling: https://github.com/sofa-framework/sofa/blob/cfda6846a2b3135ac88d6f7a0f363641a556cbf0/applications/plugins/Geomagic/src/Geomagic/GeomagicDriver.cpp#L97-L101. Errors not detected on the CI because inside #if GEOMAGIC_HAVE_OPENHAPTICS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2229
https://github.com/sofa-framework/sofa/pull/2229:544,Security,certificate,certificate-of-origin-dco,544,"Lines 97, 100 and 101 not compiling: https://github.com/sofa-framework/sofa/blob/cfda6846a2b3135ac88d6f7a0f363641a556cbf0/applications/plugins/Geomagic/src/Geomagic/GeomagicDriver.cpp#L97-L101. Errors not detected on the CI because inside #if GEOMAGIC_HAVE_OPENHAPTICS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2229
https://github.com/sofa-framework/sofa/pull/2229:809,Testability,test,test,809,"Lines 97, 100 and 101 not compiling: https://github.com/sofa-framework/sofa/blob/cfda6846a2b3135ac88d6f7a0f363641a556cbf0/applications/plugins/Geomagic/src/Geomagic/GeomagicDriver.cpp#L97-L101. Errors not detected on the CI because inside #if GEOMAGIC_HAVE_OPENHAPTICS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2229
https://github.com/sofa-framework/sofa/pull/2229:858,Testability,test,test,858,"Lines 97, 100 and 101 not compiling: https://github.com/sofa-framework/sofa/blob/cfda6846a2b3135ac88d6f7a0f363641a556cbf0/applications/plugins/Geomagic/src/Geomagic/GeomagicDriver.cpp#L97-L101. Errors not detected on the CI because inside #if GEOMAGIC_HAVE_OPENHAPTICS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2229
https://github.com/sofa-framework/sofa/pull/2230:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2230
https://github.com/sofa-framework/sofa/pull/2230:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2230
https://github.com/sofa-framework/sofa/pull/2230:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2230
https://github.com/sofa-framework/sofa/pull/2230:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2230
https://github.com/sofa-framework/sofa/pull/2230:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2230
https://github.com/sofa-framework/sofa/pull/2230:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2230
https://github.com/sofa-framework/sofa/pull/2231:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2231
https://github.com/sofa-framework/sofa/pull/2231:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2231
https://github.com/sofa-framework/sofa/pull/2231:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2231
https://github.com/sofa-framework/sofa/pull/2231:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2231
https://github.com/sofa-framework/sofa/pull/2231:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2231
https://github.com/sofa-framework/sofa/pull/2231:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2231
https://github.com/sofa-framework/sofa/pull/2232:579,Availability,failure,failures,579,"BruteForceDetection is deprecated. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2232
https://github.com/sofa-framework/sofa/pull/2232:628,Availability,failure,failures,628,"BruteForceDetection is deprecated. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2232
https://github.com/sofa-framework/sofa/pull/2232:198,Security,Certificate,Certificate,198,"BruteForceDetection is deprecated. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2232
https://github.com/sofa-framework/sofa/pull/2232:309,Security,certificate,certificate-of-origin-dco,309,"BruteForceDetection is deprecated. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2232
https://github.com/sofa-framework/sofa/pull/2232:574,Testability,test,test,574,"BruteForceDetection is deprecated. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2232
https://github.com/sofa-framework/sofa/pull/2232:623,Testability,test,test,623,"BruteForceDetection is deprecated. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2232
https://github.com/sofa-framework/sofa/pull/2233:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2233
https://github.com/sofa-framework/sofa/pull/2233:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2233
https://github.com/sofa-framework/sofa/pull/2233:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2233
https://github.com/sofa-framework/sofa/pull/2233:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2233
https://github.com/sofa-framework/sofa/pull/2233:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2233
https://github.com/sofa-framework/sofa/pull/2233:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2233
https://github.com/sofa-framework/sofa/pull/2234:696,Availability,failure,failures,696,"Some of the PRs related to https://github.com/sofa-framework/sofa/pull/2228 were wrongly added to v21.06 changelog.; They are not in the v21.06 branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2234
https://github.com/sofa-framework/sofa/pull/2234:745,Availability,failure,failures,745,"Some of the PRs related to https://github.com/sofa-framework/sofa/pull/2228 were wrongly added to v21.06 changelog.; They are not in the v21.06 branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2234
https://github.com/sofa-framework/sofa/pull/2234:315,Security,Certificate,Certificate,315,"Some of the PRs related to https://github.com/sofa-framework/sofa/pull/2228 were wrongly added to v21.06 changelog.; They are not in the v21.06 branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2234
https://github.com/sofa-framework/sofa/pull/2234:426,Security,certificate,certificate-of-origin-dco,426,"Some of the PRs related to https://github.com/sofa-framework/sofa/pull/2228 were wrongly added to v21.06 changelog.; They are not in the v21.06 branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2234
https://github.com/sofa-framework/sofa/pull/2234:691,Testability,test,test,691,"Some of the PRs related to https://github.com/sofa-framework/sofa/pull/2228 were wrongly added to v21.06 changelog.; They are not in the v21.06 branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2234
https://github.com/sofa-framework/sofa/pull/2234:740,Testability,test,test,740,"Some of the PRs related to https://github.com/sofa-framework/sofa/pull/2228 were wrongly added to v21.06 changelog.; They are not in the v21.06 branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2234
https://github.com/sofa-framework/sofa/pull/2235:167,Availability,error,errors,167,"Return type of `getRotations()` should use the `typedef` type to respect the floating point precision of the template `DataTypes`. As it is now, it causes compilation errors when using template `defaulttype::Vec3fTypes`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2235
https://github.com/sofa-framework/sofa/pull/2235:765,Availability,failure,failures,765,"Return type of `getRotations()` should use the `typedef` type to respect the floating point precision of the template `DataTypes`. As it is now, it causes compilation errors when using template `defaulttype::Vec3fTypes`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2235
https://github.com/sofa-framework/sofa/pull/2235:814,Availability,failure,failures,814,"Return type of `getRotations()` should use the `typedef` type to respect the floating point precision of the template `DataTypes`. As it is now, it causes compilation errors when using template `defaulttype::Vec3fTypes`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2235
https://github.com/sofa-framework/sofa/pull/2235:384,Security,Certificate,Certificate,384,"Return type of `getRotations()` should use the `typedef` type to respect the floating point precision of the template `DataTypes`. As it is now, it causes compilation errors when using template `defaulttype::Vec3fTypes`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2235
https://github.com/sofa-framework/sofa/pull/2235:495,Security,certificate,certificate-of-origin-dco,495,"Return type of `getRotations()` should use the `typedef` type to respect the floating point precision of the template `DataTypes`. As it is now, it causes compilation errors when using template `defaulttype::Vec3fTypes`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2235
https://github.com/sofa-framework/sofa/pull/2235:760,Testability,test,test,760,"Return type of `getRotations()` should use the `typedef` type to respect the floating point precision of the template `DataTypes`. As it is now, it causes compilation errors when using template `defaulttype::Vec3fTypes`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2235
https://github.com/sofa-framework/sofa/pull/2235:809,Testability,test,test,809,"Return type of `getRotations()` should use the `typedef` type to respect the floating point precision of the template `DataTypes`. As it is now, it causes compilation errors when using template `defaulttype::Vec3fTypes`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2235
https://github.com/sofa-framework/sofa/pull/2236:624,Availability,failure,failures,624,"- move code from header to compilation unit; - remove the dependency to Data. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2236
https://github.com/sofa-framework/sofa/pull/2236:673,Availability,failure,failures,673,"- move code from header to compilation unit; - remove the dependency to Data. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2236
https://github.com/sofa-framework/sofa/pull/2236:58,Integrability,depend,dependency,58,"- move code from header to compilation unit; - remove the dependency to Data. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2236
https://github.com/sofa-framework/sofa/pull/2236:243,Security,Certificate,Certificate,243,"- move code from header to compilation unit; - remove the dependency to Data. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2236
https://github.com/sofa-framework/sofa/pull/2236:354,Security,certificate,certificate-of-origin-dco,354,"- move code from header to compilation unit; - remove the dependency to Data. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2236
https://github.com/sofa-framework/sofa/pull/2236:619,Testability,test,test,619,"- move code from header to compilation unit; - remove the dependency to Data. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2236
https://github.com/sofa-framework/sofa/pull/2236:668,Testability,test,test,668,"- move code from header to compilation unit; - remove the dependency to Data. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2236
https://github.com/sofa-framework/sofa/pull/2237:659,Availability,failure,failures,659,"Add more scenes to be tested for regression; [ci-depends-on https://github.com/sofa-framework/Regression/pull/17]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2237
https://github.com/sofa-framework/sofa/pull/2237:708,Availability,failure,failures,708,"Add more scenes to be tested for regression; [ci-depends-on https://github.com/sofa-framework/Regression/pull/17]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2237
https://github.com/sofa-framework/sofa/pull/2237:49,Integrability,depend,depends-on,49,"Add more scenes to be tested for regression; [ci-depends-on https://github.com/sofa-framework/Regression/pull/17]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2237
https://github.com/sofa-framework/sofa/pull/2237:278,Security,Certificate,Certificate,278,"Add more scenes to be tested for regression; [ci-depends-on https://github.com/sofa-framework/Regression/pull/17]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2237
https://github.com/sofa-framework/sofa/pull/2237:389,Security,certificate,certificate-of-origin-dco,389,"Add more scenes to be tested for regression; [ci-depends-on https://github.com/sofa-framework/Regression/pull/17]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2237
https://github.com/sofa-framework/sofa/pull/2237:22,Testability,test,tested,22,"Add more scenes to be tested for regression; [ci-depends-on https://github.com/sofa-framework/Regression/pull/17]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2237
https://github.com/sofa-framework/sofa/pull/2237:654,Testability,test,test,654,"Add more scenes to be tested for regression; [ci-depends-on https://github.com/sofa-framework/Regression/pull/17]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2237
https://github.com/sofa-framework/sofa/pull/2237:703,Testability,test,test,703,"Add more scenes to be tested for regression; [ci-depends-on https://github.com/sofa-framework/Regression/pull/17]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2237
https://github.com/sofa-framework/sofa/pull/2238:1091,Availability,failure,failures,1091,"As usual the idea is to make the object more opaque so we can reduce the #include pressure. . - forward declared all the specific Matrix (RotationMatrix, SparseMatrix, ...) to avoid includes in MatrixLinearSolver; - Move GraphScattered specialization in a separated set of files. ; - Move MatrixLinearSolverInternalData in the .cpp in order to make a real ""internal"" data ; - Use std::unique_ptr<MatrixLinearSolverInternalData> so we can rely on forward declaration in class MatrixLinearSolver; - propagate the changes. . This PR contains #2236 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2238
https://github.com/sofa-framework/sofa/pull/2238:1140,Availability,failure,failures,1140,"As usual the idea is to make the object more opaque so we can reduce the #include pressure. . - forward declared all the specific Matrix (RotationMatrix, SparseMatrix, ...) to avoid includes in MatrixLinearSolver; - Move GraphScattered specialization in a separated set of files. ; - Move MatrixLinearSolverInternalData in the .cpp in order to make a real ""internal"" data ; - Use std::unique_ptr<MatrixLinearSolverInternalData> so we can rely on forward declaration in class MatrixLinearSolver; - propagate the changes. . This PR contains #2236 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2238
https://github.com/sofa-framework/sofa/pull/2238:62,Energy Efficiency,reduce,reduce,62,"As usual the idea is to make the object more opaque so we can reduce the #include pressure. . - forward declared all the specific Matrix (RotationMatrix, SparseMatrix, ...) to avoid includes in MatrixLinearSolver; - Move GraphScattered specialization in a separated set of files. ; - Move MatrixLinearSolverInternalData in the .cpp in order to make a real ""internal"" data ; - Use std::unique_ptr<MatrixLinearSolverInternalData> so we can rely on forward declaration in class MatrixLinearSolver; - propagate the changes. . This PR contains #2236 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2238
https://github.com/sofa-framework/sofa/pull/2238:176,Safety,avoid,avoid,176,"As usual the idea is to make the object more opaque so we can reduce the #include pressure. . - forward declared all the specific Matrix (RotationMatrix, SparseMatrix, ...) to avoid includes in MatrixLinearSolver; - Move GraphScattered specialization in a separated set of files. ; - Move MatrixLinearSolverInternalData in the .cpp in order to make a real ""internal"" data ; - Use std::unique_ptr<MatrixLinearSolverInternalData> so we can rely on forward declaration in class MatrixLinearSolver; - propagate the changes. . This PR contains #2236 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2238
https://github.com/sofa-framework/sofa/pull/2238:710,Security,Certificate,Certificate,710,"As usual the idea is to make the object more opaque so we can reduce the #include pressure. . - forward declared all the specific Matrix (RotationMatrix, SparseMatrix, ...) to avoid includes in MatrixLinearSolver; - Move GraphScattered specialization in a separated set of files. ; - Move MatrixLinearSolverInternalData in the .cpp in order to make a real ""internal"" data ; - Use std::unique_ptr<MatrixLinearSolverInternalData> so we can rely on forward declaration in class MatrixLinearSolver; - propagate the changes. . This PR contains #2236 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2238
https://github.com/sofa-framework/sofa/pull/2238:821,Security,certificate,certificate-of-origin-dco,821,"As usual the idea is to make the object more opaque so we can reduce the #include pressure. . - forward declared all the specific Matrix (RotationMatrix, SparseMatrix, ...) to avoid includes in MatrixLinearSolver; - Move GraphScattered specialization in a separated set of files. ; - Move MatrixLinearSolverInternalData in the .cpp in order to make a real ""internal"" data ; - Use std::unique_ptr<MatrixLinearSolverInternalData> so we can rely on forward declaration in class MatrixLinearSolver; - propagate the changes. . This PR contains #2236 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2238
https://github.com/sofa-framework/sofa/pull/2238:1086,Testability,test,test,1086,"As usual the idea is to make the object more opaque so we can reduce the #include pressure. . - forward declared all the specific Matrix (RotationMatrix, SparseMatrix, ...) to avoid includes in MatrixLinearSolver; - Move GraphScattered specialization in a separated set of files. ; - Move MatrixLinearSolverInternalData in the .cpp in order to make a real ""internal"" data ; - Use std::unique_ptr<MatrixLinearSolverInternalData> so we can rely on forward declaration in class MatrixLinearSolver; - propagate the changes. . This PR contains #2236 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2238
https://github.com/sofa-framework/sofa/pull/2238:1135,Testability,test,test,1135,"As usual the idea is to make the object more opaque so we can reduce the #include pressure. . - forward declared all the specific Matrix (RotationMatrix, SparseMatrix, ...) to avoid includes in MatrixLinearSolver; - Move GraphScattered specialization in a separated set of files. ; - Move MatrixLinearSolverInternalData in the .cpp in order to make a real ""internal"" data ; - Use std::unique_ptr<MatrixLinearSolverInternalData> so we can rely on forward declaration in class MatrixLinearSolver; - propagate the changes. . This PR contains #2236 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2238
https://github.com/sofa-framework/sofa/pull/2239:1126,Availability,failure,failures,1126,"Since a few updates of MSVC2019, it is not possible anymore to have at the same time a directory and a target with the same name and in the same level. ; For example, SofaBase (containing all the SofaBase targets) and SofaBase (the target). MSVC complains that it cannot create the SofaBase target and thus, it is not possible de compile it... which is a bit bothersome 🤔. So this PR moves (in an IDE-way) the target into their respective directory (SofaBase in the SofaBase directory, SofaSimulation/SofaFramework/SofaGui same). And it makes more sense to set it like that anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2239
https://github.com/sofa-framework/sofa/pull/2239:1175,Availability,failure,failures,1175,"Since a few updates of MSVC2019, it is not possible anymore to have at the same time a directory and a target with the same name and in the same level. ; For example, SofaBase (containing all the SofaBase targets) and SofaBase (the target). MSVC complains that it cannot create the SofaBase target and thus, it is not possible de compile it... which is a bit bothersome 🤔. So this PR moves (in an IDE-way) the target into their respective directory (SofaBase in the SofaBase directory, SofaSimulation/SofaFramework/SofaGui same). And it makes more sense to set it like that anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2239
https://github.com/sofa-framework/sofa/pull/2239:12,Deployability,update,updates,12,"Since a few updates of MSVC2019, it is not possible anymore to have at the same time a directory and a target with the same name and in the same level. ; For example, SofaBase (containing all the SofaBase targets) and SofaBase (the target). MSVC complains that it cannot create the SofaBase target and thus, it is not possible de compile it... which is a bit bothersome 🤔. So this PR moves (in an IDE-way) the target into their respective directory (SofaBase in the SofaBase directory, SofaSimulation/SofaFramework/SofaGui same). And it makes more sense to set it like that anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2239
https://github.com/sofa-framework/sofa/pull/2239:745,Security,Certificate,Certificate,745,"Since a few updates of MSVC2019, it is not possible anymore to have at the same time a directory and a target with the same name and in the same level. ; For example, SofaBase (containing all the SofaBase targets) and SofaBase (the target). MSVC complains that it cannot create the SofaBase target and thus, it is not possible de compile it... which is a bit bothersome 🤔. So this PR moves (in an IDE-way) the target into their respective directory (SofaBase in the SofaBase directory, SofaSimulation/SofaFramework/SofaGui same). And it makes more sense to set it like that anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2239
https://github.com/sofa-framework/sofa/pull/2239:856,Security,certificate,certificate-of-origin-dco,856,"Since a few updates of MSVC2019, it is not possible anymore to have at the same time a directory and a target with the same name and in the same level. ; For example, SofaBase (containing all the SofaBase targets) and SofaBase (the target). MSVC complains that it cannot create the SofaBase target and thus, it is not possible de compile it... which is a bit bothersome 🤔. So this PR moves (in an IDE-way) the target into their respective directory (SofaBase in the SofaBase directory, SofaSimulation/SofaFramework/SofaGui same). And it makes more sense to set it like that anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2239
https://github.com/sofa-framework/sofa/pull/2239:1121,Testability,test,test,1121,"Since a few updates of MSVC2019, it is not possible anymore to have at the same time a directory and a target with the same name and in the same level. ; For example, SofaBase (containing all the SofaBase targets) and SofaBase (the target). MSVC complains that it cannot create the SofaBase target and thus, it is not possible de compile it... which is a bit bothersome 🤔. So this PR moves (in an IDE-way) the target into their respective directory (SofaBase in the SofaBase directory, SofaSimulation/SofaFramework/SofaGui same). And it makes more sense to set it like that anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2239
https://github.com/sofa-framework/sofa/pull/2239:1170,Testability,test,test,1170,"Since a few updates of MSVC2019, it is not possible anymore to have at the same time a directory and a target with the same name and in the same level. ; For example, SofaBase (containing all the SofaBase targets) and SofaBase (the target). MSVC complains that it cannot create the SofaBase target and thus, it is not possible de compile it... which is a bit bothersome 🤔. So this PR moves (in an IDE-way) the target into their respective directory (SofaBase in the SofaBase directory, SofaSimulation/SofaFramework/SofaGui same). And it makes more sense to set it like that anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2239
https://github.com/sofa-framework/sofa/pull/2240:1019,Availability,failure,failures,1019,"Compared to other FEM force fields, `HexahedronFEMForceField` did not have the `addKToMatrix` optimization for bloc matrices. This PR adds it. It also changes the template type of the Conjugate Gradient in the following scenes:. - examples/Demos/caduceus.scn; - examples/Components/forcefield/HexahedronFEMForceField.scn. It changes from a matrix-free CG to an assembled bloc matrix CG, but it is faster in the case of the 2 scenes. About +50 FPS in the GUI for both scenes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2240
https://github.com/sofa-framework/sofa/pull/2240:1068,Availability,failure,failures,1068,"Compared to other FEM force fields, `HexahedronFEMForceField` did not have the `addKToMatrix` optimization for bloc matrices. This PR adds it. It also changes the template type of the Conjugate Gradient in the following scenes:. - examples/Demos/caduceus.scn; - examples/Components/forcefield/HexahedronFEMForceField.scn. It changes from a matrix-free CG to an assembled bloc matrix CG, but it is faster in the case of the 2 scenes. About +50 FPS in the GUI for both scenes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2240
https://github.com/sofa-framework/sofa/pull/2240:94,Performance,optimiz,optimization,94,"Compared to other FEM force fields, `HexahedronFEMForceField` did not have the `addKToMatrix` optimization for bloc matrices. This PR adds it. It also changes the template type of the Conjugate Gradient in the following scenes:. - examples/Demos/caduceus.scn; - examples/Components/forcefield/HexahedronFEMForceField.scn. It changes from a matrix-free CG to an assembled bloc matrix CG, but it is faster in the case of the 2 scenes. About +50 FPS in the GUI for both scenes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2240
https://github.com/sofa-framework/sofa/pull/2240:638,Security,Certificate,Certificate,638,"Compared to other FEM force fields, `HexahedronFEMForceField` did not have the `addKToMatrix` optimization for bloc matrices. This PR adds it. It also changes the template type of the Conjugate Gradient in the following scenes:. - examples/Demos/caduceus.scn; - examples/Components/forcefield/HexahedronFEMForceField.scn. It changes from a matrix-free CG to an assembled bloc matrix CG, but it is faster in the case of the 2 scenes. About +50 FPS in the GUI for both scenes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2240
https://github.com/sofa-framework/sofa/pull/2240:749,Security,certificate,certificate-of-origin-dco,749,"Compared to other FEM force fields, `HexahedronFEMForceField` did not have the `addKToMatrix` optimization for bloc matrices. This PR adds it. It also changes the template type of the Conjugate Gradient in the following scenes:. - examples/Demos/caduceus.scn; - examples/Components/forcefield/HexahedronFEMForceField.scn. It changes from a matrix-free CG to an assembled bloc matrix CG, but it is faster in the case of the 2 scenes. About +50 FPS in the GUI for both scenes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2240
https://github.com/sofa-framework/sofa/pull/2240:1014,Testability,test,test,1014,"Compared to other FEM force fields, `HexahedronFEMForceField` did not have the `addKToMatrix` optimization for bloc matrices. This PR adds it. It also changes the template type of the Conjugate Gradient in the following scenes:. - examples/Demos/caduceus.scn; - examples/Components/forcefield/HexahedronFEMForceField.scn. It changes from a matrix-free CG to an assembled bloc matrix CG, but it is faster in the case of the 2 scenes. About +50 FPS in the GUI for both scenes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2240
https://github.com/sofa-framework/sofa/pull/2240:1063,Testability,test,test,1063,"Compared to other FEM force fields, `HexahedronFEMForceField` did not have the `addKToMatrix` optimization for bloc matrices. This PR adds it. It also changes the template type of the Conjugate Gradient in the following scenes:. - examples/Demos/caduceus.scn; - examples/Components/forcefield/HexahedronFEMForceField.scn. It changes from a matrix-free CG to an assembled bloc matrix CG, but it is faster in the case of the 2 scenes. About +50 FPS in the GUI for both scenes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2240
https://github.com/sofa-framework/sofa/pull/2241:1063,Availability,failure,failures,1063,"Detected by the CI sporadically.; The crash is triggered ""correctly"" when executing in Debug mode. The problem comes from the fact that the stored Jacobian matrix is not updated when the model (i.e mechanicalObject) is modified topologically.; There are some problems still with topological changes (#2242 ) so I opted for a check every time projectResponse() is called.; Not ideal so would need to be changed once topological changes mechanism is finished. Also create a updateJacobian() method (instead of reinit()). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2241
https://github.com/sofa-framework/sofa/pull/2241:1112,Availability,failure,failures,1112,"Detected by the CI sporadically.; The crash is triggered ""correctly"" when executing in Debug mode. The problem comes from the fact that the stored Jacobian matrix is not updated when the model (i.e mechanicalObject) is modified topologically.; There are some problems still with topological changes (#2242 ) so I opted for a check every time projectResponse() is called.; Not ideal so would need to be changed once topological changes mechanism is finished. Also create a updateJacobian() method (instead of reinit()). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2241
https://github.com/sofa-framework/sofa/pull/2241:170,Deployability,update,updated,170,"Detected by the CI sporadically.; The crash is triggered ""correctly"" when executing in Debug mode. The problem comes from the fact that the stored Jacobian matrix is not updated when the model (i.e mechanicalObject) is modified topologically.; There are some problems still with topological changes (#2242 ) so I opted for a check every time projectResponse() is called.; Not ideal so would need to be changed once topological changes mechanism is finished. Also create a updateJacobian() method (instead of reinit()). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2241
https://github.com/sofa-framework/sofa/pull/2241:472,Deployability,update,updateJacobian,472,"Detected by the CI sporadically.; The crash is triggered ""correctly"" when executing in Debug mode. The problem comes from the fact that the stored Jacobian matrix is not updated when the model (i.e mechanicalObject) is modified topologically.; There are some problems still with topological changes (#2242 ) so I opted for a check every time projectResponse() is called.; Not ideal so would need to be changed once topological changes mechanism is finished. Also create a updateJacobian() method (instead of reinit()). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2241
https://github.com/sofa-framework/sofa/pull/2241:0,Safety,Detect,Detected,0,"Detected by the CI sporadically.; The crash is triggered ""correctly"" when executing in Debug mode. The problem comes from the fact that the stored Jacobian matrix is not updated when the model (i.e mechanicalObject) is modified topologically.; There are some problems still with topological changes (#2242 ) so I opted for a check every time projectResponse() is called.; Not ideal so would need to be changed once topological changes mechanism is finished. Also create a updateJacobian() method (instead of reinit()). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2241
https://github.com/sofa-framework/sofa/pull/2241:682,Security,Certificate,Certificate,682,"Detected by the CI sporadically.; The crash is triggered ""correctly"" when executing in Debug mode. The problem comes from the fact that the stored Jacobian matrix is not updated when the model (i.e mechanicalObject) is modified topologically.; There are some problems still with topological changes (#2242 ) so I opted for a check every time projectResponse() is called.; Not ideal so would need to be changed once topological changes mechanism is finished. Also create a updateJacobian() method (instead of reinit()). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2241
https://github.com/sofa-framework/sofa/pull/2241:793,Security,certificate,certificate-of-origin-dco,793,"Detected by the CI sporadically.; The crash is triggered ""correctly"" when executing in Debug mode. The problem comes from the fact that the stored Jacobian matrix is not updated when the model (i.e mechanicalObject) is modified topologically.; There are some problems still with topological changes (#2242 ) so I opted for a check every time projectResponse() is called.; Not ideal so would need to be changed once topological changes mechanism is finished. Also create a updateJacobian() method (instead of reinit()). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2241
https://github.com/sofa-framework/sofa/pull/2241:1058,Testability,test,test,1058,"Detected by the CI sporadically.; The crash is triggered ""correctly"" when executing in Debug mode. The problem comes from the fact that the stored Jacobian matrix is not updated when the model (i.e mechanicalObject) is modified topologically.; There are some problems still with topological changes (#2242 ) so I opted for a check every time projectResponse() is called.; Not ideal so would need to be changed once topological changes mechanism is finished. Also create a updateJacobian() method (instead of reinit()). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2241
https://github.com/sofa-framework/sofa/pull/2241:1107,Testability,test,test,1107,"Detected by the CI sporadically.; The crash is triggered ""correctly"" when executing in Debug mode. The problem comes from the fact that the stored Jacobian matrix is not updated when the model (i.e mechanicalObject) is modified topologically.; There are some problems still with topological changes (#2242 ) so I opted for a check every time projectResponse() is called.; Not ideal so would need to be changed once topological changes mechanism is finished. Also create a updateJacobian() method (instead of reinit()). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2241
https://github.com/sofa-framework/sofa/issues/2242:409,Deployability,update,update,409,"ProjectToLineConstraint is crashing when trying to do projectResponse() because its jacobian matrix member is not synchronized with its respective mechanical object (especially its size).; This problem was raised from the scene: ProjectToLineConstraint_RemovingMeshTest.scn; And it seems to be detectable only in Debug mode as the CI does not complain very often. One first fix was trying to call a method to update the Jacobian while catching the fact that a topology change event was triggered, but various problems arrived with the fact that the MechanicalObject data is not connected to the ""Data"" update mechanism. (a first draft on how to change this behavior here #1489 but stalled) . A second fix (less subtle) checks every time if the jacobian size is correct wrt to the mechanical object : #2241; Less desirable because it will check at each call but fix the problem for now. I let this issue to remember to trigger the jacobian update when detecting a topological change, once the topological change mechanism is finished.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2242
https://github.com/sofa-framework/sofa/issues/2242:602,Deployability,update,update,602,"ProjectToLineConstraint is crashing when trying to do projectResponse() because its jacobian matrix member is not synchronized with its respective mechanical object (especially its size).; This problem was raised from the scene: ProjectToLineConstraint_RemovingMeshTest.scn; And it seems to be detectable only in Debug mode as the CI does not complain very often. One first fix was trying to call a method to update the Jacobian while catching the fact that a topology change event was triggered, but various problems arrived with the fact that the MechanicalObject data is not connected to the ""Data"" update mechanism. (a first draft on how to change this behavior here #1489 but stalled) . A second fix (less subtle) checks every time if the jacobian size is correct wrt to the mechanical object : #2241; Less desirable because it will check at each call but fix the problem for now. I let this issue to remember to trigger the jacobian update when detecting a topological change, once the topological change mechanism is finished.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2242
https://github.com/sofa-framework/sofa/issues/2242:939,Deployability,update,update,939,"ProjectToLineConstraint is crashing when trying to do projectResponse() because its jacobian matrix member is not synchronized with its respective mechanical object (especially its size).; This problem was raised from the scene: ProjectToLineConstraint_RemovingMeshTest.scn; And it seems to be detectable only in Debug mode as the CI does not complain very often. One first fix was trying to call a method to update the Jacobian while catching the fact that a topology change event was triggered, but various problems arrived with the fact that the MechanicalObject data is not connected to the ""Data"" update mechanism. (a first draft on how to change this behavior here #1489 but stalled) . A second fix (less subtle) checks every time if the jacobian size is correct wrt to the mechanical object : #2241; Less desirable because it will check at each call but fix the problem for now. I let this issue to remember to trigger the jacobian update when detecting a topological change, once the topological change mechanism is finished.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2242
https://github.com/sofa-framework/sofa/issues/2242:114,Integrability,synchroniz,synchronized,114,"ProjectToLineConstraint is crashing when trying to do projectResponse() because its jacobian matrix member is not synchronized with its respective mechanical object (especially its size).; This problem was raised from the scene: ProjectToLineConstraint_RemovingMeshTest.scn; And it seems to be detectable only in Debug mode as the CI does not complain very often. One first fix was trying to call a method to update the Jacobian while catching the fact that a topology change event was triggered, but various problems arrived with the fact that the MechanicalObject data is not connected to the ""Data"" update mechanism. (a first draft on how to change this behavior here #1489 but stalled) . A second fix (less subtle) checks every time if the jacobian size is correct wrt to the mechanical object : #2241; Less desirable because it will check at each call but fix the problem for now. I let this issue to remember to trigger the jacobian update when detecting a topological change, once the topological change mechanism is finished.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2242
https://github.com/sofa-framework/sofa/issues/2242:294,Safety,detect,detectable,294,"ProjectToLineConstraint is crashing when trying to do projectResponse() because its jacobian matrix member is not synchronized with its respective mechanical object (especially its size).; This problem was raised from the scene: ProjectToLineConstraint_RemovingMeshTest.scn; And it seems to be detectable only in Debug mode as the CI does not complain very often. One first fix was trying to call a method to update the Jacobian while catching the fact that a topology change event was triggered, but various problems arrived with the fact that the MechanicalObject data is not connected to the ""Data"" update mechanism. (a first draft on how to change this behavior here #1489 but stalled) . A second fix (less subtle) checks every time if the jacobian size is correct wrt to the mechanical object : #2241; Less desirable because it will check at each call but fix the problem for now. I let this issue to remember to trigger the jacobian update when detecting a topological change, once the topological change mechanism is finished.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2242
https://github.com/sofa-framework/sofa/issues/2242:951,Safety,detect,detecting,951,"ProjectToLineConstraint is crashing when trying to do projectResponse() because its jacobian matrix member is not synchronized with its respective mechanical object (especially its size).; This problem was raised from the scene: ProjectToLineConstraint_RemovingMeshTest.scn; And it seems to be detectable only in Debug mode as the CI does not complain very often. One first fix was trying to call a method to update the Jacobian while catching the fact that a topology change event was triggered, but various problems arrived with the fact that the MechanicalObject data is not connected to the ""Data"" update mechanism. (a first draft on how to change this behavior here #1489 but stalled) . A second fix (less subtle) checks every time if the jacobian size is correct wrt to the mechanical object : #2241; Less desirable because it will check at each call but fix the problem for now. I let this issue to remember to trigger the jacobian update when detecting a topological change, once the topological change mechanism is finished.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2242
https://github.com/sofa-framework/sofa/pull/2243:618,Availability,failure,failures,618,"- Add comments; - Fix doxygen; - Avoid duplicated code; - minor cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2243
https://github.com/sofa-framework/sofa/pull/2243:667,Availability,failure,failures,667,"- Add comments; - Fix doxygen; - Avoid duplicated code; - minor cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2243
https://github.com/sofa-framework/sofa/pull/2243:33,Safety,Avoid,Avoid,33,"- Add comments; - Fix doxygen; - Avoid duplicated code; - minor cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2243
https://github.com/sofa-framework/sofa/pull/2243:237,Security,Certificate,Certificate,237,"- Add comments; - Fix doxygen; - Avoid duplicated code; - minor cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2243
https://github.com/sofa-framework/sofa/pull/2243:348,Security,certificate,certificate-of-origin-dco,348,"- Add comments; - Fix doxygen; - Avoid duplicated code; - minor cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2243
https://github.com/sofa-framework/sofa/pull/2243:613,Testability,test,test,613,"- Add comments; - Fix doxygen; - Avoid duplicated code; - minor cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2243
https://github.com/sofa-framework/sofa/pull/2243:662,Testability,test,test,662,"- Add comments; - Fix doxygen; - Avoid duplicated code; - minor cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2243
https://github.com/sofa-framework/sofa/pull/2244:780,Availability,failure,failures,780,"I saw that `addSubMBKToMatrix` was not used in the SOFA code base, so I removed it savagely. I don't know the consequence of it. I would like feedback. Of course, if it is decided to remove it, I'll add the deprecated flags in this PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2244
https://github.com/sofa-framework/sofa/pull/2244:829,Availability,failure,failures,829,"I saw that `addSubMBKToMatrix` was not used in the SOFA code base, so I removed it savagely. I don't know the consequence of it. I would like feedback. Of course, if it is decided to remove it, I'll add the deprecated flags in this PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2244
https://github.com/sofa-framework/sofa/pull/2244:399,Security,Certificate,Certificate,399,"I saw that `addSubMBKToMatrix` was not used in the SOFA code base, so I removed it savagely. I don't know the consequence of it. I would like feedback. Of course, if it is decided to remove it, I'll add the deprecated flags in this PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2244
https://github.com/sofa-framework/sofa/pull/2244:510,Security,certificate,certificate-of-origin-dco,510,"I saw that `addSubMBKToMatrix` was not used in the SOFA code base, so I removed it savagely. I don't know the consequence of it. I would like feedback. Of course, if it is decided to remove it, I'll add the deprecated flags in this PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2244
https://github.com/sofa-framework/sofa/pull/2244:775,Testability,test,test,775,"I saw that `addSubMBKToMatrix` was not used in the SOFA code base, so I removed it savagely. I don't know the consequence of it. I would like feedback. Of course, if it is decided to remove it, I'll add the deprecated flags in this PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2244
https://github.com/sofa-framework/sofa/pull/2244:824,Testability,test,test,824,"I saw that `addSubMBKToMatrix` was not used in the SOFA code base, so I removed it savagely. I don't know the consequence of it. I would like feedback. Of course, if it is decided to remove it, I'll add the deprecated flags in this PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2244
https://github.com/sofa-framework/sofa/pull/2244:142,Usability,feedback,feedback,142,"I saw that `addSubMBKToMatrix` was not used in the SOFA code base, so I removed it savagely. I don't know the consequence of it. I would like feedback. Of course, if it is decided to remove it, I'll add the deprecated flags in this PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2244
https://github.com/sofa-framework/sofa/pull/2245:777,Availability,failure,failures,777,"This PR is updating the PR #1483 because I can't push on the SofaDefrost repository. I removed the callback on the topological changes which could be causing perf issue and should not be handle like this.; Keep the rest of the PR. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2245
https://github.com/sofa-framework/sofa/pull/2245:826,Availability,failure,failures,826,"This PR is updating the PR #1483 because I can't push on the SofaDefrost repository. I removed the callback on the topological changes which could be causing perf issue and should not be handle like this.; Keep the rest of the PR. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2245
https://github.com/sofa-framework/sofa/pull/2245:396,Security,Certificate,Certificate,396,"This PR is updating the PR #1483 because I can't push on the SofaDefrost repository. I removed the callback on the topological changes which could be causing perf issue and should not be handle like this.; Keep the rest of the PR. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2245
https://github.com/sofa-framework/sofa/pull/2245:507,Security,certificate,certificate-of-origin-dco,507,"This PR is updating the PR #1483 because I can't push on the SofaDefrost repository. I removed the callback on the topological changes which could be causing perf issue and should not be handle like this.; Keep the rest of the PR. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2245
https://github.com/sofa-framework/sofa/pull/2245:772,Testability,test,test,772,"This PR is updating the PR #1483 because I can't push on the SofaDefrost repository. I removed the callback on the topological changes which could be causing perf issue and should not be handle like this.; Keep the rest of the PR. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2245
https://github.com/sofa-framework/sofa/pull/2245:821,Testability,test,test,821,"This PR is updating the PR #1483 because I can't push on the SofaDefrost repository. I removed the callback on the topological changes which could be causing perf issue and should not be handle like this.; Keep the rest of the PR. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2245
https://github.com/sofa-framework/sofa/pull/2246:613,Availability,failure,failures,613,"Fix sofa::type namespace variables in CGALPlugin for release v21.06. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2246
https://github.com/sofa-framework/sofa/pull/2246:662,Availability,failure,failures,662,"Fix sofa::type namespace variables in CGALPlugin for release v21.06. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2246
https://github.com/sofa-framework/sofa/pull/2246:53,Deployability,release,release,53,"Fix sofa::type namespace variables in CGALPlugin for release v21.06. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2246
https://github.com/sofa-framework/sofa/pull/2246:25,Modifiability,variab,variables,25,"Fix sofa::type namespace variables in CGALPlugin for release v21.06. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2246
https://github.com/sofa-framework/sofa/pull/2246:232,Security,Certificate,Certificate,232,"Fix sofa::type namespace variables in CGALPlugin for release v21.06. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2246
https://github.com/sofa-framework/sofa/pull/2246:343,Security,certificate,certificate-of-origin-dco,343,"Fix sofa::type namespace variables in CGALPlugin for release v21.06. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2246
https://github.com/sofa-framework/sofa/pull/2246:608,Testability,test,test,608,"Fix sofa::type namespace variables in CGALPlugin for release v21.06. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2246
https://github.com/sofa-framework/sofa/pull/2246:657,Testability,test,test,657,"Fix sofa::type namespace variables in CGALPlugin for release v21.06. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2246
https://github.com/sofa-framework/sofa/pull/2247:660,Availability,failure,failures,660,"Title says all.; I am still wondering why we did not encounter the problem before 🤔 (happening while doing sofang). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2247
https://github.com/sofa-framework/sofa/pull/2247:709,Availability,failure,failures,709,"Title says all.; I am still wondering why we did not encounter the problem before 🤔 (happening while doing sofang). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2247
https://github.com/sofa-framework/sofa/pull/2247:279,Security,Certificate,Certificate,279,"Title says all.; I am still wondering why we did not encounter the problem before 🤔 (happening while doing sofang). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2247
https://github.com/sofa-framework/sofa/pull/2247:390,Security,certificate,certificate-of-origin-dco,390,"Title says all.; I am still wondering why we did not encounter the problem before 🤔 (happening while doing sofang). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2247
https://github.com/sofa-framework/sofa/pull/2247:655,Testability,test,test,655,"Title says all.; I am still wondering why we did not encounter the problem before 🤔 (happening while doing sofang). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2247
https://github.com/sofa-framework/sofa/pull/2247:704,Testability,test,test,704,"Title says all.; I am still wondering why we did not encounter the problem before 🤔 (happening while doing sofang). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2247
https://github.com/sofa-framework/sofa/pull/2248:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2248
https://github.com/sofa-framework/sofa/pull/2248:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2248
https://github.com/sofa-framework/sofa/pull/2248:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2248
https://github.com/sofa-framework/sofa/pull/2248:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2248
https://github.com/sofa-framework/sofa/pull/2248:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2248
https://github.com/sofa-framework/sofa/pull/2248:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2248
https://github.com/sofa-framework/sofa/pull/2249:1216,Availability,failure,failures,1216,"This PR add a new class to test at the same time TriangleFEMForceField and TriangularFEMForceField. Same results and value are expected in the idea of merging those 2 components in a near future. . In this PR 14 tests are added (7 on each version). 2 are failing and has been disabled: ; [ FAILED ] TriangleFEMForceField3_test.checkTriangularFEMForceField_init -> inconsistency in code; [ FAILED ] TriangleFEMForceField3_test.checkTriangularFEMForceField_values -> inconsistency in code. This PR also fix the init of both component, checking the input Data value and setting them as required.; Update setter as well which should be upgraded to Data callback in a next PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2249
https://github.com/sofa-framework/sofa/pull/2249:1265,Availability,failure,failures,1265,"This PR add a new class to test at the same time TriangleFEMForceField and TriangularFEMForceField. Same results and value are expected in the idea of merging those 2 components in a near future. . In this PR 14 tests are added (7 on each version). 2 are failing and has been disabled: ; [ FAILED ] TriangleFEMForceField3_test.checkTriangularFEMForceField_init -> inconsistency in code; [ FAILED ] TriangleFEMForceField3_test.checkTriangularFEMForceField_values -> inconsistency in code. This PR also fix the init of both component, checking the input Data value and setting them as required.; Update setter as well which should be upgraded to Data callback in a next PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2249
https://github.com/sofa-framework/sofa/pull/2249:594,Deployability,Update,Update,594,"This PR add a new class to test at the same time TriangleFEMForceField and TriangularFEMForceField. Same results and value are expected in the idea of merging those 2 components in a near future. . In this PR 14 tests are added (7 on each version). 2 are failing and has been disabled: ; [ FAILED ] TriangleFEMForceField3_test.checkTriangularFEMForceField_init -> inconsistency in code; [ FAILED ] TriangleFEMForceField3_test.checkTriangularFEMForceField_values -> inconsistency in code. This PR also fix the init of both component, checking the input Data value and setting them as required.; Update setter as well which should be upgraded to Data callback in a next PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2249
https://github.com/sofa-framework/sofa/pull/2249:632,Deployability,upgrade,upgraded,632,"This PR add a new class to test at the same time TriangleFEMForceField and TriangularFEMForceField. Same results and value are expected in the idea of merging those 2 components in a near future. . In this PR 14 tests are added (7 on each version). 2 are failing and has been disabled: ; [ FAILED ] TriangleFEMForceField3_test.checkTriangularFEMForceField_init -> inconsistency in code; [ FAILED ] TriangleFEMForceField3_test.checkTriangularFEMForceField_values -> inconsistency in code. This PR also fix the init of both component, checking the input Data value and setting them as required.; Update setter as well which should be upgraded to Data callback in a next PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2249
https://github.com/sofa-framework/sofa/pull/2249:835,Security,Certificate,Certificate,835,"This PR add a new class to test at the same time TriangleFEMForceField and TriangularFEMForceField. Same results and value are expected in the idea of merging those 2 components in a near future. . In this PR 14 tests are added (7 on each version). 2 are failing and has been disabled: ; [ FAILED ] TriangleFEMForceField3_test.checkTriangularFEMForceField_init -> inconsistency in code; [ FAILED ] TriangleFEMForceField3_test.checkTriangularFEMForceField_values -> inconsistency in code. This PR also fix the init of both component, checking the input Data value and setting them as required.; Update setter as well which should be upgraded to Data callback in a next PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2249
https://github.com/sofa-framework/sofa/pull/2249:946,Security,certificate,certificate-of-origin-dco,946,"This PR add a new class to test at the same time TriangleFEMForceField and TriangularFEMForceField. Same results and value are expected in the idea of merging those 2 components in a near future. . In this PR 14 tests are added (7 on each version). 2 are failing and has been disabled: ; [ FAILED ] TriangleFEMForceField3_test.checkTriangularFEMForceField_init -> inconsistency in code; [ FAILED ] TriangleFEMForceField3_test.checkTriangularFEMForceField_values -> inconsistency in code. This PR also fix the init of both component, checking the input Data value and setting them as required.; Update setter as well which should be upgraded to Data callback in a next PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2249
https://github.com/sofa-framework/sofa/pull/2249:27,Testability,test,test,27,"This PR add a new class to test at the same time TriangleFEMForceField and TriangularFEMForceField. Same results and value are expected in the idea of merging those 2 components in a near future. . In this PR 14 tests are added (7 on each version). 2 are failing and has been disabled: ; [ FAILED ] TriangleFEMForceField3_test.checkTriangularFEMForceField_init -> inconsistency in code; [ FAILED ] TriangleFEMForceField3_test.checkTriangularFEMForceField_values -> inconsistency in code. This PR also fix the init of both component, checking the input Data value and setting them as required.; Update setter as well which should be upgraded to Data callback in a next PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2249
https://github.com/sofa-framework/sofa/pull/2249:212,Testability,test,tests,212,"This PR add a new class to test at the same time TriangleFEMForceField and TriangularFEMForceField. Same results and value are expected in the idea of merging those 2 components in a near future. . In this PR 14 tests are added (7 on each version). 2 are failing and has been disabled: ; [ FAILED ] TriangleFEMForceField3_test.checkTriangularFEMForceField_init -> inconsistency in code; [ FAILED ] TriangleFEMForceField3_test.checkTriangularFEMForceField_values -> inconsistency in code. This PR also fix the init of both component, checking the input Data value and setting them as required.; Update setter as well which should be upgraded to Data callback in a next PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2249
https://github.com/sofa-framework/sofa/pull/2249:1211,Testability,test,test,1211,"This PR add a new class to test at the same time TriangleFEMForceField and TriangularFEMForceField. Same results and value are expected in the idea of merging those 2 components in a near future. . In this PR 14 tests are added (7 on each version). 2 are failing and has been disabled: ; [ FAILED ] TriangleFEMForceField3_test.checkTriangularFEMForceField_init -> inconsistency in code; [ FAILED ] TriangleFEMForceField3_test.checkTriangularFEMForceField_values -> inconsistency in code. This PR also fix the init of both component, checking the input Data value and setting them as required.; Update setter as well which should be upgraded to Data callback in a next PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2249
https://github.com/sofa-framework/sofa/pull/2249:1260,Testability,test,test,1260,"This PR add a new class to test at the same time TriangleFEMForceField and TriangularFEMForceField. Same results and value are expected in the idea of merging those 2 components in a near future. . In this PR 14 tests are added (7 on each version). 2 are failing and has been disabled: ; [ FAILED ] TriangleFEMForceField3_test.checkTriangularFEMForceField_init -> inconsistency in code; [ FAILED ] TriangleFEMForceField3_test.checkTriangularFEMForceField_values -> inconsistency in code. This PR also fix the init of both component, checking the input Data value and setting them as required.; Update setter as well which should be upgraded to Data callback in a next PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2249
https://github.com/sofa-framework/sofa/pull/2250:2030,Availability,failure,failures,2030,"otations=""true""` now **requires** to have a RotationFinder. PrecomputedConstraintCorrection has a hard dependency on TetrahedronFEMForceField, to get rotations.; (hence calling a a function of TetraFEM); It can also get rotations if it detects a component implemented RotationFinder<T>.; But TetrahedronFEMForceField is already implementing BaseRotationFinder taking a BaseMatrix*.; RotationFinder<T> inherits BaseRotationFinder, so I made TetrahedronFEMForceField implementing RotationFinder<T> instead. (which adds an other method to implement); Finally, PrecomputedConstraintCorrection only needs RotationFinder<T> now. IMO, ; - BaseRotationFinder implemented in TetrahedronFEM & HexahedronFEM only and used in WarpPreconditioner;; - RotationFinder<T> (implemented by nobody in the sofacode base but apparently by one external plugin @pedroperrusi) and used by PrecomputedConstraintCorrection, WarpPreconditioner and PrecomputedWarpPreconditioner;. would really need a refactoring or some re-working.; Those two were defined more or less in the same time, in 2006 (!) in the early days of SOFA. Some cleaning in PrecomputedConstraintCorrection as well; and this PR made me wonder the never-defined preprocessor definition NEW_METHOD_UNBUILT in PrecomputedConstraintCorrection (@ChristianDuriez ?). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2250
https://github.com/sofa-framework/sofa/pull/2250:2079,Availability,failure,failures,2079,"otations=""true""` now **requires** to have a RotationFinder. PrecomputedConstraintCorrection has a hard dependency on TetrahedronFEMForceField, to get rotations.; (hence calling a a function of TetraFEM); It can also get rotations if it detects a component implemented RotationFinder<T>.; But TetrahedronFEMForceField is already implementing BaseRotationFinder taking a BaseMatrix*.; RotationFinder<T> inherits BaseRotationFinder, so I made TetrahedronFEMForceField implementing RotationFinder<T> instead. (which adds an other method to implement); Finally, PrecomputedConstraintCorrection only needs RotationFinder<T> now. IMO, ; - BaseRotationFinder implemented in TetrahedronFEM & HexahedronFEM only and used in WarpPreconditioner;; - RotationFinder<T> (implemented by nobody in the sofacode base but apparently by one external plugin @pedroperrusi) and used by PrecomputedConstraintCorrection, WarpPreconditioner and PrecomputedWarpPreconditioner;. would really need a refactoring or some re-working.; Those two were defined more or less in the same time, in 2006 (!) in the early days of SOFA. Some cleaning in PrecomputedConstraintCorrection as well; and this PR made me wonder the never-defined preprocessor definition NEW_METHOD_UNBUILT in PrecomputedConstraintCorrection (@ChristianDuriez ?). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2250
https://github.com/sofa-framework/sofa/pull/2250:27,Integrability,depend,dependency,27,"TL;DR (dev): Remove direct dependency in SofaConstraint&SofaPrecond on SofaSimpleFEM by implementing a function in TetraFEM.; TL;DR (user): Using PrecomputedConstraintCorrection with `rotations=""true""` now **requires** to have a RotationFinder. PrecomputedConstraintCorrection has a hard dependency on TetrahedronFEMForceField, to get rotations.; (hence calling a a function of TetraFEM); It can also get rotations if it detects a component implemented RotationFinder<T>.; But TetrahedronFEMForceField is already implementing BaseRotationFinder taking a BaseMatrix*.; RotationFinder<T> inherits BaseRotationFinder, so I made TetrahedronFEMForceField implementing RotationFinder<T> instead. (which adds an other method to implement); Finally, PrecomputedConstraintCorrection only needs RotationFinder<T> now. IMO, ; - BaseRotationFinder implemented in TetrahedronFEM & HexahedronFEM only and used in WarpPreconditioner;; - RotationFinder<T> (implemented by nobody in the sofacode base but apparently by one external plugin @pedroperrusi) and used by PrecomputedConstraintCorrection, WarpPreconditioner and PrecomputedWarpPreconditioner;. would really need a refactoring or some re-working.; Those two were defined more or less in the same time, in 2006 (!) in the early days of SOFA. Some cleaning in PrecomputedConstraintCorrection as well; and this PR made me wonder the never-defined preprocessor definition NEW_METHOD_UNBUILT in PrecomputedConstraintCorrection (@ChristianDuriez ?). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it doe",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2250
https://github.com/sofa-framework/sofa/pull/2250:288,Integrability,depend,dependency,288,"TL;DR (dev): Remove direct dependency in SofaConstraint&SofaPrecond on SofaSimpleFEM by implementing a function in TetraFEM.; TL;DR (user): Using PrecomputedConstraintCorrection with `rotations=""true""` now **requires** to have a RotationFinder. PrecomputedConstraintCorrection has a hard dependency on TetrahedronFEMForceField, to get rotations.; (hence calling a a function of TetraFEM); It can also get rotations if it detects a component implemented RotationFinder<T>.; But TetrahedronFEMForceField is already implementing BaseRotationFinder taking a BaseMatrix*.; RotationFinder<T> inherits BaseRotationFinder, so I made TetrahedronFEMForceField implementing RotationFinder<T> instead. (which adds an other method to implement); Finally, PrecomputedConstraintCorrection only needs RotationFinder<T> now. IMO, ; - BaseRotationFinder implemented in TetrahedronFEM & HexahedronFEM only and used in WarpPreconditioner;; - RotationFinder<T> (implemented by nobody in the sofacode base but apparently by one external plugin @pedroperrusi) and used by PrecomputedConstraintCorrection, WarpPreconditioner and PrecomputedWarpPreconditioner;. would really need a refactoring or some re-working.; Those two were defined more or less in the same time, in 2006 (!) in the early days of SOFA. Some cleaning in PrecomputedConstraintCorrection as well; and this PR made me wonder the never-defined preprocessor definition NEW_METHOD_UNBUILT in PrecomputedConstraintCorrection (@ChristianDuriez ?). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it doe",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2250
https://github.com/sofa-framework/sofa/pull/2250:586,Modifiability,inherit,inherits,586,"TL;DR (dev): Remove direct dependency in SofaConstraint&SofaPrecond on SofaSimpleFEM by implementing a function in TetraFEM.; TL;DR (user): Using PrecomputedConstraintCorrection with `rotations=""true""` now **requires** to have a RotationFinder. PrecomputedConstraintCorrection has a hard dependency on TetrahedronFEMForceField, to get rotations.; (hence calling a a function of TetraFEM); It can also get rotations if it detects a component implemented RotationFinder<T>.; But TetrahedronFEMForceField is already implementing BaseRotationFinder taking a BaseMatrix*.; RotationFinder<T> inherits BaseRotationFinder, so I made TetrahedronFEMForceField implementing RotationFinder<T> instead. (which adds an other method to implement); Finally, PrecomputedConstraintCorrection only needs RotationFinder<T> now. IMO, ; - BaseRotationFinder implemented in TetrahedronFEM & HexahedronFEM only and used in WarpPreconditioner;; - RotationFinder<T> (implemented by nobody in the sofacode base but apparently by one external plugin @pedroperrusi) and used by PrecomputedConstraintCorrection, WarpPreconditioner and PrecomputedWarpPreconditioner;. would really need a refactoring or some re-working.; Those two were defined more or less in the same time, in 2006 (!) in the early days of SOFA. Some cleaning in PrecomputedConstraintCorrection as well; and this PR made me wonder the never-defined preprocessor definition NEW_METHOD_UNBUILT in PrecomputedConstraintCorrection (@ChristianDuriez ?). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it doe",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2250
https://github.com/sofa-framework/sofa/pull/2250:1015,Modifiability,plugin,plugin,1015,"TL;DR (dev): Remove direct dependency in SofaConstraint&SofaPrecond on SofaSimpleFEM by implementing a function in TetraFEM.; TL;DR (user): Using PrecomputedConstraintCorrection with `rotations=""true""` now **requires** to have a RotationFinder. PrecomputedConstraintCorrection has a hard dependency on TetrahedronFEMForceField, to get rotations.; (hence calling a a function of TetraFEM); It can also get rotations if it detects a component implemented RotationFinder<T>.; But TetrahedronFEMForceField is already implementing BaseRotationFinder taking a BaseMatrix*.; RotationFinder<T> inherits BaseRotationFinder, so I made TetrahedronFEMForceField implementing RotationFinder<T> instead. (which adds an other method to implement); Finally, PrecomputedConstraintCorrection only needs RotationFinder<T> now. IMO, ; - BaseRotationFinder implemented in TetrahedronFEM & HexahedronFEM only and used in WarpPreconditioner;; - RotationFinder<T> (implemented by nobody in the sofacode base but apparently by one external plugin @pedroperrusi) and used by PrecomputedConstraintCorrection, WarpPreconditioner and PrecomputedWarpPreconditioner;. would really need a refactoring or some re-working.; Those two were defined more or less in the same time, in 2006 (!) in the early days of SOFA. Some cleaning in PrecomputedConstraintCorrection as well; and this PR made me wonder the never-defined preprocessor definition NEW_METHOD_UNBUILT in PrecomputedConstraintCorrection (@ChristianDuriez ?). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it doe",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2250
https://github.com/sofa-framework/sofa/pull/2250:1157,Modifiability,refactor,refactoring,1157,"raintCorrection with `rotations=""true""` now **requires** to have a RotationFinder. PrecomputedConstraintCorrection has a hard dependency on TetrahedronFEMForceField, to get rotations.; (hence calling a a function of TetraFEM); It can also get rotations if it detects a component implemented RotationFinder<T>.; But TetrahedronFEMForceField is already implementing BaseRotationFinder taking a BaseMatrix*.; RotationFinder<T> inherits BaseRotationFinder, so I made TetrahedronFEMForceField implementing RotationFinder<T> instead. (which adds an other method to implement); Finally, PrecomputedConstraintCorrection only needs RotationFinder<T> now. IMO, ; - BaseRotationFinder implemented in TetrahedronFEM & HexahedronFEM only and used in WarpPreconditioner;; - RotationFinder<T> (implemented by nobody in the sofacode base but apparently by one external plugin @pedroperrusi) and used by PrecomputedConstraintCorrection, WarpPreconditioner and PrecomputedWarpPreconditioner;. would really need a refactoring or some re-working.; Those two were defined more or less in the same time, in 2006 (!) in the early days of SOFA. Some cleaning in PrecomputedConstraintCorrection as well; and this PR made me wonder the never-defined preprocessor definition NEW_METHOD_UNBUILT in PrecomputedConstraintCorrection (@ChristianDuriez ?). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2250
https://github.com/sofa-framework/sofa/pull/2250:421,Safety,detect,detects,421,"TL;DR (dev): Remove direct dependency in SofaConstraint&SofaPrecond on SofaSimpleFEM by implementing a function in TetraFEM.; TL;DR (user): Using PrecomputedConstraintCorrection with `rotations=""true""` now **requires** to have a RotationFinder. PrecomputedConstraintCorrection has a hard dependency on TetrahedronFEMForceField, to get rotations.; (hence calling a a function of TetraFEM); It can also get rotations if it detects a component implemented RotationFinder<T>.; But TetrahedronFEMForceField is already implementing BaseRotationFinder taking a BaseMatrix*.; RotationFinder<T> inherits BaseRotationFinder, so I made TetrahedronFEMForceField implementing RotationFinder<T> instead. (which adds an other method to implement); Finally, PrecomputedConstraintCorrection only needs RotationFinder<T> now. IMO, ; - BaseRotationFinder implemented in TetrahedronFEM & HexahedronFEM only and used in WarpPreconditioner;; - RotationFinder<T> (implemented by nobody in the sofacode base but apparently by one external plugin @pedroperrusi) and used by PrecomputedConstraintCorrection, WarpPreconditioner and PrecomputedWarpPreconditioner;. would really need a refactoring or some re-working.; Those two were defined more or less in the same time, in 2006 (!) in the early days of SOFA. Some cleaning in PrecomputedConstraintCorrection as well; and this PR made me wonder the never-defined preprocessor definition NEW_METHOD_UNBUILT in PrecomputedConstraintCorrection (@ChristianDuriez ?). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it doe",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2250
https://github.com/sofa-framework/sofa/pull/2250:1649,Security,Certificate,Certificate,1649,"otations=""true""` now **requires** to have a RotationFinder. PrecomputedConstraintCorrection has a hard dependency on TetrahedronFEMForceField, to get rotations.; (hence calling a a function of TetraFEM); It can also get rotations if it detects a component implemented RotationFinder<T>.; But TetrahedronFEMForceField is already implementing BaseRotationFinder taking a BaseMatrix*.; RotationFinder<T> inherits BaseRotationFinder, so I made TetrahedronFEMForceField implementing RotationFinder<T> instead. (which adds an other method to implement); Finally, PrecomputedConstraintCorrection only needs RotationFinder<T> now. IMO, ; - BaseRotationFinder implemented in TetrahedronFEM & HexahedronFEM only and used in WarpPreconditioner;; - RotationFinder<T> (implemented by nobody in the sofacode base but apparently by one external plugin @pedroperrusi) and used by PrecomputedConstraintCorrection, WarpPreconditioner and PrecomputedWarpPreconditioner;. would really need a refactoring or some re-working.; Those two were defined more or less in the same time, in 2006 (!) in the early days of SOFA. Some cleaning in PrecomputedConstraintCorrection as well; and this PR made me wonder the never-defined preprocessor definition NEW_METHOD_UNBUILT in PrecomputedConstraintCorrection (@ChristianDuriez ?). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2250
https://github.com/sofa-framework/sofa/pull/2250:1760,Security,certificate,certificate-of-origin-dco,1760,"otations=""true""` now **requires** to have a RotationFinder. PrecomputedConstraintCorrection has a hard dependency on TetrahedronFEMForceField, to get rotations.; (hence calling a a function of TetraFEM); It can also get rotations if it detects a component implemented RotationFinder<T>.; But TetrahedronFEMForceField is already implementing BaseRotationFinder taking a BaseMatrix*.; RotationFinder<T> inherits BaseRotationFinder, so I made TetrahedronFEMForceField implementing RotationFinder<T> instead. (which adds an other method to implement); Finally, PrecomputedConstraintCorrection only needs RotationFinder<T> now. IMO, ; - BaseRotationFinder implemented in TetrahedronFEM & HexahedronFEM only and used in WarpPreconditioner;; - RotationFinder<T> (implemented by nobody in the sofacode base but apparently by one external plugin @pedroperrusi) and used by PrecomputedConstraintCorrection, WarpPreconditioner and PrecomputedWarpPreconditioner;. would really need a refactoring or some re-working.; Those two were defined more or less in the same time, in 2006 (!) in the early days of SOFA. Some cleaning in PrecomputedConstraintCorrection as well; and this PR made me wonder the never-defined preprocessor definition NEW_METHOD_UNBUILT in PrecomputedConstraintCorrection (@ChristianDuriez ?). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2250
https://github.com/sofa-framework/sofa/pull/2250:2025,Testability,test,test,2025,"otations=""true""` now **requires** to have a RotationFinder. PrecomputedConstraintCorrection has a hard dependency on TetrahedronFEMForceField, to get rotations.; (hence calling a a function of TetraFEM); It can also get rotations if it detects a component implemented RotationFinder<T>.; But TetrahedronFEMForceField is already implementing BaseRotationFinder taking a BaseMatrix*.; RotationFinder<T> inherits BaseRotationFinder, so I made TetrahedronFEMForceField implementing RotationFinder<T> instead. (which adds an other method to implement); Finally, PrecomputedConstraintCorrection only needs RotationFinder<T> now. IMO, ; - BaseRotationFinder implemented in TetrahedronFEM & HexahedronFEM only and used in WarpPreconditioner;; - RotationFinder<T> (implemented by nobody in the sofacode base but apparently by one external plugin @pedroperrusi) and used by PrecomputedConstraintCorrection, WarpPreconditioner and PrecomputedWarpPreconditioner;. would really need a refactoring or some re-working.; Those two were defined more or less in the same time, in 2006 (!) in the early days of SOFA. Some cleaning in PrecomputedConstraintCorrection as well; and this PR made me wonder the never-defined preprocessor definition NEW_METHOD_UNBUILT in PrecomputedConstraintCorrection (@ChristianDuriez ?). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2250
https://github.com/sofa-framework/sofa/pull/2250:2074,Testability,test,test,2074,"otations=""true""` now **requires** to have a RotationFinder. PrecomputedConstraintCorrection has a hard dependency on TetrahedronFEMForceField, to get rotations.; (hence calling a a function of TetraFEM); It can also get rotations if it detects a component implemented RotationFinder<T>.; But TetrahedronFEMForceField is already implementing BaseRotationFinder taking a BaseMatrix*.; RotationFinder<T> inherits BaseRotationFinder, so I made TetrahedronFEMForceField implementing RotationFinder<T> instead. (which adds an other method to implement); Finally, PrecomputedConstraintCorrection only needs RotationFinder<T> now. IMO, ; - BaseRotationFinder implemented in TetrahedronFEM & HexahedronFEM only and used in WarpPreconditioner;; - RotationFinder<T> (implemented by nobody in the sofacode base but apparently by one external plugin @pedroperrusi) and used by PrecomputedConstraintCorrection, WarpPreconditioner and PrecomputedWarpPreconditioner;. would really need a refactoring or some re-working.; Those two were defined more or less in the same time, in 2006 (!) in the early days of SOFA. Some cleaning in PrecomputedConstraintCorrection as well; and this PR made me wonder the never-defined preprocessor definition NEW_METHOD_UNBUILT in PrecomputedConstraintCorrection (@ChristianDuriez ?). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2250
https://github.com/sofa-framework/sofa/pull/2251:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2251
https://github.com/sofa-framework/sofa/pull/2251:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2251
https://github.com/sofa-framework/sofa/pull/2251:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2251
https://github.com/sofa-framework/sofa/pull/2251:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2251
https://github.com/sofa-framework/sofa/pull/2251:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2251
https://github.com/sofa-framework/sofa/pull/2251:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2251
https://github.com/sofa-framework/sofa/pull/2252:594,Availability,failure,failures,594,"Following #2251 (missed other duplicated scenes). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2252
https://github.com/sofa-framework/sofa/pull/2252:643,Availability,failure,failures,643,"Following #2251 (missed other duplicated scenes). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2252
https://github.com/sofa-framework/sofa/pull/2252:213,Security,Certificate,Certificate,213,"Following #2251 (missed other duplicated scenes). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2252
https://github.com/sofa-framework/sofa/pull/2252:324,Security,certificate,certificate-of-origin-dco,324,"Following #2251 (missed other duplicated scenes). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2252
https://github.com/sofa-framework/sofa/pull/2252:589,Testability,test,test,589,"Following #2251 (missed other duplicated scenes). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2252
https://github.com/sofa-framework/sofa/pull/2252:638,Testability,test,test,638,"Following #2251 (missed other duplicated scenes). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2252
https://github.com/sofa-framework/sofa/issues/2253:154,Availability,error,error,154,"In the previous build, I could run the tutorial (oneParticle , compositeObject, chainHybrid et al. ) correctly. . After rebuild, it couldn't working. The error information is as follows:. System: Ubuntu 18.04; g++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0; cmake version 3.19.2. ```; [WARNING] [OglModel(visual)] Loading obj mesh file directly inside the VisualModel will be deprecated soon. Use a MeshObjLoader and link the Data to the VisualModel. E.g: ; <MeshObjLoader name='myLoader' filename='myFilePath.obj'/> ; <OglModel src='@myLoader'/>; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead.; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_M_construct null not valid; Received signal 6; #0 0x7fdf823e1a79 (/opt/Qt5.15.2/lib/libQt5WebEngineCore.so.5.15.2+0x2cbea78); #1 0x7fdf82336436 (/opt/Qt5.15.2/lib/libQt5WebEngineCore.so.5.15.2+0x2c13435); #2 0x7fdf823e03d3 (/opt/Qt5.15.2/lib/libQt5WebEngineCore.so.5.15.2+0x2cbd3d2); #3 0x7fdf823e1a05 (/opt/Qt5.15.2/lib/libQt5WebEngineCore.so.5.15.2+0x2cbea04); #4 0x7fdf9839b040 (/lib/x86_64-linux-gnu/libc-2.27.so+0x3f03f); #5 0x7fdf9839afb7 gsignal; #6 0x7fdf9839c921 abort; #7 0x7fdf987ea0a9 (/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29+0x9d0a8); #8 0x7fdf987f5506 (/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29+0xa8505); #9 0x7fdf987f5571 std::terminate(); #10 0x7fdf987f57f5 __cxa_throw; #11 0x7fdf987ec7dd std::__throw_logic_error(); #12 0x7fdf97d370b4 std::__cxx11::basic_string<>::basic_string<>(); #13 0x7fdf97d37781 sofa::gui::qt::RealGUI::setScene(); #14 0x7fdf97d455fe sofa::gui::qt::RealGUI::CreateGUI(); #15 0x7fdf9cf0ee9b sofa::gui::GUIManager::createGUI(); #16 0x7fdf9cf0f5c5 sofa::gui::GUIManager::MainLoop(); #17 0x556940dfe9a5 main; #18 0x7fdf9837dbf7 __libc_start_main; #19 0x556940dfecea _start; r8: 000",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2253
https://github.com/sofa-framework/sofa/issues/2253:307,Performance,Load,Loading,307,"In the previous build, I could run the tutorial (oneParticle , compositeObject, chainHybrid et al. ) correctly. . After rebuild, it couldn't working. The error information is as follows:. System: Ubuntu 18.04; g++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0; cmake version 3.19.2. ```; [WARNING] [OglModel(visual)] Loading obj mesh file directly inside the VisualModel will be deprecated soon. Use a MeshObjLoader and link the Data to the VisualModel. E.g: ; <MeshObjLoader name='myLoader' filename='myFilePath.obj'/> ; <OglModel src='@myLoader'/>; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead.; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_M_construct null not valid; Received signal 6; #0 0x7fdf823e1a79 (/opt/Qt5.15.2/lib/libQt5WebEngineCore.so.5.15.2+0x2cbea78); #1 0x7fdf82336436 (/opt/Qt5.15.2/lib/libQt5WebEngineCore.so.5.15.2+0x2c13435); #2 0x7fdf823e03d3 (/opt/Qt5.15.2/lib/libQt5WebEngineCore.so.5.15.2+0x2cbd3d2); #3 0x7fdf823e1a05 (/opt/Qt5.15.2/lib/libQt5WebEngineCore.so.5.15.2+0x2cbea04); #4 0x7fdf9839b040 (/lib/x86_64-linux-gnu/libc-2.27.so+0x3f03f); #5 0x7fdf9839afb7 gsignal; #6 0x7fdf9839c921 abort; #7 0x7fdf987ea0a9 (/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29+0x9d0a8); #8 0x7fdf987f5506 (/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29+0xa8505); #9 0x7fdf987f5571 std::terminate(); #10 0x7fdf987f57f5 __cxa_throw; #11 0x7fdf987ec7dd std::__throw_logic_error(); #12 0x7fdf97d370b4 std::__cxx11::basic_string<>::basic_string<>(); #13 0x7fdf97d37781 sofa::gui::qt::RealGUI::setScene(); #14 0x7fdf97d455fe sofa::gui::qt::RealGUI::CreateGUI(); #15 0x7fdf9cf0ee9b sofa::gui::GUIManager::createGUI(); #16 0x7fdf9cf0f5c5 sofa::gui::GUIManager::MainLoop(); #17 0x556940dfe9a5 main; #18 0x7fdf9837dbf7 __libc_start_main; #19 0x556940dfecea _start; r8: 000",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2253
https://github.com/sofa-framework/sofa/issues/2253:1345,Safety,abort,abort,1345,"e VisualModel will be deprecated soon. Use a MeshObjLoader and link the Data to the VisualModel. E.g: ; <MeshObjLoader name='myLoader' filename='myFilePath.obj'/> ; <OglModel src='@myLoader'/>; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead.; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_M_construct null not valid; Received signal 6; #0 0x7fdf823e1a79 (/opt/Qt5.15.2/lib/libQt5WebEngineCore.so.5.15.2+0x2cbea78); #1 0x7fdf82336436 (/opt/Qt5.15.2/lib/libQt5WebEngineCore.so.5.15.2+0x2c13435); #2 0x7fdf823e03d3 (/opt/Qt5.15.2/lib/libQt5WebEngineCore.so.5.15.2+0x2cbd3d2); #3 0x7fdf823e1a05 (/opt/Qt5.15.2/lib/libQt5WebEngineCore.so.5.15.2+0x2cbea04); #4 0x7fdf9839b040 (/lib/x86_64-linux-gnu/libc-2.27.so+0x3f03f); #5 0x7fdf9839afb7 gsignal; #6 0x7fdf9839c921 abort; #7 0x7fdf987ea0a9 (/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29+0x9d0a8); #8 0x7fdf987f5506 (/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29+0xa8505); #9 0x7fdf987f5571 std::terminate(); #10 0x7fdf987f57f5 __cxa_throw; #11 0x7fdf987ec7dd std::__throw_logic_error(); #12 0x7fdf97d370b4 std::__cxx11::basic_string<>::basic_string<>(); #13 0x7fdf97d37781 sofa::gui::qt::RealGUI::setScene(); #14 0x7fdf97d455fe sofa::gui::qt::RealGUI::CreateGUI(); #15 0x7fdf9cf0ee9b sofa::gui::GUIManager::createGUI(); #16 0x7fdf9cf0f5c5 sofa::gui::GUIManager::MainLoop(); #17 0x556940dfe9a5 main; #18 0x7fdf9837dbf7 __libc_start_main; #19 0x556940dfecea _start; r8: 0000000000000000 r9: 00007fff6c36bce0 r10: 0000000000000008 r11: 0000000000000246; r12: 000055694236d140 r13: 00007fdf9880adf0 r14: 00007fff6c36c078 r15: 00005569419f6900; di: 0000000000000002 si: 00007fff6c36bce0 bp: 000055694236c178 bx: 00007fdf98748840; dx: 0000000000000000 ax: 0000000000000000 cx: 00007fdf9839afb7 sp: 00007fff6c36bce0; ip: 000",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2253
https://github.com/sofa-framework/sofa/pull/2254:755,Availability,failure,failures,755,"- useless external instanciation of JointSpring in JointSpringFF (because already defined in JointSpring,h); - remove duplicate forward declaration; - use actual forward declaration and move JointSpring header. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2254
https://github.com/sofa-framework/sofa/pull/2254:804,Availability,failure,failures,804,"- useless external instanciation of JointSpring in JointSpringFF (because already defined in JointSpring,h); - remove duplicate forward declaration; - use actual forward declaration and move JointSpring header. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2254
https://github.com/sofa-framework/sofa/pull/2254:374,Security,Certificate,Certificate,374,"- useless external instanciation of JointSpring in JointSpringFF (because already defined in JointSpring,h); - remove duplicate forward declaration; - use actual forward declaration and move JointSpring header. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2254
https://github.com/sofa-framework/sofa/pull/2254:485,Security,certificate,certificate-of-origin-dco,485,"- useless external instanciation of JointSpring in JointSpringFF (because already defined in JointSpring,h); - remove duplicate forward declaration; - use actual forward declaration and move JointSpring header. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2254
https://github.com/sofa-framework/sofa/pull/2254:750,Testability,test,test,750,"- useless external instanciation of JointSpring in JointSpringFF (because already defined in JointSpring,h); - remove duplicate forward declaration; - use actual forward declaration and move JointSpring header. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2254
https://github.com/sofa-framework/sofa/pull/2254:799,Testability,test,test,799,"- useless external instanciation of JointSpring in JointSpringFF (because already defined in JointSpring,h); - remove duplicate forward declaration; - use actual forward declaration and move JointSpring header. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2254
https://github.com/sofa-framework/sofa/pull/2255:830,Availability,failure,failures,830,"Small batch from Sofa-NG:; - FixedConstraint ; - remove useless dep on SparseMatrix (thus on SofaBaseLinearSolver); - remove other useless includes; - ContactIdentifier ; - use C++17 static inline initialization (solve export symbol problem); - move ctor/dtor definition into the cpp . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2255
https://github.com/sofa-framework/sofa/pull/2255:879,Availability,failure,failures,879,"Small batch from Sofa-NG:; - FixedConstraint ; - remove useless dep on SparseMatrix (thus on SofaBaseLinearSolver); - remove other useless includes; - ContactIdentifier ; - use C++17 static inline initialization (solve export symbol problem); - move ctor/dtor definition into the cpp . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2255
https://github.com/sofa-framework/sofa/pull/2255:449,Security,Certificate,Certificate,449,"Small batch from Sofa-NG:; - FixedConstraint ; - remove useless dep on SparseMatrix (thus on SofaBaseLinearSolver); - remove other useless includes; - ContactIdentifier ; - use C++17 static inline initialization (solve export symbol problem); - move ctor/dtor definition into the cpp . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2255
https://github.com/sofa-framework/sofa/pull/2255:560,Security,certificate,certificate-of-origin-dco,560,"Small batch from Sofa-NG:; - FixedConstraint ; - remove useless dep on SparseMatrix (thus on SofaBaseLinearSolver); - remove other useless includes; - ContactIdentifier ; - use C++17 static inline initialization (solve export symbol problem); - move ctor/dtor definition into the cpp . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2255
https://github.com/sofa-framework/sofa/pull/2255:825,Testability,test,test,825,"Small batch from Sofa-NG:; - FixedConstraint ; - remove useless dep on SparseMatrix (thus on SofaBaseLinearSolver); - remove other useless includes; - ContactIdentifier ; - use C++17 static inline initialization (solve export symbol problem); - move ctor/dtor definition into the cpp . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2255
https://github.com/sofa-framework/sofa/pull/2255:874,Testability,test,test,874,"Small batch from Sofa-NG:; - FixedConstraint ; - remove useless dep on SparseMatrix (thus on SofaBaseLinearSolver); - remove other useless includes; - ContactIdentifier ; - use C++17 static inline initialization (solve export symbol problem); - move ctor/dtor definition into the cpp . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2255
https://github.com/sofa-framework/sofa/pull/2256:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2256
https://github.com/sofa-framework/sofa/pull/2256:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2256
https://github.com/sofa-framework/sofa/pull/2256:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2256
https://github.com/sofa-framework/sofa/pull/2256:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2256
https://github.com/sofa-framework/sofa/pull/2256:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2256
https://github.com/sofa-framework/sofa/pull/2256:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2256
https://github.com/sofa-framework/sofa/pull/2257:713,Availability,failure,failures,713,"Add method to compute the good element density using ancestors and coefs values.; Update all toplogy addElement to take into account ancestors indices and coefficients. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2257
https://github.com/sofa-framework/sofa/pull/2257:762,Availability,failure,failures,762,"Add method to compute the good element density using ancestors and coefs values.; Update all toplogy addElement to take into account ancestors indices and coefficients. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2257
https://github.com/sofa-framework/sofa/pull/2257:82,Deployability,Update,Update,82,"Add method to compute the good element density using ancestors and coefs values.; Update all toplogy addElement to take into account ancestors indices and coefficients. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2257
https://github.com/sofa-framework/sofa/pull/2257:332,Security,Certificate,Certificate,332,"Add method to compute the good element density using ancestors and coefs values.; Update all toplogy addElement to take into account ancestors indices and coefficients. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2257
https://github.com/sofa-framework/sofa/pull/2257:443,Security,certificate,certificate-of-origin-dco,443,"Add method to compute the good element density using ancestors and coefs values.; Update all toplogy addElement to take into account ancestors indices and coefficients. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2257
https://github.com/sofa-framework/sofa/pull/2257:708,Testability,test,test,708,"Add method to compute the good element density using ancestors and coefs values.; Update all toplogy addElement to take into account ancestors indices and coefficients. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2257
https://github.com/sofa-framework/sofa/pull/2257:757,Testability,test,test,757,"Add method to compute the good element density using ancestors and coefs values.; Update all toplogy addElement to take into account ancestors indices and coefficients. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2257
https://github.com/sofa-framework/sofa/pull/2258:683,Availability,failure,failures,683,"In the launcher.py file line 12 correction of the way to import the Queue library. Write From queue import Queue rather than import Queue. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2258
https://github.com/sofa-framework/sofa/pull/2258:732,Availability,failure,failures,732,"In the launcher.py file line 12 correction of the way to import the Queue library. Write From queue import Queue rather than import Queue. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2258
https://github.com/sofa-framework/sofa/pull/2258:68,Performance,Queue,Queue,68,"In the launcher.py file line 12 correction of the way to import the Queue library. Write From queue import Queue rather than import Queue. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2258
https://github.com/sofa-framework/sofa/pull/2258:94,Performance,queue,queue,94,"In the launcher.py file line 12 correction of the way to import the Queue library. Write From queue import Queue rather than import Queue. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2258
https://github.com/sofa-framework/sofa/pull/2258:107,Performance,Queue,Queue,107,"In the launcher.py file line 12 correction of the way to import the Queue library. Write From queue import Queue rather than import Queue. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2258
https://github.com/sofa-framework/sofa/pull/2258:132,Performance,Queue,Queue,132,"In the launcher.py file line 12 correction of the way to import the Queue library. Write From queue import Queue rather than import Queue. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2258
https://github.com/sofa-framework/sofa/pull/2258:302,Security,Certificate,Certificate,302,"In the launcher.py file line 12 correction of the way to import the Queue library. Write From queue import Queue rather than import Queue. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2258
https://github.com/sofa-framework/sofa/pull/2258:413,Security,certificate,certificate-of-origin-dco,413,"In the launcher.py file line 12 correction of the way to import the Queue library. Write From queue import Queue rather than import Queue. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2258
https://github.com/sofa-framework/sofa/pull/2258:678,Testability,test,test,678,"In the launcher.py file line 12 correction of the way to import the Queue library. Write From queue import Queue rather than import Queue. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2258
https://github.com/sofa-framework/sofa/pull/2258:727,Testability,test,test,727,"In the launcher.py file line 12 correction of the way to import the Queue library. Write From queue import Queue rather than import Queue. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2258
https://github.com/sofa-framework/sofa/pull/2259:501,Availability,down,downside,501,"Factories were used only with `std::string` as a key. That is why it was not noticeable that factories were not compatible with other types than `std::string` as the key.; The limitations come from:. - `logFactoryRegister` assumed `Key` is a string. It is now a template function.; - `Creator` inherits from `Key` and instances was used such as it was a string. Now, `Creator` no longer inherits from `Key` but just stores the key as a class member. A unit test is added for enum type as a key. Small downside: `std::string& getFactoryLog()` is now available outside the translation unit. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2259
https://github.com/sofa-framework/sofa/pull/2259:549,Availability,avail,available,549,"Factories were used only with `std::string` as a key. That is why it was not noticeable that factories were not compatible with other types than `std::string` as the key.; The limitations come from:. - `logFactoryRegister` assumed `Key` is a string. It is now a template function.; - `Creator` inherits from `Key` and instances was used such as it was a string. Now, `Creator` no longer inherits from `Key` but just stores the key as a class member. A unit test is added for enum type as a key. Small downside: `std::string& getFactoryLog()` is now available outside the translation unit. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2259
https://github.com/sofa-framework/sofa/pull/2259:1133,Availability,failure,failures,1133,"Factories were used only with `std::string` as a key. That is why it was not noticeable that factories were not compatible with other types than `std::string` as the key.; The limitations come from:. - `logFactoryRegister` assumed `Key` is a string. It is now a template function.; - `Creator` inherits from `Key` and instances was used such as it was a string. Now, `Creator` no longer inherits from `Key` but just stores the key as a class member. A unit test is added for enum type as a key. Small downside: `std::string& getFactoryLog()` is now available outside the translation unit. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2259
https://github.com/sofa-framework/sofa/pull/2259:1182,Availability,failure,failures,1182,"Factories were used only with `std::string` as a key. That is why it was not noticeable that factories were not compatible with other types than `std::string` as the key.; The limitations come from:. - `logFactoryRegister` assumed `Key` is a string. It is now a template function.; - `Creator` inherits from `Key` and instances was used such as it was a string. Now, `Creator` no longer inherits from `Key` but just stores the key as a class member. A unit test is added for enum type as a key. Small downside: `std::string& getFactoryLog()` is now available outside the translation unit. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2259
https://github.com/sofa-framework/sofa/pull/2259:294,Modifiability,inherit,inherits,294,"Factories were used only with `std::string` as a key. That is why it was not noticeable that factories were not compatible with other types than `std::string` as the key.; The limitations come from:. - `logFactoryRegister` assumed `Key` is a string. It is now a template function.; - `Creator` inherits from `Key` and instances was used such as it was a string. Now, `Creator` no longer inherits from `Key` but just stores the key as a class member. A unit test is added for enum type as a key. Small downside: `std::string& getFactoryLog()` is now available outside the translation unit. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2259
https://github.com/sofa-framework/sofa/pull/2259:387,Modifiability,inherit,inherits,387,"Factories were used only with `std::string` as a key. That is why it was not noticeable that factories were not compatible with other types than `std::string` as the key.; The limitations come from:. - `logFactoryRegister` assumed `Key` is a string. It is now a template function.; - `Creator` inherits from `Key` and instances was used such as it was a string. Now, `Creator` no longer inherits from `Key` but just stores the key as a class member. A unit test is added for enum type as a key. Small downside: `std::string& getFactoryLog()` is now available outside the translation unit. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2259
https://github.com/sofa-framework/sofa/pull/2259:752,Security,Certificate,Certificate,752,"Factories were used only with `std::string` as a key. That is why it was not noticeable that factories were not compatible with other types than `std::string` as the key.; The limitations come from:. - `logFactoryRegister` assumed `Key` is a string. It is now a template function.; - `Creator` inherits from `Key` and instances was used such as it was a string. Now, `Creator` no longer inherits from `Key` but just stores the key as a class member. A unit test is added for enum type as a key. Small downside: `std::string& getFactoryLog()` is now available outside the translation unit. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2259
https://github.com/sofa-framework/sofa/pull/2259:863,Security,certificate,certificate-of-origin-dco,863,"Factories were used only with `std::string` as a key. That is why it was not noticeable that factories were not compatible with other types than `std::string` as the key.; The limitations come from:. - `logFactoryRegister` assumed `Key` is a string. It is now a template function.; - `Creator` inherits from `Key` and instances was used such as it was a string. Now, `Creator` no longer inherits from `Key` but just stores the key as a class member. A unit test is added for enum type as a key. Small downside: `std::string& getFactoryLog()` is now available outside the translation unit. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2259
https://github.com/sofa-framework/sofa/pull/2259:203,Testability,log,logFactoryRegister,203,"Factories were used only with `std::string` as a key. That is why it was not noticeable that factories were not compatible with other types than `std::string` as the key.; The limitations come from:. - `logFactoryRegister` assumed `Key` is a string. It is now a template function.; - `Creator` inherits from `Key` and instances was used such as it was a string. Now, `Creator` no longer inherits from `Key` but just stores the key as a class member. A unit test is added for enum type as a key. Small downside: `std::string& getFactoryLog()` is now available outside the translation unit. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2259
https://github.com/sofa-framework/sofa/pull/2259:457,Testability,test,test,457,"Factories were used only with `std::string` as a key. That is why it was not noticeable that factories were not compatible with other types than `std::string` as the key.; The limitations come from:. - `logFactoryRegister` assumed `Key` is a string. It is now a template function.; - `Creator` inherits from `Key` and instances was used such as it was a string. Now, `Creator` no longer inherits from `Key` but just stores the key as a class member. A unit test is added for enum type as a key. Small downside: `std::string& getFactoryLog()` is now available outside the translation unit. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2259
https://github.com/sofa-framework/sofa/pull/2259:1128,Testability,test,test,1128,"Factories were used only with `std::string` as a key. That is why it was not noticeable that factories were not compatible with other types than `std::string` as the key.; The limitations come from:. - `logFactoryRegister` assumed `Key` is a string. It is now a template function.; - `Creator` inherits from `Key` and instances was used such as it was a string. Now, `Creator` no longer inherits from `Key` but just stores the key as a class member. A unit test is added for enum type as a key. Small downside: `std::string& getFactoryLog()` is now available outside the translation unit. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2259
https://github.com/sofa-framework/sofa/pull/2259:1177,Testability,test,test,1177,"Factories were used only with `std::string` as a key. That is why it was not noticeable that factories were not compatible with other types than `std::string` as the key.; The limitations come from:. - `logFactoryRegister` assumed `Key` is a string. It is now a template function.; - `Creator` inherits from `Key` and instances was used such as it was a string. Now, `Creator` no longer inherits from `Key` but just stores the key as a class member. A unit test is added for enum type as a key. Small downside: `std::string& getFactoryLog()` is now available outside the translation unit. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2259
https://github.com/sofa-framework/sofa/pull/2260:569,Availability,failure,failures,569,"Fix compilation warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2260
https://github.com/sofa-framework/sofa/pull/2260:618,Availability,failure,failures,618,"Fix compilation warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2260
https://github.com/sofa-framework/sofa/pull/2260:188,Security,Certificate,Certificate,188,"Fix compilation warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2260
https://github.com/sofa-framework/sofa/pull/2260:299,Security,certificate,certificate-of-origin-dco,299,"Fix compilation warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2260
https://github.com/sofa-framework/sofa/pull/2260:564,Testability,test,test,564,"Fix compilation warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2260
https://github.com/sofa-framework/sofa/pull/2260:613,Testability,test,test,613,"Fix compilation warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2260
https://github.com/sofa-framework/sofa/pull/2261:614,Availability,failure,failures,614,"Fix libs copy on Windows with multi-config generator (Visual Studio). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2261
https://github.com/sofa-framework/sofa/pull/2261:663,Availability,failure,failures,663,"Fix libs copy on Windows with multi-config generator (Visual Studio). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2261
https://github.com/sofa-framework/sofa/pull/2261:36,Modifiability,config,config,36,"Fix libs copy on Windows with multi-config generator (Visual Studio). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2261
https://github.com/sofa-framework/sofa/pull/2261:233,Security,Certificate,Certificate,233,"Fix libs copy on Windows with multi-config generator (Visual Studio). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2261
https://github.com/sofa-framework/sofa/pull/2261:344,Security,certificate,certificate-of-origin-dco,344,"Fix libs copy on Windows with multi-config generator (Visual Studio). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2261
https://github.com/sofa-framework/sofa/pull/2261:609,Testability,test,test,609,"Fix libs copy on Windows with multi-config generator (Visual Studio). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2261
https://github.com/sofa-framework/sofa/pull/2261:658,Testability,test,test,658,"Fix libs copy on Windows with multi-config generator (Visual Studio). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2261
https://github.com/sofa-framework/sofa/pull/2262:766,Availability,failure,failures,766,"In the case the template parameter is in the list of possible template, but is not compatible with the current context, the message said the template is not in the list.; A new message is introduced for this special case. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2262
https://github.com/sofa-framework/sofa/pull/2262:815,Availability,failure,failures,815,"In the case the template parameter is in the list of possible template, but is not compatible with the current context, the message said the template is not in the list.; A new message is introduced for this special case. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2262
https://github.com/sofa-framework/sofa/pull/2262:124,Integrability,message,message,124,"In the case the template parameter is in the list of possible template, but is not compatible with the current context, the message said the template is not in the list.; A new message is introduced for this special case. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2262
https://github.com/sofa-framework/sofa/pull/2262:177,Integrability,message,message,177,"In the case the template parameter is in the list of possible template, but is not compatible with the current context, the message said the template is not in the list.; A new message is introduced for this special case. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2262
https://github.com/sofa-framework/sofa/pull/2262:385,Security,Certificate,Certificate,385,"In the case the template parameter is in the list of possible template, but is not compatible with the current context, the message said the template is not in the list.; A new message is introduced for this special case. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2262
https://github.com/sofa-framework/sofa/pull/2262:496,Security,certificate,certificate-of-origin-dco,496,"In the case the template parameter is in the list of possible template, but is not compatible with the current context, the message said the template is not in the list.; A new message is introduced for this special case. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2262
https://github.com/sofa-framework/sofa/pull/2262:761,Testability,test,test,761,"In the case the template parameter is in the list of possible template, but is not compatible with the current context, the message said the template is not in the list.; A new message is introduced for this special case. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2262
https://github.com/sofa-framework/sofa/pull/2262:810,Testability,test,test,810,"In the case the template parameter is in the list of possible template, but is not compatible with the current context, the message said the template is not in the list.; A new message is introduced for this special case. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2262
https://github.com/sofa-framework/sofa/pull/2263:1675,Availability,failure,failures,1675,"## What; cxxopts is a header-only command-line parser library : https://github.com/jarro2783/cxxopts; Boost's program_options is bothersome and a bit overkill for what we do with it.; (and we want to go towards being able to compile SOFA without Boost one day). The API between them is quite similar but still different:; - value when adding parameter are std::string (instead of the type of the parameter); - implemented a callback system in ArgumentParser because cxxopts does not offer it (boost's name is ""notifier""); - when adding a new parameter boost is ""long_name,short_name"" whereas cxxopts is ""short_name,long_name"". More generally, I tried to hide most of the cxxopts use in ArgumentParser (previously there was a weird mix-up with boost), the only inconvenient place is when adding a new parameter. ## Notes; - Gui (and use of argumentparser) is really.... messy with static functions/variables and unsafe pointer uses here and there. This should be cleanup in the future.; - make SofaGUIGlut compile again even if not supported anymore (it was using boost program_options and I wanted to make it compile for the fun). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2263
https://github.com/sofa-framework/sofa/pull/2263:1724,Availability,failure,failures,1724,"## What; cxxopts is a header-only command-line parser library : https://github.com/jarro2783/cxxopts; Boost's program_options is bothersome and a bit overkill for what we do with it.; (and we want to go towards being able to compile SOFA without Boost one day). The API between them is quite similar but still different:; - value when adding parameter are std::string (instead of the type of the parameter); - implemented a callback system in ArgumentParser because cxxopts does not offer it (boost's name is ""notifier""); - when adding a new parameter boost is ""long_name,short_name"" whereas cxxopts is ""short_name,long_name"". More generally, I tried to hide most of the cxxopts use in ArgumentParser (previously there was a weird mix-up with boost), the only inconvenient place is when adding a new parameter. ## Notes; - Gui (and use of argumentparser) is really.... messy with static functions/variables and unsafe pointer uses here and there. This should be cleanup in the future.; - make SofaGUIGlut compile again even if not supported anymore (it was using boost program_options and I wanted to make it compile for the fun). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2263
https://github.com/sofa-framework/sofa/pull/2263:897,Modifiability,variab,variables,897,"## What; cxxopts is a header-only command-line parser library : https://github.com/jarro2783/cxxopts; Boost's program_options is bothersome and a bit overkill for what we do with it.; (and we want to go towards being able to compile SOFA without Boost one day). The API between them is quite similar but still different:; - value when adding parameter are std::string (instead of the type of the parameter); - implemented a callback system in ArgumentParser because cxxopts does not offer it (boost's name is ""notifier""); - when adding a new parameter boost is ""long_name,short_name"" whereas cxxopts is ""short_name,long_name"". More generally, I tried to hide most of the cxxopts use in ArgumentParser (previously there was a weird mix-up with boost), the only inconvenient place is when adding a new parameter. ## Notes; - Gui (and use of argumentparser) is really.... messy with static functions/variables and unsafe pointer uses here and there. This should be cleanup in the future.; - make SofaGUIGlut compile again even if not supported anymore (it was using boost program_options and I wanted to make it compile for the fun). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2263
https://github.com/sofa-framework/sofa/pull/2263:911,Safety,unsafe,unsafe,911,"## What; cxxopts is a header-only command-line parser library : https://github.com/jarro2783/cxxopts; Boost's program_options is bothersome and a bit overkill for what we do with it.; (and we want to go towards being able to compile SOFA without Boost one day). The API between them is quite similar but still different:; - value when adding parameter are std::string (instead of the type of the parameter); - implemented a callback system in ArgumentParser because cxxopts does not offer it (boost's name is ""notifier""); - when adding a new parameter boost is ""long_name,short_name"" whereas cxxopts is ""short_name,long_name"". More generally, I tried to hide most of the cxxopts use in ArgumentParser (previously there was a weird mix-up with boost), the only inconvenient place is when adding a new parameter. ## Notes; - Gui (and use of argumentparser) is really.... messy with static functions/variables and unsafe pointer uses here and there. This should be cleanup in the future.; - make SofaGUIGlut compile again even if not supported anymore (it was using boost program_options and I wanted to make it compile for the fun). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2263
https://github.com/sofa-framework/sofa/pull/2263:1294,Security,Certificate,Certificate,1294,"## What; cxxopts is a header-only command-line parser library : https://github.com/jarro2783/cxxopts; Boost's program_options is bothersome and a bit overkill for what we do with it.; (and we want to go towards being able to compile SOFA without Boost one day). The API between them is quite similar but still different:; - value when adding parameter are std::string (instead of the type of the parameter); - implemented a callback system in ArgumentParser because cxxopts does not offer it (boost's name is ""notifier""); - when adding a new parameter boost is ""long_name,short_name"" whereas cxxopts is ""short_name,long_name"". More generally, I tried to hide most of the cxxopts use in ArgumentParser (previously there was a weird mix-up with boost), the only inconvenient place is when adding a new parameter. ## Notes; - Gui (and use of argumentparser) is really.... messy with static functions/variables and unsafe pointer uses here and there. This should be cleanup in the future.; - make SofaGUIGlut compile again even if not supported anymore (it was using boost program_options and I wanted to make it compile for the fun). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2263
https://github.com/sofa-framework/sofa/pull/2263:1405,Security,certificate,certificate-of-origin-dco,1405,"## What; cxxopts is a header-only command-line parser library : https://github.com/jarro2783/cxxopts; Boost's program_options is bothersome and a bit overkill for what we do with it.; (and we want to go towards being able to compile SOFA without Boost one day). The API between them is quite similar but still different:; - value when adding parameter are std::string (instead of the type of the parameter); - implemented a callback system in ArgumentParser because cxxopts does not offer it (boost's name is ""notifier""); - when adding a new parameter boost is ""long_name,short_name"" whereas cxxopts is ""short_name,long_name"". More generally, I tried to hide most of the cxxopts use in ArgumentParser (previously there was a weird mix-up with boost), the only inconvenient place is when adding a new parameter. ## Notes; - Gui (and use of argumentparser) is really.... messy with static functions/variables and unsafe pointer uses here and there. This should be cleanup in the future.; - make SofaGUIGlut compile again even if not supported anymore (it was using boost program_options and I wanted to make it compile for the fun). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2263
https://github.com/sofa-framework/sofa/pull/2263:1670,Testability,test,test,1670,"## What; cxxopts is a header-only command-line parser library : https://github.com/jarro2783/cxxopts; Boost's program_options is bothersome and a bit overkill for what we do with it.; (and we want to go towards being able to compile SOFA without Boost one day). The API between them is quite similar but still different:; - value when adding parameter are std::string (instead of the type of the parameter); - implemented a callback system in ArgumentParser because cxxopts does not offer it (boost's name is ""notifier""); - when adding a new parameter boost is ""long_name,short_name"" whereas cxxopts is ""short_name,long_name"". More generally, I tried to hide most of the cxxopts use in ArgumentParser (previously there was a weird mix-up with boost), the only inconvenient place is when adding a new parameter. ## Notes; - Gui (and use of argumentparser) is really.... messy with static functions/variables and unsafe pointer uses here and there. This should be cleanup in the future.; - make SofaGUIGlut compile again even if not supported anymore (it was using boost program_options and I wanted to make it compile for the fun). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2263
https://github.com/sofa-framework/sofa/pull/2263:1719,Testability,test,test,1719,"## What; cxxopts is a header-only command-line parser library : https://github.com/jarro2783/cxxopts; Boost's program_options is bothersome and a bit overkill for what we do with it.; (and we want to go towards being able to compile SOFA without Boost one day). The API between them is quite similar but still different:; - value when adding parameter are std::string (instead of the type of the parameter); - implemented a callback system in ArgumentParser because cxxopts does not offer it (boost's name is ""notifier""); - when adding a new parameter boost is ""long_name,short_name"" whereas cxxopts is ""short_name,long_name"". More generally, I tried to hide most of the cxxopts use in ArgumentParser (previously there was a weird mix-up with boost), the only inconvenient place is when adding a new parameter. ## Notes; - Gui (and use of argumentparser) is really.... messy with static functions/variables and unsafe pointer uses here and there. This should be cleanup in the future.; - make SofaGUIGlut compile again even if not supported anymore (it was using boost program_options and I wanted to make it compile for the fun). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2263
https://github.com/sofa-framework/sofa/pull/2264:1803,Availability,failure,failures,1803,"Follow-up on the quest to remove boost (at least the parts where the libraries are needed). ### 1; The only remaining part of SOFA using boost::thread is Sofa.Helper/Watchdog whose only purpose is to kill the current process if it exceeds a given time.; It is only used in the deprecated sofaInitTimer project, whose is litteraly a ""temporary"" project and was done to monitor the init() of the scenes... a kind of SofaVerification. Even the [commit ](https://github.com/sofa-framework/sofa/commit/0cbb991f6a7d6d1b1f32489d82c3267a6adc36a3) is saying ""ADD: temporary project to profile the initialization of some scenes"". Anyway, I decided to not delete the file by pity, and just moved the Watchdog class into this project.; Frankly, this class and the sofaInitTimer could be deleted in my opinion. ### 2; Sensable plugin is using optionnally `boost::thread::yield`, which:; 1. is deprecated; 2. can be replaced with std::this_thread::yield(). ### 3; CircularQueue had its tests disabled since... forever. I saw that because it was using boost::thread.; I made these tests compiled again but 2 are failing. I made them disabled, if somebody wants to fix them... ### 4; Sofa.Helper does not need boost::thread anymore and thus is removed from the CMake files.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2264
https://github.com/sofa-framework/sofa/pull/2264:1852,Availability,failure,failures,1852,"Follow-up on the quest to remove boost (at least the parts where the libraries are needed). ### 1; The only remaining part of SOFA using boost::thread is Sofa.Helper/Watchdog whose only purpose is to kill the current process if it exceeds a given time.; It is only used in the deprecated sofaInitTimer project, whose is litteraly a ""temporary"" project and was done to monitor the init() of the scenes... a kind of SofaVerification. Even the [commit ](https://github.com/sofa-framework/sofa/commit/0cbb991f6a7d6d1b1f32489d82c3267a6adc36a3) is saying ""ADD: temporary project to profile the initialization of some scenes"". Anyway, I decided to not delete the file by pity, and just moved the Watchdog class into this project.; Frankly, this class and the sofaInitTimer could be deleted in my opinion. ### 2; Sensable plugin is using optionnally `boost::thread::yield`, which:; 1. is deprecated; 2. can be replaced with std::this_thread::yield(). ### 3; CircularQueue had its tests disabled since... forever. I saw that because it was using boost::thread.; I made these tests compiled again but 2 are failing. I made them disabled, if somebody wants to fix them... ### 4; Sofa.Helper does not need boost::thread anymore and thus is removed from the CMake files.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2264
https://github.com/sofa-framework/sofa/pull/2264:368,Energy Efficiency,monitor,monitor,368,"Follow-up on the quest to remove boost (at least the parts where the libraries are needed). ### 1; The only remaining part of SOFA using boost::thread is Sofa.Helper/Watchdog whose only purpose is to kill the current process if it exceeds a given time.; It is only used in the deprecated sofaInitTimer project, whose is litteraly a ""temporary"" project and was done to monitor the init() of the scenes... a kind of SofaVerification. Even the [commit ](https://github.com/sofa-framework/sofa/commit/0cbb991f6a7d6d1b1f32489d82c3267a6adc36a3) is saying ""ADD: temporary project to profile the initialization of some scenes"". Anyway, I decided to not delete the file by pity, and just moved the Watchdog class into this project.; Frankly, this class and the sofaInitTimer could be deleted in my opinion. ### 2; Sensable plugin is using optionnally `boost::thread::yield`, which:; 1. is deprecated; 2. can be replaced with std::this_thread::yield(). ### 3; CircularQueue had its tests disabled since... forever. I saw that because it was using boost::thread.; I made these tests compiled again but 2 are failing. I made them disabled, if somebody wants to fix them... ### 4; Sofa.Helper does not need boost::thread anymore and thus is removed from the CMake files.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2264
https://github.com/sofa-framework/sofa/pull/2264:814,Modifiability,plugin,plugin,814,"Follow-up on the quest to remove boost (at least the parts where the libraries are needed). ### 1; The only remaining part of SOFA using boost::thread is Sofa.Helper/Watchdog whose only purpose is to kill the current process if it exceeds a given time.; It is only used in the deprecated sofaInitTimer project, whose is litteraly a ""temporary"" project and was done to monitor the init() of the scenes... a kind of SofaVerification. Even the [commit ](https://github.com/sofa-framework/sofa/commit/0cbb991f6a7d6d1b1f32489d82c3267a6adc36a3) is saying ""ADD: temporary project to profile the initialization of some scenes"". Anyway, I decided to not delete the file by pity, and just moved the Watchdog class into this project.; Frankly, this class and the sofaInitTimer could be deleted in my opinion. ### 2; Sensable plugin is using optionnally `boost::thread::yield`, which:; 1. is deprecated; 2. can be replaced with std::this_thread::yield(). ### 3; CircularQueue had its tests disabled since... forever. I saw that because it was using boost::thread.; I made these tests compiled again but 2 are failing. I made them disabled, if somebody wants to fix them... ### 4; Sofa.Helper does not need boost::thread anymore and thus is removed from the CMake files.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2264
https://github.com/sofa-framework/sofa/pull/2264:1422,Security,Certificate,Certificate,1422,"Follow-up on the quest to remove boost (at least the parts where the libraries are needed). ### 1; The only remaining part of SOFA using boost::thread is Sofa.Helper/Watchdog whose only purpose is to kill the current process if it exceeds a given time.; It is only used in the deprecated sofaInitTimer project, whose is litteraly a ""temporary"" project and was done to monitor the init() of the scenes... a kind of SofaVerification. Even the [commit ](https://github.com/sofa-framework/sofa/commit/0cbb991f6a7d6d1b1f32489d82c3267a6adc36a3) is saying ""ADD: temporary project to profile the initialization of some scenes"". Anyway, I decided to not delete the file by pity, and just moved the Watchdog class into this project.; Frankly, this class and the sofaInitTimer could be deleted in my opinion. ### 2; Sensable plugin is using optionnally `boost::thread::yield`, which:; 1. is deprecated; 2. can be replaced with std::this_thread::yield(). ### 3; CircularQueue had its tests disabled since... forever. I saw that because it was using boost::thread.; I made these tests compiled again but 2 are failing. I made them disabled, if somebody wants to fix them... ### 4; Sofa.Helper does not need boost::thread anymore and thus is removed from the CMake files.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2264
https://github.com/sofa-framework/sofa/pull/2264:1533,Security,certificate,certificate-of-origin-dco,1533,"Follow-up on the quest to remove boost (at least the parts where the libraries are needed). ### 1; The only remaining part of SOFA using boost::thread is Sofa.Helper/Watchdog whose only purpose is to kill the current process if it exceeds a given time.; It is only used in the deprecated sofaInitTimer project, whose is litteraly a ""temporary"" project and was done to monitor the init() of the scenes... a kind of SofaVerification. Even the [commit ](https://github.com/sofa-framework/sofa/commit/0cbb991f6a7d6d1b1f32489d82c3267a6adc36a3) is saying ""ADD: temporary project to profile the initialization of some scenes"". Anyway, I decided to not delete the file by pity, and just moved the Watchdog class into this project.; Frankly, this class and the sofaInitTimer could be deleted in my opinion. ### 2; Sensable plugin is using optionnally `boost::thread::yield`, which:; 1. is deprecated; 2. can be replaced with std::this_thread::yield(). ### 3; CircularQueue had its tests disabled since... forever. I saw that because it was using boost::thread.; I made these tests compiled again but 2 are failing. I made them disabled, if somebody wants to fix them... ### 4; Sofa.Helper does not need boost::thread anymore and thus is removed from the CMake files.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2264
https://github.com/sofa-framework/sofa/pull/2264:972,Testability,test,tests,972,"Follow-up on the quest to remove boost (at least the parts where the libraries are needed). ### 1; The only remaining part of SOFA using boost::thread is Sofa.Helper/Watchdog whose only purpose is to kill the current process if it exceeds a given time.; It is only used in the deprecated sofaInitTimer project, whose is litteraly a ""temporary"" project and was done to monitor the init() of the scenes... a kind of SofaVerification. Even the [commit ](https://github.com/sofa-framework/sofa/commit/0cbb991f6a7d6d1b1f32489d82c3267a6adc36a3) is saying ""ADD: temporary project to profile the initialization of some scenes"". Anyway, I decided to not delete the file by pity, and just moved the Watchdog class into this project.; Frankly, this class and the sofaInitTimer could be deleted in my opinion. ### 2; Sensable plugin is using optionnally `boost::thread::yield`, which:; 1. is deprecated; 2. can be replaced with std::this_thread::yield(). ### 3; CircularQueue had its tests disabled since... forever. I saw that because it was using boost::thread.; I made these tests compiled again but 2 are failing. I made them disabled, if somebody wants to fix them... ### 4; Sofa.Helper does not need boost::thread anymore and thus is removed from the CMake files.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2264
https://github.com/sofa-framework/sofa/pull/2264:1066,Testability,test,tests,1066,"Follow-up on the quest to remove boost (at least the parts where the libraries are needed). ### 1; The only remaining part of SOFA using boost::thread is Sofa.Helper/Watchdog whose only purpose is to kill the current process if it exceeds a given time.; It is only used in the deprecated sofaInitTimer project, whose is litteraly a ""temporary"" project and was done to monitor the init() of the scenes... a kind of SofaVerification. Even the [commit ](https://github.com/sofa-framework/sofa/commit/0cbb991f6a7d6d1b1f32489d82c3267a6adc36a3) is saying ""ADD: temporary project to profile the initialization of some scenes"". Anyway, I decided to not delete the file by pity, and just moved the Watchdog class into this project.; Frankly, this class and the sofaInitTimer could be deleted in my opinion. ### 2; Sensable plugin is using optionnally `boost::thread::yield`, which:; 1. is deprecated; 2. can be replaced with std::this_thread::yield(). ### 3; CircularQueue had its tests disabled since... forever. I saw that because it was using boost::thread.; I made these tests compiled again but 2 are failing. I made them disabled, if somebody wants to fix them... ### 4; Sofa.Helper does not need boost::thread anymore and thus is removed from the CMake files.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2264
https://github.com/sofa-framework/sofa/pull/2264:1798,Testability,test,test,1798,"Follow-up on the quest to remove boost (at least the parts where the libraries are needed). ### 1; The only remaining part of SOFA using boost::thread is Sofa.Helper/Watchdog whose only purpose is to kill the current process if it exceeds a given time.; It is only used in the deprecated sofaInitTimer project, whose is litteraly a ""temporary"" project and was done to monitor the init() of the scenes... a kind of SofaVerification. Even the [commit ](https://github.com/sofa-framework/sofa/commit/0cbb991f6a7d6d1b1f32489d82c3267a6adc36a3) is saying ""ADD: temporary project to profile the initialization of some scenes"". Anyway, I decided to not delete the file by pity, and just moved the Watchdog class into this project.; Frankly, this class and the sofaInitTimer could be deleted in my opinion. ### 2; Sensable plugin is using optionnally `boost::thread::yield`, which:; 1. is deprecated; 2. can be replaced with std::this_thread::yield(). ### 3; CircularQueue had its tests disabled since... forever. I saw that because it was using boost::thread.; I made these tests compiled again but 2 are failing. I made them disabled, if somebody wants to fix them... ### 4; Sofa.Helper does not need boost::thread anymore and thus is removed from the CMake files.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2264
https://github.com/sofa-framework/sofa/pull/2264:1847,Testability,test,test,1847,"Follow-up on the quest to remove boost (at least the parts where the libraries are needed). ### 1; The only remaining part of SOFA using boost::thread is Sofa.Helper/Watchdog whose only purpose is to kill the current process if it exceeds a given time.; It is only used in the deprecated sofaInitTimer project, whose is litteraly a ""temporary"" project and was done to monitor the init() of the scenes... a kind of SofaVerification. Even the [commit ](https://github.com/sofa-framework/sofa/commit/0cbb991f6a7d6d1b1f32489d82c3267a6adc36a3) is saying ""ADD: temporary project to profile the initialization of some scenes"". Anyway, I decided to not delete the file by pity, and just moved the Watchdog class into this project.; Frankly, this class and the sofaInitTimer could be deleted in my opinion. ### 2; Sensable plugin is using optionnally `boost::thread::yield`, which:; 1. is deprecated; 2. can be replaced with std::this_thread::yield(). ### 3; CircularQueue had its tests disabled since... forever. I saw that because it was using boost::thread.; I made these tests compiled again but 2 are failing. I made them disabled, if somebody wants to fix them... ### 4; Sofa.Helper does not need boost::thread anymore and thus is removed from the CMake files.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2264
https://github.com/sofa-framework/sofa/pull/2265:654,Availability,failure,failures,654,"This PR fixes a bug introduced in #2225. It's basically just a revert. ; Half of my scenes were crashing :( . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2265
https://github.com/sofa-framework/sofa/pull/2265:703,Availability,failure,failures,703,"This PR fixes a bug introduced in #2225. It's basically just a revert. ; Half of my scenes were crashing :( . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2265
https://github.com/sofa-framework/sofa/pull/2265:273,Security,Certificate,Certificate,273,"This PR fixes a bug introduced in #2225. It's basically just a revert. ; Half of my scenes were crashing :( . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2265
https://github.com/sofa-framework/sofa/pull/2265:384,Security,certificate,certificate-of-origin-dco,384,"This PR fixes a bug introduced in #2225. It's basically just a revert. ; Half of my scenes were crashing :( . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2265
https://github.com/sofa-framework/sofa/pull/2265:649,Testability,test,test,649,"This PR fixes a bug introduced in #2225. It's basically just a revert. ; Half of my scenes were crashing :( . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2265
https://github.com/sofa-framework/sofa/pull/2265:698,Testability,test,test,698,"This PR fixes a bug introduced in #2225. It's basically just a revert. ; Half of my scenes were crashing :( . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2265
https://github.com/sofa-framework/sofa/pull/2266:666,Availability,failure,failures,666,"- `InitTasks.h` was useful only because it includes `CpuTask.h`; - `TaskScheduler.h` is not necessary in the header file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2266
https://github.com/sofa-framework/sofa/pull/2266:715,Availability,failure,failures,715,"- `InitTasks.h` was useful only because it includes `CpuTask.h`; - `TaskScheduler.h` is not necessary in the header file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2266
https://github.com/sofa-framework/sofa/pull/2266:285,Security,Certificate,Certificate,285,"- `InitTasks.h` was useful only because it includes `CpuTask.h`; - `TaskScheduler.h` is not necessary in the header file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2266
https://github.com/sofa-framework/sofa/pull/2266:396,Security,certificate,certificate-of-origin-dco,396,"- `InitTasks.h` was useful only because it includes `CpuTask.h`; - `TaskScheduler.h` is not necessary in the header file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2266
https://github.com/sofa-framework/sofa/pull/2266:661,Testability,test,test,661,"- `InitTasks.h` was useful only because it includes `CpuTask.h`; - `TaskScheduler.h` is not necessary in the header file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2266
https://github.com/sofa-framework/sofa/pull/2266:710,Testability,test,test,710,"- `InitTasks.h` was useful only because it includes `CpuTask.h`; - `TaskScheduler.h` is not necessary in the header file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2266
https://github.com/sofa-framework/sofa/pull/2267:949,Availability,failure,failures,949,"Introduction of a scene checker SceneCheckDeprecatedComponents. Its job is to check for deprecated components in the scene, which was done previously by SceneCheckAPIChange. But SceneCheckAPIChange is no longer enabled. Note that SceneCheckAPIChange requires an APIVersion component in the scene, but does not use it to check for deprecated components. That is why I decided to move this check elsewhere. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2267
https://github.com/sofa-framework/sofa/pull/2267:998,Availability,failure,failures,998,"Introduction of a scene checker SceneCheckDeprecatedComponents. Its job is to check for deprecated components in the scene, which was done previously by SceneCheckAPIChange. But SceneCheckAPIChange is no longer enabled. Note that SceneCheckAPIChange requires an APIVersion component in the scene, but does not use it to check for deprecated components. That is why I decided to move this check elsewhere. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2267
https://github.com/sofa-framework/sofa/pull/2267:568,Security,Certificate,Certificate,568,"Introduction of a scene checker SceneCheckDeprecatedComponents. Its job is to check for deprecated components in the scene, which was done previously by SceneCheckAPIChange. But SceneCheckAPIChange is no longer enabled. Note that SceneCheckAPIChange requires an APIVersion component in the scene, but does not use it to check for deprecated components. That is why I decided to move this check elsewhere. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2267
https://github.com/sofa-framework/sofa/pull/2267:679,Security,certificate,certificate-of-origin-dco,679,"Introduction of a scene checker SceneCheckDeprecatedComponents. Its job is to check for deprecated components in the scene, which was done previously by SceneCheckAPIChange. But SceneCheckAPIChange is no longer enabled. Note that SceneCheckAPIChange requires an APIVersion component in the scene, but does not use it to check for deprecated components. That is why I decided to move this check elsewhere. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2267
https://github.com/sofa-framework/sofa/pull/2267:944,Testability,test,test,944,"Introduction of a scene checker SceneCheckDeprecatedComponents. Its job is to check for deprecated components in the scene, which was done previously by SceneCheckAPIChange. But SceneCheckAPIChange is no longer enabled. Note that SceneCheckAPIChange requires an APIVersion component in the scene, but does not use it to check for deprecated components. That is why I decided to move this check elsewhere. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2267
https://github.com/sofa-framework/sofa/pull/2267:993,Testability,test,test,993,"Introduction of a scene checker SceneCheckDeprecatedComponents. Its job is to check for deprecated components in the scene, which was done previously by SceneCheckAPIChange. But SceneCheckAPIChange is no longer enabled. Note that SceneCheckAPIChange requires an APIVersion component in the scene, but does not use it to check for deprecated components. That is why I decided to move this check elsewhere. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2267
https://github.com/sofa-framework/sofa/pull/2268:174,Availability,redundant,redundant,174,"PointConstraint was introduced in https://github.com/sofa-framework/sofa/commit/a30c68b77e3686fce3c4409b21600a3bc565f51e as a temporary component to be removed later.; It is redundant with FixedConstraint.; A problem with ""memory leak issue"" is mentioned. I don't know if it has been fixed.; Note that I did not find any use of this component in scene files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2268
https://github.com/sofa-framework/sofa/pull/2268:903,Availability,failure,failures,903,"PointConstraint was introduced in https://github.com/sofa-framework/sofa/commit/a30c68b77e3686fce3c4409b21600a3bc565f51e as a temporary component to be removed later.; It is redundant with FixedConstraint.; A problem with ""memory leak issue"" is mentioned. I don't know if it has been fixed.; Note that I did not find any use of this component in scene files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2268
https://github.com/sofa-framework/sofa/pull/2268:952,Availability,failure,failures,952,"PointConstraint was introduced in https://github.com/sofa-framework/sofa/commit/a30c68b77e3686fce3c4409b21600a3bc565f51e as a temporary component to be removed later.; It is redundant with FixedConstraint.; A problem with ""memory leak issue"" is mentioned. I don't know if it has been fixed.; Note that I did not find any use of this component in scene files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2268
https://github.com/sofa-framework/sofa/pull/2268:174,Safety,redund,redundant,174,"PointConstraint was introduced in https://github.com/sofa-framework/sofa/commit/a30c68b77e3686fce3c4409b21600a3bc565f51e as a temporary component to be removed later.; It is redundant with FixedConstraint.; A problem with ""memory leak issue"" is mentioned. I don't know if it has been fixed.; Note that I did not find any use of this component in scene files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2268
https://github.com/sofa-framework/sofa/pull/2268:522,Security,Certificate,Certificate,522,"PointConstraint was introduced in https://github.com/sofa-framework/sofa/commit/a30c68b77e3686fce3c4409b21600a3bc565f51e as a temporary component to be removed later.; It is redundant with FixedConstraint.; A problem with ""memory leak issue"" is mentioned. I don't know if it has been fixed.; Note that I did not find any use of this component in scene files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2268
https://github.com/sofa-framework/sofa/pull/2268:633,Security,certificate,certificate-of-origin-dco,633,"PointConstraint was introduced in https://github.com/sofa-framework/sofa/commit/a30c68b77e3686fce3c4409b21600a3bc565f51e as a temporary component to be removed later.; It is redundant with FixedConstraint.; A problem with ""memory leak issue"" is mentioned. I don't know if it has been fixed.; Note that I did not find any use of this component in scene files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2268
https://github.com/sofa-framework/sofa/pull/2268:898,Testability,test,test,898,"PointConstraint was introduced in https://github.com/sofa-framework/sofa/commit/a30c68b77e3686fce3c4409b21600a3bc565f51e as a temporary component to be removed later.; It is redundant with FixedConstraint.; A problem with ""memory leak issue"" is mentioned. I don't know if it has been fixed.; Note that I did not find any use of this component in scene files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2268
https://github.com/sofa-framework/sofa/pull/2268:947,Testability,test,test,947,"PointConstraint was introduced in https://github.com/sofa-framework/sofa/commit/a30c68b77e3686fce3c4409b21600a3bc565f51e as a temporary component to be removed later.; It is redundant with FixedConstraint.; A problem with ""memory leak issue"" is mentioned. I don't know if it has been fixed.; Note that I did not find any use of this component in scene files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2268
https://github.com/sofa-framework/sofa/pull/2269:1942,Availability,failure,failures,1942," old API which is no longer called. API changed in https://github.com/sofa-framework/sofa/commit/55121be3494a4fe833904750fc7f043ff045881d. The list of affected components:. - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/LinearMovementConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/PartialFixedConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/PointConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectDirectionConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectDirectionConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToLineConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToPlaneConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToPointConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/SkeletalMotionConstraint.h. Note that some of them don't implement `applyConstraint`. They had the old API, but with a message warning that the method is not implemented. This problem was not caught before, because the majority of the test scenes uses a matrix-free solver (CGLinearSolver), whereas `applyConstraint` is called only for assembled systems (with SparseLDLSolver for example). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2269
https://github.com/sofa-framework/sofa/pull/2269:1991,Availability,failure,failures,1991," old API which is no longer called. API changed in https://github.com/sofa-framework/sofa/commit/55121be3494a4fe833904750fc7f043ff045881d. The list of affected components:. - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/LinearMovementConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/PartialFixedConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/PointConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectDirectionConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectDirectionConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToLineConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToPlaneConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToPointConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/SkeletalMotionConstraint.h. Note that some of them don't implement `applyConstraint`. They had the old API, but with a message warning that the method is not implemented. This problem was not caught before, because the majority of the test scenes uses a matrix-free solver (CGLinearSolver), whereas `applyConstraint` is called only for assembled systems (with SparseLDLSolver for example). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2269
https://github.com/sofa-framework/sofa/pull/2269:1127,Integrability,message,message,1127," old API which is no longer called. API changed in https://github.com/sofa-framework/sofa/commit/55121be3494a4fe833904750fc7f043ff045881d. The list of affected components:. - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/LinearMovementConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/PartialFixedConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/PointConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectDirectionConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectDirectionConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToLineConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToPlaneConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToPointConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/SkeletalMotionConstraint.h. Note that some of them don't implement `applyConstraint`. They had the old API, but with a message warning that the method is not implemented. This problem was not caught before, because the majority of the test scenes uses a matrix-free solver (CGLinearSolver), whereas `applyConstraint` is called only for assembled systems (with SparseLDLSolver for example). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2269
https://github.com/sofa-framework/sofa/pull/2269:1561,Security,Certificate,Certificate,1561," old API which is no longer called. API changed in https://github.com/sofa-framework/sofa/commit/55121be3494a4fe833904750fc7f043ff045881d. The list of affected components:. - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/LinearMovementConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/PartialFixedConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/PointConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectDirectionConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectDirectionConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToLineConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToPlaneConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToPointConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/SkeletalMotionConstraint.h. Note that some of them don't implement `applyConstraint`. They had the old API, but with a message warning that the method is not implemented. This problem was not caught before, because the majority of the test scenes uses a matrix-free solver (CGLinearSolver), whereas `applyConstraint` is called only for assembled systems (with SparseLDLSolver for example). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2269
https://github.com/sofa-framework/sofa/pull/2269:1672,Security,certificate,certificate-of-origin-dco,1672," old API which is no longer called. API changed in https://github.com/sofa-framework/sofa/commit/55121be3494a4fe833904750fc7f043ff045881d. The list of affected components:. - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/LinearMovementConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/PartialFixedConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/PointConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectDirectionConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectDirectionConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToLineConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToPlaneConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToPointConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/SkeletalMotionConstraint.h. Note that some of them don't implement `applyConstraint`. They had the old API, but with a message warning that the method is not implemented. This problem was not caught before, because the majority of the test scenes uses a matrix-free solver (CGLinearSolver), whereas `applyConstraint` is called only for assembled systems (with SparseLDLSolver for example). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2269
https://github.com/sofa-framework/sofa/pull/2269:1243,Testability,test,test,1243," old API which is no longer called. API changed in https://github.com/sofa-framework/sofa/commit/55121be3494a4fe833904750fc7f043ff045881d. The list of affected components:. - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/LinearMovementConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/PartialFixedConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/PointConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectDirectionConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectDirectionConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToLineConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToPlaneConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToPointConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/SkeletalMotionConstraint.h. Note that some of them don't implement `applyConstraint`. They had the old API, but with a message warning that the method is not implemented. This problem was not caught before, because the majority of the test scenes uses a matrix-free solver (CGLinearSolver), whereas `applyConstraint` is called only for assembled systems (with SparseLDLSolver for example). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2269
https://github.com/sofa-framework/sofa/pull/2269:1937,Testability,test,test,1937," old API which is no longer called. API changed in https://github.com/sofa-framework/sofa/commit/55121be3494a4fe833904750fc7f043ff045881d. The list of affected components:. - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/LinearMovementConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/PartialFixedConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/PointConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectDirectionConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectDirectionConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToLineConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToPlaneConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToPointConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/SkeletalMotionConstraint.h. Note that some of them don't implement `applyConstraint`. They had the old API, but with a message warning that the method is not implemented. This problem was not caught before, because the majority of the test scenes uses a matrix-free solver (CGLinearSolver), whereas `applyConstraint` is called only for assembled systems (with SparseLDLSolver for example). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2269
https://github.com/sofa-framework/sofa/pull/2269:1986,Testability,test,test,1986," old API which is no longer called. API changed in https://github.com/sofa-framework/sofa/commit/55121be3494a4fe833904750fc7f043ff045881d. The list of affected components:. - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/LinearMovementConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/PartialFixedConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/PointConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectDirectionConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectDirectionConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToLineConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToPlaneConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToPointConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/SkeletalMotionConstraint.h. Note that some of them don't implement `applyConstraint`. They had the old API, but with a message warning that the method is not implemented. This problem was not caught before, because the majority of the test scenes uses a matrix-free solver (CGLinearSolver), whereas `applyConstraint` is called only for assembled systems (with SparseLDLSolver for example). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2269
https://github.com/sofa-framework/sofa/pull/2270:958,Availability,error,error,958,"ss has three ambiguous constructors:. ```c++; vector(Size n, const T& value): std::vector<T,Alloc>(n,value) {}; vector(int n, const T& value): std::vector<T,Alloc>(n,value) {}; vector(long n, const T& value): std::vector<T,Alloc>(n,value) {}; ```; effectively making the constructor taking a `sofa::Size` useless: using it will result in an ambiguous call since it can be implicitly converted to both `int` and `long`. This PR remove two of them and keep only the `vector(Size n, const T& value)` one. Steps to reproduce; 1. **main.cpp**; ```c++; #include <sofa/type/vector.h>; #include <iostream>. int main() {; using namespace sofa::type;; vector<double> d_v (sofa::Size(5), 0);; std::cout << d_v << std::endl;; return 0;; }; ```; 2. **Compile**; ```sh; $ gcc -isystem $SOFA_ROOT/include/Sofa.Type -isystem $SOFA_ROOT/include/Sofa.Config -o main.o -c main.cpp; ```; ```sh; main.cpp: In function ‘int main()’:; main.cpp:6:41: error: call of overloaded ‘vector(sofa::Size, int)’ is ambiguous; 6 | vector<double> d_v (sofa::Size(5), 0);; | ^; In file included from /sofa/include/Sofa.Type/sofa/type/vector.h:24,; from main.cpp:1:; /sofa/include/Sofa.Type/sofa/type/vector_T.h:78:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(long int, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>]’; 78 | vector(long n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; /sofa/include/Sofa.Type/sofa/type/vector_T.h:76:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(int, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>]’; 76 | vector(int n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; /sofa/include/Sofa.Type/sofa/type/vector_T.h:74:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(sofa::type::vector<T, MemoryManager>::Size, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>; sofa::type::vector<T, MemoryManager>::Size = long unsigned",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2270
https://github.com/sofa-framework/sofa/pull/2270:2669,Availability,failure,failures,2669,"a.Type -isystem $SOFA_ROOT/include/Sofa.Config -o main.o -c main.cpp; ```; ```sh; main.cpp: In function ‘int main()’:; main.cpp:6:41: error: call of overloaded ‘vector(sofa::Size, int)’ is ambiguous; 6 | vector<double> d_v (sofa::Size(5), 0);; | ^; In file included from /sofa/include/Sofa.Type/sofa/type/vector.h:24,; from main.cpp:1:; /sofa/include/Sofa.Type/sofa/type/vector_T.h:78:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(long int, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>]’; 78 | vector(long n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; /sofa/include/Sofa.Type/sofa/type/vector_T.h:76:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(int, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>]’; 76 | vector(int n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; /sofa/include/Sofa.Type/sofa/type/vector_T.h:74:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(sofa::type::vector<T, MemoryManager>::Size, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>; sofa::type::vector<T, MemoryManager>::Size = long unsigned int]’; 74 | vector(Size n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2270
https://github.com/sofa-framework/sofa/pull/2270:2718,Availability,failure,failures,2718,"a.Type -isystem $SOFA_ROOT/include/Sofa.Config -o main.o -c main.cpp; ```; ```sh; main.cpp: In function ‘int main()’:; main.cpp:6:41: error: call of overloaded ‘vector(sofa::Size, int)’ is ambiguous; 6 | vector<double> d_v (sofa::Size(5), 0);; | ^; In file included from /sofa/include/Sofa.Type/sofa/type/vector.h:24,; from main.cpp:1:; /sofa/include/Sofa.Type/sofa/type/vector_T.h:78:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(long int, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>]’; 78 | vector(long n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; /sofa/include/Sofa.Type/sofa/type/vector_T.h:76:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(int, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>]’; 76 | vector(int n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; /sofa/include/Sofa.Type/sofa/type/vector_T.h:74:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(sofa::type::vector<T, MemoryManager>::Size, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>; sofa::type::vector<T, MemoryManager>::Size = long unsigned int]’; 74 | vector(Size n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2270
https://github.com/sofa-framework/sofa/pull/2270:864,Modifiability,Config,Config,864,"The `sofa::type::vector<T>` class has three ambiguous constructors:. ```c++; vector(Size n, const T& value): std::vector<T,Alloc>(n,value) {}; vector(int n, const T& value): std::vector<T,Alloc>(n,value) {}; vector(long n, const T& value): std::vector<T,Alloc>(n,value) {}; ```; effectively making the constructor taking a `sofa::Size` useless: using it will result in an ambiguous call since it can be implicitly converted to both `int` and `long`. This PR remove two of them and keep only the `vector(Size n, const T& value)` one. Steps to reproduce; 1. **main.cpp**; ```c++; #include <sofa/type/vector.h>; #include <iostream>. int main() {; using namespace sofa::type;; vector<double> d_v (sofa::Size(5), 0);; std::cout << d_v << std::endl;; return 0;; }; ```; 2. **Compile**; ```sh; $ gcc -isystem $SOFA_ROOT/include/Sofa.Type -isystem $SOFA_ROOT/include/Sofa.Config -o main.o -c main.cpp; ```; ```sh; main.cpp: In function ‘int main()’:; main.cpp:6:41: error: call of overloaded ‘vector(sofa::Size, int)’ is ambiguous; 6 | vector<double> d_v (sofa::Size(5), 0);; | ^; In file included from /sofa/include/Sofa.Type/sofa/type/vector.h:24,; from main.cpp:1:; /sofa/include/Sofa.Type/sofa/type/vector_T.h:78:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(long int, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>]’; 78 | vector(long n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; /sofa/include/Sofa.Type/sofa/type/vector_T.h:76:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(int, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>]’; 76 | vector(int n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; /sofa/include/Sofa.Type/sofa/type/vector_T.h:74:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(sofa::type::vector<T, MemoryManager>::Size, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>; sofa::type::vector<T, Memory",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2270
https://github.com/sofa-framework/sofa/pull/2270:2288,Security,Certificate,Certificate,2288,"a.Type -isystem $SOFA_ROOT/include/Sofa.Config -o main.o -c main.cpp; ```; ```sh; main.cpp: In function ‘int main()’:; main.cpp:6:41: error: call of overloaded ‘vector(sofa::Size, int)’ is ambiguous; 6 | vector<double> d_v (sofa::Size(5), 0);; | ^; In file included from /sofa/include/Sofa.Type/sofa/type/vector.h:24,; from main.cpp:1:; /sofa/include/Sofa.Type/sofa/type/vector_T.h:78:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(long int, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>]’; 78 | vector(long n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; /sofa/include/Sofa.Type/sofa/type/vector_T.h:76:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(int, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>]’; 76 | vector(int n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; /sofa/include/Sofa.Type/sofa/type/vector_T.h:74:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(sofa::type::vector<T, MemoryManager>::Size, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>; sofa::type::vector<T, MemoryManager>::Size = long unsigned int]’; 74 | vector(Size n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2270
https://github.com/sofa-framework/sofa/pull/2270:2399,Security,certificate,certificate-of-origin-dco,2399,"a.Type -isystem $SOFA_ROOT/include/Sofa.Config -o main.o -c main.cpp; ```; ```sh; main.cpp: In function ‘int main()’:; main.cpp:6:41: error: call of overloaded ‘vector(sofa::Size, int)’ is ambiguous; 6 | vector<double> d_v (sofa::Size(5), 0);; | ^; In file included from /sofa/include/Sofa.Type/sofa/type/vector.h:24,; from main.cpp:1:; /sofa/include/Sofa.Type/sofa/type/vector_T.h:78:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(long int, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>]’; 78 | vector(long n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; /sofa/include/Sofa.Type/sofa/type/vector_T.h:76:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(int, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>]’; 76 | vector(int n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; /sofa/include/Sofa.Type/sofa/type/vector_T.h:74:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(sofa::type::vector<T, MemoryManager>::Size, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>; sofa::type::vector<T, MemoryManager>::Size = long unsigned int]’; 74 | vector(Size n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2270
https://github.com/sofa-framework/sofa/pull/2270:2664,Testability,test,test,2664,"a.Type -isystem $SOFA_ROOT/include/Sofa.Config -o main.o -c main.cpp; ```; ```sh; main.cpp: In function ‘int main()’:; main.cpp:6:41: error: call of overloaded ‘vector(sofa::Size, int)’ is ambiguous; 6 | vector<double> d_v (sofa::Size(5), 0);; | ^; In file included from /sofa/include/Sofa.Type/sofa/type/vector.h:24,; from main.cpp:1:; /sofa/include/Sofa.Type/sofa/type/vector_T.h:78:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(long int, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>]’; 78 | vector(long n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; /sofa/include/Sofa.Type/sofa/type/vector_T.h:76:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(int, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>]’; 76 | vector(int n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; /sofa/include/Sofa.Type/sofa/type/vector_T.h:74:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(sofa::type::vector<T, MemoryManager>::Size, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>; sofa::type::vector<T, MemoryManager>::Size = long unsigned int]’; 74 | vector(Size n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2270
https://github.com/sofa-framework/sofa/pull/2270:2713,Testability,test,test,2713,"a.Type -isystem $SOFA_ROOT/include/Sofa.Config -o main.o -c main.cpp; ```; ```sh; main.cpp: In function ‘int main()’:; main.cpp:6:41: error: call of overloaded ‘vector(sofa::Size, int)’ is ambiguous; 6 | vector<double> d_v (sofa::Size(5), 0);; | ^; In file included from /sofa/include/Sofa.Type/sofa/type/vector.h:24,; from main.cpp:1:; /sofa/include/Sofa.Type/sofa/type/vector_T.h:78:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(long int, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>]’; 78 | vector(long n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; /sofa/include/Sofa.Type/sofa/type/vector_T.h:76:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(int, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>]’; 76 | vector(int n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; /sofa/include/Sofa.Type/sofa/type/vector_T.h:74:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(sofa::type::vector<T, MemoryManager>::Size, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>; sofa::type::vector<T, MemoryManager>::Size = long unsigned int]’; 74 | vector(Size n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2270
https://github.com/sofa-framework/sofa/pull/2271:565,Availability,failure,failures,565,"and clean the files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2271
https://github.com/sofa-framework/sofa/pull/2271:614,Availability,failure,failures,614,"and clean the files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2271
https://github.com/sofa-framework/sofa/pull/2271:184,Security,Certificate,Certificate,184,"and clean the files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2271
https://github.com/sofa-framework/sofa/pull/2271:295,Security,certificate,certificate-of-origin-dco,295,"and clean the files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2271
https://github.com/sofa-framework/sofa/pull/2271:560,Testability,test,test,560,"and clean the files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2271
https://github.com/sofa-framework/sofa/pull/2271:609,Testability,test,test,609,"and clean the files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2271
https://github.com/sofa-framework/sofa/pull/2272:2551,Availability,failure,failures,2551,"what I wanted from the start, which was lettingLMDNewProximityIntersection managing the filters, and not the CollisionModel themselves. ; Bonus point, it checks if there is a filter for each collision model and is set to Invalid if not (should not crash then)~~. ~~I really wondered whether or not simply deleting this Intersection (and the associated LMDFilter) as the latest meaningful commits were clearly stating it was a work in progress. But it seems to work so thats why I kept it (and by pity as well).~~. ~~@ChristianDuriez whats your opinion on this component ?~~. EDIT: After a meeting with other sofa-dev guys, it has been decided to totally remove this component from the code base, as there was no example, no test and it was even not working before this PR.; As such, I removed:; - LMDNewProximityIntersection ; - Point/Line/TriangleLocalMinDistanceFilter; - and the newly created example.; I let the headers to inform the eventual unfortunate user that these headers must not been used anymore, and update the ComponentChange list. I have squashed the first commit, so IF ONE DAY, people wants to resurrect this code (which was working in the end), one can just come back to the commit https://github.com/sofa-framework/sofa/pull/2272/commits/0d9a1af8d14b1fa508400b05b83588a9d704e34c. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2272
https://github.com/sofa-framework/sofa/pull/2272:2600,Availability,failure,failures,2600,"what I wanted from the start, which was lettingLMDNewProximityIntersection managing the filters, and not the CollisionModel themselves. ; Bonus point, it checks if there is a filter for each collision model and is set to Invalid if not (should not crash then)~~. ~~I really wondered whether or not simply deleting this Intersection (and the associated LMDFilter) as the latest meaningful commits were clearly stating it was a work in progress. But it seems to work so thats why I kept it (and by pity as well).~~. ~~@ChristianDuriez whats your opinion on this component ?~~. EDIT: After a meeting with other sofa-dev guys, it has been decided to totally remove this component from the code base, as there was no example, no test and it was even not working before this PR.; As such, I removed:; - LMDNewProximityIntersection ; - Point/Line/TriangleLocalMinDistanceFilter; - and the newly created example.; I let the headers to inform the eventual unfortunate user that these headers must not been used anymore, and update the ComponentChange list. I have squashed the first commit, so IF ONE DAY, people wants to resurrect this code (which was working in the end), one can just come back to the commit https://github.com/sofa-framework/sofa/pull/2272/commits/0d9a1af8d14b1fa508400b05b83588a9d704e34c. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2272
https://github.com/sofa-framework/sofa/pull/2272:1721,Deployability,update,update,1721,"have finally implemented what I wanted from the start, which was lettingLMDNewProximityIntersection managing the filters, and not the CollisionModel themselves. ; Bonus point, it checks if there is a filter for each collision model and is set to Invalid if not (should not crash then)~~. ~~I really wondered whether or not simply deleting this Intersection (and the associated LMDFilter) as the latest meaningful commits were clearly stating it was a work in progress. But it seems to work so thats why I kept it (and by pity as well).~~. ~~@ChristianDuriez whats your opinion on this component ?~~. EDIT: After a meeting with other sofa-dev guys, it has been decided to totally remove this component from the code base, as there was no example, no test and it was even not working before this PR.; As such, I removed:; - LMDNewProximityIntersection ; - Point/Line/TriangleLocalMinDistanceFilter; - and the newly created example.; I let the headers to inform the eventual unfortunate user that these headers must not been used anymore, and update the ComponentChange list. I have squashed the first commit, so IF ONE DAY, people wants to resurrect this code (which was working in the end), one can just come back to the commit https://github.com/sofa-framework/sofa/pull/2272/commits/0d9a1af8d14b1fa508400b05b83588a9d704e34c. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (o",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2272
https://github.com/sofa-framework/sofa/pull/2272:186,Integrability,depend,dependency,186,"No idea why LMDNewProximityIntersection is in SofaConstraint. nothing to do with constraint but anyway. ~~This work started from the fact that {Point/Line/Triangle}CollisionModel have a dependency on {Point/Line/Triangle}LocalMinDistanceFilter.~~. ~~These filters are only used by LMDNewProximityIntersection, which has naturally NO example scene and no doc 😛; After creating a scene (inspired from TriangleModel.scn), LMDNewProximityIntersection :~~; - ~~is not checking at all if there is a filter for each collision model (crashes like a charm)~~; - ~~point/line filters cannot work (infinite loop)~~; - ~~displays a lot of debug for fun~~. ~~After fixing (totally randomly), I have finally implemented what I wanted from the start, which was lettingLMDNewProximityIntersection managing the filters, and not the CollisionModel themselves. ; Bonus point, it checks if there is a filter for each collision model and is set to Invalid if not (should not crash then)~~. ~~I really wondered whether or not simply deleting this Intersection (and the associated LMDFilter) as the latest meaningful commits were clearly stating it was a work in progress. But it seems to work so thats why I kept it (and by pity as well).~~. ~~@ChristianDuriez whats your opinion on this component ?~~. EDIT: After a meeting with other sofa-dev guys, it has been decided to totally remove this component from the code base, as there was no example, no test and it was even not working before this PR.; As such, I removed:; - LMDNewProximityIntersection ; - Point/Line/TriangleLocalMinDistanceFilter; - and the newly created example.; I let the headers to inform the eventual unfortunate user that these headers must not been used anymore, and update the ComponentChange list. I have squashed the first commit, so IF ONE DAY, people wants to resurrect this code (which was working in the end), one can just come back to the commit https://github.com/sofa-framework/sofa/pull/2272/commits/0d9a1af8d14b1fa508400b05b83588a9d704",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2272
https://github.com/sofa-framework/sofa/pull/2272:2170,Security,Certificate,Certificate,2170,"what I wanted from the start, which was lettingLMDNewProximityIntersection managing the filters, and not the CollisionModel themselves. ; Bonus point, it checks if there is a filter for each collision model and is set to Invalid if not (should not crash then)~~. ~~I really wondered whether or not simply deleting this Intersection (and the associated LMDFilter) as the latest meaningful commits were clearly stating it was a work in progress. But it seems to work so thats why I kept it (and by pity as well).~~. ~~@ChristianDuriez whats your opinion on this component ?~~. EDIT: After a meeting with other sofa-dev guys, it has been decided to totally remove this component from the code base, as there was no example, no test and it was even not working before this PR.; As such, I removed:; - LMDNewProximityIntersection ; - Point/Line/TriangleLocalMinDistanceFilter; - and the newly created example.; I let the headers to inform the eventual unfortunate user that these headers must not been used anymore, and update the ComponentChange list. I have squashed the first commit, so IF ONE DAY, people wants to resurrect this code (which was working in the end), one can just come back to the commit https://github.com/sofa-framework/sofa/pull/2272/commits/0d9a1af8d14b1fa508400b05b83588a9d704e34c. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2272
https://github.com/sofa-framework/sofa/pull/2272:2281,Security,certificate,certificate-of-origin-dco,2281,"what I wanted from the start, which was lettingLMDNewProximityIntersection managing the filters, and not the CollisionModel themselves. ; Bonus point, it checks if there is a filter for each collision model and is set to Invalid if not (should not crash then)~~. ~~I really wondered whether or not simply deleting this Intersection (and the associated LMDFilter) as the latest meaningful commits were clearly stating it was a work in progress. But it seems to work so thats why I kept it (and by pity as well).~~. ~~@ChristianDuriez whats your opinion on this component ?~~. EDIT: After a meeting with other sofa-dev guys, it has been decided to totally remove this component from the code base, as there was no example, no test and it was even not working before this PR.; As such, I removed:; - LMDNewProximityIntersection ; - Point/Line/TriangleLocalMinDistanceFilter; - and the newly created example.; I let the headers to inform the eventual unfortunate user that these headers must not been used anymore, and update the ComponentChange list. I have squashed the first commit, so IF ONE DAY, people wants to resurrect this code (which was working in the end), one can just come back to the commit https://github.com/sofa-framework/sofa/pull/2272/commits/0d9a1af8d14b1fa508400b05b83588a9d704e34c. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2272
https://github.com/sofa-framework/sofa/pull/2272:1430,Testability,test,test,1430,"cene (inspired from TriangleModel.scn), LMDNewProximityIntersection :~~; - ~~is not checking at all if there is a filter for each collision model (crashes like a charm)~~; - ~~point/line filters cannot work (infinite loop)~~; - ~~displays a lot of debug for fun~~. ~~After fixing (totally randomly), I have finally implemented what I wanted from the start, which was lettingLMDNewProximityIntersection managing the filters, and not the CollisionModel themselves. ; Bonus point, it checks if there is a filter for each collision model and is set to Invalid if not (should not crash then)~~. ~~I really wondered whether or not simply deleting this Intersection (and the associated LMDFilter) as the latest meaningful commits were clearly stating it was a work in progress. But it seems to work so thats why I kept it (and by pity as well).~~. ~~@ChristianDuriez whats your opinion on this component ?~~. EDIT: After a meeting with other sofa-dev guys, it has been decided to totally remove this component from the code base, as there was no example, no test and it was even not working before this PR.; As such, I removed:; - LMDNewProximityIntersection ; - Point/Line/TriangleLocalMinDistanceFilter; - and the newly created example.; I let the headers to inform the eventual unfortunate user that these headers must not been used anymore, and update the ComponentChange list. I have squashed the first commit, so IF ONE DAY, people wants to resurrect this code (which was working in the end), one can just come back to the commit https://github.com/sofa-framework/sofa/pull/2272/commits/0d9a1af8d14b1fa508400b05b83588a9d704e34c. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2272
https://github.com/sofa-framework/sofa/pull/2272:2546,Testability,test,test,2546,"what I wanted from the start, which was lettingLMDNewProximityIntersection managing the filters, and not the CollisionModel themselves. ; Bonus point, it checks if there is a filter for each collision model and is set to Invalid if not (should not crash then)~~. ~~I really wondered whether or not simply deleting this Intersection (and the associated LMDFilter) as the latest meaningful commits were clearly stating it was a work in progress. But it seems to work so thats why I kept it (and by pity as well).~~. ~~@ChristianDuriez whats your opinion on this component ?~~. EDIT: After a meeting with other sofa-dev guys, it has been decided to totally remove this component from the code base, as there was no example, no test and it was even not working before this PR.; As such, I removed:; - LMDNewProximityIntersection ; - Point/Line/TriangleLocalMinDistanceFilter; - and the newly created example.; I let the headers to inform the eventual unfortunate user that these headers must not been used anymore, and update the ComponentChange list. I have squashed the first commit, so IF ONE DAY, people wants to resurrect this code (which was working in the end), one can just come back to the commit https://github.com/sofa-framework/sofa/pull/2272/commits/0d9a1af8d14b1fa508400b05b83588a9d704e34c. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2272
https://github.com/sofa-framework/sofa/pull/2272:2595,Testability,test,test,2595,"what I wanted from the start, which was lettingLMDNewProximityIntersection managing the filters, and not the CollisionModel themselves. ; Bonus point, it checks if there is a filter for each collision model and is set to Invalid if not (should not crash then)~~. ~~I really wondered whether or not simply deleting this Intersection (and the associated LMDFilter) as the latest meaningful commits were clearly stating it was a work in progress. But it seems to work so thats why I kept it (and by pity as well).~~. ~~@ChristianDuriez whats your opinion on this component ?~~. EDIT: After a meeting with other sofa-dev guys, it has been decided to totally remove this component from the code base, as there was no example, no test and it was even not working before this PR.; As such, I removed:; - LMDNewProximityIntersection ; - Point/Line/TriangleLocalMinDistanceFilter; - and the newly created example.; I let the headers to inform the eventual unfortunate user that these headers must not been used anymore, and update the ComponentChange list. I have squashed the first commit, so IF ONE DAY, people wants to resurrect this code (which was working in the end), one can just come back to the commit https://github.com/sofa-framework/sofa/pull/2272/commits/0d9a1af8d14b1fa508400b05b83588a9d704e34c. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2272
https://github.com/sofa-framework/sofa/pull/2272:1004,Usability,simpl,simply,1004,"nt. nothing to do with constraint but anyway. ~~This work started from the fact that {Point/Line/Triangle}CollisionModel have a dependency on {Point/Line/Triangle}LocalMinDistanceFilter.~~. ~~These filters are only used by LMDNewProximityIntersection, which has naturally NO example scene and no doc 😛; After creating a scene (inspired from TriangleModel.scn), LMDNewProximityIntersection :~~; - ~~is not checking at all if there is a filter for each collision model (crashes like a charm)~~; - ~~point/line filters cannot work (infinite loop)~~; - ~~displays a lot of debug for fun~~. ~~After fixing (totally randomly), I have finally implemented what I wanted from the start, which was lettingLMDNewProximityIntersection managing the filters, and not the CollisionModel themselves. ; Bonus point, it checks if there is a filter for each collision model and is set to Invalid if not (should not crash then)~~. ~~I really wondered whether or not simply deleting this Intersection (and the associated LMDFilter) as the latest meaningful commits were clearly stating it was a work in progress. But it seems to work so thats why I kept it (and by pity as well).~~. ~~@ChristianDuriez whats your opinion on this component ?~~. EDIT: After a meeting with other sofa-dev guys, it has been decided to totally remove this component from the code base, as there was no example, no test and it was even not working before this PR.; As such, I removed:; - LMDNewProximityIntersection ; - Point/Line/TriangleLocalMinDistanceFilter; - and the newly created example.; I let the headers to inform the eventual unfortunate user that these headers must not been used anymore, and update the ComponentChange list. I have squashed the first commit, so IF ONE DAY, people wants to resurrect this code (which was working in the end), one can just come back to the commit https://github.com/sofa-framework/sofa/pull/2272/commits/0d9a1af8d14b1fa508400b05b83588a9d704e34c. ____________________________________________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2272
https://github.com/sofa-framework/sofa/pull/2272:1107,Usability,clear,clearly,1107,"nt. nothing to do with constraint but anyway. ~~This work started from the fact that {Point/Line/Triangle}CollisionModel have a dependency on {Point/Line/Triangle}LocalMinDistanceFilter.~~. ~~These filters are only used by LMDNewProximityIntersection, which has naturally NO example scene and no doc 😛; After creating a scene (inspired from TriangleModel.scn), LMDNewProximityIntersection :~~; - ~~is not checking at all if there is a filter for each collision model (crashes like a charm)~~; - ~~point/line filters cannot work (infinite loop)~~; - ~~displays a lot of debug for fun~~. ~~After fixing (totally randomly), I have finally implemented what I wanted from the start, which was lettingLMDNewProximityIntersection managing the filters, and not the CollisionModel themselves. ; Bonus point, it checks if there is a filter for each collision model and is set to Invalid if not (should not crash then)~~. ~~I really wondered whether or not simply deleting this Intersection (and the associated LMDFilter) as the latest meaningful commits were clearly stating it was a work in progress. But it seems to work so thats why I kept it (and by pity as well).~~. ~~@ChristianDuriez whats your opinion on this component ?~~. EDIT: After a meeting with other sofa-dev guys, it has been decided to totally remove this component from the code base, as there was no example, no test and it was even not working before this PR.; As such, I removed:; - LMDNewProximityIntersection ; - Point/Line/TriangleLocalMinDistanceFilter; - and the newly created example.; I let the headers to inform the eventual unfortunate user that these headers must not been used anymore, and update the ComponentChange list. I have squashed the first commit, so IF ONE DAY, people wants to resurrect this code (which was working in the end), one can just come back to the commit https://github.com/sofa-framework/sofa/pull/2272/commits/0d9a1af8d14b1fa508400b05b83588a9d704e34c. ____________________________________________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2272
https://github.com/sofa-framework/sofa/pull/2273:1484,Availability,failure,failures,1484,"Small optimizations monitored using tests: ```TriangleFEMForceField3_test, DISABLED_testTriangularFEMPerformance``` which is performing 10 successive simulations of 1000 steps of a grid of 40x40x2= 3200 triangles. Current logs (per simulation of 1000 steps):; ```; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. First quick optimisation on accessing triangle in for loop:; ```; + const Triangle& tri = m_topology->getTriangle(elementIndex);; + Index a = tri[0];; + Index b = tri[1];; + Index c = tri[2];; - Index a = m_topology->getTriangle(elementIndex)[0];; - Index b = m_topology->getTriangle(elementIndex)[1];; - Index c = m_topology->getTriangle(elementIndex)[2];; ```; Gives:; ```; timeMean : 2.40153; timeMin : 2.38573; timeMax : 2.42425; ```. Additionnal small optimization using BeginWriteOnly accessors and const ref in methods give final record:. ```; timeMean : 2.26662; timeMin : 2.23438; timeMax : 2.2895; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2273
https://github.com/sofa-framework/sofa/pull/2273:1533,Availability,failure,failures,1533,"Small optimizations monitored using tests: ```TriangleFEMForceField3_test, DISABLED_testTriangularFEMPerformance``` which is performing 10 successive simulations of 1000 steps of a grid of 40x40x2= 3200 triangles. Current logs (per simulation of 1000 steps):; ```; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. First quick optimisation on accessing triangle in for loop:; ```; + const Triangle& tri = m_topology->getTriangle(elementIndex);; + Index a = tri[0];; + Index b = tri[1];; + Index c = tri[2];; - Index a = m_topology->getTriangle(elementIndex)[0];; - Index b = m_topology->getTriangle(elementIndex)[1];; - Index c = m_topology->getTriangle(elementIndex)[2];; ```; Gives:; ```; timeMean : 2.40153; timeMin : 2.38573; timeMax : 2.42425; ```. Additionnal small optimization using BeginWriteOnly accessors and const ref in methods give final record:. ```; timeMean : 2.26662; timeMin : 2.23438; timeMax : 2.2895; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2273
https://github.com/sofa-framework/sofa/pull/2273:20,Energy Efficiency,monitor,monitored,20,"Small optimizations monitored using tests: ```TriangleFEMForceField3_test, DISABLED_testTriangularFEMPerformance``` which is performing 10 successive simulations of 1000 steps of a grid of 40x40x2= 3200 triangles. Current logs (per simulation of 1000 steps):; ```; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. First quick optimisation on accessing triangle in for loop:; ```; + const Triangle& tri = m_topology->getTriangle(elementIndex);; + Index a = tri[0];; + Index b = tri[1];; + Index c = tri[2];; - Index a = m_topology->getTriangle(elementIndex)[0];; - Index b = m_topology->getTriangle(elementIndex)[1];; - Index c = m_topology->getTriangle(elementIndex)[2];; ```; Gives:; ```; timeMean : 2.40153; timeMin : 2.38573; timeMax : 2.42425; ```. Additionnal small optimization using BeginWriteOnly accessors and const ref in methods give final record:. ```; timeMean : 2.26662; timeMin : 2.23438; timeMax : 2.2895; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2273
https://github.com/sofa-framework/sofa/pull/2273:6,Performance,optimiz,optimizations,6,"Small optimizations monitored using tests: ```TriangleFEMForceField3_test, DISABLED_testTriangularFEMPerformance``` which is performing 10 successive simulations of 1000 steps of a grid of 40x40x2= 3200 triangles. Current logs (per simulation of 1000 steps):; ```; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. First quick optimisation on accessing triangle in for loop:; ```; + const Triangle& tri = m_topology->getTriangle(elementIndex);; + Index a = tri[0];; + Index b = tri[1];; + Index c = tri[2];; - Index a = m_topology->getTriangle(elementIndex)[0];; - Index b = m_topology->getTriangle(elementIndex)[1];; - Index c = m_topology->getTriangle(elementIndex)[2];; ```; Gives:; ```; timeMean : 2.40153; timeMin : 2.38573; timeMax : 2.42425; ```. Additionnal small optimization using BeginWriteOnly accessors and const ref in methods give final record:. ```; timeMean : 2.26662; timeMin : 2.23438; timeMax : 2.2895; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2273
https://github.com/sofa-framework/sofa/pull/2273:125,Performance,perform,performing,125,"Small optimizations monitored using tests: ```TriangleFEMForceField3_test, DISABLED_testTriangularFEMPerformance``` which is performing 10 successive simulations of 1000 steps of a grid of 40x40x2= 3200 triangles. Current logs (per simulation of 1000 steps):; ```; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. First quick optimisation on accessing triangle in for loop:; ```; + const Triangle& tri = m_topology->getTriangle(elementIndex);; + Index a = tri[0];; + Index b = tri[1];; + Index c = tri[2];; - Index a = m_topology->getTriangle(elementIndex)[0];; - Index b = m_topology->getTriangle(elementIndex)[1];; - Index c = m_topology->getTriangle(elementIndex)[2];; ```; Gives:; ```; timeMean : 2.40153; timeMin : 2.38573; timeMax : 2.42425; ```. Additionnal small optimization using BeginWriteOnly accessors and const ref in methods give final record:. ```; timeMean : 2.26662; timeMin : 2.23438; timeMax : 2.2895; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2273
https://github.com/sofa-framework/sofa/pull/2273:784,Performance,optimiz,optimization,784,"Small optimizations monitored using tests: ```TriangleFEMForceField3_test, DISABLED_testTriangularFEMPerformance``` which is performing 10 successive simulations of 1000 steps of a grid of 40x40x2= 3200 triangles. Current logs (per simulation of 1000 steps):; ```; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. First quick optimisation on accessing triangle in for loop:; ```; + const Triangle& tri = m_topology->getTriangle(elementIndex);; + Index a = tri[0];; + Index b = tri[1];; + Index c = tri[2];; - Index a = m_topology->getTriangle(elementIndex)[0];; - Index b = m_topology->getTriangle(elementIndex)[1];; - Index c = m_topology->getTriangle(elementIndex)[2];; ```; Gives:; ```; timeMean : 2.40153; timeMin : 2.38573; timeMax : 2.42425; ```. Additionnal small optimization using BeginWriteOnly accessors and const ref in methods give final record:. ```; timeMean : 2.26662; timeMin : 2.23438; timeMax : 2.2895; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2273
https://github.com/sofa-framework/sofa/pull/2273:355,Security,access,accessing,355,"Small optimizations monitored using tests: ```TriangleFEMForceField3_test, DISABLED_testTriangularFEMPerformance``` which is performing 10 successive simulations of 1000 steps of a grid of 40x40x2= 3200 triangles. Current logs (per simulation of 1000 steps):; ```; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. First quick optimisation on accessing triangle in for loop:; ```; + const Triangle& tri = m_topology->getTriangle(elementIndex);; + Index a = tri[0];; + Index b = tri[1];; + Index c = tri[2];; - Index a = m_topology->getTriangle(elementIndex)[0];; - Index b = m_topology->getTriangle(elementIndex)[1];; - Index c = m_topology->getTriangle(elementIndex)[2];; ```; Gives:; ```; timeMean : 2.40153; timeMin : 2.38573; timeMax : 2.42425; ```. Additionnal small optimization using BeginWriteOnly accessors and const ref in methods give final record:. ```; timeMean : 2.26662; timeMin : 2.23438; timeMax : 2.2895; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2273
https://github.com/sofa-framework/sofa/pull/2273:818,Security,access,accessors,818,"Small optimizations monitored using tests: ```TriangleFEMForceField3_test, DISABLED_testTriangularFEMPerformance``` which is performing 10 successive simulations of 1000 steps of a grid of 40x40x2= 3200 triangles. Current logs (per simulation of 1000 steps):; ```; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. First quick optimisation on accessing triangle in for loop:; ```; + const Triangle& tri = m_topology->getTriangle(elementIndex);; + Index a = tri[0];; + Index b = tri[1];; + Index c = tri[2];; - Index a = m_topology->getTriangle(elementIndex)[0];; - Index b = m_topology->getTriangle(elementIndex)[1];; - Index c = m_topology->getTriangle(elementIndex)[2];; ```; Gives:; ```; timeMean : 2.40153; timeMin : 2.38573; timeMax : 2.42425; ```. Additionnal small optimization using BeginWriteOnly accessors and const ref in methods give final record:. ```; timeMean : 2.26662; timeMin : 2.23438; timeMax : 2.2895; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2273
https://github.com/sofa-framework/sofa/pull/2273:1103,Security,Certificate,Certificate,1103,"Small optimizations monitored using tests: ```TriangleFEMForceField3_test, DISABLED_testTriangularFEMPerformance``` which is performing 10 successive simulations of 1000 steps of a grid of 40x40x2= 3200 triangles. Current logs (per simulation of 1000 steps):; ```; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. First quick optimisation on accessing triangle in for loop:; ```; + const Triangle& tri = m_topology->getTriangle(elementIndex);; + Index a = tri[0];; + Index b = tri[1];; + Index c = tri[2];; - Index a = m_topology->getTriangle(elementIndex)[0];; - Index b = m_topology->getTriangle(elementIndex)[1];; - Index c = m_topology->getTriangle(elementIndex)[2];; ```; Gives:; ```; timeMean : 2.40153; timeMin : 2.38573; timeMax : 2.42425; ```. Additionnal small optimization using BeginWriteOnly accessors and const ref in methods give final record:. ```; timeMean : 2.26662; timeMin : 2.23438; timeMax : 2.2895; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2273
https://github.com/sofa-framework/sofa/pull/2273:1214,Security,certificate,certificate-of-origin-dco,1214,"Small optimizations monitored using tests: ```TriangleFEMForceField3_test, DISABLED_testTriangularFEMPerformance``` which is performing 10 successive simulations of 1000 steps of a grid of 40x40x2= 3200 triangles. Current logs (per simulation of 1000 steps):; ```; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. First quick optimisation on accessing triangle in for loop:; ```; + const Triangle& tri = m_topology->getTriangle(elementIndex);; + Index a = tri[0];; + Index b = tri[1];; + Index c = tri[2];; - Index a = m_topology->getTriangle(elementIndex)[0];; - Index b = m_topology->getTriangle(elementIndex)[1];; - Index c = m_topology->getTriangle(elementIndex)[2];; ```; Gives:; ```; timeMean : 2.40153; timeMin : 2.38573; timeMax : 2.42425; ```. Additionnal small optimization using BeginWriteOnly accessors and const ref in methods give final record:. ```; timeMean : 2.26662; timeMin : 2.23438; timeMax : 2.2895; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2273
https://github.com/sofa-framework/sofa/pull/2273:36,Testability,test,tests,36,"Small optimizations monitored using tests: ```TriangleFEMForceField3_test, DISABLED_testTriangularFEMPerformance``` which is performing 10 successive simulations of 1000 steps of a grid of 40x40x2= 3200 triangles. Current logs (per simulation of 1000 steps):; ```; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. First quick optimisation on accessing triangle in for loop:; ```; + const Triangle& tri = m_topology->getTriangle(elementIndex);; + Index a = tri[0];; + Index b = tri[1];; + Index c = tri[2];; - Index a = m_topology->getTriangle(elementIndex)[0];; - Index b = m_topology->getTriangle(elementIndex)[1];; - Index c = m_topology->getTriangle(elementIndex)[2];; ```; Gives:; ```; timeMean : 2.40153; timeMin : 2.38573; timeMax : 2.42425; ```. Additionnal small optimization using BeginWriteOnly accessors and const ref in methods give final record:. ```; timeMean : 2.26662; timeMin : 2.23438; timeMax : 2.2895; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2273
https://github.com/sofa-framework/sofa/pull/2273:222,Testability,log,logs,222,"Small optimizations monitored using tests: ```TriangleFEMForceField3_test, DISABLED_testTriangularFEMPerformance``` which is performing 10 successive simulations of 1000 steps of a grid of 40x40x2= 3200 triangles. Current logs (per simulation of 1000 steps):; ```; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. First quick optimisation on accessing triangle in for loop:; ```; + const Triangle& tri = m_topology->getTriangle(elementIndex);; + Index a = tri[0];; + Index b = tri[1];; + Index c = tri[2];; - Index a = m_topology->getTriangle(elementIndex)[0];; - Index b = m_topology->getTriangle(elementIndex)[1];; - Index c = m_topology->getTriangle(elementIndex)[2];; ```; Gives:; ```; timeMean : 2.40153; timeMin : 2.38573; timeMax : 2.42425; ```. Additionnal small optimization using BeginWriteOnly accessors and const ref in methods give final record:. ```; timeMean : 2.26662; timeMin : 2.23438; timeMax : 2.2895; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2273
https://github.com/sofa-framework/sofa/pull/2273:1479,Testability,test,test,1479,"Small optimizations monitored using tests: ```TriangleFEMForceField3_test, DISABLED_testTriangularFEMPerformance``` which is performing 10 successive simulations of 1000 steps of a grid of 40x40x2= 3200 triangles. Current logs (per simulation of 1000 steps):; ```; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. First quick optimisation on accessing triangle in for loop:; ```; + const Triangle& tri = m_topology->getTriangle(elementIndex);; + Index a = tri[0];; + Index b = tri[1];; + Index c = tri[2];; - Index a = m_topology->getTriangle(elementIndex)[0];; - Index b = m_topology->getTriangle(elementIndex)[1];; - Index c = m_topology->getTriangle(elementIndex)[2];; ```; Gives:; ```; timeMean : 2.40153; timeMin : 2.38573; timeMax : 2.42425; ```. Additionnal small optimization using BeginWriteOnly accessors and const ref in methods give final record:. ```; timeMean : 2.26662; timeMin : 2.23438; timeMax : 2.2895; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2273
https://github.com/sofa-framework/sofa/pull/2273:1528,Testability,test,test,1528,"Small optimizations monitored using tests: ```TriangleFEMForceField3_test, DISABLED_testTriangularFEMPerformance``` which is performing 10 successive simulations of 1000 steps of a grid of 40x40x2= 3200 triangles. Current logs (per simulation of 1000 steps):; ```; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. First quick optimisation on accessing triangle in for loop:; ```; + const Triangle& tri = m_topology->getTriangle(elementIndex);; + Index a = tri[0];; + Index b = tri[1];; + Index c = tri[2];; - Index a = m_topology->getTriangle(elementIndex)[0];; - Index b = m_topology->getTriangle(elementIndex)[1];; - Index c = m_topology->getTriangle(elementIndex)[2];; ```; Gives:; ```; timeMean : 2.40153; timeMin : 2.38573; timeMax : 2.42425; ```. Additionnal small optimization using BeginWriteOnly accessors and const ref in methods give final record:. ```; timeMean : 2.26662; timeMin : 2.23438; timeMax : 2.2895; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2273
https://github.com/sofa-framework/sofa/pull/2274:731,Availability,failure,failures,731,"Hello,. I was playing with SimpleGUI, and it did not compile with recent sofa::type changes.; Here are some fixes, so it can compile and run well with the latest release. Cheers,. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2274
https://github.com/sofa-framework/sofa/pull/2274:780,Availability,failure,failures,780,"Hello,. I was playing with SimpleGUI, and it did not compile with recent sofa::type changes.; Here are some fixes, so it can compile and run well with the latest release. Cheers,. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2274
https://github.com/sofa-framework/sofa/pull/2274:162,Deployability,release,release,162,"Hello,. I was playing with SimpleGUI, and it did not compile with recent sofa::type changes.; Here are some fixes, so it can compile and run well with the latest release. Cheers,. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2274
https://github.com/sofa-framework/sofa/pull/2274:350,Security,Certificate,Certificate,350,"Hello,. I was playing with SimpleGUI, and it did not compile with recent sofa::type changes.; Here are some fixes, so it can compile and run well with the latest release. Cheers,. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2274
https://github.com/sofa-framework/sofa/pull/2274:461,Security,certificate,certificate-of-origin-dco,461,"Hello,. I was playing with SimpleGUI, and it did not compile with recent sofa::type changes.; Here are some fixes, so it can compile and run well with the latest release. Cheers,. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2274
https://github.com/sofa-framework/sofa/pull/2274:726,Testability,test,test,726,"Hello,. I was playing with SimpleGUI, and it did not compile with recent sofa::type changes.; Here are some fixes, so it can compile and run well with the latest release. Cheers,. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2274
https://github.com/sofa-framework/sofa/pull/2274:775,Testability,test,test,775,"Hello,. I was playing with SimpleGUI, and it did not compile with recent sofa::type changes.; Here are some fixes, so it can compile and run well with the latest release. Cheers,. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2274
https://github.com/sofa-framework/sofa/pull/2274:27,Usability,Simpl,SimpleGUI,27,"Hello,. I was playing with SimpleGUI, and it did not compile with recent sofa::type changes.; Here are some fixes, so it can compile and run well with the latest release. Cheers,. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2274
https://github.com/sofa-framework/sofa/pull/2275:939,Availability,failure,failures,939,"Several fixes:; - TriangleFEMForcefield : wrong init value for strainDisplacement; - TriangularFEMForceField: strainDisplacement not updated at each timestep and using rest Triangle area like in TriangleFEMForceField; - Enable the 2 tests which same value references for TriangleFEMForcefield and TriangularFEMForceField:; checkTriangularFEMForceField_init; checkTriangularFEMForceField_values. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2275
https://github.com/sofa-framework/sofa/pull/2275:988,Availability,failure,failures,988,"Several fixes:; - TriangleFEMForcefield : wrong init value for strainDisplacement; - TriangularFEMForceField: strainDisplacement not updated at each timestep and using rest Triangle area like in TriangleFEMForceField; - Enable the 2 tests which same value references for TriangleFEMForcefield and TriangularFEMForceField:; checkTriangularFEMForceField_init; checkTriangularFEMForceField_values. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2275
https://github.com/sofa-framework/sofa/pull/2275:133,Deployability,update,updated,133,"Several fixes:; - TriangleFEMForcefield : wrong init value for strainDisplacement; - TriangularFEMForceField: strainDisplacement not updated at each timestep and using rest Triangle area like in TriangleFEMForceField; - Enable the 2 tests which same value references for TriangleFEMForcefield and TriangularFEMForceField:; checkTriangularFEMForceField_init; checkTriangularFEMForceField_values. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2275
https://github.com/sofa-framework/sofa/pull/2275:558,Security,Certificate,Certificate,558,"Several fixes:; - TriangleFEMForcefield : wrong init value for strainDisplacement; - TriangularFEMForceField: strainDisplacement not updated at each timestep and using rest Triangle area like in TriangleFEMForceField; - Enable the 2 tests which same value references for TriangleFEMForcefield and TriangularFEMForceField:; checkTriangularFEMForceField_init; checkTriangularFEMForceField_values. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2275
https://github.com/sofa-framework/sofa/pull/2275:669,Security,certificate,certificate-of-origin-dco,669,"Several fixes:; - TriangleFEMForcefield : wrong init value for strainDisplacement; - TriangularFEMForceField: strainDisplacement not updated at each timestep and using rest Triangle area like in TriangleFEMForceField; - Enable the 2 tests which same value references for TriangleFEMForcefield and TriangularFEMForceField:; checkTriangularFEMForceField_init; checkTriangularFEMForceField_values. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2275
https://github.com/sofa-framework/sofa/pull/2275:233,Testability,test,tests,233,"Several fixes:; - TriangleFEMForcefield : wrong init value for strainDisplacement; - TriangularFEMForceField: strainDisplacement not updated at each timestep and using rest Triangle area like in TriangleFEMForceField; - Enable the 2 tests which same value references for TriangleFEMForcefield and TriangularFEMForceField:; checkTriangularFEMForceField_init; checkTriangularFEMForceField_values. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2275
https://github.com/sofa-framework/sofa/pull/2275:934,Testability,test,test,934,"Several fixes:; - TriangleFEMForcefield : wrong init value for strainDisplacement; - TriangularFEMForceField: strainDisplacement not updated at each timestep and using rest Triangle area like in TriangleFEMForceField; - Enable the 2 tests which same value references for TriangleFEMForcefield and TriangularFEMForceField:; checkTriangularFEMForceField_init; checkTriangularFEMForceField_values. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2275
https://github.com/sofa-framework/sofa/pull/2275:983,Testability,test,test,983,"Several fixes:; - TriangleFEMForcefield : wrong init value for strainDisplacement; - TriangularFEMForceField: strainDisplacement not updated at each timestep and using rest Triangle area like in TriangleFEMForceField; - Enable the 2 tests which same value references for TriangleFEMForcefield and TriangularFEMForceField:; checkTriangularFEMForceField_init; checkTriangularFEMForceField_values. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2275
https://github.com/sofa-framework/sofa/pull/2276:780,Availability,failure,failures,780,"and some derived types. This allows to write such code:. ```cpp; const auto [r, g, b, a] = color;; ```. ```cpp; auto& [r, g, b, a] = color;; ```; ```cpp; for (const auto& [r, g, b, a] : colors); {; }; ```; See the unit test Color_test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2276
https://github.com/sofa-framework/sofa/pull/2276:829,Availability,failure,failures,829,"and some derived types. This allows to write such code:. ```cpp; const auto [r, g, b, a] = color;; ```. ```cpp; auto& [r, g, b, a] = color;; ```; ```cpp; for (const auto& [r, g, b, a] : colors); {; }; ```; See the unit test Color_test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2276
https://github.com/sofa-framework/sofa/pull/2276:399,Security,Certificate,Certificate,399,"and some derived types. This allows to write such code:. ```cpp; const auto [r, g, b, a] = color;; ```. ```cpp; auto& [r, g, b, a] = color;; ```; ```cpp; for (const auto& [r, g, b, a] : colors); {; }; ```; See the unit test Color_test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2276
https://github.com/sofa-framework/sofa/pull/2276:510,Security,certificate,certificate-of-origin-dco,510,"and some derived types. This allows to write such code:. ```cpp; const auto [r, g, b, a] = color;; ```. ```cpp; auto& [r, g, b, a] = color;; ```; ```cpp; for (const auto& [r, g, b, a] : colors); {; }; ```; See the unit test Color_test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2276
https://github.com/sofa-framework/sofa/pull/2276:219,Testability,test,test,219,"and some derived types. This allows to write such code:. ```cpp; const auto [r, g, b, a] = color;; ```. ```cpp; auto& [r, g, b, a] = color;; ```; ```cpp; for (const auto& [r, g, b, a] : colors); {; }; ```; See the unit test Color_test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2276
https://github.com/sofa-framework/sofa/pull/2276:775,Testability,test,test,775,"and some derived types. This allows to write such code:. ```cpp; const auto [r, g, b, a] = color;; ```. ```cpp; auto& [r, g, b, a] = color;; ```; ```cpp; for (const auto& [r, g, b, a] : colors); {; }; ```; See the unit test Color_test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2276
https://github.com/sofa-framework/sofa/pull/2276:824,Testability,test,test,824,"and some derived types. This allows to write such code:. ```cpp; const auto [r, g, b, a] = color;; ```. ```cpp; auto& [r, g, b, a] = color;; ```; ```cpp; for (const auto& [r, g, b, a] : colors); {; }; ```; See the unit test Color_test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2276
https://github.com/sofa-framework/sofa/pull/2277:736,Availability,failure,failures,736,"Indices were wrong in case of multiple objects under the same linear solver which uses an assembled 3x3 bloc-based matrix.; Bug introduced in https://github.com/sofa-framework/sofa/pull/2240. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2277
https://github.com/sofa-framework/sofa/pull/2277:785,Availability,failure,failures,785,"Indices were wrong in case of multiple objects under the same linear solver which uses an assembled 3x3 bloc-based matrix.; Bug introduced in https://github.com/sofa-framework/sofa/pull/2240. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2277
https://github.com/sofa-framework/sofa/pull/2277:355,Security,Certificate,Certificate,355,"Indices were wrong in case of multiple objects under the same linear solver which uses an assembled 3x3 bloc-based matrix.; Bug introduced in https://github.com/sofa-framework/sofa/pull/2240. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2277
https://github.com/sofa-framework/sofa/pull/2277:466,Security,certificate,certificate-of-origin-dco,466,"Indices were wrong in case of multiple objects under the same linear solver which uses an assembled 3x3 bloc-based matrix.; Bug introduced in https://github.com/sofa-framework/sofa/pull/2240. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2277
https://github.com/sofa-framework/sofa/pull/2277:731,Testability,test,test,731,"Indices were wrong in case of multiple objects under the same linear solver which uses an assembled 3x3 bloc-based matrix.; Bug introduced in https://github.com/sofa-framework/sofa/pull/2240. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2277
https://github.com/sofa-framework/sofa/pull/2277:780,Testability,test,test,780,"Indices were wrong in case of multiple objects under the same linear solver which uses an assembled 3x3 bloc-based matrix.; Bug introduced in https://github.com/sofa-framework/sofa/pull/2240. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2277
https://github.com/sofa-framework/sofa/pull/2278:975,Availability,failure,failures,975,"The implementation in accessor.h were deprecated with the one in Data.h. In addition, when trying to get an accessor from a data containnig an object overloading Data<>, this implemention; (the one in accessor.h) confuses the system wich mis-select to find the proper accessor implementation and fallback to the one; that is not offering the vectorized API. Removing the getReadAccess, getWriteAccess, getWriteOnlyAccess fix that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2278
https://github.com/sofa-framework/sofa/pull/2278:1024,Availability,failure,failures,1024,"The implementation in accessor.h were deprecated with the one in Data.h. In addition, when trying to get an accessor from a data containnig an object overloading Data<>, this implemention; (the one in accessor.h) confuses the system wich mis-select to find the proper accessor implementation and fallback to the one; that is not offering the vectorized API. Removing the getReadAccess, getWriteAccess, getWriteOnlyAccess fix that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2278
https://github.com/sofa-framework/sofa/pull/2278:22,Security,access,accessor,22,"The implementation in accessor.h were deprecated with the one in Data.h. In addition, when trying to get an accessor from a data containnig an object overloading Data<>, this implemention; (the one in accessor.h) confuses the system wich mis-select to find the proper accessor implementation and fallback to the one; that is not offering the vectorized API. Removing the getReadAccess, getWriteAccess, getWriteOnlyAccess fix that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2278
https://github.com/sofa-framework/sofa/pull/2278:108,Security,access,accessor,108,"The implementation in accessor.h were deprecated with the one in Data.h. In addition, when trying to get an accessor from a data containnig an object overloading Data<>, this implemention; (the one in accessor.h) confuses the system wich mis-select to find the proper accessor implementation and fallback to the one; that is not offering the vectorized API. Removing the getReadAccess, getWriteAccess, getWriteOnlyAccess fix that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2278
https://github.com/sofa-framework/sofa/pull/2278:201,Security,access,accessor,201,"The implementation in accessor.h were deprecated with the one in Data.h. In addition, when trying to get an accessor from a data containnig an object overloading Data<>, this implemention; (the one in accessor.h) confuses the system wich mis-select to find the proper accessor implementation and fallback to the one; that is not offering the vectorized API. Removing the getReadAccess, getWriteAccess, getWriteOnlyAccess fix that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2278
https://github.com/sofa-framework/sofa/pull/2278:268,Security,access,accessor,268,"The implementation in accessor.h were deprecated with the one in Data.h. In addition, when trying to get an accessor from a data containnig an object overloading Data<>, this implemention; (the one in accessor.h) confuses the system wich mis-select to find the proper accessor implementation and fallback to the one; that is not offering the vectorized API. Removing the getReadAccess, getWriteAccess, getWriteOnlyAccess fix that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2278
https://github.com/sofa-framework/sofa/pull/2278:594,Security,Certificate,Certificate,594,"The implementation in accessor.h were deprecated with the one in Data.h. In addition, when trying to get an accessor from a data containnig an object overloading Data<>, this implemention; (the one in accessor.h) confuses the system wich mis-select to find the proper accessor implementation and fallback to the one; that is not offering the vectorized API. Removing the getReadAccess, getWriteAccess, getWriteOnlyAccess fix that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2278
https://github.com/sofa-framework/sofa/pull/2278:705,Security,certificate,certificate-of-origin-dco,705,"The implementation in accessor.h were deprecated with the one in Data.h. In addition, when trying to get an accessor from a data containnig an object overloading Data<>, this implemention; (the one in accessor.h) confuses the system wich mis-select to find the proper accessor implementation and fallback to the one; that is not offering the vectorized API. Removing the getReadAccess, getWriteAccess, getWriteOnlyAccess fix that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2278
https://github.com/sofa-framework/sofa/pull/2278:970,Testability,test,test,970,"The implementation in accessor.h were deprecated with the one in Data.h. In addition, when trying to get an accessor from a data containnig an object overloading Data<>, this implemention; (the one in accessor.h) confuses the system wich mis-select to find the proper accessor implementation and fallback to the one; that is not offering the vectorized API. Removing the getReadAccess, getWriteAccess, getWriteOnlyAccess fix that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2278
https://github.com/sofa-framework/sofa/pull/2278:1019,Testability,test,test,1019,"The implementation in accessor.h were deprecated with the one in Data.h. In addition, when trying to get an accessor from a data containnig an object overloading Data<>, this implemention; (the one in accessor.h) confuses the system wich mis-select to find the proper accessor implementation and fallback to the one; that is not offering the vectorized API. Removing the getReadAccess, getWriteAccess, getWriteOnlyAccess fix that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2278
https://github.com/sofa-framework/sofa/pull/2279:610,Availability,failure,failures,610,"Title says all. Should fix project using SofaGUI as dependencies. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2279
https://github.com/sofa-framework/sofa/pull/2279:659,Availability,failure,failures,659,"Title says all. Should fix project using SofaGUI as dependencies. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2279
https://github.com/sofa-framework/sofa/pull/2279:52,Integrability,depend,dependencies,52,"Title says all. Should fix project using SofaGUI as dependencies. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2279
https://github.com/sofa-framework/sofa/pull/2279:229,Security,Certificate,Certificate,229,"Title says all. Should fix project using SofaGUI as dependencies. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2279
https://github.com/sofa-framework/sofa/pull/2279:340,Security,certificate,certificate-of-origin-dco,340,"Title says all. Should fix project using SofaGUI as dependencies. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2279
https://github.com/sofa-framework/sofa/pull/2279:605,Testability,test,test,605,"Title says all. Should fix project using SofaGUI as dependencies. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2279
https://github.com/sofa-framework/sofa/pull/2279:654,Testability,test,test,654,"Title says all. Should fix project using SofaGUI as dependencies. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2279
https://github.com/sofa-framework/sofa/pull/2280:1062,Availability,failure,failures,1062,"A new library (SofaDefaultType.Testing) is introduced, so it can be linked against in other modules.; In this library, an interface to test derived classes from BaseMatrix is introduced. Those tests are then instantiated in SofaBaseLinearSolver_test, another module than where the interface is. The interface is close to where BaseMatrix is defined, but can be instantiated in other modules. The existing tests in SofaBaseLinearSolver_test are kept, but they have been adapted to avoid the pattern using the inl file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2280
https://github.com/sofa-framework/sofa/pull/2280:1111,Availability,failure,failures,1111,"A new library (SofaDefaultType.Testing) is introduced, so it can be linked against in other modules.; In this library, an interface to test derived classes from BaseMatrix is introduced. Those tests are then instantiated in SofaBaseLinearSolver_test, another module than where the interface is. The interface is close to where BaseMatrix is defined, but can be instantiated in other modules. The existing tests in SofaBaseLinearSolver_test are kept, but they have been adapted to avoid the pattern using the inl file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2280
https://github.com/sofa-framework/sofa/pull/2280:469,Energy Efficiency,adapt,adapted,469,"A new library (SofaDefaultType.Testing) is introduced, so it can be linked against in other modules.; In this library, an interface to test derived classes from BaseMatrix is introduced. Those tests are then instantiated in SofaBaseLinearSolver_test, another module than where the interface is. The interface is close to where BaseMatrix is defined, but can be instantiated in other modules. The existing tests in SofaBaseLinearSolver_test are kept, but they have been adapted to avoid the pattern using the inl file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2280
https://github.com/sofa-framework/sofa/pull/2280:122,Integrability,interface,interface,122,"A new library (SofaDefaultType.Testing) is introduced, so it can be linked against in other modules.; In this library, an interface to test derived classes from BaseMatrix is introduced. Those tests are then instantiated in SofaBaseLinearSolver_test, another module than where the interface is. The interface is close to where BaseMatrix is defined, but can be instantiated in other modules. The existing tests in SofaBaseLinearSolver_test are kept, but they have been adapted to avoid the pattern using the inl file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2280
https://github.com/sofa-framework/sofa/pull/2280:281,Integrability,interface,interface,281,"A new library (SofaDefaultType.Testing) is introduced, so it can be linked against in other modules.; In this library, an interface to test derived classes from BaseMatrix is introduced. Those tests are then instantiated in SofaBaseLinearSolver_test, another module than where the interface is. The interface is close to where BaseMatrix is defined, but can be instantiated in other modules. The existing tests in SofaBaseLinearSolver_test are kept, but they have been adapted to avoid the pattern using the inl file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2280
https://github.com/sofa-framework/sofa/pull/2280:299,Integrability,interface,interface,299,"A new library (SofaDefaultType.Testing) is introduced, so it can be linked against in other modules.; In this library, an interface to test derived classes from BaseMatrix is introduced. Those tests are then instantiated in SofaBaseLinearSolver_test, another module than where the interface is. The interface is close to where BaseMatrix is defined, but can be instantiated in other modules. The existing tests in SofaBaseLinearSolver_test are kept, but they have been adapted to avoid the pattern using the inl file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2280
https://github.com/sofa-framework/sofa/pull/2280:469,Modifiability,adapt,adapted,469,"A new library (SofaDefaultType.Testing) is introduced, so it can be linked against in other modules.; In this library, an interface to test derived classes from BaseMatrix is introduced. Those tests are then instantiated in SofaBaseLinearSolver_test, another module than where the interface is. The interface is close to where BaseMatrix is defined, but can be instantiated in other modules. The existing tests in SofaBaseLinearSolver_test are kept, but they have been adapted to avoid the pattern using the inl file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2280
https://github.com/sofa-framework/sofa/pull/2280:480,Safety,avoid,avoid,480,"A new library (SofaDefaultType.Testing) is introduced, so it can be linked against in other modules.; In this library, an interface to test derived classes from BaseMatrix is introduced. Those tests are then instantiated in SofaBaseLinearSolver_test, another module than where the interface is. The interface is close to where BaseMatrix is defined, but can be instantiated in other modules. The existing tests in SofaBaseLinearSolver_test are kept, but they have been adapted to avoid the pattern using the inl file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2280
https://github.com/sofa-framework/sofa/pull/2280:681,Security,Certificate,Certificate,681,"A new library (SofaDefaultType.Testing) is introduced, so it can be linked against in other modules.; In this library, an interface to test derived classes from BaseMatrix is introduced. Those tests are then instantiated in SofaBaseLinearSolver_test, another module than where the interface is. The interface is close to where BaseMatrix is defined, but can be instantiated in other modules. The existing tests in SofaBaseLinearSolver_test are kept, but they have been adapted to avoid the pattern using the inl file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2280
https://github.com/sofa-framework/sofa/pull/2280:792,Security,certificate,certificate-of-origin-dco,792,"A new library (SofaDefaultType.Testing) is introduced, so it can be linked against in other modules.; In this library, an interface to test derived classes from BaseMatrix is introduced. Those tests are then instantiated in SofaBaseLinearSolver_test, another module than where the interface is. The interface is close to where BaseMatrix is defined, but can be instantiated in other modules. The existing tests in SofaBaseLinearSolver_test are kept, but they have been adapted to avoid the pattern using the inl file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2280
https://github.com/sofa-framework/sofa/pull/2280:31,Testability,Test,Testing,31,"A new library (SofaDefaultType.Testing) is introduced, so it can be linked against in other modules.; In this library, an interface to test derived classes from BaseMatrix is introduced. Those tests are then instantiated in SofaBaseLinearSolver_test, another module than where the interface is. The interface is close to where BaseMatrix is defined, but can be instantiated in other modules. The existing tests in SofaBaseLinearSolver_test are kept, but they have been adapted to avoid the pattern using the inl file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2280
https://github.com/sofa-framework/sofa/pull/2280:135,Testability,test,test,135,"A new library (SofaDefaultType.Testing) is introduced, so it can be linked against in other modules.; In this library, an interface to test derived classes from BaseMatrix is introduced. Those tests are then instantiated in SofaBaseLinearSolver_test, another module than where the interface is. The interface is close to where BaseMatrix is defined, but can be instantiated in other modules. The existing tests in SofaBaseLinearSolver_test are kept, but they have been adapted to avoid the pattern using the inl file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2280
https://github.com/sofa-framework/sofa/pull/2280:193,Testability,test,tests,193,"A new library (SofaDefaultType.Testing) is introduced, so it can be linked against in other modules.; In this library, an interface to test derived classes from BaseMatrix is introduced. Those tests are then instantiated in SofaBaseLinearSolver_test, another module than where the interface is. The interface is close to where BaseMatrix is defined, but can be instantiated in other modules. The existing tests in SofaBaseLinearSolver_test are kept, but they have been adapted to avoid the pattern using the inl file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2280
https://github.com/sofa-framework/sofa/pull/2280:405,Testability,test,tests,405,"A new library (SofaDefaultType.Testing) is introduced, so it can be linked against in other modules.; In this library, an interface to test derived classes from BaseMatrix is introduced. Those tests are then instantiated in SofaBaseLinearSolver_test, another module than where the interface is. The interface is close to where BaseMatrix is defined, but can be instantiated in other modules. The existing tests in SofaBaseLinearSolver_test are kept, but they have been adapted to avoid the pattern using the inl file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2280
https://github.com/sofa-framework/sofa/pull/2280:1057,Testability,test,test,1057,"A new library (SofaDefaultType.Testing) is introduced, so it can be linked against in other modules.; In this library, an interface to test derived classes from BaseMatrix is introduced. Those tests are then instantiated in SofaBaseLinearSolver_test, another module than where the interface is. The interface is close to where BaseMatrix is defined, but can be instantiated in other modules. The existing tests in SofaBaseLinearSolver_test are kept, but they have been adapted to avoid the pattern using the inl file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2280
https://github.com/sofa-framework/sofa/pull/2280:1106,Testability,test,test,1106,"A new library (SofaDefaultType.Testing) is introduced, so it can be linked against in other modules.; In this library, an interface to test derived classes from BaseMatrix is introduced. Those tests are then instantiated in SofaBaseLinearSolver_test, another module than where the interface is. The interface is close to where BaseMatrix is defined, but can be instantiated in other modules. The existing tests in SofaBaseLinearSolver_test are kept, but they have been adapted to avoid the pattern using the inl file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2280
https://github.com/sofa-framework/sofa/pull/2281:4013,Availability,failure,failures,4013,"RS_Fixture<double>/Add3x3BlocScalar_double 67780 ns 66811 ns 10488; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 51334 ns 50603 ns 13884; ```. ## After. ```; -----------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 76223 ns 76266 ns 9132; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d 13781 ns 13808 ns 51026; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d 12434 ns 12458 ns 56014; BM_CRS_Fixture<double>/Add3x3BlocScalar_double 66579 ns 66637 ns 10530; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 49684 ns 49713 ns 14274; ```. # Conclusion. The benchmarks show that insertion of 3x3 blocs is faster in 3x3 bloc-based CRS matrices than before (the test `Add3x3Bloc_CRS3x3d`). It goes almost at the same speed than the bloc insertion specialized for 3x3 CRS matrices (benchmark BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d).; The speed remains the same for CRS made doubles, which is expected. TODO: explain the benchmarks and push them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2281
https://github.com/sofa-framework/sofa/pull/2281:4062,Availability,failure,failures,4062,"RS_Fixture<double>/Add3x3BlocScalar_double 67780 ns 66811 ns 10488; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 51334 ns 50603 ns 13884; ```. ## After. ```; -----------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 76223 ns 76266 ns 9132; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d 13781 ns 13808 ns 51026; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d 12434 ns 12458 ns 56014; BM_CRS_Fixture<double>/Add3x3BlocScalar_double 66579 ns 66637 ns 10530; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 49684 ns 49713 ns 14274; ```. # Conclusion. The benchmarks show that insertion of 3x3 blocs is faster in 3x3 bloc-based CRS matrices than before (the test `Add3x3Bloc_CRS3x3d`). It goes almost at the same speed than the bloc insertion specialized for 3x3 CRS matrices (benchmark BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d).; The speed remains the same for CRS made doubles, which is expected. TODO: explain the benchmarks and push them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2281
https://github.com/sofa-framework/sofa/pull/2281:414,Performance,optimiz,optimize,414,"PR based on #2280.; Template specialization for `void CompressedRowSparseMatrix<type::Mat<3,3,double> >::add(Index row, Index col, const type::Mat3x3d & _M)` in order to accelerate insertion.; This allows to avoid branching in force fields, based on the type of the system matrix (`dynamic_cast`). I removed it in `HexahedronFEMForceField`, but it could be removed in other places. It allows also to automatically optimize bloc insertion in force fields that did not have the branches. # Benchmarks. ## List of benchmarks. - `BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble`: insertion of 1000 3x3 blocs into a CRS made of double; - `BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d`: insertion of 1000 3x3 blocs into a CRS made of 3x3 blocs; - `BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d`: insertion of 1000 3x3 blocs into a CRS made of 3x3 blocs, but insertion uses the fast function specialized for 3x3 CRS matrices. This is the fastest possible bloc insertion. It is actually used in the specialized function introduced by this PR, among other checks. Therefore, this speed is the goal to achieve for the specialized function.; - `BM_CRS_Fixture<double>/Add3x3BlocScalar_double`: insertion of 1000 3x3 blocs into a CRS made of double using 9 individual scalar insertion; - `BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d `: insertion of 1000 3x3 blocs into a CRS made of 3x3 blocs, using 9 individual scalar insertion. This is equivalent to what happens in BaseMatrix' bloc insertion, therefore it corresponds to the previous behavior of bloc insertion (before this PR). ## Before. ```; -----------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 75568 ns 75550 ns 9185; BM_CRS_Fixture<sofa::",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2281
https://github.com/sofa-framework/sofa/pull/2281:208,Safety,avoid,avoid,208,"PR based on #2280.; Template specialization for `void CompressedRowSparseMatrix<type::Mat<3,3,double> >::add(Index row, Index col, const type::Mat3x3d & _M)` in order to accelerate insertion.; This allows to avoid branching in force fields, based on the type of the system matrix (`dynamic_cast`). I removed it in `HexahedronFEMForceField`, but it could be removed in other places. It allows also to automatically optimize bloc insertion in force fields that did not have the branches. # Benchmarks. ## List of benchmarks. - `BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble`: insertion of 1000 3x3 blocs into a CRS made of double; - `BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d`: insertion of 1000 3x3 blocs into a CRS made of 3x3 blocs; - `BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d`: insertion of 1000 3x3 blocs into a CRS made of 3x3 blocs, but insertion uses the fast function specialized for 3x3 CRS matrices. This is the fastest possible bloc insertion. It is actually used in the specialized function introduced by this PR, among other checks. Therefore, this speed is the goal to achieve for the specialized function.; - `BM_CRS_Fixture<double>/Add3x3BlocScalar_double`: insertion of 1000 3x3 blocs into a CRS made of double using 9 individual scalar insertion; - `BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d `: insertion of 1000 3x3 blocs into a CRS made of 3x3 blocs, using 9 individual scalar insertion. This is equivalent to what happens in BaseMatrix' bloc insertion, therefore it corresponds to the previous behavior of bloc insertion (before this PR). ## Before. ```; -----------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 75568 ns 75550 ns 9185; BM_CRS_Fixture<sofa::",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2281
https://github.com/sofa-framework/sofa/pull/2281:3632,Security,Certificate,Certificate,3632,"RS_Fixture<double>/Add3x3BlocScalar_double 67780 ns 66811 ns 10488; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 51334 ns 50603 ns 13884; ```. ## After. ```; -----------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 76223 ns 76266 ns 9132; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d 13781 ns 13808 ns 51026; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d 12434 ns 12458 ns 56014; BM_CRS_Fixture<double>/Add3x3BlocScalar_double 66579 ns 66637 ns 10530; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 49684 ns 49713 ns 14274; ```. # Conclusion. The benchmarks show that insertion of 3x3 blocs is faster in 3x3 bloc-based CRS matrices than before (the test `Add3x3Bloc_CRS3x3d`). It goes almost at the same speed than the bloc insertion specialized for 3x3 CRS matrices (benchmark BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d).; The speed remains the same for CRS made doubles, which is expected. TODO: explain the benchmarks and push them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2281
https://github.com/sofa-framework/sofa/pull/2281:3743,Security,certificate,certificate-of-origin-dco,3743,"RS_Fixture<double>/Add3x3BlocScalar_double 67780 ns 66811 ns 10488; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 51334 ns 50603 ns 13884; ```. ## After. ```; -----------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 76223 ns 76266 ns 9132; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d 13781 ns 13808 ns 51026; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d 12434 ns 12458 ns 56014; BM_CRS_Fixture<double>/Add3x3BlocScalar_double 66579 ns 66637 ns 10530; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 49684 ns 49713 ns 14274; ```. # Conclusion. The benchmarks show that insertion of 3x3 blocs is faster in 3x3 bloc-based CRS matrices than before (the test `Add3x3Bloc_CRS3x3d`). It goes almost at the same speed than the bloc insertion specialized for 3x3 CRS matrices (benchmark BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d).; The speed remains the same for CRS made doubles, which is expected. TODO: explain the benchmarks and push them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2281
https://github.com/sofa-framework/sofa/pull/2281:488,Testability,Benchmark,Benchmarks,488,"PR based on #2280.; Template specialization for `void CompressedRowSparseMatrix<type::Mat<3,3,double> >::add(Index row, Index col, const type::Mat3x3d & _M)` in order to accelerate insertion.; This allows to avoid branching in force fields, based on the type of the system matrix (`dynamic_cast`). I removed it in `HexahedronFEMForceField`, but it could be removed in other places. It allows also to automatically optimize bloc insertion in force fields that did not have the branches. # Benchmarks. ## List of benchmarks. - `BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble`: insertion of 1000 3x3 blocs into a CRS made of double; - `BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d`: insertion of 1000 3x3 blocs into a CRS made of 3x3 blocs; - `BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d`: insertion of 1000 3x3 blocs into a CRS made of 3x3 blocs, but insertion uses the fast function specialized for 3x3 CRS matrices. This is the fastest possible bloc insertion. It is actually used in the specialized function introduced by this PR, among other checks. Therefore, this speed is the goal to achieve for the specialized function.; - `BM_CRS_Fixture<double>/Add3x3BlocScalar_double`: insertion of 1000 3x3 blocs into a CRS made of double using 9 individual scalar insertion; - `BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d `: insertion of 1000 3x3 blocs into a CRS made of 3x3 blocs, using 9 individual scalar insertion. This is equivalent to what happens in BaseMatrix' bloc insertion, therefore it corresponds to the previous behavior of bloc insertion (before this PR). ## Before. ```; -----------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 75568 ns 75550 ns 9185; BM_CRS_Fixture<sofa::",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2281
https://github.com/sofa-framework/sofa/pull/2281:511,Testability,benchmark,benchmarks,511,"PR based on #2280.; Template specialization for `void CompressedRowSparseMatrix<type::Mat<3,3,double> >::add(Index row, Index col, const type::Mat3x3d & _M)` in order to accelerate insertion.; This allows to avoid branching in force fields, based on the type of the system matrix (`dynamic_cast`). I removed it in `HexahedronFEMForceField`, but it could be removed in other places. It allows also to automatically optimize bloc insertion in force fields that did not have the branches. # Benchmarks. ## List of benchmarks. - `BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble`: insertion of 1000 3x3 blocs into a CRS made of double; - `BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d`: insertion of 1000 3x3 blocs into a CRS made of 3x3 blocs; - `BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d`: insertion of 1000 3x3 blocs into a CRS made of 3x3 blocs, but insertion uses the fast function specialized for 3x3 CRS matrices. This is the fastest possible bloc insertion. It is actually used in the specialized function introduced by this PR, among other checks. Therefore, this speed is the goal to achieve for the specialized function.; - `BM_CRS_Fixture<double>/Add3x3BlocScalar_double`: insertion of 1000 3x3 blocs into a CRS made of double using 9 individual scalar insertion; - `BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d `: insertion of 1000 3x3 blocs into a CRS made of 3x3 blocs, using 9 individual scalar insertion. This is equivalent to what happens in BaseMatrix' bloc insertion, therefore it corresponds to the previous behavior of bloc insertion (before this PR). ## Before. ```; -----------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 75568 ns 75550 ns 9185; BM_CRS_Fixture<sofa::",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2281
https://github.com/sofa-framework/sofa/pull/2281:1766,Testability,Benchmark,Benchmark,1766,"oc insertion. It is actually used in the specialized function introduced by this PR, among other checks. Therefore, this speed is the goal to achieve for the specialized function.; - `BM_CRS_Fixture<double>/Add3x3BlocScalar_double`: insertion of 1000 3x3 blocs into a CRS made of double using 9 individual scalar insertion; - `BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d `: insertion of 1000 3x3 blocs into a CRS made of 3x3 blocs, using 9 individual scalar insertion. This is equivalent to what happens in BaseMatrix' bloc insertion, therefore it corresponds to the previous behavior of bloc insertion (before this PR). ## Before. ```; -----------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 75568 ns 75550 ns 9185; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d 55533 ns 54699 ns 12798; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d 12930 ns 12785 ns 49662; BM_CRS_Fixture<double>/Add3x3BlocScalar_double 67780 ns 66811 ns 10488; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 51334 ns 50603 ns 13884; ```. ## After. ```; -----------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 76223 ns 76266 ns 9132; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d 13781 ns 13808 ns 51026; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d 12434 ns 12458 ns 56014; BM_CRS_Fixture<double>/Add3x3BlocScalar_double 66579 ns 66637 ns 10530; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocS",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2281
https://github.com/sofa-framework/sofa/pull/2281:2465,Testability,Benchmark,Benchmark,2465,"----------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 75568 ns 75550 ns 9185; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d 55533 ns 54699 ns 12798; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d 12930 ns 12785 ns 49662; BM_CRS_Fixture<double>/Add3x3BlocScalar_double 67780 ns 66811 ns 10488; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 51334 ns 50603 ns 13884; ```. ## After. ```; -----------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 76223 ns 76266 ns 9132; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d 13781 ns 13808 ns 51026; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d 12434 ns 12458 ns 56014; BM_CRS_Fixture<double>/Add3x3BlocScalar_double 66579 ns 66637 ns 10530; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 49684 ns 49713 ns 14274; ```. # Conclusion. The benchmarks show that insertion of 3x3 blocs is faster in 3x3 bloc-based CRS matrices than before (the test `Add3x3Bloc_CRS3x3d`). It goes almost at the same speed than the bloc insertion specialized for 3x3 CRS matrices (benchmark BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d).; The speed remains the same for CRS made doubles, which is expected. TODO: explain the benchmarks and push them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-fram",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2281
https://github.com/sofa-framework/sofa/pull/2281:3052,Testability,benchmark,benchmarks,3052,"d3x3BlocShortcut_CRS3x3d 12930 ns 12785 ns 49662; BM_CRS_Fixture<double>/Add3x3BlocScalar_double 67780 ns 66811 ns 10488; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 51334 ns 50603 ns 13884; ```. ## After. ```; -----------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 76223 ns 76266 ns 9132; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d 13781 ns 13808 ns 51026; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d 12434 ns 12458 ns 56014; BM_CRS_Fixture<double>/Add3x3BlocScalar_double 66579 ns 66637 ns 10530; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 49684 ns 49713 ns 14274; ```. # Conclusion. The benchmarks show that insertion of 3x3 blocs is faster in 3x3 bloc-based CRS matrices than before (the test `Add3x3Bloc_CRS3x3d`). It goes almost at the same speed than the bloc insertion specialized for 3x3 CRS matrices (benchmark BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d).; The speed remains the same for CRS made doubles, which is expected. TODO: explain the benchmarks and push them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; -",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2281
https://github.com/sofa-framework/sofa/pull/2281:3154,Testability,test,test,3154,"d3x3BlocShortcut_CRS3x3d 12930 ns 12785 ns 49662; BM_CRS_Fixture<double>/Add3x3BlocScalar_double 67780 ns 66811 ns 10488; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 51334 ns 50603 ns 13884; ```. ## After. ```; -----------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 76223 ns 76266 ns 9132; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d 13781 ns 13808 ns 51026; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d 12434 ns 12458 ns 56014; BM_CRS_Fixture<double>/Add3x3BlocScalar_double 66579 ns 66637 ns 10530; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 49684 ns 49713 ns 14274; ```. # Conclusion. The benchmarks show that insertion of 3x3 blocs is faster in 3x3 bloc-based CRS matrices than before (the test `Add3x3Bloc_CRS3x3d`). It goes almost at the same speed than the bloc insertion specialized for 3x3 CRS matrices (benchmark BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d).; The speed remains the same for CRS made doubles, which is expected. TODO: explain the benchmarks and push them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; -",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2281
https://github.com/sofa-framework/sofa/pull/2281:3273,Testability,benchmark,benchmark,3273,"RS_Fixture<double>/Add3x3BlocScalar_double 67780 ns 66811 ns 10488; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 51334 ns 50603 ns 13884; ```. ## After. ```; -----------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 76223 ns 76266 ns 9132; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d 13781 ns 13808 ns 51026; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d 12434 ns 12458 ns 56014; BM_CRS_Fixture<double>/Add3x3BlocScalar_double 66579 ns 66637 ns 10530; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 49684 ns 49713 ns 14274; ```. # Conclusion. The benchmarks show that insertion of 3x3 blocs is faster in 3x3 bloc-based CRS matrices than before (the test `Add3x3Bloc_CRS3x3d`). It goes almost at the same speed than the bloc insertion specialized for 3x3 CRS matrices (benchmark BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d).; The speed remains the same for CRS made doubles, which is expected. TODO: explain the benchmarks and push them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2281
https://github.com/sofa-framework/sofa/pull/2281:3443,Testability,benchmark,benchmarks,3443,"RS_Fixture<double>/Add3x3BlocScalar_double 67780 ns 66811 ns 10488; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 51334 ns 50603 ns 13884; ```. ## After. ```; -----------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 76223 ns 76266 ns 9132; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d 13781 ns 13808 ns 51026; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d 12434 ns 12458 ns 56014; BM_CRS_Fixture<double>/Add3x3BlocScalar_double 66579 ns 66637 ns 10530; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 49684 ns 49713 ns 14274; ```. # Conclusion. The benchmarks show that insertion of 3x3 blocs is faster in 3x3 bloc-based CRS matrices than before (the test `Add3x3Bloc_CRS3x3d`). It goes almost at the same speed than the bloc insertion specialized for 3x3 CRS matrices (benchmark BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d).; The speed remains the same for CRS made doubles, which is expected. TODO: explain the benchmarks and push them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2281
https://github.com/sofa-framework/sofa/pull/2281:4008,Testability,test,test,4008,"RS_Fixture<double>/Add3x3BlocScalar_double 67780 ns 66811 ns 10488; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 51334 ns 50603 ns 13884; ```. ## After. ```; -----------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 76223 ns 76266 ns 9132; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d 13781 ns 13808 ns 51026; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d 12434 ns 12458 ns 56014; BM_CRS_Fixture<double>/Add3x3BlocScalar_double 66579 ns 66637 ns 10530; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 49684 ns 49713 ns 14274; ```. # Conclusion. The benchmarks show that insertion of 3x3 blocs is faster in 3x3 bloc-based CRS matrices than before (the test `Add3x3Bloc_CRS3x3d`). It goes almost at the same speed than the bloc insertion specialized for 3x3 CRS matrices (benchmark BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d).; The speed remains the same for CRS made doubles, which is expected. TODO: explain the benchmarks and push them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2281
https://github.com/sofa-framework/sofa/pull/2281:4057,Testability,test,test,4057,"RS_Fixture<double>/Add3x3BlocScalar_double 67780 ns 66811 ns 10488; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 51334 ns 50603 ns 13884; ```. ## After. ```; -----------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 76223 ns 76266 ns 9132; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d 13781 ns 13808 ns 51026; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d 12434 ns 12458 ns 56014; BM_CRS_Fixture<double>/Add3x3BlocScalar_double 66579 ns 66637 ns 10530; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 49684 ns 49713 ns 14274; ```. # Conclusion. The benchmarks show that insertion of 3x3 blocs is faster in 3x3 bloc-based CRS matrices than before (the test `Add3x3Bloc_CRS3x3d`). It goes almost at the same speed than the bloc insertion specialized for 3x3 CRS matrices (benchmark BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d).; The speed remains the same for CRS made doubles, which is expected. TODO: explain the benchmarks and push them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2281
https://github.com/sofa-framework/sofa/pull/2282:713,Availability,failure,failures,713,"- Using noexcept and constexpr keywords here and there.; - replace multiple versions of functions/ctors with conditional templated ones ; - cleaning (static_cast, etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2282
https://github.com/sofa-framework/sofa/pull/2282:762,Availability,failure,failures,762,"- Using noexcept and constexpr keywords here and there.; - replace multiple versions of functions/ctors with conditional templated ones ; - cleaning (static_cast, etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2282
https://github.com/sofa-framework/sofa/pull/2282:332,Security,Certificate,Certificate,332,"- Using noexcept and constexpr keywords here and there.; - replace multiple versions of functions/ctors with conditional templated ones ; - cleaning (static_cast, etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2282
https://github.com/sofa-framework/sofa/pull/2282:443,Security,certificate,certificate-of-origin-dco,443,"- Using noexcept and constexpr keywords here and there.; - replace multiple versions of functions/ctors with conditional templated ones ; - cleaning (static_cast, etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2282
https://github.com/sofa-framework/sofa/pull/2282:708,Testability,test,test,708,"- Using noexcept and constexpr keywords here and there.; - replace multiple versions of functions/ctors with conditional templated ones ; - cleaning (static_cast, etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2282
https://github.com/sofa-framework/sofa/pull/2282:757,Testability,test,test,757,"- Using noexcept and constexpr keywords here and there.; - replace multiple versions of functions/ctors with conditional templated ones ; - cleaning (static_cast, etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2282
https://github.com/sofa-framework/sofa/pull/2283:656,Availability,failure,failures,656,"Remove unused Data:; - edgeInfo; - f_damping. Removes API proposing to implement damping inside the same class. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2283
https://github.com/sofa-framework/sofa/pull/2283:705,Availability,failure,failures,705,"Remove unused Data:; - edgeInfo; - f_damping. Removes API proposing to implement damping inside the same class. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2283
https://github.com/sofa-framework/sofa/pull/2283:275,Security,Certificate,Certificate,275,"Remove unused Data:; - edgeInfo; - f_damping. Removes API proposing to implement damping inside the same class. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2283
https://github.com/sofa-framework/sofa/pull/2283:386,Security,certificate,certificate-of-origin-dco,386,"Remove unused Data:; - edgeInfo; - f_damping. Removes API proposing to implement damping inside the same class. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2283
https://github.com/sofa-framework/sofa/pull/2283:651,Testability,test,test,651,"Remove unused Data:; - edgeInfo; - f_damping. Removes API proposing to implement damping inside the same class. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2283
https://github.com/sofa-framework/sofa/pull/2283:700,Testability,test,test,700,"Remove unused Data:; - edgeInfo; - f_damping. Removes API proposing to implement damping inside the same class. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2283
https://github.com/sofa-framework/sofa/pull/2284:246,Availability,down,down,246,"- Add getter; - Add tests; - Update init mechanism to match Triangular and Triangle FEM. Add a lot of comment to describe the optimization of this component and try to solve the small difference comprare to TriangleFEM but changing the code slow down its convergence for unknown reason... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2284
https://github.com/sofa-framework/sofa/pull/2284:833,Availability,failure,failures,833,"- Add getter; - Add tests; - Update init mechanism to match Triangular and Triangle FEM. Add a lot of comment to describe the optimization of this component and try to solve the small difference comprare to TriangleFEM but changing the code slow down its convergence for unknown reason... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2284
https://github.com/sofa-framework/sofa/pull/2284:882,Availability,failure,failures,882,"- Add getter; - Add tests; - Update init mechanism to match Triangular and Triangle FEM. Add a lot of comment to describe the optimization of this component and try to solve the small difference comprare to TriangleFEM but changing the code slow down its convergence for unknown reason... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2284
https://github.com/sofa-framework/sofa/pull/2284:29,Deployability,Update,Update,29,"- Add getter; - Add tests; - Update init mechanism to match Triangular and Triangle FEM. Add a lot of comment to describe the optimization of this component and try to solve the small difference comprare to TriangleFEM but changing the code slow down its convergence for unknown reason... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2284
https://github.com/sofa-framework/sofa/pull/2284:126,Performance,optimiz,optimization,126,"- Add getter; - Add tests; - Update init mechanism to match Triangular and Triangle FEM. Add a lot of comment to describe the optimization of this component and try to solve the small difference comprare to TriangleFEM but changing the code slow down its convergence for unknown reason... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2284
https://github.com/sofa-framework/sofa/pull/2284:452,Security,Certificate,Certificate,452,"- Add getter; - Add tests; - Update init mechanism to match Triangular and Triangle FEM. Add a lot of comment to describe the optimization of this component and try to solve the small difference comprare to TriangleFEM but changing the code slow down its convergence for unknown reason... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2284
https://github.com/sofa-framework/sofa/pull/2284:563,Security,certificate,certificate-of-origin-dco,563,"- Add getter; - Add tests; - Update init mechanism to match Triangular and Triangle FEM. Add a lot of comment to describe the optimization of this component and try to solve the small difference comprare to TriangleFEM but changing the code slow down its convergence for unknown reason... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2284
https://github.com/sofa-framework/sofa/pull/2284:20,Testability,test,tests,20,"- Add getter; - Add tests; - Update init mechanism to match Triangular and Triangle FEM. Add a lot of comment to describe the optimization of this component and try to solve the small difference comprare to TriangleFEM but changing the code slow down its convergence for unknown reason... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2284
https://github.com/sofa-framework/sofa/pull/2284:828,Testability,test,test,828,"- Add getter; - Add tests; - Update init mechanism to match Triangular and Triangle FEM. Add a lot of comment to describe the optimization of this component and try to solve the small difference comprare to TriangleFEM but changing the code slow down its convergence for unknown reason... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2284
https://github.com/sofa-framework/sofa/pull/2284:877,Testability,test,test,877,"- Add getter; - Add tests; - Update init mechanism to match Triangular and Triangle FEM. Add a lot of comment to describe the optimization of this component and try to solve the small difference comprare to TriangleFEM but changing the code slow down its convergence for unknown reason... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2284
https://github.com/sofa-framework/sofa/pull/2285:1771,Availability,failure,failures,1771,"The Data's hold their actual content within a dedicated container called DataContentValue.; Two versions of this containers exists, on holding the data using a copy-on-write mechanism while an other is using a systematic copy. . Currently the selection is based on the content of DataTypeInfo, I found it more explicit and clear to rely on type_traits to select the proper DataContentValue version. . ```console; Caduceuse, 10 000 iterations:; - master: 24.15 s; - copy on write to true: 24.2 s; - copy on write to false: 23.78 s; - copy on write to is_scalar: 25.0 s; - copy on write to !is_scalar: 23.0 s. collisionMultiple.scn, 1 000 iterations:; - master: 15.9 s; - copy on write to true: 15.9 s; - copy on write to false: 14.7 s; - copy on write to is_scalar: 16.3 s; - copy on write to !is_scalar: 14.5 s; ; beam16x16x76-hexafem-rk4-CPU.scn: 2000 iterations; - master: 1 m 30; - copy on write to true: 1 m 32; - copy on write to false: 1 m 30 ; - copy on write to is_scalar: 1 m 26; - copy on write to !is_scalar: 1 m 18; ; TorusFall: 4000 iterations; - master: 41.5 s; - copy on write to true: 43.9 s; - copy on write to false: 41.2 s ; - copy on write to is_scalar: 43.3 s ; - copy on write to !is_scalar: 42.5 s; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2285
https://github.com/sofa-framework/sofa/pull/2285:1820,Availability,failure,failures,1820,"The Data's hold their actual content within a dedicated container called DataContentValue.; Two versions of this containers exists, on holding the data using a copy-on-write mechanism while an other is using a systematic copy. . Currently the selection is based on the content of DataTypeInfo, I found it more explicit and clear to rely on type_traits to select the proper DataContentValue version. . ```console; Caduceuse, 10 000 iterations:; - master: 24.15 s; - copy on write to true: 24.2 s; - copy on write to false: 23.78 s; - copy on write to is_scalar: 25.0 s; - copy on write to !is_scalar: 23.0 s. collisionMultiple.scn, 1 000 iterations:; - master: 15.9 s; - copy on write to true: 15.9 s; - copy on write to false: 14.7 s; - copy on write to is_scalar: 16.3 s; - copy on write to !is_scalar: 14.5 s; ; beam16x16x76-hexafem-rk4-CPU.scn: 2000 iterations; - master: 1 m 30; - copy on write to true: 1 m 32; - copy on write to false: 1 m 30 ; - copy on write to is_scalar: 1 m 26; - copy on write to !is_scalar: 1 m 18; ; TorusFall: 4000 iterations; - master: 41.5 s; - copy on write to true: 43.9 s; - copy on write to false: 41.2 s ; - copy on write to is_scalar: 43.3 s ; - copy on write to !is_scalar: 42.5 s; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2285
https://github.com/sofa-framework/sofa/pull/2285:1390,Security,Certificate,Certificate,1390,"The Data's hold their actual content within a dedicated container called DataContentValue.; Two versions of this containers exists, on holding the data using a copy-on-write mechanism while an other is using a systematic copy. . Currently the selection is based on the content of DataTypeInfo, I found it more explicit and clear to rely on type_traits to select the proper DataContentValue version. . ```console; Caduceuse, 10 000 iterations:; - master: 24.15 s; - copy on write to true: 24.2 s; - copy on write to false: 23.78 s; - copy on write to is_scalar: 25.0 s; - copy on write to !is_scalar: 23.0 s. collisionMultiple.scn, 1 000 iterations:; - master: 15.9 s; - copy on write to true: 15.9 s; - copy on write to false: 14.7 s; - copy on write to is_scalar: 16.3 s; - copy on write to !is_scalar: 14.5 s; ; beam16x16x76-hexafem-rk4-CPU.scn: 2000 iterations; - master: 1 m 30; - copy on write to true: 1 m 32; - copy on write to false: 1 m 30 ; - copy on write to is_scalar: 1 m 26; - copy on write to !is_scalar: 1 m 18; ; TorusFall: 4000 iterations; - master: 41.5 s; - copy on write to true: 43.9 s; - copy on write to false: 41.2 s ; - copy on write to is_scalar: 43.3 s ; - copy on write to !is_scalar: 42.5 s; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2285
https://github.com/sofa-framework/sofa/pull/2285:1501,Security,certificate,certificate-of-origin-dco,1501,"The Data's hold their actual content within a dedicated container called DataContentValue.; Two versions of this containers exists, on holding the data using a copy-on-write mechanism while an other is using a systematic copy. . Currently the selection is based on the content of DataTypeInfo, I found it more explicit and clear to rely on type_traits to select the proper DataContentValue version. . ```console; Caduceuse, 10 000 iterations:; - master: 24.15 s; - copy on write to true: 24.2 s; - copy on write to false: 23.78 s; - copy on write to is_scalar: 25.0 s; - copy on write to !is_scalar: 23.0 s. collisionMultiple.scn, 1 000 iterations:; - master: 15.9 s; - copy on write to true: 15.9 s; - copy on write to false: 14.7 s; - copy on write to is_scalar: 16.3 s; - copy on write to !is_scalar: 14.5 s; ; beam16x16x76-hexafem-rk4-CPU.scn: 2000 iterations; - master: 1 m 30; - copy on write to true: 1 m 32; - copy on write to false: 1 m 30 ; - copy on write to is_scalar: 1 m 26; - copy on write to !is_scalar: 1 m 18; ; TorusFall: 4000 iterations; - master: 41.5 s; - copy on write to true: 43.9 s; - copy on write to false: 41.2 s ; - copy on write to is_scalar: 43.3 s ; - copy on write to !is_scalar: 42.5 s; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2285
https://github.com/sofa-framework/sofa/pull/2285:1766,Testability,test,test,1766,"The Data's hold their actual content within a dedicated container called DataContentValue.; Two versions of this containers exists, on holding the data using a copy-on-write mechanism while an other is using a systematic copy. . Currently the selection is based on the content of DataTypeInfo, I found it more explicit and clear to rely on type_traits to select the proper DataContentValue version. . ```console; Caduceuse, 10 000 iterations:; - master: 24.15 s; - copy on write to true: 24.2 s; - copy on write to false: 23.78 s; - copy on write to is_scalar: 25.0 s; - copy on write to !is_scalar: 23.0 s. collisionMultiple.scn, 1 000 iterations:; - master: 15.9 s; - copy on write to true: 15.9 s; - copy on write to false: 14.7 s; - copy on write to is_scalar: 16.3 s; - copy on write to !is_scalar: 14.5 s; ; beam16x16x76-hexafem-rk4-CPU.scn: 2000 iterations; - master: 1 m 30; - copy on write to true: 1 m 32; - copy on write to false: 1 m 30 ; - copy on write to is_scalar: 1 m 26; - copy on write to !is_scalar: 1 m 18; ; TorusFall: 4000 iterations; - master: 41.5 s; - copy on write to true: 43.9 s; - copy on write to false: 41.2 s ; - copy on write to is_scalar: 43.3 s ; - copy on write to !is_scalar: 42.5 s; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2285
https://github.com/sofa-framework/sofa/pull/2285:1815,Testability,test,test,1815,"The Data's hold their actual content within a dedicated container called DataContentValue.; Two versions of this containers exists, on holding the data using a copy-on-write mechanism while an other is using a systematic copy. . Currently the selection is based on the content of DataTypeInfo, I found it more explicit and clear to rely on type_traits to select the proper DataContentValue version. . ```console; Caduceuse, 10 000 iterations:; - master: 24.15 s; - copy on write to true: 24.2 s; - copy on write to false: 23.78 s; - copy on write to is_scalar: 25.0 s; - copy on write to !is_scalar: 23.0 s. collisionMultiple.scn, 1 000 iterations:; - master: 15.9 s; - copy on write to true: 15.9 s; - copy on write to false: 14.7 s; - copy on write to is_scalar: 16.3 s; - copy on write to !is_scalar: 14.5 s; ; beam16x16x76-hexafem-rk4-CPU.scn: 2000 iterations; - master: 1 m 30; - copy on write to true: 1 m 32; - copy on write to false: 1 m 30 ; - copy on write to is_scalar: 1 m 26; - copy on write to !is_scalar: 1 m 18; ; TorusFall: 4000 iterations; - master: 41.5 s; - copy on write to true: 43.9 s; - copy on write to false: 41.2 s ; - copy on write to is_scalar: 43.3 s ; - copy on write to !is_scalar: 42.5 s; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2285
https://github.com/sofa-framework/sofa/pull/2285:323,Usability,clear,clear,323,"The Data's hold their actual content within a dedicated container called DataContentValue.; Two versions of this containers exists, on holding the data using a copy-on-write mechanism while an other is using a systematic copy. . Currently the selection is based on the content of DataTypeInfo, I found it more explicit and clear to rely on type_traits to select the proper DataContentValue version. . ```console; Caduceuse, 10 000 iterations:; - master: 24.15 s; - copy on write to true: 24.2 s; - copy on write to false: 23.78 s; - copy on write to is_scalar: 25.0 s; - copy on write to !is_scalar: 23.0 s. collisionMultiple.scn, 1 000 iterations:; - master: 15.9 s; - copy on write to true: 15.9 s; - copy on write to false: 14.7 s; - copy on write to is_scalar: 16.3 s; - copy on write to !is_scalar: 14.5 s; ; beam16x16x76-hexafem-rk4-CPU.scn: 2000 iterations; - master: 1 m 30; - copy on write to true: 1 m 32; - copy on write to false: 1 m 30 ; - copy on write to is_scalar: 1 m 26; - copy on write to !is_scalar: 1 m 18; ; TorusFall: 4000 iterations; - master: 41.5 s; - copy on write to true: 43.9 s; - copy on write to false: 41.2 s ; - copy on write to is_scalar: 43.3 s ; - copy on write to !is_scalar: 42.5 s; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2285
https://github.com/sofa-framework/sofa/pull/2286:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2286
https://github.com/sofa-framework/sofa/pull/2286:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2286
https://github.com/sofa-framework/sofa/pull/2286:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2286
https://github.com/sofa-framework/sofa/pull/2286:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2286
https://github.com/sofa-framework/sofa/pull/2286:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2286
https://github.com/sofa-framework/sofa/pull/2286:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2286
https://github.com/sofa-framework/sofa/pull/2287:1606,Availability,failure,failures,1606,"Also clean and change code structure to reduce the number of access to element from index. ; Depends on PR #2275 and #2283. Average timing on a set of 6 executions of 10 successive runs of 1000 steps on a grid of 40x40 :. Before PR #2273 ; ```; TriangleFEMForceField:; timeMean: 1.83344; timeMin : 1.78238; timeMax : 1.89879. TriangularFEMForceField:; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. ### **Edit: new performances after several optimisations**; ```; TriangleFEMForceField ; timeMean: 1.43496; timeMin: 1.428055; timeMax: 1.45082. TriangularFEMForceField:; timeMean: 1.459322; timeMin: 1.45386; timeMax: 1.468145; ```. Simulation of 20sec for: ; - Green: TriangleFEMForceField; - Red: TriangularFEMForceField; - Blue: TriangularFEMForceFieldOptim. Before Before PR #2273 ; ![TriangleFEM_old](https://user-images.githubusercontent.com/21199245/128017042-dd476945-5248-457c-9739-108499eb3a0e.gif); After this PR; ![TriangleFEM_new](https://user-images.githubusercontent.com/21199245/128015719-4c90e7d7-4ee4-4525-ad5e-2a2c9d1bfa2f.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2287
https://github.com/sofa-framework/sofa/pull/2287:1655,Availability,failure,failures,1655,"Also clean and change code structure to reduce the number of access to element from index. ; Depends on PR #2275 and #2283. Average timing on a set of 6 executions of 10 successive runs of 1000 steps on a grid of 40x40 :. Before PR #2273 ; ```; TriangleFEMForceField:; timeMean: 1.83344; timeMin : 1.78238; timeMax : 1.89879. TriangularFEMForceField:; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. ### **Edit: new performances after several optimisations**; ```; TriangleFEMForceField ; timeMean: 1.43496; timeMin: 1.428055; timeMax: 1.45082. TriangularFEMForceField:; timeMean: 1.459322; timeMin: 1.45386; timeMax: 1.468145; ```. Simulation of 20sec for: ; - Green: TriangleFEMForceField; - Red: TriangularFEMForceField; - Blue: TriangularFEMForceFieldOptim. Before Before PR #2273 ; ![TriangleFEM_old](https://user-images.githubusercontent.com/21199245/128017042-dd476945-5248-457c-9739-108499eb3a0e.gif); After this PR; ![TriangleFEM_new](https://user-images.githubusercontent.com/21199245/128015719-4c90e7d7-4ee4-4525-ad5e-2a2c9d1bfa2f.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2287
https://github.com/sofa-framework/sofa/pull/2287:40,Energy Efficiency,reduce,reduce,40,"Also clean and change code structure to reduce the number of access to element from index. ; Depends on PR #2275 and #2283. Average timing on a set of 6 executions of 10 successive runs of 1000 steps on a grid of 40x40 :. Before PR #2273 ; ```; TriangleFEMForceField:; timeMean: 1.83344; timeMin : 1.78238; timeMax : 1.89879. TriangularFEMForceField:; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. ### **Edit: new performances after several optimisations**; ```; TriangleFEMForceField ; timeMean: 1.43496; timeMin: 1.428055; timeMax: 1.45082. TriangularFEMForceField:; timeMean: 1.459322; timeMin: 1.45386; timeMax: 1.468145; ```. Simulation of 20sec for: ; - Green: TriangleFEMForceField; - Red: TriangularFEMForceField; - Blue: TriangularFEMForceFieldOptim. Before Before PR #2273 ; ![TriangleFEM_old](https://user-images.githubusercontent.com/21199245/128017042-dd476945-5248-457c-9739-108499eb3a0e.gif); After this PR; ![TriangleFEM_new](https://user-images.githubusercontent.com/21199245/128015719-4c90e7d7-4ee4-4525-ad5e-2a2c9d1bfa2f.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2287
https://github.com/sofa-framework/sofa/pull/2287:676,Energy Efficiency,Green,Green,676,"Also clean and change code structure to reduce the number of access to element from index. ; Depends on PR #2275 and #2283. Average timing on a set of 6 executions of 10 successive runs of 1000 steps on a grid of 40x40 :. Before PR #2273 ; ```; TriangleFEMForceField:; timeMean: 1.83344; timeMin : 1.78238; timeMax : 1.89879. TriangularFEMForceField:; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. ### **Edit: new performances after several optimisations**; ```; TriangleFEMForceField ; timeMean: 1.43496; timeMin: 1.428055; timeMax: 1.45082. TriangularFEMForceField:; timeMean: 1.459322; timeMin: 1.45386; timeMax: 1.468145; ```. Simulation of 20sec for: ; - Green: TriangleFEMForceField; - Red: TriangularFEMForceField; - Blue: TriangularFEMForceFieldOptim. Before Before PR #2273 ; ![TriangleFEM_old](https://user-images.githubusercontent.com/21199245/128017042-dd476945-5248-457c-9739-108499eb3a0e.gif); After this PR; ![TriangleFEM_new](https://user-images.githubusercontent.com/21199245/128015719-4c90e7d7-4ee4-4525-ad5e-2a2c9d1bfa2f.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2287
https://github.com/sofa-framework/sofa/pull/2287:93,Integrability,Depend,Depends,93,"Also clean and change code structure to reduce the number of access to element from index. ; Depends on PR #2275 and #2283. Average timing on a set of 6 executions of 10 successive runs of 1000 steps on a grid of 40x40 :. Before PR #2273 ; ```; TriangleFEMForceField:; timeMean: 1.83344; timeMin : 1.78238; timeMax : 1.89879. TriangularFEMForceField:; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. ### **Edit: new performances after several optimisations**; ```; TriangleFEMForceField ; timeMean: 1.43496; timeMin: 1.428055; timeMax: 1.45082. TriangularFEMForceField:; timeMean: 1.459322; timeMin: 1.45386; timeMax: 1.468145; ```. Simulation of 20sec for: ; - Green: TriangleFEMForceField; - Red: TriangularFEMForceField; - Blue: TriangularFEMForceFieldOptim. Before Before PR #2273 ; ![TriangleFEM_old](https://user-images.githubusercontent.com/21199245/128017042-dd476945-5248-457c-9739-108499eb3a0e.gif); After this PR; ![TriangleFEM_new](https://user-images.githubusercontent.com/21199245/128015719-4c90e7d7-4ee4-4525-ad5e-2a2c9d1bfa2f.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2287
https://github.com/sofa-framework/sofa/pull/2287:430,Performance,perform,performances,430,"Also clean and change code structure to reduce the number of access to element from index. ; Depends on PR #2275 and #2283. Average timing on a set of 6 executions of 10 successive runs of 1000 steps on a grid of 40x40 :. Before PR #2273 ; ```; TriangleFEMForceField:; timeMean: 1.83344; timeMin : 1.78238; timeMax : 1.89879. TriangularFEMForceField:; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. ### **Edit: new performances after several optimisations**; ```; TriangleFEMForceField ; timeMean: 1.43496; timeMin: 1.428055; timeMax: 1.45082. TriangularFEMForceField:; timeMean: 1.459322; timeMin: 1.45386; timeMax: 1.468145; ```. Simulation of 20sec for: ; - Green: TriangleFEMForceField; - Red: TriangularFEMForceField; - Blue: TriangularFEMForceFieldOptim. Before Before PR #2273 ; ![TriangleFEM_old](https://user-images.githubusercontent.com/21199245/128017042-dd476945-5248-457c-9739-108499eb3a0e.gif); After this PR; ![TriangleFEM_new](https://user-images.githubusercontent.com/21199245/128015719-4c90e7d7-4ee4-4525-ad5e-2a2c9d1bfa2f.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2287
https://github.com/sofa-framework/sofa/pull/2287:61,Security,access,access,61,"Also clean and change code structure to reduce the number of access to element from index. ; Depends on PR #2275 and #2283. Average timing on a set of 6 executions of 10 successive runs of 1000 steps on a grid of 40x40 :. Before PR #2273 ; ```; TriangleFEMForceField:; timeMean: 1.83344; timeMin : 1.78238; timeMax : 1.89879. TriangularFEMForceField:; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. ### **Edit: new performances after several optimisations**; ```; TriangleFEMForceField ; timeMean: 1.43496; timeMin: 1.428055; timeMax: 1.45082. TriangularFEMForceField:; timeMean: 1.459322; timeMin: 1.45386; timeMax: 1.468145; ```. Simulation of 20sec for: ; - Green: TriangleFEMForceField; - Red: TriangularFEMForceField; - Blue: TriangularFEMForceFieldOptim. Before Before PR #2273 ; ![TriangleFEM_old](https://user-images.githubusercontent.com/21199245/128017042-dd476945-5248-457c-9739-108499eb3a0e.gif); After this PR; ![TriangleFEM_new](https://user-images.githubusercontent.com/21199245/128015719-4c90e7d7-4ee4-4525-ad5e-2a2c9d1bfa2f.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2287
https://github.com/sofa-framework/sofa/pull/2287:1225,Security,Certificate,Certificate,1225,"Also clean and change code structure to reduce the number of access to element from index. ; Depends on PR #2275 and #2283. Average timing on a set of 6 executions of 10 successive runs of 1000 steps on a grid of 40x40 :. Before PR #2273 ; ```; TriangleFEMForceField:; timeMean: 1.83344; timeMin : 1.78238; timeMax : 1.89879. TriangularFEMForceField:; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. ### **Edit: new performances after several optimisations**; ```; TriangleFEMForceField ; timeMean: 1.43496; timeMin: 1.428055; timeMax: 1.45082. TriangularFEMForceField:; timeMean: 1.459322; timeMin: 1.45386; timeMax: 1.468145; ```. Simulation of 20sec for: ; - Green: TriangleFEMForceField; - Red: TriangularFEMForceField; - Blue: TriangularFEMForceFieldOptim. Before Before PR #2273 ; ![TriangleFEM_old](https://user-images.githubusercontent.com/21199245/128017042-dd476945-5248-457c-9739-108499eb3a0e.gif); After this PR; ![TriangleFEM_new](https://user-images.githubusercontent.com/21199245/128015719-4c90e7d7-4ee4-4525-ad5e-2a2c9d1bfa2f.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2287
https://github.com/sofa-framework/sofa/pull/2287:1336,Security,certificate,certificate-of-origin-dco,1336,"Also clean and change code structure to reduce the number of access to element from index. ; Depends on PR #2275 and #2283. Average timing on a set of 6 executions of 10 successive runs of 1000 steps on a grid of 40x40 :. Before PR #2273 ; ```; TriangleFEMForceField:; timeMean: 1.83344; timeMin : 1.78238; timeMax : 1.89879. TriangularFEMForceField:; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. ### **Edit: new performances after several optimisations**; ```; TriangleFEMForceField ; timeMean: 1.43496; timeMin: 1.428055; timeMax: 1.45082. TriangularFEMForceField:; timeMean: 1.459322; timeMin: 1.45386; timeMax: 1.468145; ```. Simulation of 20sec for: ; - Green: TriangleFEMForceField; - Red: TriangularFEMForceField; - Blue: TriangularFEMForceFieldOptim. Before Before PR #2273 ; ![TriangleFEM_old](https://user-images.githubusercontent.com/21199245/128017042-dd476945-5248-457c-9739-108499eb3a0e.gif); After this PR; ![TriangleFEM_new](https://user-images.githubusercontent.com/21199245/128015719-4c90e7d7-4ee4-4525-ad5e-2a2c9d1bfa2f.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2287
https://github.com/sofa-framework/sofa/pull/2287:1601,Testability,test,test,1601,"Also clean and change code structure to reduce the number of access to element from index. ; Depends on PR #2275 and #2283. Average timing on a set of 6 executions of 10 successive runs of 1000 steps on a grid of 40x40 :. Before PR #2273 ; ```; TriangleFEMForceField:; timeMean: 1.83344; timeMin : 1.78238; timeMax : 1.89879. TriangularFEMForceField:; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. ### **Edit: new performances after several optimisations**; ```; TriangleFEMForceField ; timeMean: 1.43496; timeMin: 1.428055; timeMax: 1.45082. TriangularFEMForceField:; timeMean: 1.459322; timeMin: 1.45386; timeMax: 1.468145; ```. Simulation of 20sec for: ; - Green: TriangleFEMForceField; - Red: TriangularFEMForceField; - Blue: TriangularFEMForceFieldOptim. Before Before PR #2273 ; ![TriangleFEM_old](https://user-images.githubusercontent.com/21199245/128017042-dd476945-5248-457c-9739-108499eb3a0e.gif); After this PR; ![TriangleFEM_new](https://user-images.githubusercontent.com/21199245/128015719-4c90e7d7-4ee4-4525-ad5e-2a2c9d1bfa2f.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2287
https://github.com/sofa-framework/sofa/pull/2287:1650,Testability,test,test,1650,"Also clean and change code structure to reduce the number of access to element from index. ; Depends on PR #2275 and #2283. Average timing on a set of 6 executions of 10 successive runs of 1000 steps on a grid of 40x40 :. Before PR #2273 ; ```; TriangleFEMForceField:; timeMean: 1.83344; timeMin : 1.78238; timeMax : 1.89879. TriangularFEMForceField:; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. ### **Edit: new performances after several optimisations**; ```; TriangleFEMForceField ; timeMean: 1.43496; timeMin: 1.428055; timeMax: 1.45082. TriangularFEMForceField:; timeMean: 1.459322; timeMin: 1.45386; timeMax: 1.468145; ```. Simulation of 20sec for: ; - Green: TriangleFEMForceField; - Red: TriangularFEMForceField; - Blue: TriangularFEMForceFieldOptim. Before Before PR #2273 ; ![TriangleFEM_old](https://user-images.githubusercontent.com/21199245/128017042-dd476945-5248-457c-9739-108499eb3a0e.gif); After this PR; ![TriangleFEM_new](https://user-images.githubusercontent.com/21199245/128015719-4c90e7d7-4ee4-4525-ad5e-2a2c9d1bfa2f.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2287
https://github.com/sofa-framework/sofa/pull/2288:1699,Availability,failure,failures,1699,"Given a link to the topology, link to the corresponding mechanicalObject and a boundingBox. The component will remove all elements (topology and dofs) going outside from this boundingbox. **-> Any better name suggestion is welcomed.; -> if this component is not useful in SOFA, abort the PR. otherwise I will add more comments in the header.**. Example of use:; ```; <MechanicalObject src=""@../grid_1"" name=""Volume"" />; <TetrahedronSetTopologyContainer name=""Tetra_con"" src=""@../Beam_generator_01/Container""/>; <TetrahedronSetTopologyModifier name=""Modifier"" />; <TetrahedronSetGeometryAlgorithms name=""GeomAlgo"" template=""Vec3d"" drawTetrahedra=""1"" drawScaleTetrahedra=""0.8""/>; ; <TopologyBoundingTrasher box=""-40 -40 -50 50 50 50"" topology=""@Tetra_con"" drawBox=""1"" position=""@Volume.position""/>; ```. Video of the result of a tissue falling in 3D:; **Right now in SOFA:**; ![ezgif com-gif-maker(1)](https://user-images.githubusercontent.com/21199245/129875985-79e1c469-46ae-459a-a6af-306be7effdf2.gif). **Using the trasher!**; ![ezgif com-gif-maker](https://user-images.githubusercontent.com/21199245/129875812-e2e6af18-bde2-4d76-89ac-3d4369bdc184.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2288
https://github.com/sofa-framework/sofa/pull/2288:1748,Availability,failure,failures,1748,"Given a link to the topology, link to the corresponding mechanicalObject and a boundingBox. The component will remove all elements (topology and dofs) going outside from this boundingbox. **-> Any better name suggestion is welcomed.; -> if this component is not useful in SOFA, abort the PR. otherwise I will add more comments in the header.**. Example of use:; ```; <MechanicalObject src=""@../grid_1"" name=""Volume"" />; <TetrahedronSetTopologyContainer name=""Tetra_con"" src=""@../Beam_generator_01/Container""/>; <TetrahedronSetTopologyModifier name=""Modifier"" />; <TetrahedronSetGeometryAlgorithms name=""GeomAlgo"" template=""Vec3d"" drawTetrahedra=""1"" drawScaleTetrahedra=""0.8""/>; ; <TopologyBoundingTrasher box=""-40 -40 -50 50 50 50"" topology=""@Tetra_con"" drawBox=""1"" position=""@Volume.position""/>; ```. Video of the result of a tissue falling in 3D:; **Right now in SOFA:**; ![ezgif com-gif-maker(1)](https://user-images.githubusercontent.com/21199245/129875985-79e1c469-46ae-459a-a6af-306be7effdf2.gif). **Using the trasher!**; ![ezgif com-gif-maker](https://user-images.githubusercontent.com/21199245/129875812-e2e6af18-bde2-4d76-89ac-3d4369bdc184.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2288
https://github.com/sofa-framework/sofa/pull/2288:278,Safety,abort,abort,278,"Given a link to the topology, link to the corresponding mechanicalObject and a boundingBox. The component will remove all elements (topology and dofs) going outside from this boundingbox. **-> Any better name suggestion is welcomed.; -> if this component is not useful in SOFA, abort the PR. otherwise I will add more comments in the header.**. Example of use:; ```; <MechanicalObject src=""@../grid_1"" name=""Volume"" />; <TetrahedronSetTopologyContainer name=""Tetra_con"" src=""@../Beam_generator_01/Container""/>; <TetrahedronSetTopologyModifier name=""Modifier"" />; <TetrahedronSetGeometryAlgorithms name=""GeomAlgo"" template=""Vec3d"" drawTetrahedra=""1"" drawScaleTetrahedra=""0.8""/>; ; <TopologyBoundingTrasher box=""-40 -40 -50 50 50 50"" topology=""@Tetra_con"" drawBox=""1"" position=""@Volume.position""/>; ```. Video of the result of a tissue falling in 3D:; **Right now in SOFA:**; ![ezgif com-gif-maker(1)](https://user-images.githubusercontent.com/21199245/129875985-79e1c469-46ae-459a-a6af-306be7effdf2.gif). **Using the trasher!**; ![ezgif com-gif-maker](https://user-images.githubusercontent.com/21199245/129875812-e2e6af18-bde2-4d76-89ac-3d4369bdc184.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2288
https://github.com/sofa-framework/sofa/pull/2288:1318,Security,Certificate,Certificate,1318,"Given a link to the topology, link to the corresponding mechanicalObject and a boundingBox. The component will remove all elements (topology and dofs) going outside from this boundingbox. **-> Any better name suggestion is welcomed.; -> if this component is not useful in SOFA, abort the PR. otherwise I will add more comments in the header.**. Example of use:; ```; <MechanicalObject src=""@../grid_1"" name=""Volume"" />; <TetrahedronSetTopologyContainer name=""Tetra_con"" src=""@../Beam_generator_01/Container""/>; <TetrahedronSetTopologyModifier name=""Modifier"" />; <TetrahedronSetGeometryAlgorithms name=""GeomAlgo"" template=""Vec3d"" drawTetrahedra=""1"" drawScaleTetrahedra=""0.8""/>; ; <TopologyBoundingTrasher box=""-40 -40 -50 50 50 50"" topology=""@Tetra_con"" drawBox=""1"" position=""@Volume.position""/>; ```. Video of the result of a tissue falling in 3D:; **Right now in SOFA:**; ![ezgif com-gif-maker(1)](https://user-images.githubusercontent.com/21199245/129875985-79e1c469-46ae-459a-a6af-306be7effdf2.gif). **Using the trasher!**; ![ezgif com-gif-maker](https://user-images.githubusercontent.com/21199245/129875812-e2e6af18-bde2-4d76-89ac-3d4369bdc184.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2288
https://github.com/sofa-framework/sofa/pull/2288:1429,Security,certificate,certificate-of-origin-dco,1429,"Given a link to the topology, link to the corresponding mechanicalObject and a boundingBox. The component will remove all elements (topology and dofs) going outside from this boundingbox. **-> Any better name suggestion is welcomed.; -> if this component is not useful in SOFA, abort the PR. otherwise I will add more comments in the header.**. Example of use:; ```; <MechanicalObject src=""@../grid_1"" name=""Volume"" />; <TetrahedronSetTopologyContainer name=""Tetra_con"" src=""@../Beam_generator_01/Container""/>; <TetrahedronSetTopologyModifier name=""Modifier"" />; <TetrahedronSetGeometryAlgorithms name=""GeomAlgo"" template=""Vec3d"" drawTetrahedra=""1"" drawScaleTetrahedra=""0.8""/>; ; <TopologyBoundingTrasher box=""-40 -40 -50 50 50 50"" topology=""@Tetra_con"" drawBox=""1"" position=""@Volume.position""/>; ```. Video of the result of a tissue falling in 3D:; **Right now in SOFA:**; ![ezgif com-gif-maker(1)](https://user-images.githubusercontent.com/21199245/129875985-79e1c469-46ae-459a-a6af-306be7effdf2.gif). **Using the trasher!**; ![ezgif com-gif-maker](https://user-images.githubusercontent.com/21199245/129875812-e2e6af18-bde2-4d76-89ac-3d4369bdc184.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2288
https://github.com/sofa-framework/sofa/pull/2288:1694,Testability,test,test,1694,"Given a link to the topology, link to the corresponding mechanicalObject and a boundingBox. The component will remove all elements (topology and dofs) going outside from this boundingbox. **-> Any better name suggestion is welcomed.; -> if this component is not useful in SOFA, abort the PR. otherwise I will add more comments in the header.**. Example of use:; ```; <MechanicalObject src=""@../grid_1"" name=""Volume"" />; <TetrahedronSetTopologyContainer name=""Tetra_con"" src=""@../Beam_generator_01/Container""/>; <TetrahedronSetTopologyModifier name=""Modifier"" />; <TetrahedronSetGeometryAlgorithms name=""GeomAlgo"" template=""Vec3d"" drawTetrahedra=""1"" drawScaleTetrahedra=""0.8""/>; ; <TopologyBoundingTrasher box=""-40 -40 -50 50 50 50"" topology=""@Tetra_con"" drawBox=""1"" position=""@Volume.position""/>; ```. Video of the result of a tissue falling in 3D:; **Right now in SOFA:**; ![ezgif com-gif-maker(1)](https://user-images.githubusercontent.com/21199245/129875985-79e1c469-46ae-459a-a6af-306be7effdf2.gif). **Using the trasher!**; ![ezgif com-gif-maker](https://user-images.githubusercontent.com/21199245/129875812-e2e6af18-bde2-4d76-89ac-3d4369bdc184.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2288
https://github.com/sofa-framework/sofa/pull/2288:1743,Testability,test,test,1743,"Given a link to the topology, link to the corresponding mechanicalObject and a boundingBox. The component will remove all elements (topology and dofs) going outside from this boundingbox. **-> Any better name suggestion is welcomed.; -> if this component is not useful in SOFA, abort the PR. otherwise I will add more comments in the header.**. Example of use:; ```; <MechanicalObject src=""@../grid_1"" name=""Volume"" />; <TetrahedronSetTopologyContainer name=""Tetra_con"" src=""@../Beam_generator_01/Container""/>; <TetrahedronSetTopologyModifier name=""Modifier"" />; <TetrahedronSetGeometryAlgorithms name=""GeomAlgo"" template=""Vec3d"" drawTetrahedra=""1"" drawScaleTetrahedra=""0.8""/>; ; <TopologyBoundingTrasher box=""-40 -40 -50 50 50 50"" topology=""@Tetra_con"" drawBox=""1"" position=""@Volume.position""/>; ```. Video of the result of a tissue falling in 3D:; **Right now in SOFA:**; ![ezgif com-gif-maker(1)](https://user-images.githubusercontent.com/21199245/129875985-79e1c469-46ae-459a-a6af-306be7effdf2.gif). **Using the trasher!**; ![ezgif com-gif-maker](https://user-images.githubusercontent.com/21199245/129875812-e2e6af18-bde2-4d76-89ac-3d4369bdc184.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2288
https://github.com/sofa-framework/sofa/pull/2289:745,Availability,failure,failures,745,"All is in the title, scene originally from @virginiemarec; This new scene shows how to simply in XML define an heterogeneous object with different regions.; ![](https://i.ibb.co/WzqdPp8/snapshot.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2289
https://github.com/sofa-framework/sofa/pull/2289:794,Availability,failure,failures,794,"All is in the title, scene originally from @virginiemarec; This new scene shows how to simply in XML define an heterogeneous object with different regions.; ![](https://i.ibb.co/WzqdPp8/snapshot.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2289
https://github.com/sofa-framework/sofa/pull/2289:364,Security,Certificate,Certificate,364,"All is in the title, scene originally from @virginiemarec; This new scene shows how to simply in XML define an heterogeneous object with different regions.; ![](https://i.ibb.co/WzqdPp8/snapshot.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2289
https://github.com/sofa-framework/sofa/pull/2289:475,Security,certificate,certificate-of-origin-dco,475,"All is in the title, scene originally from @virginiemarec; This new scene shows how to simply in XML define an heterogeneous object with different regions.; ![](https://i.ibb.co/WzqdPp8/snapshot.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2289
https://github.com/sofa-framework/sofa/pull/2289:740,Testability,test,test,740,"All is in the title, scene originally from @virginiemarec; This new scene shows how to simply in XML define an heterogeneous object with different regions.; ![](https://i.ibb.co/WzqdPp8/snapshot.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2289
https://github.com/sofa-framework/sofa/pull/2289:789,Testability,test,test,789,"All is in the title, scene originally from @virginiemarec; This new scene shows how to simply in XML define an heterogeneous object with different regions.; ![](https://i.ibb.co/WzqdPp8/snapshot.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2289
https://github.com/sofa-framework/sofa/pull/2289:87,Usability,simpl,simply,87,"All is in the title, scene originally from @virginiemarec; This new scene shows how to simply in XML define an heterogeneous object with different regions.; ![](https://i.ibb.co/WzqdPp8/snapshot.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2289
https://github.com/sofa-framework/sofa/pull/2290:746,Availability,failure,failures,746,"This PR disable tests that identify known issues in SOFA.; However, failing tests prevent from an efficient review of the PR. We disable them for now, but GitHub issues should be created for each test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2290
https://github.com/sofa-framework/sofa/pull/2290:795,Availability,failure,failures,795,"This PR disable tests that identify known issues in SOFA.; However, failing tests prevent from an efficient review of the PR. We disable them for now, but GitHub issues should be created for each test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2290
https://github.com/sofa-framework/sofa/pull/2290:98,Energy Efficiency,efficient,efficient,98,"This PR disable tests that identify known issues in SOFA.; However, failing tests prevent from an efficient review of the PR. We disable them for now, but GitHub issues should be created for each test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2290
https://github.com/sofa-framework/sofa/pull/2290:365,Security,Certificate,Certificate,365,"This PR disable tests that identify known issues in SOFA.; However, failing tests prevent from an efficient review of the PR. We disable them for now, but GitHub issues should be created for each test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2290
https://github.com/sofa-framework/sofa/pull/2290:476,Security,certificate,certificate-of-origin-dco,476,"This PR disable tests that identify known issues in SOFA.; However, failing tests prevent from an efficient review of the PR. We disable them for now, but GitHub issues should be created for each test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2290
https://github.com/sofa-framework/sofa/pull/2290:16,Testability,test,tests,16,"This PR disable tests that identify known issues in SOFA.; However, failing tests prevent from an efficient review of the PR. We disable them for now, but GitHub issues should be created for each test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2290
https://github.com/sofa-framework/sofa/pull/2290:76,Testability,test,tests,76,"This PR disable tests that identify known issues in SOFA.; However, failing tests prevent from an efficient review of the PR. We disable them for now, but GitHub issues should be created for each test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2290
https://github.com/sofa-framework/sofa/pull/2290:196,Testability,test,test,196,"This PR disable tests that identify known issues in SOFA.; However, failing tests prevent from an efficient review of the PR. We disable them for now, but GitHub issues should be created for each test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2290
https://github.com/sofa-framework/sofa/pull/2290:741,Testability,test,test,741,"This PR disable tests that identify known issues in SOFA.; However, failing tests prevent from an efficient review of the PR. We disable them for now, but GitHub issues should be created for each test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2290
https://github.com/sofa-framework/sofa/pull/2290:790,Testability,test,test,790,"This PR disable tests that identify known issues in SOFA.; However, failing tests prevent from an efficient review of the PR. We disable them for now, but GitHub issues should be created for each test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2290
https://github.com/sofa-framework/sofa/pull/2291:782,Availability,failure,failures,782,"Because it does not make sense to me to use tetra algos in 1D for example 🤥. Maybe should we remove the 2D template for 3D primitives as well ?; I was considering tetra/hexa could be projected in 2D but it seems a bit far streched to me. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2291
https://github.com/sofa-framework/sofa/pull/2291:831,Availability,failure,failures,831,"Because it does not make sense to me to use tetra algos in 1D for example 🤥. Maybe should we remove the 2D template for 3D primitives as well ?; I was considering tetra/hexa could be projected in 2D but it seems a bit far streched to me. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2291
https://github.com/sofa-framework/sofa/pull/2291:401,Security,Certificate,Certificate,401,"Because it does not make sense to me to use tetra algos in 1D for example 🤥. Maybe should we remove the 2D template for 3D primitives as well ?; I was considering tetra/hexa could be projected in 2D but it seems a bit far streched to me. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2291
https://github.com/sofa-framework/sofa/pull/2291:512,Security,certificate,certificate-of-origin-dco,512,"Because it does not make sense to me to use tetra algos in 1D for example 🤥. Maybe should we remove the 2D template for 3D primitives as well ?; I was considering tetra/hexa could be projected in 2D but it seems a bit far streched to me. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2291
https://github.com/sofa-framework/sofa/pull/2291:777,Testability,test,test,777,"Because it does not make sense to me to use tetra algos in 1D for example 🤥. Maybe should we remove the 2D template for 3D primitives as well ?; I was considering tetra/hexa could be projected in 2D but it seems a bit far streched to me. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2291
https://github.com/sofa-framework/sofa/pull/2291:826,Testability,test,test,826,"Because it does not make sense to me to use tetra algos in 1D for example 🤥. Maybe should we remove the 2D template for 3D primitives as well ?; I was considering tetra/hexa could be projected in 2D but it seems a bit far streched to me. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2291
https://github.com/sofa-framework/sofa/pull/2292:1386,Availability,failure,failures,1386,"sout/serr (and sendl) were wrappers for std::cout & std::cerr to get access to the streams for the GUIs initially. After the introduction of the Messaging system, it was deemed deprecated (there is even a compat layer, redirecting sout/serr to msg_info(), msg_warning(), etc), but never enforced and never publicized actually. This PR officially deprecates it by still being able to use it but will warn at compilation time if anybody uses the stream operators with serr/sendl. (you can see that on the CI log for the soon-to-be-dropped plugin like Flexible or Compliant). This PR also (should) remove all those serr/sout/sendl in SOFA itself and the supported plugins. EDIT: Adding ""breaking"" label because serr was throwing ""WARNING"" before (yeah makes sense), so it cannot be replaced 1-on-1 with msg_error( could be msg_warning as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2292
https://github.com/sofa-framework/sofa/pull/2292:1435,Availability,failure,failures,1435,"sout/serr (and sendl) were wrappers for std::cout & std::cerr to get access to the streams for the GUIs initially. After the introduction of the Messaging system, it was deemed deprecated (there is even a compat layer, redirecting sout/serr to msg_info(), msg_warning(), etc), but never enforced and never publicized actually. This PR officially deprecates it by still being able to use it but will warn at compilation time if anybody uses the stream operators with serr/sendl. (you can see that on the CI log for the soon-to-be-dropped plugin like Flexible or Compliant). This PR also (should) remove all those serr/sout/sendl in SOFA itself and the supported plugins. EDIT: Adding ""breaking"" label because serr was throwing ""WARNING"" before (yeah makes sense), so it cannot be replaced 1-on-1 with msg_error( could be msg_warning as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2292
https://github.com/sofa-framework/sofa/pull/2292:27,Integrability,wrap,wrappers,27,"sout/serr (and sendl) were wrappers for std::cout & std::cerr to get access to the streams for the GUIs initially. After the introduction of the Messaging system, it was deemed deprecated (there is even a compat layer, redirecting sout/serr to msg_info(), msg_warning(), etc), but never enforced and never publicized actually. This PR officially deprecates it by still being able to use it but will warn at compilation time if anybody uses the stream operators with serr/sendl. (you can see that on the CI log for the soon-to-be-dropped plugin like Flexible or Compliant). This PR also (should) remove all those serr/sout/sendl in SOFA itself and the supported plugins. EDIT: Adding ""breaking"" label because serr was throwing ""WARNING"" before (yeah makes sense), so it cannot be replaced 1-on-1 with msg_error( could be msg_warning as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2292
https://github.com/sofa-framework/sofa/pull/2292:537,Modifiability,plugin,plugin,537,"sout/serr (and sendl) were wrappers for std::cout & std::cerr to get access to the streams for the GUIs initially. After the introduction of the Messaging system, it was deemed deprecated (there is even a compat layer, redirecting sout/serr to msg_info(), msg_warning(), etc), but never enforced and never publicized actually. This PR officially deprecates it by still being able to use it but will warn at compilation time if anybody uses the stream operators with serr/sendl. (you can see that on the CI log for the soon-to-be-dropped plugin like Flexible or Compliant). This PR also (should) remove all those serr/sout/sendl in SOFA itself and the supported plugins. EDIT: Adding ""breaking"" label because serr was throwing ""WARNING"" before (yeah makes sense), so it cannot be replaced 1-on-1 with msg_error( could be msg_warning as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2292
https://github.com/sofa-framework/sofa/pull/2292:549,Modifiability,Flexible,Flexible,549,"sout/serr (and sendl) were wrappers for std::cout & std::cerr to get access to the streams for the GUIs initially. After the introduction of the Messaging system, it was deemed deprecated (there is even a compat layer, redirecting sout/serr to msg_info(), msg_warning(), etc), but never enforced and never publicized actually. This PR officially deprecates it by still being able to use it but will warn at compilation time if anybody uses the stream operators with serr/sendl. (you can see that on the CI log for the soon-to-be-dropped plugin like Flexible or Compliant). This PR also (should) remove all those serr/sout/sendl in SOFA itself and the supported plugins. EDIT: Adding ""breaking"" label because serr was throwing ""WARNING"" before (yeah makes sense), so it cannot be replaced 1-on-1 with msg_error( could be msg_warning as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2292
https://github.com/sofa-framework/sofa/pull/2292:661,Modifiability,plugin,plugins,661,"sout/serr (and sendl) were wrappers for std::cout & std::cerr to get access to the streams for the GUIs initially. After the introduction of the Messaging system, it was deemed deprecated (there is even a compat layer, redirecting sout/serr to msg_info(), msg_warning(), etc), but never enforced and never publicized actually. This PR officially deprecates it by still being able to use it but will warn at compilation time if anybody uses the stream operators with serr/sendl. (you can see that on the CI log for the soon-to-be-dropped plugin like Flexible or Compliant). This PR also (should) remove all those serr/sout/sendl in SOFA itself and the supported plugins. EDIT: Adding ""breaking"" label because serr was throwing ""WARNING"" before (yeah makes sense), so it cannot be replaced 1-on-1 with msg_error( could be msg_warning as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2292
https://github.com/sofa-framework/sofa/pull/2292:69,Security,access,access,69,"sout/serr (and sendl) were wrappers for std::cout & std::cerr to get access to the streams for the GUIs initially. After the introduction of the Messaging system, it was deemed deprecated (there is even a compat layer, redirecting sout/serr to msg_info(), msg_warning(), etc), but never enforced and never publicized actually. This PR officially deprecates it by still being able to use it but will warn at compilation time if anybody uses the stream operators with serr/sendl. (you can see that on the CI log for the soon-to-be-dropped plugin like Flexible or Compliant). This PR also (should) remove all those serr/sout/sendl in SOFA itself and the supported plugins. EDIT: Adding ""breaking"" label because serr was throwing ""WARNING"" before (yeah makes sense), so it cannot be replaced 1-on-1 with msg_error( could be msg_warning as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2292
https://github.com/sofa-framework/sofa/pull/2292:1005,Security,Certificate,Certificate,1005,"sout/serr (and sendl) were wrappers for std::cout & std::cerr to get access to the streams for the GUIs initially. After the introduction of the Messaging system, it was deemed deprecated (there is even a compat layer, redirecting sout/serr to msg_info(), msg_warning(), etc), but never enforced and never publicized actually. This PR officially deprecates it by still being able to use it but will warn at compilation time if anybody uses the stream operators with serr/sendl. (you can see that on the CI log for the soon-to-be-dropped plugin like Flexible or Compliant). This PR also (should) remove all those serr/sout/sendl in SOFA itself and the supported plugins. EDIT: Adding ""breaking"" label because serr was throwing ""WARNING"" before (yeah makes sense), so it cannot be replaced 1-on-1 with msg_error( could be msg_warning as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2292
https://github.com/sofa-framework/sofa/pull/2292:1116,Security,certificate,certificate-of-origin-dco,1116,"sout/serr (and sendl) were wrappers for std::cout & std::cerr to get access to the streams for the GUIs initially. After the introduction of the Messaging system, it was deemed deprecated (there is even a compat layer, redirecting sout/serr to msg_info(), msg_warning(), etc), but never enforced and never publicized actually. This PR officially deprecates it by still being able to use it but will warn at compilation time if anybody uses the stream operators with serr/sendl. (you can see that on the CI log for the soon-to-be-dropped plugin like Flexible or Compliant). This PR also (should) remove all those serr/sout/sendl in SOFA itself and the supported plugins. EDIT: Adding ""breaking"" label because serr was throwing ""WARNING"" before (yeah makes sense), so it cannot be replaced 1-on-1 with msg_error( could be msg_warning as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2292
https://github.com/sofa-framework/sofa/pull/2292:506,Testability,log,log,506,"sout/serr (and sendl) were wrappers for std::cout & std::cerr to get access to the streams for the GUIs initially. After the introduction of the Messaging system, it was deemed deprecated (there is even a compat layer, redirecting sout/serr to msg_info(), msg_warning(), etc), but never enforced and never publicized actually. This PR officially deprecates it by still being able to use it but will warn at compilation time if anybody uses the stream operators with serr/sendl. (you can see that on the CI log for the soon-to-be-dropped plugin like Flexible or Compliant). This PR also (should) remove all those serr/sout/sendl in SOFA itself and the supported plugins. EDIT: Adding ""breaking"" label because serr was throwing ""WARNING"" before (yeah makes sense), so it cannot be replaced 1-on-1 with msg_error( could be msg_warning as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2292
https://github.com/sofa-framework/sofa/pull/2292:1381,Testability,test,test,1381,"sout/serr (and sendl) were wrappers for std::cout & std::cerr to get access to the streams for the GUIs initially. After the introduction of the Messaging system, it was deemed deprecated (there is even a compat layer, redirecting sout/serr to msg_info(), msg_warning(), etc), but never enforced and never publicized actually. This PR officially deprecates it by still being able to use it but will warn at compilation time if anybody uses the stream operators with serr/sendl. (you can see that on the CI log for the soon-to-be-dropped plugin like Flexible or Compliant). This PR also (should) remove all those serr/sout/sendl in SOFA itself and the supported plugins. EDIT: Adding ""breaking"" label because serr was throwing ""WARNING"" before (yeah makes sense), so it cannot be replaced 1-on-1 with msg_error( could be msg_warning as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2292
https://github.com/sofa-framework/sofa/pull/2292:1430,Testability,test,test,1430,"sout/serr (and sendl) were wrappers for std::cout & std::cerr to get access to the streams for the GUIs initially. After the introduction of the Messaging system, it was deemed deprecated (there is even a compat layer, redirecting sout/serr to msg_info(), msg_warning(), etc), but never enforced and never publicized actually. This PR officially deprecates it by still being able to use it but will warn at compilation time if anybody uses the stream operators with serr/sendl. (you can see that on the CI log for the soon-to-be-dropped plugin like Flexible or Compliant). This PR also (should) remove all those serr/sout/sendl in SOFA itself and the supported plugins. EDIT: Adding ""breaking"" label because serr was throwing ""WARNING"" before (yeah makes sense), so it cannot be replaced 1-on-1 with msg_error( could be msg_warning as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2292
https://github.com/sofa-framework/sofa/pull/2293:13,Deployability,patch,patch,13,"Without this patch, its not possible to call getMSState from the getPotentialEnergy in Mass (well, at least its not possible without casting to a ForceField). This makes it easier",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2293
https://github.com/sofa-framework/sofa/pull/2294:575,Availability,failure,failures,575,"Simple for a summer restart !. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2294
https://github.com/sofa-framework/sofa/pull/2294:624,Availability,failure,failures,624,"Simple for a summer restart !. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2294
https://github.com/sofa-framework/sofa/pull/2294:194,Security,Certificate,Certificate,194,"Simple for a summer restart !. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2294
https://github.com/sofa-framework/sofa/pull/2294:305,Security,certificate,certificate-of-origin-dco,305,"Simple for a summer restart !. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2294
https://github.com/sofa-framework/sofa/pull/2294:570,Testability,test,test,570,"Simple for a summer restart !. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2294
https://github.com/sofa-framework/sofa/pull/2294:619,Testability,test,test,619,"Simple for a summer restart !. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2294
https://github.com/sofa-framework/sofa/pull/2294:0,Usability,Simpl,Simple,0,"Simple for a summer restart !. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2294
https://github.com/sofa-framework/sofa/issues/2296:5,Testability,test,tests,5,Some tests have the mention *DISABLED_...* which makes gtest ignore it.; We should keep that in mind,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2296
https://github.com/sofa-framework/sofa/pull/2297:693,Availability,failure,failures,693,"- Option is set to true by default to not change the current behavior in SOFA; - also improve the EdgeInformation access in for loop in draw method. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2297
https://github.com/sofa-framework/sofa/pull/2297:742,Availability,failure,failures,742,"- Option is set to true by default to not change the current behavior in SOFA; - also improve the EdgeInformation access in for loop in draw method. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2297
https://github.com/sofa-framework/sofa/pull/2297:114,Security,access,access,114,"- Option is set to true by default to not change the current behavior in SOFA; - also improve the EdgeInformation access in for loop in draw method. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2297
https://github.com/sofa-framework/sofa/pull/2297:312,Security,Certificate,Certificate,312,"- Option is set to true by default to not change the current behavior in SOFA; - also improve the EdgeInformation access in for loop in draw method. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2297
https://github.com/sofa-framework/sofa/pull/2297:423,Security,certificate,certificate-of-origin-dco,423,"- Option is set to true by default to not change the current behavior in SOFA; - also improve the EdgeInformation access in for loop in draw method. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2297
https://github.com/sofa-framework/sofa/pull/2297:688,Testability,test,test,688,"- Option is set to true by default to not change the current behavior in SOFA; - also improve the EdgeInformation access in for loop in draw method. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2297
https://github.com/sofa-framework/sofa/pull/2297:737,Testability,test,test,737,"- Option is set to true by default to not change the current behavior in SOFA; - also improve the EdgeInformation access in for loop in draw method. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2297
https://github.com/sofa-framework/sofa/pull/2298:817,Availability,failure,failures,817,"The callback on '''Data<string> texturename ''' was calling init() method. This can produce bugs as the init() method should be called only once to setup callbacks or init mesh. Move this callback creation in init method and use loadTextures(...) instead of init() method. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2298
https://github.com/sofa-framework/sofa/pull/2298:866,Availability,failure,failures,866,"The callback on '''Data<string> texturename ''' was calling init() method. This can produce bugs as the init() method should be called only once to setup callbacks or init mesh. Move this callback creation in init method and use loadTextures(...) instead of init() method. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2298
https://github.com/sofa-framework/sofa/pull/2298:229,Performance,load,loadTextures,229,"The callback on '''Data<string> texturename ''' was calling init() method. This can produce bugs as the init() method should be called only once to setup callbacks or init mesh. Move this callback creation in init method and use loadTextures(...) instead of init() method. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2298
https://github.com/sofa-framework/sofa/pull/2298:436,Security,Certificate,Certificate,436,"The callback on '''Data<string> texturename ''' was calling init() method. This can produce bugs as the init() method should be called only once to setup callbacks or init mesh. Move this callback creation in init method and use loadTextures(...) instead of init() method. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2298
https://github.com/sofa-framework/sofa/pull/2298:547,Security,certificate,certificate-of-origin-dco,547,"The callback on '''Data<string> texturename ''' was calling init() method. This can produce bugs as the init() method should be called only once to setup callbacks or init mesh. Move this callback creation in init method and use loadTextures(...) instead of init() method. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2298
https://github.com/sofa-framework/sofa/pull/2298:812,Testability,test,test,812,"The callback on '''Data<string> texturename ''' was calling init() method. This can produce bugs as the init() method should be called only once to setup callbacks or init mesh. Move this callback creation in init method and use loadTextures(...) instead of init() method. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2298
https://github.com/sofa-framework/sofa/pull/2298:861,Testability,test,test,861,"The callback on '''Data<string> texturename ''' was calling init() method. This can produce bugs as the init() method should be called only once to setup callbacks or init mesh. Move this callback creation in init method and use loadTextures(...) instead of init() method. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2298
https://github.com/sofa-framework/sofa/pull/2299:706,Availability,failure,failures,706,"- Split init method in 3 depending if mesh, data or topology is used. also Avoid recomputing topology at updateVisual; - also remove not working topologyHandler. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2299
https://github.com/sofa-framework/sofa/pull/2299:755,Availability,failure,failures,755,"- Split init method in 3 depending if mesh, data or topology is used. also Avoid recomputing topology at updateVisual; - also remove not working topologyHandler. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2299
https://github.com/sofa-framework/sofa/pull/2299:105,Deployability,update,updateVisual,105,"- Split init method in 3 depending if mesh, data or topology is used. also Avoid recomputing topology at updateVisual; - also remove not working topologyHandler. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2299
https://github.com/sofa-framework/sofa/pull/2299:25,Integrability,depend,depending,25,"- Split init method in 3 depending if mesh, data or topology is used. also Avoid recomputing topology at updateVisual; - also remove not working topologyHandler. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2299
https://github.com/sofa-framework/sofa/pull/2299:75,Safety,Avoid,Avoid,75,"- Split init method in 3 depending if mesh, data or topology is used. also Avoid recomputing topology at updateVisual; - also remove not working topologyHandler. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2299
https://github.com/sofa-framework/sofa/pull/2299:325,Security,Certificate,Certificate,325,"- Split init method in 3 depending if mesh, data or topology is used. also Avoid recomputing topology at updateVisual; - also remove not working topologyHandler. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2299
https://github.com/sofa-framework/sofa/pull/2299:436,Security,certificate,certificate-of-origin-dco,436,"- Split init method in 3 depending if mesh, data or topology is used. also Avoid recomputing topology at updateVisual; - also remove not working topologyHandler. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2299
https://github.com/sofa-framework/sofa/pull/2299:701,Testability,test,test,701,"- Split init method in 3 depending if mesh, data or topology is used. also Avoid recomputing topology at updateVisual; - also remove not working topologyHandler. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2299
https://github.com/sofa-framework/sofa/pull/2299:750,Testability,test,test,750,"- Split init method in 3 depending if mesh, data or topology is used. also Avoid recomputing topology at updateVisual; - also remove not working topologyHandler. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2299
https://github.com/sofa-framework/sofa/pull/2300:1393,Availability,failure,failures,1393,"This PR depends on PR #2299 (should be rebased). 1. Use callback to update the list of triangles/quads and vertices when topological changes happened.; 2. Add also callback on texcoord to update texture coordinate when mesh changed. - Update of texture coordinates was buggy when removing points; <img src=""https://user-images.githubusercontent.com/21199245/129899818-50ef6454-ca73-49fa-9a1a-f3284eb4915b.png"" width=""70%"" />. - Adding new points where created with texCoord(0, 0); <img src=""https://user-images.githubusercontent.com/21199245/129899836-1a9ad38b-5359-447a-9d68-b11bb68f7813.png"" width=""70%"" />. -> Using the callback on texcoords, use ancestors and coefficient of added point to apply the good texCoords; <img src=""https://user-images.githubusercontent.com/21199245/129899846-178564ea-044d-4db8-a5fb-b4e318f0467e.png"" width=""70%"" />. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2300
https://github.com/sofa-framework/sofa/pull/2300:1442,Availability,failure,failures,1442,"This PR depends on PR #2299 (should be rebased). 1. Use callback to update the list of triangles/quads and vertices when topological changes happened.; 2. Add also callback on texcoord to update texture coordinate when mesh changed. - Update of texture coordinates was buggy when removing points; <img src=""https://user-images.githubusercontent.com/21199245/129899818-50ef6454-ca73-49fa-9a1a-f3284eb4915b.png"" width=""70%"" />. - Adding new points where created with texCoord(0, 0); <img src=""https://user-images.githubusercontent.com/21199245/129899836-1a9ad38b-5359-447a-9d68-b11bb68f7813.png"" width=""70%"" />. -> Using the callback on texcoords, use ancestors and coefficient of added point to apply the good texCoords; <img src=""https://user-images.githubusercontent.com/21199245/129899846-178564ea-044d-4db8-a5fb-b4e318f0467e.png"" width=""70%"" />. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2300
https://github.com/sofa-framework/sofa/pull/2300:68,Deployability,update,update,68,"This PR depends on PR #2299 (should be rebased). 1. Use callback to update the list of triangles/quads and vertices when topological changes happened.; 2. Add also callback on texcoord to update texture coordinate when mesh changed. - Update of texture coordinates was buggy when removing points; <img src=""https://user-images.githubusercontent.com/21199245/129899818-50ef6454-ca73-49fa-9a1a-f3284eb4915b.png"" width=""70%"" />. - Adding new points where created with texCoord(0, 0); <img src=""https://user-images.githubusercontent.com/21199245/129899836-1a9ad38b-5359-447a-9d68-b11bb68f7813.png"" width=""70%"" />. -> Using the callback on texcoords, use ancestors and coefficient of added point to apply the good texCoords; <img src=""https://user-images.githubusercontent.com/21199245/129899846-178564ea-044d-4db8-a5fb-b4e318f0467e.png"" width=""70%"" />. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2300
https://github.com/sofa-framework/sofa/pull/2300:188,Deployability,update,update,188,"This PR depends on PR #2299 (should be rebased). 1. Use callback to update the list of triangles/quads and vertices when topological changes happened.; 2. Add also callback on texcoord to update texture coordinate when mesh changed. - Update of texture coordinates was buggy when removing points; <img src=""https://user-images.githubusercontent.com/21199245/129899818-50ef6454-ca73-49fa-9a1a-f3284eb4915b.png"" width=""70%"" />. - Adding new points where created with texCoord(0, 0); <img src=""https://user-images.githubusercontent.com/21199245/129899836-1a9ad38b-5359-447a-9d68-b11bb68f7813.png"" width=""70%"" />. -> Using the callback on texcoords, use ancestors and coefficient of added point to apply the good texCoords; <img src=""https://user-images.githubusercontent.com/21199245/129899846-178564ea-044d-4db8-a5fb-b4e318f0467e.png"" width=""70%"" />. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2300
https://github.com/sofa-framework/sofa/pull/2300:235,Deployability,Update,Update,235,"This PR depends on PR #2299 (should be rebased). 1. Use callback to update the list of triangles/quads and vertices when topological changes happened.; 2. Add also callback on texcoord to update texture coordinate when mesh changed. - Update of texture coordinates was buggy when removing points; <img src=""https://user-images.githubusercontent.com/21199245/129899818-50ef6454-ca73-49fa-9a1a-f3284eb4915b.png"" width=""70%"" />. - Adding new points where created with texCoord(0, 0); <img src=""https://user-images.githubusercontent.com/21199245/129899836-1a9ad38b-5359-447a-9d68-b11bb68f7813.png"" width=""70%"" />. -> Using the callback on texcoords, use ancestors and coefficient of added point to apply the good texCoords; <img src=""https://user-images.githubusercontent.com/21199245/129899846-178564ea-044d-4db8-a5fb-b4e318f0467e.png"" width=""70%"" />. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2300
https://github.com/sofa-framework/sofa/pull/2300:8,Integrability,depend,depends,8,"This PR depends on PR #2299 (should be rebased). 1. Use callback to update the list of triangles/quads and vertices when topological changes happened.; 2. Add also callback on texcoord to update texture coordinate when mesh changed. - Update of texture coordinates was buggy when removing points; <img src=""https://user-images.githubusercontent.com/21199245/129899818-50ef6454-ca73-49fa-9a1a-f3284eb4915b.png"" width=""70%"" />. - Adding new points where created with texCoord(0, 0); <img src=""https://user-images.githubusercontent.com/21199245/129899836-1a9ad38b-5359-447a-9d68-b11bb68f7813.png"" width=""70%"" />. -> Using the callback on texcoords, use ancestors and coefficient of added point to apply the good texCoords; <img src=""https://user-images.githubusercontent.com/21199245/129899846-178564ea-044d-4db8-a5fb-b4e318f0467e.png"" width=""70%"" />. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2300
https://github.com/sofa-framework/sofa/pull/2300:1012,Security,Certificate,Certificate,1012,"This PR depends on PR #2299 (should be rebased). 1. Use callback to update the list of triangles/quads and vertices when topological changes happened.; 2. Add also callback on texcoord to update texture coordinate when mesh changed. - Update of texture coordinates was buggy when removing points; <img src=""https://user-images.githubusercontent.com/21199245/129899818-50ef6454-ca73-49fa-9a1a-f3284eb4915b.png"" width=""70%"" />. - Adding new points where created with texCoord(0, 0); <img src=""https://user-images.githubusercontent.com/21199245/129899836-1a9ad38b-5359-447a-9d68-b11bb68f7813.png"" width=""70%"" />. -> Using the callback on texcoords, use ancestors and coefficient of added point to apply the good texCoords; <img src=""https://user-images.githubusercontent.com/21199245/129899846-178564ea-044d-4db8-a5fb-b4e318f0467e.png"" width=""70%"" />. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2300
https://github.com/sofa-framework/sofa/pull/2300:1123,Security,certificate,certificate-of-origin-dco,1123,"This PR depends on PR #2299 (should be rebased). 1. Use callback to update the list of triangles/quads and vertices when topological changes happened.; 2. Add also callback on texcoord to update texture coordinate when mesh changed. - Update of texture coordinates was buggy when removing points; <img src=""https://user-images.githubusercontent.com/21199245/129899818-50ef6454-ca73-49fa-9a1a-f3284eb4915b.png"" width=""70%"" />. - Adding new points where created with texCoord(0, 0); <img src=""https://user-images.githubusercontent.com/21199245/129899836-1a9ad38b-5359-447a-9d68-b11bb68f7813.png"" width=""70%"" />. -> Using the callback on texcoords, use ancestors and coefficient of added point to apply the good texCoords; <img src=""https://user-images.githubusercontent.com/21199245/129899846-178564ea-044d-4db8-a5fb-b4e318f0467e.png"" width=""70%"" />. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2300
https://github.com/sofa-framework/sofa/pull/2300:1388,Testability,test,test,1388,"This PR depends on PR #2299 (should be rebased). 1. Use callback to update the list of triangles/quads and vertices when topological changes happened.; 2. Add also callback on texcoord to update texture coordinate when mesh changed. - Update of texture coordinates was buggy when removing points; <img src=""https://user-images.githubusercontent.com/21199245/129899818-50ef6454-ca73-49fa-9a1a-f3284eb4915b.png"" width=""70%"" />. - Adding new points where created with texCoord(0, 0); <img src=""https://user-images.githubusercontent.com/21199245/129899836-1a9ad38b-5359-447a-9d68-b11bb68f7813.png"" width=""70%"" />. -> Using the callback on texcoords, use ancestors and coefficient of added point to apply the good texCoords; <img src=""https://user-images.githubusercontent.com/21199245/129899846-178564ea-044d-4db8-a5fb-b4e318f0467e.png"" width=""70%"" />. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2300
https://github.com/sofa-framework/sofa/pull/2300:1437,Testability,test,test,1437,"This PR depends on PR #2299 (should be rebased). 1. Use callback to update the list of triangles/quads and vertices when topological changes happened.; 2. Add also callback on texcoord to update texture coordinate when mesh changed. - Update of texture coordinates was buggy when removing points; <img src=""https://user-images.githubusercontent.com/21199245/129899818-50ef6454-ca73-49fa-9a1a-f3284eb4915b.png"" width=""70%"" />. - Adding new points where created with texCoord(0, 0); <img src=""https://user-images.githubusercontent.com/21199245/129899836-1a9ad38b-5359-447a-9d68-b11bb68f7813.png"" width=""70%"" />. -> Using the callback on texcoords, use ancestors and coefficient of added point to apply the good texCoords; <img src=""https://user-images.githubusercontent.com/21199245/129899846-178564ea-044d-4db8-a5fb-b4e318f0467e.png"" width=""70%"" />. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2300
https://github.com/sofa-framework/sofa/issues/2301:245,Testability,test,test,245,"According to this [PR on Caribou's repo](https://github.com/jnbrunet/caribou/pull/60), the MeshMatrixMass::addForce isn't giving the same result either your are using a lumped scheme or not, and I'm not talking about a small difference. You can test it against SOFA v20.12, which works correctly. This may be a critical issue.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2301
https://github.com/sofa-framework/sofa/pull/2302:798,Availability,failure,failures,798,"Got a missing linker reference to pthread with my configuration.; I suppose this does not appear on the CI because of some differences in the cmake config (packages?). Related to the removal of boost::thread which was doing the job for everybody before. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2302
https://github.com/sofa-framework/sofa/pull/2302:847,Availability,failure,failures,847,"Got a missing linker reference to pthread with my configuration.; I suppose this does not appear on the CI because of some differences in the cmake config (packages?). Related to the removal of boost::thread which was doing the job for everybody before. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2302
https://github.com/sofa-framework/sofa/pull/2302:50,Deployability,configurat,configuration,50,"Got a missing linker reference to pthread with my configuration.; I suppose this does not appear on the CI because of some differences in the cmake config (packages?). Related to the removal of boost::thread which was doing the job for everybody before. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2302
https://github.com/sofa-framework/sofa/pull/2302:50,Modifiability,config,configuration,50,"Got a missing linker reference to pthread with my configuration.; I suppose this does not appear on the CI because of some differences in the cmake config (packages?). Related to the removal of boost::thread which was doing the job for everybody before. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2302
https://github.com/sofa-framework/sofa/pull/2302:148,Modifiability,config,config,148,"Got a missing linker reference to pthread with my configuration.; I suppose this does not appear on the CI because of some differences in the cmake config (packages?). Related to the removal of boost::thread which was doing the job for everybody before. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2302
https://github.com/sofa-framework/sofa/pull/2302:417,Security,Certificate,Certificate,417,"Got a missing linker reference to pthread with my configuration.; I suppose this does not appear on the CI because of some differences in the cmake config (packages?). Related to the removal of boost::thread which was doing the job for everybody before. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2302
https://github.com/sofa-framework/sofa/pull/2302:528,Security,certificate,certificate-of-origin-dco,528,"Got a missing linker reference to pthread with my configuration.; I suppose this does not appear on the CI because of some differences in the cmake config (packages?). Related to the removal of boost::thread which was doing the job for everybody before. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2302
https://github.com/sofa-framework/sofa/pull/2302:793,Testability,test,test,793,"Got a missing linker reference to pthread with my configuration.; I suppose this does not appear on the CI because of some differences in the cmake config (packages?). Related to the removal of boost::thread which was doing the job for everybody before. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2302
https://github.com/sofa-framework/sofa/pull/2302:842,Testability,test,test,842,"Got a missing linker reference to pthread with my configuration.; I suppose this does not appear on the CI because of some differences in the cmake config (packages?). Related to the removal of boost::thread which was doing the job for everybody before. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2302
https://github.com/sofa-framework/sofa/pull/2303:1080,Availability,failure,failures,1080,"Introduce a new component:; It exports the global system matrix of the current context into a file. The exporter allows to write the file under several formats. The class is designed so more file format can be supported. For example, image export is added in the CImg plugin. An example is provided. Example:. ![image](https://user-images.githubusercontent.com/10572752/130434673-82d50165-2cc6-49f5-9298-241be36490ad.png). ![image](https://user-images.githubusercontent.com/10572752/130598924-8a805845-bb95-407a-972f-d68e56c18fb2.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2303
https://github.com/sofa-framework/sofa/pull/2303:1129,Availability,failure,failures,1129,"Introduce a new component:; It exports the global system matrix of the current context into a file. The exporter allows to write the file under several formats. The class is designed so more file format can be supported. For example, image export is added in the CImg plugin. An example is provided. Example:. ![image](https://user-images.githubusercontent.com/10572752/130434673-82d50165-2cc6-49f5-9298-241be36490ad.png). ![image](https://user-images.githubusercontent.com/10572752/130598924-8a805845-bb95-407a-972f-d68e56c18fb2.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2303
https://github.com/sofa-framework/sofa/pull/2303:268,Modifiability,plugin,plugin,268,"Introduce a new component:; It exports the global system matrix of the current context into a file. The exporter allows to write the file under several formats. The class is designed so more file format can be supported. For example, image export is added in the CImg plugin. An example is provided. Example:. ![image](https://user-images.githubusercontent.com/10572752/130434673-82d50165-2cc6-49f5-9298-241be36490ad.png). ![image](https://user-images.githubusercontent.com/10572752/130598924-8a805845-bb95-407a-972f-d68e56c18fb2.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2303
https://github.com/sofa-framework/sofa/pull/2303:699,Security,Certificate,Certificate,699,"Introduce a new component:; It exports the global system matrix of the current context into a file. The exporter allows to write the file under several formats. The class is designed so more file format can be supported. For example, image export is added in the CImg plugin. An example is provided. Example:. ![image](https://user-images.githubusercontent.com/10572752/130434673-82d50165-2cc6-49f5-9298-241be36490ad.png). ![image](https://user-images.githubusercontent.com/10572752/130598924-8a805845-bb95-407a-972f-d68e56c18fb2.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2303
https://github.com/sofa-framework/sofa/pull/2303:810,Security,certificate,certificate-of-origin-dco,810,"Introduce a new component:; It exports the global system matrix of the current context into a file. The exporter allows to write the file under several formats. The class is designed so more file format can be supported. For example, image export is added in the CImg plugin. An example is provided. Example:. ![image](https://user-images.githubusercontent.com/10572752/130434673-82d50165-2cc6-49f5-9298-241be36490ad.png). ![image](https://user-images.githubusercontent.com/10572752/130598924-8a805845-bb95-407a-972f-d68e56c18fb2.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2303
https://github.com/sofa-framework/sofa/pull/2303:1075,Testability,test,test,1075,"Introduce a new component:; It exports the global system matrix of the current context into a file. The exporter allows to write the file under several formats. The class is designed so more file format can be supported. For example, image export is added in the CImg plugin. An example is provided. Example:. ![image](https://user-images.githubusercontent.com/10572752/130434673-82d50165-2cc6-49f5-9298-241be36490ad.png). ![image](https://user-images.githubusercontent.com/10572752/130598924-8a805845-bb95-407a-972f-d68e56c18fb2.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2303
https://github.com/sofa-framework/sofa/pull/2303:1124,Testability,test,test,1124,"Introduce a new component:; It exports the global system matrix of the current context into a file. The exporter allows to write the file under several formats. The class is designed so more file format can be supported. For example, image export is added in the CImg plugin. An example is provided. Example:. ![image](https://user-images.githubusercontent.com/10572752/130434673-82d50165-2cc6-49f5-9298-241be36490ad.png). ![image](https://user-images.githubusercontent.com/10572752/130598924-8a805845-bb95-407a-972f-d68e56c18fb2.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2303
https://github.com/sofa-framework/sofa/pull/2304:765,Availability,failure,failures,765,"Some overloads of the function `add` from `BaseMatrix` were hidden in derived classes (SparseMatrix, RotationMatrix, FullMatrix and DiagonalMatrix). The using-declaration asks to bring all the overloads into the scope. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2304
https://github.com/sofa-framework/sofa/pull/2304:814,Availability,failure,failures,814,"Some overloads of the function `add` from `BaseMatrix` were hidden in derived classes (SparseMatrix, RotationMatrix, FullMatrix and DiagonalMatrix). The using-declaration asks to bring all the overloads into the scope. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2304
https://github.com/sofa-framework/sofa/pull/2304:384,Security,Certificate,Certificate,384,"Some overloads of the function `add` from `BaseMatrix` were hidden in derived classes (SparseMatrix, RotationMatrix, FullMatrix and DiagonalMatrix). The using-declaration asks to bring all the overloads into the scope. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2304
https://github.com/sofa-framework/sofa/pull/2304:495,Security,certificate,certificate-of-origin-dco,495,"Some overloads of the function `add` from `BaseMatrix` were hidden in derived classes (SparseMatrix, RotationMatrix, FullMatrix and DiagonalMatrix). The using-declaration asks to bring all the overloads into the scope. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2304
https://github.com/sofa-framework/sofa/pull/2304:760,Testability,test,test,760,"Some overloads of the function `add` from `BaseMatrix` were hidden in derived classes (SparseMatrix, RotationMatrix, FullMatrix and DiagonalMatrix). The using-declaration asks to bring all the overloads into the scope. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2304
https://github.com/sofa-framework/sofa/pull/2304:809,Testability,test,test,809,"Some overloads of the function `add` from `BaseMatrix` were hidden in derived classes (SparseMatrix, RotationMatrix, FullMatrix and DiagonalMatrix). The using-declaration asks to bring all the overloads into the scope. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2304
https://github.com/sofa-framework/sofa/pull/2305:890,Availability,failure,failures,890,"Fix bug introduced in #2193 and reported by @jnbunet in the Caribou CI! Thanks again @jnbrunet and @epernod for the discussions !. - Homogeneize the use of the massLumpingCoeff; - In the test, only cosmetic change; - homogeneize and add scenes in the regression. Fixes #2301. [ci-depends-on https://github.com/sofa-framework/Regression/pull/18]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2305
https://github.com/sofa-framework/sofa/pull/2305:939,Availability,failure,failures,939,"Fix bug introduced in #2193 and reported by @jnbunet in the Caribou CI! Thanks again @jnbrunet and @epernod for the discussions !. - Homogeneize the use of the massLumpingCoeff; - In the test, only cosmetic change; - homogeneize and add scenes in the regression. Fixes #2301. [ci-depends-on https://github.com/sofa-framework/Regression/pull/18]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2305
https://github.com/sofa-framework/sofa/pull/2305:280,Integrability,depend,depends-on,280,"Fix bug introduced in #2193 and reported by @jnbunet in the Caribou CI! Thanks again @jnbrunet and @epernod for the discussions !. - Homogeneize the use of the massLumpingCoeff; - In the test, only cosmetic change; - homogeneize and add scenes in the regression. Fixes #2301. [ci-depends-on https://github.com/sofa-framework/Regression/pull/18]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2305
https://github.com/sofa-framework/sofa/pull/2305:509,Security,Certificate,Certificate,509,"Fix bug introduced in #2193 and reported by @jnbunet in the Caribou CI! Thanks again @jnbrunet and @epernod for the discussions !. - Homogeneize the use of the massLumpingCoeff; - In the test, only cosmetic change; - homogeneize and add scenes in the regression. Fixes #2301. [ci-depends-on https://github.com/sofa-framework/Regression/pull/18]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2305
https://github.com/sofa-framework/sofa/pull/2305:620,Security,certificate,certificate-of-origin-dco,620,"Fix bug introduced in #2193 and reported by @jnbunet in the Caribou CI! Thanks again @jnbrunet and @epernod for the discussions !. - Homogeneize the use of the massLumpingCoeff; - In the test, only cosmetic change; - homogeneize and add scenes in the regression. Fixes #2301. [ci-depends-on https://github.com/sofa-framework/Regression/pull/18]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2305
https://github.com/sofa-framework/sofa/pull/2305:187,Testability,test,test,187,"Fix bug introduced in #2193 and reported by @jnbunet in the Caribou CI! Thanks again @jnbrunet and @epernod for the discussions !. - Homogeneize the use of the massLumpingCoeff; - In the test, only cosmetic change; - homogeneize and add scenes in the regression. Fixes #2301. [ci-depends-on https://github.com/sofa-framework/Regression/pull/18]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2305
https://github.com/sofa-framework/sofa/pull/2305:885,Testability,test,test,885,"Fix bug introduced in #2193 and reported by @jnbunet in the Caribou CI! Thanks again @jnbrunet and @epernod for the discussions !. - Homogeneize the use of the massLumpingCoeff; - In the test, only cosmetic change; - homogeneize and add scenes in the regression. Fixes #2301. [ci-depends-on https://github.com/sofa-framework/Regression/pull/18]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2305
https://github.com/sofa-framework/sofa/pull/2305:934,Testability,test,test,934,"Fix bug introduced in #2193 and reported by @jnbunet in the Caribou CI! Thanks again @jnbrunet and @epernod for the discussions !. - Homogeneize the use of the massLumpingCoeff; - In the test, only cosmetic change; - homogeneize and add scenes in the regression. Fixes #2301. [ci-depends-on https://github.com/sofa-framework/Regression/pull/18]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2305
https://github.com/sofa-framework/sofa/pull/2306:1086,Availability,failure,failures,1086,"Explicit instantiation of some common template for `CompressedRowSparseMatrix`.; This is to force the template specialization of some functions for specific templates (function `add` and `filterValues`). Before, template was specialized, but not in the right way. The specialization was not taken into account.; Also, `filterValues` has been factorized (1 function instead of 4 identical functions). Now, `add` uses the correct specialization when it is used in a force field (badly introduced in #2281). It comes with the expected speed up. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2306
https://github.com/sofa-framework/sofa/pull/2306:1135,Availability,failure,failures,1135,"Explicit instantiation of some common template for `CompressedRowSparseMatrix`.; This is to force the template specialization of some functions for specific templates (function `add` and `filterValues`). Before, template was specialized, but not in the right way. The specialization was not taken into account.; Also, `filterValues` has been factorized (1 function instead of 4 identical functions). Now, `add` uses the correct specialization when it is used in a force field (badly introduced in #2281). It comes with the expected speed up. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2306
https://github.com/sofa-framework/sofa/pull/2306:705,Security,Certificate,Certificate,705,"Explicit instantiation of some common template for `CompressedRowSparseMatrix`.; This is to force the template specialization of some functions for specific templates (function `add` and `filterValues`). Before, template was specialized, but not in the right way. The specialization was not taken into account.; Also, `filterValues` has been factorized (1 function instead of 4 identical functions). Now, `add` uses the correct specialization when it is used in a force field (badly introduced in #2281). It comes with the expected speed up. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2306
https://github.com/sofa-framework/sofa/pull/2306:816,Security,certificate,certificate-of-origin-dco,816,"Explicit instantiation of some common template for `CompressedRowSparseMatrix`.; This is to force the template specialization of some functions for specific templates (function `add` and `filterValues`). Before, template was specialized, but not in the right way. The specialization was not taken into account.; Also, `filterValues` has been factorized (1 function instead of 4 identical functions). Now, `add` uses the correct specialization when it is used in a force field (badly introduced in #2281). It comes with the expected speed up. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2306
https://github.com/sofa-framework/sofa/pull/2306:1081,Testability,test,test,1081,"Explicit instantiation of some common template for `CompressedRowSparseMatrix`.; This is to force the template specialization of some functions for specific templates (function `add` and `filterValues`). Before, template was specialized, but not in the right way. The specialization was not taken into account.; Also, `filterValues` has been factorized (1 function instead of 4 identical functions). Now, `add` uses the correct specialization when it is used in a force field (badly introduced in #2281). It comes with the expected speed up. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2306
https://github.com/sofa-framework/sofa/pull/2306:1130,Testability,test,test,1130,"Explicit instantiation of some common template for `CompressedRowSparseMatrix`.; This is to force the template specialization of some functions for specific templates (function `add` and `filterValues`). Before, template was specialized, but not in the right way. The specialization was not taken into account.; Also, `filterValues` has been factorized (1 function instead of 4 identical functions). Now, `add` uses the correct specialization when it is used in a force field (badly introduced in #2281). It comes with the expected speed up. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2306
https://github.com/sofa-framework/sofa/pull/2307:1054,Availability,failure,failures,1054,"CImgData.h only contains classes and things related to the image plugin.; Thats why it seems more consistent to move this file directly into the image plugin. Moreover, it had a non-met (soft) dependency on SofaBaseVisual (as there is no cpp, and it is only used by the image plugin, this was not an issue before). IMO, CImgPlugin should be only a plugin:; - introducing the cimg library; - using cimg, allowing loading various picture file format (jpg/png, etc). I added some includes here and there as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2307
https://github.com/sofa-framework/sofa/pull/2307:1103,Availability,failure,failures,1103,"CImgData.h only contains classes and things related to the image plugin.; Thats why it seems more consistent to move this file directly into the image plugin. Moreover, it had a non-met (soft) dependency on SofaBaseVisual (as there is no cpp, and it is only used by the image plugin, this was not an issue before). IMO, CImgPlugin should be only a plugin:; - introducing the cimg library; - using cimg, allowing loading various picture file format (jpg/png, etc). I added some includes here and there as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2307
https://github.com/sofa-framework/sofa/pull/2307:193,Integrability,depend,dependency,193,"CImgData.h only contains classes and things related to the image plugin.; Thats why it seems more consistent to move this file directly into the image plugin. Moreover, it had a non-met (soft) dependency on SofaBaseVisual (as there is no cpp, and it is only used by the image plugin, this was not an issue before). IMO, CImgPlugin should be only a plugin:; - introducing the cimg library; - using cimg, allowing loading various picture file format (jpg/png, etc). I added some includes here and there as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2307
https://github.com/sofa-framework/sofa/pull/2307:65,Modifiability,plugin,plugin,65,"CImgData.h only contains classes and things related to the image plugin.; Thats why it seems more consistent to move this file directly into the image plugin. Moreover, it had a non-met (soft) dependency on SofaBaseVisual (as there is no cpp, and it is only used by the image plugin, this was not an issue before). IMO, CImgPlugin should be only a plugin:; - introducing the cimg library; - using cimg, allowing loading various picture file format (jpg/png, etc). I added some includes here and there as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2307
https://github.com/sofa-framework/sofa/pull/2307:151,Modifiability,plugin,plugin,151,"CImgData.h only contains classes and things related to the image plugin.; Thats why it seems more consistent to move this file directly into the image plugin. Moreover, it had a non-met (soft) dependency on SofaBaseVisual (as there is no cpp, and it is only used by the image plugin, this was not an issue before). IMO, CImgPlugin should be only a plugin:; - introducing the cimg library; - using cimg, allowing loading various picture file format (jpg/png, etc). I added some includes here and there as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2307
https://github.com/sofa-framework/sofa/pull/2307:276,Modifiability,plugin,plugin,276,"CImgData.h only contains classes and things related to the image plugin.; Thats why it seems more consistent to move this file directly into the image plugin. Moreover, it had a non-met (soft) dependency on SofaBaseVisual (as there is no cpp, and it is only used by the image plugin, this was not an issue before). IMO, CImgPlugin should be only a plugin:; - introducing the cimg library; - using cimg, allowing loading various picture file format (jpg/png, etc). I added some includes here and there as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2307
https://github.com/sofa-framework/sofa/pull/2307:348,Modifiability,plugin,plugin,348,"CImgData.h only contains classes and things related to the image plugin.; Thats why it seems more consistent to move this file directly into the image plugin. Moreover, it had a non-met (soft) dependency on SofaBaseVisual (as there is no cpp, and it is only used by the image plugin, this was not an issue before). IMO, CImgPlugin should be only a plugin:; - introducing the cimg library; - using cimg, allowing loading various picture file format (jpg/png, etc). I added some includes here and there as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2307
https://github.com/sofa-framework/sofa/pull/2307:412,Performance,load,loading,412,"CImgData.h only contains classes and things related to the image plugin.; Thats why it seems more consistent to move this file directly into the image plugin. Moreover, it had a non-met (soft) dependency on SofaBaseVisual (as there is no cpp, and it is only used by the image plugin, this was not an issue before). IMO, CImgPlugin should be only a plugin:; - introducing the cimg library; - using cimg, allowing loading various picture file format (jpg/png, etc). I added some includes here and there as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2307
https://github.com/sofa-framework/sofa/pull/2307:673,Security,Certificate,Certificate,673,"CImgData.h only contains classes and things related to the image plugin.; Thats why it seems more consistent to move this file directly into the image plugin. Moreover, it had a non-met (soft) dependency on SofaBaseVisual (as there is no cpp, and it is only used by the image plugin, this was not an issue before). IMO, CImgPlugin should be only a plugin:; - introducing the cimg library; - using cimg, allowing loading various picture file format (jpg/png, etc). I added some includes here and there as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2307
https://github.com/sofa-framework/sofa/pull/2307:784,Security,certificate,certificate-of-origin-dco,784,"CImgData.h only contains classes and things related to the image plugin.; Thats why it seems more consistent to move this file directly into the image plugin. Moreover, it had a non-met (soft) dependency on SofaBaseVisual (as there is no cpp, and it is only used by the image plugin, this was not an issue before). IMO, CImgPlugin should be only a plugin:; - introducing the cimg library; - using cimg, allowing loading various picture file format (jpg/png, etc). I added some includes here and there as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2307
https://github.com/sofa-framework/sofa/pull/2307:1049,Testability,test,test,1049,"CImgData.h only contains classes and things related to the image plugin.; Thats why it seems more consistent to move this file directly into the image plugin. Moreover, it had a non-met (soft) dependency on SofaBaseVisual (as there is no cpp, and it is only used by the image plugin, this was not an issue before). IMO, CImgPlugin should be only a plugin:; - introducing the cimg library; - using cimg, allowing loading various picture file format (jpg/png, etc). I added some includes here and there as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2307
https://github.com/sofa-framework/sofa/pull/2307:1098,Testability,test,test,1098,"CImgData.h only contains classes and things related to the image plugin.; Thats why it seems more consistent to move this file directly into the image plugin. Moreover, it had a non-met (soft) dependency on SofaBaseVisual (as there is no cpp, and it is only used by the image plugin, this was not an issue before). IMO, CImgPlugin should be only a plugin:; - introducing the cimg library; - using cimg, allowing loading various picture file format (jpg/png, etc). I added some includes here and there as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2307
https://github.com/sofa-framework/sofa/pull/2308:715,Availability,failure,failures,715,"(based on #2307 ). Pretty annoying to forget to enable diffusionsolver every time image is required.; And it appeared that in fact image does not even need this plugin... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2308
https://github.com/sofa-framework/sofa/pull/2308:764,Availability,failure,failures,764,"(based on #2307 ). Pretty annoying to forget to enable diffusionsolver every time image is required.; And it appeared that in fact image does not even need this plugin... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2308
https://github.com/sofa-framework/sofa/pull/2308:161,Modifiability,plugin,plugin,161,"(based on #2307 ). Pretty annoying to forget to enable diffusionsolver every time image is required.; And it appeared that in fact image does not even need this plugin... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2308
https://github.com/sofa-framework/sofa/pull/2308:334,Security,Certificate,Certificate,334,"(based on #2307 ). Pretty annoying to forget to enable diffusionsolver every time image is required.; And it appeared that in fact image does not even need this plugin... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2308
https://github.com/sofa-framework/sofa/pull/2308:445,Security,certificate,certificate-of-origin-dco,445,"(based on #2307 ). Pretty annoying to forget to enable diffusionsolver every time image is required.; And it appeared that in fact image does not even need this plugin... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2308
https://github.com/sofa-framework/sofa/pull/2308:710,Testability,test,test,710,"(based on #2307 ). Pretty annoying to forget to enable diffusionsolver every time image is required.; And it appeared that in fact image does not even need this plugin... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2308
https://github.com/sofa-framework/sofa/pull/2308:759,Testability,test,test,759,"(based on #2307 ). Pretty annoying to forget to enable diffusionsolver every time image is required.; And it appeared that in fact image does not even need this plugin... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2308
https://github.com/sofa-framework/sofa/pull/2309:728,Availability,failure,failures,728,"Macro sofa_install_git_infos will install a file `git-infos.txt` in all modules that contain a `.git` in their sources.; This will help to keep track of versions within SOFA binaries. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2309
https://github.com/sofa-framework/sofa/pull/2309:777,Availability,failure,failures,777,"Macro sofa_install_git_infos will install a file `git-infos.txt` in all modules that contain a `.git` in their sources.; This will help to keep track of versions within SOFA binaries. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2309
https://github.com/sofa-framework/sofa/pull/2309:34,Deployability,install,install,34,"Macro sofa_install_git_infos will install a file `git-infos.txt` in all modules that contain a `.git` in their sources.; This will help to keep track of versions within SOFA binaries. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2309
https://github.com/sofa-framework/sofa/pull/2309:347,Security,Certificate,Certificate,347,"Macro sofa_install_git_infos will install a file `git-infos.txt` in all modules that contain a `.git` in their sources.; This will help to keep track of versions within SOFA binaries. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2309
https://github.com/sofa-framework/sofa/pull/2309:458,Security,certificate,certificate-of-origin-dco,458,"Macro sofa_install_git_infos will install a file `git-infos.txt` in all modules that contain a `.git` in their sources.; This will help to keep track of versions within SOFA binaries. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2309
https://github.com/sofa-framework/sofa/pull/2309:723,Testability,test,test,723,"Macro sofa_install_git_infos will install a file `git-infos.txt` in all modules that contain a `.git` in their sources.; This will help to keep track of versions within SOFA binaries. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2309
https://github.com/sofa-framework/sofa/pull/2309:772,Testability,test,test,772,"Macro sofa_install_git_infos will install a file `git-infos.txt` in all modules that contain a `.git` in their sources.; This will help to keep track of versions within SOFA binaries. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2309
https://github.com/sofa-framework/sofa/pull/2310:601,Availability,failure,failures,601,"Should fix your infinite build issue @alxbilger :eyes: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2310
https://github.com/sofa-framework/sofa/pull/2310:650,Availability,failure,failures,650,"Should fix your infinite build issue @alxbilger :eyes: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2310
https://github.com/sofa-framework/sofa/pull/2310:220,Security,Certificate,Certificate,220,"Should fix your infinite build issue @alxbilger :eyes: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2310
https://github.com/sofa-framework/sofa/pull/2310:331,Security,certificate,certificate-of-origin-dco,331,"Should fix your infinite build issue @alxbilger :eyes: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2310
https://github.com/sofa-framework/sofa/pull/2310:596,Testability,test,test,596,"Should fix your infinite build issue @alxbilger :eyes: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2310
https://github.com/sofa-framework/sofa/pull/2310:645,Testability,test,test,645,"Should fix your infinite build issue @alxbilger :eyes: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2310
https://github.com/sofa-framework/sofa/pull/2311:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2311
https://github.com/sofa-framework/sofa/pull/2311:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2311
https://github.com/sofa-framework/sofa/pull/2311:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2311
https://github.com/sofa-framework/sofa/pull/2311:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2311
https://github.com/sofa-framework/sofa/pull/2311:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2311
https://github.com/sofa-framework/sofa/pull/2311:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2311
https://github.com/sofa-framework/sofa/pull/2312:558,Availability,failure,failures,558,"Fixes #2321 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2312
https://github.com/sofa-framework/sofa/pull/2312:607,Availability,failure,failures,607,"Fixes #2321 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2312
https://github.com/sofa-framework/sofa/pull/2312:177,Security,Certificate,Certificate,177,"Fixes #2321 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2312
https://github.com/sofa-framework/sofa/pull/2312:288,Security,certificate,certificate-of-origin-dco,288,"Fixes #2321 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2312
https://github.com/sofa-framework/sofa/pull/2312:553,Testability,test,test,553,"Fixes #2321 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2312
https://github.com/sofa-framework/sofa/pull/2312:602,Testability,test,test,602,"Fixes #2321 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2312
https://github.com/sofa-framework/sofa/pull/2313:575,Availability,failure,failures,575,"I suspect that it is not used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2313
https://github.com/sofa-framework/sofa/pull/2313:624,Availability,failure,failures,624,"I suspect that it is not used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2313
https://github.com/sofa-framework/sofa/pull/2313:194,Security,Certificate,Certificate,194,"I suspect that it is not used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2313
https://github.com/sofa-framework/sofa/pull/2313:305,Security,certificate,certificate-of-origin-dco,305,"I suspect that it is not used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2313
https://github.com/sofa-framework/sofa/pull/2313:570,Testability,test,test,570,"I suspect that it is not used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2313
https://github.com/sofa-framework/sofa/pull/2313:619,Testability,test,test,619,"I suspect that it is not used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2313
https://github.com/sofa-framework/sofa/pull/2314:292,Availability,down,downside,292,"Starting point for #2150 . Create a new module in SofaFramework called Sofa.LinearAlgebra, aiming to gather all structures related to linear algebra, i.e; stuff related to BaseMatrix & BaseVector.; To ensure maximum compatibility, this PR does not propagate the change to the whole SOFA. The downside of this is that SOFA cannot compile without the Sofa.Compat module for the moment (should be ok as the option is ON by default).; Further PRs:; - move tests as @alxbilger has well commented,; - move other *Matrix/Vector things from BTDLinear, etc; - split and create separate files for BlocFullMatrix; - and before the v21.12 release, effectively change the code base to only use sofa::linearalgebra and not the compatibility layer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2314
https://github.com/sofa-framework/sofa/pull/2314:1278,Availability,failure,failures,1278,"Starting point for #2150 . Create a new module in SofaFramework called Sofa.LinearAlgebra, aiming to gather all structures related to linear algebra, i.e; stuff related to BaseMatrix & BaseVector.; To ensure maximum compatibility, this PR does not propagate the change to the whole SOFA. The downside of this is that SOFA cannot compile without the Sofa.Compat module for the moment (should be ok as the option is ON by default).; Further PRs:; - move tests as @alxbilger has well commented,; - move other *Matrix/Vector things from BTDLinear, etc; - split and create separate files for BlocFullMatrix; - and before the v21.12 release, effectively change the code base to only use sofa::linearalgebra and not the compatibility layer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2314
https://github.com/sofa-framework/sofa/pull/2314:1327,Availability,failure,failures,1327,"Starting point for #2150 . Create a new module in SofaFramework called Sofa.LinearAlgebra, aiming to gather all structures related to linear algebra, i.e; stuff related to BaseMatrix & BaseVector.; To ensure maximum compatibility, this PR does not propagate the change to the whole SOFA. The downside of this is that SOFA cannot compile without the Sofa.Compat module for the moment (should be ok as the option is ON by default).; Further PRs:; - move tests as @alxbilger has well commented,; - move other *Matrix/Vector things from BTDLinear, etc; - split and create separate files for BlocFullMatrix; - and before the v21.12 release, effectively change the code base to only use sofa::linearalgebra and not the compatibility layer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2314
https://github.com/sofa-framework/sofa/pull/2314:627,Deployability,release,release,627,"Starting point for #2150 . Create a new module in SofaFramework called Sofa.LinearAlgebra, aiming to gather all structures related to linear algebra, i.e; stuff related to BaseMatrix & BaseVector.; To ensure maximum compatibility, this PR does not propagate the change to the whole SOFA. The downside of this is that SOFA cannot compile without the Sofa.Compat module for the moment (should be ok as the option is ON by default).; Further PRs:; - move tests as @alxbilger has well commented,; - move other *Matrix/Vector things from BTDLinear, etc; - split and create separate files for BlocFullMatrix; - and before the v21.12 release, effectively change the code base to only use sofa::linearalgebra and not the compatibility layer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2314
https://github.com/sofa-framework/sofa/pull/2314:897,Security,Certificate,Certificate,897,"Starting point for #2150 . Create a new module in SofaFramework called Sofa.LinearAlgebra, aiming to gather all structures related to linear algebra, i.e; stuff related to BaseMatrix & BaseVector.; To ensure maximum compatibility, this PR does not propagate the change to the whole SOFA. The downside of this is that SOFA cannot compile without the Sofa.Compat module for the moment (should be ok as the option is ON by default).; Further PRs:; - move tests as @alxbilger has well commented,; - move other *Matrix/Vector things from BTDLinear, etc; - split and create separate files for BlocFullMatrix; - and before the v21.12 release, effectively change the code base to only use sofa::linearalgebra and not the compatibility layer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2314
https://github.com/sofa-framework/sofa/pull/2314:1008,Security,certificate,certificate-of-origin-dco,1008,"Starting point for #2150 . Create a new module in SofaFramework called Sofa.LinearAlgebra, aiming to gather all structures related to linear algebra, i.e; stuff related to BaseMatrix & BaseVector.; To ensure maximum compatibility, this PR does not propagate the change to the whole SOFA. The downside of this is that SOFA cannot compile without the Sofa.Compat module for the moment (should be ok as the option is ON by default).; Further PRs:; - move tests as @alxbilger has well commented,; - move other *Matrix/Vector things from BTDLinear, etc; - split and create separate files for BlocFullMatrix; - and before the v21.12 release, effectively change the code base to only use sofa::linearalgebra and not the compatibility layer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2314
https://github.com/sofa-framework/sofa/pull/2314:452,Testability,test,tests,452,"Starting point for #2150 . Create a new module in SofaFramework called Sofa.LinearAlgebra, aiming to gather all structures related to linear algebra, i.e; stuff related to BaseMatrix & BaseVector.; To ensure maximum compatibility, this PR does not propagate the change to the whole SOFA. The downside of this is that SOFA cannot compile without the Sofa.Compat module for the moment (should be ok as the option is ON by default).; Further PRs:; - move tests as @alxbilger has well commented,; - move other *Matrix/Vector things from BTDLinear, etc; - split and create separate files for BlocFullMatrix; - and before the v21.12 release, effectively change the code base to only use sofa::linearalgebra and not the compatibility layer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2314
https://github.com/sofa-framework/sofa/pull/2314:1273,Testability,test,test,1273,"Starting point for #2150 . Create a new module in SofaFramework called Sofa.LinearAlgebra, aiming to gather all structures related to linear algebra, i.e; stuff related to BaseMatrix & BaseVector.; To ensure maximum compatibility, this PR does not propagate the change to the whole SOFA. The downside of this is that SOFA cannot compile without the Sofa.Compat module for the moment (should be ok as the option is ON by default).; Further PRs:; - move tests as @alxbilger has well commented,; - move other *Matrix/Vector things from BTDLinear, etc; - split and create separate files for BlocFullMatrix; - and before the v21.12 release, effectively change the code base to only use sofa::linearalgebra and not the compatibility layer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2314
https://github.com/sofa-framework/sofa/pull/2314:1322,Testability,test,test,1322,"Starting point for #2150 . Create a new module in SofaFramework called Sofa.LinearAlgebra, aiming to gather all structures related to linear algebra, i.e; stuff related to BaseMatrix & BaseVector.; To ensure maximum compatibility, this PR does not propagate the change to the whole SOFA. The downside of this is that SOFA cannot compile without the Sofa.Compat module for the moment (should be ok as the option is ON by default).; Further PRs:; - move tests as @alxbilger has well commented,; - move other *Matrix/Vector things from BTDLinear, etc; - split and create separate files for BlocFullMatrix; - and before the v21.12 release, effectively change the code base to only use sofa::linearalgebra and not the compatibility layer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2314
https://github.com/sofa-framework/sofa/issues/2315:0,Testability,Test,Tested,0,"Tested on Windows, VS 16 2019, Qt 5.15.2",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2315
https://github.com/sofa-framework/sofa/pull/2316:904,Availability,failure,failures,904,"https://github.com/sofa-framework/sofa/issues/1637. All in all, removes everything related to the ForceMask, which had been disabled (SOFA_ENABLE_MASK) for a long time.; It was also cauing bugs apparently to a lot of people. [ci-depends-on https://github.com/sofa-framework/Flexible/pull/1]; [ci-depends-on https://github.com/sofa-framework/Compliant/pull/1]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2316
https://github.com/sofa-framework/sofa/pull/2316:953,Availability,failure,failures,953,"https://github.com/sofa-framework/sofa/issues/1637. All in all, removes everything related to the ForceMask, which had been disabled (SOFA_ENABLE_MASK) for a long time.; It was also cauing bugs apparently to a lot of people. [ci-depends-on https://github.com/sofa-framework/Flexible/pull/1]; [ci-depends-on https://github.com/sofa-framework/Compliant/pull/1]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2316
https://github.com/sofa-framework/sofa/pull/2316:229,Integrability,depend,depends-on,229,"https://github.com/sofa-framework/sofa/issues/1637. All in all, removes everything related to the ForceMask, which had been disabled (SOFA_ENABLE_MASK) for a long time.; It was also cauing bugs apparently to a lot of people. [ci-depends-on https://github.com/sofa-framework/Flexible/pull/1]; [ci-depends-on https://github.com/sofa-framework/Compliant/pull/1]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2316
https://github.com/sofa-framework/sofa/pull/2316:296,Integrability,depend,depends-on,296,"https://github.com/sofa-framework/sofa/issues/1637. All in all, removes everything related to the ForceMask, which had been disabled (SOFA_ENABLE_MASK) for a long time.; It was also cauing bugs apparently to a lot of people. [ci-depends-on https://github.com/sofa-framework/Flexible/pull/1]; [ci-depends-on https://github.com/sofa-framework/Compliant/pull/1]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2316
https://github.com/sofa-framework/sofa/pull/2316:274,Modifiability,Flexible,Flexible,274,"https://github.com/sofa-framework/sofa/issues/1637. All in all, removes everything related to the ForceMask, which had been disabled (SOFA_ENABLE_MASK) for a long time.; It was also cauing bugs apparently to a lot of people. [ci-depends-on https://github.com/sofa-framework/Flexible/pull/1]; [ci-depends-on https://github.com/sofa-framework/Compliant/pull/1]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2316
https://github.com/sofa-framework/sofa/pull/2316:523,Security,Certificate,Certificate,523,"https://github.com/sofa-framework/sofa/issues/1637. All in all, removes everything related to the ForceMask, which had been disabled (SOFA_ENABLE_MASK) for a long time.; It was also cauing bugs apparently to a lot of people. [ci-depends-on https://github.com/sofa-framework/Flexible/pull/1]; [ci-depends-on https://github.com/sofa-framework/Compliant/pull/1]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2316
https://github.com/sofa-framework/sofa/pull/2316:634,Security,certificate,certificate-of-origin-dco,634,"https://github.com/sofa-framework/sofa/issues/1637. All in all, removes everything related to the ForceMask, which had been disabled (SOFA_ENABLE_MASK) for a long time.; It was also cauing bugs apparently to a lot of people. [ci-depends-on https://github.com/sofa-framework/Flexible/pull/1]; [ci-depends-on https://github.com/sofa-framework/Compliant/pull/1]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2316
https://github.com/sofa-framework/sofa/pull/2316:899,Testability,test,test,899,"https://github.com/sofa-framework/sofa/issues/1637. All in all, removes everything related to the ForceMask, which had been disabled (SOFA_ENABLE_MASK) for a long time.; It was also cauing bugs apparently to a lot of people. [ci-depends-on https://github.com/sofa-framework/Flexible/pull/1]; [ci-depends-on https://github.com/sofa-framework/Compliant/pull/1]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2316
https://github.com/sofa-framework/sofa/pull/2316:948,Testability,test,test,948,"https://github.com/sofa-framework/sofa/issues/1637. All in all, removes everything related to the ForceMask, which had been disabled (SOFA_ENABLE_MASK) for a long time.; It was also cauing bugs apparently to a lot of people. [ci-depends-on https://github.com/sofa-framework/Flexible/pull/1]; [ci-depends-on https://github.com/sofa-framework/Compliant/pull/1]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2316
https://github.com/sofa-framework/sofa/pull/2317:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2317
https://github.com/sofa-framework/sofa/pull/2317:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2317
https://github.com/sofa-framework/sofa/pull/2317:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2317
https://github.com/sofa-framework/sofa/pull/2317:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2317
https://github.com/sofa-framework/sofa/pull/2317:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2317
https://github.com/sofa-framework/sofa/pull/2317:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2317
https://github.com/sofa-framework/sofa/pull/2318:778,Availability,failure,failures,778,"Compiled modules before:. - tinyxml; - Sofa.Type; - Sofa.Helper; - Sofa.DefaultType; - Sofa.Core; - Sofa.SimulationCore; - Sofa.BaseTopology; - Sofa.BaseVisual. Compiled modules after:. - Sofa.Type; - Sofa.Helper; - Sofa.DefaultType. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2318
https://github.com/sofa-framework/sofa/pull/2318:827,Availability,failure,failures,827,"Compiled modules before:. - tinyxml; - Sofa.Type; - Sofa.Helper; - Sofa.DefaultType; - Sofa.Core; - Sofa.SimulationCore; - Sofa.BaseTopology; - Sofa.BaseVisual. Compiled modules after:. - Sofa.Type; - Sofa.Helper; - Sofa.DefaultType. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2318
https://github.com/sofa-framework/sofa/pull/2318:397,Security,Certificate,Certificate,397,"Compiled modules before:. - tinyxml; - Sofa.Type; - Sofa.Helper; - Sofa.DefaultType; - Sofa.Core; - Sofa.SimulationCore; - Sofa.BaseTopology; - Sofa.BaseVisual. Compiled modules after:. - Sofa.Type; - Sofa.Helper; - Sofa.DefaultType. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2318
https://github.com/sofa-framework/sofa/pull/2318:508,Security,certificate,certificate-of-origin-dco,508,"Compiled modules before:. - tinyxml; - Sofa.Type; - Sofa.Helper; - Sofa.DefaultType; - Sofa.Core; - Sofa.SimulationCore; - Sofa.BaseTopology; - Sofa.BaseVisual. Compiled modules after:. - Sofa.Type; - Sofa.Helper; - Sofa.DefaultType. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2318
https://github.com/sofa-framework/sofa/pull/2318:773,Testability,test,test,773,"Compiled modules before:. - tinyxml; - Sofa.Type; - Sofa.Helper; - Sofa.DefaultType; - Sofa.Core; - Sofa.SimulationCore; - Sofa.BaseTopology; - Sofa.BaseVisual. Compiled modules after:. - Sofa.Type; - Sofa.Helper; - Sofa.DefaultType. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2318
https://github.com/sofa-framework/sofa/pull/2318:822,Testability,test,test,822,"Compiled modules before:. - tinyxml; - Sofa.Type; - Sofa.Helper; - Sofa.DefaultType; - Sofa.Core; - Sofa.SimulationCore; - Sofa.BaseTopology; - Sofa.BaseVisual. Compiled modules after:. - Sofa.Type; - Sofa.Helper; - Sofa.DefaultType. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2318
https://github.com/sofa-framework/sofa/pull/2319:620,Availability,failure,failures,620,"- Move code to cpp; - Fix example scene; - Minor cleaning (constness, etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2319
https://github.com/sofa-framework/sofa/pull/2319:669,Availability,failure,failures,669,"- Move code to cpp; - Fix example scene; - Minor cleaning (constness, etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2319
https://github.com/sofa-framework/sofa/pull/2319:239,Security,Certificate,Certificate,239,"- Move code to cpp; - Fix example scene; - Minor cleaning (constness, etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2319
https://github.com/sofa-framework/sofa/pull/2319:350,Security,certificate,certificate-of-origin-dco,350,"- Move code to cpp; - Fix example scene; - Minor cleaning (constness, etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2319
https://github.com/sofa-framework/sofa/pull/2319:615,Testability,test,test,615,"- Move code to cpp; - Fix example scene; - Minor cleaning (constness, etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2319
https://github.com/sofa-framework/sofa/pull/2319:664,Testability,test,test,664,"- Move code to cpp; - Fix example scene; - Minor cleaning (constness, etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2319
https://github.com/sofa-framework/sofa/pull/2320:948,Availability,failure,failures,948,"""Fix"" the dreaded test UtilsTest.string_to_widestring_to_string; which pass only if the test has been launched with a UTF-8 locale. I tried setting TemporaryLocale to UTF-8 but it was still not working. ; (same with `setlocale(LC_ALL, ""en_US.UTF-8"");` coming directly from an example of cppreference). Last try was to simply avoid running the test if we detect the system is not UTF-8. Related to #2290. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2320
https://github.com/sofa-framework/sofa/pull/2320:997,Availability,failure,failures,997,"""Fix"" the dreaded test UtilsTest.string_to_widestring_to_string; which pass only if the test has been launched with a UTF-8 locale. I tried setting TemporaryLocale to UTF-8 but it was still not working. ; (same with `setlocale(LC_ALL, ""en_US.UTF-8"");` coming directly from an example of cppreference). Last try was to simply avoid running the test if we detect the system is not UTF-8. Related to #2290. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2320
https://github.com/sofa-framework/sofa/pull/2320:325,Safety,avoid,avoid,325,"""Fix"" the dreaded test UtilsTest.string_to_widestring_to_string; which pass only if the test has been launched with a UTF-8 locale. I tried setting TemporaryLocale to UTF-8 but it was still not working. ; (same with `setlocale(LC_ALL, ""en_US.UTF-8"");` coming directly from an example of cppreference). Last try was to simply avoid running the test if we detect the system is not UTF-8. Related to #2290. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2320
https://github.com/sofa-framework/sofa/pull/2320:354,Safety,detect,detect,354,"""Fix"" the dreaded test UtilsTest.string_to_widestring_to_string; which pass only if the test has been launched with a UTF-8 locale. I tried setting TemporaryLocale to UTF-8 but it was still not working. ; (same with `setlocale(LC_ALL, ""en_US.UTF-8"");` coming directly from an example of cppreference). Last try was to simply avoid running the test if we detect the system is not UTF-8. Related to #2290. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2320
https://github.com/sofa-framework/sofa/pull/2320:567,Security,Certificate,Certificate,567,"""Fix"" the dreaded test UtilsTest.string_to_widestring_to_string; which pass only if the test has been launched with a UTF-8 locale. I tried setting TemporaryLocale to UTF-8 but it was still not working. ; (same with `setlocale(LC_ALL, ""en_US.UTF-8"");` coming directly from an example of cppreference). Last try was to simply avoid running the test if we detect the system is not UTF-8. Related to #2290. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2320
https://github.com/sofa-framework/sofa/pull/2320:678,Security,certificate,certificate-of-origin-dco,678,"""Fix"" the dreaded test UtilsTest.string_to_widestring_to_string; which pass only if the test has been launched with a UTF-8 locale. I tried setting TemporaryLocale to UTF-8 but it was still not working. ; (same with `setlocale(LC_ALL, ""en_US.UTF-8"");` coming directly from an example of cppreference). Last try was to simply avoid running the test if we detect the system is not UTF-8. Related to #2290. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2320
https://github.com/sofa-framework/sofa/pull/2320:18,Testability,test,test,18,"""Fix"" the dreaded test UtilsTest.string_to_widestring_to_string; which pass only if the test has been launched with a UTF-8 locale. I tried setting TemporaryLocale to UTF-8 but it was still not working. ; (same with `setlocale(LC_ALL, ""en_US.UTF-8"");` coming directly from an example of cppreference). Last try was to simply avoid running the test if we detect the system is not UTF-8. Related to #2290. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2320
https://github.com/sofa-framework/sofa/pull/2320:88,Testability,test,test,88,"""Fix"" the dreaded test UtilsTest.string_to_widestring_to_string; which pass only if the test has been launched with a UTF-8 locale. I tried setting TemporaryLocale to UTF-8 but it was still not working. ; (same with `setlocale(LC_ALL, ""en_US.UTF-8"");` coming directly from an example of cppreference). Last try was to simply avoid running the test if we detect the system is not UTF-8. Related to #2290. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2320
https://github.com/sofa-framework/sofa/pull/2320:343,Testability,test,test,343,"""Fix"" the dreaded test UtilsTest.string_to_widestring_to_string; which pass only if the test has been launched with a UTF-8 locale. I tried setting TemporaryLocale to UTF-8 but it was still not working. ; (same with `setlocale(LC_ALL, ""en_US.UTF-8"");` coming directly from an example of cppreference). Last try was to simply avoid running the test if we detect the system is not UTF-8. Related to #2290. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2320
https://github.com/sofa-framework/sofa/pull/2320:943,Testability,test,test,943,"""Fix"" the dreaded test UtilsTest.string_to_widestring_to_string; which pass only if the test has been launched with a UTF-8 locale. I tried setting TemporaryLocale to UTF-8 but it was still not working. ; (same with `setlocale(LC_ALL, ""en_US.UTF-8"");` coming directly from an example of cppreference). Last try was to simply avoid running the test if we detect the system is not UTF-8. Related to #2290. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2320
https://github.com/sofa-framework/sofa/pull/2320:992,Testability,test,test,992,"""Fix"" the dreaded test UtilsTest.string_to_widestring_to_string; which pass only if the test has been launched with a UTF-8 locale. I tried setting TemporaryLocale to UTF-8 but it was still not working. ; (same with `setlocale(LC_ALL, ""en_US.UTF-8"");` coming directly from an example of cppreference). Last try was to simply avoid running the test if we detect the system is not UTF-8. Related to #2290. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2320
https://github.com/sofa-framework/sofa/pull/2320:318,Usability,simpl,simply,318,"""Fix"" the dreaded test UtilsTest.string_to_widestring_to_string; which pass only if the test has been launched with a UTF-8 locale. I tried setting TemporaryLocale to UTF-8 but it was still not working. ; (same with `setlocale(LC_ALL, ""en_US.UTF-8"");` coming directly from an example of cppreference). Last try was to simply avoid running the test if we detect the system is not UTF-8. Related to #2290. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2320
https://github.com/sofa-framework/sofa/pull/2321:775,Availability,failure,failures,775,"Only relevant to Windows. TetrahedronSetTopologyContainer's stream operators and especially Factory::logFactoryRegister() were throwing `inconsistent dll linkage` warnings (confusion of dllimport/dllexport).; This PR removes them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2321
https://github.com/sofa-framework/sofa/pull/2321:824,Availability,failure,failures,824,"Only relevant to Windows. TetrahedronSetTopologyContainer's stream operators and especially Factory::logFactoryRegister() were throwing `inconsistent dll linkage` warnings (confusion of dllimport/dllexport).; This PR removes them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2321
https://github.com/sofa-framework/sofa/pull/2321:394,Security,Certificate,Certificate,394,"Only relevant to Windows. TetrahedronSetTopologyContainer's stream operators and especially Factory::logFactoryRegister() were throwing `inconsistent dll linkage` warnings (confusion of dllimport/dllexport).; This PR removes them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2321
https://github.com/sofa-framework/sofa/pull/2321:505,Security,certificate,certificate-of-origin-dco,505,"Only relevant to Windows. TetrahedronSetTopologyContainer's stream operators and especially Factory::logFactoryRegister() were throwing `inconsistent dll linkage` warnings (confusion of dllimport/dllexport).; This PR removes them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2321
https://github.com/sofa-framework/sofa/pull/2321:101,Testability,log,logFactoryRegister,101,"Only relevant to Windows. TetrahedronSetTopologyContainer's stream operators and especially Factory::logFactoryRegister() were throwing `inconsistent dll linkage` warnings (confusion of dllimport/dllexport).; This PR removes them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2321
https://github.com/sofa-framework/sofa/pull/2321:770,Testability,test,test,770,"Only relevant to Windows. TetrahedronSetTopologyContainer's stream operators and especially Factory::logFactoryRegister() were throwing `inconsistent dll linkage` warnings (confusion of dllimport/dllexport).; This PR removes them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2321
https://github.com/sofa-framework/sofa/pull/2321:819,Testability,test,test,819,"Only relevant to Windows. TetrahedronSetTopologyContainer's stream operators and especially Factory::logFactoryRegister() were throwing `inconsistent dll linkage` warnings (confusion of dllimport/dllexport).; This PR removes them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2321
https://github.com/sofa-framework/sofa/pull/2322:802,Availability,failure,failures,802,"Suggestion of buttons to expand all or collapse all in the scene graph view. https://user-images.githubusercontent.com/10572752/132018160-1192c958-1300-4ef3-b92a-3f0a0c10ae29.mp4. Note that the same feature already exists by right clicking on the root node. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2322
https://github.com/sofa-framework/sofa/pull/2322:851,Availability,failure,failures,851,"Suggestion of buttons to expand all or collapse all in the scene graph view. https://user-images.githubusercontent.com/10572752/132018160-1192c958-1300-4ef3-b92a-3f0a0c10ae29.mp4. Note that the same feature already exists by right clicking on the root node. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2322
https://github.com/sofa-framework/sofa/pull/2322:421,Security,Certificate,Certificate,421,"Suggestion of buttons to expand all or collapse all in the scene graph view. https://user-images.githubusercontent.com/10572752/132018160-1192c958-1300-4ef3-b92a-3f0a0c10ae29.mp4. Note that the same feature already exists by right clicking on the root node. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2322
https://github.com/sofa-framework/sofa/pull/2322:532,Security,certificate,certificate-of-origin-dco,532,"Suggestion of buttons to expand all or collapse all in the scene graph view. https://user-images.githubusercontent.com/10572752/132018160-1192c958-1300-4ef3-b92a-3f0a0c10ae29.mp4. Note that the same feature already exists by right clicking on the root node. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2322
https://github.com/sofa-framework/sofa/pull/2322:797,Testability,test,test,797,"Suggestion of buttons to expand all or collapse all in the scene graph view. https://user-images.githubusercontent.com/10572752/132018160-1192c958-1300-4ef3-b92a-3f0a0c10ae29.mp4. Note that the same feature already exists by right clicking on the root node. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2322
https://github.com/sofa-framework/sofa/pull/2322:846,Testability,test,test,846,"Suggestion of buttons to expand all or collapse all in the scene graph view. https://user-images.githubusercontent.com/10572752/132018160-1192c958-1300-4ef3-b92a-3f0a0c10ae29.mp4. Note that the same feature already exists by right clicking on the root node. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2322
https://github.com/sofa-framework/sofa/pull/2323:935,Availability,failure,failures,935,"Since CRS matrix are now optimized when inserting a 3x3 block, it is no longer necessary to have branches in force fields, where a branch is selected based on the type of matrix.; The virtual call to `add` is generic, but leads to the optimized matrix insertion. I did not notice any significant performances changes in the scenes located in `examples\Benchmark\Performance\MatrixAssembly`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2323
https://github.com/sofa-framework/sofa/pull/2323:984,Availability,failure,failures,984,"Since CRS matrix are now optimized when inserting a 3x3 block, it is no longer necessary to have branches in force fields, where a branch is selected based on the type of matrix.; The virtual call to `add` is generic, but leads to the optimized matrix insertion. I did not notice any significant performances changes in the scenes located in `examples\Benchmark\Performance\MatrixAssembly`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2323
https://github.com/sofa-framework/sofa/pull/2323:25,Performance,optimiz,optimized,25,"Since CRS matrix are now optimized when inserting a 3x3 block, it is no longer necessary to have branches in force fields, where a branch is selected based on the type of matrix.; The virtual call to `add` is generic, but leads to the optimized matrix insertion. I did not notice any significant performances changes in the scenes located in `examples\Benchmark\Performance\MatrixAssembly`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2323
https://github.com/sofa-framework/sofa/pull/2323:235,Performance,optimiz,optimized,235,"Since CRS matrix are now optimized when inserting a 3x3 block, it is no longer necessary to have branches in force fields, where a branch is selected based on the type of matrix.; The virtual call to `add` is generic, but leads to the optimized matrix insertion. I did not notice any significant performances changes in the scenes located in `examples\Benchmark\Performance\MatrixAssembly`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2323
https://github.com/sofa-framework/sofa/pull/2323:296,Performance,perform,performances,296,"Since CRS matrix are now optimized when inserting a 3x3 block, it is no longer necessary to have branches in force fields, where a branch is selected based on the type of matrix.; The virtual call to `add` is generic, but leads to the optimized matrix insertion. I did not notice any significant performances changes in the scenes located in `examples\Benchmark\Performance\MatrixAssembly`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2323
https://github.com/sofa-framework/sofa/pull/2323:362,Performance,Perform,Performance,362,"Since CRS matrix are now optimized when inserting a 3x3 block, it is no longer necessary to have branches in force fields, where a branch is selected based on the type of matrix.; The virtual call to `add` is generic, but leads to the optimized matrix insertion. I did not notice any significant performances changes in the scenes located in `examples\Benchmark\Performance\MatrixAssembly`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2323
https://github.com/sofa-framework/sofa/pull/2323:554,Security,Certificate,Certificate,554,"Since CRS matrix are now optimized when inserting a 3x3 block, it is no longer necessary to have branches in force fields, where a branch is selected based on the type of matrix.; The virtual call to `add` is generic, but leads to the optimized matrix insertion. I did not notice any significant performances changes in the scenes located in `examples\Benchmark\Performance\MatrixAssembly`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2323
https://github.com/sofa-framework/sofa/pull/2323:665,Security,certificate,certificate-of-origin-dco,665,"Since CRS matrix are now optimized when inserting a 3x3 block, it is no longer necessary to have branches in force fields, where a branch is selected based on the type of matrix.; The virtual call to `add` is generic, but leads to the optimized matrix insertion. I did not notice any significant performances changes in the scenes located in `examples\Benchmark\Performance\MatrixAssembly`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2323
https://github.com/sofa-framework/sofa/pull/2323:352,Testability,Benchmark,Benchmark,352,"Since CRS matrix are now optimized when inserting a 3x3 block, it is no longer necessary to have branches in force fields, where a branch is selected based on the type of matrix.; The virtual call to `add` is generic, but leads to the optimized matrix insertion. I did not notice any significant performances changes in the scenes located in `examples\Benchmark\Performance\MatrixAssembly`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2323
https://github.com/sofa-framework/sofa/pull/2323:930,Testability,test,test,930,"Since CRS matrix are now optimized when inserting a 3x3 block, it is no longer necessary to have branches in force fields, where a branch is selected based on the type of matrix.; The virtual call to `add` is generic, but leads to the optimized matrix insertion. I did not notice any significant performances changes in the scenes located in `examples\Benchmark\Performance\MatrixAssembly`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2323
https://github.com/sofa-framework/sofa/pull/2323:979,Testability,test,test,979,"Since CRS matrix are now optimized when inserting a 3x3 block, it is no longer necessary to have branches in force fields, where a branch is selected based on the type of matrix.; The virtual call to `add` is generic, but leads to the optimized matrix insertion. I did not notice any significant performances changes in the scenes located in `examples\Benchmark\Performance\MatrixAssembly`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2323
https://github.com/sofa-framework/sofa/pull/2324:582,Availability,failure,failures,582,"Fix a typo pointed by Julien Ducrocq. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2324
https://github.com/sofa-framework/sofa/pull/2324:631,Availability,failure,failures,631,"Fix a typo pointed by Julien Ducrocq. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2324
https://github.com/sofa-framework/sofa/pull/2324:201,Security,Certificate,Certificate,201,"Fix a typo pointed by Julien Ducrocq. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2324
https://github.com/sofa-framework/sofa/pull/2324:312,Security,certificate,certificate-of-origin-dco,312,"Fix a typo pointed by Julien Ducrocq. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2324
https://github.com/sofa-framework/sofa/pull/2324:577,Testability,test,test,577,"Fix a typo pointed by Julien Ducrocq. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2324
https://github.com/sofa-framework/sofa/pull/2324:626,Testability,test,test,626,"Fix a typo pointed by Julien Ducrocq. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2324
https://github.com/sofa-framework/sofa/pull/2325:706,Availability,failure,failures,706,"This is an example where a direct solver is not supported. https://user-images.githubusercontent.com/10572752/132351450-f862fa65-1821-4d2b-9c07-57bfedd5163e.mp4. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2325
https://github.com/sofa-framework/sofa/pull/2325:755,Availability,failure,failures,755,"This is an example where a direct solver is not supported. https://user-images.githubusercontent.com/10572752/132351450-f862fa65-1821-4d2b-9c07-57bfedd5163e.mp4. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2325
https://github.com/sofa-framework/sofa/pull/2325:325,Security,Certificate,Certificate,325,"This is an example where a direct solver is not supported. https://user-images.githubusercontent.com/10572752/132351450-f862fa65-1821-4d2b-9c07-57bfedd5163e.mp4. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2325
https://github.com/sofa-framework/sofa/pull/2325:436,Security,certificate,certificate-of-origin-dco,436,"This is an example where a direct solver is not supported. https://user-images.githubusercontent.com/10572752/132351450-f862fa65-1821-4d2b-9c07-57bfedd5163e.mp4. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2325
https://github.com/sofa-framework/sofa/pull/2325:701,Testability,test,test,701,"This is an example where a direct solver is not supported. https://user-images.githubusercontent.com/10572752/132351450-f862fa65-1821-4d2b-9c07-57bfedd5163e.mp4. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2325
https://github.com/sofa-framework/sofa/pull/2325:750,Testability,test,test,750,"This is an example where a direct solver is not supported. https://user-images.githubusercontent.com/10572752/132351450-f862fa65-1821-4d2b-9c07-57bfedd5163e.mp4. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2325
https://github.com/sofa-framework/sofa/pull/2326:812,Availability,failure,failures,812,"They were failing since the introduction of 2 warning messages if one was not explicitly defining an AnimationLoop and a VisualLoop. I've also adding some comment on a test and using a string litteral instead of the ugly stringstream when describing the scene in xml. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2326
https://github.com/sofa-framework/sofa/pull/2326:861,Availability,failure,failures,861,"They were failing since the introduction of 2 warning messages if one was not explicitly defining an AnimationLoop and a VisualLoop. I've also adding some comment on a test and using a string litteral instead of the ugly stringstream when describing the scene in xml. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2326
https://github.com/sofa-framework/sofa/pull/2326:54,Integrability,message,messages,54,"They were failing since the introduction of 2 warning messages if one was not explicitly defining an AnimationLoop and a VisualLoop. I've also adding some comment on a test and using a string litteral instead of the ugly stringstream when describing the scene in xml. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2326
https://github.com/sofa-framework/sofa/pull/2326:431,Security,Certificate,Certificate,431,"They were failing since the introduction of 2 warning messages if one was not explicitly defining an AnimationLoop and a VisualLoop. I've also adding some comment on a test and using a string litteral instead of the ugly stringstream when describing the scene in xml. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2326
https://github.com/sofa-framework/sofa/pull/2326:542,Security,certificate,certificate-of-origin-dco,542,"They were failing since the introduction of 2 warning messages if one was not explicitly defining an AnimationLoop and a VisualLoop. I've also adding some comment on a test and using a string litteral instead of the ugly stringstream when describing the scene in xml. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2326
https://github.com/sofa-framework/sofa/pull/2326:168,Testability,test,test,168,"They were failing since the introduction of 2 warning messages if one was not explicitly defining an AnimationLoop and a VisualLoop. I've also adding some comment on a test and using a string litteral instead of the ugly stringstream when describing the scene in xml. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2326
https://github.com/sofa-framework/sofa/pull/2326:807,Testability,test,test,807,"They were failing since the introduction of 2 warning messages if one was not explicitly defining an AnimationLoop and a VisualLoop. I've also adding some comment on a test and using a string litteral instead of the ugly stringstream when describing the scene in xml. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2326
https://github.com/sofa-framework/sofa/pull/2326:856,Testability,test,test,856,"They were failing since the introduction of 2 warning messages if one was not explicitly defining an AnimationLoop and a VisualLoop. I've also adding some comment on a test and using a string litteral instead of the ugly stringstream when describing the scene in xml. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2326
https://github.com/sofa-framework/sofa/pull/2327:609,Availability,failure,failures,609,"Option to add the SOFA scene as a project in the build solution. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2327
