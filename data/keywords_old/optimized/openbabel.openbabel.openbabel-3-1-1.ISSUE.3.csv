quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Safety,Gasteiger charge calculation should avoid use of GetType,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1760:36,avoid,avoid,36,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1760,1,['avoid'],['avoid']
Safety,Geminal diols have incorrect implicit Hs detected,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1035:41,detect,detected,41,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1035,1,['detect'],['detected']
Safety,Graph symmetry detection never finishes for PubChem molecule,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/374:15,detect,detection,15,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/374,1,['detect'],['detection']
Safety,"Greetings openbabel developers and contributors,. We’re reaching out because your project is an important part of the open source ecosystem, and we’d like to invite you to integrate with our [fuzzing](https://www.owasp.org/index.php/Fuzzing) service, [OSS-Fuzz]( https://opensource.googleblog.com/2016/12/announcing-oss-fuzz-continuous-fuzzing.html ). OSS-Fuzz is a free fuzzing infrastructure you can use to identify security vulnerabilities and stability bugs in your project. OSS-Fuzz will:. - Continuously run at scale all the fuzzers you write.; - Alert you when it finds issues.; - Automatically close issues after they’ve been fixed by a commit. Many widely used [open source projects]( https://github.com/google/oss-fuzz/tree/master/projects ) like OpenSSL, FFmpeg, LibreOffice, and ImageMagick are fuzzing via OSS-Fuzz, which helps them find and remediate [critical issues]( https://bugs.chromium.org/p/oss-fuzz/issues/list?can=1&q=status%3AFixed%2CVerified+Type%3ABug%2CBug-Security+-component%3AInfra+ ). . Even though typical integrations can be done in < 100 LoC, we have a [reward program]( https://www.google.com/about/appsecurity/patch-rewards/ ) in place which aims to recognize folks who are not just contributing to open source, but are also working hard to make it more secure. We want to stress that anyone who meets the eligibility criteria and integrates a project with OSS-Fuzz is eligible for a reward. To help you getting started, we can attach our internal fuzzer for your project that you are welcome to use directly, or to use it as a starting point. If you're not interested in integrating with OSS-Fuzz, it would be helpful for us to understand why—lack of interest, lack of time, or something else—so we can better support projects like yours in the future. If we’ve missed your question in our [FAQ]( https://google.github.io/oss-fuzz/faq/ ), feel free to reply or reach out to us at oss-fuzz-outreach@googlegroups.com. Thanks!. Tommy; OSS-Fuzz Team",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2135:855,remediat,remediate,855,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2135,1,['remediat'],['remediate']
Safety,"Hello guys !!!! i'm trying to use the following script : . #!/bin/bash; #; #SBATCH --job-name=index_human; #SBATCH --partition=all; #SBATCH --ntasks=1; #SBATCH --cpus-per-task=10; #SBATCH --mail-user=ivanamango@gmail.com; #SBATCH --cpu-bind=rank; #SBATCH --mail-type=ALL; #SBATCH --hint=compute_bound. module load STAR/2.6.0c. srun /opt/STAR/bin/STAR --runMode genomeGenerate --runThreadN 10 --genomeDir Genomes_STAR --genomeFastaFiles Genomi/Homo_sapiens.GRCh38.dna.primary_assembly.fa --sjdbGTFfile GTF_files/Homo_sapiens.GRCh38.96.gtf --limitGenomeGenerateRAM 152003700778$. when i run it this is the error : ; Dec 13 08:56:22 ..... started STAR run; Dec 13 08:56:22 ... starting to generate Genome files; Dec 13 08:57:27 ... starting to sort Suffix Array. This may take a long time...; Dec 13 08:57:45 ... sorting Suffix Array chunks and saving them to disk...; slurmstepd-falkor7: error: Step 1141810.0 exceeded memory limit (52917772 > 20971520), being killed; srun: Exceeded job memory limit; slurmstepd-falkor7: error: *** STEP 1141810.0 ON falkor7 CANCELLED AT 2023-12-13T08:58:22 ***; srun: Job step aborted: Waiting up to 32 seconds for job step to finish.; srun: error: falkor7: task 0: Killed. How can i resolve it ? . Thanks to everyone !!!!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2657:1110,abort,aborted,1110,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2657,1,['abort'],['aborted']
Safety,"Hello guys !!!! i'm trying to use the following script :. #!/bin/bash. #SBATCH --job-name=index_human; #SBATCH --partition=all; #SBATCH --ntasks=1; #SBATCH --cpus-per-task=10; #SBATCH --mail-user=[ivanamango@gmail.com](mailto:ivanamango@gmail.com); #SBATCH --cpu-bind=rank; #SBATCH --mail-type=ALL; #SBATCH --hint=compute_bound. module load STAR/2.6.0c. srun /opt/STAR/bin/STAR --runMode genomeGenerate --runThreadN 10 --genomeDir Genomes_STAR --genomeFastaFiles Genomi/Homo_sapiens.GRCh38.dna.primary_assembly.fa --sjdbGTFfile GTF_files/Homo_sapiens.GRCh38.96.gtf --limitGenomeGenerateRAM 152003700778$. when i run it this is the error :; Dec 13 08:56:22 ..... started STAR run; Dec 13 08:56:22 ... starting to generate Genome files; Dec 13 08:57:27 ... starting to sort Suffix Array. This may take a long time...; Dec 13 08:57:45 ... sorting Suffix Array chunks and saving them to disk...; slurmstepd-falkor7: error: Step 1141810.0 exceeded memory limit (52917772 > 20971520), being killed; srun: Exceeded job memory limit; slurmstepd-falkor7: error: *** STEP 1141810.0 ON falkor7 CANCELLED AT 2023-12-13T08:58:22 ***; srun: Job step aborted: Waiting up to 32 seconds for job step to finish.; srun: error: falkor7: task 0: Killed. How can i resolve it ?. Thanks to everyone !!!!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2658:1136,abort,aborted,1136,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2658,1,['abort'],['aborted']
Safety,"Hi All,. the builder fails on building 3d (example code below) for smiles: N12[C@@H]([C@@H](NC([C@@H](c3ccsc3)C(=O)O)=O)C2=O)SC(C)(C)[C@@-]1C(=O)O; Message is:. terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check; Aborted. Best regards,; Martin. P.S.:; * I am using ob 2.3.0.; * It works if the rotation info (@@) is removed.; * The smiles is from a well known bbb dataset: http://www.cheminformatics.org/datasets/#perm, first in list. #include <iostream>; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>; #include <openbabel/builder.h>. using namespace std;; using namespace OpenBabel;. int main(int argc,char **argv); {; 	OBMol * mol = new OBMol();; 	OBConversion obconversion;; 	obconversion.SetInFormat(""smiles"");; 	//obconversion.ReadString(mol, ""C1(N=C(NC(C)C)N=C(N=1)OC)NC(C)C"");; 	obconversion.ReadString(mol,; 	""N12[C@@H]([C@@H](NC([C@@H](c3ccsc3)C(=O)O)=O)C2=O)SC(C)(C)[C@@-]1C(=O)O"");; 	cout << ""formula ""<< mol->GetFormula() << ""\n"";; 	cout << ""Has3D: "" << mol->Has3D() << ""\n"";; 	OBBuilder builder;; 	builder.Build(*mol);; 	cout << ""Has3D: "" << mol->Has3D() << ""\n"";; 	delete(mol);; 	return 0;; }. Reported by: martinguetlein",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1051:261,Abort,Aborted,261,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1051,1,['Abort'],['Aborted']
Safety,"Hi,. I found a bug when trying to use OBRotor objects in Python openbabel library.; Everytime I call a method of this objects I get a warning. swig/python detected a memory leak of type 'std::vector< OpenBabel::OBRotor *,std::allocator< OpenBabel::OBRotor * > >::iterator *', no destructor found. My code is something like this:; 	rbonds = openbabel.OBRotorList(); 	rbonds.Setup(mol). 	rotor = rbonds.BeginRotor(rbonds.BeginRotors()); 	for i in range(rbonds.Size()):; 		print rotor.Size(); 		rotor = rbonds.NextRotor(rbonds.BeginRotors()). []'s. Reported by: hmcezar. Original Ticket: [openbabel/bugs/961](https://sourceforge.net/p/openbabel/bugs/961)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1340:155,detect,detected,155,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1340,1,['detect'],['detected']
Safety,"Hi,; I am converting the RNA PDB file built by Maestro to pdbqt. `ls 1KOC_clean.pdb | xargs /usr/local/bin/obabel -xcr -ipdb -opdbqt | tee receptor.pdbqt`. However, this conversion prints the ""ROOT"" keyword in pdbqt file and vina. ; ```. PDBQT parsing error: Unknown or inappropriate tag found in the rigid receptor.; > ROOT; ```. Although this is not openbabel related, is there any solution to avoid ROOT keyword?. Thanks!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2514:396,avoid,avoid,396,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2514,1,['avoid'],['avoid']
Safety,"Hi,; the smi to sdf converter creates some funny atoms; in SDF which are not covered in CTFile Formats (SYMYX); At least I could not find QNB. This happens if one uses ""create 3D coordinates"" in OB 2.2.0 GUI (WIN). N#Cc1cscn1 generates. OpenBabel07080813553D. 7 6 0 0 0 0 0 0 0 0999 V2000; 1.0000 0.0000 0.0000 N 0 0 0 0 0; 2.5000 0.0000 0.0000 C 0 0 0 0 0; 4.0000 0.0000 0.0000 C 0 0 0 0 0; -1.#IND -1.#IND -1.#IND C 0 0 0 0 0; 1.#QNB 1.#QNB 1.#QNB S 0 0 0 0 0; 1.#QNB 1.#QNB 1.#QNB C 0 0 0 0 0; -1.#IND -1.#IND -1.#IND N 0 0 0 0 0; 1 2 3 0 0 0; 2 3 1 0 0 0; 3 4 2 0 0 0; 3 7 1 0 0 0; 4 5 1 0 0 0; 5 6 1 0 0 0; M END; $$$$. There are other examples with similar errors; see SMILES in ct0500287si20050211_120157.xls; http://www.google.com/search?num=100&hl=en&safe=active&q=ct0500287si20050211_120157.xls&btnG=Search. Cheers; Tobias. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793:760,safe,safe,760,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793,1,['safe'],['safe']
Safety,"Hi. I have a core dump with openbabel 2.0.2 (Abort trap) on OpenBSD under amd64; when running:; $ babel -icml cs2a.cml -omdl cs2a.mol. I have no idea how to fix this really, but here's a backtrace that might; give you a hint. (gdb) run -icml cs2a.cml -omdl cs2a.mol; Starting program: ; /home/ajacoutot/misc/openbabel/w-openbabel-2.0.2/openbabel-2.0.2/src/.libs/babel -icml cs2a.cml -omdl cs2a.mol. Program received signal SIGABRT, Aborted.; 0x0000000049584cea in kill () from /usr/lib/libc.so.40.3; (gdb) bt; #0 0x0000000049584cea in kill () from /usr/lib/libc.so.40.3; #1 0x00000000495c7f40 in __stack_smash_handler (func=0x595e5980 ""bool OpenBabel::XMLConversion::ReadXML(OpenBabel::XMLBaseFormat*, OpenBabel::OBBase*)"", damaged=6) at /usr/src/lib/libc/sys/stack_protector.c:89; #2 0x00000000594dde33 in OpenBabel::XMLConversion::ReadXML(OpenBabel::XMLBaseFormat*, OpenBabel::OBBase*) (this=0x48bde800,pFormat=0x598f16a0, pOb=0x4e3fc100) at xml.cpp:226; #3 0x00000000594d4ef8 in OpenBabel::XMLMoleculeFormat::ReadMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*) (this=0x598f16a0, pOb=0x4e3fc100, pConv=0x7f7ffffc9e70) at xml.h:228; #4 0x00000000594d515b in OpenBabel::XMLMoleculeFormat::ReadChemObject(OpenBabel::OBConversion*) (this=0x598f16a0, pConv=0x7f7ffffc9e70) at xml.h:208; #5 0x000000004c89a5f6 in OpenBabel::OBConversion::Convert() (this=0x7f7ffffc9e70) at obconversion.cpp:491; #6 0x000000004c89a388 in OpenBabel::OBConversion::Convert(std::istream*, std::ostream*) (this=0x7f7ffffc9e70,is=0x7f7ffffc8bb0, os=0x7f7ffffc8860) at obconversion.cpp:434; #7 0x000000004c89c5ca in OpenBabel::OBConversion::FullConvert(std::vector<std::string, std::allocator<std::string> >&, std::string&, std::vector<std::string, std::allocator<std::string> >&) (this=0x7f7ffffc9e70, FileList=@0x7f7ffffc9e30, OutputFileName=@0x7f7ffffc9e20, OutputFileList=@0x7f7ffffc9e00) at obconversion.cpp:1096; #8 0x0000000000403f15 in main (argc=5, argv=0x7f7ffffca250) at main.cpp:340. Reported by: ajacoutot",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/592:45,Abort,Abort,45,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592,2,['Abort'],"['Abort', 'Aborted']"
Safety,How is the edge predicted? May I have the reference of this method? ; ![18](https://user-images.githubusercontent.com/95841534/220348774-d7fd1374-e694-4697-a888-f52ea86722fd.png),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2572:16,predict,predicted,16,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2572,1,['predict'],['predicted']
Safety,"I am trying to get openbabel to compile on Mac OS X because I need the Python bindings. In general, I can get most of openbabel with python bindings working using the instructions I have written in this page: http://pythonhosted.org/pymatgen/installation.html#installation-tips-for-optional-libraries. Pls note that I have since upgraded to openbabel 2.3.2 and eigen3. However, it seems that eigen3 is not detected at all. When I do . import openbabel as ob; ob.OBAlign. I get an AttributeError. Switching back to eigen2 did not work either. . Can someone advise on how to get openbabel with python working properly on a Mac? I would also suggest making those instructions available somewhere. SP. Reported by: shyuep. Original Ticket: [openbabel/bugs/883](https://sourceforge.net/p/openbabel/bugs/883)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1263:406,detect,detected,406,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1263,1,['detect'],['detected']
Safety,"I am using openbabel 3.0.0 and I would like to convert a mol2 file to a cml file whilst maintaining the atom names in the mol2 file. For instance in the example below I would like the label 'O1' for atom 1 in the mol2 file to carry over to the cml file. However, when I do the conversion using openbabel, the names of the atoms are overwritten, so for instance ""O1"" becomes ""a1"". Is there any way I can avoid this? . Maintaining the atom names should compatible with the CML [schema](http://www.xml-cml.org/schema/schema3/), since they conform to the pattern value ""[A-Za-z][A-Za-z0-9_\.\-]*"" . My INPUT MOL2 FILE is:. @<TRIPOS>MOLECULE; *****; 3 2 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O1 -8.7156 2.6803 0.0000 O.3 1 HOH1 -0.4105; 2 H2 -7.7456 2.6803 0.0000 H 0 HOH0 0.2052; 3 H3 -9.0389 1.9702 0.5763 H 0 HOH0 0.2052; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1. The CURRENT CML OUTPUT FILE is:; ```xml; <?xml version=""1.0""?>; <molecule id=""id*****"" xmlns=""http://www.xml-cml.org/schema"">; <atomArray>; <atom id=""a1"" elementType=""O"" hydrogenCount=""2"" x3=""-8.715600"" y3=""2.680300"" z3=""0.000000""/>; <atom id=""a2"" elementType=""H"" hydrogenCount=""0"" x3=""-7.745600"" y3=""2.680300"" z3=""0.000000""/>; <atom id=""a3"" elementType=""H"" hydrogenCount=""0"" x3=""-9.038900"" y3=""1.970200"" z3=""0.576300""/>; </atomArray>; <bondArray>; <bond atomRefs2=""a1 a2"" order=""1""/>; <bond atomRefs2=""a1 a3"" order=""1""/>; </bondArray>; </molecule>; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2120:403,avoid,avoid,403,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2120,1,['avoid'],['avoid']
Safety,"I believe this to be a bug with Open Babel. To me it seems as resurfacing of #1851 on arm64 architecture. ## Environment Information; Open Babel version: 3.1.1+dfsg-6, as packaged in Debian; Operating system and version: Debian unstable a.k.a. sid. ## Expected Behavior; * The following results in a valid SDF file:; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ```; * The following test passes:; ```bash; $ python3 test/testbindings.py TestSuite.testTemplates; ```. ## Actual Behavior; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ==============================; *** Open Babel Error in Convert; Convert failed with an exception; 0 molecules converted; $ python3 test/testbindings.py TestSuite.testTemplates; testTemplates (__main__.TestSuite); Check for regressions to #1851 ... terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8); Aborted; ```; The failure is observed on arm64 architecture. Tested also on amd64 and mipsel, both worked fine.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2417:1021,Abort,Aborted,1021,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417,1,['Abort'],['Aborted']
Safety,"I break the -at option in a local build, and make test failed to detect; the breakage. Add a regression test for it.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/183:65,detect,detect,65,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/183,1,['detect'],['detect']
Safety,"I fixed two problems:; - the fingerprint was being resized to 0 with an initial Clear() so nothing was returned.; - there was an off-by-one when using the atom Idx() to address AtomInfo. This was in the code to handle the nbrs, and lead to an out-of-bounds memory access (with random values sometimes appearing in the fingerprint). As a general principle, rather than subtracting one from atom indices, we should just use them as provided, and instead increase the size of the referenced data structures by 1. This avoids this sort of error, where you remember to subtract 1 in one place but not another.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1829:515,avoid,avoids,515,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1829,1,['avoid'],['avoids']
Safety,"I have noticed that for certain species, hydrogens appear to be incorrectly added to certain species containing oxygen or nitrogen during the InChI to SMILES conversion. It is possible that there is some option that I am missing, and this is not a bug...if this is the case, please let me know how I can avoid this issue. I have pasted several (hopefully)representative examples below. If more examples are needed, I can provide them. InChI=1/C2H3N3/c1-2-4-5-3/h2H,1H2; SMILES output: [NH-]=[N+]=NC=C. InChI=1/C2HN/c1-2-3/h1H; SMILES: [NH-]=C=[CH2+]. InChI=1/C2HNO/c1-3-2-4/h2H; SMILES: [C-]#[NH+]C=O. InChI=1/CO/c1-2; SMILES: [C-]#[OH2+]. InChI=1/N2O/c1-2-3; SMILES: [NH-]=[N+]=O. InChI=1/N3/c1-3-2; SMILES: [NH-]=[N+]=[N]. InChI=1/NO/c1-2/q+1; SMILES: N#[OH2+]. InChI=1/O/q-2; SMILES: [OH2-2]. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/813:304,avoid,avoid,304,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/813,1,['avoid'],['avoid']
Safety,"I have some probles hen converting data from g03 output to mol2. 1. I have problems with C.cat atoms ( from guanidinium ) that are not detected. In the file mol8_min.mol2, atom C25 ( index 35 ) has been assigned to C.2 and not to a C.cat.; If I do the same test with the old babel 1.6 I have the good assignation. I used :; - Linux UBUNTU; - g77 compiler; - openbabel 2.1.1. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/680:135,detect,detected,135,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/680,1,['detect'],['detected']
Safety,I just found that the position of ifs.peek() is moved 1 character forward after ifs.tellg() called. And that's the reason of issue #1569. Therefore I rewrote tail blank line removing codes to avoid use of ifs.peek().,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1755:192,avoid,avoid,192,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1755,1,['avoid'],['avoid']
Safety,"I spent quite a bit of time debugging obabel on the Mac, and was seeing issues with an illegal instruction pretty early on as obabel started up. This was a pretty difficult one to debug as everything worked fine on the build machine, but I got a very generic error 14 on my laptop when trying to use the packaged obabel, in the end I found the answer through searching on Google and seeing a similar issue for Docker. CMake and the upstream compilers don't enable this by default as the binaries can be quite specific for the GPU you are building on. In this case it was a pretty new Mac Pro, and trying to run them on an older Macbook Pro laptop. The comments seem incorrect too, as they have little to do with cross compiling and more to do with optimizations for the specific CPU on the build machine. I think adding a section on optimization, and advising to turn this on there (with a big warning about the binaries being quite CPU dependent at that stage) would be great, but please consider turning this off by default to avoid having others spend time debugging strange run time errors.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/279:1029,avoid,avoid,1029,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/279,1,['avoid'],['avoid']
Safety,"I tried to compile openbabel from github (5f0837...) on OSX 10.9 Mavericks with python extensions, using anaconda python. By default, cmake picks Apple's libpython2.7.dylib to compile the python extension against. This can be overridden by editing the CMakeCache.txt file and setting the variables PYTHON_INCLUDE_DIR and PYTHON_LIBRARY to point to the respective anaconda python files, e.g. ```~; PYTHON_EXECUTABLE:FILEPATH=/Users/ms/anaconda/bin/python <-- cmake finds this by itself if in PATH; PYTHON_INCLUDE_DIR:PATH=/Users/ms/anaconda/include/python2.7/ <-- must be set by hand; PYTHON_LIBRARY:FILEPATH=/Users/ms/anaconda/lib/libpython2.7.dylib <-- this too.; ```~. However, after building, the openbabel module then fails to import in anaconda python, causing it to to crash:. ```~~~; $> ipython; Python 2.7.6 |Anaconda 1.9.1 (x86_64)| (default, Jan 10 2014, 11:23:15) ; [...]. In [1]: import openbabel; Fatal Python error: PyThreadState_Get: no current thread; Abort trap: 6 ; ```~~~. It seems something is wrong with the way the _openbabel.so file in the python extensions is linked:. ```~~~; $> otool -L _openbabel.so ; _openbabel.so:; 	libpython2.7.dylib (compatibility version 2.7.0, current version 2.7.0) ; 	/Users/ms/openbabel/installation/lib/libopenbabel.4.dylib (compatibility version 4.0.0, current version 4.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1197.1.1); 	/usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.5); 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 120.0.0); ```~~~. Note that libpython2.7.dylib does not explicitely point to the anaconda python lib, but instead is specified as a simple file name. I suppose this causes the dynamic linker to use the system python lib at runtime. The system lib is from python 2.7.5, while anaconda comes with 2.7.6. The version mismatch is most likely responsible for the crash. . This mismatch can be fixed using install_name_tool to explicitely se",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1296:968,Abort,Abort,968,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1296,1,['Abort'],['Abort']
Safety,"I tried to install openbabel 2.4.1 in my user folder; however, there is always error as follows. > CMake Error at src/cmake_install.cmake:48 (file):; file INSTALL cannot find; ""/home/user10/sources/openbabel-git/lib/libopenbabel.so.5.0.0"".; Call Stack (most recent call first):; cmake_install.cmake:75 (include). > make: [install] Error 1. Can someone tell me how to avoid this error?. Thank you.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1649:367,avoid,avoid,367,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1649,1,['avoid'],['avoid']
Safety,"I'm encountering a problem involving the OBMol::StripSalts() method. I've included some code and an example input file to describe the problem:. File 'inp.smi' is the molecule input file. This file contains only one line describing the smiles of an input molecule composed of two disconnected fragments (therefore the dot):. CC(=C)C(=O)OCCN(C)C.C=CN1CCCC1=O TIM|OVS2573256. This smiles describes a molecule composed of two disconnected fragments, of which the first (the largest fragment) does not contain a ring, while the second does. The code itself is given here:. OBConversion conv;; conv.SetInFormat(conv.FormatFromExt(""/Users/hans/Temp/inp.smi""));; OBMol* m = new OBMol();; m->Clear();; (void) conv.ReadFile(m, ""/Users/hans/Temp/inp.smi"");; m->StripSalts();; std::vector<OpenBabel::OBRing*> r(m->GetSSSR());; int s(0);; unsigned int nrings(r.size());; for (unsigned int i = 0; i < nrings; ++i); {; if (r[i]->IsAromatic()) s += +0.2244435;; }; exit(0);. When running this program, I'm getting a segmentation fault. Removing the OBMol::StripSalts() method resolves the problem, as well as modifying the input file by removing either the first of second fragment (it works fine on either of these). Analysing the problems has shown that the OBMol::StripSalts() method is correctly removing the smallest fragment (the second part of the input smiles, and which contains a ring), keeping only the first part which contains no rings. However, it seems that the OBMol::GetSSSR() method, which is called on the following line, still detects the presence of rings, and this is not correct. As a consequence, the program crashes when calling the OBRing::IsAromatic() method, since the OBRing pointer is pointing to a ring that does not exists anymore... Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/776:1532,detect,detects,1532,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/776,1,['detect'],['detects']
Safety,"I'm running OpenBabel v2.3.0 on a xubuntu system v12.04.5 LTS; When I try to convert the given SDF file into a vectorial SVG file, running the following command:; >$ babel mol.sdf -osvg pic.svg. babel crash with the following error:; >\*\*\* glibc detected \*\*\* babel: munmap_chunk(): invalid pointer: 0x0000000000c52480 \*\*\*; ======= Backtrace: =========; /lib/x86_64-linux-gnu/libc.so.6(+0x7e846)[0x7fb00e48f846]; /usr/lib/libopenbabel.so.4(+0xc1b2d)[0x7fb00e0d1b2d]; /usr/lib/libopenbabel.so.4(+0xc462d)[0x7fb00e0d462d]; /usr/lib/libopenbabel.so.4(+0xd19bf)[0x7fb00e0e19bf]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel15generateDiagramEPNS_5OBMolE+0x65)[0x7fb00e0f8e25]; /usr/lib/openbabel/2.3.0/plugin_ops.so(+0xc012)[0x7fb00337f012]; /usr/lib/openbabel/2.3.0/svgformat.so(+0x4b4c)[0x7fb00cbc4b4c]; /usr/lib/openbabel/2.3.0/svgformat.so(+0x6dc2)[0x7fb00cbc6dc2]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion7ConvertEv+0xee)[0x7fb00e110fce]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion7ConvertEPSiPSo+0x1d3)[0x7fb00e114763]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion11FullConvertERSt6vectorISsSaISsEERSsS4_+0x20b1)[0x7fb00e1168e1]; babel[0x40287b]; /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed)[0x7fb00e43276d]; babel[0x402f51]; ======= Memory map: ========; 00400000-00406000 r-xp 00000000 08:06 5638697 /usr/bin/babel; 00605000-00606000 r--p 00005000 08:06 5638697 /usr/bin/babel; 00606000-00607000 rw-p 00006000 08:06 5638697 /usr/bin/babel; [...]. However, if I make all hydrogens implicit, in this way:; >$ babel mol.sdf -osvg pic.svg -d. the output is correctly generated. Reported by: silyus. Original Ticket: [openbabel/bugs/953](https://sourceforge.net/p/openbabel/bugs/953)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1333:248,detect,detected,248,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1333,1,['detect'],['detected']
Safety,"I'm using OpenBabel to perfrom substructure search in my own library. For this I'm converting my molecular structures (stored in Selection class) to OBMol using the following code:; ```; void Selection::to_obmol(OpenBabel::OBMol &mol) const; {; mol.Clear();. map<int,OpenBabel::OBResidue*> reslist;. mol.BeginModify();. for(int i=0;i<size();++i){; auto& at = atom(i);. // Create new atom in this mol; auto oba = mol.NewAtom();. oba->SetAtomicNum(at.element_number);; oba->SetPartialCharge(at.charge);; oba->SetVector(10.0*x(i),10.0*y(i),10.0*z(i));. // Create new residue if needed; if(reslist.count(at.resid)==0){; OpenBabel::OBResidue* obr = mol.NewResidue();; obr->SetNum(at.resid);; obr->SetChain(at.chain);; reslist[at.resid] = obr;; }. reslist[at.resid]->AddAtom(oba);; reslist[at.resid]->SetAtomID(oba,at.name);; }. mol.ConnectTheDots();; // Guess bond orders and aromaticity; mol.PerceiveBondOrders();; ; mol.EndModify();. // Need to avoid recomputing partial charges on output; mol.SetPartialChargesPerceived();; }; ```. Obtained OBMol seems to be correct and consistent - it is written normally to files, reports correct number of bonds, etc. However when I'm trying to use it in substructure search it fails:; ```. void Selection::find_mapping(const Selection sel); {; OpenBabel::OBMol src,sample;; to_obmol(src);; ; //------------------------------; // (1) Variant with conversion ; sel.to_obmol(sample);; //------------------------------. //------------------------------; // (2) Variant with reading the file directly; OpenBabel::OBConversion conv;; conv.ReadFile(&sample,""sample.pdb"");; //------------------------------. OpenBabel::OBQuery* query = OpenBabel::CompileMoleculeQuery(&sample);; OpenBabel::OBIsomorphismMapper *mapper = OpenBabel::OBIsomorphismMapper::GetInstance(query);; OpenBabel::OBIsomorphismMapper::Mappings maps;; mapper->MapAll(&src,maps);. std::cout << ""found "" << maps.size() << "" mappings"" << std::endl;. delete mapper;; delete query;; }. ```. If variant (2) is ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1884:942,avoid,avoid,942,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1884,1,['avoid'],['avoid']
Safety,"I've created a test suite of 14k non-redundant ligands from the pdb. These are provided as reasonably processed sdf files. testroundtrip.py verifies that they can be read in and roundtripped (with hydrogens) through sdf, mol2, and pdb file formats without mucking things up. . Initially there were thousands of failures. Now there are none. You can go through all the commits for the details, but here are the bigger changes:. - mol2 file format now outputs formal charges with a UNIT_ATOM_ATTR record (there is an option to disable its output); - pdb files now output bond orders through the popular but non-standard convention of duplicating CONECT records; - sdf files will only have aliases treated as substructure replacements if the target atom is a wildcard; - numerous adjustments to bond typing rules to make them more conservative. The additional tests add a few minutes to testing, but I think it's very important that we include them. This sort of large test set is needed. Plans for the future:; - port python driver to c++ to avoid python dependency; - make things work without having to roundtrip the molecules with hydrogens; - compare protonation states to rdkit, find and fix errors; - additional file formats for roundtripping",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008:37,redund,redundant,37,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008,2,"['avoid', 'redund']","['avoid', 'redundant']"
Safety,"Ian Scott, iscott@frontier.com, Windows 7, 64-bit. When converting files from smiles, mol, mol2 ,sdf into pdbqt with the generate 3D coordinates active the molecules do not form correctly. Rings are broken and strange bonds form (as viewed in PyRx or Autodock). This problem can be avoided by performing the 3D conversion as an independent step with a different file output file type (e.g. sdf to sdf) and then converting to pdbqt without selecting the generate 3D coordinates option. Therefore, the problem is most likely in the pdbqt 3D coordinate generator. A example problem smiles string: COc1cc(cc(c1OC)OC)C(C(=O)N1CCCCC1C(=O)OC(CCCc1ccccc1)CCCc1cccnc1)(F)F	. Reported by: ianlscott1",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1130:282,avoid,avoided,282,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1130,1,['avoid'],['avoided']
Safety,"If you try to generate the canonical SMILES of a molecule that consists entirely of hydrogen atoms, OpenBabel gets a segmentation violation:. echo ""[H][H]"" | babel -i smi -o can. It is caused by a test in cansmilesformat.cpp that tries to avoid starting a SMILES on a hydrogen atom; if the molecule is entirely hydrogen atoms, it ends up with a NULL atom pointer and tries to use it. Reported by: @cjames53",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/817:239,avoid,avoid,239,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/817,1,['avoid'],['avoid']
Safety,"If you try to use pybel to readstring an inchi, then try to write it out as an inchi again, you get a pointer error and a core dump. This is a serious error. like this:; >>> mol = pybel.readstring(""inchi"",""InChI=1S/C4H10/c1-3-4-2/h3-4H2,1-2H3\n""); >>> mol; <pybel.Molecule object at 0x7fbe5d1611d0>; >>> mol.write(); 'CCCC\t\n'; >>> mol.write(""inchi""); *** glibc detected *** python: free(): invalid pointer: 0x00007fbe5c6f14c0 ***; ======= Backtrace: =========; /lib64/libc.so.6[0x3e6aa75e66]; /lib64/libc.so.6[0x3e6aa7897a]; /tools/bioinfo/app/openbabel-2.3.1/lib/libinchi.so.0(FreeINCHI+0x11)[0x7fbe5a7d7701]; ...; core dump. Please investigate it to see what's going on. Reported by: annyoinglogin. Original Ticket: [openbabel/bugs/977](https://sourceforge.net/p/openbabel/bugs/977)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1356:363,detect,detected,363,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1356,1,['detect'],['detected']
Safety,Improve thread safety for global objects,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/381:15,safe,safety,15,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/381,1,['safe'],['safety']
Safety,"In both the latest stable release (2.2.1) and the SVN version (revision 3010), we failed to correctly convert an oxime moiety from PDB to MOL2 using the following command line:. babel -ipdb oxime_build.pdb -omol2 oxime_build.mol2. The N=C double bond is not detected correctly and hence, C is assigned atom type C.3 instead of C.2 (as listed in MOL2 file). Reported by: schtob",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/892:258,detect,detected,258,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/892,1,['detect'],['detected']
Safety,"In order to know whether a stereo OBData object is a CisTrans, etc., you need to first cast it to StereoBase and check its type. This adds the ability to cast to StereoBase to the Python bindings (there are many other casts there already). Note that users of OBStereoFacade avoid this need as there are specific functions that return the CisTrans subclass, etc. I think it's still useful to plug this hole.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2124:274,avoid,avoid,274,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2124,1,['avoid'],['avoid']
Safety,"In the Python bindings, avoid adding methods from the iterated object to the iterator itself",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1729:24,avoid,avoid,24,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1729,1,['avoid'],['avoid']
Safety,"In the SMILES reader, avoid allocating a BUFSIZE buffer, and the associated string copy",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1728:22,avoid,avoid,22,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1728,1,['avoid'],['avoid']
Safety,"In the current implementation, when a rigid fragment is included in other fragments, it caused strange bonds. This pull request avoids this problem. The performance improved slightly judging by the Platinum dataset evaluation.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2049:128,avoid,avoids,128,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2049,1,['avoid'],['avoids']
Safety,"Inchi output mode incorrectly considers chiral centers; with symmetric layouts to be undefined. Here are the; contents of a mol file containing a chiral center which; I believe is properly defined, and which has a; perfectly equilateral layout:. -XXXX- 08290615282D. 4 3 0 0 0 0 0 0 0 0999 V2000; -1.7320 -1.0000 0.0000 F 0 0 0 0 0 0 0; 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 1 0 0 0 0; 0 0 0 0 0; 0.0000 2.0000 0.0000 Br 0 0 0 0 0 0 0; 0 0 0 0 0; 1.7320 -1.0000 0.0000 Cl 0 0 0 0 0 0 0; 0 0 0 0 0; 2 3 1 0 0 0 0; 2 4 1 0 0 0 0; 2 1 1 1 0 0 0; M END. Command line babel converts this to an inchi string; lacking stereochemical information, and produces the; warning:. *** Open Babel Warning in WriteMolecule; #1 Omitted undefined stereo; Ambiguous stereo: center(s). But it produces a different inchi string containing; stereochemical information, and doesn’t give a warning,; if I perturb all the angles slightly from 120 degrees:. -XXXX- 08290615282D; 4 3 0 0 0 0 0 0 0 0999 V2000; -1.7320 -0.9000 0.0000 F 0 0 0 0 0 0 0; 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 1 0 0 0 0; 0 0 0 0 0; 0.0000 2.0000 0.0000 Br 0 0 0 0 0 0 0; 0 0 0 0 0; 1.7320 -0.9000 0.0000 Cl 0 0 0 0 0 0 0; 0 0 0 0 0; 2 3 1 0 0 0 0; 2 4 1 0 0 0 0; 2 1 1 1 0 0 0; M END. The respective inchi’s are:; InChI=1/CHBrClF/c2-1(3)4/h1H; InChI=1/CHBrClF/c2-1(3)4/h1H/t1-/m1/s1. Smiles output is the same for both:; F[C@@H](Br)Cl. I’m using:; Open Babel 2.0.2 -- Aug 16 2006 -- 17:22:44. I think the problem may be that symmetry detection,; which is appropriate for identifying undefined double; bond stereocenters, is being misapplied to chiral centers. Reported by: peterspiro",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/566:1485,detect,detection,1485,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/566,1,['detect'],['detection']
Safety,"It would be nice to have some method of finding the maximal common substructure, to look for graph isomorphism directly (rather than calculating the InChI, or canonical SMILES), and clique detection (I think this is related to maximal common substructure). It is common for users to want to find common substructures in a dataset of active compounds. Noel. Reported by: @baoilleach. Original Ticket: ""openbabel/feature-requests/128"":https://sourceforge.net/p/openbabel/feature-requests/128",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1497:189,detect,detection,189,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1497,1,['detect'],['detection']
Safety,"Just like you can re-use an OBMol, it would be nice to be able to reuse a std::vector as there might be some performance benefit both from avoiding creating the variable again in Python, and from avoiding some mallocs on the C++ side. With this in mind, I've commented out the SWIG directive to ignore the .clear() method.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1834:139,avoid,avoiding,139,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1834,2,['avoid'],['avoiding']
Safety,Large Ring not detected during OBMolRingIter,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1858:15,detect,detected,15,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1858,1,['detect'],['detected']
Safety,"Line 208 of molchrg.cpp has:; ```; if (EQ(atom->GetType(),""Npl"") || EQ(atom->GetType(),""Nam"")); ```; Gasteiger charge calculation should always return the same results for the same structure. However, the string returned by GetType() is set to an arbitrary value by an atom typer (or indeed the user), and so the results will change. Line 208 should be rewritten to avoid using GetType(). For example, it could call a function that checks whether the atom is nitrogen, and checks the type explicitly using Open Babel function calls.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1760:366,avoid,avoid,366,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1760,1,['avoid'],['avoid']
Safety,MSVC gives a warning about:; src\charges\eqeq.cpp(98): warning C4805: '!=' : unsafe mix of type 'bool' and type 'const double' in operation. ```; if (!_ionizations[1][0] != hi_0); ```. Double negative? (Pun intended),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/173:77,unsafe,unsafe,77,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/173,1,['unsafe'],['unsafe']
Safety,"Mac OS X 10.9 Mavericks changes the default C++ library from libstdc++ to libc++, which provides C++11 library meaning things need to be moved out of the `tr1` namespace. In these changes, `#ifdef _LIBCPP_VERSION` is used to detect whether libc++ is being used, and if so, alternative includes are provided. Additionally, a recent change to `parsmart.cpp` has been reverted due to it causing segmentation faults. I'm not sure if this is a widespread issue, or just a problem when using libc++. Matt",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/34:225,detect,detect,225,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/34,1,['detect'],['detect']
Safety,Make openbabel objects thread-safe,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2273:30,safe,safe,30,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2273,1,['safe'],['safe']
Safety,"Maximal common substructure, graph isomorphism,clique detect",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1497:54,detect,detect,54,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1497,1,['detect'],['detect']
Safety,Minor speedup to avoid repeated calls to IsOption by caching some options,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1718:17,avoid,avoid,17,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1718,1,['avoid'],['avoid']
Safety,"OBAromaticTyper, OBPhModel, OBAtomTyper, OBRingTyper are now all thread-safe (I believe), with only minimal changes needed for all but OBAromaticTyper. I've also tided up the use of some externs in residue.cpp/.h, which were probably not a problem but it's good to eliminate suspects from our enquiries. NOT DONE: chains.cpp has several static variables, which will cause problems. This is a bit of work; hence, this pull request with the low-hanging fruit.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/381:72,safe,safe,72,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/381,1,['safe'],['safe']
Safety,"OBExtensionTable::TypetoMIME copies the MIME type into; a buffer which size is unknown. This is unsafe and; should be changed. The solution might be to add a; length parameter to the method.; From the user's point of view, the buffer used must be; larger than the length of the largest mime-type known; by OpenBabel and this might change when new types are; added. Reported by: jbrefort. Original Ticket: ""openbabel/feature-requests/28"":https://sourceforge.net/p/openbabel/feature-requests/28",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1397:96,unsafe,unsafe,96,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1397,1,['unsafe'],['unsafe']
Safety,OBExtensionTable::TypetoMIME is unsafe,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1397:32,unsafe,unsafe,32,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1397,1,['unsafe'],['unsafe']
Safety,"On the trunk (after I check in my latest), Perl bindings are identical to Python, and compile and install fine. However... make test gives:. PERL_DL_NONLAZY=1 /usr/bin/perl ""-MExtUtils::Command::MM"" ""-e"" ""test_harness(0,; 'blib/lib', 'blib/arch')"" t/*.t; t/atom.............ok; t/bond.............ok; t/conversion.......ok 3/9*** glibc detected *** double free or corruption (!prev; ): 0x082721c8 ***; t/conversion.......dubious; Test returned status 0 (wstat 6, 0x6); after all the subtests completed successfully; t/data.............ok; t/format...........ok 1/3*** glibc detected *** double free or corruption (!prev; ): 0x0820a048 ***; t/format...........dubious; Test returned status 0 (wstat 6, 0x6); after all the subtests completed successfully; t/internalcoord....ok; t/mol..............ok; t/residue..........ok; Failed Test Stat Wstat Total Fail Failed List of Failed; -------------------------------------------------------------------------------; t/conversion.t 0 6 9 0 0.00% ??; t/format.t 0 6 3 0 0.00% ??; Failed 2/8 test scripts, 75.00% okay. 0/35 subtests failed, 100.00% okay.; make: *** [test_dynamic] Error 255. The main error (or at least one of them) is that the following code gives an error:; ============= ; #!/usr/bin/perl. use Chemistry::OpenBabel;. my $obConversion = new Chemistry::OpenBabel::OBConversion;. Noel; ========= Error message ; *** glibc detected *** double free or corruption (!prev): 0x081cb360 ***; Aborted. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/720:336,detect,detected,336,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/720,4,"['Abort', 'detect']","['Aborted', 'detected']"
Safety,Openbabel 2.3.2 testsuite fails on AArch64 (64-bit ARM) under Fedora and Ubuntu distributions:. The following tests FAILED:; 	 10 - rotor_Test (Failed); 	 23 - inchiSteffen_PubChem.smi_Test (Timeout); 	 54 - pytest_sym (Timeout). I looked into rotor test and it looks like issue is in OBRotor::CalcTorsion method. I added bunch of std::cout calls there and compared results with x86-64:. <pre>; AArch64 x86-64. 1: 1:; 1: _torsion[0] = 6 1: _torsion[0] = 6; 1: _torsion[1] = 9 1: _torsion[1] = 9; 1: _torsion[2] = 12 1: _torsion[2] = 12; 1: _torsion[3] = 15 1: _torsion[3] = 15; 1: 1:; 1: v1x = -1.31002 1: v1x = -1.31002; 1: v1y = -0.796717 1: v1y = -0.796717; 1: v1z = -0.034437 1: v1z = -0.034437; 1: v2x = -1.21398 1: v2x = -1.21398; 1: v2y = 0.93634 1: v2y = 0.93634; 1: v2z = 0.043099 1: v2z = 0.043099; 1: v3x = 0.440074 1: v3x = 0.440074; 1: v3y = 1.46771 1: v3y = 1.46771; 1: v3z = 0.0653222 1: v3z = 0.0653222; 1: 1:; 1: c1x = -0.00209297 1: c1x = -0.00209297; 1: c2x = -0.00209297 1: c2x = -0.00209297; 1: c1y = 0.0982663 1: c1y = 0.0982663; 1: c2y = 0.0982663 1: c2y = 0.0982663; 1: c1z = -2.19382 1: c1z = -2.19382; 1: c2z = -2.19382 1: c2z = -2.19382; 1: c3x = -1.18684e-16 1: c3x = 6.66134e-16; 1: c3y = 1.0024e-16 1: c3y = -4.70977e-16; 1: c3z = 4.61789e-18 1: c3z = -2.17654e-17; 1: 1:; 1: c1mag = 4.82251 1: c1mag = 4.82251; 1: c2mag = 4.82251 1: c2mag = 4.82251; 1: costheta = 1 1: costheta = 1; 1: ang = -0.000447214 1: ang = 0.000447214; 1: 1:; 1: -0.000447214 1: 0.000447214; </pre>; Same set of tests fail on PPC64 but I did not checked is it same issue. Reported by: hrw-redhat. Original Ticket: [openbabel/bugs/927](https://sourceforge.net/p/openbabel/bugs/927),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1307:191,Timeout,Timeout,191,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1307,2,['Timeout'],['Timeout']
Safety,"Openbabel version 3.1, and perhaps former versions looking at ring-fragments.txt file, mis-identifies aromatics when O=C1C=COC=C1 ring fragments are present. Instead of the quinoidal structure, openbabel converts it to O=c1ccocc1, which is certainly wrong. With version 3.1 there is no way even to convert it to Kekule form, which could fix this problem as it could not distribute the bonds correctly. With increasing version number it is a step back in functionality. Wrong way to go honestly. Anyone knows if it is possible to fix this with modifying the bondtyp.txt file or some other?; The problem may originate from Geoff Huchinson's years back statement and aromatic detection implementation, that out-of ring double bonds to an aromatic carbon does not break aromaticity of the ring. It certainly does. That C1 carbon now has too many electrons and bonds of course. An xyz file is below that fails. If you would look at the same molecule with Avogadro, it detects the bonds perfectly. Perhaps they don't use openbabel for bond-detection, only for molecule conversion. ; ----; 17. C 2.55040 -0.73410 0.11530; C 1.24130 -0.01430 -0.01140; C 1.16330 1.30960 -0.24480; O -0.00100 1.99450 -0.36510; C -1.16460 1.30860 -0.24470; C -1.24140 -0.01540 -0.01130; C 0.00030 -0.79380 0.12670; O 0.00090 -2.00280 0.34090; C -2.54980 -0.73650 0.11560; H 3.39890 -0.05810 -0.00790; H 2.61890 -1.53020 -0.63070; H 2.62260 -1.22050 1.09180; H 2.01430 1.96810 -0.36130; H -2.01620 1.96620 -0.36110; H -2.61770 -1.53250 -0.63070; H -2.62140 -1.22310 1.09190; H -3.39900 -0.06120 -0.00740",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2263:673,detect,detection,673,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2263,3,['detect'],"['detection', 'detects']"
Safety,Originally thought to be a CIF problem (http://sourceforge.net/p/openbabel/bugs/742/) but the problem persists. Script attached should randomly reproduce the error. Generated it with openbabel 2.3.2 built on; `gcc (GCC) 4.4.5 20110214 (Red Hat 4.4.5-6)`; getting the following error:. *** glibc detected *** python: double free or corruption (!prev): 0x0000000000f281c0 ***; ======= Backtrace: =========; /lib64/libc.so.6[0x3aa0275716]; /home/me/lib/libopenbabel.so.4(_ZN9OpenBabel5OBMol14ConnectTheDotsEv+0x6cb)[0x7ffff13c805b]; /home/me/lib/_openbabel.so(+0x93e38)[0x7ffff1765e38]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x60db)[0x7ffff7d1556b]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x88e)[0x7ffff7d1691e]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x563a)[0x7ffff7d14aca]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x88e)[0x7ffff7d1691e]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCode+0x32)[0x7ffff7d16a32]; /home/me/lib/libpython2.7.so.1.0(PyRun_FileExFlags+0xb0)[0x7ffff7d364d0]; /home/me/lib/libpython2.7.so.1.0(PyRun_SimpleFileExFlags+0xdc)[0x7ffff7d3669c]; /home/me/lib/libpython2.7.so.1.0(Py_Main+0xc5c)[0x7ffff7d4c0ec]; /lib64/libc.so.6(__libc_start_main+0xfd)[0x3aa021ec9d]; python[0x400649]. Also reproduced the error with openbabel 2.3.2 built with; `i686-apple-darwin11-llvm-gcc-4.2 (GCC) 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)`; getting the following error:. Python(1529) malloc: *** error for object 0x7fe4ba47bf70: pointer being freed was not allocated. First generated the error for openbabel 2.3.1 as well built with the same gcc's above. Reported by: pierrelb. Original Ticket: [openbabel/bugs/867](https://sourceforge.net/p/openbabel/bugs/867),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1247:295,detect,detected,295,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1247,1,['detect'],['detected']
Safety,"REMARK 4 7VSI COMPLIES WITH FORMAT V. 3.30, 13-JUL-11 ; REMARK 100 ; REMARK 100 THIS ENTRY HAS BEEN PROCESSED BY PDBJ ON 28-OCT-21. ; REMARK 100 THE DEPOSITION ID IS D_1300025299. ; REMARK 245 ; REMARK 245 EXPERIMENTAL DETAILS ; REMARK 245 RECONSTRUCTION METHOD : SINGLE PARTICLE ; REMARK 245 SPECIMEN TYPE : NULL ; REMARK 245 ; REMARK 245 ELECTRON MICROSCOPE SAMPLE ; REMARK 245 SAMPLE TYPE : PARTICLE ; REMARK 245 PARTICLE TYPE : POINT ; REMARK 245 NAME OF SAMPLE : HUMAN SGLT2-MAP17 COMPLEX ; REMARK 245 SAMPLE CONCENTRATION (MG ML-1) : NULL ; REMARK 245 SAMPLE SUPPORT DETAILS : NULL ; REMARK 245 SAMPLE VITRIFICATION DETAILS : NULL ; REMARK 245 SAMPLE BUFFER : NULL ; REMARK 245 PH : 7.50 ; REMARK 245 SAMPLE DETAILS : NULL ; REMARK 245 ; REMARK 245 DATA ACQUISITION ; REMARK 245 DATE OF EXPERIMENT : NULL ; REMARK 245 NUMBER OF MICROGRAPHS-IMAGES : NULL ; REMARK 245 TEMPERATURE (KELVIN) : NULL ; REMARK 245 MICROSCOPE MODEL : FEI TITAN KRIOS ; REMARK 245 DETECTOR TYPE : GATAN K2 SUMMIT (4K X 4K) ; REMARK 245 MINIMUM DEFOCUS (NM) : NULL ; REMARK 245 MAXIMUM DEFOCUS (NM) : NULL ; REMARK 245 MINIMUM TILT ANGLE (DEGREES) : NULL ; REMARK 245 MAXIMUM TILT ANGLE (DEGREES) : NULL ; REMARK 245 NOMINAL CS : NULL ; REMARK 245 IMAGING MODE : BRIGHT FIELD ; REMARK 245 ELECTRON DOSE (ELECTRONS NM**-2) : 5000.00 ; REMARK 245 ILLUMINATION MODE : SPOT SCAN ; REMARK 245 NOMINAL MAGNIFICATION : NULL ; REMARK 245 CALIBRATED MAGNIFICATION : NULL ; REMARK 245 SOURCE : FIELD EMISSION GUN ; REMARK 245 ACCELERATION VOLTAGE (KV) : 300 ; REMARK 245 IMAGING DETAILS : NULL ; REMARK 247 ; REMARK 247 ELECTRON MICROSCOPY ; REMARK 247 THE COORDINATES IN THIS ENTRY WERE GENERATED FROM ELECTRON ; REMARK 247 MICROSCOPY DATA. PROTEIN DATA BANK CONVENTIONS REQUIRE ; REMARK 247 THAT CRYST1 AND SCALE RECORDS BE INCLUDED, BUT THE VALUES ; REMARK 247 ON THESE RECORDS ARE MEANINGLESS EXCEPT FOR THE CALCULATION ; REMARK 247 OF THE STRUCTURE FACTORS. ; REMARK 300 ; REMARK 300 BIOMOLECULE: 1 ; REMARK 300 SEE REMARK 35",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2559:3474,DETECT,DETECTOR,3474,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2559,1,['DETECT'],['DETECTOR']
Safety,Rebuilt database from COD 'clean' subset from DataWarrior; and Platinum subset. Fix obfragment to avoid saving empty fragments.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2150:98,avoid,avoid,98,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2150,1,['avoid'],['avoid']
Safety,Remove redundant SSSR rings based on bond paths,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2648:7,redund,redundant,7,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648,1,['redund'],['redundant']
Safety,"Remove some audit messages that copy the entire format description and then substring it. For smi->smi conversion, 1.6% of the total conversion time was spent on one of these audit message blocks, the majority of which on the string copy of the format description (which is not small for SMILES). Since the other ones are similar, why not remove all three? Actually, I would remove all audit and debug level logging statements throughout the library (I have never used them for debugging), so I have no qualms about removing these three. They could be rewritten to avoid the string copy, but... What do they think?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1707:565,avoid,avoid,565,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1707,1,['avoid'],['avoid']
Safety,"Results: https://github.com/cclauss/openbabel/actions. https://flake8.pycqa.org/en/latest/user/error-codes.html. On the flake8 test selection, this PR does _not_ focus on ""_style violations_"" (the majority of flake8 error codes that [__psf/black__](https://github.com/psf/black) can autocorrect). Instead, these tests focus on runtime safety and correctness:; * __E9__ tests are about Python syntax errors usually raised because flake8 can not build an Abstract Syntax Tree (AST). Often these issues are a sign of unused code or code that has not been ported to Python 3. These would be compile-time errors in a compiled language but in a dynamic language like Python, they result in the script halting/crashing on the user.; * __F63__ tests are usually about the confusion between identity and equality in Python. Use ==/!= to compare str, bytes, and int literals is the classic case. These are areas where __a == b__ is True but __a is b__ is False (or vice versa). Python >= 3.8 will raise SyntaxWarnings on these instances.; * __F7__ tests logic errors and syntax errors in type hints; * __F82__ tests are almost always _undefined names_ which are usually a sign of a typo, missing imports, or code that has not been ported to Python 3. These also would be compile-time errors in a compiled language but in Python, a __NameError__ is raised which will halt/crash the script on the user.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2405:335,safe,safety,335,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2405,1,['safe'],['safety']
Safety,"Right now, floating point matrix code is handled by internal code and code ported from Eigen. When libblas and ATLAS are detected, the code should use this instead. This offers two advantages:; * BLAS and ATLAS are thoroughly tested and debugged.; * BLAS and ATLAS are highly tuned, vectorized, and multithreaded on many platforms, improving performance. Granted, performance is only a small component of Open Babel, but this wouldn't hurt. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/116"":https://sourceforge.net/p/openbabel/feature-requests/116",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1485:121,detect,detected,121,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485,1,['detect'],['detected']
Safety,"SVG output with atom labelling (option ""i"") currently only supports numeric atom indices. These indices change, when explicit hydrogens are excluded (a typical use case when dealing with organic molecules). I have input from CML or CIF files and want to use atom labelling in SVG output for identification of torsions, rings, etc. detected by OB. Desired output will print (non-numeric) atom labels given in input (generic data ""label"" or ""_atom_site_label""). Any chance to get that functionality? A simple alternative/workaround without changing the library would be a XSLT style sheet generating the desired output from SVG with embedded CML (option ""e""). Reported by: shabermehl. Original Ticket: [openbabel/feature-requests/169](https://sourceforge.net/p/openbabel/feature-requests/169)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1537:331,detect,detected,331,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1537,1,['detect'],['detected']
Safety,"See discussion over at #1923. This is a merge of work by @adalke. I needed to rebase, hence the separate PR. I also needed to update some of the tests for changes in the interim. I've made an attempt to get the tests working on Windows (e.g. normalizing line endings), but I think that some of the tests genuinely fail on that platform, e.g. the binary file handling, but presumably these never worked in the first place. I haven't made the change described by @fredrikw over at #1923. That test passes for me, so I've avoided making the change - I'm not sure why it's passing now.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2176:519,avoid,avoided,519,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2176,1,['avoid'],['avoided']
Safety,Speed up the SMILES writer by avoiding creating the SMILES atom order vector,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1710:30,avoid,avoiding,30,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1710,1,['avoid'],['avoiding']
Safety,"Summary:; *fixes memory leak ; *more robust support for gzipped files; *more convenient methods for opening files (format auto-detection); *fix bug with xml reader when reading files with multiple molecules. I have made every effort to maintain backwards compatibility (even when the existing behaviour was dubious) but there are some unavoidable changes. Specifically, streams passed to a OBConversion should not be deallocated before the OBConversion is deallocated or the stream is replaced. Details:; This was all motivated by a memory leak due to the line ending filter. OBConversion would swap out the rdbuf of the passed input stream with its own filtering rdbuf to normalize all line endings. This means a user-provided data structure is having its internals messed with and there is no way to properly free the filtering streambuf (since OBConversion doesn't control the stream itself). This would cause my long running program that opens millions of files to eventually consume all the memory on the machine and crash. Not acceptable. The solution is to not mess with the internals of the passed stream, but wrap the stream with a filtering stream. The full stream is wrapped, not just the underlying streambuf, in order to (more or less) keep the state of the user-provided stream consistent. That is, when OBConversion reads to the end of the file, the good bit of the user-provided steram will also be turned off (some test code depended on this behavior). GetInStream/GetOutStream may now return a stream that is not identical to the user-provided stream (since it's the wrapped version). In addition to the newline filter, streams may be wrapped if compression is enabled. . Compression is now provided by virtue of wrapping the stream (and leaving it that way until all writing/reading is done). GetInStream/GetOutStream provide this wrapped stream and so can be read as if the underlying stream were not compressed. FormatFromExt can take a second argument, a bool passed by reference",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/191:127,detect,detection,127,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/191,1,['detect'],['detection']
Safety,The OBFingerprint line in the Ruby SWIG interface file is commented out. I think this was to avoid some errors. It should be uncommented and made available... Reported by: @baoilleach,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/791:93,avoid,avoid,93,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/791,1,['avoid'],['avoid']
Safety,The attached CIF file makes OpenBabel crashs either if used as a library or using the command-line convertion tool. This appends on a Debian sid with OpenBabel 2.2.3 or on an Ubuntu Hardy with 2.1.1. The message is:. caliste@myrte:~/tmp$ babel Open_babel_crash.cif Open_babel_crash.xyz; *** glibc detected *** babel: double free or corruption (out): 0x00000000006b6ff0 ***; ======= Backtrace: =========; /lib/libc.so.6[0x7f392848008a]; /lib/libc.so.6(cfree+0x8c)[0x7f3928483c1c]; /usr/lib/libopenbabel.so.2(_ZN9OpenBabel5OBMol14ConnectTheDotsEv+0x59a)[0x7f39293978ea]; /usr/lib/openbabel/2.1/cifformat.so(_ZN9OpenBabel9CIFFormat12ReadMoleculeEPNS_6OBBaseEPNS_12OBConversionE+0x560)[0x7f39265f77a0]; /usr/lib/openbabel/2.1/cifformat.so(_ZN9OpenBabel16OBMoleculeFormat18ReadChemObjectImplEPNS_12OBConversionEPNS_8OBFormatE+0x7ce)[0x7f392660281e]; /usr/lib/openbabel/2.1/cifformat.so(_ZN9OpenBabel16OBMoleculeFormat14ReadChemObjectEPNS_12OBConversionE+0x12)[0x7f39265f8042]; /usr/lib/libopenbabel.so.2(_ZN9OpenBabel12OBConversion7ConvertEv+0x90)[0x7f39293a6400]; /usr/lib/libopenbabel.so.2(_ZN9OpenBabel12OBConversion7ConvertEPSiPSo+0x1f7)[0x7f39293a7c17]; /usr/lib/libopenbabel.so.2(_ZN9OpenBabel12OBConversion11FullConvertERSt6vectorISsSaISsEERSsS4_+0x124e)[0x7f39293aad6e]; babel[0x402f26]; /lib/libc.so.6(__libc_start_main+0xf4)[0x7f392842a1c4]; babel(__gxx_personality_v0+0x81)[0x401de9]; ======= Memory map: ========; 00400000-00406000 r-xp 00000000 08:01 70139 /usr/bin/babel; 00605000-00606000 rw-p 00005000 08:01 70139 /usr/bin/babel; 00606000-006c1000 rw-p 00606000 00:00 0 [heap]; 7f3918000000-7f3918021000 rw-p 7f3918000000 00:00 0; 7f3918021000-7f391c000000 ---p 7f3918021000 00:00 0; 7f391f391000-7f391f3a1000 r-xp 00000000 08:01 920605 /usr/lib/openbabel/2.1/crkformat.so; 7f391f3a1000-7f391f5a1000 ---p 00010000 08:01 920605 /usr/lib/openbabel/2.1/crkformat.so; 7f391f5a1000-7f391f5a2000 rw-p 00010000 08:01 920605 /usr/lib/openbabel/2.1/crkformat.so; 7f391f5a2000-7f391f5b2000 r-xp 00000,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/957:297,detect,detected,297,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/957,2,['detect'],['detected']
Safety,"The bond flags OB_TORUP_BOND and OB_TORDOWN_BOND are; used for two unrelated purpuses: To mark cis/trans; around a double bond, and to mark up/down around a; chiral center. These two uses are incompatible, as; illustrated below. The SD file shown has a double bond; and a potential chiral center, but there is no 3D; information, nor is the molecule marked ""chiral"", but; OpenBabel incorrectly deduces chirality for the atom. ; This is because OB deduces cis/trans around the double; bond from the 2D coordinates, and marks the single; bonds ""up"" and ""down"". Then when the chirality; detection goes to work, it notices that one of the; single bonds at the chiral center is marked up/down,; and from that it ""deduces"" that the atom is chiral. Using the SD file below (call it ""ob_bug.sdf""), do the; following:. babel ob_bug.sdf -o smi; C\C=C\[C@@]1CCCCN1; 1 molecule converted. To fix this, a new pair of bond flag needs to be; defined, perhaps OB_CISTRANS_UP and OB_CISTRANS_DOWN,; along with appropriate functions; (bond->SetCisTransUp(), etc.), and then every file; needs to be examined for use of OB_TORUP/DOWN_BOND and; bond->SetUp/Down(), bond->GetUp/Down(), to determine; whether it's a chiral flag, a cis/trans flag, or both. ----------------------. JME. 9 9 0 0 0 0 0 0 0 0999 V2000; 6.0622 2.8000 0.0000 C 0 0 0 0 0 0 0; 0 0 0 0 0; 4.8497 2.1000 0.0000 C 0 0 0 0 0 0 0; 0 0 0 0 0; 3.6373 2.8000 0.0000 C 0 0 0 0 0 0 0; 0 0 0 0 0; 0.0000 0.7000 0.0000 C 0 0 0 0 0 0 0; 0 0 0 0 0; 1.2124 0.0000 0.0000 C 0 0 0 0 0 0 0; 0 0 0 0 0; 0.0000 2.1000 0.0000 C 0 0 0 0 0 0 0; 0 0 0 0 0; 2.4249 0.7000 0.0000 C 0 0 0 0 0 0 0; 0 0 0 0 0; 1.2124 2.8000 0.0000 N 0 0 0 0 0 0 0; 0 0 0 0 0; 2.4249 2.1000 0.0000 C 0 0 0 0 0 0 0; 0 0 0 0 0; 1 2 1 0 0 0 0; 2 3 2 0 0 0 0; 3 9 1 0 0 0 0; 4 5 1 0 0 0 0; 4 6 1 0 0 0 0; 5 7 1 0 0 0 0; 6 8 1 0 0 0 0; 7 9 1 0 0 0 0; 8 9 1 0 0 0 0; M END; $$$$; ----------------------. Reported by: @cjames53",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/578:584,detect,detection,584,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/578,1,['detect'],['detection']
Safety,"The configure script should detect expat if available; for use with CML and other XML-based file formats.; (These will probably become more widely used soon.). This would greatly simplify the cml.cpp code. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/21"":https://sourceforge.net/p/openbabel/feature-requests/21",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1390:28,detect,detect,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1390,1,['detect'],['detect']
Safety,"The current CVS version of obgrep seems to have uncovered a bug ; in obconversion.h/cpp on UNIX (at least). The code now assigns a default format and stdin/stdout for the ; conversion input/output streams. Everything goes normally until :. // Search for pattern; for (c=0;;); {; mol.Clear();; conv.Read(&mol);; if (mol.Empty()); break;. The conv.Read() causes the program to abort after a failed cast from ; obconversion code. The new obgrep code ""looks"" correct. Since I'm not sure how to debug code in obconversion.* easily, I'm ; currently assigning this to Chris Morley. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/445:375,abort,abort,375,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/445,1,['abort'],['abort']
Safety,"The current implementation of smarts parsing and matching is not thread safe since it uses global variable. Attached is an svn diff with the 2-2-x branch that removes the usage of global variables and provides a thread-safe stateless matcher. With this patch, different threads can safely use different instances of OBSmartsPattern to parse and match (this is not currently true do to the use of global variables) and different threads can use the same instance of an OBSmartsPattern to perform matching with a call to the stateless matcher. My opinion is that the old API should be deprecated to discourage non thread-safe coding. The original motivation for this patch was that most of the perception routines use smarts matching and so are not thread-safe. With this patch, they still aren't thread safe since they all need to be modified to call the stateless matcher. However, even with that additional modification they remain not thread-safe due to other data sharing issues that would require some thought and time to resolve well. I can provide a match that at least makes the smarts matching thread-safe is desired. Reported by: @dkoes. Original Ticket: [openbabel/feature-requests/155](https://sourceforge.net/p/openbabel/feature-requests/155)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1524:72,safe,safe,72,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1524,8,['safe'],"['safe', 'safely']"
Safety,The edge prediction from xyz is suboptimal.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2572:9,predict,prediction,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2572,1,['predict'],['prediction']
Safety,The enclosed SDF file fails at aromatic / Kekule detection in trunk:. babel example.sdf -osmi; C/C=C/CN1CC[NH+](CC1)CCn1c(c(n2c1nc1c2c(=O)n(c(=O)n1C)C)C)C. babel example.sdf -osmi | babel -ismi -osmi; C/C=C/CN1CC[NH+](CC1)CCN1C(C(N2C1NC1C2C(=O)N(C(=O)N1C)C)C)C. Reported by: @ghutchis,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/963:49,detect,detection,49,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/963,1,['detect'],['detection']
Safety,"The following two molecules are an example of problems that the SSSR algorithm has:; http://pubchem.ncbi.nlm.nih.gov/summary/summary.cgi?cid=141105; http://pubchem.ncbi.nlm.nih.gov/summary/summary.cgi?cid=165896. In the first case only 4 of the 5 rings are reported - the inner 4 membered ring is not, probably due to false detection of its independence of the other 4.; In the second case, one of the rings has 48 atoms which seems to be above some internal limit of the SSSR algorithm.; In both cases the results from openbabel do not correspond to the rule of dependence between the number of components of a graph, vertices, edges and rings.; I would be glad to provide more info if needed.; Beda. Reported by: kosatab",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/993:324,detect,detection,324,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/993,1,['detect'],['detection']
Safety,"The new OBAtom:IsHbondAcceptor() method should provide a more fine-grained detection of hydrogen bond capabilities of atoms, basing on their neighbors (i.e., different chemical moieties are recognized). The rules are based on references from Kubyni and others, and the result can differ significantly from the current 2.3.x implementation, especially for the oxygen atom. A legacy function (OBAtom:IsHBondAcceptorSimple()) has been created to provide some kind of backward compatibility. . Accordingly to these rules, the function will return:; aliph-O-aliph ether -> true [1]; hydroxy O-sp3 -> true [1]; aro-O-aliph ether -> true [1]; ester O-sp2 -> true [1]; sulfate O (R-SO3) -> true [2]; sulfoxyde O (R-SO-R) -> true [2]; organoboron-F (R-BF3) -> true [3]; ester O-sp3 -> false [1]; sulfone (R1-SO2-R2 ) -> false [2]; aro-O-aro -> false [1]; aromatic O -> false [1]; O-nitro -> false [2]; organic F (R-F) -> false [4]. References; [1] Kubinyi, H. ""Changing paradigms in drug discovery. ""SPECIAL PUBLICATION-ROYAL SOCIETY OF CHEMISTRY 304.1 (2006): 219-232.; [2] Kingsbury, Charles A. ""Why are the Nitro and Sulfone Groups Poor Hydrogen Bonders?."" (2015).; [3] Per Restorp, Orion B. Berryman, Aaron C. Sather, Dariush Ajami, Julius Rebek Jr., Chem. Commun., 2009, 5692 DOI: 10.1039/b914171e; [4] Dunitz, Taylor. ""Organic fluorine hardly ever accepts hydrogen bonds."" Chemistry-A European Journal 3.1 (1997): 83-92.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/244:75,detect,detection,75,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/244,1,['detect'],['detection']
Safety,"The original OBAromTyper applies atom types (corresponding to the number of pi electrons donated by particular atom environments) by matching SMARTS patterns against a molecule. Which somewhat convenient, this is a very inefficient way of applying the types, as it is all-against-all involving redundant matches, and also has subsequent pruning (based on hybridisation) in the code. The use of the 'D' in the SMARTS patterns almost meant that different results were possible depending on whether implicit or explicit hydrogens were present. This has been replaced with a more efficient, and fairly readable (IMO) switch statement on element, then on charge, and then heavy atom degree (in general). Pruning is now done *before* the switch statement. Reading SMILES is about 3.5% faster (based on ChEMBL ""-ismi -onul""). The SMILES output for ChEMBL, eMolecules and PubChem Compound is unchanged except for a single eMolecules entry where the output was previously in error.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/378:294,redund,redundant,294,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/378,1,['redund'],['redundant']
Safety,"The original OBAromTyper applies atom types (corresponding to the number of pi electrons donated by particular atom environments) by matching SMARTS patterns against a molecule. Which somewhat convenient, this is a very inefficient way of applying the types, as it is all-against-all involving redundant matches, and also has subsequent pruning (based on hybridisation) in the code. The use of the 'D' in the SMARTS patterns almost meant that different results were possible depending on whether implicit or explicit hydrogens were present. This has been replaced with a more efficient, and fairly readable (IMO) switch statement on element, then on charge, and then heavy atom degree (in general). Pruning is now done before the switch statement. Reading SMILES is about 3.5% faster (based on ChEMBL ""-ismi -onul""). The SMILES output for ChEMBL, eMolecules and PubChem Compound is unchanged except for a single eMolecules entry where the output was previously in error.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1545:294,redund,redundant,294,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1545,1,['redund'],['redundant']
Safety,"The original patch is from @rogersayle, which I've restricted a bit. This is is a SMILES extension that is already present in OEChem and RDKit, both undocumented and due to Roger. For at least OEChem, support is present for 1- and 2-digit numbers too. The primary use case is to support new elements where we don't yet have the symbol, but also to read SMILES written by OEChem/RDKit where *they* don't yet have the symbol. My own take is that this seems relatively safe, at least if restricted to 3-digits. As an implementation detail, if an atomic number >255 is specified, the SMILES is rejected with a warning (we use a char for the atomic number).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1997:466,safe,safe,466,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1997,1,['safe'],['safe']
Safety,"There are a few related changes here:; 1. Move the setting of the HasChainsPerceived() flag into the perception function itself, rather than out here in OBAtom::GetResidue(). What if someone calls the perception function directly? The new behavior is consistent with other perceived properties.; 2. Rewrite the function so that it is driven by the HasChainsPerceived() flag, rather than first checking whether the atom has a _residue assigned. This is the behavior I've been fixing for other lazily perceived properties.; 3. Remove the code to force (or avoid) perception added by @ghutchis 11 years ago to help Avogadro and others. This looks like a workaround because (2) was not done. How the lazily evaluated system is supposed to work is that you can force or avoid perception using the HasChainsPerceived() flag. Adding or removing an atom will call EndModify() and blow away this flag (I haven't changed this behavior but we could), but the user can store and reset the flag after edits if so desired.; 4. Remove the code to wipe the existing _residue if the chains perception returns false. This code doesn't make any sense as it only wipes a single residue. If all of the residues should be wiped then this is the responsibility of the perception code, which is in charge of setting these.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1849:554,avoid,avoid,554,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1849,2,['avoid'],['avoid']
Safety,"These readers only read atom positions, the unit cell,; and the electronic energy. They were also added to the generic ""out"" format so that; they can be automatically detected.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1793:167,detect,detected,167,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1793,1,['detect'],['detected']
Safety,"This PR has two changes:; 1. Keep aromaticity in EndModify(); 2. A drive-by removal of code in EndModify() that I recognise as a workaround for the problem fixed in #1724. I know that there's an idea that all lazily perceived flags should be blown away in EndModify(), but I think this is going too far - we should try as far as possible to avoid blowing away information that has been perceived. Here I make a minor change so that aromaticity perception is preserved even when, for example, an atom is deleted (which triggers this code). IMO, this keeps things simpler and more understandable. Aromaticity will only be reperceived when the user directly unsets the aromaticity flag of the OBMol. Until then, they can delete all they want and nothing will change. If the user deletes an atom from benzene and writes it out as SMILES and sees that it is aromatic, they will soon realise what's going on. This is easier to understand than the current situation, where if you want to preserve the aromatic flags then you need to set the molecule as having aromaticity perceived after deleting an atom. To a user, it wouldn't be at all obvious that this is possible.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1847:341,avoid,avoid,341,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1847,1,['avoid'],['avoid']
Safety,"This PR makes SMILES writing fast. The main speedup was to avoid regenerating an OBStereoFacade each time we needed to look up a single atom. This was occurring in multiple places. Now a single OBStereoFacade is used for the molecule. Also, I have removed all uses of strcpy, strlen and strcat. There is some room for further speedups but I might move onto other stuff for now.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1699:59,avoid,avoid,59,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1699,1,['avoid'],['avoid']
Safety,"This happens reproducibly at least on: armv7hl, aarch64, ppc64, ppc64le. ```; 97% tests passed, 4 tests failed out of 157; Total Test time (real) = 4300.78 sec; The following tests FAILED:; 62 - test_regressions_1 (OTHER_FAULT); 63 - test_regressions_221 (OTHER_FAULT); 147 - inchiSteffen_PubChem.smi_Test (Timeout); 149 - pytest_sym (Timeout); Errors while running CTest; Makefile:130: recipe for target 'test' failed; ```. The relevant log snippets are:. ```; Start 62: test_regressions_1; 62/157 Test #62: test_regressions_1 ...............***Exception: Other601.71 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Start 63: test_regressions_221; 63/157 Test #63: test_regressions_221 .............***Exception: Other587.19 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; ```. ```; 147/157 Test #147: inchiSteffen_PubChem.smi_Test ....***Timeout 1500.01 sec; ==============================; *** Open Babel Warning in InChI code; #8 :Salt was disconnected;; ==============================; *** Open Babel Warning in InChI code; #30 :Salt was disconnected;; ```. ```; 149/157 Test #149: pytest_sym .......................***Timeout 1500.01 sec; ```. git commit used: 3a63a9849f8d9719c5989c43875d51be50c53019; environment: Fedora development branch (rawhide)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/266:307,Timeout,Timeout,307,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/266,4,['Timeout'],['Timeout']
Safety,"This is a follow-up to PR#1257827; https://sourceforge.net/tracker/?func=detail&aid=1257827&group_id=40728&atid=428740. The key problem is that formal charges should be assigned for some formats (e.g., XYZ) before aromaticity detection can occur. Many ""standard"" formats (e.g., SDF, SMILES) already have formal charges marked correctly, so this isn't an issue. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/940:226,detect,detection,226,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/940,1,['detect'],['detection']
Safety,"This may be related to issue #1551, but I tried using OBResidue's GetAtoms method because I'm trying to get the character code of the atoms in each residue. I can call the method and assign the result to a variable, but the result can't be indexed (has no __getitem__ attribute). Also, when I evaluate the variable in the interpreter, I get a message about a memory leak. I've tried demonstrating this behaviour below. ```; >>> r = mol.GetResidue(2); >>> r.GetNumAtoms(); 16; >>> r.GetAtoms(); <Swig Object of type 'std::vector< OpenBabel::OBAtom *,std::allocator< OpenBabel::OBAtom * > > *' at 0x105e14450>; >>> atom_list = r.GetAtoms(); >>> atom_list; swig/python detected a memory leak of type 'std::vector< OpenBabel::OBAtom *,std::allocator< OpenBabel::OBAtom * > > *', no destructor found.; <Swig Object of type 'std::vector< OpenBabel::OBAtom *,std::allocator< OpenBabel::OBAtom * > > *' at 0x105e14420>; >>> atom_list[1]; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: 'SwigPyObject' object has no attribute '__getitem__'; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1552:666,detect,detected,666,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1552,1,['detect'],['detected']
Safety,"This problem arose with OpenBabel 2.2.3 on Ubuntu 10.04. When presented with a chiral SMILES whose chiral center is bonded to more than four neighbors, src/formats/smilesformat.cpp may overrun memory. A patch is attached. I'm not a chemist, so please pardon my lack of clarity :). I encountered the problem while using babel to convert a proprietary SMILES in which a chiral center was bonded to more than four other atoms. Here is a non-proprietary sample SMILES which helps demonstrate the problem:; [N@@]1234([C@@]9([C@H]1[C@H]3[C@@H]4[C@@H]29)). If this is saved to a file named problem.smi, and if babel is run under valgrind to convert the smiles to another format, valgrind will detect the memory overrun:; $ valgrind babel -i smi problem.smi -o sdf problem.sdf; (See below for full valgrind output.). The attached patch for src/formats/smilesformat.cpp addresses the problem by resizing (ChiralSearch->second)->refs as needed. {{{; $ valgrind babel -i smi problem.smi -o sdf problem.sdf; ==4287== Memcheck, a memory error detector; ==4287== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.; ==4287== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for copyright info; ==4287== Command: babel -i smi problem.smi -o sdf problem.sdf; ==4287== ; ==4287== Invalid write of size 4; ==4287== at 0xC061A37: OpenBabel::OBSmilesParser::ParseComplex(OpenBabel::OBMol&) (smilesformat.cpp:2398); ==4287== by 0xC069DFA: OpenBabel::OBSmilesParser::ParseSmiles(OpenBabel::OBMol&) (smilesformat.cpp:988); ==4287== by 0xC06A3AB: OpenBabel::OBSmilesParser::SmiToMol(OpenBabel::OBMol&, std::string const&) (smilesformat.cpp:938); ==4287== by 0xC06AD27: OpenBabel::SMIBaseFormat::ReadMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*) (smilesformat.cpp:890); ==4287== by 0x4F0C864: OpenBabel::OBMoleculeFormat::ReadChemObjectImpl(OpenBabel::OBConversion*, OpenBabel::OBFormat*) (obmolecformat.cpp:93); ==4287== by 0x4EF5E67: OpenBabel::OBConversion::Convert() (obconversion.cpp:481); =",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1007:686,detect,detect,686,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1007,1,['detect'],['detect']
Safety,This pull request updates #1850. Currently this is a draft. - Add fragment index generator. I forgot to include it.; - Use ring fragments for better prediction.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1931:149,predict,prediction,149,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1931,1,['predict'],['prediction']
Safety,"This relates to reading the correct change and spin multiplicity when importing a Gaussian log file (.g03). The current implementation looks for the a line containing ""Symbolic Z-matrix:"" then reads the 3rd and 6th tokens from the next line, which usually says ""Charge = # Multiplicty = #"". Some log files do not contain the words ""Symbolic Z-matrix"", but follow a different format, such as:. Cartesian coordinates read from the checkpoint file:; checkpointfilename.chk; Charge = # Multiplicity = #. or. Redundant internal coordinates taken from checkpoint file:; checkpointfilename.chk; Charge = # Multiplicity = #. Molecules read from these log files end up with no charge or spin multiplicity set. Instead of looking for the line after ""Symbolic Z-matrix"", is there any harm in just looking for the line containing ""Multiplicity ="" ?. (The latter seems to work for all my files). Reported by: rhw27",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/747:504,Redund,Redundant,504,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/747,1,['Redund'],['Redundant']
Safety,Thread-safe SMARTS matching (patch provided),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1524:7,safe,safe,7,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1524,1,['safe'],['safe']
Safety,Thread-safe version of objects,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2269:7,safe,safe,7,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2269,1,['safe'],['safe']
Safety,"To whom it may concern My name is Alfredo Alba ( alba.alfredo@gmail.com) . Operating on Linux CentOS 5.4 and Fedora core 11, and 12. Have been using Open Babel over the JNI interface for a while and recently I found that when running in a concurrent environment it causes carashes. . I have tried SUN JVM 1.6 and IBM JVM 1.6 as well they both present the issue. . Essentially I am running a Web App with the LD_PRELOAD=/usr/loca/lib/libopenbabeljni.so option. . In this scenario when 2 Smile to InChI conversion calls execute simultaneously Sometimes Open babel produces the following Stack:. terminate called after throwing an instance of 'std::ios_base::failure'; what(): basic_ios::clear; JVMDUMP006I Processing dump event ""abort"", detail """" - please wait.; JVMDUMP032I JVM requested System dump using '/localdata/tomcat55/bin/core.20100328.223821.420.0001.dmp' in response to an event; Unhandled exception; Type=Segmentation error vmState=0x00020002; J9Generic_Signal_Number=00000004 Signal_Number=0000000b Error_Value=00000000 Signal_Code=00000001; Handler1=00002AAAAACE7310 Handler2=00002AAAAB06F720 InaccessibleAddress=0000000000000010; RDI=000000000000000C RSI=00000000000001B0 RAX=00000000000001B1 RBX=00002AACCC1EA730; RCX=000000000000000C RDX=0000000000000000 R8=00002AACCC000128 R9=0101010101010101; R10=0000000000000006 R11=0000000000200206 R12=00002AACCC000078 R13=00002AACCC000020; R14=0000000000000001 R15=0000000000000880; RIP=0000003F6F872B31 GS=0000 FS=0000 RSP=0000000041C86F30; EFlags=0000000000210202 CS=0033 RBP=0000000000000000 ERR=0000000000000006; TRAPNO=000000000000000E OLDMASK=0000000000000000 CR2=0000000000000010; xmm0 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm1 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm2 00002aacbc083b58 (f: 3154656000.000000, d: 2.318224e-310); xmm3 00002aacbc083ba5 (f: 3154656256.000000, d: 2.318224e-310); xmm4 00002aaaaae4a100 (f: 2867110144.000000, d: 2.317785e-310); xmm5 0000000000000000 (f: 0.000000, d: 0.000000e+00); xm",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/979:727,abort,abort,727,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/979,1,['abort'],['abort']
Safety,"Together with the ``-r`` option for ""strip all but the largest component"", neutralize is often an essential first step for standardising a dataset of molecules (especially as provided by vendors). Here's the help text from ```obabel -L neutralize``` (some additional background at https://baoilleach.blogspot.com/2019/12/no-charge-simple-approach-to.html):. ```; One of the ops; neutralize Neutralize +1 and -1 charges. Note: this method accepts an optional argument 'changed' which is; described below. This method uses a simple procedure to generate the neutral form of a; molecule. It does not attempt to balance charges but simply to convert; all atoms with a +1 or -1 charge to neutral by addition or subtraction; of H+. To a first approximation the procedure is simply to identify all atoms with; either a +1 or -1 charge, set their charges to zero and adjust their; hydrogen counts by -1 or +1 (i.e. we are adding/removing H+). The first; minor issue is that +1 charged atoms must have a hydrogen, or otherwise; we can't remove H+. The second issue is that we must avoid altering; charge-separated representations of multiple bonds, such as nitro which; is often represented as [N+](=O)[O-]. It does this by checking whether a; neighbor atom has a negative charge (for the +1 atoms) or a positive; charge (for the -1 atoms). If specified, the optional argument 'changed' causes the method to return; True if the molecule was changed by the neutralize operation, and False; otherwise. This is mostly useful if using the API, but for command-line; usage (e.g. via obabel) this filters out molecules that are unchanged; by the operation and only retains those that are changed.; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2109:1072,avoid,avoid,1072,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2109,1,['avoid'],['avoid']
Safety,Trunk fails aromatic detection,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/963:21,detect,detection,21,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/963,1,['detect'],['detection']
Safety,"Using babel 2.1.0. Defining sulphur radical SMILES in the way you can define carbon radicals doesn't work. We can define carbon radicals using explicit hydrogens and radical centres are correctly detected:. $ echo ""C[CH2]"" | babel -ismi -ocml; <?xml version=""1.0""?>; <molecule xmlns=""http://www.xml-cml.org/schema"">; <atomArray>; <atom id=""a1"" elementType=""C""/>; <atom id=""a2"" elementType=""C"" spinMultiplicity=""2""/>; <atom id=""a3"" elementType=""H""/>; <atom id=""a4"" elementType=""H""/>; </atomArray>; <bondArray>; <bond atomRefs2=""a1 a2"" order=""1""/>; <bond atomRefs2=""a2 a3"" order=""1""/>; <bond atomRefs2=""a2 a4"" order=""1""/>; </bondArray>; </molecule>. Try doing the same for HOSO2 and the radical centre is ignored:. $ echo ""O[S](=O)=O"" | babel -ismi -ocml; <?xml version=""1.0""?>; <molecule xmlns=""http://www.xml-cml.org/schema"">; <atomArray>; <atom id=""a1"" elementType=""O""/>; <atom id=""a2"" elementType=""S""/>; <atom id=""a3"" elementType=""O""/>; <atom id=""a4"" elementType=""O""/>; </atomArray>; <bondArray>; <bond atomRefs2=""a1 a2"" order=""1""/>; <bond atomRefs2=""a2 a3"" order=""2""/>; <bond atomRefs2=""a2 a4"" order=""2""/>; </bondArray>; </molecule>. If you convert to InChI an extra hydrogen is inserted:. $ echo ""O[S](=O)=O"" | babel -ismi -oinchi; InChI=1/H2O3S/c1-4(2)3/h4H,(H,1,2,3). If you use the non-standard ""."" syntax it gets it right:. $ echo ""O[S.](=O)=O"" | babel -ismi -ocml; <?xml version=""1.0""?>; <molecule xmlns=""http://www.xml-cml.org/schema"">; <atomArray>; <atom id=""a1"" elementType=""O""/>; <atom id=""a2"" elementType=""S"" spinMultiplicity=""2""/>; <atom id=""a3"" elementType=""O""/>; <atom id=""a4"" elementType=""O""/>; </atomArray>; <bondArray>; <bond atomRefs2=""a1 a2"" order=""1""/>; <bond atomRefs2=""a2 a3"" order=""2""/>; <bond atomRefs2=""a2 a4"" order=""2""/>; </bondArray>; </molecule>. Reported by: donquix2003",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/749:196,detect,detected,196,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/749,1,['detect'],['detected']
Safety,"When `OBSmartsPattern::Init()` is called more than once in one object, a memory leak occurs. ## Environment Information; Open Babel version: Current master (`699a54e`); Operating system and version: Ubuntu 16.04. ## Steps to Reproduce; 1. Save the following code `leak.cpp`.; ```cpp; #include <openbabel/parsmart.h>. int main() {; OpenBabel::OBSmartsPattern sp;; sp.Init(""CC"");; sp.Init(""CO"");; }; ```; 2. Compile `leak.cpp` with sanitize flags; ```; g++ -g -fsanitize=address -fno-omit-frame-pointer -Wall -I /usr/local/include/openbabel-2.0/ -L /usr/local/lib/openbabel/2.4.90/ leak.cpp -o leak -lopenbabel; ```; 3. Execute the compiled program. The output in my environment was:; ```; $ ./leak . =================================================================; ==11385==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 48 byte(s) in 1 object(s) allocated from:; #0 0x7f57a6778532 in operator new(unsigned long) (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x99532); #1 0x7f57a63ba27d in OpenBabel::OBSmartsPattern::ParseSMARTSPattern() (/usr/local/lib/libopenbabel.so.5+0x17427d). Indirect leak of 104 byte(s) in 1 object(s) allocated from:; #0 0x7f57a67786b2 in operator new[](unsigned long) (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x996b2); #1 0x7f57a63b8fa1 in OpenBabel::CreateAtom(OpenBabel::Pattern*, OpenBabel::_AtomExpr*, int, int) (/usr/local/lib/libopenbabel.so.5+0x172fa1). Indirect leak of 48 byte(s) in 2 object(s) allocated from:; #0 0x7f57a6778532 in operator new(unsigned long) (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x99532); #1 0x7f57a63b7743 in OpenBabel::OBSmartsPattern::ParseSimpleAtomPrimitive() (/usr/local/lib/libopeParseSMARTSPartnbabel.so.5+0x171743). Indirect leak of 24 byte(s) in 1 object(s) allocated from:; #0 0x7f57a6778532 in operator new(unsigned long) (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x99532); #1 0x7f57a63b9965 in OpenBabel::OBSmartsPattern::SMARTSParser(OpenBabel::Pattern*, OpenBabel::ParseState*, int, int) (/usr/local/lib/libopenbabel.so.5+",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1869:797,detect,detected,797,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1869,1,['detect'],['detected']
Safety,"When reading a line beginning with ""ATOM"" or ""HETATM"" in PDB file,; openbabel computes element from atom name field instead of element field. Here some extract of PDB documentation :; ""Therefore the PDB element column or mmCIF type_symbol data item should; be used to determine the element type, rather than using the atom name.""; (April 25, 2007); http://remediation.wwpdb.org/documentation/remediation_overview.pdf; ""Using the justification of the atom name to derive atom type; information is now strongly discouraged."" (June 29, 2007); http://remediation.wwpdb.org/documentation/remediation-impacts.pdf. Source code (ParseAtomRecord function) :; https://openbabel.svn.sourceforge.net/svnroot/openbabel/openbabel/trunk/src/formats/atomrecord.cpp . Patch explanation :; ParseAtomRecord is called when reading PDB file and PQR format because ""[PQR] format is a modification of the PDB format"" ).; In fact PDD and PQR formats are not so identical, for example in HETATM/ATOM lines, element field is mandatory for PDB format while PQR format doesn't mention it.; PDB format:; http://www.wwpdb.org/documentation/format32/sect9.html#ATOM; PQR format:; http://apbs.sourceforge.net/doc/user-guide/index.html#pqr-format. With this patch :; - PDB format and PQR format have each one their own ParseAtomRecord function (atomrecord.cpp is deleted) ; - Callers of ParseAtomRecord take care of returned value; - read/write PDB field charge (column 79-80). Please let me know if you see possible improvements. What is the coding style (code appearance) for openbabel ?. Reported by: lleell00",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/840:356,remediat,remediation,356,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/840,3,['remediat'],"['remediation', 'remediation-impacts']"
Safety,"When using MCDL to generate 2D images, valgrind reports a large number of conditional jumps that rely in uninitialized memory. Looking at the code (mcdlutil.cpp), these seem to be related to the TEditedMolecule class variables: fIOPT10, fIOPT11, fIOPT12 and fIOPT13, which don't seem to ever be set to any value. Below is the (partial) output from this command:. echo ""CCO"" | valgrind babel -i smi -o sdf --gen2d. ==7281== Memcheck, a memory error detector; ==7281== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.; ==7281== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for copyright info; ==7281== Command: babel -i smi -o sdf --gen2d; ==7281== ; ==7281== Conditional jump or move depends on uninitialised value(s); ==7281== at 0x52AA4E4: OpenBabel::TEditedMolecule::prepareQuery(OpenBabel::TSimpleMolecule&) (mcdlutil.cpp:4510); ==7281== by 0x52C22D5: OpenBabel::TemplateRedraw::TemplateRedraw() (mcdlutil.cpp:5217); ==7281== by 0x52C2E38: OpenBabel::generateDiagram(OpenBabel::OBMol*) (mcdlutil.cpp:6117); ==7281== by 0x126E05ED: OpenBabel::OpGen2D::Do(OpenBabel::OBBase*, char const*, std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > > const*, OpenBabel::OBConversion*) (gen2D.cpp:54); ==7281== by 0x5335725: OpenBabel::OBMol::DoTransformations(std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > > const*, OpenBabel::OBConversion*) (op.h:89); ==7281== by 0x5340A02: OpenBabel::OBMoleculeFormat::ReadChemObjectImpl(OpenBabel::OBConversion*, OpenBabel::OBFormat*) (obmolecformat.cpp:113); ==7281== by 0x52E1147: OpenBabel::OBConversion::Convert() (obconversion.cpp:465); ==7281== by 0x52E182C: OpenBabel::OBConversion::Convert(std::istream*, std::ostream*) (obconversion.cpp:398); ==7281== by 0x52E78E5: OpenBabel::OBConversion::FullConvert(std::vector<std::string, std::allocator<std::string> >&, std::string&, std::vector<std::strin",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1178:448,detect,detector,448,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1178,1,['detect'],['detector']
Safety,Wrong space group detection,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/263:18,detect,detection,18,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/263,1,['detect'],['detection']
Safety,"XLC is rather strict about syntax:. [ 18%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/inchi_dll.o; [ 18%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/inchi_dll_a.o; ""/home/jhammond/OPENBABEL/openbabel/src/formats/libinchi/ikey_dll.c"", line 265.10: 1506-342 (W) ""/*"" detected in comment. Merge in the following to fix this issue. https://github.com/jeffhammond/openbabel/commit/16fa16a1199927712c9bdc4133ada50087e84f5d. Thanks,. Jeff. Reported by: @jeffhammond. Original Ticket: [openbabel/bugs/925](https://sourceforge.net/p/openbabel/bugs/925)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1305:299,detect,detected,299,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1305,1,['detect'],['detected']
Safety,"```; import pybel. mA = pybel.readstring(""smi"", ""C(=O)([O-])C(=O)O""). print (mA.write(""smi"", opt={""I"" : True})); print (mA.write(""smi"", opt={""U"" : True})); ```. I expected this code to print the inchified SMILES form of the molecule followed by the universal SMILES form. In fact it works when the order of the write operations is reversed. But this ordering leads to abnormal program termination:. matt@mbe-laptop:~$ python pybel-bug.py ; C(=O)(C(=O)O)[O-] . terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check; Aborted",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/135:560,Abort,Aborted,560,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/135,1,['Abort'],['Aborted']
Safety,"alias.cpp contains code that replaces some groups defined in superatom.txt file, with the corresponding aliases, like C(=O)C with Ac. The aliases from superatom.txt are always considered protonated, and implicit hydrogens are added to them to avoid replacing fragments in the middle of the molecule, so e.g. C(=O)CC should not be replaced with Ac. However, the molecule of interest can lack implicit hydrogens. In case of non-protonated molecules, out of range error can happen here:. `int id =(pmol->GetAtom(idx))->GetId();`. when it tries to find and remove all atoms found in alias including hydrogens lacking in the molecule. So idx can easily exceed the number of atoms in pmol. It causes out of bounds error and segfault as shown in my minimal example in issue description. Guess that incorrect behavior rather than segfault can also be a result.; The fix creates a protonated copy of the molecule to find numbers of all atoms that should be stripped and replaced with aliases. Hydrogens that have numbers above number of atoms in original molecule are ignored. This should ensure that hydrogens present in the original molecule are retained.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2102:243,avoid,avoid,243,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2102,1,['avoid'],['avoid']
Safety,"at openbabel generated up to now, versus the canonicals that are generated now for organometallic compounds. For further details consult my personal [repository for my end-of-degree project](https://github.com/Jesnm01/TFG) and in particular the [pdf document](https://mega.nz/file/FPJkhJga#ZU-TXKrflhvMlD_9RLcnW0eJ8yV8RCQG4e08vYytXXk) for the project. Bear in mind that the pdf document as well as most of the explanatory comments that I make in the code are in Spanish, so if not familiar with the language it may be difficult to understand it directly. Most relevant sections of the pdf are chapter 4.2 and chapter 5. Looking at the sizes of the other pull requests, I understand that the changes I propose are quite large and many features need to be revised or even rejected entirely. These are the classes to which I added new variables or methods:; - Added new features or variables to these classes:; - _OBMol_; - _OBAtom_; - _OBMol2Cansmi_; - _OBCanSmiNode_; - _SVGPainter_ (consecuently to _OBPainter_, _ASCIIPainter_ and _CommandPainter_); - Added these new classes:; - _CpComplex_: handle and define Cp (cyclopentadienyl) structures; - _BranchBlock_: detect branches during the canonicalization process, mainly for Cp depiction purposes; - _OpCpDraw_: plugin operation for identification and Cp storing inside the molecule for its later depiction.; - _SubTreeSizes_: helping struct for new organometallic canonicalization method.; - _subtreecomp_ and _mycomp_: custom comparator objects for the new organometallic canonicalization method.; - Modified some methods such as _CreateCansmiString_ or _OBDepict::DrawMolecule_ (among others) to fit in the new code. Modifications have comments above starting with '//New:' explaining them. In case its relevant, I've been working in Visual Studio C++ 2022 for Windows. . Let me know any concerns regarding the code.; Right now I don't have a lot of time to dedicate to this project, so I may not be able to quickly address any changes requested.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2616:2331,detect,detect,2331,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2616,1,['detect'],['detect']
Safety,"ava-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf717a50]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf72d1c3]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf72d2b0]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf732aa5]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf7654f1]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf765427]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9prt24.so [0x2aaaab06ee21]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf76546b]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9thr24.so [0x2aaaaae4efd6]; /lib64/libpthread.so.0 [0x3f70006617]; /lib64/libc.so.6(clone+0x6d) [0x3f6f8d3c2d]; ---------------------------------------; JVMDUMP006I Processing dump event ""gpf"", detail """" - please wait.; JVMDUMP010I System dump written to /localdata/tomcat55/bin/core.20100328.223821.420.0001.dmp; JVMDUMP032I JVM requested Snap dump using '/localdata/tomcat55/bin/Snap.20100328.223821.420.0003.trc' in response to an event; JVMDUMP010I Snap dump written to /localdata/tomcat55/bin/Snap.20100328.223821.420.0003.trc; JVMDUMP032I JVM requested Java dump using '/localdata/tomcat55/bin/javacore.20100328.223821.420.0004.txt' in response to an event; JVMDUMP032I JVM requested System dump using '/localdata/tomcat55/bin/core.20100328.223821.420.0002.dmp' in response to an event; JVMDUMP010I Java dump written to /localdata/tomcat55/bin/javacore.20100328.223821.420.0004.txt; JVMDUMP013I Processed dump event ""abort"", detail """". The following smiles are instances where concurrent execution causes the issue:. [ Sun Mar 28 22:38:20 PDT 2010 ] Attempting to convert: O1CCOCC1 From smi to inchi; [ Sun Mar 28 22:38:20 PDT 2010 ] Attempting to convert: OS(=O)O From smi to inchi; [ Sun Mar 28 22:38:20 PDT 2010 ] Attempting to convert: C([C@@H](N)CCCCN)(=O)O From smi to inchi. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/979:5825,abort,abort,5825,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/979,1,['abort'],['abort']
Safety,avoid non-finite bond vectors,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1981:0,avoid,avoid,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1981,1,['avoid'],['avoid']
Safety,buffer overflows detected,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/821:17,detect,detected,17,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/821,1,['detect'],['detected']
Safety,"d-tables -ftree-vectorize -feliminate-unused-debug-types -Wall -Wno-error -Wp,-D_REENTRANT' '-DCMAKE_CXX_FLAGS=-mtune=generic -march=x86-64 -g2 -O2 -pipe -fPIC -fno-omit-frame-pointer -fexceptions -D_FORTIFY_SOURCE=2 -fstack-protector --param ssp-buffer-size=32 -fasynchronous-unwind-tables -ftree-vectorize -feliminate-unused-debug-types -Wall -Wno-error -Wp,-D_REENTRANT' '-DCMAKE_LD_FLAGS=-Wl,--copy-dt-needed-entries -Wl,-O1 -Wl,-z,relro -Wl,-z,now -Wl,-z,max-page-size=0x1000' -DCMAKE_LIB_SUFFIX=64 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX=/usr .; -- The C compiler identification is GNU 6.4.0; -- The CXX compiler identification is GNU 6.4.0; -- Check for working C compiler: /usr/lib64/ccache/bin/x86_64-solus-linux-gcc; -- Check for working C compiler: /usr/lib64/ccache/bin/x86_64-solus-linux-gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/lib64/ccache/bin/x86_64-solus-linux-g++; -- Check for working CXX compiler: /usr/lib64/ccache/bin/x86_64-solus-linux-g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Using included inchi library.; -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.9.4"") ; -- Found ZLIB: /usr/lib/libz.so (found version ""1.2.11"") ; -- Found wxWidgets: -L/usr/lib64;-pthread;-Wl,--copy-dt-needed-entries;-Wl,-O1;-Wl,-z,relro;-Wl,-z,now;;-L/usr/lib64;;-lwx_baseu-2.8;-lwx_gtk2u_core-2.8;-lwx_gtk2u_adv-2.8 (found version ""2.8.12"") ; -- Looking for conio.h; -- Looking for conio.h - not found; -- Looking for sys/time.h; -- Looking for sys/time.h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - found; -- Looking for regex.h; -- Looking for r",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1624:1200,Detect,Detecting,1200,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1624,8,['Detect'],['Detecting']
Safety,"e C(=O)N; [#6D3^2]([#8D1])([#7])*		0 1 2 0 2 1 0 3 1; # Seleninic acid Se(=O)OH; [#34D3^2]([#8D1])([#8])*		0 1 2 0 2 1 0 3 1; # Thioacid / Thioester C(=O)S; [#6D3^2]([#8D1])([#16])*		0 1 2 0 2 1 0 3 1; # dithioacid / dithioester C(=S)S; [#6D3^2]([#16D1])([#16])*		0 1 2 0 2 1 0 3 1; # thioamide C(=S)N; [#6D3^2]([#16D1])([#7])*		0 1 2 0 2 1 0 3 1 . ^^^ these are fixes for the multi-match problem, look; for example at the attached cs3.pdb, which is typed as; C(=S)(=S)S without the fix. >replace; # amidine -C(=NH)NH2; # (only need to deal with case with implicit hydrogens); # (the code can figure out the other case by itself); [#6D3][#7D1][#7D1]	 0 1 2 0 2 1. # guanidinium (place C=N towards C-N-C nitrogen); # as in amidine, only need to deal with case with; implicit hydrogens; [#7D2][#6D3]([#7D2])[#7D2]	0 1 1 1 2 2 1 3 1; >with; # guanidinium and amidine -C(=NH)NH2 without hydrogens; [#6D3^2;!R]([#7D1H0;!R])([#7;!R])*	0 1 2 0 2 1 0 3 1; # and also with hydrogens; # (this can normally be figured out, but is needed to; avoid matching the next SMARTS); [#6D3^2;!R]([#7D2H1;!R])([#7;!R])*	0 1 2 0 2 1 0 3 1; # and also with more hydrogens than normal (protonated); [#6D3^2;!R]([#7D3H2;!R])([#7;!R])*	0 1 2 0 2 1 0 3 1; # Schiff base, protonated; [#6D3^2;!R]([#1,#6])([#1,#6])[#7D3^2;!R]([#1])[#6]	0 1; 1 0 2 1 0 3 2 3 4 1 3 5 1. ^^^ The original guanidinium pattern never worked (why; 3 times [#7D2] if no hydrogens are present?), things; also went wrong for PDB files with explicit hydrogens:; If the guanidinium group was protonated, Babel didn't; add a double bond, but a hydrogen to the central; guanidinium carbon. The '!R' turned out to be important; for typing heterocycles, which often contain parts that; look similar. >replace; # heme / porphyrin or phthalocyanine (yes, it's a long; pattern); # 0 1 2 3 4 5 6 7 8 9 10 11 12; 13 14 15 16 17 18 19 20 21 22 23; [#6]1(*[#6]([#7]2)[#6][#6][#6]2*[#6]3[#6][#6][#6]4[#7]3)[#6][#6][#6](*[#6]5[#6][#6][#6]([#7]5)*4)[#7]1; 	0 1 2 1 2 1 2 3 ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/475:1764,avoid,avoid,1764,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/475,1,['avoid'],['avoid']
Safety,"error with building trunk on slackware 14rc1 (eigen2 2.0.10); [ 0%] Building CXX object src/CMakeFiles/openbabel.dir/distgeom.o; cd /tmp/SBo/trunk/build/src && /usr/bin/c++ -DMAKE_OBDLL -DUSING_DYNAMIC_LIBS -DHAVE_LIBZ -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -D__WXGTK__ -DHAVE_WXWIDGETS -DHAVE_SHARED_POINTER -DHAVE_EIGEN -O2 -march=i486 -mtune=i686 -pthread -O3 -DNDEBUG -O2 -DNDEBUG -fPIC -isystem /usr/lib/wx/include/gtk2-unicode-release-2.8 -isystem /usr/include/wx-2.8 -I/tmp/SBo/trunk/build/include -I/tmp/SBo/trunk/data -I/tmp/SBo/trunk/include -I/usr/include/eigen2 -DOB_MODULE_PATH=""\""/usr/lib/openbabel/2.3.2\"""" -o CMakeFiles/openbabel.dir/distgeom.o -c /tmp/SBo/trunk/src/distgeom.cpp; In file included from /tmp/SBo/trunk/src/distgeom.cpp:22:0:; /tmp/SBo/trunk/include/openbabel/distgeom.h:32:23: фатальная ошибка: Eigen/Dense: Нет такого файла или каталога; компиляция прервана. (cyrillic message is ""fatal error: Eigen/Dense: no such file or directory compilation aborted). with building 2.3.1 on the same system:; [ 18%] Building CXX object src/CMakeFiles/openbabel.dir/math/align.o; cd /tmp/SBo/openbabel-2.3.1/build/src && /usr/bin/c++ -DMAKE_OBDLL -DUSING_DYNAMIC_LIBS -DHAVE_LIBZ -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -D__WXGTK__ -DHAVE_WXWIDGETS -DHAVE_EIGEN -O2 -march=i486 -mtune=i686 -pthread -O3 -DNDEBUG -O2 -DNDEBUG -fPIC -isystem /usr/lib/wx/include/gtk2-unicode-release-2.8 -isystem /usr/include/wx-2.8 -I/tmp/SBo/openbabel-2.3.1/build/include -I/tmp/SBo/openbabel-2.3.1/data -I/tmp/SBo/openbabel-2.3.1/include -I/usr/include/eigen2 -DOB_MODULE_PATH=""\""/usr/lib/openbabel/2.3.1\"""" -o CMakeFiles/openbabel.dir/math/align.o -c /tmp/SBo/openbabel-2.3.1/src/math/align.cpp; In file included from /usr/include/eigen2/Eigen/Core:99:0,; from /tmp/SBo/openbabel-2.3.1/include/openbabel/math/align.h:26,; from /tmp/SBo/openbabel-2.3.1/src/math/align.cpp:24:; /usr/include/eigen2/Eigen/src/Core/MathFunctions.h: In instantiation of «T Eigen::ei_hypot(T, T) [with T = double]»:; /usr/i",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1203:977,abort,aborted,977,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1203,1,['abort'],['aborted']
Safety,glibc detected: Double free or Corruption,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/675:6,detect,detected,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/675,1,['detect'],['detected']
Safety,"hemOutputFormat15ReadCoordinatesEPSiPNS_5OBMolE+0x1ff)[0x7fffe0f5ae5f]; /usr/lib/openbabel/2.4.0/nwchemformat.so(_ZN9OpenBabel18NWChemOutputFormat12ReadMoleculeEPNS_6OBBaseEPNS_12OBConversionE+0x1ba)[0x7fffe0f5c82a]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel16OBMoleculeFormat18ReadChemObjectImplEPNS_12OBConversionEPNS_8OBFormatE+0xd44)[0x7ffff7754ae4]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion7ConvertEv+0x1d5)[0x7ffff76f9a35]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion7ConvertEPSiPSo+0xa9)[0x7ffff76ff5f9]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion11FullConvertERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS7_SA_+0x1f71)[0x7ffff7701671]; /usr/bin/babel(main+0xacb)[0x402d9b]; /usr/lib64/libc.so.6(__libc_start_main+0xf1)[0x7ffff7a37731]; /usr/bin/babel(_start+0x29)[0x403429]. ```. In GDB:. ```; (gdb) backtrace; #0 0x00007ffff7a4b6f5 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:54; #1 0x00007ffff7a4d2fa in __GI_abort () at abort.c:89; #2 0x00007ffff7a8c670 in __libc_message (do_abort=do_abort@entry=2, fmt=fmt@entry=0x7ffff7ba3060 ""*** Error in `%s': %s: 0x%s ***\n"") at ../sysdeps/posix/libc_fatal.c:175; #3 0x00007ffff7a94e0a in malloc_printerr (ar_ptr=<optimized out>, ptr=<optimized out>, str=0x7ffff7ba09a3 ""free(): invalid pointer"", action=3) at malloc.c:5004; #4 _int_free (av=<optimized out>, p=<optimized out>, have_lock=<optimized out>) at malloc.c:3865; #5 0x00007ffff7a9836c in __GI___libc_free (mem=<optimized out>) at malloc.c:2966; #6 0x00007fffe0f5ae5f in OpenBabel::NWChemOutputFormat::ReadCoordinates (this=this@entry=0x7fffe1163350 <OpenBabel::theNWChemOutputFormat>, ifs=ifs@entry=0x63b450, molecule=molecule@entry=0x6dca40); at /home/madchem/openbabel-2.3.2/openbabel/src/formats/nwchemformat.cpp:237; #7 0x00007fffe0f5c82a in OpenBabel::NWChemOutputFormat::ReadMolecule (this=0x7fffe1163350 <OpenBabel::theNWChemOutputFormat>, pOb=<optimized out>, pConv=0x7fffffffd9c0); at /home",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/347:1562,abort,abort,1562,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/347,1,['abort'],['abort']
Safety,"ils.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\io.h(306) : see declaration of 'close'; ..\..\src\formats\KFReader.c(319) : warning C4996: 'open': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _open. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\io.h(316) : see declaration of 'open'; ..\..\src\formats\KFReader.c(332) : warning C4996: 'close': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _close. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\io.h(306) : see declaration of 'close'; ..\..\src\formats\KFReader.c(411) : warning C4996: 'read': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _read. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\io.h(317) : see declaration of 'read'; ..\..\src\formats\KFReader.c(506) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(556) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(707) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(765) : warning C4996: 'strncpy': This function or variable may be unsa",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/774:2235,unsafe,unsafe,2235,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/774,1,['unsafe'],['unsafe']
Safety,"io 9.0\VC\include\io.h(316) : see declaration of 'open'; ..\..\src\formats\KFReader.c(332) : warning C4996: 'close': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _close. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\io.h(306) : see declaration of 'close'; ..\..\src\formats\KFReader.c(411) : warning C4996: 'read': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _read. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\io.h(317) : see declaration of 'read'; ..\..\src\formats\KFReader.c(506) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(556) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(707) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(765) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(805) : warning C4996: 'strncpy': This function or variable may be unsa",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/774:2557,unsafe,unsafe,2557,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/774,1,['unsafe'],['unsafe']
Safety,"lain text; Full Aux. info; Timeout per structure: 60000 msec; Up to 1024 atoms per structure. Error 71 (no InChI; Error: No V3000 CTAB end marker) inp structure #1.; End of file detected after structure #1. ; Finished processing 1 structure: 1 error, processing time 0:00:00.00; $ cat obabel_Helium.sdf.txt ; * Input_File: ""./obabel_Helium.sdf""; $ ; $ obabel obabel_Helium.sdf -oinchi; InChI=1S/He; 1 molecule converted; $ ; ```. 2) On the other hand, [Marvin](https://marvinjs-demo.chemaxon.com/latest/) describes the same structure without the empty atom block:. ```. Mrv2311 09192409232D . 0 0 0 0 0 999 V3000; M V30 BEGIN CTAB; M V30 COUNTS 1 0 0 0 0; M V30 BEGIN ATOM; M V30 1 He -0.875 1.6667 0 0; M V30 END ATOM; M V30 END CTAB; M END; ```. Both InChI trust's reference executable, as well as OpenBabel can process and assign an InChI on this dataset:. ```shell; $ ./inchi-1 ./marvinjs_He_v3000.mol; InChI version 1, Software v. 1.07 (inchi-1 executable) ; Linux 64-bit Build (gcc 11.4.0) of Aug 10 2024 18:58:34. Opened log file './marvinjs_He_v3000.mol.log'; Opened input file './marvinjs_He_v3000.mol'; Opened output file './marvinjs_He_v3000.mol.txt'; Opened problem file './marvinjs_He_v3000.mol.prb'; The command line used:; ""./inchi-1 ./marvinjs_He_v3000.mol""; Generating standard InChI; Input format: MOLfile; Output format: Plain text; Full Aux. info; Timeout per structure: 60000 msec; Up to 1024 atoms per structure. End of file detected after structure #1. ; Finished processing 1 structure: 0 errors, processing time 0:00:00.00; $ cat ./marvinjs_He_v3000.mol.txt ; * Input_File: ""./marvinjs_He_v3000.mol""; Structure: 1; InChI=1S/He; AuxInfo=1/0/N:1/rA:1nHe/rB:/rC:.25,2.375,0;; $ ; $ obabel ./marvinjs_He_v3000.mol -oinchi; InChI=1S/He; 1 molecule converted; ```. The observations are collected with InChI version 1.07.1 published by August 21 ([source](https://github.com/IUPAC-InChI/InChI/releases)), and OpenBabel version 3.1.1/Sep 4 2024 as provided by Linux Debian 13/trixie.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2725:3051,Timeout,Timeout,3051,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2725,2,"['Timeout', 'detect']","['Timeout', 'detected']"
Safety,mis-detection of aromaticity for quinones,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2263:4,detect,detection,4,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2263,1,['detect'],['detection']
Safety,"n will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; 1 molecule converted; $ cat obabel_Helium.sdf. OpenBabel09192411482D. 0 0 0 0 0 999 V3000; M V30 BEGIN CTAB; M V30 COUNTS 1 0 0 0 0; M V30 BEGIN ATOM; M V30 1 He 0 0 0 0; M V30 END ATOM; M V30 BEGIN BOND; M V30 END BOND; M V30 END CTAB; M END; $$$$; $ ; $ ./inchi-1 ./obabel_Helium.sdf; InChI version 1, Software v. 1.07 (inchi-1 executable) ; Linux 64-bit Build (gcc 11.4.0) of Aug 10 2024 18:58:34. Opened log file './obabel_Helium.sdf.log'; Opened input file './obabel_Helium.sdf'; Opened output file './obabel_Helium.sdf.txt'; Opened problem file './obabel_Helium.sdf.prb'; The command line used:; ""./inchi-1 ./obabel_Helium.sdf""; Generating standard InChI; Input format: MOLfile; Output format: Plain text; Full Aux. info; Timeout per structure: 60000 msec; Up to 1024 atoms per structure. Error 71 (no InChI; Error: No V3000 CTAB end marker) inp structure #1.; End of file detected after structure #1. ; Finished processing 1 structure: 1 error, processing time 0:00:00.00; $ cat obabel_Helium.sdf.txt ; * Input_File: ""./obabel_Helium.sdf""; $ ; $ obabel obabel_Helium.sdf -oinchi; InChI=1S/He; 1 molecule converted; $ ; ```. 2) On the other hand, [Marvin](https://marvinjs-demo.chemaxon.com/latest/) describes the same structure without the empty atom block:. ```. Mrv2311 09192409232D . 0 0 0 0 0 999 V3000; M V30 BEGIN CTAB; M V30 COUNTS 1 0 0 0 0; M V30 BEGIN ATOM; M V30 1 He -0.875 1.6667 0 0; M V30 END ATOM; M V30 END CTAB; M END; ```. Both InChI trust's reference executable, as well as OpenBabel can process and assign an InChI on this dataset:. ```shell; $ ./inchi-1 ./marvinjs_He_v3000.mol; InChI version 1, Software v. 1.07 (inchi-1 executable) ; Linux 64-bit Build (gcc 11.4.0) of Aug 10 2024 18:58:34. Opened log file './marvinjs_He_v3000.mol.log'; Opened input file './marvinjs_He_v3000.mol'; Opened output file './marvinjs_He_v3000.mol.txt'; Opened problem file '.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2725:1861,detect,detected,1861,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2725,1,['detect'],['detected']
Safety,"nbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version:; ```; # Name Version Build Channel; openbabel 3.1.1 py310h956b46e_7 conda-forge; ```; Operating system and version:; ```; Distributor ID: ManjaroLinux; Description: Manjaro Linux; Release: 23.0.0; Codename: Uranos; ```. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I was trying to recover bond orders and atom specific formal charges from a XYZ file of a molecule. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; It seems only the bond orders are recovered but the charges on the NH3+ and COO- are not written to the output SDF file.; Wondering if there are other functions I need to call for this.; I do not wish to add or remove hydrogen atoms as the molecule should not be modified in any way. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ```python; from openbabel import pybel. mol = next(pybel.readfile(format=""xyz"", filename=""structure.xyz"")) # readfile returns an iterator; mol.OBMol.ConnectTheDots() # perceives bonding between atoms; mol.OBMol.PerceiveBondOrders(). mol.write(format=""sdf"", filename=""structure.sdf"", overwrite=True); ```. [structures.zip](https://github.com/openbabel/openbabel/files/12459604/structures.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2623:1227,recover,recovered,1227,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623,1,['recover'],['recovered']
Safety,"nds while using PDB files and to report all the issues at once. The result of this analysis is in the attachment. As previously, I noticed that OpenBabel 2.3.2 generated a correct output for the molecule I was analyzing, then I also decide to use this version in my tests. In all tests, I used the openbabel 2.4.1 library (python) for creating an OBMol molecule and then I printed the smiles for each one of the inputs (listed below). To check for possible errors of valence, charge, etc, I used the tool Chemicalize from Chemaxon (the figures in the attachment were obtained with this tool). First, I extract the ligand from the PDB file (all ligands and ids were informed in the attached file). Four different inputs were used to create the OBMol object:; 1) A .mol file obtained by converting the extracted file using OpenBabel 2.3.2.; 2) A .mol file obtained by converting the extracted file using OpenBabel 2.4.1. ; 3) The .pdb file. Function used: readfile(""pdb"", file); 4) The .pdb file as a string. Function used: readstring(""pdb"", pdb_block). Besides it, for each ligand I also evaluated the impact of creating the molecule without hydrogens and adding hydrogens according to some pH value. In the excel file, you'll find a column with the ligand information, one to indicate if I had used hydrogens and other to inform at which pH the hydrogens were added. Also, four other columns were added (one for each input). The red cells indicate if there is an incorrect aromatic perception. I believe these results can help you guys to detect what are the possible causes for these errors. I have not uploaded the molecule files because it would be too many files and all of them can be accessed through the PDB site. . If anything is not clear enough please just let me know and I could help you to reproduce the errors. Excel file: ; [Analysis_of_the_best_input_Send_to_OpenBabel.xls.zip](https://github.com/openbabel/openbabel/files/2789808/Analysis_of_the_best_input_Send_to_OpenBabel.xls.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1925:1939,detect,detect,1939,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1925,1,['detect'],['detect']
Safety,obtautomer fails to detect basic keto-enol tautomerism,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1616:20,detect,detect,20,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1616,1,['detect'],['detect']
Safety,"oject: OBCommonFormats, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; APIInterface.cpp; atomrecord.cpp; cansmilesformat.cpp; ..\..\src\formats\cansmilesformat.cpp(865) : warning C4101: 'canorder' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1346) : warning C4101: 'atom' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1397) : warning C4101: 'p' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1397) : warning C4101: 'pp' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1395) : warning C4101: 'tmp' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1396) : warning C4101: 'chg' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1445) : warning C4101: 'bond' : unreferenced local variable; mdlformat.cpp; mol2format.cpp; ..\..\src\formats\mol2format.cpp(341) : warning C4800: 'const char *' : forcing value to bool 'true' or 'false' (performance warning); obmolecformat.cpp; opendxformat.cpp; pdbformat.cpp; smilesformat.cpp; Generating Code...; Compiling manifest to resources...; Microsoft (R) Windows (R) Resource Compiler Version 6.0.5724.0; Copyright (C) Microsoft Corporation. All rights reserved.; Linking...; Creating library ..\Debug/obcommonD.lib and object ..\Debug/obcommonD.exp; Embedding manifest...; Microsoft (R) Windows (R) Resource Compiler Version 6.0.5724.0; Copyright (C) Microsoft Corporation. All rights reserved.; Creating browse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.21022; Copyright (C) Microsoft Corporation. All rights reserved.; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Debug\BuildLog.htm""; OBCommonFormats - 0 error(s), 8 warning(s); ========== Build: 1 succeeded, 0 failed, 3 up-to-date, 0 skipped ==========. Can the warnings be safely ignored?. Reported by: peterennis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767:2422,safe,safely,2422,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767,1,['safe'],['safely']
Safety,"on of 'close'; ..\..\src\formats\KFReader.c(411) : warning C4996: 'read': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _read. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\io.h(317) : see declaration of 'read'; ..\..\src\formats\KFReader.c(506) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(556) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(707) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(765) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(805) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(816) : warning C4996: 'strncpy': This function or variable may be unsa",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/774:2879,unsafe,unsafe,2879,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/774,1,['unsafe'],['unsafe']
Safety,"openbabel 3.1.1 on both windows and linux. My group and I have had success converting most of our molecules from .xyz to .smi, however when trying to convert oximes like formaldoxime (CH2NOH) or NH2CHNOH, openbabel returns the smiles [CH2][N]O and O[N]C=[NH2], when they should be ON=C and ON=CN respectively. In both cases, there should be a C=N double bond where there is only a CN single bond (and in the second case an additional incorrect C=N double bond). I was wondering if this issue could be fixed or if I could get some knowledge on how your bond prediction system works, like if it bases on atom distance or the number of bonds an atom would/should have etc. As for using alternate file formats, my group is working with VASP files which don't include bond information, so we cannot use something like .mol. We understand the limitations of xyz and the fact the openbabel has to predict the bonds, this case seemed notable however since the bug appeared for a seemingly simple molecule that wasn't a radical or any special case. Attached are the .xyz files for the two molecules I mentioned. Thank you for the help. . [xyzfiles.zip](https://github.com/openbabel/openbabel/files/11681743/xyzfiles.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2594:557,predict,prediction,557,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2594,2,['predict'],"['predict', 'prediction']"
Safety,"s%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: c3143e6235788ddd2c0a9d8298ad4873a5dbc81d; Operating system and version: Debian 11.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. No undefined behaviors are detected (during test). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Undefined behaviors are detected at:; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/include/openbabel/atom.h#L160; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichi_bns.c#L2737; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L128; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1676; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1677; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/graphsym.cpp#L389; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/obconversion.cpp#L302; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/residue.cpp#L853. `ctest` output:. ```; test 5; Start 5: test_align_",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:1165,detect,detected,1165,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['detect'],['detected']
Safety,"scripting interface. To my mind, this is the killer app for; cheminformaticians, who regularly need to manipulate SD; files. This problem appears to be due to the use of C++; streams which do not appear to translate nicely through; SWIG to Python iterators. Regards,; Noel. [As background, here is the text of an email describing; attempts to get this to work:. Attempt 1 Using Read after ReadFile; =========; from openbabel import *. myfile = ""3d.head.sdf""; obConversion = OBConversion(); obConversion.SetInFormat(""sdf""). mymol = OBMol(); obConversion.ReadFile(mymol,myfile); print mymol.GetMolWt(); print obConversion.Read(mymol); print ""The program segfaults before this line"". Attempt 2 Using Read after ReadString; =========; from openbabel import *. myfilestring = open(""3d.head.sdf"",""r"").read(); obConversion = OBConversion(); obConversion.SetInFormat(""sdf""). mymol = OBMol(); obConversion.ReadString(mymol,myfilestring); print mymol.GetMolWt(); print obConversion.Read(mymol); print ""The program aborts before this line"". >From the python point of view, what is needed is a; function that when; repeatedly called, will return additional molecules.; This doesn't need; to be in the main openbabel library, but can be in the; SWIG wrapper; somewhere. Regards,; Noel. On Wed, 2006-03-15 at 14:18 -0500, Geoffrey Hutchison; wrote:; > On Mar 15, 2006, at 5:18 AM, Noel O'Boyle wrote:; > ; > > It seems that OBConversion.ReadFile(OBMolecule); just reads in the ; > > first; > > molecule, and I cannot see a way of iterating over; the molecules.; > ; > The OBConversion.Read(OBMol) function should continue; to read from ; > the same file. However, since Python and Perl have no; concept of ; > ""streams"", it's not possible to use; OBConversion.Read() to set up the ; > input file or string.; > ; > So something like this (sorry, I haven't written much; Python, so the ; > syntax might be off):; > ; > import openbabel; > ; > mol = openbabel.OBMol(); > conv = openbabel.OBConversion(); > conv.SetInAn",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/525:1125,abort,aborts,1125,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525,1,['abort'],['aborts']
Safety,"td::char_traits<char>, std::allocator<char> >*) (); ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; This happens with any PDB structure containing the PA0 ligand (e.g. 3E3Z), a phenyl ring with arsenic attached. Getting the logP property. Example code (the 'content' string contains a mol format string with the PA0 compound:. std::ios_base::openmode imode = std::ios_base::in|std::ios_base::binary;; std::ios_base::openmode omode = std::ios_base::out|std::ios_base::binary;; std::stringstream ssi(content, imode);; std::stringstream sso("""", omode);; OpenBabel::OBConversion conv(&ssi, &sso);; OpenBabel::OBFormat* molformat = conv.FindFormat(""mol"");; conv.SetInFormat(molformat);; OpenBabel::OBMol mol;; molformat->ReadMolecule(&mol, &conv);; json js;; OpenBabel::OBDescriptor* pDesc = OpenBabel::OBDescriptor::FindType(""logP"");; if(pDesc) js[""LogP""] = pDesc->Predict(&mol);. mol string for PA0.178:A:; PA0; JL BFD1119190613; Written by the BioLeap Fragment Displayer(TM)[BioLeap, Inc.]; 12 12 0 0 0 0 0 0 0 0999 V2000; 7.2100 -10.0520 2.6110 As 0 3 0 0 0 0 0 0 0 1 0 0; 7.1560 -10.0390 1.2400 C 0 0 0 0 0 0 0 0 0 2 0 0; 6.2490 -9.2320 0.5650 C 0 0 0 0 0 0 0 0 0 3 0 0; 6.2170 -9.2220 -0.8210 C 0 0 0 0 0 0 0 0 0 4 0 0; 7.0890 -10.0140 -1.5640 C 0 0 0 0 0 0 0 0 0 5 0 0; 8.0000 -10.8330 -0.9030 C 0 0 0 0 0 0 0 0 0 6 0 0; 8.0240 -10.8420 0.4890 C 0 0 0 0 0 0 0 0 0 7 0 0; 8.6560 -11.4170 0.9490 H 0 0 0 0 0 0 0 0 0 8 0 0; 8.6120 -11.3920 -1.4070 H 0 0 0 0 0 0 0 0 0 9 0 0; 7.0620 -9.9950 -2.5330 H 0 0 0 0 0 0 0 0 0 10 0 0; 5.5780 -8.6550 -1.2800 H 0 0 0 0 0 0 0 0 0 11 0 0; 5.6350 -8.6730 1.0660 H 0 0 0 0 0 0 0 0 0 12 0 0; 1 2 1 0 0 0 0; 2 3 2 0 0 0 0; 2 7 1 0 0 0 0; 3 4 1 0 0 0 0; 4 5 2 0 0 0 0; 5 6 1 0 0 0 0; 7 6 2 0 0 0 0; 3 12 1 0 0 0 0; 4 11 1 0 0 0 0; 5 10",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2088:2939,Predict,Predict,2939,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2088,1,['Predict'],['Predict']
Safety,"ter (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really need to be that long-running; ; run the coverage only, say, once per day;; ... I'd be very happy for feedback on this. [1] Issues https://github.com/openbabel/openbabel/issues/1937 https://github.com/openbabel/openbabel/issues/1893 https://github.com/openbabel/openbabel/issues/1321 https://github.com/openbabel/openbabel/issues/1861; I searched for ""eqeq"" throug",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2312:1735,Timeout,Timeout,1735,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312,1,['Timeout'],['Timeout']
Safety,to avoid a segfault,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1818:3,avoid,avoid,3,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1818,1,['avoid'],['avoid']
Safety,"using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 2f34bda337d7ddefa8f2bebfc23931a63e45241f; Operating system and version: Debian 11.3. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. When output format of `obabel` is `inchi` or `inchikey` and logging is enabled (i.e. `-xl`):. 1. Log levels for InChI are appropriately set; 2. Input format is correctly determined from command line argument. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. 1. In the examples below, the level should be Info (or Debug) but not Error; 2. Input format is always MOLfile–file extension and `-i` option are ignored. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. If input is SMILES-string,. ```console; $ obabel -:C -o inchi -xl; InChI=1S/CH4/h1H4; ==============================; *** Open Babel Error in InChI log; Generating standard InChI; Input format: MOLfile; Output format: Plain text; Full Aux. info; No timeoutUp to 65534 atoms per structure; 1 molecule converted; ```. If input is a CML file,; ```console; $ obabel -:C -O CH4.cml --gen3D; 1 molecule converted; $ obabel CH4.cml -o inchi -xl; InChI=1S/CH4/h1H4; ==============================; *** Open Babel Error in InChI log; Generating standard InChI; Input format: MOLfile; Output format: Plain text; Full Aux. info; No timeoutUp to 65534 atoms per structure; 1 molecule converted; ```. `obabel -:C -o cml --gen3D | obabel -i cml -o inchi -xl` gives the same output.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2505:1853,timeout,timeoutUp,1853,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2505,2,['timeout'],['timeoutUp']
Safety,"valgrind(1) reports the use of an uninitialized variable in the InChI library with certain unusual metal/salt combinations. echo ""[Na+][Ge-2][Na+]"" | valgrind obabel -i smi -o inchi; ==18000== Memcheck, a memory error detector; ==18000== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.; ==18000== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for copyright info; ==18000== Command: obabel -i smi -o inchi; ==18000== ; ==18000== Conditional jump or move depends on uninitialised value(s); ==18000== at 0x4C28757: strcpy (mc_replace_strmem.c:311); ==18000== by 0x68555B5: MakeCRVString (string3.h:107); ==18000== by 0x6820F75: str_AuxChargeRadVal (ichiprt3.c:2939); ==18000== by 0x688F163: OutputINChI1 (ichiprt1.c:3128); ==18000== by 0x68937B4: OutputINChI2 (ichiprt1.c:1110); ==18000== by 0x684CF3D: SortAndPrintINChI (runichi.c:958); ==18000== by 0x684DCAB: ProcessOneStructure (runichi.c:2933); ==18000== by 0x68797ED: GetINCHI1 (inchi_dll.c:451); ==18000== by 0x1213EE92: OpenBabel::InChIFormat::WriteMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*) (inchiformat.cpp:489); ==18000== by 0x5343D07: OpenBabel::OBMoleculeFormat::WriteChemObjectImpl(OpenBabel::OBConversion*, OpenBabel::OBFormat*) (obmolecformat.cpp:182); ==18000== by 0x52E6B95: OpenBabel::OBConversion::Convert() (obconversion.cpp:581); ==18000== by 0x52E7347: OpenBabel::OBConversion::Convert(std::istream*, std::ostream*) (obconversion.cpp:450); ==18000== . Reported by: @cjames53. Original Ticket: [openbabel/bugs/872](https://sourceforge.net/p/openbabel/bugs/872)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1252:218,detect,detector,218,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1252,1,['detect'],['detector']
Security," --title <title> Add or replace molecule title; --addtotitle <text> Append to title; --addformula Append formula to title. However the wiki page gives further details (eg -a) and in alphabetical order, would it be worth updating?. -a options; Format-specific input options. See -H format-ID for options allowed by a particular format; --addtotitle; Append text after the current molecule title; --addformula; Append the molecular formula after the current molecule title; -b; Convert dative bonds (e.g., [N+]([O-])=O to N(=O)=O; -c; Center atomic coordinates at (0,0,0); -C; Combine molecules in first file with others having the same name; -d; Delete Hydrogens; -e; Continue to convert molecules after errors; ---errorlevel 2; Filter the level of errors and warnings displayed:; 1 = critical errors only; 2 = include warnings too (default); 3 = include informational messages too; 4 = include ""audit log"" messages of changes to data; 5 = include debugging messages too; -f #; For multiple entry input, start import with molecule # as the first entry; -F; Output the available fingerprint types; -h; Add hydrogens; -H; Output usage information; -H format-ID; Output formatting information and options for format specified; -Hall; Output formatting information and options for all formats; -i<format-ID>; Specifies input format, see below for the available formats; -j; --join; Join all input molecules into a single output molecule entry; -k; Translate computational chemistry modeling keywords (e.g., GAMESS and Gaussian); -m; Produce multiple output files, to allow:; Splitting one input file - put each molecule into consecutively numbered output files; Batch conversion - convert each of multiple input files into a specified output format; -l #; For multiple entry input, stop import with molecule # as the last entry; -o format-ID; Specifies output format, see below for the available formats; -p; Add Hydrogens appropriate for pH (use transforms in phmodel.txt); --property; Add or replace a p",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1484:2807,audit,audit,2807,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1484,1,['audit'],['audit']
Security, 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 1 10 2 0 0 0; 1 2 1 0 0 0; 2 3 2 0 0 0; 3 4 1 0 0 0; 4 9 1 0 0 0; 4 5 2 0 0 0; 5 6 1 0 0 0; 6 7 2 0 0 0; 7 8 1 0 0 0; 8 19 1 0 0 0; 8 9 2 0 0 0; 9 10 1 0 0 0; 10 11 1 0 0 0; 11 20 2 0 0 0; 11 12 1 0 0 0; 12 13 2 0 0 0; 13 14 1 0 0 0; 14 15 2 0 0 0; 15 20 1 0 0 0; 15 16 1 0 0 0; 16 17 2 0 0 0; 17 18 1 0 0 0; 18 19 2 0 0 0; 19 20 1 0 0 0; M END. Messages:. babel 1.smi 1.mol ---errorlevel 4; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule SMILES format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in AssignSpinMultiplicity; Ran OpenBabel::AssignSpinMultiplicity; ==============================; *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in FindRingAtomsAndBonds; Ran OpenBabel::FindRingAtomsAndBonds; ==============================; *** Open Babel Information in NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule. ==============================; *** Open Babel Audit Log in WriteChemObjectImpl; OpenBabel::Write molecule MDL MOL format; 1 molecule converted; 1 info messages 6 audit log messages. Version Open Babel 2.2.0 -- Jul 7 2008 -- 22:06:15 . OS - gentoo GNU/linux. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830:1309,Audit,Audit,1309,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830,7,"['Audit', 'audit']","['Audit', 'audit']"
Security," Describe the intended output or what you expected to see. -->; The installer drops OpenBabel's files and registry keys in a location for all users.; - Shortcuts in `C:\ProgramData\Microsoft\Windows\Start Menu\Programs\OpenBabel 3.1.1`; - Miscellaneous program data (docs, examples etc.) in `C:\ProgramData\OpenBabel-3.1.1`; - Uninstall registry key to `\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\OpenBabel-3.1.1`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The installer drops its files and registry values in locations specific to the user account under which context the installer was run. To illustrate with an example scenario: a user is logged in interactively with a standard user account named 'Bob' with SID `S-1-5-21-1234`. The user downloads and runs the installer and is prompted to enter admin credentials so the user authenticates with an account named 'Admin' with SID `S-1-5-21-1000`. The installer finishes successfully but the user doesn't see OpenBabel in the Apps list in Windows Settings (alt. Programs and Features in Control Panel) or any shortcuts in their Start Menu; they log out from Bob and log in as Admin to find both there. The files and registry key are incorrectly in places specific for the account which was used to elevate the privileges of the installer (Admin in this example), not for the user which had interactively executed the installer (Bob in this example) or for all users on the computer (see the **Expected Behavior** section above).; - Shortcuts in `C:\Users\Admin\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\OpenBabel 3.1.1`; - Miscellaneous program data (docs, examples etc.) in `C:\Users\Admin\AppData\Roaming\OpenBabel-3.1.1`; - Uninstall registry key to `\HKEY_USERS\S-1-5-21-1000\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\OpenBabel-3.1.1`. Th",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2724:1735,authenticat,authenticates,1735,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2724,1,['authenticat'],['authenticates']
Security," community,; I have a pdbqt (after vina docking) of a +vely charged compound which I'm reducing and converting into mol2 format with gasteiger charges.; But the sum of charges in mol2 files is almost zero, not +1 as expected.; I also tried using --gen3D flag and other charge models e.g. qeq, mmff94 during the conversion but in vain. Some methods give -ve charge! Files are attached (txt extension added) and the command is given below. Can you please suggest if there is a method in babel that can reliably estimate net charges on molecules without manual intervention?; I want this to work since I have a workflow for docking and MD that is working except for the fact that there is no reliable method to estimate net-charge without visual inspection of the structure.; I've manually summed the charges in excel, it is zero, not +1.; Is it possible that I missed something trivial?; Looking forward to valuable suggestions from the community.; thank you and best regards; Dr Vaibhav A. Dixit, Asst. Prof., BITS Pilani, Pilani India.; Email: vaibhav.dixit@pilani.bits-pilani.ac.in; vaibhavadixit@gmail.com. [test.mol2.txt](https://github.com/openbabel/openbabel/files/7070493/test.mol2.txt); [new1.pdb.txt](https://github.com/openbabel/openbabel/files/7070494/new1.pdb.txt). babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; WARNING: damped steplength 0.0143888 to 0.00575672; WARNING: damped steplength 0.00447914 to 0.00300176; 9 molecules converted; 9 files output. The first is test1.mol2; 3621 audit log messages 99 debugging messages. Command to print netcharge (uses ""st"" from github).; egrep -A1000 ATOM test1.mol2 | grep -v ROOT | grep LIG | sed -e ""1d"" | awk '{print $9}' | st | awk '{print $4}' | tail -1 | xargs printf ""%1.0f"" && echo """"; -0. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Open Babel 2.3.2 -- Apr 23 2014 -- 21:08:30. Operating system and version:; Linux CentOS 7",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2404:1536,audit,audit,1536,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404,1,['audit'],['audit']
Security," to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1 (installed through anaconda); Operating system and version: Mac OS 10.12.5 (Sierra); Python version: 3.6.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect pybel library calls to either return or throw a catchable exception. ## Steps to Reproduce and Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I have a python function that reads in a bunch of xyz files into pybel Molecule objects. Later on I iterate over all of the Molecule objects and read variables from some of the pybel Atom objects within each Molecule (to generate features for machine learning). While trying to access the Atom objects and variables within them a segmentation fault occurs that kills the python interpreter (it terminates with exit code 139). I can also kill the python interpreter with a segfault while my code is paused in the debugger (which I access through Eclipse / PyDev) by navigating into and trying to inspect pybel Atoms' variables. The segfault does not always occur when accessing the first Atom and does not consistently happen on the same Atom when running the exact same code multiple times in succession but it does usually happen within the first 5-10 Atoms. ## Notes. Sorry I understand this is probably difficult to debug because of its inconsistency and lack of a small reproducible example but I've already spent a lot of time trying to understand what was going on so hopefully I can give enough information to still be helpful. My current workaround which appears to be working is to have a wrapper python atom class around the pybel atom class with variables to keep a copy of all the data that I use from the pybel atom. I initialize ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602:1498,access,access,1498,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602,1,['access'],['access']
Security," — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-revie",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2546:2996,secur,security-and-quality,2996,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2546,1,['secur'],['security-and-quality']
Security,"""AccessInit: hash collision: 3 for both 1 and 1"" crash for ""import pybel, matplotlib.backends.backend_qt4agg""",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1238:1,Access,AccessInit,1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1238,2,"['Access', 'hash']","['AccessInit', 'hash']"
Security,"""System.AccessViolationException"" in the NET bingding class OBBuilder",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2080:8,Access,AccessViolationException,8,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2080,1,['Access'],['AccessViolationException']
Security,"## Environment Information; Open Babel version: 2.4.0/1; Operating system and version: Linux (Solus 3). ## Expected Behavior; Compile. ## Issue; cmake '-DCMAKE_CFLAGS=-mtune=generic -march=x86-64 -g2 -O2 -pipe -fPIC -Wformat -Wformat-security -fno-omit-frame-pointer -fexceptions -D_FORTIFY_SOURCE=2 -fstack-protector --param ssp-buffer-size=32 -fasynchronous-unwind-tables -ftree-vectorize -feliminate-unused-debug-types -Wall -Wno-error -Wp,-D_REENTRANT' '-DCMAKE_CXX_FLAGS=-mtune=generic -march=x86-64 -g2 -O2 -pipe -fPIC -fno-omit-frame-pointer -fexceptions -D_FORTIFY_SOURCE=2 -fstack-protector --param ssp-buffer-size=32 -fasynchronous-unwind-tables -ftree-vectorize -feliminate-unused-debug-types -Wall -Wno-error -Wp,-D_REENTRANT' '-DCMAKE_LD_FLAGS=-Wl,--copy-dt-needed-entries -Wl,-O1 -Wl,-z,relro -Wl,-z,now -Wl,-z,max-page-size=0x1000' -DCMAKE_LIB_SUFFIX=64 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX=/usr .; -- The C compiler identification is GNU 6.4.0; -- The CXX compiler identification is GNU 6.4.0; -- Check for working C compiler: /usr/lib64/ccache/bin/x86_64-solus-linux-gcc; -- Check for working C compiler: /usr/lib64/ccache/bin/x86_64-solus-linux-gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/lib64/ccache/bin/x86_64-solus-linux-g++; -- Check for working CXX compiler: /usr/lib64/ccache/bin/x86_64-solus-linux-g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Using included inchi library.; -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.9.4"") ; -- Found ZLIB: /usr/lib/libz.so (found version ""1.2.11"") ; -- Found wxWidgets: -L/usr/lib64;-pthread;-Wl,--copy-dt-needed-entries;-Wl,-O1;-Wl,-z,relro;-Wl,-z,now;;-L/usr/lib64;;-lwx_baseu-2.8;-lwx_gtk2u_core-2.8;-lwx_gtk2u_adv-2.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1624:234,secur,security,234,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1624,1,['secur'],['security']
Security,"$ svn update; At revision 3364.; $ babel -i mol2 123-pentatriene.mol2 -o inchi; InChI=1S/C5H8/c1-3-5-4-2/h3H2,1-2H3; 1 molecule converted; 4 audit log messages . According to vega it should be:; $ ./vega.sh 123-pentatriene.mol2; InChI=1/C5H6/c1-3-5-4-2/h4H,1H2,2H3. Reported by: maaren",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/925:141,audit,audit,141,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/925,1,['audit'],['audit']
Security,$ wget http://www.pdb.org/pdb/files/2BOH.pdb && wget http://www.pdb.org/pdb/files/2HOC.pdb; $ babel --partialcharge gasteiger 2HOC.pdb 2HOC.mol2; 0 molecules converted; 20 audit log messages ; $ babel --partialcharge gasteiger 2BOH.pdb 2BOH.mol2; 0 molecules converted; 20 audit log messages ; etc. Reported by: prozacr. Original Ticket: [openbabel/bugs/881](https://sourceforge.net/p/openbabel/bugs/881),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1261:172,audit,audit,172,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1261,2,['audit'],['audit']
Security,"(1) On 15 Dec, on openbabel-scripting mail list, Andreas Karwath reported:. Hi all,. I hope I don't have to send this to the developer list... I have installed the latest version of openbabel (2.1.0b3) including the python bindings... (openbabel and pybel), Linux Suse 9.2; I wanted to parse a gzipped SDF file (zipped file size 14 M) to extract specific molecules (by name), for this I first tried to do the normal routine, i.e.:. sdfFileName = <someGzippedSDFFile>; obconversion = OBConversion(); obconversion.SetInFormat(""sdf""); obconversion.SetOutFormat(""smi""); obmol = OBMol(). notatend = obconversion.ReadFile(obmol,sdfFileName); export = obconversion.WriteFile(obmol,'myTest.smi'); while notatend:; obconversion.Write(obmol); obmol = OBMol(); notatend = obconversion.Read(obmol). On a normal (i.e. unzipped) SDF File it works fine. But not on a gzipped one -> Segmentation Fault. It can only get access the first single molecule. The same is true when using the new pybel lib. -> Segmentation Fault!. I assume that OpenBabel keeps a pointer to the last read molecule in the SDF file, which would not work when accessing the zipped one... I don't want to unpack the file, as I have a few hundred of those.. (disk space!). Did anyone have the same problem and knows an elegant workaround?; I guess the problem should occur for other scripting languages as well... Regards,. A. Karwath. (2) Verified by me (baoilleach).; (3) Also, verified that babel -isdf myfile.sdf.gz -osmi myfile.smi works fine.; (4) Andreas Kawarth appears to have tracked down the bug as described by his email of 18th Dec:. I also traced the vbug back to mdlformat.cpp, where a false is; returned as the if(!ifs.getline(buffer,BUFF_SIZE)) return(false);; returns false... Regards,; Noel. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/586:903,access,access,903,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/586,2,['access'],"['access', 'accessing']"
Security,"(From openbabel-devel). Ok, it builds, but it segfaults in the CML tests. I've extracted one of the; failing tests and ran it under gdb:. [rathann@ryvius ~/build/BUILD/openbabel-2.2.0b3-20080215-r2249/test/cmltest]$ gdb ../../tools/.libs/lt-babel ; GNU gdb Red Hat Linux (6.6-16.fc7rh); Copyright (C) 2006 Free Software Foundation, Inc.; GDB is free software, covered by the GNU General Public License, and you are; welcome to change it and/or distribute copies of it under certain conditions.; Type ""show copying"" to see the conditions.; There is absolutely no warranty for GDB. Type ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu""...; Using host libthread_db library ""/lib64/libthread_db.so.1"".; (gdb) run -isdf 3d.head.sdf -ocml 3d.head.2.cml; Starting program: /home/rathann/build/BUILD/openbabel-2.2.0b3-20080215-r2249/tools/.libs/lt-babel -isdf 3d.head.sdf -ocml 3d.head.2.cml; warning: no loadable sections found in added symbol-file system-supplied DSO at 0x7fffdbbfd000; 70 molecules converted; 785 audit log messages . Program received signal SIGSEGV, Segmentation fault.; 0x00000030eba8f501 in std::ostream::sentry::sentry () from /usr/lib64/libstdc++.so.6; Current language: auto; currently c; (gdb) bt full; #0 0x00000030eba8f501 in std::ostream::sentry::sentry () from /usr/lib64/libstdc++.so.6; No symbol table info available.; #1 0x00000030eba8fd57 in std::ostream::write () from /usr/lib64/libstdc++.so.6; No symbol table info available.; #2 0x00002aaab3fc225f in OpenBabel::XMLConversion::WriteStream (context=<value optimized out>, ; buffer=0x7fffdbace810 ""���\227"", len=-609425392) at xml.cpp:337; ofs = (ostream *) 0x7fffdbace810. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/728:1043,audit,audit,1043,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/728,1,['audit'],['audit']
Security,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.1. ## Expected Behavior; 1. OpenBabel should not attempt out-of-bounds array accesses.; 2. OpenBabel's tests should pass when compiled with GCC 8 and the `-Wp,-D__GLIBCXXX_ASSERTIONS` option. ## Actual Behavior; While parsing ""param"" lines, `OBForceFieldUFF::ParseParamFile()` attempts to access a third byte of each atom type string, even when there are only two (including C string terminator). The deuterium parameters in the default UFF.prm file provided by OpenBabel trigger this misbehavior in practice. If symbol `__GLIBCXX_ASSERTIONS` is defined when building OpenBabel with GCC 8 then tests `test_regressions_1794` and `test_ffuff_1` fail. ## Steps to Reproduce; The access attempt is visible by inspection at [forcefields/forcefielduff.cpp:1650](https://github.com/openbabel/openbabel/blob/master/src/forcefields/forcefielduff.cpp#L1650) (it's even commented), and the single-character deuterium atom type can be seen at [data/UFF.prm:152](https://github.com/openbabel/openbabel/blob/master/data/UFF.prm#L152). The test failures can be reproduced by building with g++ of GCC 8.3, and providing hardening options via the environment, then running the tests. For example,. ```; mkdir build; cd build; export CXXFLAGS=""-O2 -Wp,-D_GLIBCXX_ASSERTIONS""; cmake ..; make; make test; ```. ## Additional Comments; I discovered this while packaging OpenBabel into an RPM. By default, RedHat's rpm macros supply hardening options to software builds, including defining the `__GLIBCXX_ASSERTIONS` macro.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2223:254,access,accesses,254,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2223,3,['access'],"['access', 'accesses']"
Security,"- [x ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 2.4.1 (32 and 64 bit); Operating system and version: Windows 10 64-bit. ## Expected Behavior; If a NWChem output file is converted with obgui.exe to any other file type (e.g. *.xyz) this works fine when the 'CONVERT' button is clicked the first time. ## Actual Behavior; If the button is clicked again obgui.exe crashes with a heap corruption exception (error code 0x000374).; The problem is present in the Windows versions of obgui.exe (32 bit and 64 bit) delivered with OpenBabel ; 2.4.1; The problem does not occur if obabel.exe is called twice.; The problem was not present in obgui.exe delivered with OpenBabel 2.3.2.; This is not trivial: the same error occurs if a command of type 'OBConv.ReadFile(OBMol, MolFilePath)' is called twice in an application if accessed e.g. via ObDotNet.dll thus crashing the calling process. ## Steps to Reproduce; [Acetonitrile.txt](https://github.com/openbabel/openbabel/files/872762/Acetonitrile.txt); (change file extension from txt to nwo)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1555:895,access,accessed,895,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1555,1,['access'],['accessed']
Security,- [x ] This is a feature request. I'm trying to use OBElements namespace that replaced OBElementTable in 3.x version of openbabel. I find the way of importing it into python quite confusing. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: macOS 10.15.5. ## Expected Behavior; I'd expect import to be something like; ```python; from openbabel.elements import OBElements. # so that the namespace/module methods can be accessed from a defined module; atomic_num = OBElements.GetAtomicNum('C'); ```; ## Actual Behavior; Instead OBElements is imported silently as a part of openbabel and all the available functionality is accessible from general openbabel namespace that makes it a bit confusing:. ```python; import openbabel.openbabel as ob; atomic_num = ob.GetAtomicNum('C'); ```; ## Steps to Reproduce; Try the import in any IDE of choice,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2259:453,access,accessed,453,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2259,2,['access'],"['accessed', 'accessible']"
Security,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: MacOS; Operating system and version: 3.1.1.1 . ## Expected Behavior; I am trying to use optimize the 3D geometry of a rigid molecule. Below, I used the pybel wrapper to optimize the geometry twice, with 500 steps.; After optimization, the molecule is supposed to be nearly flat. ; However, **if you repeat running the following codes**. Sometimes, you will see the first optimization will yield a geometry with a somewhat twisted configuration. After further optimization, it yields a reasonable geometry. ```python; import py3Dmol; from openbabel import pybel. smi = ""s1ccc2cc3sc4cc5ccsc5cc4c3cc12"". m = pybel.readstring('smi', smi); m.addh(); m.localopt(); print(""Optimization after 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True). view = py3Dmol.view(height=200, width=400, viewergrid=(1,2)). view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,0)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,0)). m.localopt(); print(""Optimization after another 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True); view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,1)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,1)); view.zoomTo(); ```. <img width=""523"" alt=""image"" src=""https://user-images.githubusercontent.com/29445366/89095525-b5a6b780-d383-11ea-85a8-b74f6588405b.png"">. I have two questions.; 1, I tried to print out the energy after `localopt`. In the previous version openbabel-3.0.0, it returned some value. But in the lastest version, 3.1.1.1, the energy field is empty. Do you know what is going on here. 2, Is it possible to get access to the information of atomic force? Basically, I want to know a strategy to check whether the optimization yields a reasonable geometry without visualizing the 3D structure.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2265:1769,access,access,1769,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2265,1,['access'],['access']
Security,"- [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.0; Operating system and version: all. ## Expected Behavior. Accessing molecule information should be `const`. ```c++; OBMol const mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; std::cout << mol.GetMolWt() << std::endl; // should print. currently cannot be called in a `const` OBMol.; ```. _Of course I can be wrong and the accesing function is not constant to indicate internal static, non-thread safe variables (e.g. caches) being set. But I doubt, `const`-`non-const` seems to be inconsistent in the different object of the library. (for example OBUnitCell::GetCellVolume() is `const`, and also redundantly `non-const`, again it is fine if it has to do with internal cache data)_. ## Actual Behavior. GetMolWt cannot be called in a constant object, gives compilation error. ## Steps to Reproduce. ```c++; #include <openbabel/generic.h> // unitcell; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>. #include <iostream>. using namespace std;. int main(int argc,char **argv){; 	using namespace OpenBabel;; 	OBConversion conv = []{OBConversion _; _.SetInFormat(""xyz""); return _;}();; 	OBMol mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; 	std::cout << mol.GetMolWt() << std::endl;; }; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2369:193,Access,Accessing,193,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2369,1,['Access'],['Accessing']
Security,"-h -ph # should be allowed to access the; AddHydrogens/adjust for pH features. Reported by: *anonymous. Original Ticket: ""openbabel/feature-requests/16"":https://sourceforge.net/p/openbabel/feature-requests/16",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1385:30,access,access,30,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1385,1,['access'],['access']
Security,"-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to o",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2546:2031,secur,security,2031,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2546,1,['secur'],['security']
Security,"8):. ``` python; import pybel; with open(""CoMOF74.cif"") as in_file:; mof = in_file.read(); mol = pybel.readstring(""cif"", mof); mol.unitcell.FillUnitCell(mol.OBMol); # Density in g/cm^3. Should be ~1.2; print sum(atom.atomicmass for atom in mol.atoms) / (mol.unitcell.GetCellVolume() * 0.6022); ```. The problem here is that the duplicate-atom checking in `OBUnitCell::FillUnitCell` assumes the input atoms are already unique. If this isn't the case, the method compounds the error. Fixed by checking the input atoms before expanding the unit cell in `FillUnitCell` (maybe this kind of check belongs somewhere else?). **Issue 2:** `OBUnitCell::FillUnitCell` hangs on large unit cells. This is due to the algorithm used in atom checking. It checks atom-atom distances, which is O(N^2). The new approach uses a hash, which should be amortized O(N). It uses the extra speed to check _every_ atom for uniqueness, rather than just symmetry unique ones. Note that a better approach would use an octree, but the hash was easier to implement and proves the point. **Issue 3:** `OBUnitCell::FillUnitCell` doesn't check all possible duplicates. To replicate, use [FeMOF74](https://gist.github.com/patrickfuller/6419438) and the above script. The underlying issue is that `FillUnitCell` assumes that the listed symmetry operations are logical. However, CIFs are a mess. In the case of the example cif, the file already has more than one unitcell worth of atoms, and additionally has defined symmetry operations. This is solved by the solution of Issue 2; by using the extra speed afforded by the hash to check every atom-atom connection, we can check for more duplicates. **Issue 4:** Some crystallographic programs fail if atom coordinates are not in [0, 1]. It's annoying, but an easy fix. I just added `WrapFractionalCoordinate` to cifformat.cpp. **Issue 5:** Centering can segfault. To replicate, use CoMOF74. ``` python; import pybel; with open(""CoMOF74.cif"") as in_file:; mof = in_file.read(); mol = pybel.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23:1296,hash,hash,1296,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23,1,['hash'],['hash']
Security,": Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/stereo.i:3: Error: Unable to find 'openbabel/stereo/tetrahedral.h'; openbabel/stereo.i:4: Error: Unable to find 'openbabel/stereo/cistrans.h'; openbabel/stereo.i:5: Error: Unable to find 'openbabel/stereo/squareplanar.h'; openbabel/stereo.i:6: Error: Unable to find 'openbabel/stereo/bindings.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ```. I think the important lines here are:; ```; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; ```. On this line: https://github.com/openbabel/openbabel/blob/c3143e6235788ddd2c0a9d8298ad4873a5dbc81d/scripts/python/setup.py#L46, you get the version and validate it like `StrictVersion('3.1.1.1')` (3.1.1.1 is current version so subbing it in). This is an invalid version format, so StrictVersion raises a ValueError. This error causes the setup.py script to skip pulling the correct library and include dirs from pkg-config and instead fallback to the guess locations, which causes compilation to fail. ## Steps to Reproduce; ```; docker run -it python:3.7 bash; apt-get update; apt-get install openbabel libopenbabel-dev; pip3 install openbabel; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408:6458,validat,validate,6458,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408,1,['validat'],['validate']
Security,":. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On ever",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2546:964,secur,security,964,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2546,1,['secur'],['security']
Security,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: babel 2.8.0 py_0 conda-forge; Operating system and version: Ubuntu 18.04.4 LTS. ## Expected Behavior; babel should produces a xyz file . ## Actual Behavior; I used the following command. `babel individuals/acids/smiles/smiles8800_2.smi individuals/acids/xyz/smiles8800_2.xyz -h --gen3D`. to generate 3D xyz file form the input .smi file. But babel reports the error "" Segmentation fault (core dumped)"". I have finished the same transformation (from smi to xyz) using bash script. This transformation is the last one, the program didn't run. ; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce. `babel individuals/acids/smiles/smiles8800_2.smi individuals/acids/xyz/smiles8800_2.xyz -h --gen3D`. [smiles8800_2.txt](https://github.com/openbabel/openbabel/files/5514082/smiles8800_2.txt). Please note that github doesn't allow ""smi"" file uploading, so I changed the file as "".txt"". You will need to change it back to "".smi"" to run. ; The smi file maybe look a littitl werid to you as the comment for each SMILES is just the same SMILES, this is for the convinience for future steps. I suppose it doesn't influence the validaty of the .smi file.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2302:1896,validat,validaty,1896,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2302,1,['validat'],['validaty']
Security,==============; *** Open Babel Information in OpenBabel::OBMol::NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule ACB_PCA-0004. ==============================; *** Open Babel Information in OpenBabel::OBMol::NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule ACB_PCA-0004; Kekulize: Cannot get an even number of electron for molecule ACB_PCA-0004. ==============================; *** Open Babel Audit Log in OpenBabel::OBMoleculeFormat::WriteChemObjectImpl; OpenBabel::Write molecule Sybyl Mol2 format; ==============================; *** Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignTypes; Ran OpenBabel::AssignTypes; ==============================; *** Open Babel Audit Log in OpenBabel::OBAromaticTyper::AssignAromaticFlags; Ran OpenBabel::AssignAromaticFlags; ==============================; *** Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignImplicitValence; Ran OpenBabel::AssignImplicitValence; ==============================; *** Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; Ran OpenBabel::AssignHybridization; ==============================; *** Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; Ran OpenBabel::AssignHybridization; ==============================; *** Open Babel Audit Log in OpenBabel::OBMol::FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Audit Log in OpenBabel::OBBond::IsClosure; Ran OpenBabel::PerceiveClosureBonds; ==============================; *** Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; Ran OpenBabel::AssignHybridization; ==============================; *** Open Babel Audit Log in OpenBabel::OBChainsParser::PerceiveChains; Ran OpenBabel::PerceiveChains; ==============================; *** Open Babel Audit Log in OpenBabel::OBGastChrg::AssignPartialCharges; Ran OpenBabel::AssignPartialCharges; 1 molecule converted; 2 info messages 15 audit log messages. ===================================== END. Reported by: @baoilleach,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/671:1710,Audit,Audit,1710,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/671,12,"['Audit', 'audit']","['Audit', 'audit']"
Security,"@frederikw in issue report [here](https://github.com/openbabel/openbabel/issues/2426). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Observation: The `.png` are written and are intelligible. By report of the CLI, the inclusion of the structure file however fails. Suggested changes, 1st class:; + Bug fix to restore the functionality. Suggested changes, 2nd class:; + With the `.pngj` format ([documentation](http://wiki.jmol.org/index.php/File_formats/Export)), Jmol apparently offers a similar export of static (classical `.png` like) and interactive (model) data. In Jmol, it is possible, e.g., to read this extended `.png`, to interact and export the model as `.sdf` «as usual». See archive pngj_examples.zip for examples. It would be nice if Jmol's `.pngj` would be understood by OpenBabel, and the augmented `.png` written by OpenBabel could be read by Jmol as in «accessing the model data». ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behaviour.; -->; ```bash; $ obabel -:""CC(=O)Cl"" -O mymol.png -xO smi; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); 1 molecule converted; ```; The image is written and intelligible. The subsequent attempt to recover the SMILES string from the `.png` however fails, and file `smiles.txt` stays empty. ```bash; $ obabel mymol.png -osmi -O smiles.txt; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; 1 molecule converted; ```. [example_pngj.zip](https://github.com/openbabel/openbabel/files/7521417/example_pngj.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2428:2060,access,accessing,2060,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2428,1,['access'],['accessing']
Security,"A follow-on from PR#3089953. For the attached file, Inchi executable gives:; InChI=1S/C11H18O4/c1-3-6-10(13)8(5-14-2)7-4-9(12)15-11(6)7/h6-8,10-11,13H,3-5H2,1-2H3/t6?,7-,8?,10-,11?/m1/s1. We get the same if we pass the Wedge/Hash bonds to InChI through OB (the default):. >obabel igor.sdf -oinchi; InChI=1S/C11H18O4/c1-3-6-10(13)8(5-14-2)7-4-9(12)15-11(6)7/h6-8,10-11,13H,3-5H2,1-2H3/t6?,7-,8?,10-,11?/m1/s1. but not if we use the generated stereochem:. >obabel igor.sdf -oinchi -xs; InChI=1S/C11H18O4/c1-3-6-10(13)8(5-14-2)7-4-9(12)15-11(6)7/h6-8,10-11,13H,3-5H2,1-2H3/t6?,7?,8?,10-,11?/m1/s1; 1 molecule converted. The difference is inchi atom 7, which is 7- versus 7?. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1038:225,Hash,Hash,225,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1038,1,['Hash'],['Hash']
Security,"A large portion of the code use standard libc string; manipulation functions which can sometimes allow buffer; overflow and other bugs. Programs like flawfinder and; its4 are automated security scanners that list; potential problems. (Granted, Open Babel probably has little to worry about; security consequences of buffer overflows, but these; may cause other bugs such as memory corruption, etc.). Attached is the flawfinder-1.22 output as of; 22-April-2003. These should be inspected and fixed as; needed. Any non-problems should be flagged with comments like:; // Flawfinder: ignore. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/419:185,secur,security,185,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/419,2,['secur'],['security']
Security,"A recent API change (#1576) broke FragIt (https://github.com/FragIt/fragit-main) which depended on the knowledge about implicit bonds. Now, #1576 did include new utility functions (obfunctions.h) but these functions were never exposed through the python API. 1. This PR exposes those functions hidden away in obfunctions.h so I can use them in FragIt. This PR does not add or remove anything in the API apart from exposing functionality in the API through the python-bindings but I am unsure whether I am required to add some form of test or other documentation?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1697:227,expose,exposed,227,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1697,2,['expose'],"['exposed', 'exposes']"
Security,"A warning is issued when converting my favourite SDF file, head.sdf (in scripts/python/examples):. babel -i SDF head.sdf -o smi head.smi. ==============================; *** Open Babel Warning in OpenBabel::MDLFormat::ReadMolecule; WARNING: Problems reading a MDL file; Cannot read title line. 2 molecules converted; 1 warnings 34 audit log messages. The weird thing is...there is a title line!. ------------. From Geoff:. Rats. It seemed like a pretty safe fix -- add more verbose warnings to the mdlformat.cpp code when rejecting molecules. This comes when we try to read after the last $$$$ in that file. So you have read 2 molecules cleanly, and then attempt to read a 3rd.; Obviously, there isn't another molecule in the file (you hit the EOF), so it fails. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/662:331,audit,audit,331,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/662,1,['audit'],['audit']
Security,Access to 'depth' in Depth-First Search and BFS,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1495:0,Access,Access,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1495,1,['Access'],['Access']
Security,Accessing ContigFragList from Perl bindings,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1198:0,Access,Accessing,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1198,1,['Access'],['Accessing']
Security,Accessing molecule information should be const,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2369:0,Access,Accessing,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2369,1,['Access'],['Accessing']
Security,"According to the Daylight SMARTS website ""[#6;X3v3+0]"" should match a carbon radical. (http://www.daylight.com/dayhtml_tutorials/languages/smarts/smarts_examples.html#RAD). This doesn't work, instead the radical is treated as a connection:. $ echo 'C[CH2]' | babel -ismi -s'[#6;X3v3+0]' -osmi; 0 molecules converted; 12 audit log messages; $ echo 'C[CH2]' | babel -ismi -s'[#6;X4v4+0]' -osmi; C[CH2]; 1 molecule converted; 31 audit log messages. Similarly for the less constrained match ""[#6;X3]"". $ echo 'C[CH2]' | babel -ismi -s'[#6;X3]' -osmi; 0 molecules converted; 12 audit log messages. I'd like to see this work consistently for heteroatoms too:. $ echo 'CCO[O]' | babel -ismi -s'[O;X1]' -osmi; 0 molecules converted; 18 audit log messages. Cheers,; Stephen. Reported by: donquix2003",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/803:320,audit,audit,320,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/803,4,['audit'],['audit']
Security,Allow public access to retrieve gradients,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1833:13,access,access,13,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1833,1,['access'],['access']
Security,"An option to parse comments provided by UCSF Dock and Chimera. Mol2 writer is also capable to write properties from other sources, like SDF. Example of such comments:. ```; ########## Name: ZINC04087362; ########## HA_RMSDs: 10.5487; ########## HA_RMSDh: 10.5466; ########## HA_RMSDm: 5.8751; ########## Cluster Size: 19; ########## Grid Score: -45.986282; ########## Grid_vdw: -38.770088; ########## Grid_es: -7.216196; ########## Int_energy: 9.837175. @<TRIPOS>MOLECULE; ZINC04087362; ....; ```. Note:; There is a bug, although I'm not proficient enough in C to fix that - if N molecules are skipped using ""-l"" option, then comments for first molecule are lost. I guess MOL2Format::SkipObjects needs to check if line ""m-2"" has # at the beginning, and then skip few lines back (until hashed lines finish).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/112:785,hash,hashed,785,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/112,1,['hash'],['hashed']
Security,Attempt some sanitizer builds using GCC and Clang,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2213:13,sanitiz,sanitizer,13,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2213,1,['sanitiz'],['sanitizer']
Security,Avoid out-of-range access in OBMolBondBFSIter,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1892:19,access,access,19,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1892,1,['access'],['access']
Security,"Beyond SMILES (or other 0D / 1D formats), 2D formats do not ; properly convert to 3D cartesians. However, unlike SMILES ; conversion, much of the structure is already defined (e.g., up/down, ; wedge/hash notation), making this problem considerably easier. Addition of a force field (e.g., Tripos-like or MMFF) would facilitate ; such structure-generation problems. -Geoff. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/38"":https://sourceforge.net/p/openbabel/feature-requests/38",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1408:199,hash,hash,199,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1408,1,['hash'],['hash']
Security,"Bonds and atoms are indexed inconsistently, with atoms; numbered starting at 1, e.g. (from alchemy.cpp):. for(i = 1;i &lt;= mol.NumAtoms(); i++); {; atom = mol.GetAtom(i);. but bonds are numbered starting at 0, e.g. (from; binary.cpp). binary.cpp: for (i = 0;i &lt; (signed)mol.NumBonds();i++); mol.GetBond(i)-&gt;SetAromatic();. This leads to inconsistency, confusion and inefficient; access to vectors (and potentially plenty of bugs!); This needs to be fixed. Unfortunately, it'll require a; substantial investment of time and effort since almost; all of the code will need to be checked and re-checked.; (about 29,000 lines currently). -Geoff. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/11"":https://sourceforge.net/p/openbabel/feature-requests/11",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1380:386,access,access,386,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1380,1,['access'],['access']
Security,"Dear Dev,. OBMol.GetCoordinates returns a C array and it is not accesseble from Python.; ( <Swig Object of type 'double *' at 0x10d487f90> ) . Best Regards,; Fabio L. Reported by: fabiolol. Original Ticket: [openbabel/bugs/988](https://sourceforge.net/p/openbabel/bugs/988)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1367:64,access,accesseble,64,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1367,1,['access'],['accesseble']
Security,Expose obfunctions api through python bindings,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1697:0,Expose,Expose,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1697,1,['Expose'],['Expose']
Security,"First part is to always parse space group origin:; - This is fixed by removed overloaded version of SpaceGroup::SetHMName.; - Unrelated, removed similar overloaded SpaceGroup::SetHallName. Second part:; - Expose -xo option for write PDB, to set space group setting (if present) in space group label. Added tests.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1558:205,Expose,Expose,205,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1558,1,['Expose'],['Expose']
Security,Fix wedge/hash in cyclopropyl,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1582:10,hash,hash,10,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1582,1,['hash'],['hash']
Security,"For file downloaded from ccdc ( https://summary.ccdc.cam.ac.uk/structure-summary?id=doi:10.5517/cc8j3mh&sid=DataCite ), openbabel fail to convert from mmcif to pdb and give the following error - . Unknown space group error (H-M symbol:P21/c), cannot match the list of transforms, please file a bug report.; 1 molecule converted; 1 errors 21 warnings 14 audit log messages. In the attached cif file from ccdc, the short space group P21/c is recognized by openbabel. Openbabel by default remove the space and add it to dictionary. The thing went wrong was due to the following block -; loop_; _symmetry_equiv_pos_as_xyz; ???; Openbabel doesn't treat the transformation as unknown and try to match and fail in the library. I checked in a patch in my forked repo and created a pull request - . https://github.com/openbabel/openbabel/commit/4d9b605f793cf932c8fd6e3fc3770d385a683d4b. Please evaluate and let me know.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/238:353,audit,audit,353,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/238,1,['audit'],['audit']
Security,"For some reason babel treats the hydrogen atom differently from the lithium atom in the xyz parser. This is what happens for lithium. $ babel -ixyz li.xyz -oreport; FILENAME: li.xyz; FORMULA: Li; MASS: 6.9410; EXACT MASS: 7.0160045; INTERATOMIC DISTANCES; ... $ babel -ixyz li.xyz -oqcin ; $comment; li.xyz; $end. $molecule; 0 1; 3 0 0 0; $end. $rem. $end; 1 molecule converted; 12 audit log messages . And this is what happens for the hydrogen atom:. $ babel -ixyz test.xyz -oreport; FILENAME: test.xyz; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 2; INTERATOMIC DISTANCES; ... $ babel -ixyz test.xyz -oqcin ; $comment; test.xyz; $end. $molecule; 0 2; 1 0 0 0; $end. $rem. $end; 1 molecule converted; 11 audit log messages . As can be seen, the Q-Chem input file for the lithium atom has the wrong multiplicity (1=singlet) instead of the expected 2. Running with ---errorlevel 5, it appears that the lithium atom XYZ input triggers OpenBabel::AssignImplicitValence but not the hydrogen atom XYZ input. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1099:382,audit,audit,382,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1099,2,['audit'],['audit']
Security,"For some smiles, cansmiles yields incorrect results. PROBLEM:; echo 'O=c1[nH]c(=O)c2cccc3c2c1ccc3' | babel -ismi -osmi; O=[C]1=[NH][C](=O)=C2C=CC=C3C2C1C=CC3	; 1 molecule converted; 4 info messages 33 audit log messages; The resulting SMILES in not correct. I expected the result to be identical to the input, because the input came from a canonicalization of another SMILES. BACKGROUND:; The input SMILES above came from here.; echo 'O=C1NC(=O)C2=CC=CC3=C2C1=CC=C3' | babel -ismi -osmi; O=c1[nH]c(=O)c2cccc3c2c1ccc3	; 1 molecule converted; 1 info messages 33 audit log messages. This resulting cansmiles is correct, but I cannot convert it properly (see PROBLEM).; Another way to think of this is; cansmiles(x) = cansmiles(cansmiles(x)); This is not true for x = 'O=c1[nH]c(=O)c2cccc3c2c1ccc3'. I think this is a general problem with aromatic rings having =O subtitutions and how to aromatize them. Linux/ubuntu; openbabel 2.2.3. TJ; tjo@gnova.com. Reported by: tjbear",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/986:201,audit,audit,201,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/986,2,['audit'],['audit']
Security,"From Andrew Dalke on list:. Perhaps I'm missing something after staring at fingerprint SMARTS definitions for the last few days. I'm validating the MACCS substructure keys from RDKit, which are also used in OpenBabel and CDK. I'm writing a test suite, which will be public when done. (Actually, they are public now, if you know where the version control repository is.). I'm having a very difficult time generating an aromatic ring with a ""P"" in it in OpenBabel. >>> import pybel; >>> pybel.readstring(""smi"", ""c1cccp1"").write(); 'C1CCCP1\t\n'; >>> pybel.readstring(""smi"", ""c1ccccp1"").write(); 'C1=CC=NC=P1\t\n'. Since P is in the same group and has the same valence levels as N, I expected the first of these to return ""c1cccp1"", similar to. >>> pybel.readstring(""smi"", ""c1cccn1"").write(); 'c1ccc[nH]1\t\n'. Both RDKit and OEChem have no problem dealing with ""c1cccp"" and interpreting it as an aromatic ring. I processed about 50K structures from PubChem to find a number with aromatic ""p"" in them. Since PubChem doesn't have aromaticity information, what I did was use another program to perceive the aromaticity. Below I show the RDKit SMILES for a structure and the OpenBabel equivalent for it. You can see that of the 53 structures where RDKit has no problems with a ""p"" in an aromatic ring, 51 of them are converted into aliphatic form by OpenBabel. Is this due to a chemical reason or a design reason for why OpenBabel does this? Perhaps it's something subtle about aromaticity perception (which I sadly admit I still don't have a good grasp on). This is with OEChem OBReleaseVersion() '2.3.0' which I built a couple of days ago. Andrew; dalke@dalkescientific.com. Columns are; column 1: ""p"" in OpenBabel's SMILES; column 2: the SMILES string from RDKit; column 3: the SMILES string from OpenBabel. False 'CCc1c(CC)p(-c2ccccc2)c(-c2ccccc2)c1-c1ccccc1' 'CCC1C(CC)P(C2CCCCC2)C(C2CCCCC2)C1C1CCCCC1\t\n'; True '[W].Cc1np(C([Si](C)(C)C)[Si](C)(C)C)nc1N1CCCCC1.[O+]#[C-].[C-]#[O+].[O+]#[C-].[C-]#[O+].",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1109:133,validat,validating,133,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1109,1,['validat'],['validating']
Security,"From marcolippi83@gmail.com nopenbabel-discuss:. Hi,. I am encountering a problem when asking OpenBabel to generate an InChI from; a molecule which has an alias bonded through a wedge/hash bond... It seems; to be missing the wedge/bond after expanding the alias... Here is an example of what I mean:. OpenBabel01241222313D. 20 21 0 0 0 0 0 0 0 0999 V2000; -3.2672 1.9552 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -4.4572 0.9403 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 3.9562 -4.0448 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.7871 -5.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -2.1816 -0.9104 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -4.4572 -1.0299 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -2.0564 0.9403 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.0125 -1.9254 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1.5553 -2.0448 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.7662 -1.0597 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 3.9562 -2.0448 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.1566 -1.3582 0.0000 N 0 0 0 0 0 0 0 0 0 0 0 0; -3.4342 3.6269 0.0000 * 0 0 0 0 0 0 0 0 0 0 0 0; -1.0334 1.6269 0.0000 O 0 0 0 0 0 0 0 0 0 0 0 0; 2.5783 0.6418 0.0000 * 0 0 0 0 0 0 0 0 0 0 0 0; 5.0000 -1.3582 0.0000 * 0 0 0 0 0 0 0 0 0 0 0 0; -3.4342 -2.3433 0.0000 N 0 0 0 0 0 0 0 0 0 0 0 0; -1.0334 -4.3433 0.0000 O 0 0 0 0 0 0 0 0 0 0 0 0; 1.3674 -4.3433 0.0000 O 0 0 0 0 0 0 0 0 0 0 0 0; 5.0000 -5.3284 0.0000 * 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 7 2 0 0 0 0; 1 13 1 0 0 0 0; 2 6 2 0 0 0 0; 3 4 1 0 0 0 0; 3 11 1 0 0 0 0; 3 20 1 1 0 0 0; 4 19 1 0 0 0 0; 5 7 1 0 0 0 0; 5 8 1 0 0 0 0; 5 17 2 0 0 0 0; 6 17 1 0 0 0 0; 7 14 1 0 0 0 0; 8 12 1 0 0 0 0; 8 18 2 0 0 0 0; 9 10 1 0 0 0 0; 9 12 1 1 0 0 0; 9 19 1 0 0 0 0; 10 11 1 0 0 0 0; 10 15 1 6 0 0 0; 11 16 1 1 0 0 0; A 13; OMe; A 15; OAc; A 16; OAc; A 20; OAc; M END. The generated InChI is. InChI=1S/C18H22N2O10/c1-8(21)28-12-7-27-18(16(30-10(3)23)15(12)29-9(2)22)20-17(25)13-14(24)11(26-4)5-6-19-13/h5-6,12,15-16,18,24H,7H2,1-4H3,(H,20,25)/t12?,15?,16?,18-/m1/s1. Am I missing something ?. Thanks !. Marco. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1155:184,hash,hash,184,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1155,1,['hash'],['hash']
Security,"From: Joe Leonard; To: Geoff Hutchison. It might also be useful if you can get Gasteiger's; group to help validate the charges in OpenBabel. I; looked at the code, and it looks like stuff which I was; familiar with at Tripos - and I don't know how those; compare to Gasteiger's work (due to parameter creep). They're only Gasteiger-sigma charges, too. Reported by: *anonymous. Original Ticket: ""openbabel/feature-requests/2"":https://sourceforge.net/p/openbabel/feature-requests/2",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1371:106,validat,validate,106,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1371,1,['validat'],['validate']
Security,Give access to BODR data,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1521:5,access,access,5,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1521,1,['access'],['access']
Security,"Greetings openbabel developers and contributors,. We’re reaching out because your project is an important part of the open source ecosystem, and we’d like to invite you to integrate with our [fuzzing](https://www.owasp.org/index.php/Fuzzing) service, [OSS-Fuzz]( https://opensource.googleblog.com/2016/12/announcing-oss-fuzz-continuous-fuzzing.html ). OSS-Fuzz is a free fuzzing infrastructure you can use to identify security vulnerabilities and stability bugs in your project. OSS-Fuzz will:. - Continuously run at scale all the fuzzers you write.; - Alert you when it finds issues.; - Automatically close issues after they’ve been fixed by a commit. Many widely used [open source projects]( https://github.com/google/oss-fuzz/tree/master/projects ) like OpenSSL, FFmpeg, LibreOffice, and ImageMagick are fuzzing via OSS-Fuzz, which helps them find and remediate [critical issues]( https://bugs.chromium.org/p/oss-fuzz/issues/list?can=1&q=status%3AFixed%2CVerified+Type%3ABug%2CBug-Security+-component%3AInfra+ ). . Even though typical integrations can be done in < 100 LoC, we have a [reward program]( https://www.google.com/about/appsecurity/patch-rewards/ ) in place which aims to recognize folks who are not just contributing to open source, but are also working hard to make it more secure. We want to stress that anyone who meets the eligibility criteria and integrates a project with OSS-Fuzz is eligible for a reward. To help you getting started, we can attach our internal fuzzer for your project that you are welcome to use directly, or to use it as a starting point. If you're not interested in integrating with OSS-Fuzz, it would be helpful for us to understand why—lack of interest, lack of time, or something else—so we can better support projects like yours in the future. If we’ve missed your question in our [FAQ]( https://google.github.io/oss-fuzz/faq/ ), feel free to reply or reach out to us at oss-fuzz-outreach@googlegroups.com. Thanks!. Tommy; OSS-Fuzz Team",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2135:418,secur,security,418,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2135,3,"['Secur', 'secur']","['Security', 'secure', 'security']"
Security,"Hello :-). The DOI foundation recommends [this new resolver](https://www.doi.org/doi_handbook/3_Resolution.html#3.8). Yes, a bit ironic that they would change the URL of their service, but it's now [encrypted](https://www.ssllabs.com/ssltest/analyze.html?d=doi.org). Because the old links with the `dx` subdomain continue to work, there is no urgent need to do anything. However, I'd hereby like to suggest to follow the new recommendation by applying this update to all static DOI links. Cheers!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1909:199,encrypt,encrypted,199,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1909,1,['encrypt'],['encrypted']
Security,"Hello everyone,. I am Ayush Paliwal, a 3rd-year student at the Indian Institute of Technology (BHU), Varanasi. I am interested in working with OpenBabel for GSoC 2021. I want to work on the project Develop a validation and standardization filter. I have good experience in C++, python and JS. I also worked on a molecular simulation project using MAPS software.; I would be grateful if you guided me on how to get more involved, contribute.; Looking forward to contributing!. Sincerely,. Ayush Paliwal.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2334:208,validat,validation,208,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2334,1,['validat'],['validation']
Security,"Hello,. I'm trying to use openbabel 2.1.1 on linux to convert mdl mol v3000 files into mdl mol v2000. The example-file molex.mol (see attachment) contains a COLLECTION Block. ; No conversion is taking place.; No warning or error (except for the title line. % babel -errorlevel 5 -imdl molex.mol -omdl molex2.mol; ==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problems reading a MDL file; Cannot read title line. 0 molecules converted; 1 warnings 4 audit log messages. If the COLLECTION-Block is removed, conversion goes through smoothly. % babel -errorlevel 5 -imdl molexZ.mol -omdl molex2.mol; ==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problems reading a MDL file; Cannot read title line. 1 molecule converted; 1 warnings 16 audit log messages. reiner.dieden@ucb-group.com. Reported by: reinerdieden",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/663:483,audit,audit,483,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/663,2,['audit'],['audit']
Security,"Hey I am quite new in this and I have read the documentation.; I have a list of SMILES and I want to check if they are valid in 3d space, like a structure validation. This way I can get a percentage of 3D validity in my set of molecules. I am converting my smi to pdb or pdbqt and I generate3D using either cmd or python binding, and I get my converted file with sane coordinates in every atom but some of them are not valid, the conversion still happens so I don't have any way to know. Is there a feature for 3d structure validation?. Thanks for the help.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2651:155,validat,validation,155,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2651,2,['validat'],['validation']
Security,"Hi `openbabel/openbabel`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull r",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2546:284,secur,security,284,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2546,1,['secur'],['security']
Security,"Hi all. I am currently a Google Summer of Code Scholar working with MDAnalysis. My project involves the creation of a converter to convert between OpenBabel OBMols and MDAnalysis Universes. I am working with the automatic python bindings. I am keen to chat with current OpenBabel maintainers to gain a deeper insight into the package and take on any suggestions for features or attributes that would be beneficial to access and convert. I also have some questions about functionality that I would love some assistance with. 1. I can see that OpenBabel supports PDB formats, but I cannot see any attributes within the OBMol or OBAtom classes for alternate locations, chainids, occupancies and tempfactors/B-values. Would anyone be able to point me in the direction of where I can find these attributes (if they are supported)? The only documentation I can find it [here](http://openbabel.org/docs/FileFormats/Protein_Data_Bank_format.html). 2. I would love to utilise a handful of the OpenBabel test-set files to test the converter, but I do not want to clone the entire repo into my converter for size purposes. Do you have a preferred way for me to access and credit the files back to OpenBabel? . Thanks for your time! You can follow along with my project [here](https://github.com/MDAnalysis/mda-openbabel-converter).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2708:417,access,access,417,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2708,2,['access'],['access']
Security,"Hi guys, i'm trying to follow this papeline on git hub: ; https://github.com/seanharr11/phytebyte. When i arrive to point four this is the result : . % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (60) SSL certificate problem: certificate has expired; More details here: https://curl.se/docs/sslcerts.html. curl failed to verify the legitimacy of the server and therefore could not; establish a secure connection to it. To learn more about this situation and; how to fix it, please visit the web page mentioned above. How can i resolve it ? i don't want to use the site without protection.... . Thanks",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2628:313,certificate,certificate,313,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2628,3,"['certificate', 'secur']","['certificate', 'secure']"
Security,"Hi there,. I am very new to all of this, and am looking for help with the install. I followed the instructions on the page below:. http://openbabel.org/wiki/Install_(source_code). specifically the section on Installing globally with root access. I also installed a GNU compiler according to these instructions: https://wiki.helsinki.fi/display/HUGG/GNU+compiler+install+on+Mac+OS+X and cmake prior to running these commands. I used the following commands:. tar zxvf openbabel-2.4.1.tar.gz; mv openbabel-2.4.1 ob-src; mkdir ob-build; cd ob-build; cmake ../ob-src 2>&1 | tee cmake.out; sudo make install. Everything seemed to install, but I am looking to run the optimize plugin in pymol, and I got an error there: ""Optimize plug-in needs openbabel to be installed in your system, please follow the instructions at; http://openbabel.org/wiki/Get_Open_Babel”. I realized I still did not have it completely installed, so I tried the following command:; export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib; which “ran” with no errors. I now have several files and folders in the following directory:; /usr/local/lib; They are:; pkgconfig (FOLDER). libinchi.dylib. libinchi.0.4.1.dylib. libinchi.0.dylib. openbabel (FOLDER). libopenbabel.dylib. libopenbabel.5.0.0.dylib. libopenbabel.5.dylib. cmake (FOLDER). I believe open babel is still not completely installed because I did not compile the language bindings at the time of install. I now have installed python (2.7.10), but am looking for how I can finish this install. As I said above, I’m looking to use the optimize plugin in pymol. I’m working on a Mac (running MacOS Mojave version 10.14). Would very much appreciate any help. Thanks very much!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1897:238,access,access,238,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1897,1,['access'],['access']
Security,"Hi, a number of CVEs have been issued against openbabel by Cisco's security research unit:; * CVE-2022-37331; * CVE-2022-41793; * CVE-2022-42885; * CVE-2022-43467; * CVE-2022-43607; * CVE-2022-44451; * CVE-2022-46280; * CVE-2022-46289; * CVE-2022-46290; * CVE-2022-46291; * CVE-2022-46292; * CVE-2022-46293; * CVE-2022-46294; * CVE-2022-46295; With these advisories:; * https://talosintelligence.com/vulnerability_reports/TALOS-2022-1666; * https://talosintelligence.com/vulnerability_reports/TALOS-2022-1672; * https://talosintelligence.com/vulnerability_reports/TALOS-2022-1667; * https://talosintelligence.com/vulnerability_reports/TALOS-2022-1668; * https://talosintelligence.com/vulnerability_reports/TALOS-2022-1664; * https://talosintelligence.com/vulnerability_reports/TALOS-2022-1669; * https://talosintelligence.com/vulnerability_reports/TALOS-2022-1670; * https://talosintelligence.com/vulnerability_reports/TALOS-2022-1665. Did Cisco ever contact this repository's owners about these vulnerabilities? Are they valid? Are any fixed?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2650:67,secur,security,67,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2650,1,['secur'],['security']
Security,"Hi,. I don't know where else to do to, so I ask here. The openbabel.org page is not working, it is failing with `ERR_TOO_MANY_REDIRECTS`. I didn't report it immediately, but it's been happening at least since last week. Without it, there's no access to the documentation. Thanks,; João",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2645:243,access,access,243,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2645,1,['access'],['access']
Security,"Hi,. There is a bug in the atom type determination of terminal oxygens attached to Sulfurs, e.g. in the sulphonamide group S(=O)(=O)N. Line 2339 on src/forcefields/forcefieldmmff94.cpp : ; if (nbr2->IsOxygen() && nbr2->GetValence() == 0). should be changed to,; if (nbr2->IsOxygen() && nbr2->GetValence() == 1). Except for single ions, there are no atoms with a valence of 0!. This is causing the terminal O's on sulfur to be typed as index 7 instead of index 32.; If one looks at molecule BBSPRT10 in the MMFF Validation suite, the type assignment for the O is indeed 32(check file MMFF94_opti.log in the validation suite). Regards,; Tushar Jain. Reported by: tsjain",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/877:511,Validat,Validation,511,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/877,2,"['Validat', 'validat']","['Validation', 'validation']"
Security,"Hi,. While looking at the output of OBForceFieldMMFF94::Validate(), I noticed that molecule VUWXUG's output was missing. On further looking at the source code, I found that in file forcefieldmmff94.cpp, lines 3930:3931 are:. -----------------; 3930: if ((c == 98) || (c == 692)) // CUDPAS & VUWXUG; 3931: continue;; -----------------. Is there a reason that these molecules are skipped during Validation?. -Tushar. Reported by: tsjain",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/894:56,Validat,Validate,56,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/894,2,['Validat'],"['Validate', 'Validation']"
Security,"Hi; I'm using Fedora Core 4, gcc-c++-4.0.2-8.fc4.i386.rpm and I'm trying to compile openbabel-2.0.0. The compile is fine until this:; --------; g++ -DHAVE_CONFIG_H -I. -I. -I. -I../data/ -DOB_MODULE_PATH=\""/usr/lib/openbabel\"" -DUSING_DYNAMIC_LIBS -g -O2 -MT obconversion.lo -MD -MP -MF .deps/obconversion.Tpo -c obconversion.cpp -fPIC -DPIC -o .libs/obconversion.o. zipstreamimpl.h: In constructor 'zlib_stream::basic_zip_streambuf<charT, traits>::basic_zip_streambuf(std::basic_ostream<_CharT, _Traits>&, int, zlib_stream::EStrategy, int, int, size_t)':; zipstreamimpl.h:76: error: there are no arguments to 'setp' that depend on a template parameter, so a declaration of 'setp' must be available; zipstreamimpl.h:76: error: (if you use '-fpermissive', G++ will accept your code, but allowing the use of an undeclared name is deprecated); --------; According to zipstream.h, this is based on zlib 1.1.4; do we have to worry about the zlib security holes that were fixed in later versions? The current version of zlib is 1.2.3. If I knew C++, I'd give you a patch. Thanks!. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/518:941,secur,security,941,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/518,1,['secur'],['security']
Security,"I am a new Open Babel user and have installed babel on my MacOSX 10.6 from the package OpenBabel-2.2.3b.mac.zip. I am trying to convert from a .cif file taken from the Cambridge database to a .pdb. However, I receive the following error:. *** Open Babel Error in Find; Unknown space group error (H-M symbol:Fm-3m), cannot match the list of transforms, please file a bug report.; 1 molecule converted; 1 errors 16 audit log messages 1 debugging messages. If anyone has any suggestions as to how this issue can be solved and any future advice I would greatly appreciate it. . Thanks, ; Stephanie; steichm@Sandia.gov. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1011:413,audit,audit,413,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1011,1,['audit'],['audit']
Security,"I am considering to include OpenBabel force fields in on of my applications, studying conformational transitions of (macro)molecules.; To this end, I need the values of the molecular energy, gradients and (possibly) the second derivatives. I managed to write a wrapper that gives me the energy of a configuration, but I could not find a way to access the values of the gradients (using the API's of openbabel-2.2.3).; As far as I understand, this is so because the routines that calculate the gradients are declared ""private"" in include/openbabel/forcefield.h, but I cannot see why this has to be so. Therefore, I am suggesting to extend/modify the API to allow access of the force-field gradients to general programs making use of the library. As a first step to this goal, I managed to patch the source code of openbabel, moving the declaration of GetGradients and friends in the public section of the relevant classes (see the attached file).; After recompiling the library, I am now able to access the forces, after calling the method Energy of OBForceField with the value ""true"".; This is probably not the most elegant hack around, but it ""works for me"" and might be useful to other people. Finally, let me just thank all the developers of this impressive code for their valuable efforts. Best regards. Reported by: *anonymous. Original Ticket: [openbabel/feature-requests/156](https://sourceforge.net/p/openbabel/feature-requests/156)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1525:344,access,access,344,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1525,3,['access'],['access']
Security,"I fixed two problems:; - the fingerprint was being resized to 0 with an initial Clear() so nothing was returned.; - there was an off-by-one when using the atom Idx() to address AtomInfo. This was in the code to handle the nbrs, and lead to an out-of-bounds memory access (with random values sometimes appearing in the fingerprint). As a general principle, rather than subtracting one from atom indices, we should just use them as provided, and instead increase the size of the referenced data structures by 1. This avoids this sort of error, where you remember to subtract 1 in one place but not another.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1829:264,access,access,264,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1829,1,['access'],['access']
Security,"I get an error message with the compiled trunk on Windows when using Python to read hashizume.cif (in scripts/python/examples):. >>> a = pybel.readfile(""cif"", ""hashizume.cif"").next(); ==============================; *** Open Babel Error in OpenBabel::SpaceGroup::Find; Unknown space group error, please file a bug report.; ==============================. Geoff says this is likely to be a bug in the spacegroup.cpp code. I reckon the problem is related to difference in Windows and Linux line-endings, which have caused problems reading the text files in the data directory. Noel. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/715:84,hash,hashizume,84,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/715,2,['hash'],['hashizume']
Security,"I have a strange problem with the conversion of charged structures from; InChI to Canonical smiles on 64bit architectures (I am using the Ruby; interface, but the effect seems to be reproducible also on the command; line). It gives the expected result on 32 bit machines (tested with; Ubuntu Hardy + Open Babel 2.2.2, Ubuntu Intrepid + Open Babel 2.2.3):. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na+].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. but the positive charge is missing on 64bit machines (tested on 2 machines with; Debian Lenny, Open Babel 2.2.2 and 2.2.3). echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. The same problem occurs without canonification:. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -osmi --; [B-](F)(F)(F)F.[Na]; 1 molecule converted; 1 info messages 21 audit log messages. PS: Noel O'Boyle has confirmed the problem on 64bit Linux, but it works on 64bit Windows. Reported by: chelma",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/962:488,audit,audit,488,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/962,3,['audit'],['audit']
Security,"I have not confirmed yet if this bug exists also on the SVN trunk, but it certainly exists on the 2.1 branch right now. The invalidsmiles test works fine up until the tests to read random binary data. This evidently causes an infinite loop immediately:. The main crash:; Program received signal EXC_BAD_ACCESS, Could not access memory.; Reason: KERN_INVALID_ADDRESS at address: 0xbf7ffff0; 0x0115120c in zlib_stream::basic_unzip_streambuf<char, std::char_traits<char> >::underflow (this=0x0) at zipstreamimpl.h:341; 341 basic_unzip_streambuf<charT, traits>::underflow(void). Here's a backtrace:; #13525 0x01150fd4 in zlib_stream::basic_unzip_streambuf<char, std::char_traits<c; har> >::fill_input_buffer (this=0x313530) at zipstreamimpl.h:493; #13526 0x0115111c in zlib_stream::basic_unzip_streambuf<char, std::char_traits<c; har> >::unzip_from_stream (this=0x313530, buffer=0x280fa04 """", buffer_size=4092); at zipstreamimpl.h:462; #13527 0x01151374 in zlib_stream::basic_unzip_streambuf<char, std::char_traits<c; har> >::underflow (this=0x313530) at zipstreamimpl.h:357; #13528 0x94c6cab0 in std::basic_streambuf<char, std::char_traits<char> >::uflow ; (); #13529 0x0114664c in OpenBabel::LineEndingExtractor::operator() (this=0x312834, ; src=@0x313530) at ../include/openbabel/lineend.h:171; #13530 0x01150a34 in OpenBabel::FilteringInputStreambuf<OpenBabel::LineEndingExt; ractor>::underflow (this=0x312810) at ../include/openbabel/lineend.h:132; #13531 0x94c6cab0 in std::basic_streambuf<char, std::char_traits<char> >::uflow ; (); #13532 0x94c6d1bc in std::basic_streambuf<char, std::char_traits<char> >::xsgetn; (); #13533 0x94c54da8 in std::istream::read (). Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/649:321,access,access,321,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/649,1,['access'],['access']
Security,I thought I could call this function by openbabel.addFragment(). This is what the documentation suggests. I also tried OBMol.addFragment() with no luck. Anyone know how to access this function? Is it in a plugin or something?,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2536:172,access,access,172,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2536,1,['access'],['access']
Security,"I was trying to use the Perl interface to OpenBabel to do some RMSD calculations and found I couldn't since key functionality seemed to be missing. Specifically, the ability to manipulate SWIG C arrays in perl and access to a couple functions. Here are the changes I made to get things to work:. include/openbabel/obutil.h ; 156,164d155; < #ifndef __KCC; < extern ""C"" {; < OBAPI void rotate_coords(double*,double m[3][3],unsigned int);; < OBAPI double calc_rms(double*,double*,unsigned int);; < }; < #else; < OBAPI void rotate_coords(double*,double m[3][3],unsigned int);; < OBAPI double calc_rms(double*,double*,unsigned int); ; < #endif; 165a157,159; > OBAPI void rotate_coords(double*,double m[3][3],int);; > OBAPI double calc_rms(double*,double*,unsigned int);; > . scripts/openbabel-perl.i ; 163,188d162; < // Add some helper functions for C arrays; < %inline %{; < double *double_array(int size) {; < return (double *) malloc(sizeof(double)*size);; < }; < void double_destroy(int *a) {; < free(a);; < }; < void double_set(double *a, int i, double val) {; < a[i] = val;; < }; < double double_get(double *a, int i) {; < return a[i];; < }; < ; < double (*rotation_matrix())[3] {; < return (double (*)[3]) malloc(9*sizeof(double));; < }; < ; < void rotation_matrix_free(double (*m)[3]); < {; < free(m);; < }; < ; < %}; < . Reported by: @dkoes. Original Ticket: [openbabel/feature-requests/157](https://sourceforge.net/p/openbabel/feature-requests/157)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1526:214,access,access,214,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1526,1,['access'],['access']
Security,I'd like to obtain canonical SMILES with chiral info from PDB file.; Option -xi for chiral info was ignored when -ocan used instead of -osmi.; I got the following result with bable ver.2.1.0. $ cat mpd_clean.pdb; ATOM 1 C1 MPD 4728 -0.344 -1.472 -1.321 1.00 20.00 C+0; ATOM 2 C2 MPD 4728 -0.084 0.021 -1.122 1.00 20.00 C+0; ATOM 3 O2 MPD 4728 1.323 0.254 -1.049 1.00 20.00 O+0; ATOM 4 CM MPD 4728 -0.670 0.802 -2.299 1.00 20.00 C+0; ATOM 5 C3 MPD 4728 -0.746 0.485 0.177 1.00 20.00 C+0; ATOM 6 C4 MPD 4728 -0.145 -0.280 1.357 1.00 20.00 C+0; ATOM 7 O4 MPD 4728 1.240 0.047 1.481 1.00 20.00 O+0; ATOM 8 C5 MPD 4728 -0.878 0.106 2.643 1.00 20.00 C+0; END. $ babel -ipdb mpd_clean.pdb -osmi -xi 1.smi ; cat 1.smi; 1 molecule converted; 18 audit log messages; CC(C)(O)C[C@@H](O)C mpd_clean.pdb. $ babel -ipdb mpd_clean.pdb -ocan -xi 1.smi ; cat 1.smi; 1 molecule converted; 31 audit log messages; CC(O)CC(C)(C)O mpd_clean.pdb. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/635:736,audit,audit,736,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/635,2,['audit'],['audit']
Security,"I've been investigating cis/trans problems with the new Canonical SMILES code and validating against Daylight Depict and ChemDraw. (Granted, there could be bugs in each.). Here's an independent bug with cis/trans markings. The attached structure generates two distinct SMILES from -osmi and -ocan:. -osmi; C(\C(\C)=N\O)(=N/O)C 9.xyz. -ocan; O/N=C(\C)\C(=N\O)/C 9.xyz. The first has the correct ""trans"" geometry around the =N-OH caps. The second switches to a ""cis"" form. This can be verified using Open Eye depict: http://demo.eyesopen.com/cgi-bin/depict. If, in fact, these are bugs in other software, I'm happy. But the SMI output certainly matches the actual 3D XYZ coordinates, while CAN does not. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/605:82,validat,validating,82,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/605,1,['validat'],['validating']
Security,"I've hit a problem using SMILES as SMARTS, ; which in my case requires using *canonical* SMILES as input,; see the example below. The problem occurs both with ob-2.2.3 ; and todays SVN trunk. #-------- Cut & Paste from here ------------. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o smi; #C1=CC(n2cnc3c(N)ncnc23)OC=1 ; #1 molecule converted; #1 info messages 25 audit log messages . echo 'O' | babel -i smi - -s 'C1=CC(n2cnc3c(N)ncnc23)OC=1' -o smi - ; #==============================; #*** Open Babel Error in SMARTSError; # SMARTS Error:; #C1=CC(n2cnc3c(N)ncnc23)OC=1; # ^. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o can; #Nc1ncnc2c1ncn2C1C=C=CO1 ; #1 molecule converted; #1 info messages 25 audit log messages . # Correct:; echo 'O' | babel -i smi - -s 'Nc1ncnc2c1ncn2C1C=C=CO1' -o smi - ; #0 molecules converted. Reported by: sneumann",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1021:426,audit,audit,426,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1021,2,['audit'],['audit']
Security,"If the user specified option 2 (expand dangling bonds as dummy atoms), there was the possibility of an invalid memory access as the logic handling this did not catch all possibilities. Fixed by testing for a nullptr.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2449:118,access,access,118,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2449,1,['access'],['access']
Security,"In a previous commit, the type of the variable i was changed from int to unsigned int. As a result, the back substitution loop became infinite (comparison of unsigned int with zero) and the arrays B and A were accessed beyond their bounds causing a segfault.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/241:210,access,accessed,210,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/241,1,['access'],['accessed']
Security,"In the current SVN trunk, conversion of a gzip encoded file only generates one molecule:. tools/babel ~/Desktop/Downloads/MMFF94_dative.mol2.gz -osmi; C(C(O)=O)N AGLYSL01. But there are, in fact, 761 molecules in the file:; tools/babel ~/Desktop/Downloads/MMFF94_dative.mol2 -osmi; ...; 761 molecules converted; 9 warnings 9281 audit log messages . (Perhaps it's faster and better to implement a gzip decoder like the lineend.h code? This might also solve other PR in this list.). -Geoff. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/111"":https://sourceforge.net/p/openbabel/feature-requests/111",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1480:328,audit,audit,328,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1480,1,['audit'],['audit']
Security,"Introduced in #112. If N molecules are skipped using ""-l"" option, then comments for first molecule are lost. I guess MOL2Format::SkipObjects needs to check if line ""m-2"" has # at the beginning, and then skip few lines back (until hashed lines finish).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/127:230,hash,hashed,230,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/127,1,['hash'],['hashed']
Security,"It seems that all wedge and hash bonds created by OBDepict have the thick and thin end of the wedge swapped. The thin end of the wedge should be on the stereocenter. Here's an example. PubChem CID 10836 at http://pubchem.ncbi.nlm.nih.gov/summary/summary.cgi?cid=10836&loc=ec_rcs. It's 2D Mol file is at http://pubchem.ncbi.nlm.nih.gov/summary/summary.cgi?cid=10836&disopt=SaveSDF. If you save this, right click, and choose ""OBDepect"", it draws the molecule with the wedge pointing from the Nitrogen to the Carbon, instead of from the Carbon to the Nitrogen. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1070:28,hash,hash,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1070,1,['hash'],['hash']
Security,"It's impossible to access the values of data fields in; SD files using Python. The problem is that the; GetData() method should return OBPairData(), but; instead returns OBGenericData(). The latter does not; have a GetValue() method. Here is some example code:. >>>> Python; from openbabel import *. obconversion = OBConversion(); obconversion.SetInFormat(""sdf""); obmol = OBMol(). notatend = obconversion.ReadFile(obmol,""test.sdf""); assert notatend, ""No molecules in file!""; assert obmol.HasData('Molecular weight'), ""Doesn't have; a field called molecular weight!""; data = obmol.GetData('Molecular weight'); print ""The data has the following class: %s"" %; data.__class__; print ""The available methods include:""; print dir(data). >>>> Output; The data has the following class: <class; 'openbabel.OBGenericData'>; The available methods include:; ['Clone', 'GetAttribute', 'GetDataType', SetAttribute',; '__class__', '__del__', '__delattr__', '__dict__',; '__doc__', '__getattribute__', '__hash__', '__init__',; '__module__', '__new__', '__reduce__','__reduce_ex__',; '__repr__', '__setattr__', '__str__',; '__swig_destroy__', '__weakref__', 'this', 'thisown']. >>>> Notes; Please find attached test.sdf. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/532:19,access,access,19,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/532,1,['access'],['access']
Security,"MMFF Validation skipped for CUDPAS, VUWXUG",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/894:5,Validat,Validation,5,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/894,1,['Validat'],['Validation']
Security,Made TetStereoToWedgeHash handle negative scores for very unfavorable wedge/hash bonds. Fixes #1581.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1582:76,hash,hash,76,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1582,1,['hash'],['hash']
Security,No wedged or hashed bonds in svg,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1087:13,hash,hashed,13,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1087,1,['hash'],['hashed']
Security,"OB currently doesn't correctly handle two stereobonds at a tet center, e.g. three bonds at 120 (the fourth an implicit H), where two of the bonds are either both wedges or both hashes. (This situation can be treated the same as if just one of the bonds was a wedge or a hash). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1170:177,hash,hashes,177,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1170,2,['hash'],"['hash', 'hashes']"
Security,OB version: 2.1.1. Converting the attached SDF file to SMILES produces the following output:. $ babel -isdf DB03043.sdf -osmi. NC(Cc1c[nH]c2[se]ccc12)C(O)=O SDF file of DB03043; 1 molecule converted; 13 audit log messages. Which in a strict sense is wrong according to the openSMILES specification as non-aromatic atoms start with uppercase characters. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/711:203,audit,audit,203,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/711,1,['audit'],['audit']
Security,OBDepict draws wedge+hash bonds pointing in wrong direction,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1070:21,hash,hash,21,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1070,1,['hash'],['hash']
Security,"On my linux machines, building the csharp bindings did not complete because they were build in the BINARY_DIR, but later steps looked for them in SOURCE_DIR . It seems the standard for openbabel bindings is to build in the SOURCE_DIR , so I modified so they build there and the build now completes on my linux machines using mcs as the CSHARP_EXECUTABLE . I don't have access to a windows machine, so someone should make sure this doesn't break windows, where I think it is much more important to have working csharp bindings.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/47:369,access,access,369,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/47,1,['access'],['access']
Security,"On osx using installing with macports, I keep getting a segmentation error when trying to convert from a .gro file type to .pdb or .ml2. Here is the output from trying a conversion ; ```$ obabel test.gro -O test.pdb; Segmentation fault: 11```. When run using `gdb` I recieve the output ; ```Program received signal EXC_BAD_ACCESS, Could not access memory.; Reason: KERN_INVALID_ADDRESS at address: 0x0000000000000098; 0x00000001000cbfea in OpenBabel::OBResidue::AddAtom ()```. I'm not too familiar with C, but looking at the [code](http://fossies.org/dox/openbabel-2.3.2/groformat_8cpp_source.html) I think problem may have to do with `res` being set before it is defined. Reported by: ivirshup. Original Ticket: [openbabel/bugs/942](https://sourceforge.net/p/openbabel/bugs/942)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1322:341,access,access,341,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1322,1,['access'],['access']
Security,"Open Babel tool does not read name 'Si' element name from the smiles notation:; > echo ""Si"" | babel -i smi -o xyz; 0 molecules converted; 5 audit log messages . However everything works fine if 'Si' is brackteted:; >echo ""[Si]"" | babel -i smi -o xyz; 1. Si 0.00000 0.00000 0.00000; 1 molecule converted; 6 audit log messages . Seems that babel reads 'Si' name as two elements, 'S' and aromatic 'I', which is wrong. Open Babel 2.2.3 -- Feb 18 2011 -- 13:16:37; Darwin Marat-Talipovs-iMac.local 10.7.0 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386 i386 iMac11,3 Darwin. Marat Talipov,; TalipovM@gmail.com. Reported by: mirari",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1106:140,audit,audit,140,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1106,2,['audit'],['audit']
Security,"Open Babel version = 2.2.0 on opensuse 11.0. [C@@]123[C@H](C(C=C3)(C)C)CC[C@@](C1)(CCC2)C can makes openbabel segfault:; babel -i ""smi"" 9626.smi -o ""mol"" - ; Segmentation fault. this smiles was generated from mol:; babel -i ""mol"" 9626.mol -o ""smi"" -; [C@@]123[C@H](C(C=C3)(C)C)CC[C@@](C1)(CCC2)C 10102; 1 molecule converted; 29 audit log messages. see files attached.. openbabel also segfaults when just reading it:; babel -i ""smi"" 9626.smi -o ""smi"" -; Segmentation fault. I hope this helps... Leszek . Reported by: leszekrupnicki",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/839:328,audit,audit,328,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/839,1,['audit'],['audit']
Security,"OpenBabel is having problems when parsing SDF files from DrugBank. Steps to reproduce:. Download SDF from DrugBank:; http://www.drugbank.ca/sdf_set/nutra_drugs.sdf. Run babel or use corresponding function from the lib:; > babel -isdf nutra_drugs.sdf -opdb ethanol.pdb; 0 molecules converted; 2 audit log messages. Discovery Studio (DS) Visualizer, for instance, has no problem parsing SDF files from DrugBank. I'm hoping that someone can fix this before I did down into the source code. Reported by: sarkiss",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/760:294,audit,audit,294,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/760,1,['audit'],['audit']
Security,"OpenBabel wiki pages on scripting cannot be accessed. Also, other pages only mention Perl and Python scripting, please make sure Java scripting instructions are provided also. . ## Environment Information; Open Babel version: web page visited 08-Dec-2020; Operating system and version: N/A. ## Expected Behavior; I see a web page explaining how to use the scripting APIs. ## Actual Behavior; I see ""Whoops, we can't find that page."". ## Steps to Reproduce; Go to http://openbabel.org/wiki/Main_Page, on left pick Develop with Babel, then select OpenBabel-scripting. I accidentally stumbled on a reference to OBTest.java somehow, but that also gets an access error.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2310:44,access,accessed,44,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2310,2,['access'],"['access', 'accessed']"
Security,"Posted from Noel's e-mail:. As I understand it, the idea behind the DataTypes is exactly this, to; distinguish different types of data from each other. Could we have a; particular data type for data fields contained in a molecular file; format, and make it separate from data types that are computed by; OpenBabel?. For example, for an SD file with two data fields, Molecular weight and; NSC, I find the following OBGenericDatas:; ('Comment', 'CORINA 2.61 0041 25.10.2001', 3); ('NSC', '1', 1); ('Molecular weight', '122.03677944', 1)]. (i.e. Attribute, Value, Datatype). However, if I compute the SSSR and access GetFormula, in addition I get:; ('RingData', 'RingData', 8); ('Formula', 'C7H6O2', 1). Note that although RingData has its own datatype, 8, Formula is thrown; in with the data fields from the SD file. In summary, if it makes sense to everyone, could computed datatypes be; kept separate from those that are parsed from the file. Otherwise, it; will be impossible to distinguish data fields from calculated fields. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/98"":https://sourceforge.net/p/openbabel/feature-requests/98",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1467:607,access,access,607,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1467,1,['access'],['access']
Security,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1334:640,audit,audit,640,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334,5,"['Audit', 'audit']","['Audit', 'audit']"
Security,Publicly access the values of the gradients,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1525:9,access,access,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1525,1,['access'],['access']
Security,Reading MDL mol files via STDIN fails if the molecule has no title. This fails to create a molecule in the second step:. > echo CCC | babel -ismi -omol | babel -imol -osmi; 1 molecule converted; 19 audit log messages; 0 molecules converted. While this works fine:. > echo CCC foo | babel -ismi -omol | babel -imol -osmi; 1 molecule converted; 19 audit log messages; CCC foo; 1 molecule converted; 13 audit log messages. As does this:. > echo CCC | babel -ismi -ocml | babel -icml -osmi; 1 molecule converted; 19 audit log messages; CCC; 1 molecule converted; 13 audit log messages. Reported by: sea36,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/765:198,audit,audit,198,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/765,5,['audit'],['audit']
Security,Remove some audit messages,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1707:12,audit,audit,12,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1707,1,['audit'],['audit']
Security,"Remove some audit messages that copy the entire format description and then substring it. For smi->smi conversion, 1.6% of the total conversion time was spent on one of these audit message blocks, the majority of which on the string copy of the format description (which is not small for SMILES). Since the other ones are similar, why not remove all three? Actually, I would remove all audit and debug level logging statements throughout the library (I have never used them for debugging), so I have no qualms about removing these three. They could be rewritten to avoid the string copy, but... What do they think?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1707:12,audit,audit,12,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1707,3,['audit'],['audit']
Security,Running GetFormula on molecules containing the heaviest elements; (atomic number > 110) could cause a segfault due to out of bounds; memory access. Updated the alphabetized list of elements and added; bounds checking for the atomic number.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1565:140,access,access,140,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1565,1,['access'],['access']
Security,Segfault accessing GetBeginAtomIdx of orphan OBBond,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/754:9,access,accessing,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/754,1,['access'],['accessing']
Security,Segfault on Windows when accessing vector3.x(),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/661:25,access,accessing,25,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/661,1,['access'],['accessing']
Security,"Since a molecule can contain multiple &quot;conformers,&quot;; each coordinate set should be marked as 2D or 3D. This; would allow access to only a 2D representation or a 3D; representation. Or for file formats like CML which; allow storing both 2D and 3D coordinates, both could be; output. (Of course this would actually give much greater; flexibilty than currently available in CML, but the API; should be a superset of chemical ontology.). As requested by PMR. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/403:131,access,access,131,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/403,1,['access'],['access']
Security,Stereo code accesses freed memory,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1265:12,access,accesses,12,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1265,1,['access'],['accesses']
Security,"The SWIG tool used to generate the Python and Perl scripting ; language wrappers can also produce Java code to wrap an ; underlying C++ library. To facilitate access to other open tools like JMol, CDK, Octet, etc., ; a SWIG wrapper in Java might be a good first start to access ; libopenbabel from other tools. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/60"":https://sourceforge.net/p/openbabel/feature-requests/60",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1429:159,access,access,159,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1429,2,['access'],['access']
Security,"The _match member of the OBNode class in; smarts[.h,.cpp] is getting corrupted. On freeing:. if (_match); {; delete _match;; _match = NULL;; }. The delete causes a segfault, presumably from an; already deleted _match object. The only method which; accesses this is the SetMatch() method, which is called; often. For now, the segfault is prevented since the delete is; commented out, but this should be followed up to find; the root of the cause. (After calling delete, _match; should have been set to NULL.). -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/396:248,access,accesses,248,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/396,1,['access'],['accesses']
Security,The attached molecule causes SEGV (illegal memory access) when converted to SVG. It does not matter which input format is used (can be converted to various formats with no problem). It does not matter if GUI or command line is used. The bug is reproducible both on Linux and Windows. Contact: kaupo.palo[at]osa.pri.ee. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1071:50,access,access,50,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1071,1,['access'],['access']
Security,"The fingerprint definition file ""patterns.txt"" contains problems. It starts:. [+] 1; [-] 2; [#6][CX3](=O) 3 aldehyde or ketone; [CX3H1](=O)[#6] 4 aldehyde. The first two patterns are missing human-readable text. As a result, the -xs and -xu options to explain why the bit is set/unset do not work. They display nothing, not even a ""\t"" to separate an empty string. Also, the definitions for ""11 semicarbazone"" and ""12 thiosemicarbazone"" are missing the tab before the ""11"" and ""12"". As a result the descriptions look like:. hydrazone 11 semicarbazone 12 thiosemicarbazone oxime. to fix:; - replace the space before those numbers with a tab; - add validation code in the parser to make sure the files are in the correct format. Reported by: dalke",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/770:647,validat,validation,647,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/770,1,['validat'],['validation']
Security,"The following SMILES cause (seemingly) infinite loops in FindLSSR -- these are from TJ O'Donnell on the mailing list. c1ccc(cc1)c1c2ccccc2c2c3c4ccccc4c(c4ccccc4c13)c1c3ccccc3c3c(c4ccccc24)c2ccccc2c2cccc1c32	11433992; c1ccc2c(c1)ccc1cc3c4c(cccc4c4c5c6cc7ccc8ccccc8c7c7cccc(c67)c5c5c(c34)c3cccc4c6c(ccc7ccccc67)cc5c34)c21	11445613; c1ccc2c(c1)sc1cc3sc4ccccc4n4c5ccc(cc5)c5ccc(cc5)n5c6cc7c(sc8ccccc8n7c7ccc(cc7)c7ccc(cc7)n2c1cc34)cc6sc1ccccc51	20793318; c1ccc2c(c1)oc1cc3oc4ccccc4n4c5ccc(cc5)n5c6cc7c(oc8ccccc8n7c7ccc(cc7)n2c1cc34)cc6oc1ccccc51	20793319. Incidentally, the call chain is:. *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Audit Log in FindRingAtomsAndBonds; Ran OpenBabel::FindRingAtomsAndBonds; ==============================; *** Open Babel Audit Log in IsClosure; Ran OpenBabel::PerceiveClosureBonds; ==============================; *** Open Babel Audit Log in FindLSSR; Ran OpenBabel::FindLSSR. We didn't need this in v2.2 or earlier. Do we need LSSR when finding closure bonds?. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1025:601,Audit,Audit,601,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1025,5,['Audit'],['Audit']
Security,"The following aromatic SMILES is not converted corectly into its kekule form:. c12-c3c(cc(N)cc3)Cc1cccc2. Open Babel generated info messages during smi->sdf and smi->smi conversions:. babel ---errorlevel 2 -h -ismi c12-c3c(cc(N)cc3)Cc1cccc2.smi -osmi; c12-c3c(cc(N)cc3)Cc1; cccc2-ob.smi; ==============================; *** Open Babel Information in OpenBabel::OBMol::NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule. ==============================; *** Open Babel Information in OpenBabel::OBMol::start_kekulize; Kekulize Error for molecule. 1 molecule converted; 2 info messages 44 audit log messages. The obtained output is a structure different than the original one, represented in the aromatic smiles c12-c3c(cc(N)cc3)Cc1cccc2:. C12=C3C(=CC(=CC3)N)CC1C=CC=C2. Is Open Babel behaving as expected in this particular case? . Reported by: vedina",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/866:608,audit,audit,608,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/866,1,['audit'],['audit']
Security,"The simple command ""obabel -i"" causes a segfault. The problem is several cases like this:. for (arg = 1; arg < argc; ++arg); {; ...; case 'i':; iext = argv[arg] + 2;; if(!*iext); iext = argv[++arg];. Note that arg is incremented without checking to see whether it's past argc, so it's accessing past the end of the argv array. By luck, it's getting a NULL pointer, but iext could point to anything. There are a number of instances of this in the command-line parsing section. Reported by: @cjames53. Original Ticket: [openbabel/bugs/902](https://sourceforge.net/p/openbabel/bugs/902)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1282:285,access,accessing,285,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1282,1,['access'],['accessing']
Security,There are so many sdf molecules in PDBbind dataset could not be correctly sanitized and causes trouble for my project. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: linux / in conda env. `There was a problem with file 2020_refined_lig_sdf/4lps_ligand.sdf: Sanitization error: Can't kekulize mol. Unkekulized atoms: 18 19 20 23 27`. ```; *** Open Babel Warning in ReadMolecule; Failed to kekulize aromatic bonds in MOL file (title is 4loh_ligand); [15:10:24] Can't kekulize mol. Unkekulized atoms: 33 34 35 36 38; ```,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2630:74,sanitiz,sanitized,74,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2630,2,"['Sanitiz', 'sanitiz']","['Sanitization', 'sanitized']"
Security,There was a problem with file 2020_refined_lig_sdf/1e1v_ligand.sdf: Sanitization error: Can't kekulize mol.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2630:68,Sanitiz,Sanitization,68,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2630,1,['Sanitiz'],['Sanitization']
Security,"This file may or may not be a standard PDB file, but it was generated by a ; previous version of Open Babel (via Ghemical) so it's important we fix the ; bugs it exposes. For one, the code attempts to bond atom 1 to atom 1. OBMol::AddBond() ; must not accept this. For another, the parsing code turns:; CONECT 11 2. into requests to add bonds 1->1, 1->2, etc. the function ParseConectRecord() needs to be carefully debugged ASAP. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/526:162,expose,exposes,162,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/526,1,['expose'],['exposes']
Security,"This is a continuation of Igor's bug report #2412105. In v2.3.0rc1, the 3rd molecule in this SD file seems to have incorrect SMILES stereochemistry -- the wedge/hash notation in the rings appears to be ignored. As a result, the InChI generated by Open Babel and inichi.exe are different. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1036:161,hash,hash,161,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1036,1,['hash'],['hash']
Security,This post is in reference to the bug posts 865/866 and just documents a 'workaround'. While for some strange reason indirect access to the begin() and end() member functions leads to segmentation faults as illustrated:; http://openbabel.org/dev-api/classOpenBabel_1_1OBRing.shtml. for (i =rlist->begin();i != rlist->end();++i). Accessing the member functions begin() and end() for the 'ring loop'; using vr.begin() and vr.end() sidesteps the segmentation violation issue and the ring atom perception code works fine with that replacement. Both approaches should work --but I may be missing something (the indirect access should work). vector<OBRing*> vr;; vr = mol.GetSSSR();; vector<OBRing*>::iterator i;; vector<int>::iterator j;. for (i =vr.begin();i != vr.end();++i); { ; for(j = (*i)->_path.begin(); j != (*i)->_path.end(); ++j); cout << *j << ' ';; cout << endl;; }. Reported by: dannil54. Original Ticket: [openbabel/bugs/868](https://sourceforge.net/p/openbabel/bugs/868),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1248:125,access,access,125,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1248,3,"['Access', 'access']","['Accessing', 'access']"
Security,"This problem was originally posted on openbabel-discuss forum by David Rose-9 on Nov. 15, 2007. However, I still have exactly the same problem using version 2.2.3, which is the last one on Feb. 19, 2010, on my x86 64 bit RedHat Linux and it is better to notice the problem here. ; ---------------------------; I have had several instances where I build a fast search index without any apparent trouble but then can't search it without an error. I finally have a small example of this problem that I can post, using a 10 molecule smi file (ten.smi) as input: . $ cat ten.smi ; C12(C(N(C(=O)C)c3c2cccc3)=O)Nc2c(ccc(c2N1)OCCCC)OCCCC ; n1c([nH]c(cc1c1ccccc1)=O)c1ccc(cc1)Br ; n1c(nc2c(c1N(C)C)cccc2)c1c(O)cccc1 ; C1(/[CH]2[CH]3\C(=C4/CC(C)(C)NC(C4)(C)C)C=C[CH]3[CH]1C=C2)=C1/CC(C)(C)NC(C1)(C)C ; n1c(c2ccc(C(=O)O)cc2)ccc(c1)CCCCC ; N1(C(CN(CC1=O)C(=O)C1CCCCC1)=O)CCc1ccccc1 ; S(N1[CH](c2ccccc2C=C1)C#N)(c1ccc(cc1)C)(=O)=O ; c12c(c(OC)c3c(c1OC)occ3)ccc(o2)=O ; c12c(O[CH](C1=O)C(C)C)cc1c(c2)ccc(=O)o1 ; c12[C]3([C@H]4([N@@](CCc1c1ccccc1[nH]2)C[C@H](C=C4CC)C3))C(=O)OC . # file looks OK...build index: . $ babel ten.smi -ofs ; This will prepare an index of ten.smi and may take some time... ; It took 0 seconds ; 10 molecules converted ; 37 audit log messages . $ ls -lt ten.fs ; -rw-r--r-- 1 rose staff 1564 Nov 15 12:51 ten.fs . # looks OK, no errors, fs file exists and has stuff in it. Try a search: . $ babel ten.fs -ifs -s'Nc2nc(c1ccccc1)nc3ccccc23' out.smi ; ============================== ; *** Open Babel Error in ReadChemObject ; Difficulty reading from index ten.fs . 0 molecules converted ; 1 errors 1 audit log messages. From this past post ---Problem using fs index file--- (http://n4.nabble.com/Problem-using-fs-index-file-td958832.html#a958832), problem may be caused by incompatible binary operation on 64 bit machine but I cannot figure out the cause. Reported by: makio323",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966:1235,audit,audit,1235,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966,2,['audit'],['audit']
Security,"This pull request is related to issue #1298 on which I have commented. The segfault was caused by line with symmetry of the mode like this one:; > FREQUENCY: 2.93 1.88 0.55 0.35 0.16; > SYMMETRY: E E E E E; > REDUCED MASS: 6.79503 6.40438 13.42881 10.66293 9.71937; The line was skipped by the program and the following loop did not read atoms correctly. The problem was apparently fixed in master, however fixing it exposes new segfault caused by the fact that `modeCount` variable is defined in line **548** as `unsigned int` and then used to leave the loop in lines **551-591**. At the end of loop there is a line; ```; modeCount = vs.size() - 3;; ```; For an empty vector the result (-3) is incorrectly casted to `unsigned int` and the condition in line **551**; ```; while (modeCount >= 1) {; ```; fails. This has been resolved in lines **554-555** like this:; ```; if (!atom); break; // something is very wrong; ```; My suggestion is to simply declare `modeCount` as `int`.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1772:417,expose,exposes,417,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1772,1,['expose'],['exposes']
Security,"ThrowError was taking a total of 1.9% of the time for smi->smi. This was mainly attributed to three log messages, all audits. I've added an 'if' statement to check the logger's output level before throwing the error. I think it would make sense for this to be an idiom throughout the library.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1714:118,audit,audits,118,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1714,1,['audit'],['audits']
Security,"Travis uses 1.5 core per build machine. Most of the time, the build is; slowed by disk access, so setting -j2 to make usually speed up things a lot.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/204:87,access,access,87,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/204,1,['access'],['access']
Security,"Trying out the new ""obmm"" tool, and running a CG step yields a fast crash. The ""logos"" variable is never initialized, so the code attempts to write to a NULL stream. While this can be fixed with modifications to obmm, I worry that there's no guarantee that the stream pointer will be set. (i.e., there's no exposed constructor). So this can occur easily in even well-meaning client code. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/606:307,expose,exposed,307,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/606,1,['expose'],['exposed']
Security,"Using ""babel --fillUC strict test.cif test.pdb"" to transform a structure with a given symmetry group into a P1 structure creates duplicate atoms. Example with a ""P-1"" space group: the atom at (0,0,1/2) is duplicated when symmetry is removed, leading to two identical atoms at the same position. $ cat test.cif ; data_test. _cell_length_a 10.0000(0); _cell_length_b 10.0000(0); _cell_length_c 10.0000(0); _cell_angle_alpha 90.0000(0); _cell_angle_beta 90.0000(0); _cell_angle_gamma 90.0000(0). _symmetry_space_group_name_H-M 'P -1'; _symmetry_Int_Tables_number 2; _symmetry_cell_setting cubic. loop_; _symmetry_equiv_pos_as_xyz; '+x,+y,+z'; '-x,-y,-z'. loop_; _atom_site_label; _atom_site_type_symbol; _atom_site_fract_x; _atom_site_fract_y; _atom_site_fract_z; O1 O 0.0000 0.0000 0.5000; $ babel --fillUC strict test.cif test.pdb; 1 molecule converted; 1 info messages 21 audit log messages ; $ cat test.pdb ; COMPND test.cif ; AUTHOR GENERATED BY OPEN BABEL 2.3.1; CRYST1 10.000 10.000 10.000 90.00 90.00 90.00 P 1 1; HETATM 1 O HOH 1 -0.000 -0.000 5.000 1.00 0.00 O ; HETATM 2 O HOH 2 -0.000 -0.000 5.000 1.00 0.00 O ; MASTER 0 0 0 0 0 0 0 0 2 0 2 0; END. Reported by: coudert",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1151:872,audit,audit,872,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1151,1,['audit'],['audit']
Security,"Using OBMolAtomDFSIter and OBMolAtomBFSIter it's possible to iterate over the atoms in a molecule in a DF or BF manner. It would be great to be able to access the depth at a particular point in the iteration. This would allow the implementation of several algorithms using the API, such as calculation of circular fingerprints and HOSE codes. - Noel. Reported by: @baoilleach. Original Ticket: ""openbabel/feature-requests/126"":https://sourceforge.net/p/openbabel/feature-requests/126",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1495:152,access,access,152,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1495,1,['access'],['access']
Security,"Using the SourceForge Compile farm for testing, I noted; a failure on the matrix algebra test:. bash-2.03$ uname -a; SunOS usf-cf-sparc-solaris-2 5.8 Generic_108528-17; sun4u sparc SUNW,Ultra-60. Reading specs from; /opt/sfw/lib/gcc-lib/sparc-sun-solaris2.8/2.95.2/specs; gcc version 2.95.2 19991024 (release). Testing Matrix Algebra...; Matrix eigenvector test failed, wrong eigenvalues computed.; ERROR: ***MATRIX test failed***. There were no other error messages from this build. Let; me know if you need more information. (Everyone with a; SF.net account can access and use the Compile Farm.). -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/409:564,access,access,564,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/409,1,['access'],['access']
Security,"Using this branch to change the runner for automated testing on babel, updating the python version in hopes to resolve the security checks",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2592:123,secur,security,123,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2592,1,['secur'],['security']
Security,Validate Gasteiger Charges,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1371:0,Validat,Validate,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1371,1,['Validat'],['Validate']
Security,"Via Rob Soe on openbabel-discuss. The current parser does not exact the ""V"" fields for per atom data. See page 18 of ctfile.pdf. ----------------------------------------; 3-103; Marvin 06110916162D . 4 3 0 0 0 0 999 V2000; 6.5956 2.0240 0.0000 S 0 0 0 0 0 0 0 0 0 0 0 0; 7.0081 1.3095 0.0000 O 0 0 0 0 0 0 0 0 0 0 0 0; 6.1831 2.7385 0.0000 O 0 0 0 0 0 0 0 0 0 0 0 0; 7.3102 2.4365 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 2 0 0 0 0; 1 3 2 0 0 0 0; 1 4 1 0 0 0 0; V 1 -0.10; V 2 -0.26; V 3 -0.26; V 4 0.03; M END; $$$$. Via Geoff: This could be stored in per-atom custom data like and accessed through:. FOR_ATOMS_OF_MOL(a,mol){; atomData.push_back(a->GetData(""Atom Value""));. cout << ""atomData.size: "" << atomData.size() << endl;. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/902:581,access,accessed,581,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/902,1,['access'],['accessed']
Security,Wedge/Hash Stereo ignored in SD File,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1036:6,Hash,Hash,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1036,1,['Hash'],['Hash']
Security,"When `OBSmartsPattern::Init()` is called more than once in one object, a memory leak occurs. ## Environment Information; Open Babel version: Current master (`699a54e`); Operating system and version: Ubuntu 16.04. ## Steps to Reproduce; 1. Save the following code `leak.cpp`.; ```cpp; #include <openbabel/parsmart.h>. int main() {; OpenBabel::OBSmartsPattern sp;; sp.Init(""CC"");; sp.Init(""CO"");; }; ```; 2. Compile `leak.cpp` with sanitize flags; ```; g++ -g -fsanitize=address -fno-omit-frame-pointer -Wall -I /usr/local/include/openbabel-2.0/ -L /usr/local/lib/openbabel/2.4.90/ leak.cpp -o leak -lopenbabel; ```; 3. Execute the compiled program. The output in my environment was:; ```; $ ./leak . =================================================================; ==11385==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 48 byte(s) in 1 object(s) allocated from:; #0 0x7f57a6778532 in operator new(unsigned long) (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x99532); #1 0x7f57a63ba27d in OpenBabel::OBSmartsPattern::ParseSMARTSPattern() (/usr/local/lib/libopenbabel.so.5+0x17427d). Indirect leak of 104 byte(s) in 1 object(s) allocated from:; #0 0x7f57a67786b2 in operator new[](unsigned long) (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x996b2); #1 0x7f57a63b8fa1 in OpenBabel::CreateAtom(OpenBabel::Pattern*, OpenBabel::_AtomExpr*, int, int) (/usr/local/lib/libopenbabel.so.5+0x172fa1). Indirect leak of 48 byte(s) in 2 object(s) allocated from:; #0 0x7f57a6778532 in operator new(unsigned long) (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x99532); #1 0x7f57a63b7743 in OpenBabel::OBSmartsPattern::ParseSimpleAtomPrimitive() (/usr/local/lib/libopeParseSMARTSPartnbabel.so.5+0x171743). Indirect leak of 24 byte(s) in 1 object(s) allocated from:; #0 0x7f57a6778532 in operator new(unsigned long) (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x99532); #1 0x7f57a63b9965 in OpenBabel::OBSmartsPattern::SMARTSParser(OpenBabel::Pattern*, OpenBabel::ParseState*, int, int) (/usr/local/lib/libopenbabel.so.5+",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1869:430,sanitiz,sanitize,430,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1869,1,['sanitiz'],['sanitize']
Security,"When an index is prepared from the attached smiles file (with CRLF line endings):; babel 4mols.smi -ofs ; and searched; babel 4mols.fs -sC#N -osmi; The correct response, which occurs newlinebuf is disabled by giving SmilesFormat a READBINARY flag, is: . 2 candidates from fingerprint search phase; O=N(=O)c1ccc(c(c1)N(=O)=O)SC#N 540; Clc1ccccc1C=C(C#N)C#N 542; 2 molecules converted; 41 audit log messages. With newlinebuf active for SmilesFormat. 2 candidates from fingerprint search phase; O=N(=O)c1ccc(c(c1)N(=O)=O)SC#N 540; 1 molecule converted; 41 audit log messages. This was on Windows XP. The behaviour is the same if 4mols.smi has just LF endings.; ; Fastsearch uses seek positions in the smiles file and I suspect newlinebuf has interfered with these. I'll look further when I have time later in the week. Reported by: @chrismorl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/585:387,audit,audit,387,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/585,2,['audit'],['audit']
Security,"When converting a small-molecule CIF file to mmCIF, the resulting mmCIF is missing many mandatory values in the atom_site table. The mandatory items are documented for the atom_site category in the current mmCIF documentation, https://mmcif.wwpdb.org/dictionaries/mmcif_pdbx_v50.dic/Categories/atom_site.html. The mandatory fields are those that are annotated with exclamation point inside a circle: auth_asym_id, label_alt_id, label_asym_id, label_atom_id, label_comp_id, label_entity_id, label_seq_id, and type_symbol. Of those, Open Babel only populates the type_symbol value. In practice, auth_asym_id is not required. Reasonable default values for the other missing values are:; label_alt_id .; label_asym_id A; label_comp_id UNL; label_entity_id ?; label_seq_id . label_atom_id should be unique for every atom -- if it is present, just reuse the atom_site_label value from the small-molecule CIF file (https://www.iucr.org/__data/iucr/cifdic_html/1/cif_core.dic/Iatom_site_label.html). Otherwise, number them, eg., C1, C2, etc. A test file is https://github.com/openbabel/openbabel/blob/master/scripts/python/examples/hashizume.cif",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2545:1124,hash,hashizume,1124,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2545,1,['hash'],['hashizume']
Security,"When evaluating atom coordination number, method; OBForceFieldUFF::ParseParamFile() assumed that it may access a third character; of the atom type string, but in fact that produces undefined behavior if the; string is only one character long. A one-character atom type occurs in; practice with the default parameter file (for deuterium). This change addresses the issue by verifying that the second character of; each atom type string is not a C string terminator as a precondition for; accessing the third. If the second is a string terminator then the same; default behavior is provided as if the type were two characters long. Fixes #2223",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2224:104,access,access,104,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2224,2,['access'],"['access', 'accessing']"
Security,"When from the same program (GChemPaint)I open; successively two cml files using openbabel (either last; version or cvs version), the program crashes. The first; file is correctly loaded.; gdb gives this backtrace:. Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread 16384 (LWP 8932)]; 0x00000000 in ?? (); Current language: auto; currently c; (gdb) bt; #0 0x00000000 in ?? (); #1 0x080cb83e in; OpenBabel::OBMol::AddBond(OpenBabel::OBBond&amp;) (; this=0x84d1908, bond=@0xbfffe280) at mol.h:443; #2 0x0810ecf1 in OpenBabel::endBond() () at cml.cpp:1995; #3 0x081085aa in OpenBabel::endElement(std::string,; std::string, std::string); (localName=Internal: global symbol `_ZNSs4nposE'; found in ../../../../libstdc++-v3/src/string-inst.cc; psymtab but not in symtab.; _ZNSs4nposE may be an inlined function, or may be a; template function; (if a template, try specifying an instantiation:; _ZNSs4nposE&lt;type&gt;).; ) at cml.cpp:1175; #4 0x08108127 in OpenBabel::endElement(std::string); (name=Cannot access memory; at address 0x8; ) at cml.cpp:1156; #5 0x081036ec in OpenBabel::tag(std::string) (s=; {static npos = 4294967295, _M_dataplus =; {&lt;allocator&lt;char&gt;&gt; = {&lt;No data; fields&gt;}, _M_p = 0x84d85ec &quot;&lt;/bond&gt;&quot;}, static; _S_empty_rep_storage = {0, 0, 0, 0}}) at; /usr/include/c++/3.2.2/bits/basic_string.h:883; #6 0x081027ac in OpenBabel::ReadXML(std::istream&amp;); (ifs=@0xbfffe560); at cml.cpp:626; #7 0x08114309 in OpenBabel::ReadCML(std::istream&amp;,; OpenBabel::OBMol&amp;, char const*) (ifs=@0x84d1908,; mol=@0x84d1908,; title=0x84c6770; &quot;/home/Jean/projects/GChemPaint/1.cml&quot;) at cml.cpp:2894; #8 0x080e7d23 in; OpenBabel::OBFileFormat::ReadMolecule(std::istream&amp;,; OpenBabel::OBMol&amp;, char const*) (ifs=@0x84db7e4,; mol=@0xbfffea30,; title=0x84c2f90 &quot;&amp;#565;D\b&quot;) at fileformat.cpp:43. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/420:1024,access,access,1024,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/420,1,['access'],['access']
Security,"When reading an xtc file with multiple frames, only the coordinates of the last conformer are valid. I think it is happening because the destructor of the vector confs is being called whenever a frame is finished being read and the array that stores the atomic coordinates for that frame is freed. Meanwhile the pointer to that (now unallocated) array is stored in vconf and then in the OBMol object. See http://sourceforge.net/p/openbabel/code/HEAD/tree/openbabel/trunk/src/formats/xtcformat.cpp#l187. So whenever I try accessing the conformer coordinates after reading them from an xtc file, I see a partially overwritten array. This may also be related to bug #745, if the OBMol destructor is trying to free the already freed arrays of conformer coordinates. I mention this because I'm getting similar behavior from calling OBMol.Clear() at the end of my test. libopenbabel version: 2.3.2+dfsg-1.1, from Ubuntu 14.04 repository. Reported by: zetadin. Original Ticket: [openbabel/bugs/960](https://sourceforge.net/p/openbabel/bugs/960)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1339:521,access,accessing,521,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1339,1,['access'],['accessing']
Security,"When repeatedly recanonicalizing a partial molecule (i.e. using an OBBitMap to select different parts of the molecule), I get the following report from valgrind(1). The stereo code seems to holding a reference to data that's been deallocated. > canon.cpp line 1722 deallocates it; > canon.cpp line 1739 causes an invalid access; > (via OpenBabel::OBTetrahedralStereo::IsValid() const (tetrahedral.cpp:128). Here is the valgrind output. This code is embedded in a FastCGI framework, so the malloc/dealloc are from that package, but I don't think that contributes. ```~~; ==30812== Invalid read of size 8; ==30812== at 0x4FD8BB5: OpenBabel::OBTetrahedralStereo::IsValid() const (tetrahedral.cpp:128); ==30812== by 0x4FD9C6B: OpenBabel::OBTetrahedralStereo::GetConfig(OpenBabel::OBStereo::Winding, OpenBabel::OBStereo::View) const (tetrahedral.cpp:166); ==30812== by 0x4EBA294: OpenBabel::CanonicalLabelsImpl::CalcCanonicalLabels(OpenBabel::OBMol*, std::vector<unsigned int, std::allocator<unsigned int> > const&, std::vector<unsigned int, std::allocator<unsigned int> >&, std::v\; ector<OpenBabel::OBStereoUnit, std::allocator<OpenBabel::OBStereoUnit> > const&, OpenBabel::OBBitVec const&, OpenBabel::OBStereoFacade*, int, bool) (canon.cpp:1506); ==30812== by 0x4EADFBB: OpenBabel::CanonicalLabels(OpenBabel::OBMol*, std::vector<unsigned int, std::allocator<unsigned int> > const&, std::vector<unsigned int, std::allocator<unsigned int> >&, OpenBabel::OBBitVec const&, int\; , bool) (canon.cpp:1739); ==30812== by 0xB7841A7: OpenBabel::OBMol2Cansmi::CreateFragCansmiString(OpenBabel::OBMol&, OpenBabel::OBBitVec&, bool, char*) (smilesformat.cpp:3989); ==30812== by 0xB785C6E: OpenBabel::CreateCansmiString(OpenBabel::OBMol&, char*, OpenBabel::OBBitVec&, bool, OpenBabel::OBConversion*) (smilesformat.cpp:4186); ==30812== by 0xB789CA7: OpenBabel::SMIBaseFormat::WriteMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*) (smilesformat.cpp:4292); ==30812== by 0x4F627A4: OpenBabel::OBConversion::Write(Op",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1265:321,access,access,321,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1265,1,['access'],['access']
Security,"When the attached file is processed with babel, e.g. converted to SMILES, the aromaticity of one of the benzene is lost and the ring is converted to a cyclohexane:; babel test.mol2 -osmi; C(=O)(OCc1ccccc1)NC(C(NCP(OC(C(O)O)CC1CCCCC1)(O)O)=O)C 8cpa_ligand_001; 1 molecule converted; 2 info messages 12 audit log messages . The compound contains two benzene rings, one is changed. Paul W. Elsinhorst suggested a workaround:; Just a workaround,. do it like this: babel -imol2 test.mol2 -opdb | babel -ipdb -osmi. Paul. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/759:301,audit,audit,301,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/759,1,['audit'],['audit']
Security,"While replying to issue #2691, I noticed the .pdf version of the manual (edition by Jul 14, 2023) p. 171 / section 18.3.5 only carries the section header `MSI BGF format (bgf)`. The [online documentation](https://open-babel.readthedocs.io/en/latest/FileFormats/MSI_BGF_format.html?highlight=bgf) accessed today equally appears empty. This might be an accidental omission a future edition of the manual can close.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2692:296,access,accessed,296,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2692,1,['access'],['accessed']
Security,Wiki pages on scripting cannot be accessed,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2310:34,access,accessed,34,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2310,1,['access'],['accessed']
Security,"With OpenBabel 2.2.3, I get a segmentation fault when converting the attached MOPAC output file to a MOL file (see below). Most other MOPAC files are processed as expected, without error. Also, I tried processing the same file with the OpenBabel 2.2.0 GUI (on a separate system) and the conversion to MOL file seemed to work properly. gmagoon@pharos:~/threeDcheck_testdir$ babel -imoo QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.out -omol QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.mol2 ---errorlevel 5; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; Segmentation fault. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1133:532,Audit,Audit,532,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1133,5,['Audit'],['Audit']
Security,"`; does not. *However*. I noticed `C[C@H]1CC[N@@]2CCC[C@@H]12` is described with nitrogen as a stereocentre. Thus, when submitted *as such* to either [PubChem Sketcher](https://pubchem.ncbi.nlm.nih.gov/edit3/index.html) or the [ChemDraw JS sample page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) visualized with a wedge:. ![initial_state](https://user-images.githubusercontent.com/19709084/123659339-1b185800-d822-11eb-9fc5-2cbd3506ad28.png). Since the conversion SMILES to canonical SMILES ; ```; obabel -:""C[C@H]1CC[N@@]2CCC[C@@H]12"" -ocan; ```; yields `C[C@H]1CC[N@]2[C@H]1CCC2` with the same issue in visualization and format conversion, I passed the canonical SMILES to RDKit (version 2020.09.4, as provided by Debian's repositories) :; ```; >>> import rdkit; >>> from rdkit import Chem; >>> ; >>> # SMILES to mol:; >>> m = Chem.MolFromSmiles(""C[C@H]1CC[N@]2[C@H]1CCC2""); >>> ; >>> # mol to SMILES:; >>> Chem.MolToSmiles(m); 'C[C@H]1CCN2CCC[C@@H]12'; >>> ; ```; *This* newly generated SMILES string is visualized differently now, without the wedge on nitrogen. ![later_state](https://user-images.githubusercontent.com/19709084/123661419-0b017800-d824-11eb-8b9a-e1a5a517ffb5.png). and the attempt to convert this to a 3D `.xyz` by; ```; obabel -:""C[C@H]1CCN2CCC[C@@H]12"" -h --gen3d -oxyz -O output.xyz; ```; does not yield any warning (even if it is not OpenBabel's canonical SMILES string, `C[C@H]1CCN2[C@H]1CCC2`). Perhaps this is a bypass for a few instances when OpenBabel otherwise states ""Open Babel Warning in CorrectStereoAtoms"", but is there a more efficient way to for this in OpenBabel itself? Is there a ""SMILES sanitizer"", other than the options listed in section 18.1.7?. <!-- ## Steps to Reproduce -->; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2393:3825,sanitiz,sanitizer,3825,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2393,1,['sanitiz'],['sanitizer']
Security,"```; $ python3.9 wgtRotorSrch.py hashizume.cif; Traceback (most recent call last):; File ""/disk-samsung/freebsd-ports/science/py-openbabel/work-py39/openbabel-3.1.1.1/examples/wgtRotorSrch.py"", line 32, in <module>; ff.SetLogLevel(openbabel.OBFF_LOGLVL_LOW); AttributeError: 'NoneType' object has no attribute 'SetLogLevel'; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2548:33,hash,hashizume,33,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2548,1,['hash'],['hashizume']
Security,a) The ECFP implementation was expecting the ``std::vector<int>`` to be treated as a list of hashes whilst the callers were expected it to be a bit set. Whilst return the raw hash values is useful it would require a new API point.; b) Resolves #1651. With these changes the fingerprint scores 76.2% on the Briem Lessel benchmark. . Also looks like the ``Fold()`` function is doing the wrong thing elsewhere too. For example if I generate MACCS keys...; ```; 0000000000021000014416cf1be5b083ad2fef7f1f	204; 0004200000000021418004afa160b00910a1e46a1b	205; 8004040000100200000816cf8d69b847856dfefb19	206; 000000002000002141d034e82b61b08b01230d2d1f	207; 00000000204000840194b1091b73b3e781eb2fff1f	208; ```; and then fold them to say 256 bits... one would expect the output to be padded with trailing zeros; ```; 000000000000300001d204de90699425843952fe1f0000000000000000000000	173; 801480800d580b84e5fc9ded3773d16fd6efeb7f1f0000000000000000000000	174; 000000040000000000000006800c2e84290404d6080000000000000000000000	175; 0000000000000000810002401b510165546fc3ff1f0000000000000000000000	176; 000000002000002001d0169e9b61b16340e3cdfb1f0000000000000000000000	177; 0000000000400084015085871013a7e58deff7df1f0000000000000000000000	178; ```; good... but now 512...; ```; 000004000001002001c4301e9b61bd43cce17deb1f00000000000000000000007373000000000000510000000000000000000000000000000900000006000000	17; 0000000000000001038002461a81a18149a1c5391f00000000000000000000007373000000000000510000000000000024000000000000002400000000000000	18; 0000000000002000800230510000016604dcbafa1f00000000000000000000007373000000000000b10000000000000090460828177f00000000000000000000	19; 0000000000000000004434c80960b1e38963afff1f00000000000000000000007373000000000000210000000000000090be6d000000000098be6d0000000000	20; 000000002000102181d41ecf133192635c6feafd1f00000000000000000000007373000000000000f10100000000000058f86d000000000008fc6e0000000000	21; 0000800008108364600cb1703f59ecafdbbb7fff1f00000000000000000000007373000000,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1653:93,hash,hashes,93,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1653,2,['hash'],"['hash', 'hashes']"
Security,access record count by the compiled obabel executable,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2639:0,access,access,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2639,1,['access'],['access']
Security,"babel ""Open Babel 2.2.1 -- Mar 1 2009 -- 19:20:41"" crashes; on ""Darwin 9.7.0 Darwin Kernel Version 9.7.0: Tue Mar 31 22:52:17 PDT 2009; root:xnu-1228.12.14~1/RELEASE_I386 i386""; for ""babel -i cif 2aev.cif -o pdb test2.pdb""; with; ==============================; *** Open Babel Warning in Init; Unable to open data file 'space-groups.txt'; ==============================; *** Open Babel Warning in Init; Cannot initialize database; Segmentation fault. at. Program received signal EXC_BAD_ACCESS, Could not access memory.; Reason: KERN_INVALID_ADDRESS at address: 0xfffffffc; 0x937666e1 in __gnu_cxx::__exchange_and_add (); #1 0x93756070 in std::string::_Rep::_M_dispose (); #2 0x937580a6 in std::string::assign (); #3 0x000ddac5 in OpenBabel::CIFData::ExtractSpacegroup (); #4 0x000e07a7 in OpenBabel::CIFData::ExtractAll (); #5 0x000e2c8f in OpenBabel::CIF::CIF (); #6 0x000e2ddc in OpenBabel::CIFFormat::ReadMolecule (); #7 0x0030eaea in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (); #8 0x0000f4d8 in OpenBabel::OBMoleculeFormat::ReadChemObject (); #9 0x002f80e8 in OpenBabel::OBConversion::Convert (); #10 0x002f9f44 in OpenBabel::OBConversion::Convert (); #11 0x002fa96d in OpenBabel::OBConversion::FullConvert (); #12 0x00002ea0 in main (). Reported by: knollentroll",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/910:505,access,access,505,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/910,1,['access'],['access']
Security,babel nanotube.xyz -O nanotube.cif; or ; obabel nanotube.xyz -O nanotube.cif . ==============================; *** Open Babel Error in expand_cycle; maximum time exceeded...; ==============================; *** Open Babel Error in expand_cycle; maximum time exceeded...; ==============================; *** Open Babel Error in ... both fail in converting a simple xyz file nanotube.xyz (attached). Using gdb I find the code is hung inside kekulize.cpp . If you change the C's to H's in nanotube.xyz babel runs fine. . babel nanotube_H.xyz -O nanotube_H.cif; 1 molecule converted; 9 audit log messages . I have attached that working version too. I recompiled babel with -g -O0 and that did not help. Ron Cohen; rcohen@gl.ciw.edu. Reported by: recohen. Original Ticket: [openbabel/bugs/870](https://sourceforge.net/p/openbabel/bugs/870),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1250:582,audit,audit,582,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1250,1,['audit'],['audit']
Security,"bel in gdb produces the following output:. (gdb) run; Starting program: /home/cjh/local/bin/babel -ig03 1.gjf -oreport; [Thread debugging using libthread_db enabled]. Program received signal SIGSEGV, Segmentation fault.; __strlen_sse2 () at ../sysdeps/x86_64/multiarch/../strlen.S:31; 31	../sysdeps/x86_64/multiarch/../strlen.S: No such file or directory.; 	in ../sysdeps/x86_64/multiarch/../strlen.S; (gdb) bt; #0 __strlen_sse2 () at ../sysdeps/x86_64/multiarch/../strlen.S:31; #1 0x00007ffff6cfa5cc in std::string::operator+=(char const*) () from /usr/lib/libstdc++.so.6; #2 0x00007fffed87e180 in OpenBabel::GaussianOutputFormat::ReadMolecule (this=0x7fffeda97610, pOb=0x62f040, pConv=0x7fffffffd5a0); at /home/cjh/local/src/openbabel/src/formats/gaussformat.cpp:324; #3 0x00007ffff770ec3c in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffd5a0, pFormat=0x7fffeda97610); at /home/cjh/local/src/openbabel/src/obmolecformat.cpp:105; #4 0x00007ffff6389d97 in OpenBabel::OBMoleculeFormat::ReadChemObject (this=0x7fffeda97610, pConv=0x7fffffffd5a0); at /home/cjh/local/src/openbabel/include/openbabel/obmolecformat.h:114; #5 0x00007ffff76970af in OpenBabel::OBConversion::Convert (this=0x7fffffffd5a0) at /home/cjh/local/src/openbabel/src/obconversion.cpp:485; #6 0x00007ffff7696d99 in OpenBabel::OBConversion::Convert (this=0x7fffffffd5a0, is=0x7fffffffcdf0, os=0x0) at /home/cjh/local/src/openbabel/src/obconversion.cpp:418; #7 0x00007ffff769af11 in OpenBabel::OBConversion::FullConvert (this=0x7fffffffd5a0, FileList=..., OutputFileName=..., OutputFileList=...); at /home/cjh/local/src/openbabel/src/obconversion.cpp:1378; #8 0x000000000040573e in main (argc=4, argv=0x7fffffffd8f8) at /home/cjh/local/src/openbabel/tools/babel.cpp:347. This problem seems specific to the Gaussian file parser; for example, this works fine. $ babel -igamin emptyfile -oreport; 0 molecules converted; 2 audit log messages . This problem occurs as of r4430 on ubuntu-10.04 x86_64. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1098:2034,audit,audit,2034,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1098,1,['audit'],['audit']
Security,cannot access addFragment() function,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2536:7,access,access,7,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2536,1,['access'],['access']
Security,"cccc2CN1; C[C@H]1Cc2ccccc2CN1; FC[C@H]1Cc2ccccc2CN1; N[C@@H]1CCSC1=O; N[C@H]1CCSC1=O; OC(=O)C[C@@H]1CCNC1; OC(=O)C[C@H]1CCNC1; OC[C@H]1Cc2ccccc2CN1. Failed InChI:; C\C=N/OC[C@H]1CCCN1C; CN(C)CC#C[C@H]1CCCN1; CN1CCC[C@H]1c2cccnc2; CP(O)(=O)C[C@H](O)CN; FC[C@@H]1CCCN1; N[C@H]1CCn2cccc2C1; NC[C@@H]1CC(=O)NO1; NC[C@H]1CC(=O)NO1; NC[C@H]1COc2ccccc2O1; OC(=O)[C@@H]1CCCN1. Failed SMILES:; CC(C)[C@H](N)C(O)=O; CC[C@H](O)C([O-])=O; CO[C@@H](CN)c1ccccc1; CO[C@H](CN)c1ccccc1; N[C@@H](CO)C(O)=O; N[C@H](CO)C(O)=O; NCCC[C@H](N)C(O)=O; NCCSC[C@H](N)C(O)=O. Command being used: babel ---errorlevel 2 -ocan -ismi <string>; (or -oinchi for inchi output). Open Babel 2.1.1 -- Sep 28 2007 -- 18:13:29; Altix Itanium; Intel(R) C++ Itanium(R) Compiler for Itanium(R)-based applications; Version 8.0 Build 20031017 Package ID: l_cc_p_8.0.056; Copyright (C) 1985-2003 Intel Corporation. All rights reserved. To be honest, I don't have many independent mechanisms to verify that OpenBabel is the point of failure in all cases; I can't read the SMILES 'by eye', and I don't have access to other internal tools to test the chirality. I detect 'disruption' when the OpenBabel generated key (either 'can' or 'inchi' format) differs depending on if I use the molfile or SMILES string supplied by the vendor; it's possible that the vendor has not done the molfile-to-SMILES mapping properly, and that the chirality differs within the vendor DB. So I am passing judgment on the molecules based on graphical visualization provided by PubChem:. http://pubchem.ncbi.nlm.nih.gov/edit/. ... and whenever I've spot-checked a disruption by this (unwieldy) mechanism, the chirality of the vendor-supplied SMILES matches that of the key generated by OB via the vendor-supplied molfile, but not the OB key made from the vendor-supplied SMILES (I can't be sure that there is not a bug within the PubChem tool, though). In a few cases, converting to InChI seems to demonstrate indisputable lost of stereochemical information. The following",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/683:2037,access,access,2037,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683,1,['access'],['access']
Security,"clang-9 found this issue:. ```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-1/src/fingerprints/finger3.cpp:258:34: warning: unsequenced modification and access to 'div' [-Wunsequenced]; ngrp = (num + div -1)/div--; //rounds up; ~~~ ^; 1 warning generated.; ```. The first use of ""div"" is ambiguous according to the C++ standard: it would use either ""div"" or ""div-1"", depending on the optimization level or code surroundings.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2215:167,access,access,167,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2215,1,['access'],['access']
Security,"conda); Operating system and version: Mac OS 10.12.5 (Sierra); Python version: 3.6.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect pybel library calls to either return or throw a catchable exception. ## Steps to Reproduce and Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I have a python function that reads in a bunch of xyz files into pybel Molecule objects. Later on I iterate over all of the Molecule objects and read variables from some of the pybel Atom objects within each Molecule (to generate features for machine learning). While trying to access the Atom objects and variables within them a segmentation fault occurs that kills the python interpreter (it terminates with exit code 139). I can also kill the python interpreter with a segfault while my code is paused in the debugger (which I access through Eclipse / PyDev) by navigating into and trying to inspect pybel Atoms' variables. The segfault does not always occur when accessing the first Atom and does not consistently happen on the same Atom when running the exact same code multiple times in succession but it does usually happen within the first 5-10 Atoms. ## Notes. Sorry I understand this is probably difficult to debug because of its inconsistency and lack of a small reproducible example but I've already spent a lot of time trying to understand what was going on so hopefully I can give enough information to still be helpful. My current workaround which appears to be working is to have a wrapper python atom class around the pybel atom class with variables to keep a copy of all the data that I use from the pybel atom. I initialize those variables in my wrapper's constructor right after the pybel Atom and OBAtom are constructed before their data becomes corrupted. My speculation would be that somewhere in the (p",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602:1750,access,access,1750,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602,1,['access'],['access']
Security,curl: (60) SSL certificate problem: certificate has expired,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2628:15,certificate,certificate,15,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2628,2,['certificate'],['certificate']
Security,"e, if converted to a SMILES string, appears to have a saturated 6 membered ring, whereas it actually contains a phenyl ring. To be specific, the problem is that the benzene ring in the ACB_PCA-0004 molecule is not perceived correctly. NewPerceiveKekuleBonds doesn't seem to be doing its job. Actually, I'm not sure why this function is being called...according to the API, this function ""has been specifically designed to handle molecule files without explicit hydrogens"". This molecule does have explicit hydrogens... If you turn on the error messages you will see... ============================START. babel -iMOL2 ACB_PCA-0004.mol2 -oMOL2 tmp.mol2 ---errorlevel 4; ==============================; *** Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; OpenBabel::Read molecule Sybyl Mol2 format; ==============================; *** Open Babel Audit Log in OpenBabel::OBMol::Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in OpenBabel::OBMol::Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in OpenBabel::OBMol::FindRingAtomsAndBonds; Ran OpenBabel::FindRingAtomsAndBonds; ==============================; *** Open Babel Information in OpenBabel::OBMol::NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule ACB_PCA-0004. ==============================; *** Open Babel Information in OpenBabel::OBMol::NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule ACB_PCA-0004; Kekulize: Cannot get an even number of electron for molecule ACB_PCA-0004. ==============================; *** Open Babel Audit Log in OpenBabel::OBMoleculeFormat::WriteChemObjectImpl; OpenBabel::Write molecule Sybyl Mol2 format; ==============================; *** Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignTypes; Ran OpenBabel::AssignTypes; ==============================; *** Open Babel Audit Log in OpenBabel::OBAromaticTyper::AssignAromaticFlags; Ran OpenBabel:",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/671:780,Audit,Audit,780,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/671,4,['Audit'],['Audit']
Security,est_phmodel_1; --; 203: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 203: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 204; Start 204: test_residue_1; --; 204: ../src/residue.cpp:853:13: runtime error: member call on address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/residue.cpp:853:13 in ; 204: ../include/openbabel/atom.h:160:45: runtime error: member access within address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../include/openbabel/atom.h:160:45 in ; --; test 211; Start 211: inchiSamples.sdf_Test; --; 211: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 211: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; --; 211: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:19658,access,access,19658,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['access'],['access']
Security,"few bugs. This pull request aims to fix some of them:. **Issue 1:** Density calculations overestimate real value. To replicate, use [CoMOF74](https://gist.github.com/patrickfuller/6419438):. ``` python; import pybel; with open(""CoMOF74.cif"") as in_file:; mof = in_file.read(); mol = pybel.readstring(""cif"", mof); mol.unitcell.FillUnitCell(mol.OBMol); # Density in g/cm^3. Should be ~1.2; print sum(atom.atomicmass for atom in mol.atoms) / (mol.unitcell.GetCellVolume() * 0.6022); ```. The problem here is that the duplicate-atom checking in `OBUnitCell::FillUnitCell` assumes the input atoms are already unique. If this isn't the case, the method compounds the error. Fixed by checking the input atoms before expanding the unit cell in `FillUnitCell` (maybe this kind of check belongs somewhere else?). **Issue 2:** `OBUnitCell::FillUnitCell` hangs on large unit cells. This is due to the algorithm used in atom checking. It checks atom-atom distances, which is O(N^2). The new approach uses a hash, which should be amortized O(N). It uses the extra speed to check _every_ atom for uniqueness, rather than just symmetry unique ones. Note that a better approach would use an octree, but the hash was easier to implement and proves the point. **Issue 3:** `OBUnitCell::FillUnitCell` doesn't check all possible duplicates. To replicate, use [FeMOF74](https://gist.github.com/patrickfuller/6419438) and the above script. The underlying issue is that `FillUnitCell` assumes that the listed symmetry operations are logical. However, CIFs are a mess. In the case of the example cif, the file already has more than one unitcell worth of atoms, and additionally has defined symmetry operations. This is solved by the solution of Issue 2; by using the extra speed afforded by the hash to check every atom-atom connection, we can check for more duplicates. **Issue 4:** Some crystallographic programs fail if atom coordinates are not in [0, 1]. It's annoying, but an easy fix. I just added `WrapFractionalCoordi",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23:1100,hash,hash,1100,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23,1,['hash'],['hash']
Security,"generate features for machine learning). While trying to access the Atom objects and variables within them a segmentation fault occurs that kills the python interpreter (it terminates with exit code 139). I can also kill the python interpreter with a segfault while my code is paused in the debugger (which I access through Eclipse / PyDev) by navigating into and trying to inspect pybel Atoms' variables. The segfault does not always occur when accessing the first Atom and does not consistently happen on the same Atom when running the exact same code multiple times in succession but it does usually happen within the first 5-10 Atoms. ## Notes. Sorry I understand this is probably difficult to debug because of its inconsistency and lack of a small reproducible example but I've already spent a lot of time trying to understand what was going on so hopefully I can give enough information to still be helpful. My current workaround which appears to be working is to have a wrapper python atom class around the pybel atom class with variables to keep a copy of all the data that I use from the pybel atom. I initialize those variables in my wrapper's constructor right after the pybel Atom and OBAtom are constructed before their data becomes corrupted. My speculation would be that somewhere in the (pybel Atom -> swig OBAtom wrapper -> C++ OBAtom -> variable) chain memory is being deallocated even though I still have a reference to the pybel Atom. This is because using the debugger I was able to determine that I can access an Atom's variable (e.g. ""valence"") right after I initialize it without a failure and then receive a segmentation fault when trying to access the same variable at the same memory location later in the program. P.S. I'm new so I didn't want to change the wiki without communicating with anyone else but maybe the instructions on bug reporting at http://openbabel.org/wiki/Help should point directly to GitHub instead of pointing to SourceForge which then points to here",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602:2966,access,access,2966,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602,2,['access'],['access']
Security,"h and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be remo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2546:3063,secur,security,3063,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2546,1,['secur'],['security']
Security,"importing pybel and matplotlib.backends.backend_qt4agg crashes with error; ""AccessInit: hash collision: 3 for both 1 and 1"". On windows XP, I have the latest pythonxy with python 2.7.3 and matplotlib 1.1.1; I have installed openbabel gui 2.3.1 and the python bindings version 1.7. pybel/openbabel work as expected from a python CLI. Matplotlib as well, as long as they are not used together. However,. &gt;&gt;&gt; import pybel; &gt;&gt;&gt; import matplotlib.backends.backend_qt4agg; AccessInit: hash collision: 3 for both 1 and 1. ---python crash and forceful exit---. importing matplotlib.backends.backend_qt4agg first produces the same error. Note that I got the same error with python 2.7.2 from an older pythonxy, I then updated my pythonxy to 2.7.3.1 to make sure the error was still present on the latest version. Reported by: mathias_laurin. Original Ticket: [openbabel/bugs/858](https://sourceforge.net/p/openbabel/bugs/858)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1238:76,Access,AccessInit,76,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1238,4,"['Access', 'hash']","['AccessInit', 'hash']"
Security,"losed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1, 2.3.2; Operating system and version: Ubuntu 16.04 Xenial. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When using the following command:; `obabel MMFF94_hypervalent.sdf -O MMFF94_hypervalent.smi --energy --ff MMFF94 --append Energy --log`. to compute the energies of molecules from the [validation suite ](http://www.ccl.net/cca/data/MMFF94/), a few molecules show an energy that doesn't match that provided by the reference suite.; [obabel241_reference_calibration.txt](https://github.com/openbabel/openbabel/files/1727000/obabel241_reference_calibration.txt); [MMFF94_hypervalent.smi.txt](https://github.com/openbabel/openbabel/files/1727003/MMFF94_hypervalent.smi.txt); The following molecule show the largest difference (in both v2.3.2 and v2.4.1):. 1. CUGLOF; 2. FORJIF; 3. GIHZEC; 4. JALSOE; 5. SEGWEG; 6. VIGTUA; 7. SO18A; 8. ERULE_03. The base SDF file was taken from the MMFF94 website and modified to account for the formal charges that weren't explicit in the original mol2 file. Is this a mistake from my part or in my open babel distribution?. Many thanks for developing open babel!. Best Regards. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the differe",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1778:1057,validat,validation,1057,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1778,1,['validat'],['validation']
Security,"nds the error. Fixed by checking the input atoms before expanding the unit cell in `FillUnitCell` (maybe this kind of check belongs somewhere else?). **Issue 2:** `OBUnitCell::FillUnitCell` hangs on large unit cells. This is due to the algorithm used in atom checking. It checks atom-atom distances, which is O(N^2). The new approach uses a hash, which should be amortized O(N). It uses the extra speed to check _every_ atom for uniqueness, rather than just symmetry unique ones. Note that a better approach would use an octree, but the hash was easier to implement and proves the point. **Issue 3:** `OBUnitCell::FillUnitCell` doesn't check all possible duplicates. To replicate, use [FeMOF74](https://gist.github.com/patrickfuller/6419438) and the above script. The underlying issue is that `FillUnitCell` assumes that the listed symmetry operations are logical. However, CIFs are a mess. In the case of the example cif, the file already has more than one unitcell worth of atoms, and additionally has defined symmetry operations. This is solved by the solution of Issue 2; by using the extra speed afforded by the hash to check every atom-atom connection, we can check for more duplicates. **Issue 4:** Some crystallographic programs fail if atom coordinates are not in [0, 1]. It's annoying, but an easy fix. I just added `WrapFractionalCoordinate` to cifformat.cpp. **Issue 5:** Centering can segfault. To replicate, use CoMOF74. ``` python; import pybel; with open(""CoMOF74.cif"") as in_file:; mof = in_file.read(); mol = pybel.readstring(""cif"", mof); mol.unitcell.FillUnitCell(mol.OBMol); # Cycling fixes the issue; # mol = pybel.readstring(""cif"", mol.write(""cif"")); mol.OBMol.Center(); mol.write(""cif""); ```. The `Center()` method operates off of a bunch of private variables. I'm guessing something isn't getting updated when `FillUnitCell` is called, but I couldn't figure out what it was. I'll look into this one again, but I'd appreciate any pointers in the mean time! **EDIT** Fixed this.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23:1876,hash,hash,1876,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23,1,['hash'],['hash']
Security,"nds while using PDB files and to report all the issues at once. The result of this analysis is in the attachment. As previously, I noticed that OpenBabel 2.3.2 generated a correct output for the molecule I was analyzing, then I also decide to use this version in my tests. In all tests, I used the openbabel 2.4.1 library (python) for creating an OBMol molecule and then I printed the smiles for each one of the inputs (listed below). To check for possible errors of valence, charge, etc, I used the tool Chemicalize from Chemaxon (the figures in the attachment were obtained with this tool). First, I extract the ligand from the PDB file (all ligands and ids were informed in the attached file). Four different inputs were used to create the OBMol object:; 1) A .mol file obtained by converting the extracted file using OpenBabel 2.3.2.; 2) A .mol file obtained by converting the extracted file using OpenBabel 2.4.1. ; 3) The .pdb file. Function used: readfile(""pdb"", file); 4) The .pdb file as a string. Function used: readstring(""pdb"", pdb_block). Besides it, for each ligand I also evaluated the impact of creating the molecule without hydrogens and adding hydrogens according to some pH value. In the excel file, you'll find a column with the ligand information, one to indicate if I had used hydrogens and other to inform at which pH the hydrogens were added. Also, four other columns were added (one for each input). The red cells indicate if there is an incorrect aromatic perception. I believe these results can help you guys to detect what are the possible causes for these errors. I have not uploaded the molecule files because it would be too many files and all of them can be accessed through the PDB site. . If anything is not clear enough please just let me know and I could help you to reproduce the errors. Excel file: ; [Analysis_of_the_best_input_Send_to_OpenBabel.xls.zip](https://github.com/openbabel/openbabel/files/2789808/Analysis_of_the_best_input_Send_to_OpenBabel.xls.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1925:2090,access,accessed,2090,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1925,1,['access'],['accessed']
Security,"ome; location: /var/lib/layman/gnome; sync-type: git; sync-uri: git://github.com/gentoo/gnome.git; masters: gentoo; priority: 50. grub2-themes; location: /var/lib/layman/grub2-themes; sync-type: git; sync-uri: git://github.com/gentoo/grub2-themes-overlay.git; masters: gentoo; priority: 50. mozilla; location: /var/lib/layman/mozilla; sync-type: git; sync-uri: git://anongit.gentoo.org/proj/mozilla.git; masters: gentoo; priority: 50. spring; location: /var/lib/layman/spring-overlay; sync-type: git; sync-uri: git://github.com/springlobby/overlay.git; masters: gentoo; priority: 50. steam-overlay; location: /var/lib/layman/steam-overlay; sync-type: git; sync-uri: git://github.com/anyc/steam-overlay.git; masters: gentoo; priority: 50. ACCEPT_KEYWORDS=""amd64 ~amd64""; ACCEPT_LICENSE=""*""; CBUILD=""x86_64-pc-linux-gnu""; CFLAGS=""-O2 -pipe""; CHOST=""x86_64-pc-linux-gnu""; CONFIG_PROTECT=""/etc /usr/lib64/libreoffice/program/sofficerc /usr/share/config /usr/share/gnupg/qualified.txt""; CONFIG_PROTECT_MASK=""/etc/ca-certificates.conf /etc/dconf /etc/env.d /etc/fonts/fonts.conf /etc/gconf /etc/gentoo-release /etc/revdep-rebuild /etc/sandbox.d /etc/terminfo""; CXXFLAGS=""-O2 -pipe""; DISTDIR=""/usr/portage/distfiles""; FCFLAGS=""-O2 -pipe""; FEATURES=""assume-digests binpkg-logs config-protect-if-modified distlocks ebuild-locks fixlafiles merge-sync news parallel-fetch preserve-libs protect-owned sandbox sfperms strict unknown-features-warn unmerge-logs unmerge-orphans userfetch userpriv usersandbox usersync xattr""; FFLAGS=""-O2 -pipe""; GENTOO_MIRRORS=""http://ftp.swin.edu.au/gentoo""; LANG=""en_AU.UTF-8""; LDFLAGS=""-Wl,-O1 -Wl,--as-needed""; MAKEOPTS=""-j9""; PKGDIR=""/usr/portage/packages""; PORTAGE_CONFIGROOT=""/""; PORTAGE_RSYNC_OPTS=""--recursive --links --safe-links --perms --times --omit-dir-times --compress --force --whole-file --delete --stats --human-readable --timeout=180 --exclude=/distfiles --exclude=/local --exclude=/packages --exclude=/.git""; PORTAGE_TMPDIR=""/var/tmp""; USE=""X a52 aac acl acpi a",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566:9368,certificate,certificates,9368,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566,1,['certificate'],['certificates']
Security,"openbabel provides working functionality to perform substructure searches using SMARTS. This works well on SMILES files. . openbabel xxx.smi -ocan -s a1aaaa1. This SMARTS query retrieves all molecular structures with aromatic 5-membered ring systems from xxx.smi. Further, openbabel provides working functionality to generate fingerprint indexes to speed up substructure searching by candidate preselection. . openbabel xxx.smi -ofs . This generates the index file xxx.fs. Now, the index file can be used to search quickly:. openbabel xxx.fs -ocan -s C1CCCC1. This SMARTS query retrieves all molecular structures containing a cyclopentane moiety correctly. Apparently, this works. But C1CCCC1 does not only denote a valid SMARTS but also a valid SMILES! . Using a SMARTS that does NOT denote a valid SMILES like the first example (""a"" stands for any aromatic atom of N,C,O,S,Se) does not work and produces an error-message:. openbabel xxx.fs -ocan -s a1aaaa1. gives:. ==============================; *** Open Babel Error in ObtainTarget; Filename of pattern molecule in -S option must have an extension; 0 molecules converted; 1 errors 4 audit log messages . src/formats/fastsearchformat.cpp is suspect to me.; The message is produced in line 488 but a few lines before:. txt=p;; stringstream smarts(txt, stringstream::in);		; OBConversion Convsm(&smarts);; if(!Convsm.SetInFormat(""smi"")) return false;; Convsm.Read(&patternMol);. patternMol.Empty() is true for real SMARTS and false for SMILES. Reported by: vitalingo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/819:1138,audit,audit,1138,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/819,1,['audit'],['audit']
Security,openbabel-2.3.2/src/fingerprint.cpp:161:48: warning: unsequenced modification and access to 'ppat' [-Wunsequenced]. Source code is. if ( (a=((*ppat) & (*p++)) ^ (*ppat++)) ) break;. Suggest code rework. Reported by: dcb314. Original Ticket: [openbabel/bugs/919](https://sourceforge.net/p/openbabel/bugs/919),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1299:82,access,access,82,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1299,1,['access'],['access']
Security,"r bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. <!-- - [ ] I believe this to be a bug with Open Babel -->; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 -- Jun 10 2021 -- 04:27:50; Operating system and version: Debian GNU/Linux 11 (bullseye). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Jensen [lists here](https://molecularmodelingbasics.blogspot.com/2016/05/automating-calculations-pka-predictions.html) a few test structures encoded as SMILES which are to be converted by OpenBabel into `.xyz` with 3D information. Cyclic structures should pass smoothly the conversion (yet occasionally they do not and issue warnings). Is there an other way to ""sanitize"" SMILES than passing them to RDKit (*vide infra*), perhaps in OpenBabel itself?. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The conversion of; * `C[C@H]1CC[N@@]2CCC[C@@H]12`; * `C[C@H]1[C@@H]2[C@@H](C(N(C)C2=O)=O)C3[N@]1CCC3`; * `C[C@H]1[C@@H]2[C@@H](C(N(C)C2=O)=O)C3[N@H+]1CCC3`. in line of; ```; obabel -:""C[C@H]1[C@@H]2[C@@H](C(N(C)C2=O)=O)C3[N@H+]1CCC3"" --gen3D -h -oxyz; ```; yield warnings like; ```; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 2 stereocenter(s) in this molecule (); with Atom Ids as follows: 2 3; Warning: Stereochemistry is wrong, using the distance geometry method instead; ```; while e.g.,; ```; obabel -:""C[C@H]1[C@@H]2[C@@H](C(N(C)C2=O)=O)C3[N@@H+]1CCC3"" --gen3D -h -oxyz -O output.xyz; ```; does not. *However*. I noticed `C[C@H]1CC[N@@]2CCC[C@@H]12` is described with nitrogen as a stereocentre. Thus, when submitted",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2393:1274,sanitiz,sanitize,1274,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2393,1,['sanitiz'],['sanitize']
Security,refactor: use `std::unordered_map` for hash map,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2500:39,hash,hash,39,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2500,1,['hash'],['hash']
Security,"s of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2546:3636,secur,security,3636,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2546,1,['secur'],['security']
Security,"see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Gentoo Linux, 5.6.15-gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Failed 0/8 test programs. 0/34 subtests failed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Can't call method ""GetMass"" on an undefined value at t/data.t line 21.; t/data.t ........... Dubious, test returned 255 (wstat 65280, 0xff00) ; Failed 1/2 subtests . t/data.t (Wstat: 65280 Tests: 1 Failed: 0); Non-zero exit status: 255; Parse errors: Bad plan. You planned 2 tests but ran 1.; Files=8, Tests=34, 0 wallclock secs ( 0.03 usr 0.01 sys + 0.39 cusr 0.06 csys = 0.49 CPU); Result: FAIL; Failed 1/8 test programs. 0/34 subtests failed. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; swig -perl5 -c++ -small -O -templatereduce -naturalvar -I/usr/include/openbabel3 -o scrips/perl/openbabel-perl.cpp -outdir scrips/perl scripts/openbabel-perl.i; cd scrips/perl; perl Makefile.PL PREFIX=/usr INSTALLDIRS=vendor INSTALLMAN3DIR=none DESTDIR=/var/tmp/portage/sci-chemistry/openbabel-perl-3.1.1/image INC=-I/usr/include/openbabel3; make -j17 -l4 'OTHERLDFLAGS=-Wl,-O1 -Wl,--as-needed -Wl,--hash-style=gnu; make -j17 -l4 test; ```. The offending line in `scrips/perl/t/data.t` is:; ```; my $mass = $Chemistry::OpenBabel::etab->GetMass(2);; ```; I don't know much about perl but it likely pertains to the shift from the use of `etab` to the use of `OBElements`.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2247:2253,hash,hash-style,2253,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247,1,['hash'],['hash-style']
Security,segfault when accessing Atom attributes through pybel,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602:14,access,accessing,14,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602,1,['access'],['accessing']
Security,"setting OB_HASH_BOND flag has no effect in the resulting molecular file (SMILES or SDF).; .....; if (bond[i].hash); mol.AddBond(atom[bond[i].a].n,atom[bond[i].b].n,bond[i].type,OB_HASH_BOND);; else; mol.AddBond(atom[bond[i].a].n,atom[bond[i].b].n,bond[i].type);; ....; conv.WriteFile(&mol,""out.sdf"");; ..... Expected result: stereochemistry reflected in the sd output. Igor Filippov; igorf@helix.nih.gov. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650:109,hash,hash,109,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650,1,['hash'],['hash']
Security,"sted it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-s",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2546:2218,Secur,Security,2218,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2546,1,['Secur'],['Security']
Security,"t you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-b",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2546:1547,secur,security,1547,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2546,1,['secur'],['security']
Security,"there is a problem with indicating Z/E isomers in SMILES generated from mol2 files. Eg. for 1,2-dichloroethane. For structures saved in mol files, smiles (smi or can) are generated correctly:; >babel Z.mol -o can; Cl/C=C\Cl Z; 1 molecule converted; 32 audit log messages. >babel E.mol -o can; Cl/C=C/Cl E; 1 molecule converted; 32 audit log messages. while for files saved in mol2 format, we dont get the E/Z isomerism:. >babel Z.mol2 -o can; ClC=CCl Z; 1 molecule converted; 32 audit log messages. >babel E.mol2 -o can; ClC=CCl E; 1 molecule converted; 32 audit log messages. Converting mol2 back to mol fixes the problem. greetings,; F. Reported by: filipspl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1049:252,audit,audit,252,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1049,4,['audit'],['audit']
Security,"turn or throw a catchable exception. ## Steps to Reproduce and Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I have a python function that reads in a bunch of xyz files into pybel Molecule objects. Later on I iterate over all of the Molecule objects and read variables from some of the pybel Atom objects within each Molecule (to generate features for machine learning). While trying to access the Atom objects and variables within them a segmentation fault occurs that kills the python interpreter (it terminates with exit code 139). I can also kill the python interpreter with a segfault while my code is paused in the debugger (which I access through Eclipse / PyDev) by navigating into and trying to inspect pybel Atoms' variables. The segfault does not always occur when accessing the first Atom and does not consistently happen on the same Atom when running the exact same code multiple times in succession but it does usually happen within the first 5-10 Atoms. ## Notes. Sorry I understand this is probably difficult to debug because of its inconsistency and lack of a small reproducible example but I've already spent a lot of time trying to understand what was going on so hopefully I can give enough information to still be helpful. My current workaround which appears to be working is to have a wrapper python atom class around the pybel atom class with variables to keep a copy of all the data that I use from the pybel atom. I initialize those variables in my wrapper's constructor right after the pybel Atom and OBAtom are constructed before their data becomes corrupted. My speculation would be that somewhere in the (pybel Atom -> swig OBAtom wrapper -> C++ OBAtom -> variable) chain memory is being deallocated even though I still have a reference to the pybel Atom. This is because using the debugger I was able to determine that I c",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602:1887,access,accessing,1887,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602,1,['access'],['accessing']
Security,"ub.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Windows 10 pro. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I am using the NET bindings in my project. I used to use OBBuild class to generate 3d coordinates in mol file (2.4.1 version), which worked prefectly fine in my case. ## Actual Behavior; However, when I upgrade to openbabel-3.0.0, the same code give me an ""System.AccessViolationException"" as below: ; System.AccessViolationException:“Attempted to read or write protected memory. This is often an indication that other memory is corrupt.”. ## Steps to Reproduce; My code was like this, which worked perfectly fine under version 2.4.1. ```; public static string Generate3D(string molString); {; OBConversion conversion = new OBConversion();; OBMol mol = new OBMol();; conversion.SetInFormat(""smi"");; conversion.SetOutFormat(""mol"");; conversion.ReadString(mol, molString);; OBBuilder builder = new OBBuilder();; builder.Build(mol); // Here is where the Exception happen. return conversion.WriteString(mol);; }; ```; Whenever this method is called, the error happens. By the way, I did try to use some code like this to replace the OBBuilder.; ```; OBOp gen3d = OBOp.FindType(""Gen3D""); gen3d.Do(mol); ```; However, this nerver worked for me in both 2.4.1 and 3.0.0 version. The operation just took forever to complete and freeze without any exception information everytime.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2080:1124,Access,AccessViolationException,1124,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2080,2,['Access'],['AccessViolationException']
Security,"ull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deploy",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2546:2326,secur,security,2326,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2546,1,['secur'],['security']
Testability," -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: v2.3.1; Operating system and version: MacOS Mojave v10.14.6. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When I convert the following xyz file into sdf file with openbabel on Jupyter notebook, the output sdf sees the molecule as a radical instead of the expected structure. **xyz file**; ```; 13. N -0.0622 -0.1867 -0.0074 ; N -3.3957 -0.5192 0.0030 ; C -1.1333 0.8052 -0.0003 ; C 1.1224 0.3173 0.0007 ; C 2.3297 -0.5309 0.0000 ; C 3.5321 0.0493 0.0030 ; C -2.3930 0.0649 0.0010 ; H -1.0764 1.4443 -0.8888 ; H -1.0713 1.4385 0.8921 ; H 1.2902 1.4096 0.0100 ; H 2.2149 -1.6079 -0.0044 ; H 4.4298 -0.5598 0.0018 ; H 3.6559 1.1268 0.0067; ```. **Python code**. ```; import openbabel. obConversion = openbabel.OBConversion(); obConversion.SetInAndOutFormats(""xyz"", ""sdf""). mol = openbabel.OBMol(); obConversion.ReadFile(mol, ""test.xyz""); outSDF = obConversion.WriteString(mol); print(outSDF); ```. **Expected output**. ```; 549110; -OEChem-11191917383D. 13 12 0 0 0 0 0 0 0999 V2000; -0.0622 -0.1867 -0.0074 N 0 0 0 0 0 0 0 0 0 0 0 0; -3.3957 -0.5192 0.0030 N 0 0 0 0 0 0 0 0 0 0 0 0; -1.1333 0.8052 -0.0003 C 0 0 0 0 0 0 0 0 0 0 0 0; 1.1224 0.3173 0.0007 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.3297 -0.5309 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 3.5321 0.0493 0.0030 C 0 0 0 0 0 0 0 0 0 0 0 0; -2.3930 0.0649 0.0010 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.0764 1.4443 -0.8888 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.0713 1.4385 0.8921 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.2902 1.4096 0.0100 H 0 0 0 0 0 0 0 0 0 0 0 0; 2.2149 -1.6079 -0.0044 H 0 0 0 0 0 0 0 0 0 0 0 0; 4.4298 -0.5598 0.0018 H 0 0 0 0 0 0 0 0 0 0 0 0; 3.6559 1.1268 0.0067 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 3 1 0 0 0 0; 1 4 2 0 0 0 0; 2 7 3 0 0 0 0; 3 7 1 0 0 0 0; 3 8 1 0 0 0 0; 3 9 1 0 0 0 0; 4 5 1 0 0 0 0; 4 10 1 0 0 0 0; 5 6 2 0 0 0 0; 5 11 1 0 0 0 0; 6 12 1 0 0 0 0; 6 13 1 0 0 0 0; M END; ```; wh",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2090:1585,test,test,1585,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2090,1,['test'],['test']
Testability," --title <title> Add or replace molecule title; --addtotitle <text> Append to title; --addformula Append formula to title. However the wiki page gives further details (eg -a) and in alphabetical order, would it be worth updating?. -a options; Format-specific input options. See -H format-ID for options allowed by a particular format; --addtotitle; Append text after the current molecule title; --addformula; Append the molecular formula after the current molecule title; -b; Convert dative bonds (e.g., [N+]([O-])=O to N(=O)=O; -c; Center atomic coordinates at (0,0,0); -C; Combine molecules in first file with others having the same name; -d; Delete Hydrogens; -e; Continue to convert molecules after errors; ---errorlevel 2; Filter the level of errors and warnings displayed:; 1 = critical errors only; 2 = include warnings too (default); 3 = include informational messages too; 4 = include ""audit log"" messages of changes to data; 5 = include debugging messages too; -f #; For multiple entry input, start import with molecule # as the first entry; -F; Output the available fingerprint types; -h; Add hydrogens; -H; Output usage information; -H format-ID; Output formatting information and options for format specified; -Hall; Output formatting information and options for all formats; -i<format-ID>; Specifies input format, see below for the available formats; -j; --join; Join all input molecules into a single output molecule entry; -k; Translate computational chemistry modeling keywords (e.g., GAMESS and Gaussian); -m; Produce multiple output files, to allow:; Splitting one input file - put each molecule into consecutively numbered output files; Batch conversion - convert each of multiple input files into a specified output format; -l #; For multiple entry input, stop import with molecule # as the last entry; -o format-ID; Specifies output format, see below for the available formats; -p; Add Hydrogens appropriate for pH (use transforms in phmodel.txt); --property; Add or replace a p",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1484:2813,log,log,2813,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1484,1,['log'],['log']
Testability," -> line contents:oop_ ; ============================== ; *** Open Babel Error in CIFReadValue ; Warning: Trying to read a value but found a new CIF tag ! ; ============================== ; *** Open Babel Warning in Parse ; Warning: one line could not be interpreted while reading a CIF file: ; -> line contents:+2 ; ============================== ; *** Open Babel Warning in Parse ; Warning: one line could not be interpreted while reading a CIF file: ; -> line contents:AlT1 +3 ; ============================== ; *** Open Babel Warning in Parse ; Warning: one line could not be interpreted while reading a CIF file: ; -> line contents:AlT2 +3 ; ============================== ; *** Open Babel Warning in Parse ; Warning: one line could not be interpreted while reading a CIF file: ; -> line contents:SiT2 +4 ; ============================== ; *** Open Babel Warning in Parse ; Warning: one line could not be interpreted while reading a CIF file: ; -> line contents:O1 -2 ; ============================== ; *** Open Babel Warning in Parse ; Warning: one line could not be interpreted while reading a CIF file: ; -> line contents:O2 -2 ; ============================== ; *** Open Babel Warning in Parse ; Warning: one line could not be interpreted while reading a CIF file: ; -> line contents:O3 -2 ; ``` . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. To reproduce cifformat bug, just run the command . `obabel Ca2Al2SiO7.cif -O Ca2Al2SiO7.xyz`. To reproduce mmcifformat bug, you need to compile supercell first and run it like this. `supercell -d -i Ca2Al2SiO7.cif -m`. https://github.com/orex/supercell/blob/master/data/examples/Ca2Al2SiO7/Ca2Al2SiO7.cif. . More detailed information about the issue can be found here; https://github.com/orex/supercell/issues/7",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1659:3241,test,test,3241,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1659,1,['test'],['test']
Testability, 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 1 10 2 0 0 0; 1 2 1 0 0 0; 2 3 2 0 0 0; 3 4 1 0 0 0; 4 9 1 0 0 0; 4 5 2 0 0 0; 5 6 1 0 0 0; 6 7 2 0 0 0; 7 8 1 0 0 0; 8 19 1 0 0 0; 8 9 2 0 0 0; 9 10 1 0 0 0; 10 11 1 0 0 0; 11 20 2 0 0 0; 11 12 1 0 0 0; 12 13 2 0 0 0; 13 14 1 0 0 0; 14 15 2 0 0 0; 15 20 1 0 0 0; 15 16 1 0 0 0; 16 17 2 0 0 0; 17 18 1 0 0 0; 18 19 2 0 0 0; 19 20 1 0 0 0; M END. Messages:. babel 1.smi 1.mol ---errorlevel 4; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule SMILES format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in AssignSpinMultiplicity; Ran OpenBabel::AssignSpinMultiplicity; ==============================; *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in FindRingAtomsAndBonds; Ran OpenBabel::FindRingAtomsAndBonds; ==============================; *** Open Babel Information in NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule. ==============================; *** Open Babel Audit Log in WriteChemObjectImpl; OpenBabel::Write molecule MDL MOL format; 1 molecule converted; 1 info messages 6 audit log messages. Version Open Babel 2.2.0 -- Jul 7 2008 -- 22:06:15 . OS - gentoo GNU/linux. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830:1315,Log,Log,1315,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830,7,"['Log', 'log']","['Log', 'log']"
Testability," Bond lenght (Cl - XCl = 1.95A ; Angle (X - Cl - XCl) = 180 degrees. For Bromine and EP (XBr):; Bond lenght (Br - XBr = 2.22A ; Angle (X - Br - XBr) = 180 degrees. For iodine and EP (XI):; Bond lenght (CI - XI = 12.35A ; Angle (X - CI - XI) = 180 degrees. I have attached a modified element.txt from Open Babel 2.3.2 (running on Ubuntu 14.04 Linux) that includes the properties XCl, XBr and XI. . I tried to modify the mol.cpp, mol.h, openbabel-python.cpp, openbabel.py and pybel.py files (also attached) to include a new function called AddX (same functionality as AddHydrogens for now, just different name). After sucessfully compiling the modified mol.cpp and mol.h files I then used pycharm and a simple pyhton script to see if it worked. I first tried:; import openbabel, pybel; mol = pybel.readfile(""pdb"", ""~/Documents/test/Chlroroquine.pdb"").next(); print len(mol.atoms), mol.molwt; mol.OBMol.AddHydrogens(); print len(mol.atoms), mol.molwt; pybelmol = pybel.Molecule(mol); pybelmol.write(""pdb"", ""~/Documents/test/Chlroroquine_test.pdb"", overwrite=True). With the following output:; 22 319.87214; 48 319.87214. Then I tried the following::; import openbabel, pybel; mol = pybel.readfile(""pdb"", ""/home/xeonbas/Documents/MGLTools_test/test/Chlrooquine.pdb"").next(); print len(mol.atoms), mol.molwt; mol.OBMol.AddX(); print len(mol.atoms), mol.molwt; pybelmol = pybel.Molecule(mol); pybelmol.write(""pdb"", ""/home/xeonbas/Documents/MGLTools_test/test/Chlrooquine_test.pdb"", overwrite=True). With the following output:; Traceback (most recent call last):; 22 319.87214; File ""~/PycharmProjects/untitled3/test.py"", line 4, in <module>; mol.OBMol.AddX(); AttributeError: 'OBMol' object has no attribute 'AddX'. I am not a programmer so my programming skills are virtually non-existent. Any kind of assistance will be greatly appreaciated. . Thank you; Best regards; Andre. Reported by: bas123. Original Ticket: [openbabel/feature-requests/174](https://sourceforge.net/p/openbabel/feature-requests/174)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1542:1608,test,test,1608,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1542,4,['test'],['test']
Testability, Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Buil,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:53788,test,test,53788,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability," C UNL 1 4.666 -0.812 0.925 1.00 0.00 C ; HETATM 5 C UNL 1 5.386 -1.689 1.812 1.00 0.00 C ; HETATM 6 C UNL 1 0.345 0.942 -0.848 1.00 0.00 C ; HETATM 7 H UNL 1 0.550 -0.563 0.674 1.00 0.00 H ; HETATM 8 H UNL 1 3.022 0.694 -0.597 1.00 0.00 H ; HETATM 9 H UNL 1 2.710 -1.441 1.561 1.00 0.00 H ; HETATM 10 H UNL 1 5.182 -0.184 0.290 1.00 0.00 H ; HETATM 11 H UNL 1 6.073 -2.231 2.360 1.00 0.00 H ; HETATM 12 H UNL 1 -0.341 1.484 -1.396 1.00 0.00 H ; CONECT 1 2 6 6 7 ; CONECT 2 1 3 3 8 ; CONECT 3 2 2 4 9 ; CONECT 4 3 5 5 10 ; CONECT 5 4 4 6 11 ; CONECT 6 5 1 1 12 ; CONECT 7 1 ; CONECT 8 2 ; CONECT 9 3 ; CONECT 10 4 ; CONECT 11 5 ; CONECT 12 6 ; MASTER 0 0 0 0 0 0 0 0 12 0 12 0; END; <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2123:2289,test,test,2289,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2123,1,['test'],['test']
Testability," Hat Enterprise Linux Server release 7.2 (Maipo); Release:	7.2; Codename:	Maipo. On both distribution, I installed the recommended packages on the openbabel website (Cairo, Eigen, SWIG, etc...). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I'm trying to obtain the xyz cartesian coordinates for a molecule using the following command:. `obabel -:'C(CS(=O)(=O)O)C[As]CCO' -oxyz --gen3D`. or also:. `obabel -:'[Cl-](CCO)Cl' -oxyz --gen3D`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>; I'm getting either a segmentation fault or a xyz matrix that doesn't seem to make sense. An example of the faulty xyz matrix is shown below:; Segmentation fault. OR. ```; 10. Cl 0.00000 0.00000 0.00000; C 0.00000 0.00000 0.00000; C 0.00000 0.00000 0.00000; O 0.00000 0.00000649287312117657393047806986443088278302852626988880812921024836757525200080858677196085004213270789661630710548391417629778208882688.00000; Cl 0.00000 0.00000 0.00000; H 0.00000 0.00000 0.00000; H 0.00000 0.00000 0.00000; H 67438393914669004032808741091913230354446553902642045508459943150635515907104708336944120215765632178819073994316939571672800821248.000006447925170219654883402226073349776216856797966807962330105572919815896668029776297984.00000 0.00000; H 0.00000 0.00000 0.00000; H -0.00000 0.0000045544753078738184488698682103112836351107744910652563895206573527063273523134970644067921468502526687224977090526353134894444178484259388278495107227085972486288335831653266305581327638186808678002310034240675971481934495744.00000; 1 molecule converted. ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1694:2887,test,test,2887,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1694,1,['test'],['test']
Testability," It gets stuck in the tests in 3 of our supercomputers. ```; Test project /dev/shm/strube1/juwels/OpenBabel/3.1.1/gompi-2022a/easybuild_obj; Start 1: test_align_1; 1/229 Test #1: test_align_1 ..................... Passed 0.05 sec; Start 2: test_align_2; 2/229 Test #2: test_align_2 ..................... Passed 0.06 sec; Start 3: test_align_3; 3/229 Test #3: test_align_3 ..................... Passed 0.05 sec; Start 4: test_align_4; 4/229 Test #4: test_align_4 ..................... Passed 0.68 sec; Start 5: test_align_5; 5/229 Test #5: test_align_5 ..................... Passed 0.16 sec; Start 6: test_alias_1; 6/229 Test #6: test_alias_1 ..................... Passed 0.11 sec; Start 7: test_automorphism_1; 7/229 Test #7: test_automorphism_1 .............. Passed 0.08 sec; Start 8: test_automorphism_2; 8/229 Test #8: test_automorphism_2 .............. Passed 0.08 sec; Start 9: test_automorphism_3; 9/229 Test #9: test_automorphism_3 .............. Passed 0.08 sec; Start 10: test_automorphism_4; 10/229 Test #10: test_automorphism_4 .............. Passed 0.08 sec; Start 11: test_automorphism_5; 11/229 Test #11: test_automorphism_5 .............. Passed 0.10 sec; Start 12: test_automorphism_6; 12/229 Test #12: test_automorphism_6 .............. Passed 0.08 sec; Start 13: test_automorphism_7; 13/229 Test #13: test_automorphism_7 .............. Passed 0.08 sec; Start 14: test_automorphism_8; 14/229 Test #14: test_automorphism_8 .............. Passed 0.08 sec; Start 15: test_automorphism_9; 15/229 Test #15: test_automorphism_9 .............. Passed 0.10 sec; Start 16: test_automorphism_10; 16/229 Tes; ```. And it stays there forever. ## Steps to Reproduce; Install it with EasyBuild, with GCC 11.3.0 and OpenMPI 4.1.4. The other dependencies used are:. ```; >> * CMake/3.23.1; >> * SWIG/.4.0.2; >> * Python/3.10.4; >> * zlib/.1.2.12; >> * libxml2/.2.9.13; >> * Eigen/3.4.0; >> * RapidJSON/1.1.0; >> * cairo/.1.17.4; >> * Boost/1.79.0; >> * maeparser/1.3.0; >> * CoordgenLibs/3.0.1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2557:1181,Test,Test,1181,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2557,6,['Test'],['Test']
Testability," MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:17397,test,test,17397,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['test'],['test']
Testability," NOT find Boost; -- Could NOT find Boost; -- Maestro formats will NOT be supported. Please install Boost to enable Maestro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -- Could NOT find Boost; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR); -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) (Required is at least version ""2.0""); -- SWIG 2.0 NOT found; -- Configuring done; -- Generating done; -- Build files have been written to: /home/kk/build. **make test**; 97% tests passed, 6 tests failed out of 227. Total Test time (real) = 64.56 sec. The following tests FAILED:; 221 - pybindtest_bindings (Failed); 222 - pybindtest__pybel (Failed); 223 - pybindtest_example (Failed); 224 - pybindtest_obconv_writers (Failed); 225 - pybindtest_cdjsonformat (Failed); 226 - pybindtest_pcjsonformat (Failed); Errors while running CTest; Makefile:72: recipe for target 'test' failed; make: *** [test] Error 8. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. 1. download the sourse code(openbabel-openbabel-3-1-1.tar.gz); 2. sudo apt install libboost-dev; 3. sudo apt install gcc g++ make cmake; 4. sudo apt install libxml2-dev zlib1g-dev libcairo2-dev libeigen3-dev libopenbabel-dev; 5. sudo apt install python3-dev; 6. tar -xzvf openbabel-openbabel-3-1-1.tar.gz; 7. mkdir build; 8. cd build; 9. cm",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2234:2500,Test,Test,2500,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234,1,['Test'],['Test']
Testability," Operating system and version: Ubuntu 18.04. ## Expected Behavior; When calling OBMol.AddHydrogens(), it is expected to generate coordinates for the added hydrogens. The coordinates are generated based on the typical bond lengths and angles of the atoms involved. ## Actual Behavior; There is a check for whether the molecule HasNonZeroCoords() beforehand. If all the present coordinates are zero, then the hydrogen coordinates are left as zero also. This seems reasonable for most molecules, where it may be assumed that if the coordinates are all zero, then they will be set to something else later, so there is no use in generating coordinates for the hydrogens. But it leads to odd behavior if the molecule has a single heavy atom, such as water, ammonia, methane, etc. With these molecules, coordinates are generated for the hydrogens so long as the heavy atom coordinate is not located at the origin. For context, this came up when I was using simple test cases to create a bond adding routine that constructs valid molecules from sets of disconnected atoms produced by a generative model. While the issue was resolved by simply changing the coordinates of the test case molecules, the behavior seemed odd enough (and the proposed solution simple enough) that I would open an issue. ## Steps to Reproduce. ```; from openbabel import openbabel as ob. def test_case(atomic_num, x, y, z):; mol = ob.OBMol(); atom = mol.NewAtom(); atom.SetAtomicNum(atomic_num); atom.SetVector(x, y, z); mol.BeginModify(); ob.OBAtomAssignTypicalImplicitHydrogens(atom); mol.EndModify(); mol.AddHydrogens(); print('with {} at ({:.2f}, {:.2f}, {:.2f}),'.format(; ob.GetSymbol(atomic_num), x, y, z; )); for a in ob.OBMolAtomIter(mol):; if a != atom:; print(' H placed at ({:.2f}, {:.2f}, {:.2f})'.format(; a.GetX(), a.GetY(), a.GetZ(); )). test_case(8, 0, 0, 0); test_case(8, 1, 0, 0); ```; Output:; ```; mtr22@g001:~/gan$ python3 test_ob_problem.py; with O at (0.00, 0.00, 0.00),; H placed at (0.00, 0.00, 0.00); H pla",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2365:1691,test,test,1691,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2365,1,['test'],['test']
Testability," Operating system and version: Ubuntu 20.10. ## Expected Behavior. Be able to read a CIF generated by VESTA. ## Actual Behavior. Getting this error message in the console:. ```; ==============================; *** Open Babel Error in Find; Unknown space group error (H-M symbol:P 1), cannot match the list of transforms, please file a bug report.; ==============================; *** Open Babel Warning in Do; Converting to P 1 cell using available symmetry transformations.; ```. ## Steps to Reproduce. I am trying to read the CIF file with this simple program `read.cpp`:. ```cpp; #include<openbabel/atom.h>; #include<openbabel/mol.h> // OpenBabel::OBMol; #include<openbabel/generic.h> // OpenBabel::OBUnitCell; #include<openbabel/obconversion.h>. int main(int argc, char** argv){. 	OpenBabel::OBMol mol;; 	{; 		OpenBabel::OBConversion obconv; obconv.SetInFormat(""cif"");; 		obconv.ReadFile(&mol, ""VO2-Tetragonal-ICSD_CollCode647613_double_c_triclinic.cif""); ; 		std::cout<< mol.NumAtoms() << std::endl;; 		assert( mol.NumAtoms() == 12 );; 	}; }; ```. This is the complete CIF file `VO2-Tetragonal-ICSD_CollCode647613_double_c_triclinic.cif`. ```; #======================================================================; # CRYSTAL DATA; #----------------------------------------------------------------------; data_VESTA_phase_1. _chemical_name_common 'Vanadium dioxide - HT'; _cell_length_a 4.553490; _cell_length_b 4.553490; _cell_length_c 5.698880; _cell_angle_alpha 90.000000; _cell_angle_beta 90.000000; _cell_angle_gamma 90.000000; _cell_volume 118.162136; _space_group_name_H-M_alt 'P 1'; _space_group_IT_number 1. loop_; _space_group_symop_operation_xyz; 'x, y, z'; 'x, y, z+1/2'. loop_; _atom_site_label; _atom_site_occupancy; _atom_site_fract_x; _atom_site_fract_y; _atom_site_fract_z; _atom_site_adp_type; _atom_site_B_iso_or_equiv; _atom_site_type_symbol; V2 1.0 0.000000 0.000000 0.000000 Biso ? V; V2 1.0 0.500000 0.500000 0.250000 Biso ? V; V2 1.0 0.000000 0.000000 0.500000 Biso ? V;",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2414:1159,assert,assert,1159,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414,1,['assert'],['assert']
Testability," V30 END BOND; ```. 1) One observation is on .sdf (v3000) written by openbabel -- though these can not be processed by the InChI reference executable (version 1.07.1, 64bit, Linux variant), openbabel itself is capable to assign an InChI. For instance. ```shell; $ obabel -:""[He]"" -O obabel_Helium.sdf -x3; ==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; 1 molecule converted; $ cat obabel_Helium.sdf. OpenBabel09192411482D. 0 0 0 0 0 999 V3000; M V30 BEGIN CTAB; M V30 COUNTS 1 0 0 0 0; M V30 BEGIN ATOM; M V30 1 He 0 0 0 0; M V30 END ATOM; M V30 BEGIN BOND; M V30 END BOND; M V30 END CTAB; M END; $$$$; $ ; $ ./inchi-1 ./obabel_Helium.sdf; InChI version 1, Software v. 1.07 (inchi-1 executable) ; Linux 64-bit Build (gcc 11.4.0) of Aug 10 2024 18:58:34. Opened log file './obabel_Helium.sdf.log'; Opened input file './obabel_Helium.sdf'; Opened output file './obabel_Helium.sdf.txt'; Opened problem file './obabel_Helium.sdf.prb'; The command line used:; ""./inchi-1 ./obabel_Helium.sdf""; Generating standard InChI; Input format: MOLfile; Output format: Plain text; Full Aux. info; Timeout per structure: 60000 msec; Up to 1024 atoms per structure. Error 71 (no InChI; Error: No V3000 CTAB end marker) inp structure #1.; End of file detected after structure #1. ; Finished processing 1 structure: 1 error, processing time 0:00:00.00; $ cat obabel_Helium.sdf.txt ; * Input_File: ""./obabel_Helium.sdf""; $ ; $ obabel obabel_Helium.sdf -oinchi; InChI=1S/He; 1 molecule converted; $ ; ```. 2) On the other hand, [Marvin](https://marvinjs-demo.chemaxon.com/latest/) describes the same structure without the empty atom block:. ```. Mrv2311 09192409232D . 0 0 0 0 0 999 V3000; M V30 BEGIN CTAB; M V30 COUNTS 1 0 0 0 0; M V30 BEGIN ATOM; M V30 1 He -0.875 1.6667 0 0; M V30 END ATOM; M V30 END CTAB; M END; ```. Bo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2725:1420,log,log,1420,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2725,1,['log'],['log']
Testability, [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] B,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:53933,test,test,53933,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability, [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/math.o; [ 97%] Building CXX ob,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:54085,test,test,54085,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability, [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:54012,test,test,54012,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability," and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. I am looking to update a molecule with new internal coordinates, but am running into difficulty with the `InternalToCartesian` function when using the Python interface to OpenBabel. It gives me an error about Type mismatch:. ```; TypeError Traceback (most recent call last); <ipython-input-36-435f8694755f> in <module>; 6 ics = mol.OBMol.GetInternalCoord(); 7 mol.OBMol.SetInternalCoord(ics); ----> 8 InternalToCartesian(ics, mol). TypeError: in method 'InternalToCartesian', argument 1 of type 'std::vector< OpenBabel::OBInternalCoord *,std::allocator< OpenBabel::OBInternalCoord * > > &'; ```. Any thoughts on how to correct or get around this error?. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows Subsystem for Linux (Ubuntu 20.04). ## Expected Behavior; Works the same way as from the C++ interface. Molecule's internal coordinates changed based on new input structure. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. `TypeError` shown above. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```python; from openbabel import pybel, InternalToCartesian. mol = pybel.readstring(""smi"", ""CCCC""); mol.make3D(). ics = mol.OBMol.GetInternalCoord(); mol.OBMol.SetInternalCoord(ics); InternalToCartesian(ics, mol.OBMol); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2329:1991,test,test,1991,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2329,1,['test'],['test']
Testability," be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1 + commit 7de27f309db5f7ec026ef5c5235e5b33bf7d1a85; Operating system and version:; Ubuntu 20.10 development release. ## Expected Behavior; Test succeed on arm64 and ppc64el. ## Actual Behavior; ```; Running test/testobconv_writers.py ...; ..........................................................................................F..................................................; ======================================================================; FAIL: test_default (__main__.TestPCJSON); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""test/testobconv_writers.py"", line 2761, in test_default; self.assertWriters(self.fmt, """"""\; File ""test/testobconv_writers.py"", line 258, in assertWriters; test_write_string(self, mol, conv, expected_output, normalize); File ""test/testobconv_writers.py"", line 165, in test_write_string; test_case.assertMultiLineEqual(output.replace(""\r\n"", ""\n""), expected_output.replace(""\r\n"", ""\n"")); AssertionError: '{\n [1926 chars]102014\n ],\n ""y"": [[1070 chars]]\n}' != '{\n [1926 chars]102012\n ],\n ""y"": [[1070 chars]]\n}'; {; ""PC_Compounds"": [; {; ""atoms"": {; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""element"": [; 6,; 6,; 6,; 6,; 6,; 6,; 8,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""bonds"": {; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5,; 6,; 1,; 2,; 3,; 4,; 5,; 7; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""order"": [; 2,; 1,; 2,; 1,; 2,; 1,; 1,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""coords"": [; {; ""type"": [; 1; ],; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""conformers"": [; {; ""x"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""y"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2246:1009,assert,assertMultiLineEqual,1009,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246,1,['assert'],['assertMultiLineEqual']
Testability," can convert `[ ]` into `[x]` to check boxes.; -->. - [ x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Ubuntu 19.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Importing openbabel and tensorflow (version 1.13.0) in the same script causes import issues, due to the protobuf library. Tensorflow (1.13.0) depends on protobuf library 3.7.1. Obabel looks for 3.6.1, and does not work with 3.7.1. Thus, to simultaneously use obabel and tensorflow, the tensorflow version must be downgraded to 1.12.0. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>; The use of the protobuf library causes import issues that make things order dependent. For example, if I import openbabel, and then tensorflow (1.13.0) then the tensorflow instance does not work. If I import tensorflow, then openbabel, and then tensorflow again, then things work. I think the easiest fix would be if obabel could be flexible to be upgraded to work with protobuf version 3.7.1. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Conda installed openbabel and tensorflow (on ubuntu). Just used a python script where I tried ""import openbabel"" and ""import tensorflow as tf,"" in various orders (i.e. openbabel first, then tf, tf first, then openbabel, etc.). The issue of the protobuf library comes up when the import is done in certain orders. Downgrading tf to 1.12.0 solves the issue, but just wanted to note this here in case upgrading dependency of the protobuf library to 3.7.1 is an easy fix.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1983:1963,test,test,1963,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1983,1,['test'],['test']
Testability," community,; I have a pdbqt (after vina docking) of a +vely charged compound which I'm reducing and converting into mol2 format with gasteiger charges.; But the sum of charges in mol2 files is almost zero, not +1 as expected.; I also tried using --gen3D flag and other charge models e.g. qeq, mmff94 during the conversion but in vain. Some methods give -ve charge! Files are attached (txt extension added) and the command is given below. Can you please suggest if there is a method in babel that can reliably estimate net charges on molecules without manual intervention?; I want this to work since I have a workflow for docking and MD that is working except for the fact that there is no reliable method to estimate net-charge without visual inspection of the structure.; I've manually summed the charges in excel, it is zero, not +1.; Is it possible that I missed something trivial?; Looking forward to valuable suggestions from the community.; thank you and best regards; Dr Vaibhav A. Dixit, Asst. Prof., BITS Pilani, Pilani India.; Email: vaibhav.dixit@pilani.bits-pilani.ac.in; vaibhavadixit@gmail.com. [test.mol2.txt](https://github.com/openbabel/openbabel/files/7070493/test.mol2.txt); [new1.pdb.txt](https://github.com/openbabel/openbabel/files/7070494/new1.pdb.txt). babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; WARNING: damped steplength 0.0143888 to 0.00575672; WARNING: damped steplength 0.00447914 to 0.00300176; 9 molecules converted; 9 files output. The first is test1.mol2; 3621 audit log messages 99 debugging messages. Command to print netcharge (uses ""st"" from github).; egrep -A1000 ATOM test1.mol2 | grep -v ROOT | grep LIG | sed -e ""1d"" | awk '{print $9}' | st | awk '{print $4}' | tail -1 | xargs printf ""%1.0f"" && echo """"; -0. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Open Babel 2.3.2 -- Apr 23 2014 -- 21:08:30. Operating system and version:; Linux CentOS 7",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2404:1124,test,test,1124,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404,5,"['log', 'test']","['log', 'test']"
Testability," ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:12147,test,test,12147,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,2,['test'],"['test', 'testkekule']"
Testability," ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:9986,test,test,9986,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,2,['test'],"['test', 'testunique']"
Testability, error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: un,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:14815,test,test,14815,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability, error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undef,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:16419,test,test,16419,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability, error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: u,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:17222,test,test,17222,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability, error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 183; Start 183: test_ffmmff94_5; --; 183: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 183: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 185; Start 185: test_ffuff_1; --; 185: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 185: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 203; Start 203: test_phmodel_1; --; 203: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 203: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 204; Start 204: test_residue_1; --; 204: ../src/residue.cpp:853:13: runtime error: member call on address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:18290,test,test,18290,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability," found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openb",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2406:3506,Test,Test,3506,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406,4,['Test'],['Test']
Testability," https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version:3.1.1; Operating system and version: centos7. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Command: obabel -imol2 mol2/fda370.mol2 -opdbqt -O fda370_3d.pdbqt --gen3D 1 -p 7.4; Generate a reasonable conformation. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Regardless of my efforts, output is a flat structure; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; here is the molecular file; @<TRIPOS>MOLECULE; Sirolimus; 65 68 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 C -2.5493 -4.8694 0.0000 C.3 1 UNL1 0.1741; 2 O -2.0142 -4.2415 0.0000 O.3 1 UNL1 -0.3510; 3 C -1.2029 -4.3909 0.0000 C.3 1 UNL1 0.1455; 4 C -0.6677 -3.7630 0.0000 C.3 1 UNL1 0.0322; 5 C 0.1436 -3.9125 0.0000 C.3 1 UNL1 0.0027; 6 C 0.6787 -3.2846 0.0000 C.3 1 UNL1 0.0037; 7 C 0.4025 -2.5072 0.0000 C.3 1 UNL1 0.0406; 8 C -0.4088 -2.3578 0.0000 C.3 1 UNL1 0.0037; 9 C 0.9377 -1.8793 0.0000 C.3 1 UNL1 0.1761; 10 C 0.6170 -1.0354 0.0000 C.3 1 UNL1 0.1083; 11 C -0.0998 -0.6269 0.0000 C.2 1 UNL1 0.1579; 12 O -0.8516 -0.9666 0.0000 O.2 1 UNL1 -0.2956; 13 C 0.0673 0.1810 0.0000 C.3 1 UN",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2638:1271,test,test,1271,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2638,1,['test'],['test']
Testability, https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1677; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/graphsym.cpp#L389; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/obconversion.cpp#L302; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/residue.cpp#L853. `ctest` output:. ```; test 5; Start 5: test_align_5; --; 5: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 5: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 17; Start 17: test_builder_1; --; 17: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 17: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 18; Start 18: test_builder_2; --; 18: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 18: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 19; Start 19: test_builder_3; --; 19: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:2653,test,test,2653,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability," is 1, perform an initialization. For the FPS format, the initialization loads the correct fingerprint type. If it is uninitialized then it will deference an unassigned variable, causing the segfault. I have patched WriteString() and WriteFile(). I will submit a pull request shortly to demonstrate one possible solution. ## Related symptoms. ### issue #1783. Note that this is likely related to issue #1783 . With an un-patched system:; ```; >>> import pybel; >>> pybel.readstring(""smi"", ""c1ccccc1"").write(""fpt""); '>\n'; ```. with my patch in place:; ```; >>> import pybel; >>> print(pybel.readstring(""smi"", ""c1ccccc1"").write(""fpt"")); > 6 bits set; 00000000 00000000 00000000 00000200 00000000 00000000; 00000000 00000000 00000000 00000840 00000000 00008000; 00000000 00000000 00000000 00000000 00000000 00000000; 00000000 00000000 00000000 08000000 00000000 00000000; 00000000 00000000 00000000 00000000 00000000 00020000; 00000000 00000000; ```. The proposed solution in that issue was to enable the 'h' option, which worked because the relevant code sets hexoutput using the following.; ```; if(pConv->IsOption(""h"") || (pConv->GetOutputIndex()==1 && pConv->IsLast())); hexoutput=true;; ```. It may also be related to issue #852 . ### CML output. As another example, the CML output differs between an unpatched system:; ```; >>> print(pybel.readstring(""smi"", ""C"").write(""cml"")); <molecule>; <atomArray>; <atom id=""a1"" elementType=""C""/>; </atomArray>; </molecule>; ```; and a patched system:; ```; >>> print(pybel.readstring(""smi"", ""C"").write(""cml"")); <?xml version=""1.0""?>; <molecule xmlns=""http://www.xml-cml.org/schema"">; <atomArray>; <atom id=""a1"" elementType=""C"" hydrogenCount=""4""/>; </atomArray>; </molecule>; ```; Note the leading XML declaration in the patched version. This is because of the following test in format/xml/cmlformat.cpp :; ```; if(!_pxmlConv->IsOption(""MolsNotStandalone"") && _pxmlConv->GetOutputIndex()==1); ...; xmlTextWriterStartDocument(writer(), NULL, NULL, NULL);; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1922:3637,test,test,3637,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1922,1,['test'],['test']
Testability," openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Ubuntu 22.04.1 and CentOS-7. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; In previouslly I download openbabel-3.1.1 version by `apt install openbabel`.; But recently I want to download in server, which I was not a sudoer. So I download `openbabel-3.1.1-source.tar.bz2` on **Releases** and using [Local build](https://open-babel.readthedocs.io/en/latest/Installation/install.html#local-build). I expect that will compile a same executor as I download on `apt install openbabel` which the obminimize can do multithread computation. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; But I get the compile version which only can do the single thread computation. And when I check check the obabel version, I found that it's only 3.1.0. So I download the newest github version (530dbfa333189f4f429bd01a411b866ff5e2efe9) and build it again. The obabel version was right. But still can't do multithread computation. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; when I use compiled obminmize, the cpu utilization was only 100%.; ![image](https://user-images.githubusercontent.com/77485425/195272476-2b7d8cb7-38ab-4502-8317-6494a864ff23.png). when I use the version which install from `apt install openbabel`, I can make all thread of cpu compute.; ![image](https://user-images.githubusercontent.com/77485425/195273703-24d41564-6e68-4e08-a04f-b9413c8fd58e.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2541:1902,test,test,1902,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2541,1,['test'],['test']
Testability," please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 7. ## Expected Behavior. ""`make install`"" works. ## Actual Behavior. ""`make install`"" sometimes fails with:. ```; make[2]: *** No rule to make target `/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2/lib/libmaeparser.so', needed by `lib/libopenbabel.so.7.0.0'. Stop; ```. This issue isn't always reproducible, it's not clear to me yet why it doesn't happen consistently... ## Steps to Reproduce. ```; mkdir /tmp/OpenBabel-3.1.1/build; cd /tmp/OpenBabel-3.1.1/build; cmake -DCMAKE_INSTALL_PREFIX=/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2 -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_C_COMPILER='icc' -DCMAKE_C_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_CXX_COMPILER='icpc' -DCMAKE_CXX_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_Fortran_COMPILER='ifort' -DCMAKE_Fortran_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_FIND_USE_PACKAGE_REGISTRY=FALSE -DBOOST_ROOT=/software/Boost/1.72.0-iimpi-2020a -DBoost_NO_SYSTEM_PATHS=ON -DBoost_INCLUDE_DIR=/software/Boost/1.72.0-iimpi-2020a/include -DBoost_LIBRARY_DIR_RELEASE=/software/Boost/1.72.0-iimpi-2020a/lib -DENABLE_OPENMP=ON -DENABLE_TESTS=ON -DBUILD_GUI=OFF -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DPYTHON_INCLUDE_DIR=/software/Python/3.8.2-GCCcore-9.3.0/include/python3.8 -DPYTHON_LIBRARY=/software/Python/3.8.2-GCCcore-9.3.0/lib/libpython3.8.so -DEIGEN3_INCLUDE_DIR='/software/Eigen/3.3.7/include' /tmp/openbabel*. make -j 20; cp lib/_openbabel.so /tmp/openbabel-*/scripts/python/openbabel/; make test; make install; ````",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2443:2364,test,test,2364,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2443,1,['test'],['test']
Testability," post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Gentoo Linux, 5.6.15-gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Failed 0/8 test programs. 0/34 subtests failed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Can't call method ""GetMass"" on an undefined value at t/data.t line 21.; t/data.t ........... Dubious, test returned 255 (wstat 65280, 0xff00) ; Failed 1/2 subtests . t/data.t (Wstat: 65280 Tests: 1 Failed: 0); Non-zero exit status: 255; Parse errors: Bad plan. You planned 2 tests but ran 1.; Files=8, Tests=34, 0 wallclock secs ( 0.03 usr 0.01 sys + 0.39 cusr 0.06 csys = 0.49 CPU); Result: FAIL; Failed 1/8 test programs. 0/34 subtests failed. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; swig -perl5 -c++ -small -O -templatereduce -naturalvar -I/usr/include/openbabel3 -o scrips/perl/openbabel-perl.cpp -outdir scrips/perl scripts/openbabel-perl.i; cd scrips/perl; perl Makefile.PL PREFIX=/usr INSTALLDIRS=vendor INSTALLMAN3DIR=none DESTDIR=/var/tmp/portage/sci-chemistry/openbabel-perl-3.1.1/image INC=-I/usr/include/openbabel3; make -j17 -l4 'OTHERLDFLAGS=-Wl,-O1 -Wl,--as-needed -Wl,--hash-style=gnu; make -j17 -l4 test; ```. The offending line in `scrips/perl/t/data.t` is:; ```; my $mass = $Chemistry::OpenBabel::etab->GetMass",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2247:1395,test,tests,1395,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247,1,['test'],['tests']
Testability, runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 183; Start 183: test_ffmmff94_5; --; 183: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 183: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 185; Start 185: test_ffuff_1; --; 185: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 185: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 203; Start 203: test_phmodel_1; --; 203: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 203: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 204; Start 204: test_residue_1; --; 204: ../src/residue.cpp:853:13: runtime error: member call on address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/residue.cpp:853:13 in ; 204: ../include/openbabel/atom.h:160:45: runtime error: member access within address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:18817,test,test,18817,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability, runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/gr,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:4767,test,test,4767,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability," streams which do not appear to translate nicely through; SWIG to Python iterators. Regards,; Noel. [As background, here is the text of an email describing; attempts to get this to work:. Attempt 1 Using Read after ReadFile; =========; from openbabel import *. myfile = ""3d.head.sdf""; obConversion = OBConversion(); obConversion.SetInFormat(""sdf""). mymol = OBMol(); obConversion.ReadFile(mymol,myfile); print mymol.GetMolWt(); print obConversion.Read(mymol); print ""The program segfaults before this line"". Attempt 2 Using Read after ReadString; =========; from openbabel import *. myfilestring = open(""3d.head.sdf"",""r"").read(); obConversion = OBConversion(); obConversion.SetInFormat(""sdf""). mymol = OBMol(); obConversion.ReadString(mymol,myfilestring); print mymol.GetMolWt(); print obConversion.Read(mymol); print ""The program aborts before this line"". >From the python point of view, what is needed is a; function that when; repeatedly called, will return additional molecules.; This doesn't need; to be in the main openbabel library, but can be in the; SWIG wrapper; somewhere. Regards,; Noel. On Wed, 2006-03-15 at 14:18 -0500, Geoffrey Hutchison; wrote:; > On Mar 15, 2006, at 5:18 AM, Noel O'Boyle wrote:; > ; > > It seems that OBConversion.ReadFile(OBMolecule); just reads in the ; > > first; > > molecule, and I cannot see a way of iterating over; the molecules.; > ; > The OBConversion.Read(OBMol) function should continue; to read from ; > the same file. However, since Python and Perl have no; concept of ; > ""streams"", it's not possible to use; OBConversion.Read() to set up the ; > input file or string.; > ; > So something like this (sorry, I haven't written much; Python, so the ; > syntax might be off):; > ; > import openbabel; > ; > mol = openbabel.OBMol(); > conv = openbabel.OBConversion(); > conv.SetInAndOutFormats(""sdf"", ""sdf""); > obConversion.ReadString(mol, ""test.sdf""); > ; > while (obConversion.Read(mol)); > ...; > ; > ; > Cheers,; > -Geoff; ]]. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/525:2181,test,test,2181,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525,1,['test'],['test']
Testability," supported.; GUI will not be built; CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # P",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:1492,test,test,1492,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['test'],['test']
Testability," test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_addh_1; --; 61: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsy",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:6017,test,test,6017,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability, test/CMakeFiles/test_runner.dir/test_runner.o; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.o; [ 88%] Linking CXX executable ../../bin/obgui; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/buildertest.o; //usr/lib/x86_64-linux-gnu/libharfbuzz.so.0: undefined reference to `FT_Get_Var_Blend_Coordinates'; //usr/lib/x86_64-linux-gnu/libgtk-3.so.0: undefined reference to `g_log_structured_standard'; //usr/lib/x86_64-linux-gnu/libcairo.so.2: undefined reference to `FT_Get_Var_Design_Coordinates'; collect2: error: ld returned 1 exit status; src/GUI/CMakeFiles/obgui.dir/build.make:149: recipe for target 'bin/obgui' failed; make[2]: *** [bin/obgui] Error 1; CMakeFiles/Makefile2:6751: recipe for target 'src/GUI/CMakeFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:51825,test,test,51825,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability," the CI setup?. ![image](https://user-images.githubusercontent.com/1053245/102149305-682c7200-3e6e-11eb-9010-6b1eb109ab93.png). I started looking into adding this via CI [here](https://github.com/ltalirz/openbabel/tree/add-coverage) but it turns out that when compiling with `-DCMAKE_BUILD_TYPE=Debug` (which I believe is required for accurate coverage results - didn't check, though), the tests take a very long time ([gh actions log](https://github.com/ltalirz/openbabel/runs/1554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-run",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2312:1193,Test,Test,1193,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312,1,['Test'],['Test']
Testability," to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; command line syntax: ; ```; cmake .. \; 	-DCMAKE_PREFIX_PATH=$BOOST_PATH \; 	-DCMAKE_INSTALL_PREFIX=$OPENBABEL_CMAKE_PREFIX \; 	-DZLIB_ROOT=$ZLIB_PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2377:2423,test,test,2423,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377,1,['test'],['test']
Testability," to save the streams. By not keeping pointers to the provided streams, the possibility of a use after free error goes away. The constructor, SetInStream/SetOutStream, ReadFile/WriteFile, and Read/Write functions can still be used to set persistent streams. Internally, SetInStream/SetOutStream are used to setup/teardown streams, as opposed to the previous approach which was to duplicate (slightly different) blocks of code everywhere this happened (for instance, to check for gzip, set NeedToFree, etc). OBConversion keeps track of what streams it owns the memory to. SetInStream(NULL) or SetOutStream(NULL) will take care of cleaning up the current stream. The semantics of the copy constructor have been refined and an assignment operator added. Previously the state was just copied resulting in two objects that both thought they owned the same memory and had to delete it. This only worked because of the implicit assumption that OBConversions were only copied to create AuxConv objects for XML parsing (why these need to be subclasses, I know not) and there's special logic to avoid duplicate deletions in this case. Now the semantics are that only the originating OBConversion retains ownership of any memory it allocated. This eliminates the possibility of a free-after-free, but not a use-after-free (the copy constructor just shouldn't be used). ReadFile/WriteFile will now extract the format from the filename if the format is not already set. This includes setting the gzip status of the file. I've also added a convenience constructor to OBConversion that takes filenames. This removes a lot of the boilerplate required for doing simple tasks. For example:. OBMol mol;; OBConversion conv(infile);; while(conv.Read(&mol)) {; //do stuff; }. Gzip support has been improved to work properly on files that are concatenations of gzip files (this is suppose to be a valid thing to do). The XML reader would return true to ReadMolecule even if it hadn't read a molecule in a multi-molecule file ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/191:4048,log,logic,4048,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/191,1,['log'],['logic']
Testability," version: Rocky Linux 8.6. ## Expected Behavior; Those tests should be fast. ## Actual Behavior; It gets stuck in the tests in 3 of our supercomputers. ```; Test project /dev/shm/strube1/juwels/OpenBabel/3.1.1/gompi-2022a/easybuild_obj; Start 1: test_align_1; 1/229 Test #1: test_align_1 ..................... Passed 0.05 sec; Start 2: test_align_2; 2/229 Test #2: test_align_2 ..................... Passed 0.06 sec; Start 3: test_align_3; 3/229 Test #3: test_align_3 ..................... Passed 0.05 sec; Start 4: test_align_4; 4/229 Test #4: test_align_4 ..................... Passed 0.68 sec; Start 5: test_align_5; 5/229 Test #5: test_align_5 ..................... Passed 0.16 sec; Start 6: test_alias_1; 6/229 Test #6: test_alias_1 ..................... Passed 0.11 sec; Start 7: test_automorphism_1; 7/229 Test #7: test_automorphism_1 .............. Passed 0.08 sec; Start 8: test_automorphism_2; 8/229 Test #8: test_automorphism_2 .............. Passed 0.08 sec; Start 9: test_automorphism_3; 9/229 Test #9: test_automorphism_3 .............. Passed 0.08 sec; Start 10: test_automorphism_4; 10/229 Test #10: test_automorphism_4 .............. Passed 0.08 sec; Start 11: test_automorphism_5; 11/229 Test #11: test_automorphism_5 .............. Passed 0.10 sec; Start 12: test_automorphism_6; 12/229 Test #12: test_automorphism_6 .............. Passed 0.08 sec; Start 13: test_automorphism_7; 13/229 Test #13: test_automorphism_7 .............. Passed 0.08 sec; Start 14: test_automorphism_8; 14/229 Test #14: test_automorphism_8 .............. Passed 0.08 sec; Start 15: test_automorphism_9; 15/229 Test #15: test_automorphism_9 .............. Passed 0.10 sec; Start 16: test_automorphism_10; 16/229 Tes; ```. And it stays there forever. ## Steps to Reproduce; Install it with EasyBuild, with GCC 11.3.0 and OpenMPI 4.1.4. The other dependencies used are:. ```; >> * CMake/3.23.1; >> * SWIG/.4.0.2; >> * Python/3.10.4; >> * zlib/.1.2.12; >> * libxml2/.2.9.13; >> * Eigen/3.4.0; >> * RapidJSON/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2557:1082,Test,Test,1082,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2557,1,['Test'],['Test']
Testability,"# Context; I need to convert thousands of SMILES into SDF file using pybel via python scripts (several code lines below).; ```; for ind, row in df.iterrows():; df.loc[ind, 'ROMol'] = pybel.readstring(""smi"", row[args.smi_column]); df.loc[ind, 'ROMol'].make3D(steps=args.pybel_steps); ```. During the progress, I observe a lot of warning/errors messages directly shown on my terminal although pybel returns a full list of converted molecules. For examples,; ```; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 3 stereocenter(s) in this molecule (); with Atom Ids as follows: 9 12 16; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 3 stereocenter(s) in this molecule (); with Atom Ids as follows: 2 3 14; ```. # Problem; I would like to further investigate pybel warnings/errors in order to fix my converted molecules if needed. In the initial stages, I have to capture or redirect them with inputted SMILES into a log file. However, I have not found any approaches to overcome the issue. . Please help me to solve this. Thank you very much. **Additional context**; I have conducted a research, however I have not reach solutions. Please help me to do this.; There are some links:; [redirect-logs-to-file-in-pybel](https://stackoverflow.com/questions/50978464/redirect-logs-to-file-in-pybel); [can-i-capture-warning-messages-during-format-conversion-in-pybel](https://stackoverflow.com/questions/54047085/can-i-capture-warning-messages-during-format-conversion-in-pybel); [how-to-disable-logged-warnings-in-pybel](https://stackoverflow.com/questions/50419371/how-to-disable-logged-warnings-in-pybel)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2728:978,log,log,978,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2728,5,['log'],"['log', 'logged-warnings-in-pybel', 'logs-to-file-in-pybel']"
Testability,## Beep boop. Your images are optimized!. Your image file size has been reduced by **16%** 🎉. <details>; <summary>; Details; </summary>. | File | Before | After | Percent reduction |; |:--|:--|:--|:--|; | /data/splash.png | 52.43kb | 40.58kb | 22.60% |; | /doc/splash.png | 52.43kb | 40.58kb | 22.60% |; | /test/files/aromatics.png | 276.60kb | 217.29kb | 21.44% |; | /test/files/alias.png | 13.95kb | 11.22kb | 19.56% |; | /doc/images/rmsdconformerscore.png | 44.32kb | 38.06kb | 14.13% |; | /doc/images/spectrophore_cage.png | 36.35kb | 32.53kb | 10.52% |; | /doc/images/tetraplanar.png | 24.58kb | 22.22kb | 9.59% |; | /doc/images/tetrahedral.png | 14.24kb | 12.91kb | 9.34% |; | /doc/images/cistrans.png | 7.30kb | 6.71kb | 8.12% |; | /doc/images/squareplanar.png | 8.55kb | 7.89kb | 7.71% |; | /doc/images/tetranonplanar.png | 47.94kb | 44.66kb | 6.84% |; | /doc/images/SPshapes.png | 57.16kb | 53.47kb | 6.45% |; | /doc/images/energyconformerscore.png | 31.76kb | 30.00kb | 5.54% |; | /doc/images/gettransref.png | 1.30kb | 1.23kb | 5.54% |; | /doc/images/getcisref.png | 1.27kb | 1.22kb | 3.78% |; | | | | |; | **Total :** | **670.15kb** | **560.54kb** | **16.36%** |; </details>. ---. **Black Lives Matter** | [💰 donate](https://blm-bookmarks.carrd.co/#donate) | [🎓 learn](https://blm-bookmarks.carrd.co/#learn) | [✍🏾 sign](https://blm-bookmarks.carrd.co/#sign). [📝 docs](https://imgbot.net/docs) | [:octocat: repo](https://github.com/dabutvin/ImgBot) | [🙋🏾 issues](https://github.com/dabutvin/ImgBot/issues) | [🏅 swag](https://goo.gl/forms/1GX7wlhGEX8nkhGO2) | [🏪 marketplace](https://github.com/marketplace/imgbot),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2345:307,test,test,307,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2345,2,['test'],['test']
Testability,"## Environment Information. Open Babel version: 3.1.1, though possibly irrelevant here; Operating system and version: Linux Debian 12/bookworm (branch testing), though possibly irrelevant here. ## Expected Behavior. While correcting the documentation (completion of an output option, see https://github.com/openbabel/openbabel/pull/2565) outside fenced code was anticipated to pass the subsequent rebuild and automated tests. ## Actual Behavior. Both `Build SWIG bindings / Linux SWIG All Bindings (pull_request)` as well as test `lint_python / lint_python (pull_request)` fail. What is puzzling to me, the file altered is not even a .py, but a .cpp. For the an untrained eye (no working knowledge in any of the (C/C++/C#) family), I do not identify my error which now suddenly breaks Python's action here. ## Steps to Reproduce. In file `src/formats/povrayformat.cpp`, the string . ```; obabel -:\""CC(=O)Cl acid chloride\"" --gen3d -O chloride.pov -xc -xf -xs -m SPF\n\n""; ```. was substituted by . ```; obabel -:\""CC(=O)Cl acid chloride\"" --gen3d -O chloride.pov -xc -xf -xs -xm SPF\n\n""; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2566:151,test,testing,151,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2566,3,['test'],"['test', 'testing', 'tests']"
Testability,"## Environment Information. Open Babel version: ; [latest master commit](https://github.com/openbabel/openbabel/tree/32cf131444c1555c749b356dab44fb9fe275271f). Operating system and version:; Distributor ID: Ubuntu; Description: Ubuntu 22.04.3 LTS; Release: 22.04; Codename: jammy. ## Expected Behavior. All tests should pass on a clean build. ## Actual Behavior. pytest_babel fails. ## Steps to Reproduce. Build a clean project; ```sh; mkdir build; cd build; cmake ..; make -j2; ```; ## Suspected Problem. Looks like the issue is a obrms is missing on line 54 in [tools/CMakeLists.txt](https://github.com/openbabel/openbabel/blob/32cf131444c1555c749b356dab44fb9fe275271f/tools/CMakeLists.txt#L54). When I add obrms to that line all my tests pass. ## Errors from failing tests. ```sh; Test project /home/jfkonecn/repos/openbabel/build; Start 212: pytest_babel; 1/1 Test #212: pytest_babel .....................***Failed Error regular expression found in output. Regex=[ERROR] 1.16 sec; /home/jfkonecn/repos/openbabel/scripts/python:/home/jfkonecn/repos/openbabel/build/lib; .......E/usr/lib/python3.10/subprocess.py:955: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used; self.stdin = io.open(p2cwrite, 'wb', bufsize); /usr/lib/python3.10/subprocess.py:961: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used; self.stdout = io.open(c2pread, 'rb', bufsize); /usr/lib/python3.10/subprocess.py:966: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used; self.stderr = io.open(errread, 'rb', bufsize); ........; ======================================================================; ERROR: testOBRMS (__main__.TestOBabel); Sanity checks for obrms; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/home/jfkonecn/repos/openbabel/test/testbabel.py"", line ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2662:307,test,tests,307,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2662,5,"['Test', 'test']","['Test', 'tests']"
Testability,"## Environment Information; Open Babel 3.1.0; Linux, Ubuntu 20.04.4 LTS. ## Expected Behavior; I wanted to perform forcefield calculations using partial charges from a file. ## Actual Behavior. 1.When I try to use a specific model for the partial charges, they are printed out but not used in the calculation as it still states that it used the default partial charges and obtained the same energy as a calculation without the --partialcharge option; I tried this command:; ```; obabel struc.xyz -otxt --energy --ff gaff --partialcharge eem --print --log ; ```; In the file ""output"" you can see what is printed on my console after this command.; I also attached a neutral example structure called ""struc.xyz"" on which I performed the calculations. 2. I want to use partial charges that I obtained from an xtb calculation. I wrote these charges in the file ""pc"", I tried to use the format as stated by obabel. I tried this command:; ``` ; obabel struc.xyz -otxt --energy --ff gaff --partialcharge fromfile:./pc --print --log; ``` ; The following error occurs:. "" ... *** Open Babel Error in ComputeCharges; Charge mapping for atom # 1 (OXT) not found ... "" . The whole printout can be found in the file ""error"". ## Steps to Reproduce; The above-mentioned files can be found in example.tar . Thank you very much in advance!; Benedikt; [example.zip](https://github.com/openbabel/openbabel/files/8893033/example.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2496:551,log,log,551,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2496,2,['log'],['log']
Testability,"## Environment Information; Open Babel version: 2.4.1 with Python 3.7.9; Operating system and version: Ubuntu 20.04.4 LTS. ## Expected Behavior; Peptide structure prediction. ## Actual Behavior; SystematicRotorSearch briefly allocates more and more RAM until overflow (tested on a machine with 32 GB RAM).; RandomRotorSearch works fine alike the other methods, too. Maybe SystematicRotorSearch needs a lot of memory, but comparing to all other methods this looked odd for me. ## Steps to Reproduce; An arbitrary PDB file is needed. ; `ob_ff = openbabel.OBForceField.FindForceField(""gaff""). ob_conv = openbabel.OBConversion() # conversion object; ob_mol = openbabel.OBMol() # molecule; ob_conv.ReadFile(ob_mol, pdb_path). ob_ff.Setup(ob_mol); ob_ff.SystematicRotorSearch(10)`",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2498:269,test,tested,269,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2498,1,['test'],['tested']
Testability,"## Environment Information; Open Babel version: 3.1.0. ## Expected Behavior; I have a selection of conformers of the same molecule. I want to collect all of the torsions in one file for comparison purposes. This should be easily done using the report file type. ## Actual Behavior; However, the list of torsions that are generated in this format vary from conformer to conformer, which makes it quite a bit more difficult. . I have attached the reports for three of the conformers for a small molecule to illustrate that the torsion list is different.; [CCB-CH2CN_1.txt](https://github.com/openbabel/openbabel/files/13367470/CCB-CH2CN_1.txt); [CCB-CH2CN_2.txt](https://github.com/openbabel/openbabel/files/13367471/CCB-CH2CN_2.txt); [CCB-CH2CN_3.txt](https://github.com/openbabel/openbabel/files/13367472/CCB-CH2CN_3.txt). ## Steps to Reproduce. I am simply using the basic convert feature to convert Gaussian job log files to report files. Input log files are attached below.; [CCB-CH2CN_1.log](https://github.com/openbabel/openbabel/files/13367504/CCB-CH2CN_1.log); [CCB-CH2CN_2.log](https://github.com/openbabel/openbabel/files/13367505/CCB-CH2CN_2.log); [CCB-CH2CN_3.log](https://github.com/openbabel/openbabel/files/13367506/CCB-CH2CN_3.log)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2644:914,log,log,914,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2644,8,['log'],['log']
Testability,"## Environment Information; Open Babel version: 3.1.0; Operating system and version: Win11, Python 3.12.4, Autodock4. ## Expected Behavior; I am trying to do Covalent Docking with Autodock4, I downloaded the script from the Scripps site and I'm testing the program with the examples provided by them. The output should be a file containing the protein with the covalent ligand docked. ## Actual Behavior; After initial difficulties in installing Openbabel and PythonBindings, the first errors appeared to be in the syntax of the files prepareCovalent.py, CopyMol.py and ResidueProfiler.py. After editing them I managed to make the script working (corrected files attached), but this messages appeared:. first:. > C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent> python prepareCovalent.py --ligand ligand1.mol2 --ligindices 24,25 --receptor 3upo_protein.pdb --residue B:SER222 --outputfile ligcovalent.pdb; > ; > --- Open Babel Warning in OpenBabel::OBGlobalDataBase::Init; > Unable to open data file 'space-groups.txt'; > ; > --- Open Babel Warning in OpenBabel::OBGlobalDataBase::Init; > Cannot initialize database 'space-groups.txt' which may cause further errors.; > Processing residue B:SER222; > [start] output filename is: ligcovalent.pdb; > Traceback (most recent call last):; > File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 1319, in <module>; > x = CovalentDockingMaster(); > ^^^^^^^^^^^^^^^^^^^^^^^; > File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 871, in __init__; > self.start(); > File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 1262, in start; > self.processResidues(); > File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 1298, in processResidues; > aligner = self.x = CovalentDockingMaker(**self.alignerArgs); > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; > File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2714:245,test,testing,245,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2714,1,['test'],['testing']
Testability,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: Rocky Linux 8.5. ## Expected Behavior; No failed Testcases. ## Actual Behavior; 1 failed testcase. ctest --rerun-failed --output-on-failure; Test project /$PATH/openbabel-3.1.1/build; Start 211: pytest_distgeom; 1/1 Test #211: pytest_distgeom ..................***Failed 0.15 sec; /$PATH/openbabel-3.1.1/scripts/python:/$PATH/openbabel-3.1.1/build/lib; File ""/$PATH/openbabel-3.1.1/test/testdistgeom.py"", line 45; 'Clc1cccc(Cl)c1\C=N\NC(=O)c1cccs1',; ^; SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 18-19: malformed \N character escape. CMake Error at pytest_distgeom.cmake:20 (MESSAGE):; 1. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 0.58 sec. The following tests FAILED:; 	211 - pytest_distgeom (Failed); Errors while running CTest. ## Steps to Reproduce; mkdir build; cd build; cmake ..; make -j8; make test; ctest --rerun-failed --output-on-failure",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2578:134,Test,Testcases,134,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2578,11,"['Test', 'test']","['Test', 'Testcases', 'test', 'testcase', 'testdistgeom', 'tests']"
Testability,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: Rocky Linux 8.6. ## Expected Behavior; Those tests should be fast. ## Actual Behavior; It gets stuck in the tests in 3 of our supercomputers. ```; Test project /dev/shm/strube1/juwels/OpenBabel/3.1.1/gompi-2022a/easybuild_obj; Start 1: test_align_1; 1/229 Test #1: test_align_1 ..................... Passed 0.05 sec; Start 2: test_align_2; 2/229 Test #2: test_align_2 ..................... Passed 0.06 sec; Start 3: test_align_3; 3/229 Test #3: test_align_3 ..................... Passed 0.05 sec; Start 4: test_align_4; 4/229 Test #4: test_align_4 ..................... Passed 0.68 sec; Start 5: test_align_5; 5/229 Test #5: test_align_5 ..................... Passed 0.16 sec; Start 6: test_alias_1; 6/229 Test #6: test_alias_1 ..................... Passed 0.11 sec; Start 7: test_automorphism_1; 7/229 Test #7: test_automorphism_1 .............. Passed 0.08 sec; Start 8: test_automorphism_2; 8/229 Test #8: test_automorphism_2 .............. Passed 0.08 sec; Start 9: test_automorphism_3; 9/229 Test #9: test_automorphism_3 .............. Passed 0.08 sec; Start 10: test_automorphism_4; 10/229 Test #10: test_automorphism_4 .............. Passed 0.08 sec; Start 11: test_automorphism_5; 11/229 Test #11: test_automorphism_5 .............. Passed 0.10 sec; Start 12: test_automorphism_6; 12/229 Test #12: test_automorphism_6 .............. Passed 0.08 sec; Start 13: test_automorphism_7; 13/229 Test #13: test_automorphism_7 .............. Passed 0.08 sec; Start 14: test_automorphism_8; 14/229 Test #14: test_automorphism_8 .............. Passed 0.08 sec; Start 15: test_automorphism_9; 15/229 Test #15: test_automorphism_9 .............. Passed 0.10 sec; Start 16: test_automorphism_10; 16/229 Tes; ```. And it stays there forever. ## Steps to Reproduce; Install it with EasyBuild, with GCC 11.3.0 and OpenMPI 4.1.4. The other dependencies used are:. ```; >> * CMake/3.23.1; >> * SWIG/.4.0.2; >> * Python/3.10.4; ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2557:130,test,tests,130,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2557,11,"['Test', 'test']","['Test', 'tests']"
Testability,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: WSL & Conda, Python 3.9. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Molecule with correct PDB output. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->The PDB is outputting amino acids instead for the Methotrexate canonical smile that I tested. I have come across a similar problem too in docking. When using a ""BEN"" in the name column of the ligand pdb the docking software turned it into a benzene. Here it's similarly assigning amino acids to atoms where it should not. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior. -->; First (canonical) SMILE is methothrexate, taken from PUBCHEM. Does not work. Second one Ivermectin, also does not work. Third one is Ibuprofen, seems to work fine. So it's either on my end or on obabel's.; ```; from openbabel import openbabel as ob; from openbabel import pybel. smiles =""CN(CC1=CN=C2C(=N1)C(=NC(=N2)N)N)C3=CC=C(C=C3)C(=O)NC(CCC(=O)O)C(=O)O""; smiles=""CCC(C)C1C(CCC2(O1)CC3CC(O2)CC=C(C(C(C=CC=C4COC5C4(C(C=C(C5O)C)C(=O)O3)O)C)OC6CC(C(C(O6)C)OC7CC(C(C(O7)C)O)OC)OC)C)C""; smiles=""CC(C)CC1=CC=C(C=C1)C(C)C(=O)O""; mol = pybel.readstring(""can"", smiles); mol.addh(); mol.make3D(); mol = mol.OBMol. cs_obj = ob.OBConformerSearch(); cs_obj.Setup(mol, 5, 5, 5, 25) ; score = ob.OBMinimizingEnergyConformerScore() ; cs_obj.SetScore(score); cs_obj.Search(); mol.DeleteNonPolarHydrogens(). molecule = pybel.Molecule(mol); print(pybel.informats); molecule.write(""pdb"", ""x.pdb"", overwrite=True); ```. ![image](https://user-images.githubusercontent.com/20364007/105250",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2318:516,test,tested,516,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2318,2,['test'],"['test', 'tested']"
Testability,"## Environment Information; Open Babel version: 7acf50c9d73f8016e15eb2a45ce74c8909152883; Operating system and version: EndeavourOS. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. No build failure. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Intel classic compilers, icc and icpc, are deprecated and removed, and now LLVM compilers, icx and icpx, are provided. Their compiler ID is IntelLLVM and thus matches Intel. https://github.com/openbabel/openbabel/blob/7acf50c9d73f8016e15eb2a45ce74c8909152883/CMakeLists.txt#L325; https://github.com/openbabel/openbabel/blob/7acf50c9d73f8016e15eb2a45ce74c8909152883/CMakeLists.txt#L350-L351. However, `-ipo` of IntelLLVM compilers accepts no parameter, resulting in compilation error: `icpx: error: unknown argument: '-ipo1'`. Also, `-Wl,-s` should be set for `CMAKE_EXE_LINKER_FLAGS_RELEASE` instead. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```shellsession; $ CC=icx CXX=icpx cmake -D CMAKE_BUILD_TYPE=Release -S . -B build; $ cmake --build build; [ 1%] Built target data_headers; [ 1%] Building CXX object src/CMakeFiles/openbabel.dir/alias.cpp.o; icpx: error: unknown argument: '-ipo1'; icpx: warning: -Wl,-s: 'linker' input unused [-Wunused-command-line-argument]; make[2]: *** [src/CMakeFiles/openbabel.dir/build.make:76: src/CMakeFiles/openbabel.dir/alias.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:1361: src/CMakeFiles/openbabel.dir/all] Error 2; make: *** [Makefile:146: all] Error 2; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2715:1218,test,test,1218,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2715,1,['test'],['test']
Testability,"## Environment Information; Open Babel version:3.1.1; Operating system and version: 5.15.0-121-generic Ubuntu ; I have compiled . ## Expected Behavior; The problem is related to the option ""-ag"" in writing cif mentioned in [here](https://openbabel.org/docs/FileFormats/Crystallographic_Information_File.html). `obabel -ag -i xyz test.xyz -ocif -O test.cif `. The command should add the bonds to the ciff file. I tested the GUI, and it works, but in the command line, it doesn't work. ## Actual Behavior; Supposed: return the CIF file with bonds; Actual: CIF file without bonds. ## Steps to Reproduce; I test to convert files in different formats such as XYZ, POSCAR, CML, etc. The CIF is created, but the Bonds are not in it.; 1- Create a molecule as test.xyz. > 3; > ; > O 0.901246 0.031077 -0.000001; > H 1.611523 -0.189440 0.591081; > H 1.187665 0.709689 -0.599959. 2-Use the command above or :. `obabel -i xyz test.xyz -ocif -ag -O test.cif `. 3- Check the test.cif file and it should be like the following :. > # CIF file generated by openbabel 3.1.1, see https://openbabel.org; > data_I; > _chemical_name_common 'XYZ file generated by Avogadro.'; > loop_; > _atom_site_label; > _atom_site_type_symbol; > _atom_site_fract_x; > _atom_site_fract_y; > _atom_site_fract_z; > _atom_site_occupancy; > O0 O 0.90125 0.03108 -0.00000 1.000; > H1 H 1.61152 -0.18944 0.59108 1.000; > H2 H 1.18767 0.70969 -0.59996 1.000; > loop_; > _geom_bond_atom_site_label_1; > _geom_bond_atom_site_label_2; > _geom_bond_distance; > _geom_bond_site_symmetry_2; > _ccdc_geom_bond_type; > H2 O0 0.95000 . S; > O0 H1 0.94999 . S",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2726:329,test,test,329,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2726,8,['test'],"['test', 'tested']"
Testability,"## Environment Information; Open Babel version:3.1.1; Operating system and version:; CentOS Linux 7.0. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expected that all bond types are same between SDF and MOL2. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I attached the PNG file below. ; In SDF, highlighted carbon has 4 connectivities, whereas it has 5 connectivities in MOL2. . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; First of all, I downloaded MYU from RCSB through command ""wget https://files.rcsb.org/ligands/view/MYU_ideal.sdf"".; Secondly, I transformed it into MOL2 through command ""obabel -isdf MYU_ideal.sdf -omol2 -O test.mol2"". . ![sdf_mol2](https://user-images.githubusercontent.com/19364283/136455885-f556c99e-bab0-4cd7-a6c9-e67625521f0e.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2415:756,test,test,756,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2415,2,['test'],['test']
Testability,"## Environment Information; Operating system and version: Ubuntu 20.04. I am trying to build openbabel from source.; I installed swig, eigen and zlib.; I am running CMake 3.20.5; I cloned the repo, configured with:; `cmake .. -DRUN_SWIG=ON -DPYTHON_BINDINGS=ON`; built, and installed. It passed most tests. ; The problem arises when importing the package with cmake (if you're reading this because you're building gnina, use `make -DWITH_MAEPARSER=OFF -DWITH_COORDGEN=OFF -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON ..` to bypass this issue):; `find_package(OpenBabel3 REQUIRED)`. This results in the following message:; `; CMake Error at CMakeLists.txt:68 (find_package):; Found package configuration file:. /usr/local/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; `. in /usr/local/lib, I can see libmaeparser.so and libcoordgen.so. Possibly relevant lines from cmake output:; `; -- Found Boost: /usr/lib/x86_64-linux-gnu/cmake/Boost-1.71.0/BoostConfig.cmake (found version ""1.71.0"") found components: program_options iostreams ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/lib/x86_64-linux-gnu/cmake/Boost-1.71.0/BoostConfig.cmake (found version ""1.71.0"") found components: filesystem iostreams unit_test_framework ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Building existing MaeParser 'v1.2.3' source at /media/chedat/exchg/ligands/gnina/from_source/openbabel/external/maeparser-v1.2.3.; -- Found Boost: /usr/lib/x86_64-linux-gnu/cmake/Boost-1.71.0/BoostConfig.cmake (found version ""1.71.0"") found components: iostreams ; -- Using zlib library for iostreams dependency.; -- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /media/chedat/exchg/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2568:300,test,tests,300,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2568,1,['test'],['tests']
Testability,"$ svn update; At revision 3364.; $ babel -i mol2 123-pentatriene.mol2 -o inchi; InChI=1S/C5H8/c1-3-5-4-2/h3H2,1-2H3; 1 molecule converted; 4 audit log messages . According to vega it should be:; $ ./vega.sh 123-pentatriene.mol2; InChI=1/C5H6/c1-3-5-4-2/h4H,1H2,2H3. Reported by: maaren",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/925:147,log,log,147,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/925,1,['log'],['log']
Testability,$ wget http://www.pdb.org/pdb/files/2BOH.pdb && wget http://www.pdb.org/pdb/files/2HOC.pdb; $ babel --partialcharge gasteiger 2HOC.pdb 2HOC.mol2; 0 molecules converted; 20 audit log messages ; $ babel --partialcharge gasteiger 2BOH.pdb 2BOH.mol2; 0 molecules converted; 20 audit log messages ; etc. Reported by: prozacr. Original Ticket: [openbabel/bugs/881](https://sourceforge.net/p/openbabel/bugs/881),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1261:178,log,log,178,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1261,2,['log'],['log']
Testability,%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_ru,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:52881,test,test,52881,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"& Starowicz, P. (2016). BIOPEP database of sensory peptides and amino acids. Food Research International, 85, 155-161. doi: 10.1016/j.foodres.2016.04.031). ## Actual Behavior; As also reported by shahik and fredrikw in issue ""smiles to fasta conversion"" #2359, the peptide sequence is converted to a nonsense open SMILES. For example the following input:. `>Test ARFF`; `ARFF`. produces the following SMILES output (either in the output pane or the GUI or in a file) :. `[H].[N].[C].[C].[O].[C].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[N].[C].[N].[N].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[C].[C].[C].[C].[H].[H].[H].[H].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[C].[C].[C].[C].[H].[H].[H].[H].[H].[H].[H].[H].[H].[O].[H]`. However, **IF** the 'Display in firefox' option is enabled before doing the conversion, then the output is instead:. `N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)O)Cc1ccccc1)Cc1ccccc1)CCCNC(=[NH2])N)C`. which creates the correct peptide structure when pasted into Marvin Sketch. Also, by default OpenBabel expects the FASTA to contain nucleotide sequences not amino acid sequences, so the input:. `>Test AR`; `AR`. produces the output:. `O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O[P@@](=O)([O])OC[C@H]1O[C]([C][C]1O)N1[C]=NC2=[C]N=C([N])N=C12)n1cnc2c(N)ncnc12.O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O)n1c(=O)[nH]c(=O)c(C)c1)N1C(=O)N=[C][C]=C1`. which does not represent the required peptide. I couldn't see any way to make OpenBabel treat the input FASTA as a peptide sequence, although it may exist. I guess providing a way to specify that an input FASTA is a peptide may be a feature request :). ## Steps to Reproduce. In the OB GUI enable the ""Input below (ignore input file)"" option. In the left hand input pane enter:. `>Test ARFF`; `ARFF`. Enable the ""Output below only (no output file)"" and make sure the ""Display in firefox"" option is NOT enabled. Click the CONVERT button.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2367:1551,Test,Test,1551,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2367,2,['Test'],['Test']
Testability,"() * 0.6022); ```. The problem here is that the duplicate-atom checking in `OBUnitCell::FillUnitCell` assumes the input atoms are already unique. If this isn't the case, the method compounds the error. Fixed by checking the input atoms before expanding the unit cell in `FillUnitCell` (maybe this kind of check belongs somewhere else?). **Issue 2:** `OBUnitCell::FillUnitCell` hangs on large unit cells. This is due to the algorithm used in atom checking. It checks atom-atom distances, which is O(N^2). The new approach uses a hash, which should be amortized O(N). It uses the extra speed to check _every_ atom for uniqueness, rather than just symmetry unique ones. Note that a better approach would use an octree, but the hash was easier to implement and proves the point. **Issue 3:** `OBUnitCell::FillUnitCell` doesn't check all possible duplicates. To replicate, use [FeMOF74](https://gist.github.com/patrickfuller/6419438) and the above script. The underlying issue is that `FillUnitCell` assumes that the listed symmetry operations are logical. However, CIFs are a mess. In the case of the example cif, the file already has more than one unitcell worth of atoms, and additionally has defined symmetry operations. This is solved by the solution of Issue 2; by using the extra speed afforded by the hash to check every atom-atom connection, we can check for more duplicates. **Issue 4:** Some crystallographic programs fail if atom coordinates are not in [0, 1]. It's annoying, but an easy fix. I just added `WrapFractionalCoordinate` to cifformat.cpp. **Issue 5:** Centering can segfault. To replicate, use CoMOF74. ``` python; import pybel; with open(""CoMOF74.cif"") as in_file:; mof = in_file.read(); mol = pybel.readstring(""cif"", mof); mol.unitcell.FillUnitCell(mol.OBMol); # Cycling fixes the issue; # mol = pybel.readstring(""cif"", mol.write(""cif"")); mol.OBMol.Center(); mol.write(""cif""); ```. The `Center()` method operates off of a bunch of private variables. I'm guessing something isn't g",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23:1615,log,logical,1615,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23,1,['log'],['logical']
Testability,"(1) Don't cache inchi when generating inchifield smiles; (2) Don't use cached inchi if the user specifies one of several InChI output options; (3) Add a new test file for caching (and debugging) regressions: regressionstest.cpp; (4) Drive-by fix for typo in docstrings for 'unique' op and inchiformat (""/sp3"" -> ""/nosp3""); (5) Add test for regression to regressionstest.cpp",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/142:157,test,test,157,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/142,2,['test'],['test']
Testability,"(From openbabel-devel). Ok, it builds, but it segfaults in the CML tests. I've extracted one of the; failing tests and ran it under gdb:. [rathann@ryvius ~/build/BUILD/openbabel-2.2.0b3-20080215-r2249/test/cmltest]$ gdb ../../tools/.libs/lt-babel ; GNU gdb Red Hat Linux (6.6-16.fc7rh); Copyright (C) 2006 Free Software Foundation, Inc.; GDB is free software, covered by the GNU General Public License, and you are; welcome to change it and/or distribute copies of it under certain conditions.; Type ""show copying"" to see the conditions.; There is absolutely no warranty for GDB. Type ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu""...; Using host libthread_db library ""/lib64/libthread_db.so.1"".; (gdb) run -isdf 3d.head.sdf -ocml 3d.head.2.cml; Starting program: /home/rathann/build/BUILD/openbabel-2.2.0b3-20080215-r2249/tools/.libs/lt-babel -isdf 3d.head.sdf -ocml 3d.head.2.cml; warning: no loadable sections found in added symbol-file system-supplied DSO at 0x7fffdbbfd000; 70 molecules converted; 785 audit log messages . Program received signal SIGSEGV, Segmentation fault.; 0x00000030eba8f501 in std::ostream::sentry::sentry () from /usr/lib64/libstdc++.so.6; Current language: auto; currently c; (gdb) bt full; #0 0x00000030eba8f501 in std::ostream::sentry::sentry () from /usr/lib64/libstdc++.so.6; No symbol table info available.; #1 0x00000030eba8fd57 in std::ostream::write () from /usr/lib64/libstdc++.so.6; No symbol table info available.; #2 0x00002aaab3fc225f in OpenBabel::XMLConversion::WriteStream (context=<value optimized out>, ; buffer=0x7fffdbace810 ""���\227"", len=-609425392) at xml.cpp:337; ofs = (ostream *) 0x7fffdbace810. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/728:67,test,tests,67,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/728,4,"['log', 'test']","['log', 'test', 'tests']"
Testability,"(Note to self) As I've seen elsewhere in the library, the lazy perception for chains follows incorrect logic of checking whether residue information is available before checking the OBMol flag for whether chains is perceived. As a result, unsetting this value currently has no effect. Also, calling ChainsParser::PerceiveChains(mol) should set this flag on the molecule, but currently doesn't.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1821:103,log,logic,103,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1821,1,['log'],['logic']
Testability,"(https://github.com/ltalirz/openbabel/tree/add-coverage) but it turns out that when compiling with `-DCMAKE_BUILD_TYPE=Debug` (which I believe is required for accurate coverage results - didn't check, though), the tests take a very long time ([gh actions log](https://github.com/ltalirz/openbabel/runs/1554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2312:1384,Test,Test,1384,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312,1,['Test'],['Test']
Testability,"(https://github.com/openbabel/openbabel/files/9179914/error-deps.log). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; - Build maeparser and install it on ../libmaeparser-1.2.4-220427; - Build coordgenlibs and install it on ../coordgenlibs-3.0.0-220427; - Run following command to try the build process:; `; mkdir build-openbabel; cd build-openbabel; cmake \; -DCMAKE_INSTALL_PREFIX=../openbabel-3.1.1-220621 \; -DBUILD_SHARED=OFF \; -DBUILD_MIXED=ON \; -DWITH_STATIC_INCHI=ON \; -DWITH_STATIC_LIBXML=ON \; -DWITH_COORDGEN=ON \; -DENABLE_OPENMP=ON \; -Dmaeparser_DIR=../libmaeparser-1.2.4-220427 \; -Dcoordgen_DIR=../coordgenlibs-3.0.0-220427 \; ../openbabel; `; `; cmake --build . --config Release -j; `; ## How to fix; - Apply following patch. It does not tested on any other linux distribution or OS than Ubuntu 18.04.; [adjust-dependencies.patch.txt](https://github.com/openbabel/openbabel/files/9179786/adjust-dependencies.patch.txt). ## Note; - There's an another static build issue(https://github.com/openbabel/openbabel/issues/2377), but this issue does not identical to it.; - libxml2 relies on libicu for processing character set related functionality. I think it's libxml2 bug that its dependency is not explicitly set, but for workaround we can try to find and use it.; - libxml2 relies on liblzma for processing LZMA-compressed files. Yes, it has similar issues mentioned above.; - It seems that the command binaries are reference dynamic loading functions(libdl) even static build. It causes error without removing BUILD_SHARED condition like following log. And it moved to the end of libs variable, because it should be located on last position of library chain.; [error-libdl.log](https://github.com/openbabel/openbabel/files/9179932/error-libdl.log)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2513:2071,test,tested,2071,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2513,4,"['log', 'test']","['log', 'tested']"
Testability,"). My jar file library contains openbabel.jar and other jar files required for the application to run in the lib directory. . I complied java bindings for openbabel using the command ; ```; sudo cmake /home/vin/openbabel2.4 ; -DCMAKE_INSTALL_PREFIX=~/Tools ; -DCMAKE_BUILD_TYPE=DEBUG ; -DJAVA_BINDINGS=ON ; -DEIGEN3_INCLUDE_DIR=/home/vin/Eigen3 ; -DSWIG_EXECUTABLE=/usr/bin/swig ; -DRUN_SWIG=ON; sudo make; ```. The compilation went well and took the libopenbabel_java.so and libopenbabel.so from the build directory and packed it along with my application in the directory (app/rescources) and specified the path to the app/resources directory in the source code (system.load(""/home/vin/app/resources/libopenbabel_java.so"")) of my application for performing an openbabel task. When I run my application jar file (app.jar) and perform an openbabel task (generate conformers) I am getting the below error . Exception in thread ""AWT-EventQueue-0"" java.lang.UnsatisfiedLinkError: /home/praktikant/OPAS_ALPHA_1.0/resources/libopenbabel_java.so: **/home/praktikant/OPAS_ALPHA_1.0/resources/libopenbabel_java.so: undefined symbol: _ZTVN9OpenBabel30OBMinimizingRMSDConformerScoreE**. I am not sure that it is a bug in openbabel or am I missing something in the java bindings compilation? I have attached the CMakeCache.txt; [CMakeCache.txt](https://github.com/openbabel/openbabel/files/2192825/CMakeCache.txt). I also looked into the Java bindings trouble #1102 in the issues, it is some what close but not exactly the same. Thank you for your time. <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1868:2791,test,test,2791,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1868,1,['test'],['test']
Testability,"); ![screen shot 2015-03-09 at 5 14 38 pm](https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png). And the Cmake Log is like following:; Using included inchi library.; checking for module 'cairo'; package 'cairo' not found; Could NOT find Cairo. PNG output will NOT be supported.; GUI will not be built; CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_P",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:1177,test,test,1177,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['test'],['test']
Testability,"* [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: `3.0.0` (installed using `conda` and the `conda-forge` channel); Operating system and version: macOS 10.15. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. I expect `pybel.readfile` to work with multi-model PDB files as it does for SDF and MOL2 files. For the following test PDD; ```text; MODEL 1; HETATM 1 C UNL 1 5.100 4.809 -9.314 1.00 0.00 C; HETATM 2 C UNL 1 4.758 6.074 -9.583 1.00 0.00 C; ENDMDL; MODEL 2; HETATM 1 C UNL 1 5.125 4.901 -9.530 1.00 0.00 C; HETATM 2 C UNL 1 4.570 6.075 -9.852 1.00 0.00 C; ENDMDL; END; ```. I expect the following code to work:; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]. asseret len(obmols) == 2; ```. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. The previous code snippet fails with an `AssertionError`:; ```python; AssertionError Traceback (most recent call last); <ipython-input-3-119b3d6fa691> in <module>; ----> 1 assert len(obmols) == 2. AssertionError:. ```. The reason is that `len(obmols)` is equal to `3` and the last molecule is empty. The following code; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]; for obmol in obmols:; print(obmol, obmol.OBMol.NumAtoms(), obmol.OBMol.NumBonds()); ```. produces the following output:. ```text; C#C	test.pdb; 2 1; C#C	test.pdb; 2 1; 	test.pdb; 0 0. ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. See above. ## Comments. The code failing above works as expected",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2097:410,test,test,410,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2097,2,['test'],['test']
Testability,**Description:**; When converting this file (regardless of end-of-line style and encoding) there is an infinite loop:; https://pastebin.com/6W56gJ9r; Changing the format of the penultimate line (222) of the file solves the problem:; https://pastebin.com/NUBUSLkd. **Steps to reproduce:** obabel -ipdb bug.pdb -ocml -O bug.cml (or any other format).; [source_files.zip](https://github.com/openbabel/openbabel/files/3848593/source_files.zip). I think there is some problem with parsing the file when reading. This problem always occurs on >=222 lines of the file in the original formatting (the first file). If there are less than 222 lines in the file then the problem does not occur. **OpenBabel verison:** 3.0.0 (2.4.1 – works fine).; **OS:** Linux x86_64 (others not tested),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2083:769,test,tested,769,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2083,1,['test'],['tested']
Testability,"**Is your feature request related to a problem? Please describe.**; Can OpenBabel reassign a carbon atom to be radical and list it in the `.mol` file with `RAD`?. **Describe the solution you'd like**; As mentioned in an earlier thread [here](https://github.com/openbabel/openbabel/issues/2526), `. mol` and `.sdf` files may include information about atom's charges and state as a radical, the indicated with the keyword `RAD` and `CHG`. . With [ChemDrawJS](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#), I created `.mol` files about the methyl cation, methyl radical, and methyl carbanion. Because ChemDraw's export is implicit about the hydrogen atoms, I run . ```shell; $ obabel input.mol -h --gen3d -O output.mol; ```. to yield files with explicit hydrogen atoms instead. Then however I wonder. For one, to process . ```bash; $ obabel *.mol -ocan; [CH3-]	methyl carbanion; [CH3+]	methyl cation; [CH3]	methyl radical; 3 molecules converted; ```. yields the SMILES strings in the anticipated pattern. Submitting such a list by. ```bash; $ obabel smiles_list.smi -omol; ```. however regenerates an entry about the methyl radical where `M RAD 1 1 2` *is missing* while `M CHG 1 1 -1` about the carbanion and `M CHG 1 1 1` about the carbcation are rewritten. **Describe alternatives you've considered**; So far, I did not identify an alternative. **Additional context**; The test data processed are attached in the .zip archive below. The observations refer to openbabel 3.1.1 -- Mar 29 2022 as provided by the repositories of Linux Debian 12/bookworm (branch testing). [2022-08-18_methyl_series.zip](https://github.com/openbabel/openbabel/files/9375696/2022-08-18_methyl_series.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2528:1391,test,test,1391,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2528,2,['test'],"['test', 'testing']"
Testability,"**Is your feature request related to a problem? Please describe.**; Drawing inspiration from [datawarrior](https://openmolecules.org/datawarrior/index.html) I wonder if processing .sdf with atomic flexibility, i.e. a particular atom could be either a carbon, or a nitrogen, were in future scope of openbabel e.g. to generate .png and .svg if one surveys a library of molecules. The very same .sdf (attached below) read by datawarrior:. ![example_dw](https://github.com/openbabel/openbabel/assets/19709084/0f41cb4b-a3c2-47d9-b18e-55b3e2bf80f2). and in openbabel (Open Babel 3.1.1 -- Jan 4 2023 -- 09:58:24, packaged by DebiChem for Linux Debian 13/trixie, branch testing):. ![obabel](https://github.com/openbabel/openbabel/assets/19709084/47ccc6c9-eb5d-4589-b644-e18fbbf9b8a5). **Describe the solution you'd like**; If useful to implement into openbabel, a similar extension of the site into `[C, N]`, or (if there is too little space to display all atomic symbols) a place holder which (similar as a figure caption) expands similar like a list, at the bottom of the illustration. **Describe alternatives you've considered**; So far, I worked with files of said flexibility with DataWarrior (cross platform), or Symyx Draw (Windows). **Additional context**. An example structure: . [compound_50.sdf.txt](https://github.com/openbabel/openbabel/files/12428083/compound_50.sdf.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2621:662,test,testing,662,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2621,1,['test'],['testing']
Testability,"**Is your feature request related to a problem? Please describe.**; Our code uses on Openbabel for 3D and 2D processing of crystal molecular structures. For effective unit testing, we need a way to directly compare Molecule objects. A pertinent example is the `Atoms` object in the `ase` Python package, which implements an equality operator via [`__eq__`](https://wiki.fysik.dtu.dk/ase/_modules/ase/atoms.html). **Describe the solution you'd like**; I propose that the OBMol class includes a `.compare` member function for comparing two OBMol objects, assessing positions, atom types, unit cells, and periodic boundary conditions. Additionally, for Pybel, implementing an overloaded equality operator would be beneficial. **Describe alternatives you've considered**; I am happy to assist with this implementation and contribute a PR. In fact I thought of implementing this feature internally within our project, but I believe integrating it into Openbabel would be more beneficial for the community and ensure better long-term maintenance.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2713:172,test,testing,172,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2713,1,['test'],['testing']
Testability,**When merged this pull request will:**; - Prevent parser from matching ` Dipole orientation:` if no input orientation was printed.; - `obabel H2O_freq.log -O H2O.cml` work with [H2O_freq.log](https://github.com/openbabel/openbabel/files/8307662/H2O_freq.log),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2456:152,log,log,152,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2456,3,['log'],['log']
Testability,"+ x86_640"":; syntax error, unexpected exp_NUMBER, expecting $end (8); Call Stack (most recent call first):; cmake/modules/MacroEnsureVersion.cmake:95 (NORMALIZE_VERSION); CMakeLists.txt:248 (macro_ensure_version). CMake Error at cmake/modules/MacroEnsureVersion.cmake:76 (MATH):; math cannot parse the expression: ""x86_646*10000 + x86_644*100 + x86_640"":; syntax error, unexpected exp_NUMBER, expecting $end (8); Call Stack (most recent call first):; cmake/modules/MacroEnsureVersion.cmake:95 (NORMALIZE_VERSION); CMakeLists.txt:249 (macro_ensure_version). CMake Error at cmake/modules/MacroEnsureVersion.cmake:76 (MATH):; math cannot parse the expression: ""x86_646*10000 + x86_644*100 + x86_640"":; syntax error, unexpected exp_NUMBER, expecting $end (8); Call Stack (most recent call first):; cmake/modules/MacroEnsureVersion.cmake:95 (NORMALIZE_VERSION); CMakeLists.txt:250 (macro_ensure_version). -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found PkgConfig: /usr/bin/pkg-config (found version ""0.29.2"") ; -- Checking for module 'cairo'; -- Found cairo, version 1.14.10; -- Found Cairo: /usr/lib/libcairo.so ; -- Cairo found. PNG output will be supported.; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets found => GUI will be built; -- Found PythonInterp: /usr/bin/python (found version ""2.7.13"") ; -- Configuring incomplete, errors occurred!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1624:4110,Test,Test,4110,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1624,10,['Test'],['Test']
Testability,"- 01:08:00 up 49 days, 6:12, 1 user, load average: 4,45, 1,46, 1,11; Tasks: 362 total, 3 running, 357 sleeping, 1 stopped, 1 zombie; %Cpu(s): 98,8 us, 1,2 sy, 0,0 ni, 0,0 id, 0,0 wa, 0,0 hi, 0,0 si, 0,0 st; MiB Mem : 31656,0 total, 1710,4 free, 8584,8 used, 21360,8 buff/cache; MiB Swap: 2048,0 total, 264,9 free, 1783,1 used. 20925,8 avail Mem . PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 2326554 merzky 20 0 127428 28980 16392 R 378,7 0,1 0:47.11 obabel ; 2326556 merzky 20 0 127428 28960 16372 R 367,1 0,1 0:46.73 obabel ; [...]; ```; (the node has 4 cores / 8 threads). ## Steps to Reproduce; Either use the commands above, or open two terminals and run two openbabel instances in quick succession. Since the command runtime itself is very short, getting the timing right can be tricky, but the hangup happens every time if the second command is started within about 0.3 seconds after the first command. The problem does not depend on the input SMILES - but I did not test any other parameter configuration, and thus do not know if other usage modes are affected. If I run the obabel instances under `strace`, I see both looping over `FUTEX_WAIT/FUTEX_WAKE` right after cloning the threads:; ```; [...]; mmap(NULL, 8392704, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7fe909629000; mprotect(0x7fe90962a000, 8388608, PROT_READ|PROT_WRITE) = 0; clone(child_stack=0x7fe909e28cb0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tid=[2343280], tls=0x7fe909e29700, child_tidptr=0x7fe909e299d0) = 2343280; mmap(NULL, 8392704, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7fe908e28000; mprotect(0x7fe908e29000, 8388608, PROT_READ|PROT_WRITE) = 0; clone(child_stack=0x7fe909627cb0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tid=[2343281], tls=0x7fe909628700, child_tidptr=0x",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2262:2042,test,test,2042,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2262,1,['test'],['test']
Testability,"- 22:40:34; $ pip show openbabel; Name: openbabel; Version: 2.4.1; Summary: Python interface to the Open Babel chemistry library; Home-page: http://openbabel.org/; Author: Noel O'Boyle; Author-email: openbabel-discuss@lists.sourceforge.net; License: GPL; Location: [edited]; Requires: ; ```. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When I compute fingerprints using ECFP4, If I compute the same fingerprint for a compound many times, the result should always be identical, and the resulting tanimoto similarity = 1 for the same structure. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; If too many fingerprints are computed, the results become arbitrary: the same smile returns many different values. ; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; 1) create the following script, which computes the fingerprint for ""CCCCCCCCCC"" 300 times:; ```python3; import openbabel as ob; from pybel import Fingerprint. fingerprinter = ob.OBFingerprint.FindFingerprint(""ECFP4""); #fingerprinter = ob.OBFingerprint.FindFingerprint(""FP4""); smiles_parser = ob.OBConversion(); smiles_parser.SetInFormat(""smi""). def fp(smiles):; """"""; compute and return the fingerprint from a SMILES; """"""; mol = ob.OBMol(); smiles_parser.ReadString(mol, smiles); fp = ob.vectorUnsignedInt(); fingerprinter.GetFingerprint(mol, fp); return fp. for entry in [""C""*10] *300:; print(Fingerprint(fp(entry)).bits); ```; 2) run it to count the number of different results:; ```shell; python test_ob_ecfp4.py | sort | uniq | wc -l; # result for me is 18; ```. Please note that:; - if we use e.g. FP4 (or others",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1886:1936,test,test,1936,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1886,1,['test'],['test']
Testability,"- Gert Thijs <gert.thijs@silicos.com>; - openbabel 2.1.1; - Mac OS X 10.5 on x86_64. I have encountered a problem when using the phmodel that is linked to the type of the input file. I have a simple molecule in both a smiles (test.smi) and a sd file (test.sdf). When I convert them using obabel with the -p option for protonation I get two different results. This is illustrated in the steps below. macbook1:~ gert$ cat test.smi ; C[N+]1=CC=CC=C1	1. macbook1:~ gert$ cat test.sdf; 1; -OEChem-07030811492D. 7 7 0 0 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 N 0 3 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 2 7 1 0 0 0 0; 2 3 2 0 0 0 0; 3 4 1 0 0 0 0; 4 5 2 0 0 0 0; 5 6 1 0 0 0 0; 6 7 2 0 0 0 0; M CHG 1 2 1; M END; $$$$. When using the phmodel to convert the molecule, the positive charge on the nitrogen will be lost when starting from the SD file as an input ; while this is not the case with the smiles input file. . macbook1:~ gert$ obabel -h -p -isdf test.sdf -osmi 2> /dev/null; [CH3][n]1[cH][cH][cH][cH][cH]1	1; macbook1:~ gert$ obabel -h -p -ismi test.smi -osmi 2> /dev/null; [CH3][n+]1[cH][cH][cH][cH][cH]1	1. When only adding hydrogens, there is no difference between the two generated smiles and the nitrogen still has a positive charge. Any idea where this difference might come from? . Many thanks,; Gert Thijs. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/785:226,test,test,226,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/785,6,['test'],['test']
Testability,"- Support Hermann-Mauguin notation space groups with spaces and also; the unspecified default space group.; - HM space group is enclosed within parentheses and can contain space; between them as per the given format details in -; http://hincklab.uthscsa.edu/html/soft_packs/msi_docs/insight980/formats980/ClassicFiles.html.; ; The previous code didn't recognize such a spacegroup as it strictly; looked for 8 fields after tokenizing them using default delimiters as; space, tab, newline.; - It is legal to have .car files with PBC=ON and no space group defined; in the fifth line and just have PBC and a,b,c,alpha,beta,gamma; parameters. Such structure is considered to have lowest symmetry; space-group as P1. This means there are no symmetry operations in play; and all atoms are explicit within the unit cell. The .car files for; H2O and polymers fall under this category since they are amorphous but; are periodic.; - Added tests in new format to ensure this is working.; - I found following tests in openbabel:master already fail. So this has nothing to do with this change when you address my request.; ; ```; 11 - test_builder_1 (Failed); 12 - test_builder_2 (Failed); 96 - test_charge_mmff94_1 (Failed); 100 - test_ffgaff_1 (Failed); 101 - test_ffghemical_1 (Failed); 104 - test_ffuff_1 (Failed); 112 - test_logp_psa_1 (Failed); 126 - inchiSamples.sdf_Test (Failed); 127 - inchiSamplesTechMan.sdf_Test (Failed); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/26:928,test,tests,928,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/26,2,['test'],['tests']
Testability,"- Support Hermann-Mauguin notation space groups with spaces and also; the unspecified default space group.; - HM space group is enclosed within parentheses and can contain space; between them as per the given format details in -; http://hincklab.uthscsa.edu/html/soft_packs/msi_docs/insight980/formats980/ClassicFiles.html.; ; The previous code didn't recognize such a spacegroup as it strictly; looked for 8 fields after tokenizing them using default delimiters as; space, tab, newline.; - It is legal to have .car files with PBC=ON and no space group defined; in the fifth line and just have PBC and a,b,c,alpha,beta,gamma; parameters. Such structure is considered to have lowest symmetry; space-group as P1. This means there are no symmetry operations in play; and all atoms are explicit within the unit cell. The .car files for; H2O and polymers fall under this category since they are amorphous but; are periodic.; - Added tests to ensure this is working.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/25:928,test,tests,928,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/25,1,['test'],['tests']
Testability,"- Use rapidjson instead of json-cpp.; - Better method for including the JSON library: Instead of including the full source in the Open Babel repository, CMake looks for rapidjson on the system. If it doesn't find it, it downloads the latest version on demand and uses that. This is also a possible model for how the InChI code could work.; - Better detection of supported native CPU optimizations at compile time (used by rapidjson).; - Convert the existing PubChem and ChemDoodle JSON formats to use rapidjson.; - Fix a few minor bugs and add proper tests for the existing JSON formats. Should hopefully be faster:. ```; (jsoncpp) $ python -m timeit -n 1000 -v 'import pybel;list(pybel.readfile(""pcjson"",""CID_6857552_2D.json""))'; raw times: 2.15 1.45 1.45; 1000 loops, best of 3: 1.45 msec per loop; ```. ```; (rapidjson) $ python -m timeit -n 1000 -v 'import pybel;list(pybel.readfile(""pcjson"",""CID_6857552_2D.json""))'; raw times: 1.55 0.818 0.818; 1000 loops, best of 3: 818 usec per loop; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1776:551,test,tests,551,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1776,1,['test'],['tests']
Testability,"- [ X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: master; Operating system and version: macos and linux. ## Expected Behavior; Aromatic ring should be detected for 1,2,3-trimethyl-imidazolium from coordinates. . ## Actual Behavior; The aromatic ring is detected if a correct SD file is presented, but not a Gaussian log file. ## Steps to Reproduce; % obenergy -ff GAFF 123-trimethyl-imidazolium.log.gz; ==============================; *** Open Babel Warning in PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders. A T O M T Y P E S. IDX	TYPE	RING; 1	c2	AL; 2	c2	AL; 3	n3	AL; 4	cc	AL; 5	n3	AL; <snip>. whereas ; % unzip 123-trimethyl-imidazolium.zip; % obenergy -ff GAFF 123-trimethyl-imidazolium.sdf . A T O M T Y P E S. IDX	TYPE	RING; 1	cd	AR; 2	cc	AR; 3	na	AR; 4	cc	AR; 5	na	AR; <snip>. [123-trimethyl-imidazolium.log.gz](https://github.com/openbabel/openbabel/files/6411257/123-trimethyl-imidazolium.log.gz). [123-trimethyl-imidazolium.zip](https://github.com/openbabel/openbabel/files/6411259/123-trimethyl-imidazolium.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2366:398,log,log,398,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2366,4,['log'],['log']
Testability,"- [ ] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: macOS Catalina 10.15.7. ## Expected Behavior; I expect my code to generate a pdb file with xyz coordinates included. When I try the same operation with the OpenBabel CLI, I have no issue. This is only a problem with the python interface. ## Actual Behavior; A PDB file is generated but there are no coordinates. ## Steps to Reproduce. I am running the following code. I have tried several different valid SMILES. ``` python; obConversion = openbabel.OBConversion(); obConversion.SetInAndOutFormats(""smi"", ""pdb""). mol = openbabel.OBMol(); obConversion.ReadString(mol, 'C'); mol.AddHydrogens(); obConversion.AddOption('gen3d', obConversion.OUTOPTIONS) # I have also tried INOPTIONS and GENOPTIONS; obConversion.WriteFile(mol, f""TEST.pdb""); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2419:861,TEST,TEST,861,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2419,1,['TEST'],['TEST']
Testability,"- [ ] I believe this to be a bug with Open Babel; - [X] I believe this to be a bug with Open Babel's CI framework; - [ ] This is a feature request. ## Environment Information; GitHub. ## Expected Behavior; Automated appveyor tests should evaluate the code under test. ## Actual Behavior; Automated appveyor tests of new PRs are failing over an issue with the test environment, independently of the code under test. Example diagnostic message:. > LINK : fatal error LNK1104: cannot open file 'C:\msvc-dependencies-master\libs-common\i386\zlib1.lib' [C:\openbabel\build\src\openbabel.vcxproj]. ## Steps to Reproduce; Submit a pull request.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2222:225,test,tests,225,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2222,5,['test'],"['test', 'tests']"
Testability,"- [ ] I believe this to be a bug with Open Babel; - [x ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Would it be possible to add support for a common extension to the '.xyz' file format, the (sometimes called 'xyz+vec' ) format, e.g:. 2; Comment line; H 1.0 0.0 0.0 1.0 0.0 0.0; H -1.0 0.0 0.0 -1.0 0.0 0.0. Where the last 3 numbers in each atom record are the Cartesian components of a vector attached to the atom in question. The idea would then be to provide this per-atom vector information via the API. A useful generalization of this might be might be per-atom scalars (1 extra column), per-atom vectors (3 extra columns) and per-atom (3x3) tensors (9 extra columns). . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1703:1204,test,test,1204,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1703,1,['test'],['test']
Testability,"- [ x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: all versions since migration to git, including git HEAD; Operating system and version: Linux, various flavors and versions. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ```; perl Makefile.PL; make; ```; expect success. ## Actual Behavior. g++ gives the message. error: openbabel/babelconfig.h: No such file or directory. The problem is that Makefile.PL depends on the environment variables @ENV{""SRC_DIR""} and @ENV{""OBJ_DIR""} being set, but there is nothing which causes them to be set, and no instructions that you should set them manually. This causes the Include path to be set incorrectly. Empirically, setting them like this leads to a successful build:. ```SRC_DIR=../../build OBJ_DIR=../../build perl Makefile.PL```. Although I don't know if that is the best way to do it. ## Steps to Reproduce. ```; rm build -r; mkdir build; cmake .. -DPERL_BINDINGS=ON -DRUN_SWIG=ON -DCMAKE_INSTALL_PREFIX=/home/jjanes/openbabel_1711fbe82cf4c3b7b; make -j8; make test; cd ../scripts/perl; perl Makefile.PL; make; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1688:1133,test,test,1133,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1688,1,['test'],['test']
Testability,"- [* ] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: macOS Big sur. ## Expected Behavior; $ obabel -ixyz 039863424.b3lyp@pm6.xyz -ocan; CCCCC[NH]1C(=C/C(=C\2/C(=O)NC(=O)[N]C2=O)/C=C1C)C PUBCHEM 039863424 B3LYP 6-31G(d) at PM6 optimized geometry. ## Actual Behavior; $ obabel -ixyz 039863424.b3lyp@pm6.xyz -ocan; CCCCC[NH]1C(=C/C(=C/2/C(=O)NC(=O)[N]C2=O)/C=C1C)C PUBCHEM 039863424 B3LYP 6-31G(d) at PM6 optimized geometry. $ python3 ./test.py --target 039863424.b3lyp@pm6.xyz | sort | uniq; CCCCC[NH]1C(=C/C(=C/2\C(=O)NC(=O)[N]C2=O)/C=C1C)C; CCCCC[NH]1C(=C/C(=C\2/C(=O)NC(=O)[N]C2=O)/C=C1C)C. ## Steps to Reproduce; I attached a script ""test.py"" and ""039863424.b3lyp@pm6.xyz "". then type ; $ python3 ./test.py --target 039863424.b3lyp@pm6.xyz | sort | uniq",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2381:517,test,test,517,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2381,3,['test'],['test']
Testability,"- [X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Windows 10 1803. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. --> Conversion from .mol2 file to .pdb file should produce a ""normal"" structure. If the conversion is performed on a Linux environment, the so-produced structure is perfectly fine. However, on a Windows environment, the structure is completely messed up. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior --> ; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; --> The initial .mol2 file is PLA_DP8.mol2. On a Windows and Linux environement, the following commands were performed:. > obabel -i mol2 PLA_DP8.mol2 -o pdb -O PLA_DP8.pdb. The conversion has also been performed using Open Babel GUI on Windows and the result was the same as for the command line. The ouput from the Linux conversion (OK structure) is DP8.pdb and the ouput of the Windows conversion is Messed_Up.pdb. Is there something we are doing wrong? Is it a bug with Openbabel?. Thank you!; [Bug_OpenBabel.zip](https://github.com/openbabel/openbabel/files/2615051/Bug_OpenBabel.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1911:902,test,test,902,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1911,1,['test'],['test']
Testability,"- [X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: master, broken as of eeca1427135316c22dee3733a4da44ea19d0a052; Operating system and version: tested on Ubuntu 18.10 and CentOS 6. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; when I convert a SMILES file to a MOL, the generated layout is wrong. For instance, if I have a Benzene molecule:. ```; C1=CC=CC=C1; ```. If I convert it to the MOL format with the `--gen2D` option:. ```; obabel -i ""smi"" ""/tmp/ippidb-web/toto.smi"" -o ""sdf"" --gen2d; ```. I expect the coordinates to form a perfect hexagon:. ```. OpenBabel01151911112D. 6 6 0 0 0 0 0 0 0 0999 V2000; -0.8660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.7321 -0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.7321 1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 1.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.0000 1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1 6 1 0 0 0 0; 1 2 2 0 0 0 0; 2 3 1 0 0 0 0; 3 4 2 0 0 0 0; 4 5 1 0 0 0 0; 5 6 2 0 0 0 0; M END; $$$$; ```; ## Actual Behavior; As of eeca1427135316c22dee3733a4da44ea19d0a052, the generated coordinates are wrong:. ```. OpenBabel01151911162D. 6 6 0 0 0 0 0 0 0 0999 V2000; -0.9710 0.3495 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.9710 -0.6309 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.8201 -1.1212 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -2.6692 -0.6309 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -2.6692 0.3495 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 -0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1 6 1 0 0 0 0; 1 2 2 0 0 0 0; 2 3 1 0 0 0 0; 3 4 2 0 0 0 0; 4 5 1 0 0 0 0; 5 6 2 0 0 0 0; M END; $$$$; ```; If you draw it, it's easier to spot:. ```; bin/obabel -i ""smi"" ""/tmp/ippidb-web/toto.smi"" -o ""ascii"" --gen2d; ```. ```; ______ __ ; | \___________ | \___ ; | \___________ | \___ ; | \___________ | \____ ; | ______ | \___________ \___ ; | \_________ | | \_____________ ; | \_________ | | \_____ ;",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1921:225,test,tested,225,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1921,1,['test'],['tested']
Testability,"- [X] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1 (3.1.1+dfsg-6+b1); Operating system and version: Linux Debian 12/bookworm (branch testing). ## Expected Behavior; When submitting a list of SMILES for conversion, I prefer OpenBabel's warnings sent to the CLI to appear directly after the entry to be revised. E.g. with `check01.smi`. ```bash; $ awk '{print}' check01.smi; CO[C@@H]([C@@H](C[C@H]([C@@H]1OC)O)O)C1OC; COC(Cc(c(O)c(cc1OC)C(OC(c(cc(c(O)c2)OC)c2OC)=O)=O)c1O)=O; CC(OC(CCC(OC(c(ccc(O[C@@H](C(C(C=CC1)=C1O)=O)C(O)=O)c1)c1O)=O)=O)=O)=O; CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O; ```. to yield a log like. ```bash; $ awk '{print}' check01.smi | obabel -ismi -ocan --addinindex; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	1; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	2; O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	3; COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	4; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond; 4 molecules converted; ```; ## Actual Behavior; Instead, above `check01.smi` is processed with a report as if the second entry would require a revision, i.e. ```bash; $ awk '{print}' check01.smi | obabel -ismi -ocan --addinindex; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	1; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	2; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	3; COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	4; 4 molecules converted; ```. ## Steps to Reproduce; Processing `check01.smi` line by line, it actually is entry 4 (i.e., n + 2) OpenBabel's warning refers to:. ```bash; $ awk 'NR == 4' check01.smi | obabel -ismi -ocan; ==============================; *** Open Babel Warni",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2455:186,test,testing,186,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455,2,"['log', 'test']","['log', 'testing']"
Testability,"- [X] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1 + commit 7de27f309db5f7ec026ef5c5235e5b33bf7d1a85; Operating system and version:; Ubuntu 20.10 development release. ## Expected Behavior; Test succeed on arm64 and ppc64el. ## Actual Behavior; ```; Running test/testobconv_writers.py ...; ..........................................................................................F..................................................; ======================================================================; FAIL: test_default (__main__.TestPCJSON); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""test/testobconv_writers.py"", line 2761, in test_default; self.assertWriters(self.fmt, """"""\; File ""test/testobconv_writers.py"", line 258, in assertWriters; test_write_string(self, mol, conv, expected_output, normalize); File ""test/testobconv_writers.py"", line 165, in test_write_string; test_case.assertMultiLineEqual(output.replace(""\r\n"", ""\n""), expected_output.replace(""\r\n"", ""\n"")); AssertionError: '{\n [1926 chars]102014\n ],\n ""y"": [[1070 chars]]\n}' != '{\n [1926 chars]102012\n ],\n ""y"": [[1070 chars]]\n}'; {; ""PC_Compounds"": [; {; ""atoms"": {; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""element"": [; 6,; 6,; 6,; 6,; 6,; 6,; 8,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""bonds"": {; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5,; 6,; 1,; 2,; 3,; 4,; 5,; 7; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""order"": [; 2,; 1,; 2,; 1,; 2,; 1,; 1,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""coords"": [; {; ""type"": [; 1; ],; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""conformers"": [; {; ""x"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""y"": [; 1.5846,; 1.5",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2246:242,Test,Test,242,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246,8,"['Test', 'assert', 'test']","['Test', 'TestPCJSON', 'assertWriters', 'test']"
Testability,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: macOS Sierra 10.12.6 (Also possibly Ubuntu). ## Expected Behavior; I expect use of the -p option to produce valid output structures (e.g., SMILES strings). ## Actual Behavior. Some input molecules give nonsensical output molecules. Like this (three bonds to oxygen atom):. ![image](https://user-images.githubusercontent.com/18405649/29100505-f1858bbe-7c79-11e7-8329-ddc5932da22d.png). ## Steps to Reproduce. Contents of `test.smi`:. ```O1C(=O)/C(=C/2\OCC(C2)C)/C(C1)C	134784_375```. Reasonable input structure:. ![image](https://user-images.githubusercontent.com/18405649/29100514-0039e9de-7c7a-11e7-871e-a34fe4b4e74b.png). Command:. ```; > obabel -d -p 7 -ismi test.smi -ocan; CC1C[O]=C(C1)C1=C([O-])OCC1C	134784_375; 1 molecule converted; ```. Unreasonable structure (three bonds to oxygen atom):. ![image](https://user-images.githubusercontent.com/18405649/29100505-f1858bbe-7c79-11e7-8329-ddc5932da22d.png). Ok at very acidic pH:. ```; (! 518)-> obabel -d -p 1 -ismi test.smi -ocan; CC1CO/C(=C\2/C(C)COC2=O)/C1	134784_375; 1 molecule converted; ```. ![image](https://user-images.githubusercontent.com/18405649/29100562-3baabbd8-7c7a-11e7-9a31-2dc472b318dc.png). Thanks!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1611:589,test,test,589,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1611,3,['test'],['test']
Testability,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0 to 3.1.1; Operating system and version: Ubuntu Server 20.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Proper conversion of G16 file to xyz. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; > obabel -ig16 1.log -oxyz -O1.xyz; 0 molecules converted. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; An example g16 output file is attached. obabel does (consistently) not convert frequency calculation files such as this one. Other g16 files do convert properly.; [1.log](https://github.com/openbabel/openbabel/files/5146293/1.log)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2277:541,log,log,541,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2277,4,"['log', 'test']","['log', 'test']"
Testability,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.1. ## Expected Behavior; 1. OpenBabel should not attempt out-of-bounds array accesses.; 2. OpenBabel's tests should pass when compiled with GCC 8 and the `-Wp,-D__GLIBCXXX_ASSERTIONS` option. ## Actual Behavior; While parsing ""param"" lines, `OBForceFieldUFF::ParseParamFile()` attempts to access a third byte of each atom type string, even when there are only two (including C string terminator). The deuterium parameters in the default UFF.prm file provided by OpenBabel trigger this misbehavior in practice. If symbol `__GLIBCXX_ASSERTIONS` is defined when building OpenBabel with GCC 8 then tests `test_regressions_1794` and `test_ffuff_1` fail. ## Steps to Reproduce; The access attempt is visible by inspection at [forcefields/forcefielduff.cpp:1650](https://github.com/openbabel/openbabel/blob/master/src/forcefields/forcefielduff.cpp#L1650) (it's even commented), and the single-character deuterium atom type can be seen at [data/UFF.prm:152](https://github.com/openbabel/openbabel/blob/master/data/UFF.prm#L152). The test failures can be reproduced by building with g++ of GCC 8.3, and providing hardening options via the environment, then running the tests. For example,. ```; mkdir build; cd build; export CXXFLAGS=""-O2 -Wp,-D_GLIBCXX_ASSERTIONS""; cmake ..; make; make test; ```. ## Additional Comments; I discovered this while packaging OpenBabel into an RPM. By default, RedHat's rpm macros supply hardening options to software builds, including defining the `__GLIBCXX_ASSERTIONS` macro.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2223:280,test,tests,280,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2223,5,['test'],"['test', 'tests']"
Testability,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.1. ## Expected Behavior; After a successful build, all tests should pass. ## Actual Behavior. > 99% tests passed, 1 tests failed out of 229; > ; > Total Test time (real) = 137.16 sec; > ; > The following tests FAILED:; > 218 - pytest_distgeom (Failed); > . ## Steps to Reproduce; 1. Perform an ordinary `cmake` / `make` build.; 2. in the build directory, run `make test`. ## Additional Comments; On CentOS 8, the test runner apparently recognizes that the platform Python is Python 3.6, and uses that to run this test. Running the failing test directly with Python 3 also fails, and this shows that the issue arises from incorrect (for Python 3) character escaping. The same test passes in the same environment when run with Python 2.7.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2217:232,test,tests,232,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2217,10,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: HEAD (since 8940c9af51650b188185b05652d334d6a52827ca ); Operating system and version: Ubuntu 18.04. ## Expected Behavior; In 124d99c191493c376fa71daee0395d7a4b81be36 , we would see the atom names and chain for a pdb file when iterating over atoms, for my example below, you would see atom name and then chain. ```; N19; A; C10; A; C6 ; A; C5 ; A; C32; A; N33; A; C4 ; A; C3 ; A; C2 ; A; CL1 ; A; C7 ; A; HN19; A; H10; A; H10A; A; H32; A; H32A; A; HN33; A; HN3A; A; H4 ; A; H3 ; A; H7 ; A; H2 ; A; ```. ## Actual Behavior; We have a blank chain and elements as atom names. ```; N ; ; C ; ; C ; ; C ; ; C ; ; N ; ; C ; ; C ; ; C ; ; CL ; ; C ; ; H ; ; H ; ; H ; ; H ; ; H ; ; H ; ; H ; ; H ; ; H ; ; H ; ; H ; ; ```. ## Steps to Reproduce; We use the file test/files/00T_ideal_het.pdb in the openbabel for the example. ```; import pybel. mol = next(pybel.readfile('pdb', 'src/openbabel/test/files/00T_ideal_het.pdb')); for atom in mol:; print(atom.residue.OBResidue.GetAtomID(atom.OBAtom)); print(atom.residue.OBResidue.GetChain()); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1912:885,test,test,885,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1912,2,['test'],['test']
Testability,"- [X] Reaching Out; - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Oracle Enterprise Linux 8.1.4; SWIG Version: 4.0.2; PHP Version: 8.1.4. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Using SWIG Development version 4.1 to build PHP wrapper. Worked perfectly with SWIG 4.0.2 and PHP 7.4.x. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; No PHP wrapper being generated. Not sure if this is a SWIG issue or an OpenBabel issue; We had posted and issue on [SWIG 2270](https://github.com/swig/swig/issues/2270) . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2469:1002,test,test,1002,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2469,1,['test'],['test']
Testability,"- [X] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: macOS El Capitan 10.11.6. I have been trying to perform a conformer search using confab in openbabel. However, I am getting some duplicates (390 conformers in total). I would like to know if I can somehow select the lower energy conformers (maybe the 30 lowest in energy) and save them in a separate sdf file. Also, is it possible to eliminate the duplicates or sort the conformers by energy?. my commands:. To generate the conformers:; obabel input.sdf -O confs.sdf --confab --conf 100000 --verbose. ..Input format = sdf; ..Output format = sdf; ..RMSD cutoff = 0.5; ..Energy cutoff = 50; ..Conformer cutoff = 100000; ..Write input conformation? False; ..Verbose? True. **Molecule 1; ..title = try; ..number of rotatable bonds = 6; ....rotor 1 from 5 to 6 has 3 values; ....rotor 2 from 6 to 7 has 3 values; ....rotor 3 from 2 to 5 has 3 values; ....rotor 4 from 7 to 8 has 3 values; ....rotor 5 from 1 to 2 has 3 values; ....rotor 6 from 8 to 9 has 3 values; ..tot conformations = 729; ..tot confs tested = 729; ..below energy threshold = 390; ....tree size = 483 confs = 390; ....new tree size = 821 confs = 390; ..generated 390 conformers. To minimize the obtained conformers:; obabel confs.sdf -O confs_min.sdf --minimize --steps 1500 --sd --log. Thank you!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2274:1117,test,tested,1117,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2274,2,"['log', 'test']","['log', 'tested']"
Testability,"- [x ] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10 (20H2). ## Expected Behavior; Expect that a peptide sequence provided in FASTA format will be converted to SMILES, as reported in the supplement to the paper by Iwaniak, A., Minkiewicz, P., Darewicz, M., Sieniawski, K., & Starowicz, P. (2016). BIOPEP database of sensory peptides and amino acids. Food Research International, 85, 155-161. doi: 10.1016/j.foodres.2016.04.031). ## Actual Behavior; As also reported by shahik and fredrikw in issue ""smiles to fasta conversion"" #2359, the peptide sequence is converted to a nonsense open SMILES. For example the following input:. `>Test ARFF`; `ARFF`. produces the following SMILES output (either in the output pane or the GUI or in a file) :. `[H].[N].[C].[C].[O].[C].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[N].[C].[N].[N].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[C].[C].[C].[C].[H].[H].[H].[H].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[C].[C].[C].[C].[H].[H].[H].[H].[H].[H].[H].[H].[H].[O].[H]`. However, **IF** the 'Display in firefox' option is enabled before doing the conversion, then the output is instead:. `N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)O)Cc1ccccc1)Cc1ccccc1)CCCNC(=[NH2])N)C`. which creates the correct peptide structure when pasted into Marvin Sketch. Also, by default OpenBabel expects the FASTA to contain nucleotide sequences not amino acid sequences, so the input:. `>Test AR`; `AR`. produces the output:. `O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O[P@@](=O)([O])OC[C@H]1O[C]([C][C]1O)N1[C]=NC2=[C]N=C([N])N=C12)n1cnc2c(N)ncnc12.O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O)n1c(=O)[nH]c(=O)c(C)c1)N1C(=O)N=[C][C]=C1`. which does not represent the required peptide. I couldn't see any way to make OpenBabel treat the input FASTA as a peptide sequence, although it may exist. I guess provid",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2367:725,Test,Test,725,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2367,1,['Test'],['Test']
Testability,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 2.4.1 and 3.1.1; Operating system and version: ubuntu 20.4 LTS; Hardware Architecture: ARM64. ## Expected Behavior; I expect to convert the following `test.inchi` file which has the following content:; ```; InChI=1S/C24H27NO5S/c1-13-14(2)21-18(15(3)20(13)26)9-10-24(4,30-21)12-29-17-7-5-16(6-8-17)11-19-22(27)25-23(28)31-19/h5-8,19,26H,9-12H2,1-4H3,(H,25,27,28); ```; to its smiles format, using the following command:; ```; obabel -iinchi test.inchi -osmi; ```. ## Actual Behavior; Obabel freezes on `ARM64`. Though, it's working fine on `x86_x64` architecture",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2314:249,test,test,249,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2314,2,['test'],['test']
Testability,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1 (`master`); Operating system and version: Ubuntu 20.04. ## Expected Behavior; Calling the `.formula` attribute in Pybel should reflect the *current* state of the molecule. ## Actual Behavior; In Pybel, if you have called `.formula` once and then try to alter the molecule (adding/removing hydrogens), it will not update the `.formula` attribute. This happens because if the `""Formula""` attribute is already set, then `GetFormula()` just returns that attribute. One method of solving this would be to clear the `""Formula""` attribute when changes are made to the molecule. In my testing cases, this was only with `.addh()` and `.removeh()` (Discovered while testing for #2363.), but perhaps there are other modifying functions that would need to clear the `""Formula""` attribute?. ## Steps to Reproduce. ```python; >>> from openbabel import pybel; >>> mol = pybel.readstring(""smi"", ""C.[Ru]""); >>> mol.formula; 'CRu'; >>> mol.addh() # adding H after getting .formula; >>> mol.formula # attr(""Formula"") is already set, so not created; 'CRu'; >>> ; >>> mol = pybel.readstring(""smi"", ""C.[Ru]""); >>> mol.addh(); >>> mol.formula; 'CH4Ru'; >>> mol.removeh(); >>> mol.formula; 'CH4Ru'. ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2364:681,test,testing,681,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2364,2,['test'],['testing']
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1 ; Operating system and version: CentOS release 6.4 (Final). ## Expected Behavior; Extraction of coordinates from formatted checkpoint file of Gaussian 09:; ```; obabel -ifck b97d3tzvpp.optfreq.fchk -oxyz -O b97d3tzvpp.optfreq.xyz; ```. ## Actual Behavior; Produces the following error:; ```; ==============================; *** Open Babel Error in FCHKFormat::ReadMolecule(); Could not read the dipole moment from line #2524.; 0 molecules converted; ```. ## Steps to Reproduce. The issue seems to arise from the multiplicity 2 and the `freq` keyword. A normal optimisation has no issue in the conversion. The example is for the methyl radical, but can be reproduced for other radicals. (I'll test higher multiplicities if I have a chance.). The corresponding log file also has no problem. The corresponding files are attached:. - [b97d3tzvpp.optfreq.log](https://github.com/openbabel/openbabel/files/1577802/b97d3tzvpp.optfreq.log); - [b97d3tzvpp.optfreq.fchk.zip](https://github.com/openbabel/openbabel/files/1577811/b97d3tzvpp.optfreq.fchk.zip); - [b97d3tzvpp.optfreq.gjf.zip](https://github.com/openbabel/openbabel/files/1577812/b97d3tzvpp.optfreq.gjf.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1730:829,test,test,829,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1730,4,"['log', 'test']","['log', 'test']"
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: OS X 10.10.5. ## Expected Behavior; I expect that computing the ECFP2 fingerprint of a molecule should return the same list of values no matter how many times it is called. . ## Actual Behavior; On my machine the following reports a greater than 50% chance of getting a different list. (Both lists are sorted, and the same length, but there 2 values in the first list which aren't in the second, and vice versa.) ECFP4 and ECFP6 are also affected. With ECFP0 the lists are always identical. ## Steps to Reproduce; Run the following and notice a non-zero number of failures. ```; from __future__ import print_function; import openbabel as ob; import pybel. # PubChem 30000494 (but not limited to this case); mol = pybel.readstring(""smi"", ""CC1=C(C(=CC=C1)C)NC(=O)CN2CCN(CC2)CC(=O)N3CCC4=C(C3)C=CS4""); obmol = mol.OBMol. ob_fingerprint = ob.OBFingerprint.FindFingerprint(""ECFP2""). fp = ob.vectorUnsignedInt(); ob_fingerprint.GetFingerprint(obmol, fp); values1 = list(fp). num_tests = num_failed = 0; for i in range(10000):; fp = ob.vectorUnsignedInt(); ob_fingerprint.GetFingerprint(obmol, fp); values2 = list(fp); num_tests += 1. if values1 != values2:; num_failed += 1. print(""Failed"", num_failed, ""tests out of"", num_tests); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1557:1366,test,tests,1366,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1557,1,['test'],['tests']
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Ubuntu 18.04 - 4.15.0-43-generic. I previously reported a possible bug related to the aromatic ring perception algorithm (issue 1920). But, as it was not the only case I found, I decided to perform a broader evaluation of other ligands while using PDB files and to report all the issues at once. The result of this analysis is in the attachment. As previously, I noticed that OpenBabel 2.3.2 generated a correct output for the molecule I was analyzing, then I also decide to use this version in my tests. In all tests, I used the openbabel 2.4.1 library (python) for creating an OBMol molecule and then I printed the smiles for each one of the inputs (listed below). To check for possible errors of valence, charge, etc, I used the tool Chemicalize from Chemaxon (the figures in the attachment were obtained with this tool). First, I extract the ligand from the PDB file (all ligands and ids were informed in the attached file). Four different inputs were used to create the OBMol object:; 1) A .mol file obtained by converting the extracted file using OpenBabel 2.3.2.; 2) A .mol file obtained by converting the extracted file using OpenBabel 2.4.1. ; 3) The .pdb file. Function used: readfile(""pdb"", file); 4) The .pdb file as a string. Function used: readstring(""pdb"", pdb_block). Besides it, for each ligand I also evaluated the impact of creating the molecule without hydrogens and adding hydrogens according to some pH value. In the excel file, you'll find a column with the ligand information, one to indicate if I had used hydrogens and other to inform at which pH the hydrogens were added. Also, four other columns were added (one for each input). The red cells indicate if there is an incorrect aromatic perception. I believe these results can help you guys to detect what are the possible causes for these errors. I have n",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1925:666,test,tests,666,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1925,2,['test'],['tests']
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Ubuntu 18.04 - 4.15.0-43-generic. I tried to generate a SMILE string departing from the PDB file in attachment, but the program is generating an invalid output. I believe the problem is in the algorithm for aromatic ring perception as I also identified the same problem in other aromatic rings. In the attached example, the program does not identify one of the aromatic rings in the molecule X01 and generates an output containing a simple ring (not aromatic) and a Nitrogen (N04) with two double bonds. I also tested the same procedure in an older Open Babel version (2.3.2) and surprisingly the output generated was correct. Thus, I believe the bug was introduced in some of the newest versions. Outputs:; Version 2.4.1 (error): [N]1=C(N=C(NC=1)N)c1c(ccc(c1)C#N)O; Version 2.3.2 (ok): n1c(nc(nc1)N)c1c(ccc(c1)C#N)O. [error.txt](https://github.com/openbabel/openbabel/files/2757278/error.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1920:679,test,tested,679,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1920,1,['test'],['tested']
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0 - 3.1.1 installed via conda (channel: conda-forge); Operating system and version: Linux, Macos, and Windows, all run via GitHub Actions. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; - I read a pdb structure from the PDB file and use SMARTS pattern to find matching atoms; - In macos and linux the atoms look good and are consistent (the same in both systems); - In windows the results are different; - all packages and versions are in the same in all tested systems. ## Actual Behavior; - I expect the results are the same in linux, macos, and windows. What I get is:. ```; # list of matching atoms:; ubuntu-20.04 | [3, 5, 7, 9, 11, 13, 18, 19, 22, 23, 26, 28, 30, 32, 34, 36, 41, 42, 45, 46]; macos-latest | [3, 5, 7, 9, 11, 13, 18, 19, 22, 23, 26, 28, 30, 32, 34, 36, 41, 42, 45, 46]; windows-latest | [1, 3, 5, 7, 9, 11, 13, 14, 18, 19, 21, 22, 23, 26, 28, 30, 32, 34, 36, 37, 41, 42, 44, 45, 46]; ```; results from GitHub actions are available here:; - [ubuntu](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247794?check_suite_focus=true#step:5:7); - [macos](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247852?check_suite_focus=true#step:5:7); - [windows](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247885?check_suite_focus=true#step:5:7). ## Steps to Reproduce; Input pdb file and the script is available at: https://github.com/filipsPL/fingernat-openbabel-tests; - [the input pdb file for tests](https://raw.githubusercontent.com/filipsPL/fingernat-openbabel-tests/main/GG.pdb); - [the script](https://github.com/filipsPL/fingernat-openbabel-tests/blob/main/openbabel-smarts-tests.py)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2439:633,test,tested,633,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2439,9,['test'],"['tested', 'tests']"
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS-7.7. ## Expected Behavior; tests pass. ## Actual Behavior; test crashes at `testTemplates` in `testbindings.py`. I narrowed it down to the draw() function on the first and last smiles strings:; ""O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2""; ""O=C(CCN1C=CN=C1)N1C2CCC1CN(CC1CC3CCC1C3)C2"". I also tested with the most recent checkout from master, with the same results. The error is as follows:; ```; 186/190 Test #186: pybindtest_bindings ..............***Failed 0.29 sec; /tmp/vsc10009/build/OpenBabel/3.0.0/GCC-8.3.0-Python-3.7.4/openbabel-openbabel-3-0-0/scripts/python:/tmp/vsc10009/build/OpenBabel/3.0.0/GCC-8.3.0-Python-3.7.4/easybuild_obj/lib; ...==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; ....==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ..==============================; *** Open Babel Warning in IsValid; The molecule is not marked ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2138:202,test,tests,202,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138,6,"['Test', 'test']","['Test', 'test', 'testTemplates', 'testbindings', 'tested', 'tests']"
Testability,- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Windows 10. Version 3.0.0 and master worked correct on Debian Linux. ## Expected Behavior; A PDBQT output file. ## Actual Behavior; A PDBQT with mangled coordinates. Record example:. ATOM 1 N UNL 1 2261608.7291334600.251 0.000 0.00 0.00 +0.000 NA. ## Steps to Reproduce. [test.smi.txt](https://github.com/openbabel/openbabel/files/3898807/test.smi.txt). ```sh; obabel -i smi test.smi.txt --ph 7.0 --gen3d -m -O test.pdbqt; ```,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2101:440,test,test,440,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2101,4,['test'],['test']
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0; Operating system and version: Linux Ubuntu 20.04, gcc 9.3. ## Expected Behavior. No memory leak in this program:. ```c++; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>; int main(int argc,char **argv){; 	using namespace OpenBabel;; 	for(int i = 0; i != 10; ++i){; 		OBConversion in; ; 		in.SetInFormat(""xyz"");; 		OBMol m; ; 		in.ReadFile(&m, ""test.xyz"");; 	}; }; ```. ## Actual Behavior. 61,440 bytes are leaked. (this is proportional to the loop repetition, ~6k per read). ```bash; =2336866== Memcheck, a memory error detector; ==2336866== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==2336866== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info; ==2336866== Command: ./example; ==2336866== ; ==2336866== ; ==2336866== HEAP SUMMARY:; ==2336866== in use at exit: 326,095 bytes in 737 blocks; ==2336866== total heap usage: 21,590 allocs, 20,853 frees, 2,471,446 bytes allocated; ==2336866== ; ==2336866== LEAK SUMMARY:; ==2336866== definitely lost: 61,440 bytes in 10 blocks; ==2336866== indirectly lost: 0 bytes in 0 blocks; ==2336866== possibly lost: 0 bytes in 0 blocks; ==2336866== still reachable: 264,655 bytes in 727 blocks; ==2336866== suppressed: 0 bytes in 0 blocks; ==2336866== Rerun with --leak-check=full to see details of leaked memory; ==2336866== ; ==2336866== For lists of detected and suppressed errors, rerun with: -s; ==2336866== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0); ```. This is a serious bug for users of the library that will process many files. ## Steps to Reproduce. compile the above example, run valgrind. ```bash; c++ example.cpp; valgrind ./a.out; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370:496,test,test,496,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370,1,['test'],['test']
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: CentOS Linux 7 and Windows 10. ## Expected Behavior; I am trying to use openbabel to convert molecules from their SMILES format to their gaussian input format (.gjf) with 3D coordinates (--gen3d enabled). Tried different versions of openbabel: 2.4.1, 3.0, and the recent 3.1.0 release but all of these versions fail to accurately convert a type of structures. I am using Python 3 and openbabel through the command line. . ## Steps to Reproduce; For example, this is the line used:; obabel -:""C(=Cc1c2scnc2cc2ncsc12)c1cncc2ccccc12"" -O mol.gjf --gen3d. The expected structure: ; ![image](https://user-images.githubusercontent.com/28598792/81405058-82c89b00-9169-11ea-9fd1-b2a49c3a7471.png). ## Actual Behavior; For the example above, after the gjf file is obtained, this is its structure when visualized on Chem3D:; ![image](https://user-images.githubusercontent.com/28598792/81404718-be169a00-9168-11ea-8aa2-020ab861ccde.png). This is the error log:; ![image](https://user-images.githubusercontent.com/28598792/81405308-f7033e80-9169-11ea-9371-7a8df1fe6a40.png). Rings containing nitrogen, particularly azoles, would lose its aromaticity after the gjf conversion. This is a repeated problem for similar structures as well. Thank you for your help and for developing this tool and package. Cheers!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2210:1112,log,log,1112,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2210,1,['log'],['log']
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.3.1; Operating system and version: Ubuntu 20.04. ## Expected Behavior. Local installation of OpenBabel should have a working `~/lib/cmake/OpenBabel3.cmake`. ## Actual Behavior. Package configuration is found but then rejected later because of `maeparser` and `coordgen` not found. ```; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```. I tried to install `maeparser` (git, cmake, make install) but I get the same error. ## Steps to Reproduce. ```; git clone git@github.com:openbabel/openbabel.git; cd openbabel; mkdir build; cd build; cmake -DCMAKE_INSTALL_PREFIX:PATH=$HOME ..; make -j 10; make test; make install; ```; In a different directory have a `CMakeLists.txt` with the contents. ```; find_package(OpenBabel3 REQUIRED); ```; and run `cmake .`, gives:. ```; CMake Error at CMakeLists.txt:30 (find_package):; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2374:982,test,test,982,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2374,1,['test'],['test']
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Current master (`6d774e8`); Operating system and version: Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; We can use `OpenBabel::OBDistanceGeometry` if Eigen is installed properly. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; We can't use it. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; When we try to compile; ```cpp; #include <openbabel/distgeom.h>. int main(){; OpenBabel::OBDistanceGeometry dg;; }; ```; by ; ```; g++ -I /usr/local/include/openbabel3/ -L /usr/local/lib/openbabel/3.0.0/ test.cpp -lopenbabel; ```; we get an error: `error: ‘OBDistanceGeometry’ is not a member of ‘OpenBabel’`. There are two problems:; - `HAVE_EIGEN` is not defined when this code is compiled, so most of `openbabel/distgeom.h` is ignored.; - `LBFGS.h` is not installed properly when we run `make install`. If we define `HAVE_EIGEN` manually and specify the local pass of `LBFGS.h`, this code can be compiled, but I don't think it is an expected behavior.; ; I'm not sure how to fix these problems. Do you have any suggestions?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2098:761,test,test,761,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2098,2,['test'],['test']
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Openbabel 3.0.0 built from git today; Operating system and version: MacOS X 10.14.5. ## Expected Behavior; I am trying to convert a molecule with an alias from .smi into an .svg file. Without aliases, everything works fine. I was able to convert the molecules with some default aliases, but sometimes it broke and I got segfault. I created a minimalistic example to reproduce the behavior, see below. ## Actual Behavior; $ ./obabel test.smi -Otest.svg --genalias; Segmentation fault: 11. ## Steps to Reproduce; 0. Build openbabel; 1. Create test.smi file with smiles for thioanisole; $ echo 'c1ccccc1SC' > test.smi; 2. --genalias uses superatom.txt file, so modify it to make it minimalistic. I left only a thiomethyl group in it. In my setup, superatom.txt is here:; echo 'SMe MeS SC red' > /usr/local/share/openbabel/3.0.0/superatom.txt ; 3. ; $ ./obabel test.smi -Otest.svg --genalias; Segmentation fault: 11",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2095:563,test,test,563,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2095,4,['test'],['test']
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: git master; Operating system and version: Ubuntu 17.10. ## Expected Behavior; According to [the documentation](http://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#string-descriptors), `obabel test/files/filterset.sdf -osmi --filter ""title<'129'""` should return 2 molecules, 123 and 126. ## Actual Behavior; No molecules are returned. ## Steps to Reproduce; $ obabel test/files/filterset.sdf -osmi --filter ""title<'129'""; 0 molecules converted",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1684:344,test,test,344,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1684,2,['test'],['test']
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. After #1930 fixed, OpenBabel which is submitted to conda-forge (conda-forge/staged-recipes#7754) has the last problem to resolve. OpenBabel builds pass on Linux, OSX, and Windows, but output `cannot write output format` on OSX for all Python versions. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: osx, darwin13.4.0, Clang 4.0.1. Python 2.7, 3.6, 3.7. ## Expected Behavior; +obabel -:c1ccccc1 --gen3d -omol2; 1 molecule converted; +obabel -:c1ccccc1 --gen3d -oinchi; 1 molecule converted; +obabel -:c1ccccc1 -opng -O img.png; 1 molecule converted. ## Actual Behavior; + obabel -:c1ccccc1 --gen3d -omol2; obabel: cannot write output format!; + obabel -:c1ccccc1 --gen3d -oinchi; obabel: cannot write output format!; + obabel -:c1ccccc1 -opng -O img.png; obabel: cannot write output format!. ## Steps to Reproduce; [Here is the log](https://dev.azure.com/conda-forge/feedstock-builds/_build/results?buildId=15911&view=logs). OpenBabel builds successfully but when testing it outputs `obabel: cannot write output format!`. Only `obabel -h` runs as expected.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1932:948,log,log,948,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1932,3,"['log', 'test']","['log', 'logs', 'testing']"
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. I submitted OpenBabel to conda-forge (conda-forge/staged-recipes#7754). The build passed on Linux, but Appveyor build failed on Windows. [Here is the whole log.](https://ci.appveyor.com/project/conda-forge/staged-recipes/builds/22373261). ## Environment Information; Open Babel version: 2.4.1; Operating system and version: win-64, py27, compiler=vs2008, see the log for details. ## Expected Behavior; The build passes. ## Actual Behavior; Too many errors. See [the log](https://ci.appveyor.com/project/conda-forge/staged-recipes/builds/22373261) for details. ## Steps to Reproduce; [The conda recipe is here](https://github.com/conda-forge/staged-recipes/pull/7754/files).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1930:239,log,log,239,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1930,3,['log'],['log']
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. I want to obtain 3D coordinates for a ring-containing molecule, e.g. cyclohexane. For this I use the following code:. import pybel as pb; mol = pb.readstring('smi', 'C1CCCCC1'); mol.make3D(steps = 500); mol.write('mol', 'C:/wd/test.mol', overwrite = True). I expect to see a chair conformation, but this is what i get:. ![cyhex](https://user-images.githubusercontent.com/17598902/30778533-01739fee-a0e1-11e7-80e0-024d9b7f1330.png). However, the use of the linux version gives a normal result.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1643:310,test,test,310,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1643,1,['test'],['test']
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. [cloud_init_openbabel.txt](https://github.com/openbabel/openbabel/files/3648942/cloud_init_openbabel.txt). ## Environment Information; Open Babel version: 2.4.1 and HEAD; Operating system and version: Ubuntu 18.04. ## Expected Behavior; make test to pass, pybel to work. ## Actual Behavior; pybindtest_bindings fails make test. Trying to import Pybel fails with:. > PYTHONPATH=/usr/local/lib/python2.7/dist-packages/openbabel/ python test.py; > Traceback (most recent call last):; > File ""test.py"", line 3, in <module>; > import pybel; > File ""/usr/local/lib/python2.7/dist-packages/openbabel/pybel.py"", line 51, in <module>; > from . import openbabel as ob; > ValueError: Attempted relative import in non-package; > . I wanted to verify that #1557 was fixed in HEAD, figure out what commit fixed it, and see if it the same issue as one I ran into in a different context (obabel command line), and maybe learn a little pybel at the same time. But I can't get pybel to run at all, and there is a possibly related regression test failure. . ## Steps to Reproduce. I've seen similar reports before, but they don't seem to go anywhere often due to reproducibility issues or problems with finding multiple libraries from different versions. To try to get around that I've attached a file that can be sent as ""user data"" to a AWS instance, this should make it very reproducible to anyone that uses AWS. I used Ubuntu 18.04 ami-05c1fa8df71875112 (64-bit x86), and m4.large or m4.xlarge size. If you aren't an AWS user, I hope it is easy enough to parse this file out into the steps. In the past I had issues with getting the environment right for ""make test"" to find the right .so files. By doing ""make install"" before ""make test"", I think it should get around that, and the final test I do should only use the installed files anyway.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2046:325,test,test,325,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2046,8,['test'],['test']
Testability,"- [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.0; Operating system and version: all. ## Expected Behavior. Accessing molecule information should be `const`. ```c++; OBMol const mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; std::cout << mol.GetMolWt() << std::endl; // should print. currently cannot be called in a `const` OBMol.; ```. _Of course I can be wrong and the accesing function is not constant to indicate internal static, non-thread safe variables (e.g. caches) being set. But I doubt, `const`-`non-const` seems to be inconsistent in the different object of the library. (for example OBUnitCell::GetCellVolume() is `const`, and also redundantly `non-const`, again it is fine if it has to do with internal cache data)_. ## Actual Behavior. GetMolWt cannot be called in a constant object, gives compilation error. ## Steps to Reproduce. ```c++; #include <openbabel/generic.h> // unitcell; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>. #include <iostream>. using namespace std;. int main(int argc,char **argv){; 	using namespace OpenBabel;; 	OBConversion conv = []{OBConversion _; _.SetInFormat(""xyz""); return _;}();; 	OBMol mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; 	std::cout << mol.GetMolWt() << std::endl;; }; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2369:301,test,test,301,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2369,2,['test'],['test']
Testability,"- [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 (3.1.1+dfsg-6+1); Operating system and version: Linux Debian 12/bookworm (branch testing). ## Expected Behavior; ```bash; ~$ obabel -:""[S@@](O)(=O)(=O)CC(=O)OC(=O)c1c2[n](C)c3[n]1CC(=O)OC(=O)c4ccccc4.C3OC.C2O"" --errorlevel 6 -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: Failed to kekulize aromatic SMILES; 0 molecules converted; ``` ; Based on the [documentation](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html?highlight=errorlevel#options), I'm aware the `--errorlevel` extends over five levels. Thus, a sixth level either (still) is hypothetical, or already may be emulated by an approach not yet identified by mine. The effect intended is equivalent to the already existing «none» for e.g., the submission lacking explicit ring closure, and to skip such an entry:. ```bash; ~$ obabel -:""C1CC"" -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: 1 unmatched ring bonds. 0 molecules converted; ```. ## Actual Behavior; ```bash; ~$ obabel -:""[S@@](O)(=O)(=O)CC(=O)OC(=O)c1c2[n](C)c3[n]1CC(=O)OC(=O)c4ccccc4.C3OC.C2O"" --errorlevel 5 -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Failed to kekulize aromatic SMILES. COC[C]1N(C)C(=C(N1CC(=O)OC(=O)c1ccccc1)C(=O)OC(=O)CS(=O)(=O)O)CO	; 1 molecule converted; ```. ## Steps to Reproduce; Processing some data with [Jmol](http://jmol.sourceforge.net/), I obtained SMILES strings copy-pasted into [CDKDepict](https://www.simolecule.com/cdkdepict/depict.html) for visualization. On occasion, the formulae are erroneous because SMILES submitted to CDKDepict were wrong ([example](https://github.com/cdk/depict/issues/38)). The mentioned SMILES string is a problematic because it leads to the depiction of an imidazole with Thiele ring (i.e. six pi electrons) _plus_ two additional electrons on nitrogen atoms (n",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2454:168,test,testing,168,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2454,1,['test'],['testing']
Testability,"- [x] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.1 -- Mar 29 2022 -- 00:37:58; Operating system and version: Linux Debian 12/bookworm (branch testing). ## Expected Behavior; When splitting e.g., one .pdb file including multiple models into multiple files about one individual model each, a file sort were eased if openbabel would account for the total of the models by leading (padding) zeros. E.g., if there are more than nine models and less than one hundred, to name the newly written files in a pattern of `split01.pdb`, `split02.pdb`, `split10.pdb`. By similar token, if there were more than 99 models and less than 1000, to use file names like `split001.pdb`, `split002.pdb`, `split010.pdb`, `split123.pdb`, etc. ## Actual Behavior; At present, files are named in a pattern like `split1.pdb`, `split2.pdb`, `split9.pdb`, `split10.pdb`, `split11.pdb` etc. with a variable number of characters though all of them are derived from the same multi-model .pdb. A recent example was splitting a multimodel .pdb ([here](https://github.com/openbabel/openbabel/issues/2472)). ## Steps to Reproduce; The .pdb `1NER` fetched from RCSB PDB ([entry](https://www.rcsb.org/structure/1NER)) was split into individual files by. ```bash; obabel 1ner.pdb -O split.pdb -m; ```. [test_split_pdb.zip](https://github.com/openbabel/openbabel/files/8667406/test_split_pdb.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2476:189,test,testing,189,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2476,1,['test'],['testing']
Testability,"- `from __future__ import print_function`; - replace deprecated `unittest.TestCase.assertEquals` with; `assertEqual`, `assertTrue`, or `assertFalse`; - use `obj is None` instead of `obj == None`; - remove modules and functions that are imported but not used",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1970:74,Test,TestCase,74,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1970,5,"['Test', 'assert']","['TestCase', 'assertEqual', 'assertEquals', 'assertFalse', 'assertTrue']"
Testability,- data/UFF.prm: Add line for atom type 'D'.; - src/forcefields/forcefielduff.cpp: Add checks to prevent segfaults.; - test/regressiontest.cpp: Add test case.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2114:118,test,test,118,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2114,2,['test'],['test']
Testability,- fix misuse of `unittest.TestCase.assert_`; - improve usages of `unitest.TestCase` methods,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2468:26,Test,TestCase,26,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2468,2,['Test'],['TestCase']
Testability,"-- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3.; -- Found Boost: /usr/include (found version ""1.75.0"") found components: iostreams regex ; -- Using zlib library for iostreams dependency.; -- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3; -- coo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2406:3726,Test,Test,3726,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406,6,['Test'],['Test']
Testability,"-- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3; -- coordgen include dir set as coordgen_INCLUDE_DIRS-NOTFOUND; -- coordgen libraries set as 'coordgen_LIBRARIES-NOTFOUND'; -- coordgen templates file set as 'coordgen_TEMPLATE_FILE-NOTFOUND'; -- Downloaded Coordgen 'master' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/coordgen-master.; -- Coordinate generation with Coordgen will be supported Using Coordgen 'master' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/coordgen-master; -- Found PkgConfig: /usr/bin/pkg-config (found version ""1.7.3"") ; -- Found RapidJSON: /usr/include (found suitable version ""1.1.0"", minimum required is ""1.1.0"") ; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /usr/include; -- Checking for module 'cairo'; -- Found cairo, version 1.17.4; -- Found Cairo: /usr/lib64/libcairo.so ; -- Cairo found. PNG output will be supported.; -- Found Boost: /usr/include (found suitable version ""1.75.0"", minimum required is ""1.45.0"") found components: system ; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Check if compiler accepts -pthread; -- Check if compiler accepts -pthread - yes; -- Found Threads: TRUE ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets found => GUI will be built; -- Found PythonInterp: /usr/bin/python3 (found version ""3.9.6"") ; -- Found SWIG: /usr/bin/swig (found version ""4.0.2"") ; -- Found SWIG: /usr/bin/swig (found suitable version ""4.0.2"", minimum required is ""2.0"") ; -- Found PythonLibs: /usr/lib64/libpython3.9.so (found version ""3.9.6"") ; -- Python bindings will be compiled; -- Configuring done; -- Generating done. ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2406:5961,Test,Test,5961,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406,2,['Test'],['Test']
Testability,"------ Build started: Project: OBError, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; cl : Command line warning D9035 : option 'Wp64' has been deprecated and will be removed in a future release; tokenst.cpp; plugin.cpp; loader.cpp; Linking...; Creating library ..\oberror.lib and object ..\oberror.exp; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBError\Release\BuildLog.htm""; OBError - 0 error(s), 1 warning(s); ------ Build started: Project: OBDLL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; transform3d.cpp; ..\..\src\math\transform3d.cpp(58) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; transform.cpp; spacegroup.cpp; rotor.cpp; rotamer.cpp; ring.cpp; residue.cpp; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; kekulize.cpp; griddata.cpp; grid.cpp; generic.cpp; descriptor.cpp; Generating Code...; Compiling...; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; base.cpp; atom.cpp; alias.cpp; Generating Code...; Compiling...; typer.cpp; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; Creating library ../OBC",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/773:456,log,log,456,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/773,1,['log'],['log']
Testability,"-----; ERROR: Command errored out with exit status 1: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile Check the logs for full command output. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018:3971,test,test,3971,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018,1,['test'],['test']
Testability,"--; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_addh_1; --; 61: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:3",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:6536,test,test,6536,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,-ig03 does not handle logfiles with nosym keyword,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1157:22,log,logfiles,22,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1157,1,['log'],['logfiles']
Testability,"..............F..................................................; ======================================================================; FAIL: test_default (__main__.TestPCJSON); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""test/testobconv_writers.py"", line 2761, in test_default; self.assertWriters(self.fmt, """"""\; File ""test/testobconv_writers.py"", line 258, in assertWriters; test_write_string(self, mol, conv, expected_output, normalize); File ""test/testobconv_writers.py"", line 165, in test_write_string; test_case.assertMultiLineEqual(output.replace(""\r\n"", ""\n""), expected_output.replace(""\r\n"", ""\n"")); AssertionError: '{\n [1926 chars]102014\n ],\n ""y"": [[1070 chars]]\n}' != '{\n [1926 chars]102012\n ],\n ""y"": [[1070 chars]]\n}'; {; ""PC_Compounds"": [; {; ""atoms"": {; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""element"": [; 6,; 6,; 6,; 6,; 6,; 6,; 8,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""bonds"": {; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5,; 6,; 1,; 2,; 3,; 4,; 5,; 7; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""order"": [; 2,; 1,; 2,; 1,; 2,; 1,; 1,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""coords"": [; {; ""type"": [; 1; ],; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""conformers"": [; {; ""x"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""y"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""style"": {; ""annotation"": [; 8,; 8,; 8,; 8,; 8,; 8; ],; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6; ]; }; }; ]; }; ],; ""charge"": 0; }; ]; }. ```. ## Steps to Reproduce; See e.g.:; ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2246:1100,Assert,AssertionError,1100,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246,1,['Assert'],['AssertionError']
Testability,"../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 82; Start 82: test_regressions_1; --; 82: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 82: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; --; test 83; Start 83: test_regressions_221; --; 83: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:7562,test,test,7562,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,./../bin/obgui; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/buildertest.o; //usr/lib/x86_64-linux-gnu/libharfbuzz.so.0: undefined reference to `FT_Get_Var_Blend_Coordinates'; //usr/lib/x86_64-linux-gnu/libgtk-3.so.0: undefined reference to `g_log_structured_standard'; //usr/lib/x86_64-linux-gnu/libcairo.so.2: undefined reference to `FT_Get_Var_Design_Coordinates'; collect2: error: ld returned 1 exit status; src/GUI/CMakeFiles/obgui.dir/build.make:149: recipe for target 'bin/obgui' failed; make[2]: *** [bin/obgui] Error 1; CMakeFiles/Makefile2:6751: recipe for target 'src/GUI/CMakeFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_r,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:51983,test,test,51983,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"./src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 82; Start 82: test_regressions_1; --; 82: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 82: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 82: SUMMARY: UndefinedBehaviorSanitizer: unde",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:7306,test,test,7306,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,".0; Operating system and version: Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; No floating point exception. I think there needs to be a check in vector3::normalize() for zero vectors since it is very hard to guarantee that no callers ever have a zero vector. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior --> . vector3::normalize() gets a zero vector. Thread 3 ""bfd-server-debu"" received signal SIGFPE, Arithmetic exception.; [Switching to Thread 0x7ffff5fc2700 (LWP 9010)]; 0x0000000000dc98c9 in OpenBabel::vector3::normalize() (); (gdb) bt; #0 0x0000000000dc98c9 in OpenBabel::vector3::normalize() (); #1 0x0000000000e0543f in OpenBabel::OBBuilder::GetNewBondVector(OpenBabel::OBAtom*, double) (); #2 0x0000000000b4723b in OpenBabel::OBMol::AddNewHydrogens(OpenBabel::HydrogenType, bool, double); (); #3 0x0000000000d1b06f in OpenBabel::OBGroupContrib::Predict(OpenBabel::OBBase*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (); ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; This happens with any PDB structure containing the PA0 ligand (e.g. 3E3Z), a phenyl ring with arsenic attached. Getting the logP property. Example code (the 'content' string contains a mol format string with the PA0 compound:. std::ios_base::openmode imode = std::ios_base::in|std::ios_base::binary;; std::ios_base::openmode omode = std::ios_base::out|std::ios_base::binary;; std::stringstream ssi(content, imode);; std::stringstream sso("""", omode);; OpenBabel::OBConversion conv(&ssi, &sso);; OpenBabel::OBFormat* molformat = conv.FindFormat(""",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2088:2074,test,test,2074,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2088,1,['test'],['test']
Testability,".com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0 (conda); Operating system and version: (Linux, Debian 10). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Elements should be parsed correctly when reading the file, independently of the number of characters in the element symbol. . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When parsing structures with two-letter elements (i.e. Cl, Fe, Mg,...) the atomic number is set to 0 (other parameters might be missing, too; not tested). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. The code below has been tested with PDB entries 1r6j, 333d, 5ix0 in both formats 'pdb' and 'cif'. ```; import sys; import os; from openbabel import openbabel as ob; i = sys.argv[1]; name, ext = os.path.splitext(i); ext = ext[1:].lower(); r = ob.OBConversion(); r.SetInFormat(ext); mol = ob.OBMol(); r.ReadFile(mol, i); for a in ob.OBMolAtomIter(mol):; if a.GetAtomicNum()==0:; res = a.GetResidue(); print(""AAA"", a.GetIdx(), res.GetAtomID(a)); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2294:1342,test,tested,1342,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2294,3,['test'],"['test', 'tested']"
Testability,.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/math.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/mol.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/phmodel.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/residue.o; [ 98%] Building CXX object te,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:54298,test,test,54298,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,".h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::tr1::shared_ptr in tr1/memory; -- Found PkgConfig: /usr/bin/pkg-config (found version ""0.27.1"") ; -- Checking for module 'cairo'; -- No package 'cairo' found; -- Could NOT find Cairo (missing: CAIRO_LIBRARIES CAIRO_INCLUDE_DIRS) ; -- Could NOT find Cairo. PNG output will NOT be supported.; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Found PythonInterp: /apps/python/intelpython2018.3/intelpython3/bin/python (found version ""3.6.3"") ;",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1919:3092,Test,Test,3092,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1919,4,['Test'],['Test']
Testability,".h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found PkgConfig: /usr/bin/pkg-config (found version ""1.6.1"") ; -- Found RapidJSON: /usr/include (found suitable version ""1.1.0"", minimum required is ""1.1.0"") ; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /usr/include; -- Checking for module 'cairo'; -- Found cairo, version 1.16.0; -- Found Cairo: /usr/lib64/libcairo.so ; -- Cairo found. PNG output will be supported.; -- Looking for getopt; -- Looking for ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1996:2515,Test,Test,2515,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1996,4,['Test'],['Test']
Testability,".h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0""); -- Found PkgConfig: /usr/bin/pkg-config (found version ""0.28""); -- Checking for module 'cairo'; -- Found cairo, version 1.14.10; -- Found Cairo: /usr/lib64/libcairo.so; -- Cairo found. PNG output will be supported.; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Found PythonInterp: /usr/bin/python (found version ""3.6.2""); -- Configurin",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1780:1611,Test,Test,1611,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1780,4,['Test'],['Test']
Testability,"//github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. <!-- - [ ] I believe this to be a bug with Open Babel -->; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 -- Jun 10 2021 -- 04:27:50; Operating system and version: Debian GNU/Linux 11 (bullseye). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Jensen [lists here](https://molecularmodelingbasics.blogspot.com/2016/05/automating-calculations-pka-predictions.html) a few test structures encoded as SMILES which are to be converted by OpenBabel into `.xyz` with 3D information. Cyclic structures should pass smoothly the conversion (yet occasionally they do not and issue warnings). Is there an other way to ""sanitize"" SMILES than passing them to RDKit (*vide infra*), perhaps in OpenBabel itself?. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The conversion of; * `C[C@H]1CC[N@@]2CCC[C@@H]12`; * `C[C@H]1[C@@H]2[C@@H](C(N(C)C2=O)=O)C3[N@]1CCC3`; * `C[C@H]1[C@@H]2[C@@H](C(N(C)C2=O)=O)C3[N@H+]1CCC3`. in line of; ```; obabel -:""C[C@H]1[C@@H]2[C@@H](C(N(C)C2=O)=O)C3[N@H+]1CCC3"" --gen3D -h -oxyz; ```; yield warnings like; ```; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 2 stereocenter(s) in this molecule (); with Atom Ids as follows: 2 3; Warning: Stereochemistry is wrong, using the distance geometry method instead; ```; while e.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2393:1037,test,test,1037,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2393,1,['test'],['test']
Testability,/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/math.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/mol.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/phmodel.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/residue.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/ringtest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartstest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartsparse.o; [ 99%] Building CXX objec,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:54512,test,test,54512,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"/data.o -c /var/tmp/portage/sci-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2/src/data.cpp; make[2]: *** [src/CMakeFiles/openbabel.dir/build.make:63: src/CMakeFiles/openbabel.dir/alias.o] Error 1; make[2]: *** Waiting for unfinished jobs....; make[2]: Leaving directory '/var/tmp/portage/sci-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2_build'; make[1]: *** [CMakeFiles/Makefile2:1196: src/CMakeFiles/openbabel.dir/all] Error 2; make[1]: Leaving directory '/var/tmp/portage/sci-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2_build'; make: *** [Makefile:141: all] Error 2; ```. My full build log (showing the source configuration using cmake and the entire compilation output) is [here](https://paste.pound-python.org/show/UBYYuKH3qSq84yOe2ux4/). . `emerge -pqv '=sci-chemistry/openbabel-2.3.2-r1::gentoo'` returns (to show the USE flags, which affect configure options, refer to the ebuild linked earlier for how):. ```bash; [ebuild N ] sci-chemistry/openbabel-2.3.2-r1 USE=""openmp wxwidgets -doc {-test}""; ```. The output of `emerge --info '=sci-chemistry/openbabel-2.3.2-r1::gentoo'` (which will show details about my Gentoo system, like compiler options):. ```bash; Portage 2.3.5 (python 3.4.6-final-0, default/linux/amd64/13.0/desktop/plasma/systemd, gcc-6.3.0, glibc-2.24-r1, 4.11.0-gentoo x86_64); =================================================================; System Settings; =================================================================; System uname: Linux-4.11.0-gentoo-x86_64-Intel-R-_Core-TM-_i7-4700MQ_CPU_@_2.40GHz-with-gentoo-2.3; KiB Mem: 16344248 total, 10297040 free; KiB Swap: 0 total, 0 free; sh bash 4.4_p12; ld GNU ld (Gentoo 2.27 p1.0) 2.27; app-shells/bash: 4.4_p12::gentoo; dev-java/java-config: 2.2.0-r3::gentoo; dev-lang/perl: 5.24.1-r1::gentoo; dev-lang/python: 2.7.13::gentoo, 3.4.6::gentoo; dev-util/cmake: 3.8.1::gentoo; dev-util/pkgconfig: 0.29.2::gentoo; sys-apps/baselayout: 2.3::gentoo; sys-apps/openrc: 0.26.1::gentoo; sys-apps/sandbox: 2.10-r",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566:6304,test,test,6304,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566,1,['test'],['test']
Testability,/obgui] Error 1; CMakeFiles/Makefile2:6751: recipe for target 'src/GUI/CMakeFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object t,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:52509,test,test,52509,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,/obrotate.dir/obrotate.o; [ 84%] Linking CXX executable ../bin/obthermo; [ 84%] Built target obthermo; Scanning dependencies of target obprobe; [ 85%] Building CXX object tools/CMakeFiles/obprobe.dir/obprobe.o; [ 85%] Linking CXX executable ../bin/obrotate; [ 85%] Built target obrotate; Scanning dependencies of target obsym; [ 86%] Building CXX object tools/CMakeFiles/obsym.dir/obsym.o; [ 86%] Linking CXX executable ../bin/obprobe; [ 86%] Built target obprobe; Scanning dependencies of target obminimize; [ 86%] Building CXX object tools/CMakeFiles/obminimize.dir/obminimize.o; [ 86%] Linking CXX executable ../bin/obsym; [ 86%] Built target obsym; Scanning dependencies of target obtautomer; [ 86%] Building CXX object tools/CMakeFiles/obtautomer.dir/obtautomer.o; [ 86%] Linking CXX executable ../bin/obminimize; [ 86%] Built target obminimize; Scanning dependencies of target obgui; [ 86%] Linking CXX executable ../bin/obtautomer; [ 86%] Built target obtautomer; Scanning dependencies of target test_inchiwrite; [ 86%] Building CXX object test/CMakeFiles/test_inchiwrite.dir/inchiwrite.o; [ 86%] Building CXX object src/GUI/CMakeFiles/obgui.dir/OBGUI.o; [ 86%] Building CXX object test/CMakeFiles/test_inchiwrite.dir/__/src/formats/getinchi.o; [ 87%] Linking CXX executable ../bin/test_inchiwrite; [ 87%] Built target test_inchiwrite; [ 88%] Building CXX object src/GUI/CMakeFiles/obgui.dir/stdwx.o; [ 88%] Building CXX object src/GUI/CMakeFiles/obgui.dir/optswx.o; Scanning dependencies of target test_runner; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.o; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.o; [ 88%] Linking CXX executable ../../bin/obgui; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/buildertest.o; //usr/lib/x86_64-linux-gnu/libharfbuzz.so.0: undefined reference to `FT_Get_Var_Blend_Coordinates'; //usr/lib/x86_64-linux-gnu/libgtk-3.so.0: undefined reference to `g_log_structured_standard'; //usr/lib/x86_,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:50326,test,test,50326,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,/obtautomer.dir/obtautomer.o; [ 86%] Linking CXX executable ../bin/obminimize; [ 86%] Built target obminimize; Scanning dependencies of target obgui; [ 86%] Linking CXX executable ../bin/obtautomer; [ 86%] Built target obtautomer; Scanning dependencies of target test_inchiwrite; [ 86%] Building CXX object test/CMakeFiles/test_inchiwrite.dir/inchiwrite.o; [ 86%] Building CXX object src/GUI/CMakeFiles/obgui.dir/OBGUI.o; [ 86%] Building CXX object test/CMakeFiles/test_inchiwrite.dir/__/src/formats/getinchi.o; [ 87%] Linking CXX executable ../bin/test_inchiwrite; [ 87%] Built target test_inchiwrite; [ 88%] Building CXX object src/GUI/CMakeFiles/obgui.dir/stdwx.o; [ 88%] Building CXX object src/GUI/CMakeFiles/obgui.dir/optswx.o; Scanning dependencies of target test_runner; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.o; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.o; [ 88%] Linking CXX executable ../../bin/obgui; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/buildertest.o; //usr/lib/x86_64-linux-gnu/libharfbuzz.so.0: undefined reference to `FT_Get_Var_Blend_Coordinates'; //usr/lib/x86_64-linux-gnu/libgtk-3.so.0: undefined reference to `g_log_structured_standard'; //usr/lib/x86_64-linux-gnu/libcairo.so.2: undefined reference to `FT_Get_Var_Design_Coordinates'; collect2: error: ld returned 1 exit status; src/GUI/CMakeFiles/obgui.dir/build.make:149: recipe for target 'bin/obgui' failed; make[2]: *** [bin/obgui] Error 1; CMakeFiles/Makefile2:6751: recipe for target 'src/GUI/CMakeFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifsp,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:51025,test,test,51025,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.0; Operating system and version: . ## Expected Behavior; I was trying to calculate point charges using Extended charge equilibration method(Eqeq) in openbabel with the snippet given in the link: https://github.com/numat/EQeq. My input is a cif file generated from openbabel.(attached LOSXIC.txt)[LOSXIC.txt](https://github.com/openbabel/openbabel/files/2434628/LOSXIC.txt); Doesnt work for LOSXIC and also other such type of files file but works for NaCl.cif file which is also attached [nacl.txt](https://github.com/openbabel/openbabel/files/2434642/nacl.txt); The charges are supposed to be printed as numbers.; ## Actual Behavior; But I am getting the following as output:; [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]; Is there a particular format of cif file to be used as input? ; ![error](https://user-images.githubusercontent.com/43755377/46299408-8feed280-c5a1-11e8-8acf-4c2088dbf379.png). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1893:2044,test,test,2044,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1893,1,['test'],['test']
Testability,"/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: OpenBabel 3.1.1+git2f34bda337d7ddefa8f2bebfc23931a63e45241f; Operating system and version: Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; - The build process should be completed without any errors. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; - It causes error like:; [error-deps.log](https://github.com/openbabel/openbabel/files/9179914/error-deps.log). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; - Build maeparser and install it on ../libmaeparser-1.2.4-220427; - Build coordgenlibs and install it on ../coordgenlibs-3.0.0-220427; - Run following command to try the build process:; `; mkdir build-openbabel; cd build-openbabel; cmake \; -DCMAKE_INSTALL_PREFIX=../openbabel-3.1.1-220621 \; -DBUILD_SHARED=OFF \; -DBUILD_MIXED=ON \; -DWITH_STATIC_INCHI=ON \; -DWITH_STATIC_LIBXML=ON \; -DWITH_COORDGEN=ON \; -DENABLE_OPENMP=ON \; -Dmaeparser_DIR=../libmaeparser-1.2.4-220427 \; -Dcoordgen_DIR=../coordgenlibs-3.0.0-220427 \; ../openbabel; `; `; cmake --build . --config Release -j; `; ## How to fix; - Apply following patch. It does not tested on any other linux distribution or OS than Ubuntu 18.04.; [adjust-dep",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2513:1144,log,log,1144,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2513,1,['log'],['log']
Testability,"/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 3.1.0. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. I expected and assumed that by generating partial charges using the Gasteiger method for a specific conformation of a particular molecule, I would always obtain identical partial charges. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. However, this is not the case. Can anyone explain why?. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; from openbabel import pybel; import rdkit; from rdkit import Chem; from rdkit.Chem import AllChem; from rdkit.Chem import rdDistGeom; ```; Generating 10 conformers; ```; ligand_smiles = 'CC(=O)OC1=CC=CC=C1C(=O)O' # example SMILES; rdkit_mol = Chem.MolFromSmiles(ligand_smiles); rdkit_mol = Chem.AddHs(rdkit_mol); rdDistGeom.EmbedMultipleConfs(rdkit_mol,10, randomSeed=0xf00d); rdkit_mol = Chem.RemoveHs(rdkit_mol); n_confs = rdkit_mol.GetNumConformers(); ```. ```; mol_blocks = [Chem.MolToV3KMolBlock(rdkit_mol,confId=i) for i in range(n_confs)]; pybel_conformers = [pybel.readstring('mol',mol_block) for mol_block in mol_blocks]; charges = [pybel_conformers[0].calccharges(model='gasteiger') for i in range(100)]; ```. ```; print('First: ',charges[0],'\n',; 'Tenth: ',charges[10]); ```. **Output:**; `First: [0",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2704:1302,test,test,1302,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2704,1,['test'],['test']
Testability,/optswx.o; Scanning dependencies of target test_runner; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.o; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.o; [ 88%] Linking CXX executable ../../bin/obgui; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/buildertest.o; //usr/lib/x86_64-linux-gnu/libharfbuzz.so.0: undefined reference to `FT_Get_Var_Blend_Coordinates'; //usr/lib/x86_64-linux-gnu/libgtk-3.so.0: undefined reference to `g_log_structured_standard'; //usr/lib/x86_64-linux-gnu/libcairo.so.2: undefined reference to `FT_Get_Var_Design_Coordinates'; collect2: error: ld returned 1 exit status; src/GUI/CMakeFiles/obgui.dir/build.make:149: recipe for target 'bin/obgui' failed; make[2]: *** [bin/obgui] Error 1; CMakeFiles/Makefile2:6751: recipe for target 'src/GUI/CMakeFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMak,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:51743,test,test,51743,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"0 0 0 0 0 0 0 0 0 0 0 0; 3.5321 0.0493 0.0030 C 0 0 0 0 0 0 0 0 0 0 0 0; -2.3930 0.0649 0.0010 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.0764 1.4443 -0.8888 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.0713 1.4385 0.8921 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.2902 1.4096 0.0100 H 0 0 0 0 0 0 0 0 0 0 0 0; 2.2149 -1.6079 -0.0044 H 0 0 0 0 0 0 0 0 0 0 0 0; 4.4298 -0.5598 0.0018 H 0 0 0 0 0 0 0 0 0 0 0 0; 3.6559 1.1268 0.0067 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 3 1 0 0 0 0; 1 4 2 0 0 0 0; 2 7 3 0 0 0 0; 3 7 1 0 0 0 0; 3 8 1 0 0 0 0; 3 9 1 0 0 0 0; 4 5 1 0 0 0 0; 4 10 1 0 0 0 0; 5 6 2 0 0 0 0; 5 11 1 0 0 0 0; 6 12 1 0 0 0 0; 6 13 1 0 0 0 0; M END; ```; which is from the following reference website:; [PubChem molecule page](https://pubchem.ncbi.nlm.nih.gov/compound/549110#section=3D-Conformer); [SDF file](https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/CID/549110/record/SDF/?record_type=3d&response_type=display). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; **Actual result from OpenBabel**; ```; test.xyz; OpenBabel11191917433D. 13 12 0 0 0 0 0 0 0 0999 V2000; -0.0622 -0.1867 -0.0074 N 0 0 0 0 0 0 0 0 0 0 0 0; -3.3957 -0.5192 0.0030 N 0 0 0 0 0 0 0 0 0 0 0 0; -1.1333 0.8052 -0.0003 C 0 0 0 0 0 0 0 0 0 0 0 0; 1.1224 0.3173 0.0007 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.3297 -0.5309 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 3.5321 0.0493 0.0030 C 0 0 0 0 0 0 0 0 0 0 0 0; -2.3930 0.0649 0.0010 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.0764 1.4443 -0.8888 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.0713 1.4385 0.8921 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.2902 1.4096 0.0100 H 0 0 0 0 0 0 0 0 0 0 0 0; 2.2149 -1.6079 -0.0044 H 0 0 0 0 0 0 0 0 0 0 0 0; 4.4298 -0.5598 0.0018 H 0 0 0 0 0 0 0 0 0 0 0 0; 3.6559 1.1268 0.0067 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; 3 7 1 0 0 0 0; 3 9 1 0 0 0 0; 4 10 1 0 0 0 0; 5 4 2 0 0 0 0; 5 6 1 0 0 0 0; 6 13 1 0 0 0 0; 7 2 3 0 0 0 0; 8 3 1 0 0 0 0; 11 5 1 0 0 0 0; 12 6 1 0 0 0",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2090:3083,test,test,3083,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2090,1,['test'],['test']
Testability,"0 0; 3.6559 1.1268 0.0067 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 3 1 0 0 0 0; 1 4 2 0 0 0 0; 2 7 3 0 0 0 0; 3 7 1 0 0 0 0; 3 8 1 0 0 0 0; 3 9 1 0 0 0 0; 4 5 1 0 0 0 0; 4 10 1 0 0 0 0; 5 6 2 0 0 0 0; 5 11 1 0 0 0 0; 6 12 1 0 0 0 0; 6 13 1 0 0 0 0; M END; ```; which is from the following reference website:; [PubChem molecule page](https://pubchem.ncbi.nlm.nih.gov/compound/549110#section=3D-Conformer); [SDF file](https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/CID/549110/record/SDF/?record_type=3d&response_type=display). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; **Actual result from OpenBabel**; ```; test.xyz; OpenBabel11191917433D. 13 12 0 0 0 0 0 0 0 0999 V2000; -0.0622 -0.1867 -0.0074 N 0 0 0 0 0 0 0 0 0 0 0 0; -3.3957 -0.5192 0.0030 N 0 0 0 0 0 0 0 0 0 0 0 0; -1.1333 0.8052 -0.0003 C 0 0 0 0 0 0 0 0 0 0 0 0; 1.1224 0.3173 0.0007 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.3297 -0.5309 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 3.5321 0.0493 0.0030 C 0 0 0 0 0 0 0 0 0 0 0 0; -2.3930 0.0649 0.0010 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.0764 1.4443 -0.8888 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.0713 1.4385 0.8921 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.2902 1.4096 0.0100 H 0 0 0 0 0 0 0 0 0 0 0 0; 2.2149 -1.6079 -0.0044 H 0 0 0 0 0 0 0 0 0 0 0 0; 4.4298 -0.5598 0.0018 H 0 0 0 0 0 0 0 0 0 0 0 0; 3.6559 1.1268 0.0067 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; 3 7 1 0 0 0 0; 3 9 1 0 0 0 0; 4 10 1 0 0 0 0; 5 4 2 0 0 0 0; 5 6 1 0 0 0 0; 6 13 1 0 0 0 0; 7 2 3 0 0 0 0; 8 3 1 0 0 0 0; 11 5 1 0 0 0 0; 12 6 1 0 0 0 0; M RAD 2 1 2 6 2; M END; $$$$; ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Please see above description for details.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2090:4184,test,test,4184,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2090,1,['test'],['test']
Testability,"1 USE=""openmp wxwidgets -doc {-test}""; ```. The output of `emerge --info '=sci-chemistry/openbabel-2.3.2-r1::gentoo'` (which will show details about my Gentoo system, like compiler options):. ```bash; Portage 2.3.5 (python 3.4.6-final-0, default/linux/amd64/13.0/desktop/plasma/systemd, gcc-6.3.0, glibc-2.24-r1, 4.11.0-gentoo x86_64); =================================================================; System Settings; =================================================================; System uname: Linux-4.11.0-gentoo-x86_64-Intel-R-_Core-TM-_i7-4700MQ_CPU_@_2.40GHz-with-gentoo-2.3; KiB Mem: 16344248 total, 10297040 free; KiB Swap: 0 total, 0 free; sh bash 4.4_p12; ld GNU ld (Gentoo 2.27 p1.0) 2.27; app-shells/bash: 4.4_p12::gentoo; dev-java/java-config: 2.2.0-r3::gentoo; dev-lang/perl: 5.24.1-r1::gentoo; dev-lang/python: 2.7.13::gentoo, 3.4.6::gentoo; dev-util/cmake: 3.8.1::gentoo; dev-util/pkgconfig: 0.29.2::gentoo; sys-apps/baselayout: 2.3::gentoo; sys-apps/openrc: 0.26.1::gentoo; sys-apps/sandbox: 2.10-r4::gentoo; sys-devel/autoconf: 2.13::gentoo, 2.69-r3::gentoo; sys-devel/automake: 1.12.6-r1::gentoo, 1.13.4-r1::gentoo, 1.15-r2::gentoo; sys-devel/binutils: 2.27::gentoo; sys-devel/gcc: 6.3.0::gentoo; sys-devel/gcc-config: 1.8-r1::gentoo; sys-devel/libtool: 2.4.6-r4::gentoo; sys-devel/make: 4.2.1-r1::gentoo; sys-kernel/linux-headers: 4.10::gentoo (virtual/os-headers); sys-libs/glibc: 2.24-r1::gentoo; Repositories:. gentoo; location: /usr/portage; sync-type: git; sync-uri: https://github.com/gentoo/gentoo.git; priority: -1000. fusion809; location: /usr/local/fusion809-overlay; masters: gentoo. flatpak-overlay; location: /usr/local/flatpak-overlay; sync-type: git; sync-uri: git://github.com/fosero/flatpak-overlay.git; masters: gentoo; priority: 50. gamerlay; location: /var/lib/layman/gamerlay; sync-type: git; sync-uri: git://anongit.gentoo.org/proj/gamerlay.git; masters: gentoo; priority: 50. games-overlay; location: /var/lib/layman/games-overlay; sync-type: git; sync-",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566:7278,sandbox,sandbox,7278,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566,1,['sandbox'],['sandbox']
Testability,"1/1 Test #212: pytest_babel .....................***Failed Error regular expression found in output. Regex=[ERROR] 1.16 sec; /home/jfkonecn/repos/openbabel/scripts/python:/home/jfkonecn/repos/openbabel/build/lib; .......E/usr/lib/python3.10/subprocess.py:955: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used; self.stdin = io.open(p2cwrite, 'wb', bufsize); /usr/lib/python3.10/subprocess.py:961: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used; self.stdout = io.open(c2pread, 'rb', bufsize); /usr/lib/python3.10/subprocess.py:966: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used; self.stderr = io.open(errread, 'rb', bufsize); ........; ======================================================================; ERROR: testOBRMS (__main__.TestOBabel); Sanity checks for obrms; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/home/jfkonecn/repos/openbabel/test/testbabel.py"", line 529, in testOBRMS; output, err = run_exec( ""obrms -t 10 %s %s""%(sdffile,sdffile)); File ""/home/jfkonecn/repos/openbabel/test/testbabel.py"", line 56, in run_exec; p = Popen([exe] + broken[1:],; File ""/usr/lib/python3.10/subprocess.py"", line 971, in __init__; self._execute_child(args, executable, preexec_fn, close_fds,; File ""/usr/lib/python3.10/subprocess.py"", line 1863, in _execute_child; raise child_exception_type(errno_num, err_msg, err_filename); FileNotFoundError: [Errno 2] No such file or directory: '../bin/obrms'. ----------------------------------------------------------------------; Ran 16 tests in 1.128s. FAILED (errors=1). CMake Error at pytest_babel.cmake:20 (MESSAGE):; 1. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 1.16 sec. The following tests FAILED:; 212 - pytest_babel (Failed); Errors while running CTest; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2662:1793,Test,TestOBabel,1793,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2662,11,"['Test', 'test']","['Test', 'TestOBabel', 'test', 'testOBRMS', 'testbabel', 'tests']"
Testability,2 tests fail,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2604:2,test,tests,2,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2604,1,['test'],['tests']
Testability,"2-r1/work/openbabel-2.3.2_build/include -I/var/tmp/portage/sci-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2/data -I/var/tmp/portage/sci-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2/include -I/usr/include/eigen3 -DNDEBUG -DNDEBUG -O2 -pipe -pthread -fopenmp -fPIC -DOB_MODULE_PATH=""\""/usr/lib64/openbabel/2.3.2\"""" -o CMakeFiles/openbabel.dir/data.o -c /var/tmp/portage/sci-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2/src/data.cpp; make[2]: *** [src/CMakeFiles/openbabel.dir/build.make:63: src/CMakeFiles/openbabel.dir/alias.o] Error 1; make[2]: *** Waiting for unfinished jobs....; make[2]: Leaving directory '/var/tmp/portage/sci-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2_build'; make[1]: *** [CMakeFiles/Makefile2:1196: src/CMakeFiles/openbabel.dir/all] Error 2; make[1]: Leaving directory '/var/tmp/portage/sci-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2_build'; make: *** [Makefile:141: all] Error 2; ```. My full build log (showing the source configuration using cmake and the entire compilation output) is [here](https://paste.pound-python.org/show/UBYYuKH3qSq84yOe2ux4/). . `emerge -pqv '=sci-chemistry/openbabel-2.3.2-r1::gentoo'` returns (to show the USE flags, which affect configure options, refer to the ebuild linked earlier for how):. ```bash; [ebuild N ] sci-chemistry/openbabel-2.3.2-r1 USE=""openmp wxwidgets -doc {-test}""; ```. The output of `emerge --info '=sci-chemistry/openbabel-2.3.2-r1::gentoo'` (which will show details about my Gentoo system, like compiler options):. ```bash; Portage 2.3.5 (python 3.4.6-final-0, default/linux/amd64/13.0/desktop/plasma/systemd, gcc-6.3.0, glibc-2.24-r1, 4.11.0-gentoo x86_64); =================================================================; System Settings; =================================================================; System uname: Linux-4.11.0-gentoo-x86_64-Intel-R-_Core-TM-_i7-4700MQ_CPU_@_2.40GHz-with-gentoo-2.3; KiB Mem: 16344248 total, 10297040 free; KiB Swap: 0 total, 0 free; sh bash 4.4_p12;",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566:5896,log,log,5896,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566,1,['log'],['log']
Testability,2: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSaniti,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:14542,test,test,14542,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"2aacbc083b58 (f: 3154656000.000000, d: 2.318224e-310); xmm3 00002aacbc083ba5 (f: 3154656256.000000, d: 2.318224e-310); xmm4 00002aaaaae4a100 (f: 2867110144.000000, d: 2.317785e-310); xmm5 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm6 0000000042799c10 (f: 1115266048.000000, d: 5.510146e-315); xmm7 000000000a175ac0 (f: 169302720.000000, d: 8.364666e-316); xmm8 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm9 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm10 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm11 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm12 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm13 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm14 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm15 0000000000000000 (f: 0.000000, d: 0.000000e+00); Module=/lib64/libc.so.6; Module_base_address=0000003F6F800000; Target=2_40_20090519_035743_LHdSMr (Linux 2.6.18-164.11.1.el5); CPU=amd64 (16 logical CPUs) (0xfbb2e1000 RAM); ----------- Stack Backtrace -----------; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9prt24.so [0x2aaaab067d33]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9vm24.so [0x2aaaaace7cad]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9vm24.so [0x2aaaaace7b5f]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9prt24.so [0x2aaaab06ee21]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9vm24.so [0x2aaaaace728b]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9vm24.so [0x2aaaaace7319]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9prt24.so [0x2aaaab06f891]; /lib64/libc.so.6 [0x3f6f8302d0]; /lib64/libc.so.6 [0x3f6f872b31]; /lib64/libc.so.6(__libc_malloc+0x6e) [0x3f6f874bee]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9prt24.so [0x2aaaab06488c]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9prt24.so [0x2aaaab06568e]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9vm24.so [0x2aaaaad319ac]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/979:2705,log,logical,2705,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/979,1,['log'],['logical']
Testability,"3.8.6; swig-2.0.10. ## Expected Behavior; None error. ## Actual Behavior; ```; [ 86%] Built target obfitall; /usr/bin/gmake -f scripts/CMakeFiles/bindings_python.dir/build.make scripts/CMakeFiles/bindings_python.dir/depend; gmake[2]: Entering directory `/builddir/build/BUILD/openbabel-openbabel-3-1-1'; [ 86%] Generating python/openbabel/openbabel-python.cpp, python/openbabel/openbabel.py; cd /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts && /usr/bin/swig -python -c++ -small -O -templatereduce -naturalvar -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -o /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/python/openbabel/openbabel-python.cpp -DHAVE_EIGEN -DHAVE_EIGEN3 -outdir /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/python/openbabel /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/openbabel-python.i; gmake[2]: Leaving directory `/builddir/build/BUILD/openbabel-openbabel-3-1-1'; [ 86%] Built target test_inchiwrite; [ 86%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; cd /builddir/build/BUILD/openbabel-openbabel-3-1-1/test && /usr/bin/c++ -DFORMATDIR=\""/builddir/build/BUILD/openbabel-openbabel-3-1-1/lib64//\"" -DHAVE_EIGEN -DHAVE_EIGEN3 -DHAVE_LIBZ -DHAVE_RADPIJSON -DHAVE_SHARED_POINTER -DHAVE_WXWIDGETS -DTESTDATADIR=\""/builddir/build/BUILD/openbabel-openbabel-3-1-1/test/files/\"" -DUSING_DYNAMIC_LIBS -DWXUSINGDLL -D_FILE_OFFSET_BITS=64 -D__WXGTK__ -I/usr/include/boost169 -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/data -I/usr/include/eigen3 -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/test -isystem /usr/lib64/wx/include/gtk3-unicode-3.0 -isystem /usr/include/wx-3.0 -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -pthread -DNDEBUG -O3 -DNDEBUG -fPIE -pthread -std=gnu++11 ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2407:1218,test,test,1218,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2407,1,['test'],['test']
Testability,"305-682c7200-3e6e-11eb-9010-6b1eb109ab93.png). I started looking into adding this via CI [here](https://github.com/ltalirz/openbabel/tree/add-coverage) but it turns out that when compiling with `-DCMAKE_BUILD_TYPE=Debug` (which I believe is required for accurate coverage results - didn't check, though), the tests take a very long time ([gh actions log](https://github.com/ltalirz/openbabel/runs/1554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2312:1289,Test,Test,1289,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312,1,['Test'],['Test']
Testability,389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSani,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:14279,test,test,14279,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:5028,test,test,5028,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"3: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 83: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 83: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 83: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 85; Start 85: test_regressions_223; --; 85: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 85: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 95; Start 95: test_regressions_2111; --; 95: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 95: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 95: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:9580,test,test,9580,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: any; Operating system and version: Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I would like to get 1.0 when I'm calling the function; `dynamic_cast<OBPairFloatingPoint *>((OBGenericData*)NULL)->GetGenericValueDef(1.0)`; but I get segmentation fail in Ubuntu 18.04 (master branch compiled with standard g++ compiler from Ubuntu repository. See https://stackoverflow.com/questions/2474018/when-does-invoking-a-member-function-on-a-null-instance-result-in-undefined-behav. Simple test case (fails in Ubuntu 18.04 `g++ -O3 main.cpp; ./a.out`); ```; // Example program; #include <iostream>; #include <string>. class A {; public: ; float f;; inline float foo(const float & def) {; if( this == NULL) {; return def;; }; else return f; ; }; };. int main(); {; A * d = NULL; ; std::cout << d->foo(1.0) << std::endl;; }; ```. I think, that it is much better to have the function like this; ```; static ValueT GetValue(OBGenericData * obd); { ; OBPairTemplate<ValueT> * pd = dynamic_cast<OBPairTemplate<ValueT> *>(obd);; assert( pd != NULL);; return pd->GetGenericValue();; }; static ValueT GetValue(OBGenericData * obd, const ValueT &def_val); { ; OBPairTemplate<ValueT> * pd = dynamic_cast<OBPairTemplate<ValueT> *>(obd);; return (pd == NULL) ? def_val : pd->GetGenericValue();; }; ```; Using the static function gives much nicer call.; `float f = OBPairFloatingPoint::GetValue(a.getData(""something""), 1.0);`; instead of; `float f = dynamic_cast<OBPairFloatingPoint *>(a->GetData(""something""))->Get",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1913:1254,test,test,1254,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1913,1,['test'],['test']
Testability,"554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really need to be that long-running; ; run the coverage only, say, once per day;; ... I'd be very happy for feedback on this. [1] Issues https://github.com/openbabel/openbabel/issues/1937 https://github.com/openbabel/openbabel/issues/1893 https://github.com/openbabel/openbabel/issues/1321 https://github.com/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2312:1687,Test,Test,1687,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312,1,['Test'],['Test']
Testability,"60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_addh_1; --; 61: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsy",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:6793,test,test,6793,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"6: The type or namespace name Action' could not be found. Are you missingSystem' using directive?; ./VectorVecInt.cs(47,23): error CS0246: The type or namespace name Action' could not be found. Are you missingSystem' using directive?; ./VectorVecOBVector3.cs(47,23): error CS0246: The type or namespace name Action' could not be found. Are you missingSystem' using directive?; ./VectorVecUInt.cs(47,23): error CS0246: The type or namespace name Action' could not be found. Are you missingSystem' using directive?; ./VectorpAtom.cs(47,23): error CS0246: The type or namespace name Action' could not be found. Are you missingSystem' using directive?; ./VectorpBond.cs(47,23): error CS0246: The type or namespace name Action' could not be found. Are you missingSystem' using directive?; ./VectorpData.cs(47,23): error CS0246: The type or namespace name Action' could not be found. Are you missingSystem' using directive?; ./VectorpInternalCoord.cs(47,23): error CS0246: The type or namespace name Action' could not be found. Are you missingSystem' using directive?; ./VectorpRing.cs(47,23): error CS0246: The type or namespace name Action' could not be found. Are you missingSystem' using directive?; ./VectorpRotor.cs(47,23): error CS0246: The type or namespace name Action' could not be found. Are you missingSystem' using directive?; Compilation failed: 22 error(s), 0 warnings; [100%] Building CXX object test/CMakeFiles/test_runner.dir/obtest.cpp.o; make[2]: *** [/Users/chengxiyang/Downloads/openbabel-master/scripts/csharp/openbabel-csharp.cpp] Error 1; make[2]: *** Deleting file `/Users/chengxiyang/Downloads/openbabel-master/scripts/csharp/openbabel-csharp.cpp'; make[1]: *** [scripts/CMakeFiles/bindings_csharp.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [100%] Linking CXX executable ../bin/test_runner; [100%] Built target test_runner; make: *** [all] Error 2. The code I used is from the Github-master.; You can contact me at yangchen@oregonstate.edu.; Thanks for help!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1867:3697,test,test,3697,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1867,1,['test'],['test']
Testability,"7 1.00 41.71 ? ? ? ? ? 1 LYS A C 1; ...; ATOM 950 C CG2 . VAL A 1 124 ? 28.143 10.116 17.555 1.00 22.08 ? ? ? ? ? 124 VAL A CG2 1; ATOM 951 O OXT . VAL A 1 124 ? 27.661 12.956 19.992 1.00 22.31 ? ? ? ? ? 124 VAL A OXT 1; ATOM 952 N N . LYS B 1 1 ? 23.301 17.040 7.043 1.00 42.58 ? ? ? ? ? 1 LYS B N 1; ATOM 953 C CA . LYS B 1 1 ? 21.860 16.668 7.160 1.00 41.80 ? ? ? ? ? 1 LYS B CA 1; ... Here ATOMs 1 and 952 are in different chains (A and B) of the same entity (1), at the same position in the chain (N of residue 1 (LYS)). the same for the original (from pdb web site) pdb:. ATOM 1 N LYS A 1 36.746 -20.748 26.111 1.00 0.00 N; ATOM 2 CA LYS A 1 37.454 -19.448 25.930 1.00 0.00 C; ATOM 3 C LYS A 1 36.371 -18.397 25.697 1.00 0.00 C; ...; ATOM 950 CG1 VAL A 124 28.143 10.116 17.555 1.00 0.00 C; ATOM 951 O VAL A 124 27.661 12.956 19.992 1.00 0.00 O; ATOM 952 N LYS B 1 23.301 17.040 7.043 1.00 0.00 N; ATOM 953 CA LYS B 1 21.860 16.668 7.160 1.00 0.00 C. the output of ""babel -i mmcif 1afk.cif -o pdb test.pdb"". ATOM 1 N LYS A 1 36.746 -20.748 26.111 1.00 0.00 N; ATOM 2 CA LYS A 1 37.454 -19.448 25.930 1.00 0.00 C; ATOM 3 C LYS A 1 36.371 -18.397 25.697 1.00 0.00 C; ...; ATOM 950 CG2 VAL A 124 28.143 10.116 17.555 1.00 0.00 C; ATOM 951 OXT VAL A 124 27.661 12.956 19.992 1.00 0.00 O; ATOM 952 N LYS A 1 23.301 17.040 7.043 1.00 0.00 N; ATOM 953 CA LYS A 1 21.860 16.668 7.160 1.00 0.00 C. The last two lines should read as in the original PDB (... LYS B ...). Here is a patch for src/formats/mmcifformat.cpp that does the job:. 94a95; > _atom_site_label_asym_id, // The chain id; 174a176; > { ""_atom_site_label_asym_id"", CIFTagID::_atom_site_label_asym_id },; 473a476,481; >; > typedef map<string, unsigned> CIFasymmap;; > CIFasymmap asym_map;; > string last_asym_id = """";; > unsigned next_asym_no = 0;; >; 638,640c646,660; < case CIFTagID::_atom_site_label_entity_id: // The chain number of the residue, e.g. 2; < cerr << ""chain is "" << token.as_text() << "" num "" << token.as_unsigned() << end",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/912:1922,test,test,1922,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/912,1,['test'],['test']
Testability,89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runne,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:53039,test,test,53039,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,89:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitiz,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:14016,test,test,14016,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,89:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 18: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 19; Start 19: test_builder_3; --; 19: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undef,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:3701,test,test,3701,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,9%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runne,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:52960,test,test,52960,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:53857,test,test,53857,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"97: ../src/obconversion.cpp:302:24: runtime error: load of value 109, which is not a valid value for type 'bool'; 97: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 98; Start 98: test_rotor_3; --; 98: ../src/obconversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-beha",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:12698,test,test,12698,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,9:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefi,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:13753,test,test,13753,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,9:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 183; Start 183: test_ffmmff94_5; --; 183: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 183: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 185; Start 185: test_ffuff_1; --; 185: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 185: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 203; Start 203: test_phmodel_1; --; 203: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 203: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 204; Start 204: test_residue_1; --; 204: ../src/residue.cpp:853:13: runtime error: member call on address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/residue.cpp:853:13 in ; 204: ../include/openbabel/atom.h:160:45: runtime error: member access within address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../include/openbabel/atom.h:160:45 in ; --;,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:19081,test,test,19081,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,9:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavi,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:13226,test,test,13226,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:15088,test,test,15088,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,: undefined reference to `g_log_structured_standard'; //usr/lib/x86_64-linux-gnu/libcairo.so.2: undefined reference to `FT_Get_Var_Design_Coordinates'; collect2: error: ld returned 1 exit status; src/GUI/CMakeFiles/obgui.dir/build.make:149: recipe for target 'bin/obgui' failed; make[2]: *** [bin/obgui] Error 1; CMakeFiles/Makefile2:6751: recipe for target 'src/GUI/CMakeFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/t,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:52213,test,test,52213,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,":. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On ever",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2546:1165,test,tested,1165,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2546,1,['test'],['tested']
Testability,"://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: macOS 10.15.5. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; `obabel ... -h` should ""hydrogenate"" a molecule: C2N --> C2H7N. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; `obabel -h` does not change the molecule, nor is the `-h` flag even listed in the help text.; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; [14:23:03] tmck:stoichkit git:(feat/reaction-domain-model*) $ obabel -icdxml priv/cd.xml -omolreport -h; TITLE: 47; FORMULA: C2N; MASS: 38.0281; TOTAL SPIN: 2; ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.2150; ATOM: 2 C TYPE: C3 HYB: 3 CHARGE: 0.1075; ATOM: 3 C TYPE: C3 HYB: 3 CHARGE: 0.1075; BOND: 0 START: 1 END: 2 ORDER: 1; BOND: 1 START: 1 END: 3 ORDER: 1; 1 molecule converted; ```; (where `priv/cd.xml` contents is shown here: https://gist.github.com/ttymck/931b4594d827ea60c415d1191f6f3717). I would expect `FORMULA: C2H7N`. As well, `-h` is not included in the help text, so it is not clear if this feature is still available:. ```; [14:20:41] tmck $ obabel --help | grep -e '-h' ; [14:21:37] tmck $; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2266:1393,test,test,1393,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2266,1,['test'],['test']
Testability,:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavi,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:13490,test,test,13490,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pyb",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:15104,test,test,15104,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['test'],['test']
Testability,"; -- Use std::shared_ptr in memory; -- Could NOT find Boost; -- Could NOT find Boost; -- Maestro formats will NOT be supported. Please install Boost to enable Maestro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -- Could NOT find Boost; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR); -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) (Required is at least version ""2.0""); -- SWIG 2.0 NOT found; -- Configuring done; -- Generating done; -- Build files have been written to: /home/kk/build. **make test**; 97% tests passed, 6 tests failed out of 227. Total Test time (real) = 64.56 sec. The following tests FAILED:; 221 - pybindtest_bindings (Failed); 222 - pybindtest__pybel (Failed); 223 - pybindtest_example (Failed); 224 - pybindtest_obconv_writers (Failed); 225 - pybindtest_cdjsonformat (Failed); 226 - pybindtest_pcjsonformat (Failed); Errors while running CTest; Makefile:72: recipe for target 'test' failed; make: *** [test] Error 8. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. 1. download the sourse code(openbabel-openbabel-3-1-1.tar.gz); 2. sudo apt install libboost-dev; 3. sudo apt install gcc g++ make cmake; 4. sudo apt install libxml2-dev zlib1g-dev libcairo2-dev libeigen3-dev libopenbabel-dev; 5. sudo apt install python3-dev; 6. tar -xzvf openbabel-openbabel-3-1",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2234:2441,test,test,2441,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234,3,['test'],"['test', 'tests']"
Testability,"; ../../include\openbabel/reaction.h(56) : error C2228: left of '.size' must have class/struct/union; type is ''unknown-type''; ../../include\openbabel/reaction.h(59) : error C2065: '_products' : undeclared identifier; ../../include\openbabel/reaction.h(59) : error C2228: left of '.size' must have class/struct/union; type is ''unknown-type''; ../../include\openbabel/reaction.h(62) : error C2065: '_reactants' : undeclared identifier; ../../include\openbabel/reaction.h(62) : error C2228: left of '.push_back' must have class/struct/union; type is ''unknown-type''; ../../include\openbabel/reaction.h(62) : error C2065: 'sp' : undeclared identifier; ../../include\openbabel/reaction.h(65) : error C2065: '_products' : undeclared identifier; ../../include\openbabel/reaction.h(65) : error C2228: left of '.push_back' must have class/struct/union; type is ''unknown-type''; ../../include\openbabel/reaction.h(65) : error C2065: 'sp' : undeclared identifier; ../../include\openbabel/reaction.h(68) : error C2065: '_ts' : undeclared identifier; ../../include\openbabel/reaction.h(68) : error C2065: 'sp' : undeclared identifier; ../../include\openbabel/reaction.h(71) : error C2065: '_agent' : undeclared identifier; ../../include\openbabel/reaction.h(71) : error C2065: 'sp' : undeclared identifier; ..\..\src\formats\chemdrawcdx.cpp(755) : warning C4065: switch statement contains 'default' but no 'case' labels; ..\..\src\formats\chemdrawcdx.cpp(1087) : warning C4065: switch statement contains 'default' but no 'case' labels; chem3dformat.cpp; cccformat.cpp; carformat.cpp; cacheformat.cpp; cacaoformat.cpp; boxformat.cpp; bgfformat.cpp; balstformat.cpp; amberformat.cpp; alchemyformat.cpp; adfformat.cpp; acrformat.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBMoreFormats\Release\BuildLog.htm""; OBMoreFormats - 61 error(s), 12 warning(s); ========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========. Reported by: peterennis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/775:11167,log,log,11167,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/775,1,['log'],['log']
Testability,"; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10 and Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The NET binding worked fine under the net core 2.1, net core 3.1 and net framework 4.x at version 2.4.1 and 3.0.0. I have tested both on Windows and Linux system. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The NET binding fails to work at net framework 4.x and all versions of net core. System.BadImageFormatException:“Could not load file or assembly 'OBDotNet, Version=0.5.0.0, Culture=neutral, PublicKeyToken=3069c9c4f488e4bd'. An attempt was made to load a program with an incorrect format”. It looks like the OBDotNet.dll has not been updated since version 2.3.2, the targeted framework is still net framework 3.5. For some reason, it still works under net framework 4.x and net core. But it no longer works in version 3.1.1. Those who use net framework or net core environment, please do not upgrade to 3.1.1, stay at 3.0.0 or lower. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - thi",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2268:988,test,tested,988,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2268,1,['test'],['tested']
Testability,"; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolum",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:7821,test,test,7821,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,2,['test'],"['test', 'testfastsearch']"
Testability,"; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_addh_1; --; 61: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.c",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:6274,test,test,6274,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"<!--; --> I'm trying to run a pretty simple conversion of a text file to pdb. I'm running my program on python 2.7 in a conda virtual environment on MacOSx, but I'm getting an error code. . My code:; `import pybel`; `drug_3d = pybel.readfile(""text"", ""/Users/myname/Documents/drug.txt"")`; `drug_3d_output = pybel.Outputfile(""pbd"", ""/Users/myname/Documents/drug.pdb"")`; `drug_3d_output.write(drug_3d)`; `drug_3d_output.close()`. I get this error code:; ""Traceback (most recent call last):; File ""/Users/myname/Documents/myprogram.py"", line 20, in <module>; drug_3d_output.write(drug_3d); File ""/Users/myname/miniconda2/envs/myenv/lib/python2.7/site-packages/pybel.py"", line 272, in write; self.obConversion.WriteFile(molecule.OBMol, self.filename); AttributeError: 'generator' object has no attribute 'OBMol'. - [X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Most recent on conda; Operating system and version: MacOSx Sierra. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. --> . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior --> Error; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; --> ; [drug.txt](https://github.com/openbabel/openbabel/files/1182056/drug.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1607:1479,test,test,1479,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1607,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes. ; -->; If a chlorine atom is represented as CL instead of Cl in a file Open Babel, does not properly convert the symbol. This can easily be seen when writing the SMILES out for the file. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: v3.1.1 conda-forge; Operating system and version: Manjaro 20.2.1, Python 3.8. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; SMILES: CCl. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; SMILES: [CH3].*; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Writing the SMILES string for the molecule below resulted in the [CH3].* SMILES output.; ```; from openbabel import pybel. mol = next(pybel.readfile(""xyz"", ""ccl.xyz"")); print(mol.write(""smi""); ```; 5. C -3.25634 0.95398 0.05312; CL -1.48936 0.95398 0.05311; H -3.61336 1.82622 0.60505; H -3.61337 0.03988 0.53253; H -3.61338 0.99586 -0.97822",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2333:1472,test,test,1472,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2333,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; --> . - [X] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: win10, python 3.8 anaconda. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; mol smiles CC(N)C1=CC2=C(C=C1)C=NC=C2, logP from chemaxon 1.29. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I use pybel to calculate the logP of the mol above, the result is 0. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; from openbabel import pybel as pb; my=pb.readstring(""smi"", ""CC(N)C1=CC2=C(C=C1)C=NC=C2""); my.calcdesc(descnames=['MW', 'logP', 'HBA1', 'HBD']); {'MW': 172.22637999999998, 'logP': 0.0, 'HBA1': 2.0, 'HBD': 1.0}",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2372:879,log,logP,879,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2372,5,"['log', 'test']","['logP', 'test']"
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. ## Environment Information; Open Babel version: Current github master (2.4.1+). ## Expected Behavior; When converting the test file 1ubq.pdb.gz to smi, the Arg is not correctly perceived. The guanidinium group is perceived as Arg-N=C([NH2+])N, which is a H-deficient N, instead of Arg-[N+]=C(N)N for example. Note: this may be related to #949 somehow.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1548:708,test,test,708,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1548,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Win 10 64bit. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Selecting ""xyz"" as input or output format in the graphical user interface. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The option is not available. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Clicking on input/output formats within obgui doesn't show xyz format.; ![obgui](https://user-images.githubusercontent.com/69631139/91174038-025d8400-e6df-11ea-86f0-adb7daa7cd31.png); ![obgui2](https://user-images.githubusercontent.com/69631139/91174042-02f61a80-e6df-11ea-8352-47f7d0b350fc.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2275:1340,test,test,1340,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2275,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ Yes] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Windows 10 . ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I tried canonical smiles, smi and smiles format to get a fasta file output with proper values. Note I am getting smiles from Chembl database. . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; >Unknown molecule 0 bp; generated with OpenBabel 2.4.1; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; take any canonical smiles & convert to fasta ; COC(=O)c1ccc2c(c1)c1ccccc1n2CCCN1C[C@H](C)N[C@H](C)C1; --",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2359:1436,test,test,1436,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2359,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version:windows anaconda python2.7.18. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; `Error; Traceback (most recent call last):; File ""D:\anaconda\envs\my-python2.7\lib\unittest\case.py"", line 329, in run; testMethod(); File ""E:\plip-stable\plip\test\test_literature_validated.py"", line 469, in test_1aku; tmpmol.characterize_complex(ligand); File ""E:\plip-stable\plip\modules\preparation.py"", line 1409, in characterize_complex; lig_obj = Ligand(self, ligand); File ""E:\plip-stable\plip\modules\preparation.py"", line 1003, in __init__; self.inchikey = self.molecule.write(format='inchikey'); File ""D:\anaconda\envs\my-python2.7\lib\site-packages\pybel.py"", line 527, in write; format). **ValueError: inchikey is not a recognised Open Babel format`**. environment info:; ![image](https://user-images.githubusercontent.com/32454333/81146499-fec8b480-8faa-11ea-9433-65d6ea99796b.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2194:1193,test,testMethod,1193,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2194,2,['test'],"['test', 'testMethod']"
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2143:1215,test,test,1215,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2143,2,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [X] This is a feature request. ## Environment Information; Open Babel version: OpenBabel 3.1.1 (3.1.1+dfsg-6); Operating system and version: Linux Debian 12/bookworm [testing]. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The current definition of the bond block in `.mol` and `.sdf` (v3000) allows C=C double bonds without assigned (*E*)/(*Z*) configuration. See, for example, Biovia's documentation ([link to pdf](https://web.archive.org/web/20210219065450/https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf)) by August 2020, p. 11, which offers cases `0`, `1`, `2`, or `3`. Let me suggest OpenBabel retains `CFG=[x]` in a line like; ```; M V30 3 1 3 4 CFG=2; ```; when writing such a file. Similar to molecule sketchers, the request to visualize a structure as a `.svg` could yield either a wavy single bond attached to the double bond in question .or. a crossed double bond to mark the lack of specification; apparently, this is not yet enabled. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Passing a `.sdf` about alkenes including the `CFG=2` entry (generation by [DataWarrior](https://openmolecules.org/datawarrior/index.html),",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2429:805,test,testing,805,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2429,1,['test'],['testing']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Linux Mint 19.3 64-bit Xfce and Windows 10 ver 1909. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; obspectrophore generates spectrophores that are decimal fractions. Consequently, comparisons must be done with distance measures such as Euclidean distances rather than Tanimoto distances or Tanimoto similarity coefficients. Could the spectrophore sets for each compound simply be multiplied by a constant (e.g., 10^5) to convert all the numbers to integers so that Tanimoto coefficients could then be computed? Would this be a legitimate procedure?; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Please see description above.; ## Steps to Reproduce; <!--; This is the current consistent behavior. If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2142:1796,test,test,1796,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2142,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 x86, python bindings 3.1.1 from the Unofficial Windows Binaries for Python Extension Packages.; Operating system and version: Windows 10 20H2 64bit, Python 3.6.5 32bit. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Pybel should allow writing to virtual files such as StringIO() and BytesIO() or return the png depiction as a string if no file has been specified, this is already doable using openbabel's OBConversion().WriteString(), integrating it to Pybel will be a good QOL improvement. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Pybel module only accepts os.Pathlike objects in draw(), and has no return. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2375:1709,test,test,1709,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2375,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: Open Babel 2.3.2 -- Dec 18 2015 -- 10:48:26; Operating system and version: ubuntu 16.04 LTS. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; In current version, suppose I want to extract xyz corrdinates from adfout file, I use the following code, ; /usr/bin/babel -i adfout test.out -o xyz geom.xyz; I found the xyz values are in ""10.5f"" format. ; How to change this format to ""20.12f"" ? . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1693:1033,test,test,1033,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1693,2,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43 (homebrew); Operating system and version: MacOS 11.2.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. I would like to be able to specify the write options when using mol.write() like in the Outputfile.write() or the Readfile() or ReadString(). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. The mol.write() does not support an opt dictionary. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2341:1477,test,test,1477,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2341,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43; Operating system and version: MacOS 11.2.3. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I would like there to be some option for turning the verbosity on or off of the command. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Right now you can see in https://github.com/openbabel/openbabel/blob/master/src/conformersearch.cpp that in the constructor the default log is set to std out. . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2348:1319,log,log,1319,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2348,2,"['log', 'test']","['log', 'test']"
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version:Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The libmaeparser library should get statically built when BUILD_SHARED=OFF. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Gets built as a dynamic library, resulting in a link time error linking with other static libraries. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Temporary workaround was to; remove SHARED from ; add_library(maeparser SHARED Buffer.cpp MaeBlock.cpp MaeParser.cpp Reader.cpp Writer.cpp); in openbabel-3.0.0/external/maeparser-1.1/CMakeLists.txt; but the right fix is probably to make it dependent on BUILD_SHARED.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2089:1411,test,test,1411,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2089,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Linux Debian 12/bookworm [testing], Python 3.9.8. ## Expected Behavior. According to `obabel -L png`, it is possible to append/include e.g., the mol file to/in the `.png` written. See e.g., legacy documentation of OpenBabel 2.3.1 [here](http://openbabel.org/docs/current/FileFormats/PNG2_format.html) and comment by @frederikw in issue report [here](https://github.com/openbabel/openbabel/issues/2426). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Observation: The `.png` are written and are intelligible. By report of the CLI, the inclusion of the structure file however fails. Suggested changes, 1st class:; + Bug fix to restore the functionality. Suggested changes, 2nd class:; + With the `.pngj` format ([documentation](http://wiki.jmol.org/index.php/File_formats/Export)), Jmol apparently offers a similar export of static (classical `.png` like) and interactive (model) data. In Jmol, it is possible, e.g., to read this extended `.png`, to interact and export the model as `.sdf` «as usual». See archive pngj_examples.zip for examples. It would be nice if Jmol's `.pngj` would be understood by OpenBabel, and the augmente",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2428:747,test,testing,747,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2428,1,['test'],['testing']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X] This could be a serious problem for Python users. . There is a pyBEL module for parsing and handling biological networks https://pypi.python.org/pypi/PyBEL/. It is installed with the pip command as pybel, and it is imported into python as pybel. How does one import openbabel's pybel when pyBEL is installed on one's computer? . <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1700:1076,test,test,1076,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1700,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1, 2.3.2; Operating system and version: Ubuntu 16.04 Xenial. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When using the following command:; `obabel MMFF94_hypervalent.sdf -O MMFF94_hypervalent.smi --energy --ff MMFF94 --append Energy --log`. to compute the energies of molecules from the [validation suite ](http://www.ccl.net/cca/data/MMFF94/), a few molecules show an energy that doesn't match that provided by the reference suite.; [obabel241_reference_calibration.txt](https://github.com/openbabel/openbabel/files/1727000/obabel241_reference_calibration.txt); [MMFF94_hypervalent.smi.txt](https://github.com/openbabel/openbabel/files/1727003/MMFF94_hypervalent.smi.txt); The following molecule show the largest difference (in both v2.3.2 and v2.4.1):. 1. CUGLOF; 2. FORJIF; 3. GIHZEC; 4. JALSOE; 5. SEGWEG; 6. VIGTUA; 7. SO18A; 8. ERULE_03. The base SDF file was taken from the MMFF94 website and modified to account for the formal charges that weren't explicit in the original mol2 file. Is this a mistake from my part or in my open babel distribution?. Many thanks for developing open babel!. Best Regards. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If sugge",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1778:1004,log,log,1004,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1778,1,['log'],['log']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Gentoo Linux, 5.6.15-gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Failed 0/8 test programs. 0/34 subtests failed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Can't call method ""GetMass"" on an undefined value at t/data.t line 21.; t/data.t ........... Dubious, test returned 255 (wstat 65280, 0xff00) ; Failed 1/2 subtests . t/data.t (Wstat: 65280 Tests: 1 Failed: 0); Non-zero exit status: 255; Parse errors: Bad plan. You planned 2 tests but ran 1.; Files=8, Tests=34, 0 wallclock secs ( 0.03 usr 0.01 sys + 0.39 cusr 0.06 csys = 0.49 CPU); Result: FAIL; Failed 1/8 test programs. 0/34 subtests failed. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; swig -perl5 -c++ -small -O -templatereduce -naturalvar -I/usr/include/openbabel3 -o scrips/perl/openbabel-perl.cpp -outdir scrips/perl scripts/openb",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2247:885,test,test,885,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; **Open Babel version:** `Open Babel 2.4.90 -- Oct 15 2018 -- 13:24:25`; This is the latest master from GitHub cloned and compiled, passes all tests.; **Operating system and version:** Ubuntu 18.04. $ uname -a; Linux nuke 4.4.0-137-generic #163-Ubuntu SMP Mon Sep 24 13:14:43 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Dear Open Babel, I am having troubles with the most recent version from Github. I am trying to convert smiles to 2d PNG files with the command:. obabel -:c1ccccc1 -o test.png. With my old version of Open Babel, `Open Babel 2.4.1 -- Feb 2 2017 -- 11:49:37`; I get a correctly looking png file:. Inline-style: ; ![alt text2](https://i.imgur.com/WpUcWKE.png ""Old Open Babel""). ## Actual Behavior. With the most recent Open Babel, I get a corrupted image with the exact same input line; ![alt tex12](https://i.imgur.com/OM9yIqx.png ""New Open Babel""). ## Steps to Reproduce. Running the following command. obabel -:c1ccccc1 -o test.png",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1900:839,test,tests,839,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1900,3,['test'],"['test', 'tests']"
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.3.2; Operating system and version: Ubuntu 18.04.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Qeq charges computed with openbabel for IRMOF-1 (also named MOF-5) coherent with the values computed with the same protocol as implemented in the code provided by B. Wells et al. (https://pubs.acs.org/doi/suppl/10.1021/jp510415h, see archive in the Supporting Information). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Qeq charges are completely different, also unphysical: e.g., negative on the Zn ion (-2.66 while the correct one should be +0.46). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; obabel IRMOF-1.cif --partialcharge qeq -O IRMOF-1_qeq-obabel.mol2; Output and comparison: [IRMOF-1.zip](https://github.com/openbabel/openbabel/files/2479296/IRMOF-1.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1899:1641,test,test,1641,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1899,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1 (or the 2.3.2 GUI version); Operating system and version: CentOS Linux 7 (Core). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Converting a periodic structure (e.g. .pdb file) to Tinker MM3 format. . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Because of the periodic boundary conditions, it appears the bonds can not be recognized and the MM3 atom types can not be derived, leading to a segmentation fault. However **the MM2 atom types can be derived** (dropping the -x3 option). I don't mind the bonds not being recognized, I could just create a 3x3x3 supercell and look at the atom types of the central cell. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; obabel -ixyz test.xyz -otxyz -x3; [test.zip](https://github.com/openbabel/openbabel/files/7667137/test.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2436:1711,test,test,1711,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2436,4,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1.; Operating system and version: Windows 10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. --> conversion of SMILES (approximately 500 rows) to mol2 output (including hydrogen bonds with polar atoms and 3D coordinates). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior --> The program freezes and takes up all memory of my pc; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1709:1409,test,test,1409,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1709,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Debian Buster. ## Expected Behavior; I would want to convert the output geometry given in the NWChem output into xyz format. ## Actual Behavior; The coordinates are not the ones from the final geometry optimization but from the first given geometry in the output file and the x and y coordinates only of the first atom given are both changed to exactly 0. ## Steps to Reproduce; This happens with all tested NWChem output files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2290:1155,test,tested,1155,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2290,1,['test'],['tested']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Windows 7. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Calculated logP of Brc1c(Oc2c(Br)cc(Br)cc2O)ccc(Br)c1 = 6.2345; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Calculated logP of Brc1c(Oc2c(Br)cc(Br)cc2O)ccc(Br)c1 = 0; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Fresh install of 2.4.1 resulted in actual behavior. After additional installation of 2.3.2, logP calculation was as expected for both versions.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1635:866,log,logP,866,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1635,4,"['log', 'test']","['logP', 'test']"
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: win10; conda list:; openbabel 2.4.1 py27_2 openbabel; ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; calculate the maccs fingerprint via compounds.calcfp('maccs'). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>; MACCS is not in the fingerprint list of pybel.fps; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Install openbabel via ; `conda install -c openbabel openbabel`; Then; ```python; import pybel; pybel.fps; # ['ecfp0', 'ecfp10', 'ecfp2', 'ecfp4', 'ecfp6', 'ecfp8', 'fp2', 'fp3', 'fp4']; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1573:1387,test,test,1387,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1573,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS 8.1.1911. ## Expected Behavior; After building OpenBabel I expected ctest to run all the tests and for them all to pass. ## Actual Behavior; The 1st test (unittest) is skipped (Not Run). This appears to be because ctest expects the unittest executable to be in build/tests whereas it's actually in build/bin. After copying unittest to build/test all tests are run and pass.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161:850,test,tests,850,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161,5,['test'],"['test', 'tests']"
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Win 10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Openbabel 2.4.1 generates such structures correctly, 3.0.0 crashes every time. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; Generate 3D coordinates for a structure ""c1ccc(F)cc1"" using either the GUI or using python bindings.; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2117:1409,test,test,1409,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2117,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: Debian 10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Correctlly convert sdf to pdbqt and add hydrogen in ph 7.4; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; More than one ROOT item appear in pdbqt file. It actually convert one compound into two. Using command: obabel z.sdf -O z.pdbqt -p 7.4. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; The sdf file and pdbqt file is here.; [File.zip](https://github.com/openbabel/openbabel/files/7641705/File.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2435:1427,test,test,1427,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2435,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1-x64; Operating system and version: windows10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Normal installation; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; After running the executable installation package OpenBabel-3.1.1-x64.exe all environment variables in $PATH will be removed, only openbabel left; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2304:1403,test,test,1403,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2304,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CenOS 7. ## Description; <!-- Describe the intended output or what you expected to see. -->; I have a SMILES file ""test.smi"":. ```; CC1(C)[C@H](CC[C@@]2(C)[C@H]1CC[C@]3(C)[C@@H]2C(=O)C=C4[C@@H]5C[C@](C)(CC[C@]5(C)CC[C@@]34C)C(=O)O)O[C@H]6O[C@@H]([C@@H](O)[C@H](O)[C@H]6O[C@@H]7O[C@@H]([C@@H](O)[C@H](O)[C@H]7O)C(=O)O)C(=O)O; ```. Openbabel could never successfully generate 3d coordinates for this smiles file:. obabel test.smi -O test.sdf --gen3d. The warning information is as below:; ```; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 3 stereocenter(s) in this molecule (); with Atom Ids as follows: 7 9 21; Warning: Stereochemistry is wrong, using the distance geometry method instea; ```; The program will then never finish after showing this warning information.; It seems that there is a problem with the distance geometry method.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2280:869,test,test,869,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2280,3,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 7.9/RHEL 8.4. ## Expected Behavior; print xyz format of geometry; ## Actual Behavior; obabel segfaults; ## Steps to Reproduce; obabel h2.log -oxyz; When I try to read a Gaussian 16 CBSQ-B3 log file, OpenBabel segfaults. (obabel g16-cbsqb3.log -oxyz); If I delete all lines before "" Link1: Proceeding to internal job step number 5."" in the output file, then openbabel can process the file (obabel -ig16 h2_laststep.log -oxyz), but probably giving a wrong energy. The same error is not happening when I run version 2.4.1. with gdb (without debug info):; ```; Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff7599478 in OpenBabel::OBAtom::GetDistance(OpenBabel::OBAtom*) (); from /apps/gent/CO7/skylake-ib/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2/lib/libopenbabel.so.7; ```; [h2.log](https://github.com/openbabel/openbabel/files/8383268/h2.log)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2457:898,log,log,898,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2457,6,['log'],['log']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: win 10, python 3.8. ## Expected Behavior; I want to convert the smi to 3D structure and save the mol in mol2 format. But the jupyter lab interface was restarted automatically after the code was executed with error information.; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; the reported error is information below,; *** Open Babel Error in OpenBabel::OBBuilder::GetFragmentCoord; Rigid fragment c1cccnc1 in rigid-fragments.txt has all zero coordinates. <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; from openbabel import pybel; mol = pybel.readstring(""smi"", ""OC(C1=NC=CC=C1CC2=CC=C(C3CCC(S(=O)(NC)=O)CC3)C=C2)=O""); mol.make3D(); <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2332:1735,test,test,1735,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2332,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 2.4.1; Operating system and version: CentOS release 6.7 . ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; ![image](https://user-images.githubusercontent.com/49271274/55551215-349aca00-5715-11e9-9d8a-f88136748c3f.png). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; ![image](https://user-images.githubusercontent.com/49271274/55551727-71b38c00-5716-11e9-933d-454568dcfbc0.png); <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; [bnb_TPSS_beta_noethylene.txt](https://github.com/openbabel/openbabel/files/3043157/bnb_TPSS_beta_noethylene.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1957:1475,test,test,1475,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1957,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Trunk as of 2017-05-31; Operating system and version: Mac OSX 10.12.5 (but also Ubuntu 16.04). ## Expected Behavior; When depicting a molecule with a cyclopropyl with stereochemistry on the cyclic carbons, the wedges are best shown ""extracyclicly"". ## Actual Behavior; The wedge bonds end up in the cycle, see added image.; ![test](https://cloud.githubusercontent.com/assets/86855/26625417/4bd49f68-45f4-11e7-9dbc-4bab996add05.png). ## Steps to Reproduce; obabel -ismi -:""C[C@H]1[C@]([C@]1([H])C(O)=O)([H])CC"" -O test.png",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1581:1043,test,test,1043,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1581,2,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: `Open Babel 3.0.0 -- Oct 20 2019 -- 15:03:24`; Operating system and version: `macOS 10.15.1`. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ```; obrms --a; ```; should fail with the clear message; ```; obrms: invalid option -- a; Unrecognized option: 63; ``` ; as it happens with `obrms -a`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. A segmentation fault occurs:; ```; obrms --a; [1] 17978 segmentation fault obrms --a; ```; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. See above.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2071:1520,test,test,1520,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2071,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: both master/2.4.90 and 2.4.1; Operating system and version: Ubuntu on windows. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; ![image](https://user-images.githubusercontent.com/29393696/45576948-6e19ef80-b82e-11e8-9793-dc80f6fb3406.png). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; ![1](https://user-images.githubusercontent.com/29393696/45577003-bcc78980-b82e-11e8-81b7-7ebd71e8b3ad.png). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; $ obabel test.smi -Otest.png. test.smi:; [H+].CC[O-].CC[O-]. I uploaded more examples here. I was trying to find a general rule about when the bug would show up but couldn't find one. It seems super random. ; [pics.zip](https://github.com/openbabel/openbabel/files/2385189/pics.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1889:1482,test,test,1482,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1889,3,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: c3143e6235788ddd2c0a9d8298ad4873a5dbc81d; Operating system and version: Debian 11.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. No undefined behaviors are detected (during test). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Undefined behaviors are detected at:; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/include/openbabel/atom.h#L160; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichi_bns.c#L2737; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L128; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1676; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1677; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/graphsym.cpp#L389; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/obconversion.c",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:936,test,test,936,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: master; Operating system and version: MinGW windows crosscompiling . ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. openbabel/src/formats/fpsformat.cpp: Missed header; `#include <ctime>`",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1990:1251,test,test,1251,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1990,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2181:1215,test,test,1215,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2181,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2020:1214,test,test,1214,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2020,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:development version; Operating system and version:OS X EI Capitan version 10.11.5. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; These are the charges of phenol hydroxyl group published in QTPIE paper. https://www.sciencedirect.com/science/article/pii/S0009261407002618; 12 O 0.0483 2.3035 0.0000 O.3 1 UNL1 -0.82; 13 H -0.8450 2.6610 0.0000 H 1 UNL1 0.51; ## Actual Behavior; <!--- -->; These are the charges of hydroxyl group in phenol calculated by; babel -isdf phenol.sdf -omol2 -O phenol-qtpie.mol2 --partialcharge qtpie; 12 O 0.0483 2.3035 0.0000 O.3 1 UNL1 -1.3781; 13 H -0.8450 2.6610 0.0000 H 1 UNL1 0.7656; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1865:1646,test,test,1646,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1865,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.1 -- Jun 10 2021 -- 04:27:50 / libopenbabel7 3.1.1+dfsg-6; Operating system and version: Linux Debian 12/bookworm, branch testing. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I would like to assign InChI with the optional fixed H-layer. If used in conjunction with standard InChI, this information may be used to identify tautomers. This was implemented recently in Jmol (version 14.32.12, 2022-01-18 00:28:54; [reference](https://sourceforge.net/p/jmol/mailman/message/37419194/)). Thus -- lacking identification of an explicit example in the documentation -- an input like; ```python; from openbabel import pybel. mol = pybel.readstring(""smi"", ""Oc1ccccn1"") # i.e., 2-hydroxy pyridine; print(mol.write([""inchi"", ""xFixedH""])); ```; does not yield the anticipated (non standard) InChI; ```bash; InChI=1/C5H5NO/c7-5-3-1-2-4-6-5/h1-4H,(H,6,7)/f/h7H; ```. ## Actual Behavior; ```python; from openbabel import pybel. lactim = pybel.readstring(""smi"", ""Oc1ccccn1"") # i.e., 2-hydroxy pyridine; lactam = pybel.readstring(""smi"", ""C1=CC=CNC(=O)1"") # i.e., 2-pyridone. print(lactim.write(""inchi"")); print(lactam.write(""inchi"")); ```; yield the (necessarily identical) standard InChI; ```; InChI=1S/C5H5NO/c7-5-3-1-2-4-6-5/h1-4H,(H,6,7); InChI=1S/C5H5NO/c7-5-3-1-2-4-6-5/h1-4H,(H,6,7); ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2450:804,test,testing,804,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2450,1,['test'],['testing']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 2f34bda337d7ddefa8f2bebfc23931a63e45241f; Operating system and version: Debian 11.3. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. When output format of `obabel` is `inchi` or `inchikey` and logging is enabled (i.e. `-xl`):. 1. Log levels for InChI are appropriately set; 2. Input format is correctly determined from command line argument. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. 1. In the examples below, the level should be Info (or Debug) but not Error; 2. Input format is always MOLfile–file extension and `-i` option are ignored. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. If input is SMILES-string,. ```console; $ obabel -:C -o inchi -xl; InChI=1S/CH4/h1H4; ==============================; *** Open Babel Error in InChI log; Generating standard InChI; Input format: MOLfile; Output format: Plain text; Full Aux. info; No timeoutUp to 65534 atoms per structure; 1 molecule converted; ```. If input is a CML file,; ```console; $ obabel -:C -O CH4.cml --gen3D; 1 molecule ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2505:820,log,logging,820,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2505,2,"['Log', 'log']","['Log', 'logging']"
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 3.1.1 (tested using the x64 installer); Operating system and version: Windows 11 23H2 (OS Build 22631.4037). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The installer drops OpenBabel's files and registry keys in a location for all users.; - Shortcuts in `C:\ProgramData\Microsoft\Windows\Start Menu\Programs\OpenBabel 3.1.1`; - Miscellaneous program data (docs, examples etc.) in `C:\ProgramData\OpenBabel-3.1.1`; - Uninstall registry key to `\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\OpenBabel-3.1.1`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The installer drops its files and registry values in locations specific to the user account under which context the installer was run. To illustrate with an example scenario: a user is logged in interactively with a standard user account named 'Bob' with SID `S-1-5-21-1234`. The user downloads and runs the installer and is prompted to enter admin credentials so the user authenticates with an account named 'Admin' with SID `S-1-5-21-1000`. The installer finishes successfully but the user doesn't see OpenBabel in the Apps list in Windows Settings (alt. Programs and Features in Control Panel) or any shortcuts in their Start Menu; they",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2724:592,test,tested,592,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2724,1,['test'],['tested']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 3.1.1 - installed with apt; Operating system and version: Ubuntu 22.04, Python 3.10.4. ## Expected Behavior. I want to redirect the output stream in Python. I am expecting that with code like this:. mystring = io.StringIO(); obHandler.SetOutputStream(mystring). the output would be captured in `mystring`. ## Actual Behavior. However I am failing to find how to do so. It looks like SetOutputStream is either missing a converter from some Python object, or I am too stupid to find out how to use it. I can only get TypeErrors:. from openbabel import openbabel; import io; import sys; obHandler = openbabel.OBMessageHandler(); ; # With an IO stream (BytesIO or StringIO):; obHandler.SetOutputStream(io.BytesIO()); ##Out: TypeError: in method 'OBMessageHandler_SetOutputStream', argument 2 of type 'std::ostream *'. # With stderr/stdout: ; obHandler.SetOutputStream(sys.stderr); ##Out: TypeError: in method 'OBMessageHandler_SetOutputStream', argument 2 of type 'std::ostream *'. # With a file; with open(""test.out"", ""w"") as fd:; obHandler.SetOutputStream(fd); ##Out: TypeError: in method 'OBMessageHandler_SetOutputStream', argument 2 of type 'std::ostream *'. ## Steps to Reproduce; Code given above.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2525:1589,test,test,1589,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2525,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 3.1.1 ; Operating system and version: Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. When I gen3D for 100k smiles, show ""Open Babel Warning in CorrectStereoAtoms“ and ""Warning: Stereochemistry is wrong, using the distance geometry method instead"". But the distance geometry method will spend much time in this process, I hope I can skip it and save time. What can I do for it? I use the `eventlet`, set time out with signal, `func_timeout` and so on, but it not work. Thank U. I am looking forward to your reply.; ![5fbb9aed53bebd3f79fe46fd17f977d](https://user-images.githubusercontent.com/32425458/187076451-916f15fb-a7eb-4afd-91a5-7311e18607c1.jpg)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2530:1096,test,test,1096,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2530,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: MacOS Ventura 13.6. ## Expected Behavior; As per `obabel -Hcml`; ""In the absence of hydrogenCount and any explicit hydrogen on; an atom, implicit hydrogen is assumed to be present appropriate; to the radical or spinMultiplicity attributes on the atom or; its normal valency if they are not present."". If atoms in a cml file have explicit hydrogens, further implicit hydrogens should not be added. So, for the following, as a cml file; [ch2.txt](https://github.com/openbabel/openbabel/files/13640326/ch2.txt). `obabel ch2.cml -ocan` should produce [CH2]; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; Extra implicit hydrogens are added, `obabel ch2.cml -ocan` results in C - that is, methane.; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Using attached ch2.txt (cml file with txt file type to be uploaded); [ch2.txt](https://github.com/openbabel/openbabel/files/13640326/ch2.txt); `obabel -icml ch2.txt -ocan`",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2655:1713,test,test,1713,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2655,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Ubuntu 22.04.3 (5.15.90.1-microsoft-standard-WSL2). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. After converting a Gaussian .log file to a .xyz file, the commit line should be written as input file name and Energy. For example, I tried to convert a molclular with a calculated enegy value of -1871.263029 Hartree:. command: `obabel 1.log -ilog -oxyz -O 1.xyz`. output file content:; ```; [atom number]; 1.log	Energy: -1871.263029; [cartesian coordinate]; ```. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. The output format was right but the energy value was wrong:. ```; [atom number]; 1.out	Energy: -1174235.7067600; [cartesian coordinate]; ```. In addition, the wrong value did not appear in the input .log file. I don't know how was it calculated out. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. Just use command `obabel filename.log -ilog -oxyz -O filename.xyz` to any .log file.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2636:793,log,log,793,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2636,7,"['log', 'test']","['log', 'test']"
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: ``; Linux mscoc7 5.15.0-58-generic #64-Ubuntu SMP Thu Jan 5 11:43:13 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux ; Distributor ID: Ubuntu; Description: Ubuntu 22.04.1 LTS; Release: 22.04; Codename: jammy; ``. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; No failed tests. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; ```; The following tests FAILED:; 60 - test_gzip_1 (Failed); 72 - test_isomorphism_5 (Failed); 73 - test_isomorphism_6 (Failed); 77 - test_multicml_1 (Failed); 97 - test_rotor_2 (Failed); 98 - test_rotor_3 (Failed); 99 - test_rotor_4 (Failed); 214 - pytest_sym (Failed); 217 - pytest_distgeom (Failed); Errors while running CTest; ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; `tar -xvf openbabel-3.1.1-source.tar.bz2; cd openbabel-3.1.1; mkdir build; cd build/; cmake ..; make -j16; make test; ctest --rerun-failed --output-on-failure`. Full output attached. The `test_rotor` failure sound particularly serious since I want to ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2573:927,test,tests,927,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2573,1,['test'],['tests']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2561:1083,test,test,1083,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2561,3,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Dear developers,. when I compile the data, I have the error in the picture below:. ![ed50d4d3416a8c874fefce97e1bd789](https://user-images.githubusercontent.com/75162924/179012267-dc11bfff-24ea-43ea-a741-a2778e77eae4.png). What is the problem and how can I fix it?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2512:1083,test,test,1083,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2512,1,['test'],['test']
Testability,==============; *** Open Babel Information in OpenBabel::OBMol::NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule ACB_PCA-0004. ==============================; *** Open Babel Information in OpenBabel::OBMol::NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule ACB_PCA-0004; Kekulize: Cannot get an even number of electron for molecule ACB_PCA-0004. ==============================; *** Open Babel Audit Log in OpenBabel::OBMoleculeFormat::WriteChemObjectImpl; OpenBabel::Write molecule Sybyl Mol2 format; ==============================; *** Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignTypes; Ran OpenBabel::AssignTypes; ==============================; *** Open Babel Audit Log in OpenBabel::OBAromaticTyper::AssignAromaticFlags; Ran OpenBabel::AssignAromaticFlags; ==============================; *** Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignImplicitValence; Ran OpenBabel::AssignImplicitValence; ==============================; *** Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; Ran OpenBabel::AssignHybridization; ==============================; *** Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; Ran OpenBabel::AssignHybridization; ==============================; *** Open Babel Audit Log in OpenBabel::OBMol::FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Audit Log in OpenBabel::OBBond::IsClosure; Ran OpenBabel::PerceiveClosureBonds; ==============================; *** Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; Ran OpenBabel::AssignHybridization; ==============================; *** Open Babel Audit Log in OpenBabel::OBChainsParser::PerceiveChains; Ran OpenBabel::PerceiveChains; ==============================; *** Open Babel Audit Log in OpenBabel::OBGastChrg::AssignPartialCharges; Ran OpenBabel::AssignPartialCharges; 1 molecule converted; 2 info messages 15 audit log messages. ===================================== END. Reported by: @baoilleach,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/671:1716,Log,Log,1716,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/671,12,"['Log', 'log']","['Log', 'log']"
Testability,"=N2)N)NC(=O)CNC(=O)C(c2cc(Cl)c(O)c(Cl)c2)NC(=O)C(CO)NC(=O)C(c2ccc(O)cc2)NC(=O)C(CC2N=C(N)NC2)NC(=O)C(CCCNC(=O)N)NC(=O)C(C(C)O)NC(=O)C(c2ccc(O)cc2)NC(=O)C(c2ccc(O)cc2)NC(=O)C(C(C)O)NC(=O)C(CCCN)NC(=O)C(c2ccc(O)cc2)NC1=O. See for example the molecule output with :; obabel enducardin2.smi -xh -xa -O enducardin2.svg. We are morking on Mac OS X on the svn trunk version of openbabel (last week version). Sincerely,. Y.D. ----. 193-49-212-82:src laurent$ diff mcdlutil.mod.cpp mcdlutil.cpp; 41,42c41,42; < #define NATOMSMAX 511; < #define NBONDSMAX 2047; ---; > #define NATOMSMAX 255; > #define NBONDSMAX 255; 3931,3932c3931,3932; < vector< vector<bool> > aEQ;//[NATOMSMAX][NATOMSMAX];; < vector< vector<bool> > bEQ;//[NBONDSMAX][NBONDSMAX];; ---; > bool aEQ[NATOMSMAX][NATOMSMAX];; > bool bEQ[NBONDSMAX][NBONDSMAX];; 3936,3939c3936,3937; < void directBondAss(int& bnq, bool& test, bool& test1, ; < std::vector< vector<bool> >& beq,; < std::vector< vector<bool> >& aeq,; < std::vector<int>& bqcounter, std::vector<int>& aqtested,; ---; > void directBondAss(int& bnq, bool& test, bool& test1, const bool beq[NBONDSMAX][NBONDSMAX],; > const bool aeq[NATOMSMAX][NATOMSMAX], std::vector<int>& bqcounter, std::vector<int>& aqtested,; 3957,3962c3955,3958; < fIOPT10=false;; < fIOPT11=false;; < fIOPT13=true;; < fIOPT12=1;; < aEQ = vector< vector<bool> >(NATOMSMAX,vector<bool>(NATOMSMAX,false));; < bEQ = vector< vector<bool> >(NBONDSMAX,vector<bool>(NBONDSMAX,false));; ---; > fIOPT10=false;; > fIOPT11=false;; > fIOPT13=true;; > fIOPT12=1;; 4787,4790c4783,4784; < void TEditedMolecule::directBondAss(int& bnq, bool& test, bool& test1, ; < std::vector< vector<bool> >& beq,; < std::vector< vector<bool> >& aeq,; < std::vector<int>& bqcounter, std::vector<int>& aqtested,; ---; > void TEditedMolecule::directBondAss(int& bnq, bool& test, bool& test1, const bool beq[NBONDSMAX][NBONDSMAX],; > const bool aeq[NATOMSMAX][NATOMSMAX], std::vector<int>& bqcounter, std::vector<int>& aqtested,. Reported by: dufresne0",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1199:1168,test,test,1168,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1199,4,['test'],['test']
Testability,"?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Gentoo Linux, 5.6.15-gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Failed 0/8 test programs. 0/34 subtests failed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Can't call method ""GetMass"" on an undefined value at t/data.t line 21.; t/data.t ........... Dubious, test returned 255 (wstat 65280, 0xff00) ; Failed 1/2 subtests . t/data.t (Wstat: 65280 Tests: 1 Failed: 0); Non-zero exit status: 255; Parse errors: Bad plan. You planned 2 tests but ran 1.; Files=8, Tests=34, 0 wallclock secs ( 0.03 usr 0.01 sys + 0.39 cusr 0.06 csys = 0.49 CPU); Result: FAIL; Failed 1/8 test programs. 0/34 subtests failed. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; swig -perl5 -c++ -small -O -templatereduce -naturalvar -I/usr/include/openbabel3 -o scrips/perl/openbabel-perl.cpp -outdir scrips/perl scripts/openbabel-perl.i; cd scrips/perl; perl Makefile.PL PREFIX=/usr INSTALLDIRS=vendor INSTALLMAN3DIR=none DESTDIR=/var/tmp/portage/sci-chemistry/openbabel-perl-3.1.1/image INC=-I/usr/include/openbabel3; make -j17 -l4 'OTHERLDFLAGS=-Wl,-O1 -Wl,--as-needed -W",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2247:1222,test,test,1222,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247,1,['test'],['test']
Testability,"?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Windows 10 version 1909 and Linux Mint 19.3 64-bit Xfce. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; obspectrophore can be used to generate Spectrophores vectors from a molecular file such as SDF. However, there is apparently no built-in way to then compute a distance metric (such as Euclidean distance) between a reference vector and the sample vectors corresponding to each compound in the SDF file.; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; There is apparently no built-in way to then compute a distance metric (such as Euclidean distance) between a reference vector and the sample vectors corresponding to each compound in the SDF file. Instead, one has to export the vectors and use another program, such as python, to compute the distance metric.; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; This limitation is present each time obspectrophore is used to generate Spectrophores; no futher processing of the data is possible from within obspectrophore or obabel.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2140:1890,test,test,1890,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2140,1,['test'],['test']
Testability,"@frederikw in issue report [here](https://github.com/openbabel/openbabel/issues/2426). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Observation: The `.png` are written and are intelligible. By report of the CLI, the inclusion of the structure file however fails. Suggested changes, 1st class:; + Bug fix to restore the functionality. Suggested changes, 2nd class:; + With the `.pngj` format ([documentation](http://wiki.jmol.org/index.php/File_formats/Export)), Jmol apparently offers a similar export of static (classical `.png` like) and interactive (model) data. In Jmol, it is possible, e.g., to read this extended `.png`, to interact and export the model as `.sdf` «as usual». See archive pngj_examples.zip for examples. It would be nice if Jmol's `.pngj` would be understood by OpenBabel, and the augmented `.png` written by OpenBabel could be read by Jmol as in «accessing the model data». ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behaviour.; -->; ```bash; $ obabel -:""CC(=O)Cl"" -O mymol.png -xO smi; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); 1 molecule converted; ```; The image is written and intelligible. The subsequent attempt to recover the SMILES string from the `.png` however fails, and file `smiles.txt` stays empty. ```bash; $ obabel mymol.png -osmi -O smiles.txt; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; 1 molecule converted; ```. [example_pngj.zip](https://github.com/openbabel/openbabel/files/7521417/example_pngj.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2428:2265,test,test,2265,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2428,1,['test'],['test']
Testability,"A `cout` logging statement in cifformat.cpp was polluting stdout, which is an issue when writing the output molecule to stdout. Also: Should all the `cout` statements in cifformat.cpp be changed to `obErrorLog`?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/76:9,log,logging,9,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/76,1,['log'],['logging']
Testability,"A confab beta tester reports:; ""When I input a gzipped file it only appears to read the first molecule. This has happened to me in the past in my own code - when I call OBConversion::Read; with the second argument as a file stream it only reads the first molecule. The trick is to; set the input stream first, then call Read with just the single OBMol& argument. It's a subtle one as it only shows up for zipped input formats, but it is to do with the fact; that when the stream argument is not null, it gets checked to see if it is zipped, and if; it has been checked before the Read simply returns false (to avoid repeated checking)."". Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1015:14,test,tester,14,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1015,1,['test'],['tester']
Testability,"A recent API change (#1576) broke FragIt (https://github.com/FragIt/fragit-main) which depended on the knowledge about implicit bonds. Now, #1576 did include new utility functions (obfunctions.h) but these functions were never exposed through the python API. 1. This PR exposes those functions hidden away in obfunctions.h so I can use them in FragIt. This PR does not add or remove anything in the API apart from exposing functionality in the API through the python-bindings but I am unsure whether I am required to add some form of test or other documentation?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1697:534,test,test,534,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1697,1,['test'],['test']
Testability,"A warning is issued when converting my favourite SDF file, head.sdf (in scripts/python/examples):. babel -i SDF head.sdf -o smi head.smi. ==============================; *** Open Babel Warning in OpenBabel::MDLFormat::ReadMolecule; WARNING: Problems reading a MDL file; Cannot read title line. 2 molecules converted; 1 warnings 34 audit log messages. The weird thing is...there is a title line!. ------------. From Geoff:. Rats. It seemed like a pretty safe fix -- add more verbose warnings to the mdlformat.cpp code when rejecting molecules. This comes when we try to read after the last $$$$ in that file. So you have read 2 molecules cleanly, and then attempt to read a 3rd.; Obviously, there isn't another molecule in the file (you hit the EOF), so it fails. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/662:337,log,log,337,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/662,1,['log'],['log']
Testability,"ARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; --; 95: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 95: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 97; Start 97: test_rotor_2; --; 97: ../src/obconversion.cpp:302:24: runtime error: load of value 109, which is not a valid value for type 'bool'; 97: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 98; Start 98: test_rotor_3; --; 98: ../src/obconversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/gra",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:11925,test,test,11925,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"According to the Daylight SMARTS website ""[#6;X3v3+0]"" should match a carbon radical. (http://www.daylight.com/dayhtml_tutorials/languages/smarts/smarts_examples.html#RAD). This doesn't work, instead the radical is treated as a connection:. $ echo 'C[CH2]' | babel -ismi -s'[#6;X3v3+0]' -osmi; 0 molecules converted; 12 audit log messages; $ echo 'C[CH2]' | babel -ismi -s'[#6;X4v4+0]' -osmi; C[CH2]; 1 molecule converted; 31 audit log messages. Similarly for the less constrained match ""[#6;X3]"". $ echo 'C[CH2]' | babel -ismi -s'[#6;X3]' -osmi; 0 molecules converted; 12 audit log messages. I'd like to see this work consistently for heteroatoms too:. $ echo 'CCO[O]' | babel -ismi -s'[O;X1]' -osmi; 0 molecules converted; 18 audit log messages. Cheers,; Stephen. Reported by: donquix2003",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/803:326,log,log,326,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/803,4,['log'],['log']
Testability,"Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 4709b0752109db593f1bee6298ef3bfa718d260d; Operating system and version: Debian 10.6. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. obsym works without segmentation fault. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. obsym crashes with segmentation fault. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. With the following file, H2O.xyz,; ```; 3; H2O.xyz; H -0.78304 -0.60618 0.00000; O 0.00000 0.00000 0.00000; H 0.78304 -0.60618 0.00000; ```. obsym crashes:. ```ShellSession; $ obsym H2O.xyz; Point Group: zsh: segmentation fault obsym H2O.xyz; ```. lldb result is as follows:. ```GDB; (lldb) run H2O.xyz; Process 22477 launched: 'obsym' (x86_64); Point Group: Process 22477 stopped; * thread #1, name = 'obsym', stop reason = signal SIGSEGV: invalid address (fault address: 0x22); frame #0: 0x00007ffff7dcf641 libopenbabel.so.7`OpenBabel::OBAtom::GetDistance(OpenBabel::OBAtom*) [inlined] OpenBabel::OBMol::HasFlag(this=0x0000000000000000, flag=8388608) at mol.h:402:41; 399 	 //! Mark that distance calculations, etc., should apply periodic boundary conditions through the minimimum image convention.; 400 	 //! Does",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2286:1347,test,test,1347,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2286,1,['test'],['test']
Testability,"Add fully functional maeparser support for both reading and writing mae/maegz format. Also added some very basic tests. maeparser APIs require C++11, so the most controversial change here is enabling C++11 if maeparser is enabled (which it would be by default). All code seems to build fine with this enabled (at least with modern compilers), so hopefully this will be OK for OpenBabel. Fixes #1803",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1993:113,test,tests,113,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1993,1,['test'],['tests']
Testability,Add regression test for fast tanimoto search,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/183:15,test,test,15,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/183,1,['test'],['test']
Testability,Add support for COF format (Culgi object file) and add Python tests for converting COF to and from MOL and MOL2 formats using obabel executable,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1944:62,test,tests,62,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1944,1,['test'],['tests']
Testability,Add support for COF format plus tests,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1944:32,test,tests,32,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1944,1,['test'],['tests']
Testability,"Add timeout option (necessary for mols with many symmetries) and fix bug with default behavior (was not doing one to one mappings). Also, added test.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2608:144,test,test,144,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2608,1,['test'],['test']
Testability,Add unit tests for pull requests: #254 #255 #260,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/262:9,test,tests,9,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/262,1,['test'],['tests']
Testability,"Added functionality for peri/poly fused rings. Small changes to allow more fused notation ring combinations. Small QOL changes for atom assignment and ""locant"" path definitions. Added support for major periodic table elements, Spiro & ring bridge support. Combinations of cyclic unit merging now available on read. . Tests on the Pubchem data yielded read results of 97%. * Created function for polyfused ring systems - . ```c++. polyfused_ring(std::vector<OpenBabel::OBAtom*> &ring,std::vector<char> char_vector, std::vector<int> atom_vector, int ring_positions); ```; * Created function for perfused ring systems- ; ```c++; int perifused_ring(std::vector<OpenBabel::OBAtom*> &ring,std::vector<char> char_vector, std::vector<int> atom_vector,std::vector<char> peri_vector, int ring_positions) {; ```; this has limited functionality for larger combinations, but covers the basic peri fused examples for rings up to 2 peri atoms. . * Several Additions to ``bool parse_ring()`` to facilitate the above functions. * Full addition of periodic elements to all switch statements in parse_ring, parse_inorganic",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2510:317,Test,Tests,317,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2510,1,['Test'],['Tests']
Testability,"Address #1615 by testing if filename is an instance of bytes and use a; bytes suffix in that case. This seems to be the approach used in cpython; source code, so I take it for being pythonic at the moment. (e.g.; https://github.com/python/cpython/blob/3f9183b/Lib/posixpath.py#L119 )",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1673:17,test,testing,17,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1673,1,['test'],['testing']
Testability,"Adds support for the new handling of reactions, such that mixtures of reactions and molecules will be returned as OBMols. Also fixes the handling of implicit Hs, as it turns out that there were no test cases for CDX files and it was returning benzene without any hydrogens. There are a few things that don't work, but they didn't work before either (I believe):; 1. Molecules with radicals are not correctly handled (in terms of hydrogens); 2. Only the OBConversion:Convert() interface works. Not ::Read(), and so they cannot be read from Python, etc. I don't know whether this is an underlying problem with reading binary files or just something that Chris never got around to implementing.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1878:197,test,test,197,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1878,1,['test'],['test']
Testability,"Adrià Cereto-Massagué reported on the OpenBabel-scripting mailing list that gzipped files could not be opened with the Python bindings on Windows, although they could under linux. The following gives an error message of some kind:; >>> mols = pybel.readfile(\'sdf\',\'test_file.sdf.gz\'); >>> mols.next().title. This problem seems to be specific to the Python bindings: all the gzipped files I have tried have been read properly with obabel/GUI in Windows. (It is writing compressed files on Windows that does not work properly.). However the file http://dalkescientific.com/writings/benzodiazepine.sdf.gz surprisingly works for me in the above Python test. The attached files ( compressed with 7z) with Windows or UNIX line-endings both fail. OB 2.3.0 Pybel 1.6. Reported by: @chrismorl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1104:652,test,test,652,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1104,1,['test'],['test']
Testability,"After I run `make clean`, the following files which were generated during the build remain:. ```; scripts/python/examples/testpybel.pyc ; scripts/python/openbabel.pyc ; scripts/python/pybel.pyc ; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/354:122,test,testpybel,122,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/354,1,['test'],['testpybel']
Testability,"After creating a ""build"" directory, and running ""cmake ../"" and ""make -j2"", I ran ""make test"" and got fails on:. 2:builder_Test; 21:inchiSamples_Test; 27:charge-mmff94_Test; 31:ffgaff_Test; 32:ffghemical_Test; 34:ffuff_Test; 42:logp_psa_Test; 52:pytest_babel; 53:pytest_sym; 54:pytest_fastsearch; 55:pytest_unique; 56:pytest_kekule. The reason for this is that ""make test"" does not set up the environment variables to point to the data and lib folders, so fragments.txt is not found in the builder_Test, and the others fail for similar reasons. Setting the environment variables manually shouldn't be necessary, as cmake was told where to find the source files... Setting the environment variables and re-running reported all tests passed. Paul Murphy <paul.murphy@glpg.com>. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044:88,test,test,88,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044,3,['test'],"['test', 'tests']"
Testability,"After this fix, valgrind reports no leaks ([valgrind-out.txt](https://github.com/openbabel/openbabel/files/4631753/valgrind-out.txt)) when running mol test (besides the dlopen ([supr.txt](https://github.com/openbabel/openbabel/files/4631752/supr.txt))):; ```; valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes --log-file=valgrind-out.txt --suppressions=../supr.txt ./bin/test_runner mol 1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2220:151,test,test,151,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2220,2,"['log', 'test']","['log-file', 'test']"
Testability,"All the other cerr statements should be taken into account.; Some should be changed by using error log, other should just; be removed",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1825:99,log,log,99,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1825,1,['log'],['log']
Testability,"Apologies! learning how SWIG works so i've refactored this commit, i've also updated the test to be stricter on the SMILES; ordering. . valgrind test - no leaks. # Wiswesser Reader Release Notes. The following are sections from Elbert G. Smiths rule book that were used to create; the wln reader. Note that not all chapters are listed here, only the ones where compound; types were introduced. ## Rules fully supported; * Unbranched and Branched Chains; * Systematic Contractions; * Organic Salts; * Benzene Derivatives; * Multisubstituted Benzene Rings; * Benzene Rings in Branching Chains; * Monocyclic Rings; * Bicyclic Rings; * Polycyclic Rings; * Perifused Rings; * Chains of Rings other than Benzene; * Sprio Rings; * Bicyclic Bridged Rings; * Rings with Pseudo Bridges; * Ring Structures with Crossed Bonds and Unbranched Bridges; * Rings of Rings Contraction; * Metallocenes and Catanenes ; * Chelete Compounds; * Ionic Charges, Free Radicals and Isotopes. ## Rules unsupported. * Multipliers; * Ring Contractions and Multipliers; * All Special Problems Rules",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2591:89,test,test,89,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2591,2,['test'],['test']
Testability,Appveyor tests are failing because an environment issue,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2222:9,test,tests,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2222,1,['test'],['tests']
Testability,"As a feature of Avogadro we have added the plugin allowing for Ghemical style forcefield optimizations. The problem is that if you take one molecule and run multiple optimizations there is some sort of memory leak (at least as far as i can tell from debugging). The problem is a result of bad Angle generic data in the molecule. (Possibly getting copied wrong during the OBMol::operator= function?) The reason i suspect it's a memory leak is that during the second run i get random data from the Angle generic data. When you do a FOR_ANGLES_OF_MOL(x,y), (*x) is getting random integers on the second run. (I put in some debugging code but it's super ugly so i'm not going to attach it.). The segfault itself occurs in OBForceFieldGhemical::SetupCalculations line 546. I have been able to fix the problem by regenerating this data in the OBMol::FindAngles function at line 372 in mol.cpp. it's not an acceptable fix but it should help to point this out:. void OBMol::FindAngles(); {; //if already has data return; if(HasData(OBGenericDataType::AngleData)); DeleteData(OBGenericDataType::AngleData);; //return;. //get new data and attach it to molecule; OBAngleData *angles = new OBAngleData;; SetData(angles);; ; ...; } . Note that the ""DeleteData ..."" line is originally a //return;. I am attaching the forcefieldghemical.cpp unit test that can replicate this segfault. Reported by: @milkypostman",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/612:1331,test,test,1331,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/612,1,['test'],['test']
Testability,"As described at https://github.com/openbabel/enhancement-proposals/blob/master/reactions-as-obmols/reaction-handling.md. I still have some reaction formats left but I'd like to get in a PR now, and get some feedback, as all the tests pass, and the rest will be a bit of a slog. SMILES, RINCHI and RXN all support reactions via OBMols now. I've added an OBReactionFacade class to simplify things. In short, reactions are supported via three attributes, a flag on an OBMol, and two OBPairInteger data objects on an OBAtom, ""rxncomp"" and ""rxnrole"".",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1836:228,test,tests,228,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1836,1,['test'],['tests']
Testability,"As found in https://github.com/openbabel/openbabel/issues/2641#issuecomment-1816436930, the current SSSR has a problem when removing redundant rings. The overlap is currently based on atoms instead of bonds, leading to incorrect results.; This code includes a fix for that problem, but I do not know how efficient the solution is. In addition, I have a few questions/problems regarding the testing. I added a test case to `ringtest.cpp` where I thought it belonged. However, since several other tests uses the file `test/files/attype.00.smi` this leads to a bunch of failing tests. Would it be best to rework ""my test"" to a regression test or regenerate the result files for the other failing tests (such as formalcharge and formula etc)?; In addition, this change seems to have affected canonicalization, at least I get a ton of errors in test_canonstable. If that code relies on SSSR it would be reasonable to expect this and in that case maybe a ""backwards-compability-switch"" so that the canonicalization could continue to call the old code that although not correct for SSSR-purposes should be good enough to produce stable canonicalization.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2648:390,test,testing,390,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648,8,['test'],"['test', 'testing', 'tests']"
Testability,"As was pointed out in issue number 153 on; https://github.com/openchemistry/avogadrolibs, there; are a few issues in the space groups. There were a few; illegal '#' symbols and potential problems with Hall numbers; 506 (international number 210) and 450 (international number; 160). Unfortunately, I couldn't fix 450, but I was able to; fix 506. A test was performed: after using the transforms; in Avogadro, spglib identified the space group correctly.; For some reason, this was not the case for number 450...",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/367:348,test,test,348,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/367,1,['test'],['test']
Testability,Assertion failure in rapidjson when using output of Avogadro2,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2619:0,Assert,Assertion,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2619,1,['Assert'],['Assertion']
Testability,"Attached script generates obmol objects from strings containing an xyz file. If I switch the order of the coordinates, the atom type assignment changes, that is, the hydrogen bound to nitrogen should be hn, but it becomes hc instead. Environment: conda installed OB 3.1.0 on MacOS Arm architecture. [testOBatype.zip](https://github.com/user-attachments/files/17311795/testOBatype.zip). ```; % ./testOBatype.py; Atom: C3, Index: 1, Coordinates: (27.443, 25.356, 25.795), Type: c3; Atom: C3, Index: 2, Coordinates: (27.248, 25.853, 29.562), Type: c3; Atom: C2, Index: 3, Coordinates: (27.868, 25.379, 27.247), Type: c; Atom: O2, Index: 4, Coordinates: (29.062, 25.299, 27.534), Type: o; Atom: Nam, Index: 5, Coordinates: (26.911, 25.575, 28.155), Type: n; Atom: H, Index: 6, Coordinates: (26.362, 25.502, 25.733), Type: hc; Atom: H, Index: 7, Coordinates: (25.945, 25.633, 27.858), Type: hn; Atom: H, Index: 8, Coordinates: (28.243, 26.3, 29.591), Type: h1; Atom: H, Index: 9, Coordinates: (27.967, 26.176, 25.283), Type: hc; Atom: H, Index: 10, Coordinates: (27.688, 24.382, 25.346), Type: hc; Atom: H, Index: 11, Coordinates: (26.57, 26.612, 29.98), Type: h1; Atom: H, Index: 12, Coordinates: (27.32, 24.96, 30.2), Type: h1; Bond: hc 9 - c3 1, Order: 1; Bond: hc 10 - c3 1, Order: 1; Bond: hc 6 - c3 1, Order: 1; Bond: c3 1 - c 3, Order: 1; Bond: c 3 - o 4, Order: 2; Bond: c 3 - n 5, Order: 1; Bond: hn 7 - n 5, Order: 1. *****; Bond: n 5 - c3 2, Order: 1; Bond: c3 2 - h1 8, Order: 1; Bond: c3 2 - h1 11, Order: 1; Bond: c3 2 - h1 12, Order: 1; Atom: C3, Index: 1, Coordinates: (27.443, 25.356, 25.795), Type: c3; Atom: C3, Index: 2, Coordinates: (27.248, 25.853, 29.562), Type: c3; Atom: C2, Index: 3, Coordinates: (27.868, 25.379, 27.247), Type: c; Atom: O2, Index: 4, Coordinates: (29.062, 25.299, 27.534), Type: o; Atom: Nam, Index: 5, Coordinates: (26.911, 25.575, 28.155), Type: n; Atom: H, Index: 6, Coordinates: (25.945, 25.633, 27.858), Type: hc; Atom: H, Index: 7, Coordinates: (26.362, 25",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2727:300,test,testOBatype,300,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2727,3,['test'],['testOBatype']
Testability,Avoid logging messages that are taking time,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1714:6,log,logging,6,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1714,1,['log'],['logging']
Testability,"Babel Warning in ReadMolecule; Invalid value for mass difference. It should be between -3 and 4.; 0.0000 0.0000 0.0000 C -4 0 0 0 0 0 0 0 0 0 0 0; .==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; ..==============================; *** Open Babel Warning in GetSmilesElement; Isotope value larger than 9999. Ignoring value.; ..==============================; *** Open Babel Warning in ParseComplex; Square planar stereochemistry must be one of SP1, SP2 or SP3; ==============================; *** Open Babel Warning in ParseComplex; Square planar stereochemistry must be one of SP1, SP2 or SP3; ==============================; *** Open Babel Warning in InsertSquarePlanarRef; Warning: Square planar stereo specified for atom with more than 4 connections.; ==============================; *** Open Babel Warning in InsertSquarePlanarRef; Warning: Square planar stereo specified for atom with more than 4 connections.; ..terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8). CMake Error at pybindtest_bindings.cmake:20 (MESSAGE):; Child aborted. Start 187: pybindtest__pybel; 187/190 Test #187: pybindtest__pybel ................ Passed 0.99 sec; Start 188: pybindtest_example; 188/190 Test #188: pybindtest_example ............... Passed 0.14 sec; Start 189: pybindtest_cdjsonformat; 189/190 Test #189: pybindtest_cdjsonformat .......... Passed 0.14 sec; Start 190: pybindtest_pcjsonformat; 190/190 Test #190: pybindtest_pcjsonformat .......... Passed 0.15 sec. 99% tests passed, 1 tests failed out of 190; ```. ## Steps to Reproduce; I first had to copy the file `lib/_openbabel.so` from the build directory to the source directory at `scripts/python/openbabel/` to make the python tests run.; ```; make test; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2138:7286,Test,Test,7286,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138,8,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"Bugfix for multi-model PDB writing. Previous versions inserted an; 'END' tag before the 'ENDMDL' tag after each model. This violates; the PDB spec, which says 'END' marks the end of file, and also; trips up some programs/APIs (e.g. rdkit) that follow the spec and; stop reading the resulting PDB files after the first model.; Minimally invasive fix. I can make a test if desired.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/332:363,test,test,363,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/332,1,['test'],['test']
Testability,Bugs from roundtrip testing,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/410:20,test,testing,20,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/410,1,['test'],['testing']
Testability,"C1C1 is used by Andrew Dalke in http://ctr.wikia.com/wiki/Chemistry_Toolkit_Rosetta_Wiki as an example of a SMILES error which ought to be caught and reported. OB converts it to CC (not even C=C, which would have been logical). His other example Q is not converted, but there is no error message. . Reported by: @chrismorl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1016:218,log,logical,218,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1016,1,['log'],['logical']
Testability,"CC2(COC)N(C(=O)CC)C3=CC=CC=C3"";; stringstream ss(SmilesString);; OBConversion conv(&ss);; OBMol mol;; if(!conv.SetInFormat(""smi"") || !conv.Read(&mol)); {; cout << ""Bail out! Can't read SMILES string"" << endl;; system(""pause"");; return -1;; }; mol.AddHydrogens();; if (!pOp->Do(&mol)); {; cout << ""Bail out! 3D generation failed"" << endl;; system(""pause"");; return -1;; }; if (!pFF->Setup(mol)); {; cout << ""Bail out! Forcefield Setup failed"" << endl;; system(""pause"");; return -1;; }; pFF->SteepestDescent(1000);; pFF->GetCoordinates(mol);; int numrots = mol.NumRotors();; cout << ""Number of rot: "" << numrots << endl;; pFF->WeightedRotorSearch(numrots, 100);; pFF->GetCoordinates(mol);; cout << ""Got to the end"" << endl;; system(""pause"");; }. ////////////////////////////////////////////////. The error was in std::vector:; _DEBUG_ERROR(""vector iterator not dereferencable"");. The call stack was:; msvcp80d.dll!00819961(); [Frames below may be incorrect and/or missing, no symbols loaded for; msvcp80d.dll]; > OpenBabelDLLD.dll!std::_Vector_const_iterator<OpenBabel::OBBond; *,std::allocator<OpenBabel::OBBond *> >::operator*() Line 99 + 0x14; bytes C++; OpenBabelDLLD.dll!std::_Vector_iterator<OpenBabel::OBBond; *,std::allocator<OpenBabel::OBBond *> >::operator*() Line 327 C++; OpenBabelDLLD.dll!OpenBabel::OBMol::FindChildren(std::vector<int,std::allocator<int>; > & children=[0](), int first=3, int second=4) Line 560 + 0x23; bytes C++; OpenBabelDLLD.dll!OpenBabel::OBRotorList::AssignTorVals(OpenBabel::OBMol; & mol={...}) Line 424 C++; OpenBabelDLLD.dll!OpenBabel::OBRotorList::Setup(OpenBabel::OBMol &; mol={...}) Line 53 C++; OpenBabelDLLD.dll!OpenBabel::OBForceField::WeightedRotorSearch(unsigned; int conformers=10, unsigned int geomSteps=100) Line 1269 C++; testbug.exe!main(int argc=1, char * * argv=0x00ae6648) Line 79 +; 0x14 bytes C++; testbug.exe!__tmainCRTStartup() Line 586 + 0x19 bytes C; testbug.exe!mainCRTStartup() Line 403 C; kernel32.dll!7c816fd7(). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/751:2300,test,testbug,2300,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/751,3,['test'],['testbug']
Testability,"CMAKE_BUILD_TYPE=Debug` (which I believe is required for accurate coverage results - didn't check, though), the tests take a very long time ([gh actions log](https://github.com/ltalirz/openbabel/runs/1554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really need to be that long-running; ; run the coverage only, say, once per day;; ... I'd be very happy for ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2312:1486,Test,Test,1486,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312,1,['Test'],['Test']
Testability,CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/math.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/mol.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/phmodel.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/residue.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/ringtest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartstest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartsparse.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/smilesmatch.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/unitcell.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/cmlreadfile.o; [ 99%] Building CXX o,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:54727,test,test,54727,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"Calling OBMol::GetFormula() causes programs to crash with some molecules, please find attached a sample program and pdb file which causes the program to crash on Linux.; Tested on SuSE 10.1 x86 & OpenBabel 2.0.2. Compile and run the test program like this:. formula anim01.pdb pdb. -- . Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/589:170,Test,Tested,170,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/589,2,"['Test', 'test']","['Tested', 'test']"
Testability,Can I capture warning messages into a log file during executing pybel?,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2728:38,log,log,38,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2728,1,['log'],['log']
Testability,"Cleaning up the code to read different atomic partial charges from Gaussian log file, namely Mulliken, Hirshfeld, CM5, and ESP charges.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1742:76,log,log,76,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1742,1,['log'],['log']
Testability,"Cmake Config is like following:; ![screen shot 2015-03-09 at 5 14 26 pm](https://cloud.githubusercontent.com/assets/10948687/6564526/ceb806b4-c67f-11e4-9833-a2e0e3b744ca.png); ![screen shot 2015-03-09 at 5 14 38 pm](https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png). And the Cmake Log is like following:; Using included inchi library.; checking for module 'cairo'; package 'cairo' not found; Could NOT find Cairo. PNG output will NOT be supported.; GUI will not be built; CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use th",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:333,Log,Log,333,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,3,"['Log', 'test']","['Log', 'test']"
Testability,"Compiling openBabel 2.1.1 on Linux. Compilation is ok, but cml test fails :; # sh ./cml.sh. # Testing CML support...; *** glibc detected *** double free or corruption (fasttop): 0x08c7f9c8 ***; 1..6; # CML2 with array; *** glibc detected *** double free or corruption (!prev): 0x085733f0 ***; not ok 1; # CML2 with XML version; *** glibc detected *** double free or corruption (fasttop): 0x08a859c8 ***; not ok 2; # CML1 with DOCTYPE; *** glibc detected *** double free or corruption (fasttop): 0x09bd09c8 ***; not ok 3; # CML2 arrays with namespaces; *** glibc detected *** double free or corruption (fasttop): 0x082119c8 ***; not ok 4; # Roundtripping from 2D MDL Molfile to CML and back; *** glibc detected *** double free or corruption (fasttop): 0x080c29c8 ***; not ok 5; # Roundtripping from 3D MDL Molfile to CML and back; *** glibc detected *** double free or corruption (fasttop): 0x090559c8 ***; not ok 6. Reported by: reinerdieden",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/675:63,test,test,63,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/675,2,"['Test', 'test']","['Testing', 'test']"
Testability,"Conversion from a Q-Chem z-matrix shows clear problems; on some molecules (likely from a torsional change). The; resulting structure is not anything like the XYZ; cartesian coordinates immediately before the z-matrix. A new test should be created to test the; internal-&gt;cartesian and cartesian-&gt;internal conversion; routines. Ideally, these should be self-consistent, at; least in the internal coordinates presented. Further; testing of this sort may elucidate where the problem; exists. -Geoff. (I also need to post a few test structures which show; this bug.). Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/430:224,test,test,224,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/430,4,['test'],"['test', 'testing']"
Testability,Convert tabs to spaces in testpdbformat.py,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1568:26,test,testpdbformat,26,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1568,1,['test'],['testpdbformat']
Testability,"Converting a SMILES code to a svg file produces broken SVGs for certain SMILES codes e.g.:. ```~~; obabel -:""C16=C2C(=C(O)C=C1)OC3C7(OC)C(C(C)(O)C(C)C)CC5(C23CCN(CC4CC4)C5C6)CC7"" -osvg -O test.svg; ```~~. The created SVG file ""test.svg"" contains invalid SVG line tags such as:. ```~~; <line x1=""-nan"" y1=""-nan"" x2=""-nan"" y2=""-nan"" stroke=""rgb(0,0,0)"" stroke-width=""1.0""/>; <line x1=""71.7"" y1=""76.3"" x2=""-nan"" y2=""-nan"" stroke=""rgb(0,0,0)"" stroke-width=""1.0""/>; <line x1=""71.7"" y1=""76.3"" x2=""-nan"" y2=""-nan"" stroke=""rgb(0,0,0)"" stroke-width=""1.0""/>; ```~~. Reported by: jerut. Original Ticket: [openbabel/bugs/890](https://sourceforge.net/p/openbabel/bugs/890)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1270:188,test,test,188,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1270,2,['test'],['test']
Testability,Crash with invalidsmiles test on 2.1 branch,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/649:25,test,test,25,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/649,1,['test'],['test']
Testability,"Current CVS version (6/29) fails to assign bond orders correctly in ; a number of cases found in proteins:. 1. isoleucine (ILE) residues SOMETIMES get a double ; bond placed at the end of the sidechain rather than a; single. In the test file included, resnums 16,85,103 ; are bad, but 6,47,80,99 are ok. . 2. 5-membered rings have incorrect bond; orders. This includes histidine and tryptophan (see ; pervious bug report) but not proline. 3. one incorrect bond order found connecting PRO 25; and GLY 26. The above bugs did not occur in release 1.99. One bug that did ; occur in release 1.99 seems now to be fixed: ARG residues now ; appear to work correctly. The current CVS version runs over 100 ; times faster than version 1.99, wow!!. To run the test file:. babel -ipdb CGIFrag.pdb -omol2 CGIFrag.mol2. Richard . Reported by: reg8",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/405:232,test,test,232,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/405,2,['test'],['test']
Testability,"Current CVS version of OpenBabel (6/29) fails to correctly assign ; bond orders to tryptophan residues. Six-membered ring gets all ; aromatic bonds, but 5-membered ring gets an incorrect kekule ; structure (double bonds in wrong place). From my point of view, it ; would be better to get all bonds in kekule form (single, double or ; triple), but all aromatic bonds (mol2 type 4) would be ok. I actually ; had this working in the 1.99 release and am looking into the ; problem. . &gt;babel -h -ipdb TRP.pdb -omol2 TRP.mol2. Here is a test pdb input file (TRP.pdb) to reproduce the problem:. ATOM 178 N TRP A 27 19.460 15.407 20.116 1.00 ; 3.49 A; ATOM 179 CA TRP A 27 19.487 16.872 20.001 1.00 ; 4.11 A; ATOM 180 C TRP A 27 20.257 17.060 18.688 1.00 ; 5.03 A; ATOM 181 O TRP A 27 21.389 17.543 18.677 1.00 ; 4.65 A; ATOM 182 CB TRP A 27 20.213 17.541 21.187 1.00 ; 4.17 A; ATOM 183 CG TRP A 27 19.679 17.185 22.548 1.00 ; 4.29 A; ATOM 184 CD1 TRP A 27 20.234 16.472 23.573 1.00 ; 3.55 A; ATOM 185 CD2 TRP A 27 18.389 17.594 23.039 1.00 ; 4.29 A; ATOM 186 NE1 TRP A 27 19.374 16.376 24.633 1.00 ; 3.31 A; ATOM 187 CE2 TRP A 27 18.215 17.033 24.316 1.00 ; 3.73 A; ATOM 188 CE3 TRP A 27 17.341 18.325 22.442 1.00 ; 4.93 A; ATOM 189 CZ2 TRP A 27 17.036 17.198 25.043 1.00 ; 3.57 A; ATOM 190 CZ3 TRP A 27 16.177 18.528 23.189 1.00 ; 4.49 A; ATOM 191 CH2 TRP A 27 16.026 17.948 24.450 1.00 ; 3.74 A. Resulting output (TRP.mol2), note the two double bonds going to ; C5:. @&lt;TRIPOS&gt;MOLECULE; *****; 24 25 0 0 0; SMALL; GASTEIGER; Energy = 0. @&lt;TRIPOS&gt;ATOM; 1 N1 19.4600 15.4070 20.1160 N.3 1 &lt;1&gt; -; 0.3212; 2 C1 19.4870 16.8720 20.0010 C.3 1 &lt;1&gt; ; 0.0656; 3 C2 20.2570 17.0600 18.6880 C.2 1 &lt;1&gt; ; 0.1373; 4 O1 21.3890 17.5430 18.6770 O.2 1 &lt;1&gt; -; 0.2994; 5 C3 20.2130 17.5410 21.1870 C.3 1 &lt;1&gt; ; 0.0035; 6 C4 19.6790 17.1850 22.5480 C.2 1 &lt;1&gt; ; 0.0249; 7 C5 20.2340 16.4720 23.5730 C.1 1 &lt;1&gt; -; 0.0076; 8 C6 18.3890 17.5940 23.0390 C.ar 1 &lt;1&gt; ; 0.01",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/404:534,test,test,534,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/404,1,['test'],['test']
Testability,"Current version 2.0.x fails to convert some aromatic rings.; For example, ; COC(Cc1n[nH]c(=S)n1c2ccccc2)OC BIONET_10B-022 ether; in test/attype.00.smi, is converted to ; ""COC(CC1N(C(N[N]1)=S)c1ccccc1)OC"".; In this case 5-membered ring lacks aromaticity after; conversion. Former version 1.100.2 converts this SMILES; successfully as ""COC(Cc1n(c([nH]n1)=S)c1ccccc1)OC"". Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/516:132,test,test,132,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516,1,['test'],['test']
Testability,"Currently only _symmetry_equiv_pos_as_xyz is parsed in mmcifformat, which is superseded by _space_group_symop_operation_xyz: http://www.iucr.org/__data/iucr/cifdic_html/1/cif_core.dic/Isymmetry_equiv_pos_as_xyz.html. cifformat covers both names, so change is not needed there. Added a test.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1578:285,test,test,285,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1578,1,['test'],['test']
Testability,DCMAKE_PREFIX_PATH=$BOOST_PATH \; 	-DCMAKE_INSTALL_PREFIX=$OPENBABEL_CMAKE_PREFIX \; 	-DZLIB_ROOT=$ZLIB_PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMakeFiles/obabel.dir/all] Error 2; ---------------------------------------------------------------; [100%] Linking CXX executable ../bin/test_runner; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2377:2756,test,test,2756,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377,1,['test'],['test']
Testability,"Dear Open Babel authors!. ~>babel bsse.log bsse.xyz. While converting Gaussian log file into XYZ format, babel extracts the first geometry. However geometry optimization was requested in Gaussian job so I expected to see the last geometry in XYZ file. I noticed the wrong behavior appears only if counterpoise=2 option in Gaussian job is activated. . Marat Talipov; TalipovM@gmail.com. Open Babel 2.2.3 -- Feb 18 2011 -- 13:16:37; Darwin Marat-Talipovs-iMac.local 10.7.0 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386 i386 iMac11,3 Darwin. Reported by: mirari",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1105:39,log,log,39,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1105,2,['log'],['log']
Testability,"Dear developpers,. I am using Open Babel 2.3.2 -- Nov 23 2015 -- 18:51:24. I have found a bug in the generations of lammps data files. I am converting a PDB file to a lmpdat file using the command ; babel -i pdb test.pdb -o lmpdat test.lmpdat. Although the generation of the atoms is done correctly, the bonds are not properly generated. Attached you will find the input and output files. Regards, ; Sebastián. Reported by: sebas-n1. Original Ticket: [openbabel/bugs/972](https://sourceforge.net/p/openbabel/bugs/972)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1351:212,test,test,212,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1351,2,['test'],['test']
Testability,"Despite the large size of the library, a full ""unit test"" setup, which ; provides tests for each and every method in the underlying libopenbabel ; would be very useful. The current test architecture tests some key ; ""higher-level"" functions (e.g., translation, SMARTS matching, etc.) which is ; important. However, bug 1373650 points out the problems with the library -- some ; methods are not tested in every scenario. Since Open Babel should be ""bullet-proof,"" more method-level and class-; level testing would be ideal. -Geoff. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/69"":https://sourceforge.net/p/openbabel/feature-requests/69",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1438:52,test,test,52,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1438,6,['test'],"['test', 'tested', 'testing', 'tests']"
Testability,"Does openbabel provide a functionality to calculate atom chirality given a molfile representation? I guess the obchiral can only detect whether an atom is chiral or not without classification of R/S.; Thanks so much!; <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2237:1433,test,test,1433,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2237,1,['test'],['test']
Testability,"Does this work in C++? Setting the torsion in a 3d structure of butane segfaults. import pybel; import openbabel as ob. mol = pybel.readstring(""smi"", ""CCCC""); mol.make3D(). atoms = [x.OBAtom for x in mol.atoms]. for i in range(3):; assert atoms[i].IsConnected(atoms[i+1]), ""Not connected!!"". assert mol.OBMol.GetTorsion(atoms[0], atoms[1], atoms[2], atoms[3])==180.0; mol.OBMol.SetTorsion(atoms[0], atoms[1], atoms[2], atoms[3], 170.0); # Segfault. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/755:232,assert,assert,232,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/755,2,['assert'],['assert']
Testability,Double free memory bug in test/invalidsmiles,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/624:26,test,test,26,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/624,1,['test'],['test']
Testability,"During a test minimization on the attached file, everything was proceeding normally. Then, after 45 normal steps, the minimization ""exploded"". 38 51.084 51.086; 39 51.084 51.084; 40 51.083 51.084; 41 51.082 51.083; 42 51.082 51.082; 43 51.081 51.082; 44 51.081 51.081; 45 51.080 51.081; 46 14279868.072 51.080; 47 12376949.852 14279868.072; 48 900328.732 12376949.852; 49 454273.226 900328.732. I'll attach the PDB output after 46 steps as well (9.pdb). Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619:9,test,test,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619,1,['test'],['test']
Testability,Enhanced test suite,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1388:9,test,test,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1388,1,['test'],['test']
Testability,Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CM,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:52662,test,test,52662,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,Failures in test/logp_psa,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/623:12,test,test,12,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/623,1,['test'],['test']
Testability,"Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:3.1.1(self compiled version); Operating system and version:Manjaro 5.15.12. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; In the specified path,there are some SMI files:; ```txt; zinc10.smi; *zinc10.smi; zinc10*.smi; ?zinc10.smi; arg.smi; aspirin.smi; ```; In obgui's input filename box,here are some inputs with wildchars I tested:. 1. `*.smi`; 2. `*zinc10.smi`; 3. `?zinc10.smi`; 4. `z*.smi`; 5. `arg.smi;a*.smi;zinc10.smi`. Respiectively,expected conversed files are:. 1. `zinc10.smi;*zinc10.smi;zinc10*.smi;?zinc10.smi;arg.smi;aspirin.smi`; 2. `zinc10.smi;*zinc10.smi`; 3. `*zinc10.smi;?zinc10.smi`; 4. `zinc10.smi;zinc10*.smi`; 5. `arg.smi;aspirin.smi;zinc10.smi`; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Actually,conversed files are:. 1. None; 2. None; 3. None; 4. None; 5. `arg.smi;zinc10.smi`. In general,any wildchars in the input filename box will not be conversed. ; Any wildchars in the filename will not be conversed,even selected in the input dialoag. ; Other filenames without `*` or `?` splited by `;` will converse correctly. ; `*` in output filename box works correctly if input filename box has no `*`.; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ![obguiWildcharBug](https://user-images.githubusercontent.com/60164864/150667555-1f458586-e8e1-4434-a4e9-8d9059fe9fb5.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2445:2219,test,test,2219,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2445,1,['test'],['test']
Testability,"First part is to always parse space group origin:; - This is fixed by removed overloaded version of SpaceGroup::SetHMName.; - Unrelated, removed similar overloaded SpaceGroup::SetHallName. Second part:; - Expose -xo option for write PDB, to set space group setting (if present) in space group label. Added tests.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1558:306,test,tests,306,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1558,1,['test'],['tests']
Testability,Fix #305 - logic error for non-ring bonds introduced into NumRotors() during distgeom updates,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/308:11,log,logic,11,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/308,1,['log'],['logic']
Testability,Fix OBChemTsfm handling where the implicit H count was going below 0 and wrapping. As reported by @bbucior. See #1895 for more info. Includes the test case reported by Ben along with another one for the same problem triggered by bond order changes.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1896:146,test,test,146,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1896,1,['test'],['test']
Testability,Fix SMILES parsing fuzz test failures from AFL,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1770:24,test,test,24,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1770,1,['test'],['test']
Testability,Fix TESTDIR definition to allow space in path,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1757:4,TEST,TESTDIR,4,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1757,1,['TEST'],['TESTDIR']
Testability,Fix failing test in testobconv_writers,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2682:12,test,test,12,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2682,1,['test'],['test']
Testability,Fix for #1628 by lowercasing second letter of element. Begin testing reading PDB file format.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1631:61,test,testing,61,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1631,1,['test'],['testing']
Testability,Fix for logic when there is an existing ASCII depiction in an SD file,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/328:8,log,logic,8,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/328,1,['log'],['logic']
Testability,Fix for segault (with regression test),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2162:33,test,test,33,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2162,1,['test'],['test']
Testability,Fix logic in chains lazy perception,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1821:4,log,logic,4,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1821,1,['log'],['logic']
Testability,Fix minor tests,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2169:10,test,tests,10,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2169,1,['test'],['tests']
Testability,Fix randomly failing Python gradient test,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1966:37,test,test,37,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1966,1,['test'],['test']
Testability,Fix small test failures from merging,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2490:10,test,test,10,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2490,1,['test'],['test']
Testability,Fix test failure with Python 3,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2218:4,test,test,4,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2218,1,['test'],['test']
Testability,Fix the cif write test (i.e. modified format),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2177:18,test,test,18,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2177,1,['test'],['test']
Testability,Fixed an error with the allExplicit option where the function was opposite to what was stated. Fixed by removing the negation in test.; See line note in https://github.com/openbabel/openbabel/commit/ba397aa5a01cd3753072fadf9535d0092dfcf784#diff-2a365bc04bfc2f8bea760bcade7466a0,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/141:129,test,test,129,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/141,1,['test'],['test']
Testability,Fixes #1726 with reading molecules from CIF and MMCIF files.; (regression test forthcoming),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1823:74,test,test,74,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1823,1,['test'],['test']
Testability,Fixes #2063....I believe. Let me test this directly before this is merged.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2100:33,test,test,33,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2100,1,['test'],['test']
Testability,"Fixes #338, basically following the proposal from the initial report. However, reading the specification at http://www.cambridgesoft.com/services/documentation/sdk/chemdraw/cdx/properties/Atom_Charge.htm the charge is an int8 so I cast directly to that.; Also according to the mentioned spec, there was a bug in ChemDraw producing a different kind of charges for a while. It looks like the code will not work on those files, the ""else-path"" should be invoked for those but according to the spec it looks like there should be a shift of the result to get a proper charge. But as long as we cannot find an example file created in ChemDraw >= 8.0 < 8.0.6 we will not be able to test for this.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2537:675,test,test,675,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2537,1,['test'],['test']
Testability,"Fixes a minor installation regression from PR #1601. `make install` crashed with the following error:. ```; CMake Error at data/cmake_install.cmake:39 (file):; file INSTALL cannot find; ""/cygdrive/c/Users/Benjamin/Git/Contrib/openbabel/data/element.txt"".; Call Stack (most recent call first):; cmake_install.cmake:68 (include); ```. Removing the deleted files from the cmake target allowed installation to proceed. I haven't used Travis much yet, but would a `make install` test in CI be useful?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1617:474,test,test,474,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1617,1,['test'],['test']
Testability,Fixing minor things for reading ESP from log files,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1753:41,log,log,41,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1753,1,['log'],['log']
Testability,Floating point exception in OpenBabel::OBGroupContrib::Predict for logP with PA0,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2088:67,log,logP,67,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2088,1,['log'],['logP']
Testability,"Following is a description of the bug in chain parsing I found using PyBel. The actual description is from an e-mail exchange with Noel O'Boyle, and I have modified it slightly to make more sense in this context. > I tried to iterate over all atoms from the OBMol object, and this; > does work, but I noticed that the chain membership is apparently not parsed; > correctly from the PDB file. For the attached 1ere.pdb, Chain F should; > contain 39 HETATM records - 20 belonging to estrogen and 19 belonging to; > water molecules. However, only the water molecules are given the correct; > chain membership such that the following code returns ""19"" (also see the; > attached IncorrectChains.py):; >; > count = 0; > for ai in range(1,mol.NumAtoms()+1):; > a = mol.GetAtom(ai); > r = a.GetResidue(); > if (r.IsHetAtom(a) and r.GetChain() == ""F""):; > print a.GetType() + "" - "" + r.GetChain(); > count = count + 1; >; > print ""Total: "" + str(count); >; >; > I tested this by changing the conditional to this:; >; > if (r.IsHetAtom(a) and r.GetChain() == ""A""):; >; > In this case the output is ""234"" as the number of HETATMS in Chain A - 120; > for estrogen which should actually be in 6 different chains (A-F) and 18 for; > the waters in chain A. Reported by: kirkd",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/928:955,test,tested,955,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/928,1,['test'],['tested']
Testability,"For file downloaded from ccdc ( https://summary.ccdc.cam.ac.uk/structure-summary?id=doi:10.5517/cc8j3mh&sid=DataCite ), openbabel fail to convert from mmcif to pdb and give the following error - . Unknown space group error (H-M symbol:P21/c), cannot match the list of transforms, please file a bug report.; 1 molecule converted; 1 errors 21 warnings 14 audit log messages. In the attached cif file from ccdc, the short space group P21/c is recognized by openbabel. Openbabel by default remove the space and add it to dictionary. The thing went wrong was due to the following block -; loop_; _symmetry_equiv_pos_as_xyz; ???; Openbabel doesn't treat the transformation as unknown and try to match and fail in the library. I checked in a patch in my forked repo and created a pull request - . https://github.com/openbabel/openbabel/commit/4d9b605f793cf932c8fd6e3fc3770d385a683d4b. Please evaluate and let me know.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/238:359,log,log,359,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/238,1,['log'],['log']
Testability,"For some reason babel treats the hydrogen atom differently from the lithium atom in the xyz parser. This is what happens for lithium. $ babel -ixyz li.xyz -oreport; FILENAME: li.xyz; FORMULA: Li; MASS: 6.9410; EXACT MASS: 7.0160045; INTERATOMIC DISTANCES; ... $ babel -ixyz li.xyz -oqcin ; $comment; li.xyz; $end. $molecule; 0 1; 3 0 0 0; $end. $rem. $end; 1 molecule converted; 12 audit log messages . And this is what happens for the hydrogen atom:. $ babel -ixyz test.xyz -oreport; FILENAME: test.xyz; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 2; INTERATOMIC DISTANCES; ... $ babel -ixyz test.xyz -oqcin ; $comment; test.xyz; $end. $molecule; 0 2; 1 0 0 0; $end. $rem. $end; 1 molecule converted; 11 audit log messages . As can be seen, the Q-Chem input file for the lithium atom has the wrong multiplicity (1=singlet) instead of the expected 2. Running with ---errorlevel 5, it appears that the lithium atom XYZ input triggers OpenBabel::AssignImplicitValence but not the hydrogen atom XYZ input. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1099:388,log,log,388,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1099,6,"['log', 'test']","['log', 'test']"
Testability,"For some smiles, cansmiles yields incorrect results. PROBLEM:; echo 'O=c1[nH]c(=O)c2cccc3c2c1ccc3' | babel -ismi -osmi; O=[C]1=[NH][C](=O)=C2C=CC=C3C2C1C=CC3	; 1 molecule converted; 4 info messages 33 audit log messages; The resulting SMILES in not correct. I expected the result to be identical to the input, because the input came from a canonicalization of another SMILES. BACKGROUND:; The input SMILES above came from here.; echo 'O=C1NC(=O)C2=CC=CC3=C2C1=CC=C3' | babel -ismi -osmi; O=c1[nH]c(=O)c2cccc3c2c1ccc3	; 1 molecule converted; 1 info messages 33 audit log messages. This resulting cansmiles is correct, but I cannot convert it properly (see PROBLEM).; Another way to think of this is; cansmiles(x) = cansmiles(cansmiles(x)); This is not true for x = 'O=c1[nH]c(=O)c2cccc3c2c1ccc3'. I think this is a general problem with aromatic rings having =O subtitutions and how to aromatize them. Linux/ubuntu; openbabel 2.2.3. TJ; tjo@gnova.com. Reported by: tjbear",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/986:207,log,log,207,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/986,2,['log'],['log']
Testability,Force build to test appveyor,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2240:15,test,test,15,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2240,1,['test'],['test']
Testability,Format for occupancy is (https://www.cgl.ucsf.edu/chimera/docs/UsersGuide/tutorials/pdbintro.html):; `55-60 | Occupancy | right | real (6.2)`. Added a test.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1799:151,test,test,151,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1799,1,['test'],['test']
Testability,Fresh install of 2.4.1 on Windows 7 does not correctly calculate logP or TPSA,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1635:65,log,logP,65,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1635,1,['log'],['logP']
Testability,"From Andrew Dalke on list:. One of RDKit MACCS key definitions is. [!#6;!#1]~[!#6;!#1;!H0]. I'm working on my test suite for those definitions, as mentioned in my previous email. Here's a test case. >>> mol = pybel.readstring(""smi"", ""[U]S(C)C""); >>> matcher = pybel.Smarts(""[!#6;H0]""); >>> matcher.findall(mol); [(1,), (2,)]; >>> matcher = pybel.Smarts(""[!#6;!#1]~[!#6;!#1;!H0]""); >>> matcher.findall(mol); []; >>>. RDKit, OEChem, and Daylight say that that pattern matches that structure. That's because all three programs say that the ""S"" has an implicit hydrogen on it. Daylight says that sulfur has valence levels of ""S (2,4,6)"". http://www.daylight.com/dayhtml/doc/theory/theory.smiles.html. This looks to be a bug in the code which calculates the implicit hydrogen count. Here's another another case where the implicit h-count is wrong, this time with P. Daylight says the valence levels for P in SMILES are (3,5). Given N=PPCC. The second atom (the first P) has a double bond and a single,; so it's valences are filled. It should have no implicit hydrogens. However, here's first the RDKit.MACCS pattern which passed, unexpectedly, in OpenBabel. >>> mol = pybel.readstring(""smi"", ""N=PPCC""); >>> matcher = pybel.Smarts(""[!#6;!#1;!H0]~[!#6;!#1;!H0]""); >>> matcher.findall(mol); [(1, 2), (2, 3)]; >>> Hmatcher = pybel.Smarts(""[!H0]""); >>> Hmatcher.findall(mol); [(1,), (2,), (3,), (4,), (5,)]; >>>. You can see it's because the matcher thinks all of the atoms have at least one implicit hydrogen. Compare this to RDKit, which correctly has the P with no implicit hydrogens. >>> mol = Chem.MolFromSmiles(""N=PPCC""); >>> pat = Chem.MolFromSmarts(""[!#6;!#1;!H0]~[!#6;!#1;!H0]""); >>> mol.GetSubstructMatches(pat); (); >>> Hpat = Chem.MolFromSmarts(""[!H0]""); >>> mol.GetSubstructMatches(Hpat); ((0,), (2,), (3,), (4,)). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1108:110,test,test,110,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1108,2,['test'],['test']
Testability,"From Andrew Dalke on list:. Perhaps I'm missing something after staring at fingerprint SMARTS definitions for the last few days. I'm validating the MACCS substructure keys from RDKit, which are also used in OpenBabel and CDK. I'm writing a test suite, which will be public when done. (Actually, they are public now, if you know where the version control repository is.). I'm having a very difficult time generating an aromatic ring with a ""P"" in it in OpenBabel. >>> import pybel; >>> pybel.readstring(""smi"", ""c1cccp1"").write(); 'C1CCCP1\t\n'; >>> pybel.readstring(""smi"", ""c1ccccp1"").write(); 'C1=CC=NC=P1\t\n'. Since P is in the same group and has the same valence levels as N, I expected the first of these to return ""c1cccp1"", similar to. >>> pybel.readstring(""smi"", ""c1cccn1"").write(); 'c1ccc[nH]1\t\n'. Both RDKit and OEChem have no problem dealing with ""c1cccp"" and interpreting it as an aromatic ring. I processed about 50K structures from PubChem to find a number with aromatic ""p"" in them. Since PubChem doesn't have aromaticity information, what I did was use another program to perceive the aromaticity. Below I show the RDKit SMILES for a structure and the OpenBabel equivalent for it. You can see that of the 53 structures where RDKit has no problems with a ""p"" in an aromatic ring, 51 of them are converted into aliphatic form by OpenBabel. Is this due to a chemical reason or a design reason for why OpenBabel does this? Perhaps it's something subtle about aromaticity perception (which I sadly admit I still don't have a good grasp on). This is with OEChem OBReleaseVersion() '2.3.0' which I built a couple of days ago. Andrew; dalke@dalkescientific.com. Columns are; column 1: ""p"" in OpenBabel's SMILES; column 2: the SMILES string from RDKit; column 3: the SMILES string from OpenBabel. False 'CCc1c(CC)p(-c2ccccc2)c(-c2ccccc2)c1-c1ccccc1' 'CCC1C(CC)P(C2CCCCC2)C(C2CCCCC2)C1C1CCCCC1\t\n'; True '[W].Cc1np(C([Si](C)(C)C)[Si](C)(C)C)nc1N1CCCCC1.[O+]#[C-].[C-]#[O+].[O+]#[C-].[C-]#[O+].",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1109:240,test,test,240,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1109,1,['test'],['test']
Testability,"From Andrew Dalke:. (1) Shouldn't the molecular formula for ""[NH4+]"" include the total formal charge?. (2) The formal results for c1ccccc1O.[NH4+] are very strange. Take a look at this test. self.assertEquals(mol.GetSpacedFormula(), ""C 6 H 10 N 1 O 1 ""); self.assertEquals(mol.GetSpacedFormula(1), ""C 6 H 10 N O ""). Why is there a double space in ""N 1"" and ""O 1""? Why is there a; space after the last ""1""? And just how useful is the ""include; implicit hydrogens"" flag to generate. self.assertEquals(mol.GetSpacedFormula(0, ' ', 0), ""C 6 H 4 N 1 O 1 ""). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1053:185,test,test,185,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1053,4,"['assert', 'test']","['assertEquals', 'test']"
Testability,"From Andrew Dalke:. It seems that GetUMapList interacts with the results of GetMapList. def test_basic_match_behavior_which_I_did_not_expect(self):; mol = parse_smiles(""c1ccccc1O""); pat = parse_smarts(""c1ccccc1""); pat.Match(mol); self.assertEquals(pat.NumMatches(), 12); results = pat.GetUMapList(); self.assertEquals(pat.NumMatches(), 1); results = pat.GetMapList(); # I really expected the following to be 12.; # It appears the UMapList does an in-place trim.; # XXX Is that the right/expected behavior?; self.assertEquals(pat.NumMatches(), 1); self.assertEquals(len(results), 1). pat.Match(mol); # Here they are 12; results = pat.GetMapList(); self.assertEquals(pat.NumMatches(), 12); results = pat.GetUMapList(); self.assertEquals(pat.NumMatches(), 1); self.assertEquals(len(results), 1). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1052:235,assert,assertEquals,235,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1052,7,['assert'],['assertEquals']
Testability,"From Noel:; This fixes #1929, at least the immediate issue. The test for atom identity was missing in the isomorphism mapper, except for the first atom to be tested which was tested 'outside the loop' in advance. Thanks to @johnmay for help identifying this. More generally, the existing identity check is a little loose and should be tightened up to check for hydrogen count, charge, isotope and any other attributes I can think of (currently it just tests atomic number, aromaticity and ring membership). In theory, it's just an interface which the user can override, but the defaults should do what is expected, which is to be an exact match rather than something a bit fuzzy.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1939:64,test,test,64,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1939,4,['test'],"['test', 'tested', 'tests']"
Testability,"From an ORCA geometry optimization the first (initial) geometry is extracted, not the final geometry. The corresponding energy given is for the final geometry.; Tested with Openbabel 2.4.1 (64bit) and Win10 pro 64 bit.; See attached: ORCA output file and extracted geometry in .xyz format. Reported by: yodah134. Original Ticket: [openbabel/bugs/982](https://sourceforge.net/p/openbabel/bugs/982)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1361:161,Test,Tested,161,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1361,1,['Test'],['Tested']
Testability,Full unit test framework,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1438:10,test,test,10,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1438,1,['test'],['test']
Testability,Gaussian 03 log files computed with the nosym keyword can not be processed.; In the attachment there is a log file of water with and without the nosym keyword. Reported by: dwondrousch,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1157:12,log,log,12,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1157,2,['log'],['log']
Testability,"Given the attached mol2 (which has some dodgy atom types I must admit) which contains 85 molecules, only half of the molecules are returned by an iterator. In fact, every second molecule is skipped. import pybel; mols = [mol for mol in pybel.readfile(""mol2"", ""myfile.mol2"")]; assert len(mols)!=85; assert len(mol)==42. Note, that this code works fine for a multimolecule sdf file (or least, the ""head.sdf"" included in the Python scripts directory). Regards,; Noel. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/617:276,assert,assert,276,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/617,2,['assert'],['assert']
Testability,"Good afternoon,. I am working on building and compiling Align-It for our research informatics team with the company I work for, and running into some errors on a Linux 2023 AMI instance. We have successfully installed Shape-It on a Rocky Linux server before, and the RI team wanted to utilize Align-It as well, and looks like it should be a similar compile and build process, so not sure if there's something different among my Linux dev box, versus the Rocky Linux box. That would have to be tested next week.. I am hoping to gain any insight on the 'undefined reference' errors I am receiving at the end of the 'make' command for my align-it project. /home/ec2-user/openbabel/include/openbabel/math/vector3.h:274:10: note: declared here; 274 | bool operator== ( const vector3& ) const;; | ^~~~~~~~; [100%] Linking CXX executable align-it. but then started going into errors like this:. /usr/bin/ld: CMakeFiles/align-it.dir/src/result.cpp.o: in function Result::Result()': result.cpp:(.text+0x170): undefined reference to OpenBabel::OBMol::OBMol()'; /usr/bin/ld: CMakeFiles/align-it.dir/src/utilities.cpp.o: in function positionMolecule(OpenBabel::OBMol*, SiMath::Matrix&, SolutionInfo&)': utilities.cpp:(.text+0x1920): undefined reference to OpenBabel::OBMol::BeginAtom(__gnu_cxx::__normal_iterator<OpenBabel::OBAtom**, std::vector<OpenBabel::OBAtom*, std::allocatorOpenBabel::OBAtom* > >&)'; /usr/bin/ld: utilities.cpp:(.text+0x1b93): undefined reference to OpenBabel::OBAtom::SetVector(double, double, double)' /usr/bin/ld: utilities.cpp:(.text+0x1ba0): undefined reference to OpenBabel::OBMol::NextAtom(__gnu_cxx::__normal_iterator<OpenBabel::OBAtom**, std::vector<OpenBabel::OBAtom*, std::allocatorOpenBabel::OBAtom* > >&)'; /usr/bin/ld: CMakeFiles/align-it.dir/src/utilities.cpp.o: in function TransformMolecule(OpenBabel::OBMol*, SiMath::Matrix&, Coordinate&, Coordinate&)': utilities.cpp:(.text+0x1e74): undefined reference to OpenBabel::OBMol::BeginAtom(__gnu_cxx::__normal_iterator<OpenBabe",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2667:493,test,tested,493,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2667,1,['test'],['tested']
Testability,"H 0 0 0 0 0 0 0 0 0 0 0 0; 2.7526 1.1284 -1.3542 H 0 0 0 0 0 0 0 0 0 0 0 0; 2.9952 -0.6259 -0.9923 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 11 1 0 0 0 0; 1 9 1 0 0 0 0; 2 3 1 0 0 0 0; 2 1 1 0 0 0 0; 3 14 1 0 0 0 0; 3 15 1 0 0 0 0; 4 5 1 0 0 0 0; 4 3 1 0 0 0 0; 5 18 1 0 0 0 0; 5 19 1 0 0 0 0; 6 7 1 0 0 0 0; 6 5 1 0 0 0 0; 7 8 3 0 0 0 0; 10 1 1 0 0 0 0; 12 2 1 0 0 0 0; 13 2 1 0 0 0 0; 16 4 1 0 0 0 0; 17 4 1 0 0 0 0; 20 6 1 0 0 0 0; 21 6 1 0 0 0 0; M RAD 1 8 3; M END; $$$$. that is not at all what is expected. The first N is not charged even if it is connected to 4 atom and the second N is set radical with single bond instead of triple bond. How come? Can it be overcome?. Thanks for hints. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1595:4950,test,test,4950,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1595,1,['test'],['test']
Testability,"Having some problems using OBMol.GetData(int). First of; all, the API doesn't describe what this does. I expect; that it extracts the data fields one by one in some; arbitary order. However, it doesn't appear to be able; to do this. Here is an example. The attached test file has two; fields: 'NSC' and 'Molecular weight'. GetData(int); finds the 'NSC' field without any problems but not the; 'Molecular weight'. In addition, it finds a 'Comment'; field but I guess this is a good thing. >>>>> Python code; from openbabel import *. obconversion = OBConversion(); obconversion.SetInFormat(""sdf""); obmol = OBMol(). notatend = obconversion.ReadFile(obmol,""test.sdf""); print ""Using obmol.GetData(string)""; for field in [""NSC"",""Molecular weight""]:; data = obmol.GetData(field); print ""The value of '%s' is '%s'"" %; (data.GetAttribute(),data.GetValue()). print ""\nUsing obmol.GetData(int)""; for i in range(100):; data = obmol.GetData(i); if data:; print ""i=%d: the value of '%s' is '%s'"" %; (i,data.GetAttribute(),data.Ge; tValue()). print ""\nUsing obmol.GetData()""; print obmol.GetData(). >>>>> Output; Using obmol.GetData(string); The value of 'NSC' is '1'; The value of 'Molecular weight' is '122.03677944'. Using obmol.GetData(int); i=1: the value of 'NSC' is '1'; i=3: the value of 'Comment' is 'CORINA 2.61 0041 ; 25.10.2001'. Using obmol.GetData(); <Swig Object of type; 'std::vector<OpenBabel::OBGenericData *,std::allocator<Open; Babel::OBGenericData * > > *' at 0x815a634>; >>>> End of output. Regards; Noel. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/533:266,test,test,266,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/533,2,['test'],['test']
Testability,"Hello, . The AtomID attribute of an atom is set with the ; corresponding four characters of the pdb file. pdfformat.cpp:201:. string atmid = sbuf.substr(6,4); . And then spaces at the beginning and the end of atmid ; are trimmed with:. while (!atmid.empty() && atmid[0] == ' '); atmid = atmid.substr(1,atmid.size()-1);. while (!atmid.empty() && atmid[atmid.size()-1] == ' '); atmid = atmid.substr(0,atmid.size()-1);. And later the AtomID is set (line 373), ; res->SetAtomID(atom, atmid);. Now, in the file residue.cpp the function; GetAtomIDNumber() starts by testing if the first ; character of the AtomID is a space (which is false ; since it has been trimmed). Therefore the computed ; IDNumber will be completely false and GetAtomProperty ; will return inexact values. Since I need theses annotations, i've written a small; patch which replaces the line 373 of pdbformat.cpp by:; res->SetAtomID(atom, sbuf.substr(6,4));; (it may not be a good solution). I join a program that shows the bug (try it with any ; pdb protein and you will see that all atom properties ; are wrong). I also join the tiny patch. Hope this helps, ; -- ; Marc Lasson <marc dot lasson at gmail com>. Reported by: mlasson",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/699:560,test,testing,560,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/699,1,['test'],['testing']
Testability,"Hello,. Cppcheck reported several times (about 100) this:; Prefer prefix ++/-- operators for non-primitive types. I attached a patch to fix them + some 2 or 3 assert. Julien. Reported by: serval2412. Original Ticket: [openbabel/bugs/893](https://sourceforge.net/p/openbabel/bugs/893)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1273:159,assert,assert,159,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1273,1,['assert'],['assert']
Testability,"Hello,. I am presenting a first patch towards the acceptance of PDB insertion codes.; A more detailed description on what insertion codes are and how they are used I put as a comment to commit https://github.com/openbabel/openbabel/commit/46bb2d1d42b23938c6446680632477e950643e1d - in short, it is a single character that extends the residue ID and may become particularly important when it is only that character that distinguishes two consecutive residues representing the same amino acid. The patch is complete in the sense that PDB files with insertion codes are now properly read and transformations into other formats, tested was FASTA, behave correctly, i.e. no residue is omitted. The patch is incomplete in the sense that related formats like PDBQT (and possibly others beyond my immediate expertise) are not yet addressed. Also, I yet did not address any writing of PDB formats. I am prepared to continue this work, just hoping for a bit of a review and guidance in that I am not completely erroneous in how I addressed the insertion codes in the first place. I am attaching relevant lines of a structure with that feature; [test_insertioncode.pdb.txt](https://github.com/openbabel/openbabel/files/123521/test_insertioncode.pdb.txt); which transformed looks like. <pre>; $ obabel -ipdb openbabel/test_insertioncode.pdb -ofasta ; >openbabel/test_insertioncode.pdb 6 bp; generated with OpenBabel 2.3.90; SVSSSY; 1 molecule converted; </pre>. while the current implementation omits one (the middle) S.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/257:625,test,tested,625,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/257,1,['test'],['tested']
Testability,"Hello,. I am using open babel as a library for my code.; I use the tautomer feature by calling the routine EnumerateTautomers. Most of the case it works fine, but I am having error when I input anyline derivative (for example C[NH2+]c1ccccc1). One H gets removed giving a smiles misinterpreted later on (C[NH+]C1=CC=CC=C1). By looking a bit in the code I noticed it's occurre in EndMol subroutine. ; Could you help on this one? Is there an option or subtlety I missed?; Thanks. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1692:1692,test,test,1692,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1692,1,['test'],['test']
Testability,"Hello,. I'm trying to use openbabel 2.1.1 on linux to convert mdl mol v3000 files into mdl mol v2000. The example-file molex.mol (see attachment) contains a COLLECTION Block. ; No conversion is taking place.; No warning or error (except for the title line. % babel -errorlevel 5 -imdl molex.mol -omdl molex2.mol; ==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problems reading a MDL file; Cannot read title line. 0 molecules converted; 1 warnings 4 audit log messages. If the COLLECTION-Block is removed, conversion goes through smoothly. % babel -errorlevel 5 -imdl molexZ.mol -omdl molex2.mol; ==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problems reading a MDL file; Cannot read title line. 1 molecule converted; 1 warnings 16 audit log messages. reiner.dieden@ucb-group.com. Reported by: reinerdieden",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/663:489,log,log,489,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/663,2,['log'],['log']
Testability,"Hello,. While converting a long list of InChIs to SMILES, I noticed the following input results in a segfault:. ```; InChI=1S/C25H35N3O2/c1-17-15-18-9-6-4-3-5-7-10-19-12-13-21(27-19)24(18)25(30-17)23(29-2)16-22(28-25)20-11-8-14-26-20/h8,11-14,17-18,23-24,27-28H,3-7,9-10,15-16H2,1-2H3/b22-20-/t17-,18-,23-,24-,25+/m0/s1AuxInfo=1/0/N:1,29,8,7,9,6,10,24,5,11,23,13,14,25,3,20,2,4,12,22,15,21,19,16,17,26,30,27,28,18/it:im/rA:30CC.oCC.eCCCCCCCCCCCC.oC.oOC.eCCCCCCNNOCN/rB:p1;s2;n3;s4;s5;s6;s7;s8;s9;s10;s11;d12;s13;d14;s4p15;s16;s2s17;s17;s19;s20;d-21;s22;d23;s24;s22d25;N17s21;P19;s28;s12s15;/rC:7.0888,-5.0303,0;6.6191,-3.5637,0;5.1142,-3.2371,0;4.6445,-1.7705,0;3.1395,-1.444,0;2.1042,-2.5841,0;.5992,-2.2575,0;.1295,-.7909,0;1.1648,.3492,0;.6951,1.8158,0;1.7304,2.9559,0;3.2354,2.6294,0;4.5723,3.3937,0;5.7124,2.3584,0;5.0269,.7183,0;5.6798,-.6304,0;7.1847,-.957,0;7.6544,-2.4236,0;6.8709,.5507,0;8.2078,1.3151,0;9.3479,.2798,0;10.8556,.5936,0;11.4879,1.9978,0;13.0188,1.8304,0;13.3326,.3227,0;11.9957,-.4417,0;8.7156,-1.1244,0;5.4667,1.183,0;4.217,.2831,0;3.7051,1.1627,0;; ```. TBH, I'm not even sure if the InChI is correct, but I figured it shouldn't segfault in any case. Tested with the latest release (3.1.1) on Windows 11, and it occurs both through `obabel` and the GUI.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2730:1178,Test,Tested,1178,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2730,1,['Test'],['Tested']
Testability,"Hello,; Tested with the master of openbabel just now.; This command line works only if there is a single molecule in the input file.; If there are two or more:; *** Open Babel Error in GetValues; cansmi not recognized as a property or a descriptor; 2 molecules converted",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1603:8,Test,Tested,8,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1603,1,['Test'],['Tested']
Testability,Hello; I've run into a problem where openbabel doesn't recognize any file format:. `Laptops-MacBook-Pro:bin laptop$ ./obabel -ipdb 1DRF.pdb -oxyz -O 1DRF.xyz`; `obabel: cannot read input format!`; `Open Babel 2.4.1 -- Feb 4 2017 -- 11:01:17`; `Usage:`; `obabel [-i<input-type>] <infilename> [-o<output-type>] -O<outfilename> [Options]`; `Try -H option for more information.`. This seems to happen with all binaries and formats:. `Laptops-MacBook-Pro:bin laptop$ ./obminimize gaff.sdf`; `./obminimize: cannot read input/output format!`; `Laptops-MacBook-Pro:bin laptop$ ./obrotamer gaff.sdf`; `Error! Cannot read file format!`; `Laptops-MacBook-Pro:bin laptop$ ./roundtrip gaff.sdf out.sdf`; `./roundtrip: Cannot read file #1 format!`; `Laptops-MacBook-Pro:bin laptop$ ./roundtrip test3d.xyz out.xyz`; `./roundtrip: Cannot read file #1 format!`; `Laptops-MacBook-Pro:bin laptop$ ./roundtrip 1DRF.pdb out.pdb`; `./roundtrip: Cannot read file #1 format!`. I've compiled from source both on OSX and Linux and both had this problem; I tested both the 2.4.1 stable and the latest git version and both had this problem. Builds were done in the standard way with `mkdir build && cd build && cmake .. && make`. Am I doing something seriously wrong or does this issue occur for others?. Thank you.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/375:1030,test,tested,1030,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/375,1,['test'],['tested']
Testability,"Here is a little testing program. it compiles fine and the input file ""lig.smi"" has only one record as following:; c1ccccc1 Benzene. the program output:; $ ./OBtest; first compound read; end modification; Segmentation fault. Reported by: yongjinxu",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/909:17,test,testing,17,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/909,1,['test'],['testing']
Testability,"Hi All,. I got a free license from the PVS guys and ran their static checker on the code.; The report is attached [archive.tar.gz](https://github.com/openbabel/openbabel/files/4630071/archive.tar.gz), it is also available here:; https://afonari.github.io/openbabel-pvs-report/index.html. I ran it as:; ```; git clone ...; cd openbabel; mkdir build; cd build; cmake ..; make -j8; cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=On ..; pvs-studio-analyzer analyze -c -o ./pvs-output.log -j8; # V1042 flag is to disable the warning that GPL license is in the header of the files; plog-converter -a GA:1,2 -t fullhtml pvs-output.log -o ./pvs-report_dir -d V1042; tar -czvf archive.tar.gz ./pvs-report_dir; ```. I think some places are easier to fix than another. Happy quarantining! =)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2219:471,log,log,471,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2219,2,['log'],['log']
Testability,"Hi Open Babel!. I get a wrong charge on a Lysine side chain when reading a file from xyz. An example is here: https://dl.dropboxusercontent.com/u/17435887/027ALA_opt.xyz. For instance when converting the following way:. babel -ixyz ALA_opt.xyz -ocom ALA_out.com. babel will assign a total charge of 0 and a multiplicity of 1. This is not correct, since a correct charge and multiplicity are 1 and 1, respectively. The structure is is the result of a PM6 optimization so bond lengths and angles shouldn't be way off. The output from obprop (see below) has a warning concerning ""Accepted unusual valence(s): N(4)"" which may be a clue towards the error maybe? Four bonds to a nitrogen atom is not /that/ unusual. :). I've tried this on the following babel --version:; Open Babel 2.3.0 -- Dec 17 2011 -- 16:15:08; Open Babel 2.3.2 -- Dec 13 2012 -- 18:44:34; Open Babel 2.3.90 -- Dec 1 2013 -- 15:56:22. name backbones/027ALA_opt.log; formula C14H28N5O4; mol_weight 330.403; exact_mass 330.214; canonical_SMILES [NH3]CCCC[C@@H](C(=O)N[C@H](C(=O)NCC(=O)NC)C)NC(=O)C	backbones/027ALA_opt.log. ==============================; *** Open Babel Warning in InChI code; backbones/027ALA_opt.log :Accepted unusual valence(s): N(4); InChI InChI=1S/C14H28N5O4/c1-9(13(22)17-8-12(21)16-3)18-14(23)11(19-10(2)20)6-4-5-7-15/h9,11H,4-8H2,1-3,15H3,(H,16,21)(H,17,22)(H,18,23)(H,19,20)/t9-,11-/m0/s1. num_atoms 51; num_bonds 50; num_residues 0; sequence -; num_rings 0; logP 0.4651; PSA 119.64; MR 85.0889; $$$$. Reported by: andersx. Original Ticket: [openbabel/bugs/906](https://sourceforge.net/p/openbabel/bugs/906)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1286:926,log,log,926,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1286,4,['log'],"['log', 'logP']"
Testability,"Hi all,. I was trying to canonicalize SMILES file when I noticed that some SMILES in the output are strange. input:. CC(C)(C)C(=O)OCOCC1C(CC(O1)n2ccc(nc2=O)NC(=O)OCc3ccccc3)F ; CCCCn1c2c(c3[nH]ccn3n2)c(=O)n(c1=O)CCCC. output:. O=C(OCc1ccccc1)Nc1cc[n](C2CC(F)C(COCOC(=O)C(C)(C)C)O2)c(=O)[nH]1 ; CCCC[N]1=C(=O)c2c(=[N](CCCC)C1=O)[nH]n1cc[nH]c21. in the output second structure one carbon atom has valence 5 =C(=O)c, and 1st structure there is on carbon in 6 member aromatic ring with double bonded oxygen c(=O)?. the command line: babel -ismi test.smi -ocan test_can.smi. Open Babel was compiled from SVN:. Path: .; URL: https://openbabel.svn.sourceforge.net/svnroot/openbabel/openbabel/trunk; Repository Root: https://openbabel.svn.sourceforge.net/svnroot/openbabel; Repository UUID: 71e0b675-c112-0410-beda-96664073b5c2; Revision: 2020; Node Kind: directory; Schedule: normal; Last Changed Author: ghutchis; Last Changed Rev: 2019; Last Changed Date: 2007-07-07 22:02:04 -0600 (Sat, 07 Jul 2007). Operating system:. SuSE Linux 10.2 with kernel version 2.6.18.8-0.5-default. Oleg. OUrsu@salud.unm.edu. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/667:541,test,test,541,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/667,1,['test'],['test']
Testability,"Hi all. - I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Fedora 34; Python-3.9.6. ## Expected Behavior; None test failed. ## Actual Behavior. ```; 216/227 Test #216: pytest_distgeom ..................***Failed 0.05 sec; /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/scripts/python:/home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/x86_64-redhat-linux-gnu/lib64; File ""/home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/test/testdistgeom.py"", line 45; 'Clc1cccc(Cl)c1\C=N\NC(=O)c1cccs1',; ^; SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 18-19: malformed \N character escape. CMake Error at pytest_distgeom.cmake:20 (MESSAGE):; 1; ```. ## Steps to Reproduce. Building openbabel-3.1.1 on Fedora 34 with following configuration:. ```; + /usr/bin/cmake -S . -B x86_64-redhat-linux-gnu -DCMAKE_C_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_Fortran_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_INSTALL_DO_STRIP:BOOL=OFF -DCMAKE_INSTALL_PREFIX:PATH=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib64 -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_SUFFIX=64 -DBUILD_SHARED_LIBS:BOOL=ON -Wno-dev -DCMAKE_SKIP_RPATH:BOOL=ON -DBUILD_GUI:BOOL=ON -DPYTHON_BINDINGS:BOOL=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPERL_BINDINGS:BOOL=OFF -DRUBY_BINDINGS:BOOL=OFF -DOPENBABEL_USE_SYSTEM_INCHI=true -DENABLE_VERSIONED_FORMATS=false -DRUN_SWIG=true -DENABLE_TESTS:BOOL=ON -DOPTIMIZE_NATIVE=OFF; -- The C compiler identification is GNU 11.2.1; -- The CXX compiler identification is GNU 11.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib64/ccache/gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX c",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2406:191,test,test,191,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406,4,"['Test', 'test']","['Test', 'test', 'testdistgeom']"
Testability,"Hi all. I am currently a Google Summer of Code Scholar working with MDAnalysis. My project involves the creation of a converter to convert between OpenBabel OBMols and MDAnalysis Universes. I am working with the automatic python bindings. I am keen to chat with current OpenBabel maintainers to gain a deeper insight into the package and take on any suggestions for features or attributes that would be beneficial to access and convert. I also have some questions about functionality that I would love some assistance with. 1. I can see that OpenBabel supports PDB formats, but I cannot see any attributes within the OBMol or OBAtom classes for alternate locations, chainids, occupancies and tempfactors/B-values. Would anyone be able to point me in the direction of where I can find these attributes (if they are supported)? The only documentation I can find it [here](http://openbabel.org/docs/FileFormats/Protein_Data_Bank_format.html). 2. I would love to utilise a handful of the OpenBabel test-set files to test the converter, but I do not want to clone the entire repo into my converter for size purposes. Do you have a preferred way for me to access and credit the files back to OpenBabel? . Thanks for your time! You can follow along with my project [here](https://github.com/MDAnalysis/mda-openbabel-converter).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2708:994,test,test-set,994,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2708,2,['test'],"['test', 'test-set']"
Testability,"Hi everybody. I apologize in advance if my question is dumb, and thank anyone that could help me out. I'm quite new to C++ and cmake. I have written a new plugin format, PDBT, which at the moment is nothing more than a copy of pdbqt format, but which will change once I can get it to work. When compiling normally everything works, I am able to use the new file format. However, I need an executable that can be distributed for use on different machines. When compiling using -DBUILD_SHARED=OFF -DBUILD_MIXED=ON, I can compile libopenbabel.a which I can then use to compile a static obabel binary. This executable works, but the new plugin (PDBT) is absent from obabel -L formats list, and fails when I try to use it doing ""obabel -isdf test/pdb_ligands_sdf/966c_rs2.sdf -opdbt"". Does anyone have any idea why the plugin is not working on the mixed compiled executable?. Here is my fork with the PDBT format (simply copied the pdbqt file in formats folder and modified formats.cmake to add pdbt format):. https://github.com/rquiroga7/openbabel.git. I am attaching my CMakeLists file which I use to compile the obabel executable:; [CMakeLists.txt](https://github.com/openbabel/openbabel/files/4268993/CMakeLists.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2134:737,test,test,737,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2134,1,['test'],['test']
Testability,"Hi there,. For one of our applications, we wanted to be able to extract a chemical formula from an InChI. We can get OpenBabel to read an InChI, but I noticed that it always deletes all the hydrogens, and there is no alternative option. [Here](https://github.com/openbabel/openbabel/blob/master/src/formats/inchiformat.cpp#L246) is where it looks like all the hydrogens are deleted. Any thoughts about this? Should we have an option to not delete the hydrogens?. Thanks,; Patrick. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1881:1695,test,test,1695,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1881,1,['test'],['test']
Testability,"Hi there,. I have developed a web application in .NET C# code using OBDotNet. My OS is Windows 7, 64 bit.The version of Open Babel I am using, is OpenBabel-2.3.2.; Its working fine when I run application in Microsoft Visual studio. But after publishing my application and hosting it on IIS, when I run the application, it is throwing exception. I am attaching the same error log file for your reference.; Please help. Thanks; Pradeep. Reported by: pradeepv67. Original Ticket: [openbabel/bugs/968](https://sourceforge.net/p/openbabel/bugs/968)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1347:375,log,log,375,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1347,1,['log'],['log']
Testability,"Hi, I would like ask if is it normal to have failed tests on the following:. 60 - test_gzip_1 (Failed); 72 - test_isomorphism_5 (Failed); 73 - test_isomorphism_6 (Failed); 77 - test_multicml_1 (Failed); 97 - test_rotor_2 (Failed); 98 - test_rotor_3 (Failed); 99 - test_rotor_4 (Failed); 214 - pytest_sym (Failed); 217 - pytest_distgeom (Failed). I am attaching the LastTest.log for your reference. [LastTest.log](https://github.com/openbabel/openbabel/files/11599588/LastTest.log)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2593:52,test,tests,52,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2593,4,"['log', 'test']","['log', 'tests']"
Testability,"Hi,. Could someone give me a quick outline of the procedure for adding test cases, please?. Matt",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/165:71,test,test,71,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/165,1,['test'],['test']
Testability,"Hi,. I am using openbabel to generate tautomers (mostly of amino acid) and need to get zwitterionic species (N...OH become NH+....O-). I noticed it's not possible in tautomer.cpp because N neutral is not considered as a acceptor. I change the AssignAtomType routine to modify that. That part is working ok, but then in the propagation part I don't see the configuration I want to reach (NH+...O-) proposed. My problem is I am willing to change it but I don't get the enumerate/propagation algorithm, could you give me info about it? Its name? A paper it is explained into?... Thanks. Laëtitia. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1717:1808,test,test,1808,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1717,1,['test'],['test']
Testability,"Hi,. I have bee using openbabel as a library for a while. I wanted to update my version of openbabel and thus download and compile openbabel-2.4.1. Problem is when I want to compile my code, I get the following error; : /home/bomble/Project/openbabel-2.4.1/include/openbabel/mol.h:25: error: openbabel/babelconfig.h: No such file or directory; and indeed I can't find babelconfig.h in the include dir but babelconfig.h is asked in almost all other include.; Where can I find it?. Thanks. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1683:1702,test,test,1702,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1683,1,['test'],['test']
Testability,"Hi,. I have been working on a project which included a lot of malformed SMILES been fed to OpenBabel via Python bindings. I have found out a case when OpenBabel crashes with a segmentation fault. After playing a bit, I have found the simplest case to break it is something like the following SMILES string:. F13.1. To reproduce the error, do the following:. $ echo 'F13.1' > test.smi; $ babel -i smi test.smi -o mol test.mol; Segmentation fault. In Python:; $ python; Python 3.4.1 (default, May 23 2014, 17:48:28) [GCC] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; import pybel; pybel.readstring('smi', 'F13.1'); Segmentation fault; $. I have run babel with GDB, here is the backtrace:. 1 0x00007fffef348cdb in OpenBabel::OBSmilesParser::ParseSmiles (this=this@entry=0x7fffffff41b0, mol=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:431; 2 0x00007fffef349427 in OpenBabel::OBSmilesParser::SmiToMol (this=this@entry=0x7fffffff41b0, mol=..., s=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:398; 3 0x00007fffef349c63 in OpenBabel::SMIBaseFormat::ReadMolecule (this=<optimized out>, pOb=<optimized out>, pConv=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:343; 4 0x00007ffff77934e2 in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffdf60, pFormat=0x7fffef55fb50 <OpenBabel::theSMIFormat>) at ../temp/openbabel-2.3.2/src/obmolecformat.cpp:105; 5 0x00007ffff7738e8c in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/obconversion.cpp:519; 6 0x00007ffff773b33d in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60, is=0x7fffffffd3e0, os=os@entry=0x7fffffffcfe0) at ../temp/openbabel-2.3.2/src/obconversion.cpp:450; 7 0x00007ffff773d6cf in OpenBabel::OBConversion::FullConvert (this=this@entry=0x7fffffffdf60, FileList=..., OutputFileName=..., OutputFileList=...) at ../temp/openbabel-2.3.2/src/obconversion.cpp:1417; 8 0x0000000000402",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1316:375,test,test,375,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1316,3,['test'],['test']
Testability,"Hi,. I have noticed that on converting a Smiles string with chirality to sdf format, the resulting output file lacks any chiral information.; This is also evident on converting the sdf file back to a smiles format. -Tushar. e.g. > echo ""CC[C@H](C)[C@@H](C)CC"" > test.smi. > babel -ismi test.smi -osdf test.sdf. > babel -isdf test.sdf -osmi test_new.smi. > cat test_new.smi; CCC(C)C(C)CC. Reported by: tsjain",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/897:262,test,test,262,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/897,4,['test'],['test']
Testability,"Hi,. I made a bunch of changes to the png depiction to fit my needs and I thought I would share them... I'm not very experienced with pull requests, so maybe I haven't done everything optimally, for example if you would like me to split the commits into different requests, please let me know.; The -xm option added in a509587 was difficult to properly explain in a few words but basically now you always get a png with the set height and widths, regardless of the compound. With this change, single molecule depictions can be made dependent on the shape of the compound, so that there won't be a lot of empty space around. I'll try to attach two example images to make it easier to understand... (The margins aren't that easy to see, but if you download the images it's more apparent).; ![without_xm](https://f.cloud.github.com/assets/86855/1001311/1b1a82a6-0a67-11e3-8fa2-18b76fc79cb5.png); Created with `obabel -ismi -:""[O-][C@@]([H])(C)COc1ccccc1[NH3+].[Cl-] test"" -xd -O ~/Desktop/without_xm.png`; ![with_xm](https://f.cloud.github.com/assets/86855/1001312/2146d9fe-0a67-11e3-82f1-96998a5097ce.png); Created with `obabel -ismi -:""[O-][C@@]([H])(C)COc1ccccc1[NH3+].[Cl-] test"" -xm -O ~/Desktop/with_xm.png`",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/19:963,test,test,963,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/19,2,['test'],['test']
Testability,"Hi,. It seems that babel is well capable of reading in gaussian calculated Mulliken charges. However, charges provided by more sophisticated algorithms (opt=mk for example) are not read even if they are calculated. Including support for better partial charges would make sense because Mulliken charges typically don't make any sense. Quick look in the gaussformat.cpp shows that only Mulliken charges are interpreted. I tested a bit, and adding the following code after Mulliken code, should do the trick (same code as for Mulliken with small changes):. else if(strstr(buffer,""Charges from ESP fit"") != NULL ); {; hasPartialCharges = true;; ifs.getline(buffer,BUFF_SIZE); // column headings; ifs.getline(buffer,BUFF_SIZE); // column headings; ifs.getline(buffer,BUFF_SIZE);; tokenize(vs,buffer);; while (vs.size() >= 3 &&; strstr(buffer,""------------------------------------------"") == NULL); {; atom = mol.GetAtom(atoi(vs[0].c_str()));; if (!atom); break;; atom->SetPartialCharge(atof(vs[2].c_str()));. if (!ifs.getline(buffer,BUFF_SIZE)) break;; tokenize(vs,buffer);; }; }. In addition, one needs to add a correct value for the pair data that is set later in the code. I hope that this comment is useful. Regards,. Tapani Kinnunen (takinnun at hotmail.com). Reported by: *anonymous. Original Ticket: [openbabel/feature-requests/148](https://sourceforge.net/p/openbabel/feature-requests/148)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1517:420,test,tested,420,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1517,1,['test'],['tested']
Testability,"Hi,. The last changes in obprop.cpp fixed the features that I reported earlier, thanks for this. However, it seems that the new version does not cope very well with multimolecule cml files. If there is two or more molecules in the cml file, the obprop outputs the properties of the last molecule twice. Sdf, mol2 etc seem to work ok. This has something to do with the new while structure (that processes all the molecules) in obprop.cpp. The previous structure (for loop, exists in revision 1865) works ok with multimolecule cml files. In the cml file, <cml start tag has something to do with this problem. In case of multimolecule cml, babel writes a reference to cml namescape in cml start tag -> obprop duplicates output. If I remove the namespace reference (just plain <cml>) -> no problems with the obprop output. I tested this on two platforms (linux/solaris) and the problem remained the same. I hope this helps,. Tapani Kinnunen; takinnun at hotmail.com. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/632:821,test,tested,821,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/632,2,['test'],['tested']
Testability,"Hi,. There is a bug in the atom type determination of terminal oxygens attached to Sulfurs, e.g. in the sulphonamide group S(=O)(=O)N. Line 2339 on src/forcefields/forcefieldmmff94.cpp : ; if (nbr2->IsOxygen() && nbr2->GetValence() == 0). should be changed to,; if (nbr2->IsOxygen() && nbr2->GetValence() == 1). Except for single ions, there are no atoms with a valence of 0!. This is causing the terminal O's on sulfur to be typed as index 7 instead of index 32.; If one looks at molecule BBSPRT10 in the MMFF Validation suite, the type assignment for the O is indeed 32(check file MMFF94_opti.log in the validation suite). Regards,; Tushar Jain. Reported by: tsjain",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/877:595,log,log,595,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/877,1,['log'],['log']
Testability,"Hi,. if you specify any resolution to PNG export via -xp,; the resulting PNG file has 0 bytes. To reproduce:. Works:; echo ""CC"" | ./bin/babel -i smi -o png test.png. Doesn't work:; echo ""CC"" | ./bin/babel -i smi -o png -xp 300 test.png. This is reproducible on Ubuntu 12.04, both with ; binary packages 2.3.1+dfsg-4 and and a local build of today's SVN r5063. Yours,; Steffen. Reported by: sneumann. Original Ticket: [openbabel/bugs/879](https://sourceforge.net/p/openbabel/bugs/879)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1259:156,test,test,156,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1259,2,['test'],['test']
Testability,"Hi,; I am trying to generate 3D coordinates from the Mechanistic Sets .sdf files downloaded from NCI. But I keep getting the error 'Segmentation fault (core dumped)'. However, it worked with the Diversity Sets .sdf files. So any help here? And I am using Linux Ubuntu. Thanks!; Ruben. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2004:1499,test,test,1499,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2004,1,['test'],['test']
Testability,"Hi. I like to distinguish between Carboxylic acids and ; Carboxylic esters: . Based on ; http://www.daylight.com/support/faq/smarts_examples.fa; q.html#META. the SMARTS for Carboxylic acid (with proton) (-oic acid, ; COOH) should be [CX3](=O)[OX2H1]. With this code I get for lMatches = 0. // start sample code	; OBSmartsPattern* sp = new OBSmartsPattern; ; std::istringstream is(""CC(=O)O"");; OBMol mol(SMI,MOL2);; vector<vector<int> >	mlist;; long lMatches = -1;. if (sp->Init(""[CX3](=O)[OX2H1]"")); {; mol.Clear();; OBFileFormat::ReadMolecule(is, mol);; if (! mol.Empty()) ; {; sp->Match(mol);; mlist = sp->GetMapList();; lMatches = mlist.size();; } ; } ; // end sample code	. If I change ; if (sp->Init(""[CX3](=O)[OX2H1]"")); to; if (sp->Init(""[CX3](=O)[OX1]"")); I get for lMatches = 1. For this test I used Microsoft Visual Studio.net 2003 ; C++ Compiler. I had no problem with the sample ; application smartstest. . Thank you for your work!! . Best regards. Ivo; silvestri@isitech.com. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/456:797,test,test,797,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/456,1,['test'],['test']
Testability,"Hi; I have found that i have some problem converting gaussian file using: babel -ig09 ok.log -oxyz test.xyz.; Sometimes, it does not work with openbabel 2.3.1 (and i also think with 2.3.0) while it was working perfectly well with 2.2.3. I was able to isolate the smallest piece of gaussian log file that works with open babel 2.3.1 (as well as with 2.2.3):; Entering Gaussian System, Link 0=/cluster/apps/gaussian/09_A02-vl1/serial/x86_64-Linux/pgi/11.3-64/g09/g09; #; Input orientation: ; ---------------------------------------------------------------------; Center Atomic Atomic Coordinates (Angstroms); Number Number Type X Y Z; ---------------------------------------------------------------------; 1 7 0 -0.477749 1.577049 -1.113058; 2 7 0 0.477755 1.577016 1.113106; 3 6 0 -2.682077 -0.519929 1.073098; ---------------------------------------------------------------------; Standard orientation: ; ---------------------------------------------------------------------; Center Atomic Atomic Coordinates (Angstroms); Number Number Type X Y Z; ---------------------------------------------------------------------; 1 7 0 -10.477749 11.577049 -11.113058; 2 7 0 0.477755 1.577016 1.113106; 3 6 0 -12.682077 -0.519929 1.073098. For both version, it is the standard orientation geometry that is output. This is all perfectly fine. I have notice that since version 2.3.1 (and i guess also 2.3.0), two elements are needed for the file to be correctly read:; 1) The second line with: "" # "" indicating the route section in gaussian; 2) Both the Input and standard orientation; These two facts were not needed in version 2.2.3. For instance, the following file was read without problem in 2.2.3 but not in 2.3.1:; Entering Gaussian System, Link 0=/cluster/apps/gaussian/09_A02-vl1/serial/x86_64-Linux/pgi/11.3-64/g09/g09; #; Input orientation: ; ---------------------------------------------------------------------; Center Atomic Atomic Coordinates (Angstroms); Number Number Type X Y Z; -----------------",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1205:89,log,log,89,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1205,3,"['log', 'test']","['log', 'test']"
Testability,"I added the webGL viewer to RDKit about a month back (rdkit/rdkit#257), and used it as an opportunity to use IPython v2.0's new [install_nbextension](http://ipython.org/ipython-doc/stable/api/generated/IPython.html.nbextensions.html) feature. This commit is basically a port of the improvements made in the RDKit pull request. This should reduce memory overhead, especially in cases where multiple webGL molecules are drawn. The logic here copies `imolecule.min.js` to the python install directory (a little awkward to put a js file in a python directory, but I couldn't think of a better alternative). When a user requests a webGL drawing, the code checks to see if it's installed, and installs if needed. Note that this breaks webGL for IPython <2.0.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/80:429,log,logic,429,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/80,1,['log'],['logic']
Testability,I am :; Enguerran Vanquelef; enguerran.vanquelef@q4md-forcefieldtools.org. I work with:; Opensuse 10.2 64 bits; Openbabel 2.1.1. The bug I have noted:; I have noted a problem with some gaussian log files.; When a gaussian log file contain a ghost atom (named Bq in the log file) no translation is possible. Openbabel give the following message : segmentation fault. other files work fine. regards. Enguerran Vanquelef. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/739:194,log,log,194,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/739,3,['log'],['log']
Testability,"I am a new Open Babel user and have installed babel on my MacOSX 10.6 from the package OpenBabel-2.2.3b.mac.zip. I am trying to convert from a .cif file taken from the Cambridge database to a .pdb. However, I receive the following error:. *** Open Babel Error in Find; Unknown space group error (H-M symbol:Fm-3m), cannot match the list of transforms, please file a bug report.; 1 molecule converted; 1 errors 16 audit log messages 1 debugging messages. If anyone has any suggestions as to how this issue can be solved and any future advice I would greatly appreciate it. . Thanks, ; Stephanie; steichm@Sandia.gov. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1011:419,log,log,419,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1011,1,['log'],['log']
Testability,I am trying to convert a file from SMILES to SD. openbabel/bin/babel -ismi TaoR1-5.subset.smi -osdf ; Tao.sdf; Assert at File mol.cpp Line 885; Segmentation fault. I am running RedHatLinux 7.3. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/415:111,Assert,Assert,111,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/415,1,['Assert'],['Assert']
Testability,"I am using Open Babel ver 2.3.1 on a win7 Home machine 64bit; It seems that open babel cannot compute the valence of ANY radical carbon.; Here is how I found this problem. I want to find carbon radicals using SmartsDescriptors.; To do that, I added a SmartsDescriptor to plugindefines.txt in my working folder; according to daylight ; http://www.daylight.com/dayhtml_tutorials/languages/smarts/smarts_examples.html#RAD. I tried with some single-radicals, and the program never found a match for the RandomTest.txt file (see attachment). Trying to understand why, I set these following descriptors (in plugindefines.txt). SmartsDescriptor; v4; [v4]; Number of atoms with valence of 4. SmartsDescriptor; v3; [v3]; Number of atoms with valence of 3. #the following copied from Daylight; SmartsDescriptor; CR; [CX3v3+0]; C radicals. When testing the program I had the following output; obabel RandomTest.txt -h -ismi -otxt --append cansmi formula CR V3 V4; I had as output the following; cansmi formula CR V3 V4; [CH3] CH3 0 0 1; C[CH2] 	C2H5 0 0 2; C[CH]C 	C3H7 0 0 3; C[C](C)C 	C4H9 0 0 4; C=[CH] 	C2H3 0 0 2; C[C]=C 	C3H5 0 0 3; C#[C] 	C2H 0 0 2. No radicals are found (first numeric column). ; That’s because no carbon has a valence of 3 (second numeric column): all carbons always have valence of 4 (last column).; I expected the ""v3"" being equal to 1 for all the tested molecules and the V4 being lower by 1.; It is not clear to me if this is a bug, an unsupported feature or if I didn't really understand what obabel means with ""valence"".; Am I missing something or this is a bug?; Samuele; samuele.sommariva@gmail.com. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1160:834,test,testing,834,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1160,2,['test'],"['tested', 'testing']"
Testability,"I believe that this fixes #1929, at least the immediate issue. The test for atom identity was missing in the isomorphism mapper, except for the first atom to be tested which was tested 'outside the loop' in advance. Thanks to @johnmay for help identifying this. More generally, the existing identity check is a little loose and should be tightened up to check for hydrogen count, charge, isotope and any other attributes I can think of (currently it just tests atomic number, aromaticity and ring membership). In theory, it's just an interface which the user can override, but the defaults should do what is expected, which is to be an exact match rather than something a bit fuzzy.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1940:67,test,test,67,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1940,4,['test'],"['test', 'tested', 'tests']"
Testability,I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Linux Slackware 14.2. ## Expected Behavior; Image created by openbabel. ## Actual Behavior; Useless file. ## Steps to Reproduce; obabel -C -i sdf Conformer3D_CID_60961.sdf -o png -O test.png; I do not believe it is limited to that file I get the same issue with another file too.; You can get that file from PubChem:; https://pubchem.ncbi.nlm.nih.gov/compound/60961,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2195:311,test,test,311,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2195,1,['test'],['test']
Testability,"I believe this to be a bug with Open Babel. To me it seems as resurfacing of #1851 on arm64 architecture. ## Environment Information; Open Babel version: 3.1.1+dfsg-6, as packaged in Debian; Operating system and version: Debian unstable a.k.a. sid. ## Expected Behavior; * The following results in a valid SDF file:; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ```; * The following test passes:; ```bash; $ python3 test/testbindings.py TestSuite.testTemplates; ```. ## Actual Behavior; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ==============================; *** Open Babel Error in Convert; Convert failed with an exception; 0 molecules converted; $ python3 test/testbindings.py TestSuite.testTemplates; testTemplates (__main__.TestSuite); Check for regressions to #1851 ... terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8); Aborted; ```; The failure is observed on arm64 architecture. Tested also on amd64 and mipsel, both worked fine.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2417:429,test,test,429,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417,12,"['Test', 'test']","['TestSuite', 'Tested', 'test', 'testTemplates', 'testbindings']"
Testability,"I break the -at option in a local build, and make test failed to detect; the breakage. Add a regression test for it.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/183:50,test,test,50,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/183,2,['test'],['test']
Testability,"I don't understand why the residue number gets appended to the residue name here:; https://github.com/openbabel/openbabel/blob/90739b4c5caf8f1af41c968354a5bfbb1f3aa630/src/formats/mol2format.cpp#L672-L673. This in fact leads to an issue that if you load and save *.mol2, the residue number gets appended to the residue name every time. For instance, use obabel on the same file multiple times:; ```sh; $ obabel test.mol2 -O test.mol2; ```. Example file:; ```; $ cat test.mol2; @<TRIPOS>MOLECULE; *****; 9 9 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 C -1.1751 -0.1984 0.0000 C.3 1 MYRES 0.1808; 2 N -2.3491 0.6420 0.0000 N.pl3 1 MYRES -0.3222; 3 C -1.9564 1.9915 0.0000 C.2 1 MYRES 0.0049; 4 C -0.5897 2.0518 0.0000 C.2 1 MYRES 0.0049; 5 N -0.0796 0.7422 0.0000 N.pl3 1 MYRES -0.3222; 6 R1 -3.3224 0.3062 0.0000 H 1 MYRES 0.1478; 7 R2 -2.6318 2.8365 0.0000 H 1 MYRES 0.0791; 8 R2 0.0087 2.9530 0.0000 H 1 MYRES 0.0791; 9 R1 0.9195 0.4933 0.0000 H 1 MYRES 0.1478; @<TRIPOS>BOND; 1 1 2 1; 2 2 3 1; 3 2 6 1; 4 3 4 2; 5 3 7 1; 6 4 5 1; 7 4 8 1; 8 5 1 1; 9 5 9 1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2024:411,test,test,411,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2024,3,['test'],['test']
Testability,"I finally got the AFL fuzz tester to work. This was on Linux with a static build. The build failed when linking the obabel executable, but works if you do it manually after removing the ""-rdynamic"" from the VERBOSE=1 output. Anyway, I ran it for a while (-ismi -onul) and fixed the segfaults it found:; 1. SMILES starting with a bond symbol; 2. Self-bonding through ring closures; 3. Square planar and tetrahedral stereo with 5 nbors (where the nbor might be described by a ring closure). Anything that's a reaction SMILES also segfaults if read as smi (I rejected these SMILES when testing), but hopefully we can fix this as described in my enhancement proposal. I also tightened up the parsing of square planar stereo so that only @SP1/2/3 are accepted.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1770:27,test,tester,27,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1770,2,['test'],"['tester', 'testing']"
Testability,I got a seg fault when trying to call Separate function with OBMol object. ; Here is the output for the testing program file attached. $ ./OBtest; first compound read; Segmentation fault. input file name lig.smi has only one record:; c1(nc2c(cn1)cccc2)[NH2].c1(ccc(cc1)[SH])[NH2] 12356. Reported by: yongjinxu,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/914:104,test,testing,104,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/914,1,['test'],['testing']
Testability,"I have 3 installations of Open Babel I am testing with:. (1) Installed on Mac OS X 10.10.1, using v2.3.1 installer from downloads page; (2) Installed on Mac OS X 10.10.1, building from git repository, v2.3.90; (3) Installed on Ubuntu 14.04, building from git repository, v2.3.90. First, there is some ambiguity in the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html) for confab for number of conformers:. In options list: **--conf** used. ```~~; --conf <#confs>; ```~. In examples: **-nconfs** used. ```~~; obabel bostrom.sdf -O confs.sdf --confab -nconfs 100000; ```~~. I am unable to verify which one is correct, because I am unable to get confab to work properly, but this should be cleared up in the documentation eventually. Confab; -----------------; Based on the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html) example:. ```~~; obabel bostrom.sdf -O confs.sdf --confab -nconfs 100000; ```~~. My input:. ```~~; $ obabel r.xyz -O a.xyz --confab; ```~~. Outputs:; (1) Mac, 2.3.1 - confab not recognized, so it just converts xyz to xyz. ```~~; 1 molecule converted; ```~~. (2) Mac, 2.3.90, fails to build forcefield (this is invariant to number of rotatable bonds). ```~~; **Starting Confab 1.1.0; **To support, cite Journal of Cheminformatics, 2011, 3, 8.; ..Input format = xyz; ..Output format = xyz; ..RMSD cutoff = 0.5; ..Energy cutoff = 50; ..Conformer cutoff = 1000000; ..Write input conformation? False; ..Verbose? False. **Molecule 1; ..title = 0 1; ..number of rotatable bonds = 0; !!Cannot set up forcefield for this molecule; !!Skipping. 0 molecules converted; ```~~. (3) Ubuntu, 2.3.90, confab not recognized, so it just converts xyz to xyz, same as (1). ```~~; 1 molecule converted; ```~~. Genetic Algorithm; -----------------; Documentation input:. ```~~; obabel startingConformer.mol -O ga_conformers.sdf --conformer --nconf 30; --score rmsd --writeconformers; ```~~. My input:. `",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1330:42,test,testing,42,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1330,1,['test'],['testing']
Testability,"I have a 1.0 install version of InChI which doesn't compile with OpenBabel 2.2. . /usr/bin/ld: Undefined symbols:; _GetINCHIKeyFromINCHI. This is because of the new function in InChI for producing a key. While possible to support both versions though #ifdef checks, it's okay, I think, to have this compilation problem. Few use InChI and fewer use the older code. I wanted to disable InChI support for my build. The configure script says. --disable-inchi do not build the InChI library. I tracked the problem down to this line:. if test x""$LIBINCHI"" = ""x"" -o ""$inchi"" = ""yes""; then. It should be. if test x""$LIBINCHI"" = ""x"" -o ""$inchi"" = ""no""; then. That is, ""if the inchi code could not be found or the inchi option is *disabled*"". . Reported by: dalke",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/801:532,test,test,532,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/801,2,['test'],['test']
Testability,"I have a molecule which SMILES is `CC(C)CC(=O)Nc1cc(-c2ccc(C(N)=O)cc2C(=O)O)cc(C2CC(C)(c3ccccc3)c3cc(C(=N)N)ccc3N2)c1`, after add H by openbabel, there is a `C` with `+1`. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: win10 and centos7. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; ![image](https://user-images.githubusercontent.com/5920217/114177985-a98de380-996f-11eb-84ed-574ab5b5d8ba.png). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; ![image](https://user-images.githubusercontent.com/5920217/114178002-b0b4f180-996f-11eb-9a7a-66dabb2e9e89.png). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ```; obabel -:'CC(C)CC(=O)Nc1cc(-c2ccc(C(N)=O)cc2C(=O)O)cc(C2CC(C)(c3ccccc3)c3cc(C(=N)N)ccc3N2)c1' -O output.sdf -p 7; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2353:1635,test,test,1635,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2353,1,['test'],['test']
Testability,"I have a program which generates python scripts that use open babel to read CIF files, perform energy calculations on them, and then output a new CIF file. It works almost always, but seems to fail on reading a few CIF files that are seemingly properly formatted. I have included a problem CIF file, the python script used to read and operate on it, and a log file of the error that is generated when this python script is run. Using Open Babel version 2.2.3, running on Ubuntu Linux. Reported by: stewenner",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1122:356,log,log,356,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1122,1,['log'],['log']
Testability,"I have a strange problem with the conversion of charged structures from; InChI to Canonical smiles on 64bit architectures (I am using the Ruby; interface, but the effect seems to be reproducible also on the command; line). It gives the expected result on 32 bit machines (tested with; Ubuntu Hardy + Open Babel 2.2.2, Ubuntu Intrepid + Open Babel 2.2.3):. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na+].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. but the positive charge is missing on 64bit machines (tested on 2 machines with; Debian Lenny, Open Babel 2.2.2 and 2.2.3). echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. The same problem occurs without canonification:. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -osmi --; [B-](F)(F)(F)F.[Na]; 1 molecule converted; 1 info messages 21 audit log messages. PS: Noel O'Boyle has confirmed the problem on 64bit Linux, but it works on 64bit Windows. Reported by: chelma",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/962:272,test,tested,272,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/962,5,"['log', 'test']","['log', 'tested']"
Testability,"I have come across a problem with certain smiles strings with regard to generating a fs index and probing against that index. Consider the file test.smi; c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C chem001. build a fs index; $ babel -ismi test.smi -ofs test.fs; build properly, converting 1 molecule. probing against the fs with the exact same input smiles:; $ babel test.fs hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.85; yields 0 molecules converted. Rerunning the same probe but with a lower tanimoto threshold results in a hit:; $ babel test.fs hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.80; yields 1 molecule converted. Direct comparison works:; $ obabel -:'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -:'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -ofpt; yields a tanimoto of 1. and probing directly against the original .smi file:; $ babel test.smi hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.85; yields 1 molecule converted. In my tests using ~85 probe molecules against a 160,000-entry database this last method (direct comparison to the smi file) doesn't always work. However, the molecules that give problems when probing against the fs index are different from the molecules that give problems when probing directly against the smi file. My OS is Mac OSX 10.6.8; This error reproduces on Open Babel 2.3.0 and 2.3.9 (dev version). Christopher Mayne; cgmayne@gmail.com. Reported by: cmayne",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1135:144,test,test,144,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1135,7,['test'],"['test', 'tests']"
Testability,"I have not confirmed yet if this bug exists also on the SVN trunk, but it certainly exists on the 2.1 branch right now. The invalidsmiles test works fine up until the tests to read random binary data. This evidently causes an infinite loop immediately:. The main crash:; Program received signal EXC_BAD_ACCESS, Could not access memory.; Reason: KERN_INVALID_ADDRESS at address: 0xbf7ffff0; 0x0115120c in zlib_stream::basic_unzip_streambuf<char, std::char_traits<char> >::underflow (this=0x0) at zipstreamimpl.h:341; 341 basic_unzip_streambuf<charT, traits>::underflow(void). Here's a backtrace:; #13525 0x01150fd4 in zlib_stream::basic_unzip_streambuf<char, std::char_traits<c; har> >::fill_input_buffer (this=0x313530) at zipstreamimpl.h:493; #13526 0x0115111c in zlib_stream::basic_unzip_streambuf<char, std::char_traits<c; har> >::unzip_from_stream (this=0x313530, buffer=0x280fa04 """", buffer_size=4092); at zipstreamimpl.h:462; #13527 0x01151374 in zlib_stream::basic_unzip_streambuf<char, std::char_traits<c; har> >::underflow (this=0x313530) at zipstreamimpl.h:357; #13528 0x94c6cab0 in std::basic_streambuf<char, std::char_traits<char> >::uflow ; (); #13529 0x0114664c in OpenBabel::LineEndingExtractor::operator() (this=0x312834, ; src=@0x313530) at ../include/openbabel/lineend.h:171; #13530 0x01150a34 in OpenBabel::FilteringInputStreambuf<OpenBabel::LineEndingExt; ractor>::underflow (this=0x312810) at ../include/openbabel/lineend.h:132; #13531 0x94c6cab0 in std::basic_streambuf<char, std::char_traits<char> >::uflow ; (); #13532 0x94c6d1bc in std::basic_streambuf<char, std::char_traits<char> >::xsgetn; (); #13533 0x94c54da8 in std::istream::read (). Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/649:138,test,test,138,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/649,2,['test'],"['test', 'tests']"
Testability,"I have observed something curious about variations in the way OpenBabel assigns Gasteiger charges. For example,. babel -isdf molecule.sdf -omol2 molecule_H.mol2 -h. produces a molecule with an overall charge that is essentially 0. However, the command. babel -isdf molecule.sdf -omol2 molecule_H.mol2 -p 7.4. produces a molecule that has an overall charge of -9.0. Both output files have had the same number of hydrogens added. Is this what's supposed to happen?. I have attached the input file for others to test. This seems to happen with both 2.2.3 and 2.3.0,. Reported by: dhouston6",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1091:509,test,test,509,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1091,1,['test'],['test']
Testability,"I have obtained the attached CIF file for Prussian Blue directly from the journal website PR Bueno, et al., J. Phys. Chem. C, 2008, 111(34), 13264-71. The IUCr CIF test site confirms that both its basic and full structural information are without error. However, when I attempt a conversion under Windows 2003 using the most current OpenBabel 2.2.0 (converting to CIF - in order to use the simplest conversion - or anything else for that matter), I get the following report: ; =============================; *** Open Babel Warning in OpenBabel::CIFFormat::ReadMolecule; Problems reading a CIF file: no structure found !; 0 molecules converted; ============================; I am no expert in CIF - could someone advise how to correct the file? Why is Babel having a problem?; ; I actually wish to put the structure into Jmol, which also rejects the CIF file with ""Error reading file at line 5: String index out of range: -31 .... type mol"". LesG. lesg@users.sourceforge.net. . Reported by: lesg",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/814:164,test,test,164,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/814,1,['test'],['test']
Testability,"I have some probles hen converting data from g03 output to mol2. 1. I have problems with C.4 atoms . In the file mol11_min.mol2, atom N1 ( index 3 ) has been assigned to N.3 and not to a N.4 ; If I do the same test with the old babel 1.6 I have the good assignation. Also atom S1 ( index 22 ) has S.2 assignation, different from babel 1.6, that have S.3 Type. In this case, I do not know what is the right one. I used :; - Linux UBUNTU; - g77 compiler; - openbabel 2.1.1. Jaime. jaimerubio07@gmail.com. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/681:210,test,test,210,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/681,1,['test'],['test']
Testability,"I have some probles hen converting data from g03 output to mol2. 1. I have problems with C.cat atoms ( from guanidinium ) that are not detected. In the file mol8_min.mol2, atom C25 ( index 35 ) has been assigned to C.2 and not to a C.cat.; If I do the same test with the old babel 1.6 I have the good assignation. I used :; - Linux UBUNTU; - g77 compiler; - openbabel 2.1.1. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/680:257,test,test,257,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/680,1,['test'],['test']
Testability,"I just found a possible bug in the identification of ester bonds.; Basically, the method OBBond.IsEster() returns true with . HOW TO REPRODUCE IT:; ```; $ cat> testester.py << EOF; import pybel; ob = pybel.ob; smi = [ 'OC(=O)', 'CC(O)=O', 'O=C(O)c1ccccc1']; for s in smi:; mol = pybel.readstring('smi',s).OBMol; for b in ob.OBMolBondIter(mol):; if b.IsEster():; print ""FOUND ESTER BOND""; ^D; $ python testester.py; FOUND ESTER BOND; ```; The test is positive with formic, acetic and benzoic acid, and it doesn't seem to be affected by the input format (I've tested Mol2). Reported by: @sforli. Original Ticket: [openbabel/bugs/970](https://sourceforge.net/p/openbabel/bugs/970)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1349:160,test,testester,160,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1349,4,['test'],"['test', 'tested', 'testester']"
Testability,"I previous ""fix"" several years ago added successive calls to BeginModify/EndModify in AddHydrogens to ensure that coordinates were set (PR#1665519). Unfortunately, this completely blows away all but the set conformer. This, despite the AddHydrogen code correctly handling the multiple conformer cases (at least it looks like it). I believe that all that is needed to resolve the original bug is to make sure coordinates are set on atoms. The original bug report claims test cases were added for the bug and this change doesn't result in any test failures, so I assume it fixes the original bug while retaining multiple conformers.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/201:469,test,test,469,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/201,2,['test'],['test']
Testability,I ran into an issue where overwriting my LD_LIBRARY_PATH causes most of the tests to fail.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1588:76,test,tests,76,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1588,1,['test'],['tests']
Testability,"I read a mol2 file with pybel.; I want to rename some atoms (name, type) in some special cases.; For this, I test if the type (atom.GetType()) equals a given string. The problem is that pybel assigns a different type (eg : C+) instead of type present in the mol2 file (eg : C2). Reported by: lorenzo21",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/861:109,test,test,109,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/861,1,['test'],['test']
Testability,"I recently added a new test ""smilesmatch"" which reads strings as SMILES ; and SMARTS. Since SMARTS is a superset of SMILES, a string should match ; itself as a molecule. Currently, ~30% of the test molecules I checked this afternoon do not ; match themselves. I'm attaching a file with a small set of non-matched SMILES. It's hard to ; know, but many may be related to bug #1503849, but I suspect others ; are new. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/552:23,test,test,23,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/552,2,['test'],['test']
Testability,"I saw this at the top of mol.h:; ```; // Currently includes many headers for 2.x backwards compatibility; // \deprecated -- this will be cleaned up in 3.0 efforts; // to improve compile time significantly.; // Only include necessary headers and class declaration stubs.; ```; So, that's what I did. I did the same for bond.h and atom.h, and did a little bit of additional triming. I also moved the globals into wherever their classes are defined (so including oberror.h gives you obErrorLog), and removed the typedefs for OBEdge/NodeBase. It was a bit more work than I expected, so I should probably have resisted. In any case, from the point of view of a user, they may need to include mol.h, bond.h, atom.h, and obiter.h, where previously mol.h would have sufficed.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1958:263,stub,stubs,263,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1958,1,['stub'],['stubs']
Testability,"I think there is a general problem in dealing with stereochemistry with SMILES strings, and that this bug is tied to [ 1742876 ] and [ 1792878 ], and possibly to a bunch of closed bugs. We are looking to use OpenBabel to generate database primary keys. We are parsing a vendor-supplied database, which includes both molfile and SMILES descriptors for compounds. For chiral compounds, OpenBabel appears to perform well when converting the vendor-supplied molfile data to either InChI or canonical SMILES. OpenBabel seems (* caveat below *) to have a very high failure rate when it uses the vendor-supplied SMILES string, though. I tested 53 small (SMILES string <= 20 characters) chiral molecules, and about half (26 - included as attachment) appear to disrupt the stereochemistry when inputed as SMILES. The disruption was visible either when converting to InChI (10 cases), to canonical SMILES (8 cases) or both (8 cases):. Failed both InChI and Canonical SMILES:; C[C@@H]1Cc2ccccc2CN1; C[C@H]1Cc2ccccc2CN1; FC[C@H]1Cc2ccccc2CN1; N[C@@H]1CCSC1=O; N[C@H]1CCSC1=O; OC(=O)C[C@@H]1CCNC1; OC(=O)C[C@H]1CCNC1; OC[C@H]1Cc2ccccc2CN1. Failed InChI:; C\C=N/OC[C@H]1CCCN1C; CN(C)CC#C[C@H]1CCCN1; CN1CCC[C@H]1c2cccnc2; CP(O)(=O)C[C@H](O)CN; FC[C@@H]1CCCN1; N[C@H]1CCn2cccc2C1; NC[C@@H]1CC(=O)NO1; NC[C@H]1CC(=O)NO1; NC[C@H]1COc2ccccc2O1; OC(=O)[C@@H]1CCCN1. Failed SMILES:; CC(C)[C@H](N)C(O)=O; CC[C@H](O)C([O-])=O; CO[C@@H](CN)c1ccccc1; CO[C@H](CN)c1ccccc1; N[C@@H](CO)C(O)=O; N[C@H](CO)C(O)=O; NCCC[C@H](N)C(O)=O; NCCSC[C@H](N)C(O)=O. Command being used: babel ---errorlevel 2 -ocan -ismi <string>; (or -oinchi for inchi output). Open Babel 2.1.1 -- Sep 28 2007 -- 18:13:29; Altix Itanium; Intel(R) C++ Itanium(R) Compiler for Itanium(R)-based applications; Version 8.0 Build 20031017 Package ID: l_cc_p_8.0.056; Copyright (C) 1985-2003 Intel Corporation. All rights reserved. To be honest, I don't have many independent mechanisms to verify that OpenBabel is the point of failure in all cases; I can't read th",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/683:630,test,tested,630,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683,1,['test'],['tested']
Testability,"I use CUBE files a lot for quick inspection of simulation results.; And I use the popular VESTA and VisIt applications for visualization. To my surprise, I realized that there are two dialects of CUBE format defined https://gaussian.com/cubegen/. (a) The most usual format has the list of atoms and immediately after the density data. (b) There is a second format uses ""negative"" number of atoms to indicate that there will some kind of ""orbital"" index (two numbers actually) in between the list and the data. But inspecting the code, it seems that OpenBabel supports both variants for reading.; But it doesn't implement (a) for writing. This is unfortunate because VESTA and VisIt and others do not support format (b). I can hack the OpenBabel code to implement writing in format (a), but I wonder if there is a better way to handle subtle changes in the output format.; In any case if one doesn't introduce a whole new format, I would like to know if there is way to pass this information to the converter of the Format class. I notice for example that there is a `Flags()` method in the Format class, but it seems to be for something else. These are the lines that need to be modified to save the CUBE file in the most usual format (a). https://github.com/openbabel/openbabel/blob/master/src/formats/gausscubeformat.cpp#L620-L628. Another leaner alternative, that doesn't require flags, is to default to format (a) when there is only one GridData count. In any case, I would like to know if there is interest in implementing this in the code.; I can propose a merge request after asking some framework questions (testing, etc).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2579:1616,test,testing,1616,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2579,1,['test'],['testing']
Testability,"I want to use `pybel` to create a `pybel.Molecule` from user defined data. I follow the [cclib example](https://github.com/cclib/cclib/blob/master/cclib/bridge/cclib2openbabel.py) referenced in [Examples from around the web (Open Babel Documentation)](http://openbabel.org/docs/current/UseTheLibrary/PythonExamples.html#examples-from-around-the-web). Everything works fine for neutral molecules but when I add a molecular charge (`SetTotalCharge`) or a user-defined molecular spin multiplicity (`SetTotalSpinMultiplicity`), these are ignored. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Python version: 3.7.3; Operating system and version: Ubuntu 19.04 . ## Expected Behavior . Creating an `OH-` ion should yield . > InChI=1S/H2O/h1H2/p-1. ## Actual Behavior. Creating an `OH-` ion actually yields `OH·` radical. > InChI=1S/HO/h1H. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Input:; ```python; import pybel. atomcoords = [[0.0, 0.0, 0.00],; [0.0, 0.0, 0.95]]; atomnos = [8, 1]; charge = -1; mult = 1. obmol = pybel.ob.OBMol(); for i in range(len(atomnos)):; obatom = pybel.ob.OBAtom(); obatom.SetAtomicNum(atomnos[i]); obatom.SetVector(*atomcoords[i]); obmol.AddAtom(obatom); obmol.ConnectTheDots(); obmol.PerceiveBondOrders(); obmol.SetTotalSpinMultiplicity(mult); obmol.SetTotalCharge(charge). mymol = pybel.Molecule(obmol). print(mymol.write('inchi')); ```; Output:; ```; InChI=1S/HO/h1H; ```. ## Edit; If I build openbabel from current `master` branch, I additionally get the following openbabel warning:; ```; ==============================; *** Open Babel Warning in InChI code; #0 :Accepted unusual valence(s): O(1); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1995:1104,test,test,1104,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1995,1,['test'],['test']
Testability,"I was doing some tests with a file for a software I'm developing, and when I did certain unrelated changes, the HBA calculation went crazy. I haven't been able to reproduce the normal behaviour, only the buggy one. I'm using OpenBabel 2.3.1 on Debian. This happens using both pybel from OpenBabel and from cinfony 1.0. So i've written a little script which shows what happens:. from cinfony import pybel # or just 'import pybel', the result is the same for me. testfile = 'test/test_ligands.sdf.gz'. print [mol.calcdesc(['HBA1'])['HBA1'] for mol in pybel.readfile('sdf', testfile)]; print [mol.calcdesc(['HBA2'])['HBA2'] for mol in pybel.readfile('sdf', testfile)]. When I run it it prints the following:; [35.0, 43.0, 37.0, 46.0, 37.0, 37.0]; [6.0, 6.0, 6.0, 7.0, 6.0, 6.0]. There can be seen that the HBA1 values are extremely high in comparison. The most annoying part is that I was getting sensible values from HBA1 calculation in my program, but I'm not able to reproduce them (they were values almost identical to the ones of HBA2). Thank you,. Adrià <ssorgatem@gmail.com>. Reported by: ssorgatem",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1154:17,test,tests,17,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1154,5,['test'],"['test', 'testfile', 'tests']"
Testability,"I was testing Open Babel 2.3.0 for its ability to use it in a script to test for unique compounds when I encountered a problem concerning the processing of aromaticity when reading smiles input with some specific aromatic rings. Step 1: convert this protonated molecule to canonical smiles:; $ echo ""C1=CC=CC=C1N1[N-]C(=O)C=CC1(=O)"" | babel -ismi -ocan; O=c1ccc(=O)n([n-]1)c1ccccc1. Step 2: read the canonical smiles and convert it to canonical smiles :; $ echo ""O=c1ccc(=O)n([n-]1)c1ccccc1"" | babel -ismi -ocan; O=C1CCC(=O)[N-]N1c1ccccc1	. One would expect that the result of step 2 would generate the same canonical smiles again, but as the example shows this is not happening. . If I perform the same procedure but with neutral form the procedure is OK.; $ echo ""C1=CC=CC=C1N1NC(=O)C=CC1(=O)"" | babel -ismi -ocan; O=c1ccc(=O)n([nH]1)c1ccccc1	. $ echo ""O=c1ccc(=O)n([nH]1)c1ccccc1"" | babel -ismi -ocan; O=c1ccc(=O)n([nH]1)c1ccccc1	. Gert Thijs; gert.thijs@silicos.com. Reported by: @gertthijs",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1042:6,test,testing,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1042,2,['test'],"['test', 'testing']"
Testability,I was testing all the comands in the user docs. >babel aceto_indes.fs aceto_results.sdf -s c1ccccc1Br -at5; 5 molecules converted; However looking at the file it seems the molecule separator is missing?. MOL_00000105; OpenBabel11140519413D. 10 10 0 0 0 0 0 0 0 0999 V2000; 1.1069 -0.0724 0.0000 C 0 0 0 0 0; 2.5552 -0.0724 0.0000 C 0 0 0 0 0; 0.3862 1.1552 0.0000 C 0 0 0 0 0; 0.3862 -1.3241 0.0000 C 0 0 0 0 0; 3.2724 -1.3241 0.0000 C 0 0 0 0 0; 3.2724 1.1552 0.0000 O 0 0 0 0 0; -1.0276 1.1552 0.0000 C 0 0 0 0 0; -1.0276 -1.3241 0.0000 C 0 0 0 0 0; -1.7448 -0.0724 0.0000 C 0 0 0 0 0; -3.1931 -0.0724 0.0000 Br 0 0 0 0 0; 1 2 1 0 0 0; 1 3 1 0 0 0; 1 4 2 0 0 0; 2 5 1 0 0 0; 2 6 2 0 0 0; 3 7 2 0 0 0; 4 8 1 0 0 0; 7 9 1 0 0 0; 8 9 2 0 0 0; 9 10 1 0 0 0; M END; MOL_00000067; OpenBabel11140519413D. 10 10 0 0 0 0 0 0 0 0999 V2000; -0.3552 0.0483 0.0000 C 0 0 0 0 0. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/487:6,test,testing,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/487,1,['test'],['testing']
Testability,I'd like to obtain canonical SMILES with chiral info from PDB file.; Option -xi for chiral info was ignored when -ocan used instead of -osmi.; I got the following result with bable ver.2.1.0. $ cat mpd_clean.pdb; ATOM 1 C1 MPD 4728 -0.344 -1.472 -1.321 1.00 20.00 C+0; ATOM 2 C2 MPD 4728 -0.084 0.021 -1.122 1.00 20.00 C+0; ATOM 3 O2 MPD 4728 1.323 0.254 -1.049 1.00 20.00 O+0; ATOM 4 CM MPD 4728 -0.670 0.802 -2.299 1.00 20.00 C+0; ATOM 5 C3 MPD 4728 -0.746 0.485 0.177 1.00 20.00 C+0; ATOM 6 C4 MPD 4728 -0.145 -0.280 1.357 1.00 20.00 C+0; ATOM 7 O4 MPD 4728 1.240 0.047 1.481 1.00 20.00 O+0; ATOM 8 C5 MPD 4728 -0.878 0.106 2.643 1.00 20.00 C+0; END. $ babel -ipdb mpd_clean.pdb -osmi -xi 1.smi ; cat 1.smi; 1 molecule converted; 18 audit log messages; CC(C)(O)C[C@@H](O)C mpd_clean.pdb. $ babel -ipdb mpd_clean.pdb -ocan -xi 1.smi ; cat 1.smi; 1 molecule converted; 31 audit log messages; CC(O)CC(C)(C)O mpd_clean.pdb. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/635:742,log,log,742,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/635,2,['log'],['log']
Testability,"I'm already working on this, but wanted to mark this in the database for ; verification and public tracking. Rich Apodaca has been doing some great work with Ruby and chemistry:; http://. We're working on getting a Ruby bridge using SWIG, much like the Perl ; and Python interfaces. So far, there is SWIG-generated code, but it's not ; yet ready for beta testing.; -Geoff. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/101"":https://sourceforge.net/p/openbabel/feature-requests/101",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1470:355,test,testing,355,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1470,1,['test'],['testing']
Testability,"I'm getting a segmentation fault when loading a GAMESS output file with vibrational frequencies (mol1test_freq.log, attached). Output from a mere optimization run reads in fine (except for that it complains not being able to assign all charges) (mol1opt.log, attached). . System: OSX 10.9 Mavericks, openbabel compiled from github commit 5f0837 Sat Mar 15 15:59:37 2014. Attached is the gamess output file. . This is the code I'm using to read it in (python):; ```~~~; >>> import pybel; >>> mols = pybel.readfile(format='gamess', filename='mol1test_freq.log'); >>> m = mols.next(); Segmentation fault: 11; ```~~~. Reported by: mschmuker. Original Ticket: [openbabel/bugs/918](https://sourceforge.net/p/openbabel/bugs/918)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1298:111,log,log,111,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1298,3,['log'],['log']
Testability,"I'm pretty sure this is a regression, and am surprised that it's not covered by the tests. Anyhoo, stereo on a nitrogen due to a LP is not accepted when reading from SMILES. (Note this is nothing to do with stereo perception, just the mechanics of reading a SMILES string.). ```; >obabel -ismi -:[N@@](Br)(F)I -osmi; ==============================; *** Open Babel Warning in OpenBabel::OBSmilesParser::ParseSmiles; Ignoring stereochemistry. Not enough connections to this atom.; N(Br)(F)I; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1830:84,test,tests,84,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1830,1,['test'],['tests']
Testability,"I'm trying to write a package for Open Babel for the Spack package manager (see https://github.com/LLNL/spack/pull/4256). The installation seems to work, but one of the unit tests crashes:; ```; Start 157: pytest_pdbformat; 157/160 Test #157: pytest_pdbformat .................***Failed 0.04 sec; /blues/gpfs/home/software/spack-0.10.0/var/spack/stage/openbabel-2.4.1-g7kl4coxcxba2x2ugjpqbeipuembkpk7/openbabel-2.4.1/scripts/python:/scratch/ajstewart/spack-stage/spack-stage-z0O89Y/openbabel-2.4.1/spack-build/lib; File ""/blues/gpfs/home/software/spack-0.10.0/var/spack/stage/openbabel-2.4.1-g7kl4coxcxba2x2ugjpqbeipuembkpk7/openbabel-2.4.1/test/testpdbformat.py"", line 32; self.entryPDBwithInsertioncodes=""""""ATOM 406 N VAL L 29 58.041 17.797 48.254 1.00 0.00 N ; ^; TabError: inconsistent use of tabs and spaces in indentation. CMake Error at pytest_pdbformat.cmake:20 (MESSAGE):; 1; ```; The problem is that this file contains mixed tabs and spaces. This PR converts all tabs to spaces and allows the unit test to pass.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1568:174,test,tests,174,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1568,5,"['Test', 'test']","['Test', 'test', 'testpdbformat', 'tests']"
Testability,"I'm using openbabel-2.0.0 on Linux/Suse 9.1. . I tried to convert an sdf file exported from IsisBase,; that contains the following section:; ...; 5 6 2 0 0 0 0; 6 1 1 0 0 0 0; 10 11 1 0 0 0 0; G 10 3; OMe; M STY 1 1 SUP; M SLB 1 1 1; ... .../temp> babel -isdf test01.sdf -osdf test.sdf; Conversion failed with an exception. Count=0; 0 molecules converted. It seems to be a valid construct in the property; section of an sdf according to ctfile-1.pdf p. 16 cf. MDL:; ... ; Group Abbreviation [MDL ISIS/Desktop]; G aaappp; x... aaa: Atom number; ppp: Atom number; x: Abbreviation label; ... mdlformat.cpp seems to stumble over the OMe label. replacing line 222; 220 while(ifs.getline(buffer,BUFF_SIZE)); 221 {; 222 if(!strchr(buffer,'M')) continue;; by ; 222 if(strncmp(buffer,""M "",3)) continue;; seems to fix things. Probably better is: ; 222 if(!strncmp(buffer,""M END"",6)) break;; 223 if(strncmp(buffer,""M CHG"",6) \; 224 || strncmp(buffer,""M RAD"",6) \; 225	|| strncmp(buffer,""M ISO"",6)) continue;. test01.sdf attached. Yours; th; thuebner@t2-consult.de. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/502:277,test,test,277,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/502,2,['test'],['test']
Testability,"I'm using the 2.3.1 GUI. I want to use ""Display in Firefox"" to look at the effect of changing the SVG depiction options. When I convert two molecules from SMI to SMI, and click ""Display in Firefox"" it works correctly and I see two molecules. When I convert the same molecules to SVG, and click ""Display in Firefox"" I can use the SVG depiction options to change the depiction. However, I only see a single molecule (the second molecule), even when I write to a file. . Here are my test molecules:; CC(=O)Cl; CCCBr. - Noel. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1187:480,test,test,480,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1187,1,['test'],['test']
Testability,"I've been doing some performance testing of OpenBabel on large datasets ; (2-4 million compounds) and whilst I had no problems it probably is ; hitting the current limits. It is also apparent that the current and future ; generation of machines a multi-core architecture will become more ; common place. To take advantage of this we really need multi-threading. ; Not a trivial request I know but could give significant performance gains. Reported by: *anonymous. Original Ticket: ""openbabel/feature-requests/105"":https://sourceforge.net/p/openbabel/feature-requests/105",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1474:33,test,testing,33,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1474,1,['test'],['testing']
Testability,"I've created a test suite of 14k non-redundant ligands from the pdb. These are provided as reasonably processed sdf files. testroundtrip.py verifies that they can be read in and roundtripped (with hydrogens) through sdf, mol2, and pdb file formats without mucking things up. . Initially there were thousands of failures. Now there are none. You can go through all the commits for the details, but here are the bigger changes:. - mol2 file format now outputs formal charges with a UNIT_ATOM_ATTR record (there is an option to disable its output); - pdb files now output bond orders through the popular but non-standard convention of duplicating CONECT records; - sdf files will only have aliases treated as substructure replacements if the target atom is a wildcard; - numerous adjustments to bond typing rules to make them more conservative. The additional tests add a few minutes to testing, but I think it's very important that we include them. This sort of large test set is needed. Plans for the future:; - port python driver to c++ to avoid python dependency; - make things work without having to roundtrip the molecules with hydrogens; - compare protonation states to rdkit, find and fix errors; - additional file formats for roundtripping",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008:15,test,test,15,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008,5,['test'],"['test', 'testing', 'testroundtrip', 'tests']"
Testability,"I've hit a problem using SMILES as SMARTS, ; which in my case requires using *canonical* SMILES as input,; see the example below. The problem occurs both with ob-2.2.3 ; and todays SVN trunk. #-------- Cut & Paste from here ------------. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o smi; #C1=CC(n2cnc3c(N)ncnc23)OC=1 ; #1 molecule converted; #1 info messages 25 audit log messages . echo 'O' | babel -i smi - -s 'C1=CC(n2cnc3c(N)ncnc23)OC=1' -o smi - ; #==============================; #*** Open Babel Error in SMARTSError; # SMARTS Error:; #C1=CC(n2cnc3c(N)ncnc23)OC=1; # ^. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o can; #Nc1ncnc2c1ncn2C1C=C=CO1 ; #1 molecule converted; #1 info messages 25 audit log messages . # Correct:; echo 'O' | babel -i smi - -s 'Nc1ncnc2c1ncn2C1C=C=CO1' -o smi - ; #0 molecules converted. Reported by: sneumann",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1021:432,log,log,432,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1021,2,['log'],['log']
Testability,"I've just installed openbabel-2.1.1 from source without incident (though make and configure outputs are attached), and when I then create the perl makefile and run make, I also experience no errors). However, when I run 'make test', the conversion test fails:. PERL_DL_NONLAZY=1 /usr/bin/perl ""-MExtUtils::Command::MM"" ""-e"" ""test_harness(0, 'blib/lib', 'blib/arch')"" t/*.t; t/atom.............ok ; t/bond.............ok ; t/conversion.......FAILED tests 5-6, 8 ; Failed 3/9 tests, 66.67% okay; t/data.............ok ; t/format...........ok ; t/internalcoord....ok ; t/mol..............ok ; t/residue..........ok ; Failed Test Stat Wstat Total Fail Failed List of Failed; -------------------------------------------------------------------------------; t/conversion.t 9 3 33.33% 5-6 8; Failed 1/8 test scripts, 87.50% okay. 3/35 subtests failed, 91.43% okay.; make: *** [test_dynamic] Error 2. Doing a little debugging of the conversion test script, it looks like the line:. $obConversion->ReadString($obMol,""C1=CC=CS1"");. ; is failing silently as it creates an empty $obMol object, with no atoms. Also, the line:. $obConversion->WriteFile($obMol, ""test.mdl"");. appears to be failing silently as no file is created. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/677:226,test,test,226,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/677,8,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"I've set this a high priority because I think it needs to be fixed before the impending release. With the latest beta 2 snapshot, the Pybel test suite fails due to the following result:; pybel.readstring(""smi"", ""CCC"").write(""smi"") now gives; ""[CH4][CH3][CH4]"" instead of the former ""CCC"". I have a feeling this must be due to r2864 but I can't see anything; wrong there. Geoff?. Noel. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/854:140,test,test,140,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/854,1,['test'],['test']
Testability,"If I load a PDB molecule and afterwards load an XTC trajectory for that molecule (which seems to be the way to load a trajectory in Open Babel), then at some point the JVM crashes due to a crash in native code. I found out the reason is that the OBMol.finalize() method (which is called by the garbage collector when there is no more references to an object) includes a call to OBMol.delete() which is responsible for calling into the native code that then crashes. I have included the crash information in ""crash.txt"" and I will attach an example molecule and trajectory later (I do not see the possibility for multiple attachments). The code below is the reduced test case:. OBConversion conversion = new OBConversion();; conversion.SetInFormat(""pdb"");. OBMol molecule = new OBMol();; conversion.ReadFile(molecule, ""/path/to/AcAANMe.pdb"");. conversion.SetInFormat(""xtc"");; // Crash if next line is uncommented:; //conversion.ReadFile(molecule, ""/path/to/trajectory.xtc"");. molecule.delete();. Reported by: mkjensen",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1125:665,test,test,665,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1125,1,['test'],['test']
Testability,"If OpenBabel is used for automated batch conversion using the -m switch and only one input file is given, e.g. babel test.sdf -omol2 -m, the output file is *not* named ""test.mol2"" but ""1.mol2"". If at least two input file are given the output files have the same names as the input files (except the extension of course). Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/601:117,test,test,117,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/601,2,['test'],['test']
Testability,"If a molecule is created with H-H bonds (e.g., H2, or this hypothetical H3 molecule), these bonds are not deleted by OBMol::DeleteHydrogens(). Credit to the Avogadro project and Donald:. OBMol testMolH3;; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetAtomicNum(1);; testAtom3 = testMolH3.NewAtom();; testAtom3->SetAtomicNum(1);; testAtom3 = testMolH3.NewAtom();; testAtom3->SetAtomicNum(1);; testMolH3.AddBond(1,2,1);; testMolH3.AddBond(2,3,1);; // OK, we now have 3 hydrogen atoms, 2 bonds; testMolH3.DeleteHydrogens();; // should have 0 atoms, 0 bonds. (in fact, we have 0 atoms, 2 bonds!). A unit test is being added to test/mol.cpp for this. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/638:610,test,test,610,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/638,2,['test'],['test']
Testability,"If an SD File contains a <NAME> field with more than one line, OpenBabel produces invalid SD Files and SMILES files on output. The attached SDF (""methane.sdf"") has such a name. Test it as:. babel methane.sdf -o sdf; babel methane.sdf -o smi. It's not clear whether this should be considered a bug in the output modules, or the input module, and it boils down to the question: Is a name allowed to have multiple lines? If ""yes"", then the bug is in the output modules. If ""no"", then the input SDF reader should reject, or better yet, ignore multi-line names. Multi-line names are typically due to the 80-character restriction on line length in an SDF; very long names have to be broken into two lines. My suggestion is to allow them on input. On output, suppress any name that has multiple lines. You can write it in the SDF body, but not in the SDF header part. You have to drop it altogether for SMILES. Reported by: @cjames53",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/766:177,Test,Test,177,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/766,1,['Test'],['Test']
Testability,"If obconformer is used to generate a new conformation of a molecule with: . obconformer 30 250 c:\temp\myconformer.mol >c:\temp\foundconformer.mol. it shows, that the best of the 30 generated conformations has an energy of 143.113 kcal/mol.; The final minimization however starts with an energy of 197.557 which is not the energy of the conformer with lowest energy, but the energy of the LAST of the 30 conformers created. ; The energy of the conformer returned thus is 180.8 kcal/mol.; The energy of the conformation with which the final minimization starts may vary from calculation to calculation, but it is always the last from the list of conformers. Tested with Openbabel 2.4.1 (64bit) and Win10 pro 64 bit.; This bug was also present in Open Babel 2.3.2. See also:. http://forums.openbabel.org/Obconformer-Obminimize-tt4659382.html; http://forums.openbabel.org/obconformer-tt4659386.html. Reported by: yodah134. Original Ticket: [openbabel/bugs/990](https://sourceforge.net/p/openbabel/bugs/990)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1369:657,Test,Tested,657,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1369,1,['Test'],['Tested']
Testability,"If the user specified option 2 (expand dangling bonds as dummy atoms), there was the possibility of an invalid memory access as the logic handling this did not catch all possibilities. Fixed by testing for a nullptr.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2449:132,log,logic,132,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2449,2,"['log', 'test']","['logic', 'testing']"
Testability,"If you try to convert S=C=S to 3D with make3D(), it enters an infinite loop and exits with the following error:; RuntimeError: maximum recursion depth exceeded. This is because it keeps checking for whether the molecule has 3D coordinates, but the test fails as the molecule is linear. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/795:248,test,test,248,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/795,1,['test'],['test']
Testability,"If you try to generate the canonical SMILES of a molecule that consists entirely of hydrogen atoms, OpenBabel gets a segmentation violation:. echo ""[H][H]"" | babel -i smi -o can. It is caused by a test in cansmilesformat.cpp that tries to avoid starting a SMILES on a hydrogen atom; if the molecule is entirely hydrogen atoms, it ends up with a NULL atom pointer and tries to use it. Reported by: @cjames53",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/817:197,test,test,197,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/817,1,['test'],['test']
Testability,"In 2.3.2 version of Openbabel (both invocation from python bindings and obabel binary) process enters in the infinite loop (no errors, process running & consuming CPU) with some molecules, like the attached one, if trying to add hydrogens to the molecule from which they were removed previously. In 2.3.1 version it worked correctly; Test scenario:; obabel 1.sdf -d -O 2.sdf # Done correctly; obabel 2.sdf -h -O 3.sdf # Never ends. Reported by: remezn. Original Ticket: [openbabel/bugs/843](https://sourceforge.net/p/openbabel/bugs/843)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1223:334,Test,Test,334,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1223,1,['Test'],['Test']
Testability,"In addition to deducing file type based on file extension (e.g. "".mol2"") it is ; often possible to figure out file type based on content -- the so-called ; ""magic MIME type"" also used by the UNIX ""file"" command:. http://developer.kde.org/documentation/library/cvs-api/kdelibs-; apidocs/kio/kio/html/classKMimeMagic.html; http://httpd.apache.org/docs/2.2/mod/mod_mime_magic.html. http://en.wikipedia.org/wiki/Magic_number_(programming); #Magic_numbers_in_files. It would be useful to not only have a set of magic data for chemical files, ; but also for Open Babel to use magic typing to guess file type (e.g., for ; "".out"" or "".log"" types). -Geoff. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/92"":https://sourceforge.net/p/openbabel/feature-requests/92",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1461:627,log,log,627,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1461,1,['log'],['log']
Testability,"In converting the attached amorphous silicon cluster 3x3x3 supercell from XYZ to Mol2, obabel appears to hang while calculating the ring topology (the program did not finish in 22 hours). In contrast, the unit cell XYZ to Mol2 is successful and completes in five seconds. Please find attached a tarball, split into two chunks using gnu split, containing the structures and corresponding output logs, and the successful output for the single unit cell. In gdb, the backtrace is identical whenever I stop the execution except for lines #0 and #1. Shown is the backtrace after execution was stopped manually after 22 hrs. This problem occurs with the head revision (r4519) on ubuntu-10.04 x86_64. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1121:394,log,logs,394,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1121,1,['log'],['logs']
Testability,"In some MDL files, I found the R# symbols can not handle by MDL plugin. for example:; 51.0955 -14.3670 0.0000 R# 0 0 0 0 0 0 0 0 0 0 0 0. And in bool MDLFormat::TestForAlias() it does not support this format. if(symbol.size()==1 || isdigit(symbol[1]) || symbol[1]=='\'' || symbol[1]=='¢'). Thank you. Reported by: axot. Original Ticket: [openbabel/bugs/876](https://sourceforge.net/p/openbabel/bugs/876)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1256:161,Test,TestForAlias,161,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1256,1,['Test'],['TestForAlias']
Testability,"In some cases, functional groups are not converted correctly from cdx files in which they are represented by an alias instead of having all bonds drawn explicitly. The attached cdx file contains three structures of 1,3-substituted benzenes. Using Open Babel 2.4.0, the command ""obabel -icdx test.cdx -ocan"" yields the following result: . *c1cccc(c1)C(F)(F)F	; *c1cccc(c1)C(Cl)(Cl)Cl	; IC(c1cccc(c1)C(I)(I)I)(I)I	. The only structure converted correctly is the one with all bonds drawn explicitly. For the other structures, possibly dependent on orientation, one of the two functional groups is missing. Note that this happens both when the bond is drawn to the ""C"" in the alias, or, in a less correct representation, to the halogen. I could also reproduce this behavior for other functional groups, such as CN. Reported by: mdbu. Original Ticket: [openbabel/bugs/976](https://sourceforge.net/p/openbabel/bugs/976)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1355:291,test,test,291,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1355,1,['test'],['test']
Testability,"In the current CVS version (2.0.0b5 2005-10-01) the -m flag to babel ; does not work as documented. Unless I misunderstand, the ""split"" feature should take a multi-; molecule file and produce a pile of single-molecule files:. babel test/RadIn1.smi Rad.xyz -m. There are 9 molecules in RadIn1.smi, so there should be Rad1.xyz ; through Rad9.xyz. Instead:; babel test/RadIn1.smi Rad.xyz -m; 9 molecules converted; 2 files output. The first is RadIn1.xyz. RadIn1.xyz contains the first molecule. (Good.); RadIn2.xyz contains all of the remaining molecules (Bad.). Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/483:232,test,test,232,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/483,2,['test'],['test']
Testability,"In the current SVN trunk, conversion of a gzip encoded file only generates one molecule:. tools/babel ~/Desktop/Downloads/MMFF94_dative.mol2.gz -osmi; C(C(O)=O)N AGLYSL01. But there are, in fact, 761 molecules in the file:; tools/babel ~/Desktop/Downloads/MMFF94_dative.mol2 -osmi; ...; 761 molecules converted; 9 warnings 9281 audit log messages . (Perhaps it's faster and better to implement a gzip decoder like the lineend.h code? This might also solve other PR in this list.). -Geoff. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/111"":https://sourceforge.net/p/openbabel/feature-requests/111",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1480:334,log,log,334,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1480,1,['log'],['log']
Testability,InChI code reports error:; Wrong 0D stereo descriptor(s); for molecules like; CN(C)/C=C/1\CCNC1=O BIONET_10A-007 hetatm; from the test set. Reported by: @chrismorl,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/542:130,test,test,130,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/542,1,['test'],['test']
Testability,Is BitGrid usable ? hbtypes.txt is missing for test. lshyamal AT yahoo DOT com. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/423:47,test,test,47,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/423,1,['test'],['test']
Testability,It is perfectly valid in RSMI to be missing a reactant or product (or indeed both). I've added support for these so that the following are now read without any trouble:; ```; >>N; O>>; >>; ```; These are also written out exactly as above - no changes were made to make this happen. Test cases included.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1655:282,Test,Test,282,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1655,1,['Test'],['Test']
Testability,"It turns out that the part of the InChI writer that handles the stereo assumes that AtomIds are simply AtomIdxs-1, but this is not true in general, and can lead to an incorrect stereo layer. The fix is to properly convert from AtomIds to AtomIdxs. Although this only affects 11 molecules in ChEMBL when converting straight from SMI to InChI (and so wouldn't have been noticed before), it was already causing my second RInChI test case to fail (a test case taken from the RInChI docs). My guess is that it must be copying the molecule when generating the shared pointer, thus rearranging either the Ids or Idxs. To be honest, I'm not 100% convinced that we need AtomIds - I must talk to Tim about this sometime.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1652:425,test,test,425,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1652,2,['test'],['test']
Testability,"It's impossible to access the values of data fields in; SD files using Python. The problem is that the; GetData() method should return OBPairData(), but; instead returns OBGenericData(). The latter does not; have a GetValue() method. Here is some example code:. >>>> Python; from openbabel import *. obconversion = OBConversion(); obconversion.SetInFormat(""sdf""); obmol = OBMol(). notatend = obconversion.ReadFile(obmol,""test.sdf""); assert notatend, ""No molecules in file!""; assert obmol.HasData('Molecular weight'), ""Doesn't have; a field called molecular weight!""; data = obmol.GetData('Molecular weight'); print ""The data has the following class: %s"" %; data.__class__; print ""The available methods include:""; print dir(data). >>>> Output; The data has the following class: <class; 'openbabel.OBGenericData'>; The available methods include:; ['Clone', 'GetAttribute', 'GetDataType', SetAttribute',; '__class__', '__del__', '__delattr__', '__dict__',; '__doc__', '__getattribute__', '__hash__', '__init__',; '__module__', '__new__', '__reduce__','__reduce_ex__',; '__repr__', '__setattr__', '__str__',; '__swig_destroy__', '__weakref__', 'this', 'thisown']. >>>> Notes; Please find attached test.sdf. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/532:421,test,test,421,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/532,4,"['assert', 'test']","['assert', 'test']"
Testability,"It's looking as if Open Babel is taking the second to last step from Gaussian geometry optimization output. For instance, a CCSD(T)/QZVP optimization on the Li_2^+ ion gives a final bond length of 3.133200 Å when you look at the log file, but extracting the geometry from the log file with OpenBabel 2.3.2 I get 3.13236 Å. Log file attached. Reported by: jussilehtola. Original Ticket: [openbabel/bugs/908](https://sourceforge.net/p/openbabel/bugs/908)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1288:229,log,log,229,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1288,3,"['Log', 'log']","['Log', 'log']"
Testability,"Java binding libopenbabel_java.dylib - crashes the JVM using simple test OBabel. Crashes verified for following environments:; OpenBabel Source:; 2.3.1 source; 2.3.2 source; Latest from Github (Feb 24th); Host OS: MAC OS X 10.9.5; Java: 1.7.0_40, 1.8.0_66 and 1.8.0_74. Build process with make outputs are in attachments and include CMakeCache.txt are from the Latest OpenBabel source from github and the Java 1.8.0_74 environment. (Note other build combinations had same problem but figured latest code was best bet for figuring out this issue). > cmake -DEIGEN3_INCLUDE_DIR=/Users/marko/ob/eigen3.2.8 -DRUN_SWIG=ON -DJAVA_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=/Users/marko/ob/vlatest/install ../ob-src 2>&1 | tee cmake.out; > make | tee make.out; > make install | tee make_install.out; > make test | tee make_test.out. The make activities (cmake, make, make install, make test) all run successfully. I had to convert ""#""'s to ""//"" comments in open-babel-java.i since the 3.0.8 Swig I have in my environment treats them as directives. The libopenbabel_java.jnilib is found and being loaded but crashes the JVM. The following is the JVM crash to the console:. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00000001363187a5, pid=17284, tid=6403; #; # JRE version: Java(TM) SE Runtime Environment (8.0_74-b02) (build 1.8.0_74-b02); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.74-b02 interpreted mode bsd-amd64 compressed oops); # Problematic frame:; # C [libawt_lwawt.dylib+0x447a5] JNI_OnLoad+0x91; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/marko/eclipseLuna_ws/IZIntegOpenBabel_1_8_0_74/hs_err_pid17284.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1352:68,test,test,68,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1352,3,['test'],['test']
Testability,"John has described the atom contributions in the Daylight aromaticity plus some extensions (e.g. [S+]-[O-] treated the same as [S]=[O].) https://figshare.com/articles/Daylight_Aromatic_Atoms/3370945. I have implemented these in the code. This replaces the existing code which aromatised things at least some of which shouldn't have been, at least in the context of SMILES strings. For example, rings containing radicals. This is partly because the existing code couldn't test for exact valence, as the hydrogens were floating and so a radical nitrogen looked similar to a nitrogen with a hydrogen. We may support multiple aromaticity models in future, but at least now we have a firm foundation in a documented 'spec'. I have a benchmark set of potentially aromatic rings over at https://github.com/nextmovesoftware/smilesreading and I have been comparing the before vs after picture. As far as I can tell, everything is an improvement.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1638:471,test,test,471,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1638,2,"['benchmark', 'test']","['benchmark', 'test']"
Testability,"Just an example program I used when testing Java bindings. We already have similar thing in Java so it is of limited utility. But it works and I find Scala nicer, might as well preserve for posterity.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/29:36,test,testing,36,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/29,1,['test'],['testing']
Testability,"Just upgraded to MacOSX 10.8, and am trying to recompile OpenBabel with Perl Bindings.; XCode cmdline tools, cmake, perl 5.12.4, eigen, swig, swig-perl, etc are all up to date. %svn co https://openbabel.svn.sourceforge.net/svnrootopenbabel/openbabel openbabel; %cd ../build/openbabel; %/opt/local/bin/cmake \; -DRUN_SWIG=ON \; -DPYTHON_BINDINGS=ON \; -DPERL_BINDINGS=ON \; -DPERL_LIBRARY=/System/Library/Perl/5.12/darwin-thread-multi-2level/CORE/libperl.dylib \; -DPERL_INCLUDE_PATH=/System//Library/Perl/5.12/darwin-thread-multi-2level/CORE \; -DJAVA_BINDINGS=ON \; -DEIGEN3_INCLUDE_DIR=/opt/local/include/eigen3 \; ../../src/openbabel/openbabel/trunk/; % make; % make test; % sudo make install; % setenv PERL5LIB ""/usr/local/lib:~/lib""; % perl -de 1; <1> use OpenBabel;; Can't find 'boot_Chemistry__OpenBabel' symbol in /usr/local/lib/libOpenBabel.dylib; at /usr/local/lib/OpenBabel.pm line 11; Compilation failed in require at (eval 6)[/System/Library/Perl/5.12/perl5db.pl:638] line 2.; at (eval 6)[/System/Library/Perl/5.12/perl5db.pl:638] line 2. The terminal stream from the commands is attached. cmake complained about wxWidgets (macports for this is broken, but I don't care about the GUI), conio.h and xdr.h, though the latter is present in the source tree, and SCANDIR_NEEDS_CONST test failed (not sure what that is). ; make proceeded with just warnings.; make test passed all except pybindtest_bindings and pybindtest_example, but OpenBabel.pm fails when used in perl. I don't quite understand what went wrong. Anyone else have success building on MacOSX 10.8 ? Any help greatly appreciated. Reported by: do0gie",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1202:670,test,test,670,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1202,3,['test'],['test']
Testability,"LES=""authn_core authz_core socache_shmcb unixd actions alias auth_basic authn_alias authn_anon authn_dbm authn_default authn_file authz_dbm authz_default authz_groupfile authz_host authz_owner authz_user autoindex cache cgi cgid dav dav_fs dav_lock deflate dir disk_cache env expires ext_filter file_cache filter headers include info log_config logio mem_cache mime mime_magic negotiation rewrite setenvif speling status unique_id userdir usertrack vhost_alias"" CALLIGRA_FEATURES=""kexi words flow plan sheets stage tables krita karbon braindump author"" COLLECTD_PLUGINS=""df interface irq load memory rrdtool swap syslog"" CPU_FLAGS_X86=""mmx mmxext sse sse2"" ELIBC=""glibc"" GPSD_PROTOCOLS=""ashtech aivdm earthmate evermore fv18 garmin garmintxt gpsclock isync itrax mtk3301 nmea ntrip navcom oceanserver oldstyle oncore rtcm104v2 rtcm104v3 sirf skytraq superstar2 timing tsip tripmate tnt ublox ubx"" INPUT_DEVICES=""evdev synaptics"" KERNEL=""linux"" L10N=""en en_AU en_GB en_US en-AU en-GB en-US"" LCD_DEVICES=""bayrad cfontz cfontz633 glk hd44780 lb216 lcdm001 mtxorb ncurses text"" LIBREOFFICE_EXTENSIONS=""presenter-console presenter-minimizer"" OFFICE_IMPLEMENTATION=""libreoffice"" PHP_TARGETS=""php5-6"" PYTHON_SINGLE_TARGET=""python3_4"" PYTHON_TARGETS=""python2_7 python3_4"" RUBY_TARGETS=""ruby21 ruby22"" USERLAND=""GNU"" VIDEO_CARDS=""nvidia intel"" XTABLES_ADDONS=""quota2 psd pknock lscan length2 ipv4options ipset ipp2p iface geoip fuzzy condition tee tarpit sysrq steal rawnat logmark ipmark dhcpmac delude chaos account""; Unset: CC, CPPFLAGS, CTARGET, CXX, EMERGE_DEFAULT_OPTS, INSTALL_MASK, LC_ALL, PORTAGE_BUNZIP2_COMMAND, PORTAGE_COMPRESS, PORTAGE_COMPRESS_FLAGS, PORTAGE_RSYNC_EXTRA_OPTS, USE_PYTHON; ```. ## Steps to Reproduce; On a 64-bit Gentoo Linux testing system (with `ACCEPTED_KEYWORDS=""~amd64""` in `/etc/portage/make.conf`) run:. ```bash; emerge '=sci-chemistry/openbabel-2.3.2-r1::gentoo'; ```. as root, with the options showed in the above `emerge --info` output. . Thanks for your time,; Brenton",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566:12974,test,testing,12974,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566,1,['test'],['testing']
Testability,"LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(impo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:13961,test,test,13961,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,2,['test'],"['test', 'testbindings']"
Testability,Lowercase second element letter in PDB and test,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1631:43,test,test,43,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1631,1,['test'],['test']
Testability,"MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:3831,test,test,3831,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['test'],['test']
Testability,Make unit tests from #262 actually run,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/264:10,test,tests,10,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/264,1,['test'],['tests']
Testability,"Name: Kevin Drew; Email: kdrew@nyu.edu; Version: openbabel-2.3.0; OS: Mac and Linux. I noticed a small change in torsion angle degrees when I input gzmat formatted files (internal coordinates). I only notice it with torsion angles of 0.0 (d5 and d6 in sample) and 180.0 (d9 in sample). The roundtrip conversion returns values of 0.03 (rather than 0.0) and 179.97 (rather than 180.0) respectively. ; --command--; obabel -i ""gzmat"" sample.gzmat -O output.gzmat; --command--. The problem seems to be related to the boundary conditions of an acos call in the vectorAngle function in math/vector3.cpp. I have increased the precision of boundary condition tests at lines 211 and 214 of math/vector3.cpp on my local copy and it seems to produce the desired results.; -snip-; 211 if (dp < -0.99999999999999); 212 return 180.0; 213 ; 214 if (dp > 0.99999999999999); 215 return 0.0; -snip-. I am not sure if this is the best way to fix this and I am not sure if this fixes all cases. Also, it seems like the vectorAngle function is deemed deprecated by comments in the code but is still being called by the CalcTorsionAngle function in math/vector3.cpp. . Please let me know if you need any more information. Thank you for your time,. Kevin Drew. Reported by: ksdrew",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1096:650,test,tests,650,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1096,1,['test'],['tests']
Testability,"Name: Thanh Truong; Email: Thanh.Truong@Utah.edu. OpenBabel 2.2 on Linux . The attached test.mol2 file can be used with OBoptimize without any problem. However, when we used OBrotamer with test.mol2 to generate a random conformer then OPoptimize cannot read the file generated by Obrotamer. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/802:88,test,test,88,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/802,2,['test'],['test']
Testability,Need to separate out larger test set,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2048:28,test,test,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2048,1,['test'],['test']
Testability,"Needs unit tests, but supported for MMFF94, GAFF, and Ghemical; force fields. Enables minimization and energy evaluation with; decreased electrostatic components (e.g., set epsilon to 500); or dielectric of different solvents.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2022:11,test,tests,11,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2022,1,['test'],['tests']
Testability,"Not sure if this is OpenBabel's or RDkit's fault. I was converting some molecules from mol2 to mol using OpenBabel 2.3.1, then doing some other things on them with RDkit.; But there are some molecules that RDkit won't parse after the conversion. I attach a test case, with a molecule from ZINC. If I download the SDF from ZINC, RDkit parses it happily, but if I convert from mol2 to SDF or mol, the result won't be read by RDkit. So it looks like a conversion problem (I may be wrong). Thank you,. Adrià ; <ssorgatem@gmail.com>. Reported by: ssorgatem",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1169:257,test,test,257,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1169,1,['test'],['test']
Testability,"Note: this pull request is on top of #1576, and should not be merged before that. 1. Removed calls to SetType() from the SMILES parser, as well as from OBAtom::SetIsotope; 2. Changed ParseSimple and ParseComplex to (each) use a single switch statement, rather than a test for isupper() first of all; 3. In ParseComplex, parse the isotopes more efficiently and tighten up their handling when reading/writing. The test cases I wrote flushed out a few issues which I fixed:; 1. Parse 'new' elements (based on those present in elements.txt); 2. Parse aromatic [te] and [bH]. In passing, I removed the warnings about ""Illegal aromatic element"". We handle these elements without trouble (by analogy with C, N or O), and I think they might cause a user to simply uppercase the element in the SMILES, which would not be correct.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1589:267,test,test,267,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1589,2,['test'],['test']
Testability,"Numbered R groups (e.g. R1, R2) are currently handled like other atom aliases without special handling. However, to be interpreted as true R groups they need to be stored in an M RGP section. This code allows these sections to be read and written. Note to self: I should document how to set these through the API. (I intend to write a test case or two for this code, so maybe don't merge until then unless the release is imminent)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/329:335,test,test,335,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/329,1,['test'],['test']
Testability,OB version: 2.1.1. Converting the attached SDF file to SMILES produces the following output:. $ babel -isdf DB03043.sdf -osmi. NC(Cc1c[nH]c2[se]ccc12)C(O)=O SDF file of DB03043; 1 molecule converted; 13 audit log messages. Which in a strict sense is wrong according to the openSMILES specification as non-aromatic atoms start with uppercase characters. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/711:209,log,log,209,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/711,1,['log'],['log']
Testability,"OS: Windows 7, 64 bit, OB 2.3.1. a) Minor, and affect the help file and the extraction of first file. The ChEMBLdb current version (11) is > 2 GB, and the extraction method for Windows in not working anymore (a shortcut might be using the type command, output to file and break immediately, then the output file can be opened by even notepad). b) Major, affect the usage. ; Testing the similarity search, and followed the suggested way in help, I have encountered the following problems:. b.1.) using command babel:. L:\pgm\openbabel>babel chembl_11.sdf mostsim.sdf -s firstmol.sdf -at5; ==============================; *** Open Babel Error in OpenBabel::VF2Mapper::MapGeneric; time limit exceeded... output file length=0, and babel seems to hang up working, prompt has not been back. b.2) It is recommended to use obabel instead of babel.; typing obabel (recommended) instead of babel I got the following message . L:\pgm\openbabel>obabel chembl_11.sdf mostsim.sdf -s firstmol.sdf -at5; Missing or unknown output file or format spec or possibly a misplaced option.; Options, other than -i -o -O -m, must come after the input files. Open Babel 2.3.1 -- Oct 9 2011 -- 17:57:01; Usage:; obabel [-i<input-type>] <infilename> [-o<output-type>] -O<outfilename> [Options]. Try -H option for more information. Reported by: jlaszlo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1148:374,Test,Testing,374,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1148,1,['Test'],['Testing']
Testability,"OTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:8155,test,test,8155,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['test'],['test']
Testability,"On Linux Cinnamon 17.3, with g++ 4.8.4, the build fails with:. ```; -- Checking available shared pointer...; -- Could NOT find Boost; CMake Error at CMakeLists.txt:346 (message):; Boost is required to compile OpenBabel with GCC 3.x. -- Configuring incomplete, errors occurred!; See also ""/home/noel/openbabel/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/noel/openbabel/build/CMakeFiles/CMakeError.log"".; noel@noel-VirtualBox ~/openbabel/build $ which g++; /usr/bin/g++; noel@noel-VirtualBox ~/openbabel/build $ g++ --version; g++ (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4; Copyright (C) 2013 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```; For the moment, I'm going to install boost, but it shouldn't be necessary, as far as I know.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1774:338,log,log,338,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1774,2,['log'],['log']
Testability,"On osx using installing with macports, I keep getting a segmentation error when trying to convert from a .gro file type to .pdb or .ml2. Here is the output from trying a conversion ; ```$ obabel test.gro -O test.pdb; Segmentation fault: 11```. When run using `gdb` I recieve the output ; ```Program received signal EXC_BAD_ACCESS, Could not access memory.; Reason: KERN_INVALID_ADDRESS at address: 0x0000000000000098; 0x00000001000cbfea in OpenBabel::OBResidue::AddAtom ()```. I'm not too familiar with C, but looking at the [code](http://fossies.org/dox/openbabel-2.3.2/groformat_8cpp_source.html) I think problem may have to do with `res` being set before it is defined. Reported by: ivirshup. Original Ticket: [openbabel/bugs/942](https://sourceforge.net/p/openbabel/bugs/942)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1322:195,test,test,195,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1322,2,['test'],['test']
Testability,"On the trunk (after I check in my latest), Perl bindings are identical to Python, and compile and install fine. However... make test gives:. PERL_DL_NONLAZY=1 /usr/bin/perl ""-MExtUtils::Command::MM"" ""-e"" ""test_harness(0,; 'blib/lib', 'blib/arch')"" t/*.t; t/atom.............ok; t/bond.............ok; t/conversion.......ok 3/9*** glibc detected *** double free or corruption (!prev; ): 0x082721c8 ***; t/conversion.......dubious; Test returned status 0 (wstat 6, 0x6); after all the subtests completed successfully; t/data.............ok; t/format...........ok 1/3*** glibc detected *** double free or corruption (!prev; ): 0x0820a048 ***; t/format...........dubious; Test returned status 0 (wstat 6, 0x6); after all the subtests completed successfully; t/internalcoord....ok; t/mol..............ok; t/residue..........ok; Failed Test Stat Wstat Total Fail Failed List of Failed; -------------------------------------------------------------------------------; t/conversion.t 0 6 9 0 0.00% ??; t/format.t 0 6 3 0 0.00% ??; Failed 2/8 test scripts, 75.00% okay. 0/35 subtests failed, 100.00% okay.; make: *** [test_dynamic] Error 255. The main error (or at least one of them) is that the following code gives an error:; ============= ; #!/usr/bin/perl. use Chemistry::OpenBabel;. my $obConversion = new Chemistry::OpenBabel::OBConversion;. Noel; ========= Error message ; *** glibc detected *** double free or corruption (!prev): 0x081cb360 ***; Aborted. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/720:128,test,test,128,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/720,5,"['Test', 'test']","['Test', 'test']"
Testability,Open Babel test crashes,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2138:11,test,test,11,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138,1,['test'],['test']
Testability,"Open Babel tool does not read name 'Si' element name from the smiles notation:; > echo ""Si"" | babel -i smi -o xyz; 0 molecules converted; 5 audit log messages . However everything works fine if 'Si' is brackteted:; >echo ""[Si]"" | babel -i smi -o xyz; 1. Si 0.00000 0.00000 0.00000; 1 molecule converted; 6 audit log messages . Seems that babel reads 'Si' name as two elements, 'S' and aromatic 'I', which is wrong. Open Babel 2.2.3 -- Feb 18 2011 -- 13:16:37; Darwin Marat-Talipovs-iMac.local 10.7.0 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386 i386 iMac11,3 Darwin. Marat Talipov,; TalipovM@gmail.com. Reported by: mirari",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1106:146,log,log,146,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1106,2,['log'],['log']
Testability,"Open Babel version = 2.2.0 on opensuse 11.0. [C@@]123[C@H](C(C=C3)(C)C)CC[C@@](C1)(CCC2)C can makes openbabel segfault:; babel -i ""smi"" 9626.smi -o ""mol"" - ; Segmentation fault. this smiles was generated from mol:; babel -i ""mol"" 9626.mol -o ""smi"" -; [C@@]123[C@H](C(C=C3)(C)C)CC[C@@](C1)(CCC2)C 10102; 1 molecule converted; 29 audit log messages. see files attached.. openbabel also segfaults when just reading it:; babel -i ""smi"" 9626.smi -o ""smi"" -; Segmentation fault. I hope this helps... Leszek . Reported by: leszekrupnicki",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/839:334,log,log,334,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/839,1,['log'],['log']
Testability,"Open Babel version: current; Operating system and version: linux or macos (tested both) . Looking at the following smiles: O1C23C4=C(C=C12)C1=COC(=C4OC3)C1. ![#1 (2)](https://github.com/openbabel/openbabel/assets/78424742/05122416-e1eb-464e-a770-81413af58e63). I would expect to see a SSSR containing 5 subcycles, which is what is seen, however the subcycles generated for each OBRing* shows some weird behaviour. . running the following code on the Mol object : . ```c; unsigned int rc = 0;; FOR_RINGS_OF_MOL(r,mol){; obring = &(*r);; fprintf(stderr,""%d [ "",rc++);; for(unsigned int i=0;i<obring->Size();i++){; ratom = mol->GetAtom(obring->_path[i]);; fprintf(stderr,""%d "",ratom->GetIdx());; }; fprintf(stderr,""]\n"");; }; ```. gives the following output: . ```; 0 [ 6 1 2 ]; 1 [ 3 4 5 6 2 ]; 2 [ 12 11 3 2 13 ]; 3 [ 7 8 9 10 14 ]; 4 [ 3 4 5 6 1 2 ]; ```. Looking at ring (3), we see atom indexes that are not shared with any other subcycle in the list? which would be impossible if the subcycles are generated as i would expect? To confirm, the method in RDKit does not show this behaviour: . ```python ; mol = rdkit.Chem.MolFromSmiles('O1C23C4=C(C=C12)C1=COC(=C4OC3)C1'); for sequence in rdmolops.GetSymmSSSR(mol):; for i in sequence:; print(f""{i} "", end=''); print(); ```; yields. ```; [ 0 1 5 ]; [ 4 3 2 1 5 ]; [ 7 6 13 9 8 ]; [ 11 10 2 1 12 ]; [ 13 6 3 2 10 9 ]; ```. Where overlap is seen for all the atoms across the ring set. . Happy to attempt a fix on this but some direction would be appreciated (if in fact this is a true bug, and not my misunderstanding). I believe its due to the 3 cycle, as for the majority of cases i see the correct overlaps.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2641:75,test,tested,75,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2641,1,['test'],['tested']
Testability,"OpenBabel is having problems when parsing SDF files from DrugBank. Steps to reproduce:. Download SDF from DrugBank:; http://www.drugbank.ca/sdf_set/nutra_drugs.sdf. Run babel or use corresponding function from the lib:; > babel -isdf nutra_drugs.sdf -opdb ethanol.pdb; 0 molecules converted; 2 audit log messages. Discovery Studio (DS) Visualizer, for instance, has no problem parsing SDF files from DrugBank. I'm hoping that someone can fix this before I did down into the source code. Reported by: sarkiss",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/760:300,log,log,300,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/760,1,['log'],['log']
Testability,"Openbabel 2.2.3 ( Aug 18 2009 -- 16:21:20) on Windows XP, GUI and command line:. Output to CML Version 1 has the following bug:. Output of coordinate value elements are in a ""floatg"" element, that does not exist in CML, it should be ""float"". Probably an error; cause by inproper string handling, the element name ""string"" just before ""float"" leaks a ""g"" ?!. Example:. <molecule xmlns=""http://www.xml-cml.org/dtd/cml_1_0_1.dtd"" id=""Oct-1-ene"">; <atomArray>; <atom id=""a1"">; <string builtin=""elementType"">C</string>; <floatg builtin=""x3"">4.206433</floatg>; ______^_______________________^____. Example input that yields this error:. >babel.exe -icml oct-1-ene.cml -ocml test.cml -x1. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/937:668,test,test,668,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/937,1,['test'],['test']
Testability,Openbabel 2.3.2 testsuite fails on AArch64 (64-bit ARM) under Fedora and Ubuntu distributions:. The following tests FAILED:; 	 10 - rotor_Test (Failed); 	 23 - inchiSteffen_PubChem.smi_Test (Timeout); 	 54 - pytest_sym (Timeout). I looked into rotor test and it looks like issue is in OBRotor::CalcTorsion method. I added bunch of std::cout calls there and compared results with x86-64:. <pre>; AArch64 x86-64. 1: 1:; 1: _torsion[0] = 6 1: _torsion[0] = 6; 1: _torsion[1] = 9 1: _torsion[1] = 9; 1: _torsion[2] = 12 1: _torsion[2] = 12; 1: _torsion[3] = 15 1: _torsion[3] = 15; 1: 1:; 1: v1x = -1.31002 1: v1x = -1.31002; 1: v1y = -0.796717 1: v1y = -0.796717; 1: v1z = -0.034437 1: v1z = -0.034437; 1: v2x = -1.21398 1: v2x = -1.21398; 1: v2y = 0.93634 1: v2y = 0.93634; 1: v2z = 0.043099 1: v2z = 0.043099; 1: v3x = 0.440074 1: v3x = 0.440074; 1: v3y = 1.46771 1: v3y = 1.46771; 1: v3z = 0.0653222 1: v3z = 0.0653222; 1: 1:; 1: c1x = -0.00209297 1: c1x = -0.00209297; 1: c2x = -0.00209297 1: c2x = -0.00209297; 1: c1y = 0.0982663 1: c1y = 0.0982663; 1: c2y = 0.0982663 1: c2y = 0.0982663; 1: c1z = -2.19382 1: c1z = -2.19382; 1: c2z = -2.19382 1: c2z = -2.19382; 1: c3x = -1.18684e-16 1: c3x = 6.66134e-16; 1: c3y = 1.0024e-16 1: c3y = -4.70977e-16; 1: c3z = 4.61789e-18 1: c3z = -2.17654e-17; 1: 1:; 1: c1mag = 4.82251 1: c1mag = 4.82251; 1: c2mag = 4.82251 1: c2mag = 4.82251; 1: costheta = 1 1: costheta = 1; 1: ang = -0.000447214 1: ang = 0.000447214; 1: 1:; 1: -0.000447214 1: 0.000447214; </pre>; Same set of tests fail on PPC64 but I did not checked is it same issue. Reported by: hrw-redhat. Original Ticket: [openbabel/bugs/927](https://sourceforge.net/p/openbabel/bugs/927),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1307:16,test,testsuite,16,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1307,4,['test'],"['test', 'tests', 'testsuite']"
Testability,Otherwise test build fails if Python interpreter is not found or is; unset.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/247:10,test,test,10,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/247,1,['test'],['test']
Testability,"Otherwise the formats won't initialize correctly. (See issue #1922). This commit includes a new test program which checks WriteString() and WriteFile() for most of the supported formats. Without this patch, several of them will fail, and saving to FPS format will segfault. I wasn't sure if it would be better to put the code into OBConversion::Write(OBBase* pOb, ostream* pos) so that if pos is not NULL, ie, when `SetOutStream(pos, false)` is called, then the index would reset. I decided against it because I didn't know if people called Write() multiple times with the same output file object, so wouldn't want a reset each time. There also seems to be a problem with pushInput()/popInput() since those only track the ostream. They should also track and restore the index, yes? That's outside the scope of this patch.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1923:96,test,test,96,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1923,1,['test'],['test']
Testability,PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMakeFiles/obabel.dir/all] Error 2; ---------------------------------------------------------------; [100%] Linking CXX executable ../bin/test_runner; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/test_runner.dir/buil,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2377:2866,test,test,2866,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377,1,['test'],['test']
Testability,"PL; Location: [edited]; Requires: ; ```. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When I compute fingerprints using ECFP4, If I compute the same fingerprint for a compound many times, the result should always be identical, and the resulting tanimoto similarity = 1 for the same structure. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; If too many fingerprints are computed, the results become arbitrary: the same smile returns many different values. ; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; 1) create the following script, which computes the fingerprint for ""CCCCCCCCCC"" 300 times:; ```python3; import openbabel as ob; from pybel import Fingerprint. fingerprinter = ob.OBFingerprint.FindFingerprint(""ECFP4""); #fingerprinter = ob.OBFingerprint.FindFingerprint(""FP4""); smiles_parser = ob.OBConversion(); smiles_parser.SetInFormat(""smi""). def fp(smiles):; """"""; compute and return the fingerprint from a SMILES; """"""; mol = ob.OBMol(); smiles_parser.ReadString(mol, smiles); fp = ob.vectorUnsignedInt(); fingerprinter.GetFingerprint(mol, fp); return fp. for entry in [""C""*10] *300:; print(Fingerprint(fp(entry)).bits); ```; 2) run it to count the number of different results:; ```shell; python test_ob_ecfp4.py | sort | uniq | wc -l; # result for me is 18; ```. Please note that:; - if we use e.g. FP4 (or others) the results are always reliable; - if the list is small enough (more or less between 5 and 10?) the result is always the same and becomes reliable somehow. Please let me know if you need additional details. I can contribute a python test if needed.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1886:3091,test,test,3091,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1886,1,['test'],['test']
Testability,"Parsing molden files on Linux seems to fail: benzonitrile on Debian Wheezy (using openbabel 2.3.1+dfsg-4, but Ubuntu has the same package). % obabel -imolden benzonitrile.molf -osmi; C.C.C.C.[H].[H]	. I get the same result on Windows XP if I use the GUI (v2.3.1 or v2.3.2) but using openbabel from python (still on WinXP, same computer, same openbabel install and an up-to-date pythonxy distro), the files are parsed correctly (bindings v1.7/GUI v2.3.1). On OS X, with openbabel v2.3.0 I obtain the correct result:. % obabel benzonitrile.molf -osmi; c1(ccccc1)C#N. I attach the benzonitrile file I have used for testing but can assure you that I tested other files: always OK on OS X or from python on windows; always wrong with obabel GUI on windows and under linux. Reported by: mathias_laurin. Original Ticket: [openbabel/bugs/860](https://sourceforge.net/p/openbabel/bugs/860)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1240:612,test,testing,612,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1240,2,['test'],"['tested', 'testing']"
Testability,"Periodically we run into the problem where openbabel can't find the plugin directory. Instead of generating a useful error message, you usually get something like ""cannot open file"" and you spend a certain amount of time trying to figure out what is wrong with the file. Once you realize the problem, you spend a certain amount of time figuring out what the necessary environment variable (BABEL_LIBDIR) is. . This pull request will output a useful error message describing the problem and the fix when plugins can't be found. I've also included a test script, but am hoping someone else can figure out how to hook it into cmake (and possibly document the process).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1826:548,test,test,548,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1826,1,['test'],['test']
Testability,"Perl ""make test"" fails",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/677:11,test,test,11,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/677,1,['test'],['test']
Testability,"Platform:; openbabel-1.100.2; Linux darwin 2.6.10-1.9_FC2 #1 Thu Jan 13 17:54:57 EST; 2005 i686 i686 i386 GNU/Linux. [philip@darwin]$ /usr/local/bin/obgrep; '([#6]).([O&X1&-][O&X2])' test.smi; 0 40; Assert at File mol.cpp Line 689; Segmentation fault. If the input is invalid I would expect to see; ""Requested Atom Out of Range"" . Any suggestions?. Philip. Reported by: pgr94",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/443:183,test,test,183,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443,2,"['Assert', 'test']","['Assert', 'test']"
Testability,Please close: #259 . Added tests. It seems it works now correctly.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/265:27,test,tests,27,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/265,1,['test'],['tests']
Testability,Please consider adding a testsuite for python bindings,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2549:25,test,testsuite,25,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2549,1,['test'],['testsuite']
Testability,"Previously the following were parsed (copied and pasted from the tests) - now they are rejected as invalid:; ```; ""[CH2++2]"",; ""[C+-+-]"",; ""[C+2+]""; ""[CH2--2]"",; ""[C-+-+]"",; ""[C-2-]""; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2132:65,test,tests,65,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2132,1,['test'],['tests']
Testability,"Previously, the code that identified ring atoms and bonds did not (un)set the flags of non-ring atoms. This meant that no matter the value of the molecule's ring perception flag, once a ring atom, always a ring atom. The included test case used to fail - it shows that even after deleting an atom from benzene, every atom thinks it's still in a ring. Part of the problem may have been that there was no way through the public API to reset ring information, so I've had to add the relevant function to OBAtom/OBBond.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1856:230,test,test,230,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1856,1,['test'],['test']
Testability,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1334:481,test,tested,481,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334,8,"['Log', 'log', 'test']","['Log', 'log', 'test', 'tested']"
Testability,Procedure for adding regression tests,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/165:32,test,tests,32,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/165,1,['test'],['tests']
Testability,Reading Exact Polairzability from Gaussian log file,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1751:43,log,log,43,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1751,1,['log'],['log']
Testability,Reading MDL mol files via STDIN fails if the molecule has no title. This fails to create a molecule in the second step:. > echo CCC | babel -ismi -omol | babel -imol -osmi; 1 molecule converted; 19 audit log messages; 0 molecules converted. While this works fine:. > echo CCC foo | babel -ismi -omol | babel -imol -osmi; 1 molecule converted; 19 audit log messages; CCC foo; 1 molecule converted; 13 audit log messages. As does this:. > echo CCC | babel -ismi -ocml | babel -icml -osmi; 1 molecule converted; 19 audit log messages; CCC; 1 molecule converted; 13 audit log messages. Reported by: sea36,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/765:204,log,log,204,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/765,5,['log'],['log']
Testability,Reading different types of atomic partial charges from Gaussian log file,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1742:64,log,log,64,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1742,1,['log'],['log']
Testability,Reading g03 log files misses spin multiplicity,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/747:12,log,log,12,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/747,1,['log'],['log']
Testability,"Reading in avogadro/testfiles/methane.nwo with revision 3047 of the openbabel-2-2-x branch results in every vibration being doubled, there are 18 frequencies instead of 9. Reported by: @mbanck",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/899:20,test,testfiles,20,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/899,1,['test'],['testfiles']
Testability,"Reapplying #1952, which I subsequently reverted in #1960 as there was a test failure on master which I think is now fixed (#1966).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1967:72,test,test,72,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1967,1,['test'],['test']
Testability,"Remove some audit messages that copy the entire format description and then substring it. For smi->smi conversion, 1.6% of the total conversion time was spent on one of these audit message blocks, the majority of which on the string copy of the format description (which is not small for SMILES). Since the other ones are similar, why not remove all three? Actually, I would remove all audit and debug level logging statements throughout the library (I have never used them for debugging), so I have no qualms about removing these three. They could be rewritten to avoid the string copy, but... What do they think?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1707:408,log,logging,408,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1707,1,['log'],['logging']
Testability,"Replaced convoluted logic with a simple flag check. Builds and runs on my computer, and should fix #173.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/185:20,log,logic,20,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/185,1,['log'],['logic']
Testability,"Replaced:. ```; atom->SetVector(atom->GetX() * cell_a, atom->GetY() * cell_b, atom->GetZ() * cell_c);; ```. with:. ```; atom->SetVector(pCell->FractionalToCartesian(atom->GetVector()));; ```. The old logic fails on non-cubic unit cells. Before on left, after on right. ![output](https://cloud.githubusercontent.com/assets/1449833/3989685/fd6c2f54-28bd-11e4-8755-15c5e208b800.png). The other edits are whitespace - just my vim autoremoving tabs.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/88:200,log,logic,200,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/88,1,['log'],['logic']
Testability,"Replaces #80. Decided on a new pull request to clean up the commit history. Changes:; - `imolecule.min.js` uses version in openbabel/contributed - no build changes to openbabel.; - On first run, attempts to grab `imolecule.min.js` from internet and install in `~/.ipython/nbextensions`. Enables subsequent local usage if successful, falls back to remote library otherwise.; - Notebooks now statically render in e.g. nbviewer ([example](http://nbviewer.ipython.org/github/patrickfuller/nbviewer-test/blob/master/openbabel_test.ipynb)).; - Uses IPython's require.js to significantly lower memory usage for multiple molecules in one notebook.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/90:494,test,test,494,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/90,1,['test'],['test']
Testability,"Reported by: W. D. Ihlenfeldt; Xemistry GmbH; wdi@xemistry.com; ; Take the following completely legal SD file record:; ; ----. -ISIS- 03190722292D; $$$$; 1 0 0 0 0 0 0 0 0 0999 V2000; -2.3167 -0.2167 0.0000 Au 0 0 0 1 0 0 1 0 0 0 0 0; M END; > <PRICE>; $$$$; ; $$$$; ------; ; This is a single record, with multiple ""$$$$"" in places where they are *not* record terminators. All simple string search methods with awk or similar tools which simply look for the $$$$ line will fail on this. Never assume that such records do not exist. I *have* seen $$$$ in SD data lines before. While Babel is smart enough to read and output the first records from an SD input file with repeated records as above (almost) correctly, its skip function seems to have less brainpower and gets confused. It simply silently quits without any message. It is not possible to output records starting after first record from above repeated multi-record test file or after encountering such as record anywhere in the skipped part. A bad thing if something like this happens in the middle of your 500Mb file where you cannot edit. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/627:926,test,test,926,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/627,1,['test'],['test']
Testability,Resolve ImportError with make test,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2378:30,test,test,30,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2378,1,['test'],['test']
Testability,"Results: https://github.com/cclauss/openbabel/actions. https://flake8.pycqa.org/en/latest/user/error-codes.html. On the flake8 test selection, this PR does _not_ focus on ""_style violations_"" (the majority of flake8 error codes that [__psf/black__](https://github.com/psf/black) can autocorrect). Instead, these tests focus on runtime safety and correctness:; * __E9__ tests are about Python syntax errors usually raised because flake8 can not build an Abstract Syntax Tree (AST). Often these issues are a sign of unused code or code that has not been ported to Python 3. These would be compile-time errors in a compiled language but in a dynamic language like Python, they result in the script halting/crashing on the user.; * __F63__ tests are usually about the confusion between identity and equality in Python. Use ==/!= to compare str, bytes, and int literals is the classic case. These are areas where __a == b__ is True but __a is b__ is False (or vice versa). Python >= 3.8 will raise SyntaxWarnings on these instances.; * __F7__ tests logic errors and syntax errors in type hints; * __F82__ tests are almost always _undefined names_ which are usually a sign of a typo, missing imports, or code that has not been ported to Python 3. These also would be compile-time errors in a compiled language but in Python, a __NameError__ is raised which will halt/crash the script on the user.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2405:127,test,test,127,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2405,7,"['log', 'test']","['logic', 'test', 'tests']"
Testability,Reverts openbabel/openbabel#1870 as it appears to cause a test failure with clang,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1880:58,test,test,58,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1880,1,['test'],['test']
Testability,"Right now, floating point matrix code is handled by internal code and code ported from Eigen. When libblas and ATLAS are detected, the code should use this instead. This offers two advantages:; * BLAS and ATLAS are thoroughly tested and debugged.; * BLAS and ATLAS are highly tuned, vectorized, and multithreaded on many platforms, improving performance. Granted, performance is only a small component of Open Babel, but this wouldn't hurt. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/116"":https://sourceforge.net/p/openbabel/feature-requests/116",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1485:226,test,tested,226,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485,1,['test'],['tested']
Testability,Rotor tests fail,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1325:6,test,tests,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1325,1,['test'],['tests']
Testability,"Rotor tests fail on ppc architecture, because the checks for the expected value don't take into account the modulus. The attached patch should fix the issue. Reported by: jussilehtola. Original Ticket: [openbabel/bugs/945](https://sourceforge.net/p/openbabel/bugs/945)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1325:6,test,tests,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1325,1,['test'],['tests']
Testability,"Ruby Makefile doesn't generate properly:; The ""-flat_namespace"" is added even on non-darwin platform and causes the build to fail. See [1] for the build output and search for ""flat_namespace"" (tested on Fedora 17 and Rawhide). Openbabel version: 2.3.1; Ruby version: 1.9.3.p0; Fedora 17/Rawhide, both x86_64 and i386; GCC 4.7.0. Regards and thanks for your help!; Bohuslav ""Slavek"" Kabrda. [1] http://koji.fedoraproject.org/koji/getfile?taskID=3837717&name=build.log. Reported by: bkabrda",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1158:193,test,tested,193,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1158,2,"['log', 'test']","['log', 'tested']"
Testability,"Running the test invalidsmiles causes a double call to free (i.e., attempting to free already free'd memory). This may be due to closing an already closed stream (e.g., in obconversion.cpp). Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/624:12,test,test,12,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/624,1,['test'],['test']
Testability,"SSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:14772,test,test,14772,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,2,['test'],"['test', 'testbindings']"
Testability,"SSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pyb",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:12477,test,test,12477,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['test'],['test']
Testability,"SSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:10316,test,test,10316,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['test'],['test']
Testability,"See below (Bash shell). The output, cmake.log is attached. tar -xf openbabel-2.3.0.tar.gz --gunzip; cd openbabel-2.3.0/src; cmake -DCMAKE_INSTALL_PREFIX=../openbabel >cmake.log 2>&1. Operating system: CentOS 5.4; Open babel version: 2.3.0 official stable release; cmake version: 2.8.3 (Identical results obtained with cmake version 2.6.4 as well.). Joel Dockray; bsjpd@leeds.ac.uk. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1072:42,log,log,42,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1072,2,['log'],['log']
Testability,"See discussion over at #1923. This is a merge of work by @adalke. I needed to rebase, hence the separate PR. I also needed to update some of the tests for changes in the interim. I've made an attempt to get the tests working on Windows (e.g. normalizing line endings), but I think that some of the tests genuinely fail on that platform, e.g. the binary file handling, but presumably these never worked in the first place. I haven't made the change described by @fredrikw over at #1923. That test passes for me, so I've avoided making the change - I'm not sure why it's passing now.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2176:145,test,tests,145,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2176,4,['test'],"['test', 'tests']"
Testability,Should fix #1900 while keeping #1851 running.; A bit hacky though since the mcdlutil routines are hard to penetrate... If the original contributors have a better solution I'm all ears!; I also added tests for both #1851 and #1900,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1902:199,test,tests,199,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1902,1,['test'],['tests']
Testability,Small addition to pybel and testing of the new gitted openbabel!,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2:28,test,testing,28,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2,1,['test'],['testing']
Testability,So many errors on make test in openbabel 3.1.1,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2593:23,test,test,23,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2593,1,['test'],['test']
Testability,"Some OBChemTsfm transformations, especially on radicals, can result in unexpected implicit hydrogen counts since PR#1576. I wrote up an example failure in the first commit of this PR, where assigning a charge of -1 to an atom can give it 255 implicit hydrogens under certain conditions. I suspect the underlying cause is unsigned integer arithmetic in phmodel.cpp:321 (possibly also 343). Subtraction of two unsigned ints gives an unsigned int--if the difference would be negative, then the result is wrapped back to `UINT_MAX`, e.g. printing `(j->second - old_bond_order)` gives 4294967295 instead of -1. Then there's some truncation to fit in the unsigned char. But even if the overall expression gives the right answer most of the time, I think it would be clearer to be more explicit about the math, which would fix special cases like this bug. How should we adjust the line(s) of code in phmodel.cpp? We could explicitly typecast everything to a signed int then ensure that there are at least zero implicit hydrogens, but that seems verbose. @baoilleach Please feel free to directly commit on my PR if you have any ideas. Of course we'll need to update the test case with the correct answer as well (not H255).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1895:1162,test,test,1162,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1895,1,['test'],['test']
Testability,Some properties (e.g. implicitvalence) are no longer available.; Also added index as a property and a test.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2293:102,test,test,102,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2293,1,['test'],['test']
Testability,Some tests,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008:5,test,tests,5,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008,1,['test'],['tests']
Testability,"Starting with issues with the eqeq charge equilibration implementation [1], I looked for reports on test coverage for openbabel and wasn't able to find any. Would such reports be a welcome addition to the CI setup?. ![image](https://user-images.githubusercontent.com/1053245/102149305-682c7200-3e6e-11eb-9010-6b1eb109ab93.png). I started looking into adding this via CI [here](https://github.com/ltalirz/openbabel/tree/add-coverage) but it turns out that when compiling with `-DCMAKE_BUILD_TYPE=Debug` (which I believe is required for accurate coverage results - didn't check, though), the tests take a very long time ([gh actions log](https://github.com/ltalirz/openbabel/runs/1554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: py",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2312:100,test,test,100,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312,6,"['Test', 'log', 'test']","['Test', 'log', 'test', 'tests']"
Testability,"Support compiling only bindings against system libopenbabel. So far I have implemented it for Python, Perl and Ruby bindings. The rest of them can receive analogous treatment, but I will need someone to test them.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/28:203,test,test,203,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/28,1,['test'],['test']
Testability,"Sybyl mol2 files with incorrect cases in atom types cause problems. For example: S.O2 vs. S.o2, or Cl vs. CL. The latter (CL and BR) are in the MMFF94 test set at http://www.ccl.net/cca/data/MMFF94/. The import code needs to be modified to correct for case problems. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/611:151,test,test,151,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/611,1,['test'],['test']
Testability,SyntaxError: (unicode error) 'unicodeescape' in test/testdistgeom.py,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2406:48,test,test,48,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406,2,['test'],"['test', 'testdistgeom']"
Testability,"Take two, incl. fix for failing regression tests.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/168:43,test,tests,43,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/168,1,['test'],['tests']
Testability,Test 1 unittest not run,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161,1,['Test'],['Test']
Testability,Test case fail because of syntax error in testdistgeom.py,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2578:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2578,2,"['Test', 'test']","['Test', 'testdistgeom']"
Testability,Test case:; obabel -:CS(=O)(=O)C -opdb; Before:; CONECT 1 2; CONECT 2 1 3 4 5; CONECT 2 ***_Bug or almost bug**_*; CONECT 3 2; CONECT 4 2; CONECT 5 2; After:; CONECT 1 2; CONECT 2 1 3 4 5; CONECT 3 2; CONECT 4 2; CONECT 5 2. Note to self: Where is that patch (from Astex) for multiple bonds in CONECT records that I applied years ago? Something's up.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/56:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/56,1,['Test'],['Test']
Testability,"Test case; >obabel -:""CCCC(=O)(O)"" -omol2 | obabel -imol2 -osmi; CCCC(O)O *****. The problem is that the two 'aromatic' bonds to the oxygens are not interpreted correctly on reading. Given that CCCC(=O)[O-] gives exactly the same MOL2 file (according to Open Babel), it may be incorrect to have the bonds 'ar' in the first place for the COOH case. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1040:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1040,1,['Test'],['Test']
Testability,Test fail during build of OpenBabel 2.4.1,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2250:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250,1,['Test'],['Test']
Testability,"Test file: all-sdf.sdf available from http://ligand-expo.rcsb.org/dictionaries/all-sdf.sdf.gz. The SDF entry with name starting 2c2t_39B comes from the PDB Ligand Expo and represents disorder in the structue using B atoms. This structure appears to be read correctly by OpenBabel (and Avogadro), but when writing to an SDF, OpenBabel segfaults. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/989:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/989,1,['Test'],['Test']
Testability,"Test file: all-sdf.sdf available from http://ligand-expo.rcsb.org/dictionaries/all-sdf.sdf.gz. Using latest SVN, I have a segfault with:; babel all-sdf.sdf --filter ""title=1str*"" tmp.sdf. No segfault with:; babel all-sdf.sdf --filter ""title='1str*'"" tmp.sdf. Separate issue: the first command seems to match all ligands, rather than just those starting with 1str. Either the docs or the code is wrong. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/987:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/987,1,['Test'],['Test']
Testability,"Test file:; obabel -:CC -osdf --property key value --gen3d -O bug.sdf. obabel bug.sdf --append key -otxt; gives the correct answer:; value. obabel bug.sdf -aP --append key -otxt; just gives a blank with ""0 molecules converted"". If the molecule has a title, then it works. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1120:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1120,1,['Test'],['Test']
Testability,Test for decaying to P1 (pull request #261),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/267:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/267,1,['Test'],['Test']
Testability,Test if an atom has been retrieved before calling SetPartialCharge; + test if the number of atoms expected by Mulliken paragraph corresponds; to the number of atoms retrieved in the previous Standard Nuclear Orientation paragraph,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1820:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1820,2,"['Test', 'test']","['Test', 'test']"
Testability,Test stuck at test_automorphism_10,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2557:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2557,1,['Test'],['Test']
Testability,"Tested with valgrind, see https://github.com/openbabel/openbabel/pull/2220.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2225:0,Test,Tested,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2225,1,['Test'],['Tested']
Testability,Testfile: http://pyrx.scripps.edu/SI/2010/2GDZ.pdb. obabel 2GDZ.pdb -o tmp.pdb # takes 1 second; obabel 2GDZ.pdb -o tmp.pdbqt # takes forever (I killed it after a few minutes). ?. Reported by: @baoilleach,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1083:0,Test,Testfile,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1083,1,['Test'],['Testfile']
Testability,"That commit introduce working bindings to PHP. Finally it can be compiled with cmake, and ""-DPHP_BINDINGS=ON"" option is available. As with other bindings, PHP needs ""-DRUN_SWIG=ON"" flag to generate .php and other files by SWIG. PHP binding needs following packages: php, php-devel, or php-dev or whatever the distro naming is, it should contain php-config binary. Since there is no current FindPhp library in cmake, only mentioned php-config is checked. Finally, i've done some testing on CentOS/SL 6.4 and everything compiles, installs, and works fine, although further testing is needed on other distros. Comments are welcome.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/7:478,test,testing,478,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/7,2,['test'],['testing']
Testability,"The % notation only supports up to 99 ring closures. I have an example of a SMILES string from RDKit that goes beyond this (included in the tests). An extension to this is the %(...) notation which could in theory support any arbitrary number. I've implemented this with support for up to 5 digits. I'm also in the process of proposing this change to RDKit. I can't see any downside to supporting this notation on reading. On writing, the only alternative is to refuse to write the SMILES. I've also tightened up the parsing of the normal % notation. The existing code accepted non-digits. (Apologies for the small number of unrelated white-space changes - my editor seems to be doing this without asking.)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1677:140,test,tests,140,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1677,1,['test'],['tests']
Testability,"The InChI code (in src/formats/inchi) should really be spun out into a ; separate library to facilitate packaging (e.g., Debian, Fedora Core...). Right now, the code is compiled every time, even if it's already installed ; on your system. This is slow for users (e.g., upgrading from 2.0.0 to ; 2.0.1) and developers. A useful fix would be:; * Check if libinchi is installed (e.g., with pkg-config and configure tests ; for libinchi).; If installed, don't bother re-compiling; * If not installed, compile src/formats/inchi and install for users. Right now, I don't think the library is widely-deployed, so Open Babel ; should still include a copy of the sources. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/524:412,test,tests,412,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/524,1,['test'],['tests']
Testability,"The Open Babel code needs thorough testing. To begin; with, the following tests are absolutely needed:. * file translation (Peter's roundtrip scripts need to; be ported to UNIX shell script or Perl to allow testing; on more platforms); * hydrogen addition (e.g. SMILES strings before and; after addition); * SMARTS testing (already exists); * ring perception testing (already exists); * atom typing tests (i.e. from Ghemical or other format; with typed-bonds, but no atom types); * bond typing tests (i.e. from XYZ or other format). Other tests are needed, but these would be a beginning; on formal testing procedures. -Geoff. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/19"":https://sourceforge.net/p/openbabel/feature-requests/19",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1388:35,test,testing,35,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1388,9,['test'],"['testing', 'tests']"
Testability,"The Open Babel command-line executable does not ; generate error messages or generates messages like ; ""Assert at File <directory>/src/mol.cpp Line nnn"" when ; I feed it with invalid input files and then it ; generates an empty output file. This behaviour is ; trouble-prone speciallyl when open babel is used by ; other software. Reported by: thiagohp. Original Ticket: ""openbabel/feature-requests/63"":https://sourceforge.net/p/openbabel/feature-requests/63",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1432:104,Assert,Assert,104,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1432,1,['Assert'],['Assert']
Testability,"The PDB format is described at:; http://www.wwpdb.org/documentation/format23/sect10.html. If one atom forms more than 4 bonds, a second CONECT record should be used:; """"""; # If more than four fields are required for non-hydrogen and nonsalt-bridge bonds, a second CONECT record with the same atom serial number in columns 7 - 11 will be used. ; """""". Currently OB leaves out the CONECT record for any atom with more than 4 bonds. Test case:; import openbabel, pybel. mol = openbabel.OBMol(); for i in range(6):; atom = mol.NewAtom(); atom.SetAtomicNum(6). mol.AddBond(1,2,1); mol.AddBond(1,3,1); mol.AddBond(1,4,1); mol.AddBond(1,5,1). print ""...with four bonds""; print ""\n"".join([x for x in pybel.Molecule(mol).write(""pdb"").split(""\n"") if x.find(""CONECT"")>=0]). mol.AddBond(1,6,1). print ""...with five bonds""; print ""\n"".join([x for x in pybel.Molecule(mol).write(""pdb"").split(""\n"") if x.find(""CONECT"")>=0]). Output:; ...with four bonds; CONECT 1 2 3 4 5; CONECT 2 1; CONECT 3 1; CONECT 4 1; CONECT 5 1; CONECT 6; ...with five bonds; CONECT 2 1; CONECT 3 1; CONECT 4 1; CONECT 5 1; CONECT 6 1. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/640:429,Test,Test,429,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/640,1,['Test'],['Test']
Testability,The Python tests are failing under Python 3,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1910:11,test,tests,11,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1910,1,['test'],['tests']
Testability,"The Ruby extensions for Open Babel fail to compile under Mac OS X 10.5.1 Leopard. The system is a Core2Duo MacBook Pro (2.2 GHz Santa Rosa chipset). Steps to reproduce:. Source for OpenBabel-2.1.1 was downloaded from the SourceForge site. OpenBabel was compiled with:; > ./configure; > make; > sudo make install. SWIG files were generated from scratch (using the openbabel-ruby.i definitions) and the Ruby extconf.rb script was run as follows (from the scripts/ruby directiory):. > swig -ruby -autorename -c++ -I../../include -o openbabel_ruby.cpp ../openbabel-ruby.i; > ARCHFLAGS=""-arch i386"" ruby extconf.rb; > make. Results:. See attached log files. SWIG throws a number of warnings, but generates openbabel.cpp regardless. Ruby's mkmf doesn't complain, however the bundle creation step during compilation appears to not recognize any OpenBabel library symbols. Reported by: jballanc",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/704:642,log,log,642,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/704,1,['log'],['log']
Testability,"The `__enter__` and `__exit__` methods were added to the `pybel.Outputfile` class, making it compatible with python's `with` statement. The testing script was also modified. Example:; ```python; with self.toolkit.Outputfile(""sdf"", ""testoutput.txt"") as outputfile:; for mol in self.head:; outputfile.write(mol); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1971:140,test,testing,140,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1971,2,['test'],"['testing', 'testoutput']"
Testability,"The assertion at line 295 of cifspacegrouptest.cpp fails. It has:; ```; OB_ASSERT(pdb.find(""HETATM 17 O UNL 8 1.954 8.956 3.035 1.00"") != string::npos);; ```; I can reproduce the failure with:; ```; >obabel test\files\test08.cif -opdb -xo > tmp.pdb; ```; which gives a PDB file with the line:; ```; HETATM 17 O UNL 13 1.954 8.956 3.035 1.00 0.00 O ; ```; The problem is that the residue number is different (13 versus 8) - everything else is the same. I note that the ""-xo"" has no affect on this failure. There must be something funny about how residue numbers are being assigned...",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2041:4,assert,assertion,4,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2041,2,"['assert', 'test']","['assertion', 'test']"
Testability,"The attached PDB test file (generated by OB-2.0, no less) generates Xx ; unknown dummy atoms in translation. The same thing happens with a selection of PDB files, e.g.; 1MBN; 2DHB; 3CYT; 6ADH; 7HVP. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/570:17,test,test,17,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/570,1,['test'],['test']
Testability,"The attached file (from the PDB ligand download) has some missing bonds and so is interpreted by OB as containing multiple radicals. When written out and read back in again, an error occurs as the M RAD line is too long. Tested with 2.2.3 (I know that Craig has made some changes since). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/934:221,Test,Tested,221,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/934,1,['Test'],['Tested']
Testability,"The biomolecule chain/residue perception functions fail frequently. In the ; process of building up unit tests (i.e., SMARTS and XYZ coordinates => ; PDB), the following tests fail:. * All single residue (amino acids or nucleic); * All dipeptides attempted; * PDB entries (selections from the molecule of the month archive); 1ACC; 1HNY; 1MBN; 1UBQ; 2DHB; 3CLN; 3CYT; 3KIN; 4INS; 6ADH; 7HVP. In fact, chain perception was not observed to work correctly in any test. ; The attached test program illustrates this. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/571:105,test,tests,105,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/571,4,['test'],"['test', 'tests']"
Testability,"The build directory is hard-coded into the library. WHY?!?; I tried -DLIB_INSTALL_DIR=lib64 and it set the rpath to; /home/building/science/openbable-2.4.1/.....; I tried -DLIB_INSTALL_DIR=/usr/lib64 and it set the rpath to /usr/usr/lib64; (yes, two usr's).; PLUS, the path to the modules is hard-coded into the library and therefore; it can never find the modules. obabel -i mol test.mol -o inchi -Otest.out; obabel: cannot read input format!; Open Babel 2.4.1 -- Feb 17 2018 -- 03:41:23; Usage:; obabel [-i<input-type>] <infilename> [-o<output-type>] -O<outfilename> [Options]; Try -H option for more information. This build system is crap. Why don't you provide a gnu autoconf build system?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1781:380,test,test,380,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1781,1,['test'],['test']
Testability,The code (and test) is heavily inspired by the corresponding code for cdx format.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2421:14,test,test,14,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2421,1,['test'],['test']
Testability,"The constructor was not initializing _ptr to null, and this is what was; used to test the validity of the iterator. This caused iteration over a; ringless molecule (e.g. empty) to sometimes fail (segfault or infinite; loop). But not always.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2295:81,test,test,81,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2295,1,['test'],['test']
Testability,"The current SVN trunk fails ""make check"" on Cygwin for; some but not all tests:. src/babel -H; ... many formats. make check results: ; [Sorry, can't copy/paste to this window]; aromatic.... ok; ... [everything ok]; smarts .... dubious; Test returned status 0 (wstat 134, 0x86); unitcell .... dubious; Test returned status 0 (wstat 134, 0x86); after all the subtests completed successfully; cml ... skipped - CML format not loaded; test-set ... skipped - roundtrip test set not found. Checking both smarts and unitcell, these dump core. I'm; now recompiling with CXXFLAGS=""-g"" to see if I can get; a backtrace. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/544:73,test,tests,73,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/544,5,"['Test', 'test']","['Test', 'test', 'test-set', 'tests']"
Testability,"The current SVN trunk for logp_psa fails ""make check"" including the following:. # Unit tests for OBLogP and OBPSA ; 1..7; ok 1; ok 2 # 1.4008; not ok 3 # 20.23; ok 4 # 2.5815; ok 5 # 0; ok 6 # 2.0264; not ok 7 # 12.03. Note that 3 and 7 are considerably off from their expected values (29.46, 29.1). Perhaps the PSA code has some issue or missing group contribution?. I'd be glad to automate this test over a wider range of molecules, if desired. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/623:87,test,tests,87,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/623,2,['test'],"['test', 'tests']"
Testability,"The current Subversion trunk crashes on the attached PubChem .xml file ; (but works fine when told what it is using -ipc or renaming to .pc). Crash log:; 52 if(pConv->GetOutFormat()->GetType() == pDefault-; >GetType()). pDefault is NULL. Backtrace:; #0 0x0673e1c0 in OpenBabel::XMLFormat::ReadChemObject ; (this=0x674957c, pConv=0xbfffebdc) at xmlformat.cpp:52; #1 0x010559ec in OpenBabel::OBConversion::Convert (this=0xbfffebdc) ; at obconversion.cpp:499; #2 0x01057a1c in OpenBabel::OBConversion::Convert (this=0xbfffebdc, ; is=0xbfffe550, os=0xbfffe000) at obconversion.cpp:443; #3 0x010599d0 in OpenBabel::OBConversion::FullConvert ; (this=0xbfffebdc, FileList=@0xbfffeba0, OutputFileName=@0xbfffebb8, ; OutputFileList=@0xbfffebac) at obconversion.cpp:1167; #4 0x00004e34 in main (argc=3, argv=0xbffff07c) at main.cpp:326. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/575:148,log,log,148,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/575,1,['log'],['log']
Testability,"The data files used computing logP and MR (data/logp.txt, data/mr.txt) have errors in them (some appear to be misinterpretations of the original source paper, but some are just plain errors). Some of the errors include (these are from logp.txt; mr.txt has similar errors):; [OX1-*][#15;#33;#43;#53]	-1.189; (it's rather hard for an atom to simultaneously be phosphorus, arsenic, technetium, and iodine; those semicolons should be commas); [B,Si,Ga,Ge,As,Se,Sn,Te,Pb,Nc,Nr,Kr,Xe,Rn]	-0.3808; (Nc and Nr should be Ne and Ar, respectively); [N+0](A)(A)A	-0.3187; (this appears to be a misinterpretation of the source paper; while the SMARTS expression is copied verbatim from the paper, there is a subtle [but important] difference between what the paper means by 'A' and what 'A' means w.r.t. [Daylight] SMARTS: for the paper, 'A' represents a *non-hydrogen* aliphatic element; with SMARTS, A represents *any* aliphatic element; for an example of the problem this creates, the nitrogen in 'N' gets matched (improperly) to this entry when computing logP); [CX4][!#6;!#7;!#8;!#9;!#15;!#16;!#17;!#35;!#53;!#1] 0.2148; (unfortunately, this does not achieve what it is meant to; it should be something to the effect of ""[CX4;!$(*[#6,#7,#8,#9,#15,#16,#17,#35,#53])][!#1]""). I've been working on fixing up logp.txt and have attached a (mostly) fixed version. Technical details:; I'm using Open Babel 2.3.0 (from source) on Mac OS X, compiled with GCC 4.5.1 (self-compiled). Reported by: bentsm",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1115:30,log,logP,30,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1115,5,['log'],"['logP', 'logp']"
Testability,"The example ; ""Conversion from a SMI file in STDIN to a Mol2 file written to STDOUT:""; in [https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#examples](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#examples); is not working in the version 2.4.1. Also other conversions to STDOUT are not working; For example:; `obabel water.xyz -osmi `; should print out:; ```; O water.xyz; 1 molecule converted; ```. Where `water.xyz` file is:; ```; 3. O 1.05178 -0.02305 -0.06389; H 2.01967 0.01563 -0.08957; H 0.77293 0.75008 -0.57719; ```. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1604:1206,test,test,1206,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1604,1,['test'],['test']
Testability,"The ffmmff94 test has always failed on MSVC. It also fails on the Kitware buildbot (not sure if always). Both at the same point, the energy value for bucky ball, test 17. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1013:13,test,test,13,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1013,2,['test'],['test']
Testability,"The following MOL2. @<TRIPOS>MOLECULE; *****; 7 6 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 C -2.1429 -0.6767 0.0535 C.2 1 LIG1 0.3530; 2 O -0.9980 -1.0170 -0.3558 O.co2 1 LIG1 -0.7467; 3 O -3.0085 0.0671 -0.4866 O.co2 1 LIG1 -0.7467; 4 C -2.5397 -1.2501 1.4028 C.3 1 LIG1 0.0375; 5 H -2.0729 -2.2270 1.5616 H 1 LIG1 0.0343; 6 H -3.6248 -1.3762 1.4674 H 1 LIG1 0.0343; 7 H -2.2155 -0.5708 2.1965 H 1 LIG1 0.0343; @<TRIPOS>BOND; 1 1 2 ar; 2 1 3 ar; 3 1 4 1; 4 4 5 1; 5 4 6 1; 6 4 7 1. in a code like. ###############################; import openbabel as ob. conv = ob.OBConversion(); conv.SetInAndOutFormats('mol2', 'mol2'). mol = ob.OBMol(). conv.ReadFile(mol, 'mols/aa.mol2'). print mol.GetTotalCharge(). conv.WriteFile(mol, 'test.mol2'); ################################. will print 0 instead of the expected -1 charge. Reported by: psxjp. Original Ticket: [openbabel/bugs/904](https://sourceforge.net/p/openbabel/bugs/904)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1284:727,test,test,727,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1284,1,['test'],['test']
Testability,"The following Python code renames the first residue in a PDB; file. The renaming works except that OpenBabel appends a '1',; obviously the residue number, to the new name in the mol2 output. Openbabel should not arbitrarily change a user's naming choices. import pybel. mol = pybel.readfile('pdb', 'test.pdb').next(). obmol = mol.OBMol; res1 = obmol.GetResidue(0); res1.SetName('FOOBAR') # appends '1' to 'FOOBAR'. mol.write('mol2', 'test.mol2', overwrite = True). Reported by: psxjp. Original Ticket: [openbabel/bugs/903](https://sourceforge.net/p/openbabel/bugs/903)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1283:299,test,test,299,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1283,2,['test'],['test']
Testability,"The following SMILES cause (seemingly) infinite loops in FindLSSR -- these are from TJ O'Donnell on the mailing list. c1ccc(cc1)c1c2ccccc2c2c3c4ccccc4c(c4ccccc4c13)c1c3ccccc3c3c(c4ccccc24)c2ccccc2c2cccc1c32	11433992; c1ccc2c(c1)ccc1cc3c4c(cccc4c4c5c6cc7ccc8ccccc8c7c7cccc(c67)c5c5c(c34)c3cccc4c6c(ccc7ccccc67)cc5c34)c21	11445613; c1ccc2c(c1)sc1cc3sc4ccccc4n4c5ccc(cc5)c5ccc(cc5)n5c6cc7c(sc8ccccc8n7c7ccc(cc7)c7ccc(cc7)n2c1cc34)cc6sc1ccccc51	20793318; c1ccc2c(c1)oc1cc3oc4ccccc4n4c5ccc(cc5)n5c6cc7c(oc8ccccc8n7c7ccc(cc7)n2c1cc34)cc6oc1ccccc51	20793319. Incidentally, the call chain is:. *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Audit Log in FindRingAtomsAndBonds; Ran OpenBabel::FindRingAtomsAndBonds; ==============================; *** Open Babel Audit Log in IsClosure; Ran OpenBabel::PerceiveClosureBonds; ==============================; *** Open Babel Audit Log in FindLSSR; Ran OpenBabel::FindLSSR. We didn't need this in v2.2 or earlier. Do we need LSSR when finding closure bonds?. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1025:607,Log,Log,607,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1025,5,['Log'],['Log']
Testability,"The following SMILES strings represent 16-membered rings, each containing two E-configured double bonds:. 1.) O=C(O[C@@H](C)C(/C=C/1)=O)/C=C/[C@@H](O)[C@H](C)OC(C[C@H](C)OC1=O)=O; 2.) O=C(O[C@@H](C)[C@@H](O)/C=C/C1=O)/C=C/C([C@H](C)OC(C[C@H](C)O1)=O)=O. When generating coordinates using the --gen3d option, OpenBabel builds the correct structure in case of the first SMILES; but in case of the second SMILES, the geometry of one of the two endocyclic double bonds is changed from E to Z. Furthermore, the planarity of this double bond is destroyed.; The two SMILES strings were saved in a file called 'test.smi' and the following command was executed:; babel test.smi test.pdb --gen3d -m. The error also occures when the two molecules mentioned above are used as 2D-sdf files, so it seems to be an issue of 3D coordinates generation. Version: 2.3.2 -- Oct 5 2012 -- 10:02:15; OS: Windows 7 (error also occures under Linux). Reported by: upgrayedd7. Original Ticket: [openbabel/bugs/869](https://sourceforge.net/p/openbabel/bugs/869)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1249:603,test,test,603,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1249,3,['test'],['test']
Testability,"The following aromatic SMILES is not converted corectly into its kekule form:. c12-c3c(cc(N)cc3)Cc1cccc2. Open Babel generated info messages during smi->sdf and smi->smi conversions:. babel ---errorlevel 2 -h -ismi c12-c3c(cc(N)cc3)Cc1cccc2.smi -osmi; c12-c3c(cc(N)cc3)Cc1; cccc2-ob.smi; ==============================; *** Open Babel Information in OpenBabel::OBMol::NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule. ==============================; *** Open Babel Information in OpenBabel::OBMol::start_kekulize; Kekulize Error for molecule. 1 molecule converted; 2 info messages 44 audit log messages. The obtained output is a structure different than the original one, represented in the aromatic smiles c12-c3c(cc(N)cc3)Cc1cccc2:. C12=C3C(=CC(=CC3)N)CC1C=CC=C2. Is Open Babel behaving as expected in this particular case? . Reported by: vedina",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/866:614,log,log,614,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/866,1,['log'],['log']
Testability,"The following code segfaults when run on the attached; gzipped SD file. It runs fine when the uncompressed SD; file is used. from openbabel import *. obconversion = OBConversion(); obconversion.SetInFormat(""sdf""); obmol = OBMol(). notatend = obconversion.ReadFile(obmol,""test.sdf.gz""); while notatend:; print obmol.GetMolWt(); print obmol.NumAtoms(); obmol = OBMol(); notatend = obconversion.Read(obmol). On running this code the output I get is:. 560.6309496; 70; Segmentation fault. My configuration is:. openbabel-2.0.2b1-20060701; Python 2.4; SWIG 1.3.29; Ubuntu Dapper. Reported by: @rajarshi",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/562:271,test,test,271,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/562,1,['test'],['test']
Testability,"The following short python script ends in a segfault. I tested this on three different linux machines running ubuntu and archlinux. ```; \#!/usr/bin/env python. import pybel; import scipy.linalg; ```. There is no segfault if you reverse the order of the import. Some package information:. Package: python-openbabel; Status: install ok installed; Priority: optional; Section: python; Installed-Size: 3119; Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>; Architecture: amd64; Source: openbabel; Version: 2.3.0+dfsg-3ubuntu3; Provides: python2.7-openbabel; Depends: libc6 (>= 2.4), libgcc1 (>= 1:4.1.1), libopenbabel4, libstdc++6 (>= 4.4.0), python2.7, python (>= 2.7.1-0ubuntu2), python (<< 2.8); Original-Maintainer: Debichem Team <debichem-devel@lists.alioth.debian.org>; Homepage: http://openbabel.sourceforge.net. Package: python-scipy; Status: install ok installed; Priority: extra; Section: python; Installed-Size: 24106; Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>; Architecture: amd64; Version: 0.9.0+dfsg1-1ubuntu2; Provides: python2.7-scipy; Depends: python-numpy (>= 1:1.6.1), python-numpy-abi9, python2.7, python (>= 2.7.1-0ubuntu2), python (<< 2.8), libblas3gf | libblas.so.3gf | libatlas3gf-base, libc6 (>= 2.14), libgcc1 (>= 1:4.1.1), libgfortran3 (>= 4.6), liblapack3gf | liblapack.so.3gf | libatlas3gf-base, libstdc++6 (>= 4.1.1), libumfpack5.4.0 (>= 1:3.4.0). Reported by: anthonybak. Original Ticket: [openbabel/bugs/842](https://sourceforge.net/p/openbabel/bugs/842)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1222:56,test,tested,56,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1222,1,['test'],['tested']
Testability,"The following two SMILES represent the exact same; molecule. One has its aromaticity corrupted by; OpenBabel, while the other is interpreted correctly:. c1ccccc1n1cccc1c1ccccc1; c1cc(c2ccccc2)n(c2ccccc2)c1. Feeding these two SMILES into ""babel -i smi -o smi"" yields:. c1c(cccc1)n1c(ccc1)c1ccccc1; C1C[N](C(C1)=C1CCCCC1)=C1CCCCC1; 2 molecules converted. I tested this with both the ""stable"" 2.0 release and; with the current development version (svn revision: 1380). Reported by: @cjames53",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/538:355,test,tested,355,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/538,1,['test'],['tested']
Testability,"The gradient test was failing randomly as calling GetGradient() appears to just return random numbers (different values each time). This fixes it by ensuring that Energy() is called first. This may be a problem in the underlying C++, but for now, this sorts it out.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1966:13,test,test,13,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1966,1,['test'],['test']
Testability,"The instructions for compiling OpenBabel from source (http://openbabel.org/docs/2.3.0/Installation/install.html#compiling-open-babel) suggest using parallel make for increased speed when building on a multi-processor system. If the the Python bindings are being built, however, then parallel make may attempt to link the Python bindings before libopenbabel.so has been built. Needless to say, that fails, halting the build. Serial builds have never failed for me, and even a new parallel build may be able to pick up a run to completion after the first make dies, so there are work-arounds. It would nevertheless be better for the Makefiles to express a proper dependency on libopenbabel.so that prevents any attempt to build the Python extension first. Inasmuch as the Perl and Ruby bindings (at least) seem also to rely on libopenbabel.so, they may also be affected by this issue. I have not tested those yet. Reported by: johnbollinger",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1076:894,test,tested,894,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1076,1,['test'],['tested']
Testability,"The mm3format.cpp code is essentially unimplemented, appears to ; crash frequently in roundtrip testing, and does not properly ; implement the MM3 format. This format code should either be removed or fixed. As it stands, it's ; misleading. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/461:96,test,testing,96,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/461,1,['test'],['testing']
Testability,"The new 2.1 function OBMol::NewBond() appears to cause crashes when used. It's not clear how it differs from the existing AddBond() call, which works fine. I'm adding a new unit test for this bug and will debug. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/608:178,test,test,178,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/608,1,['test'],['test']
Testability,"The new test/formula.cpp checks OBMol::GetFormula(), ; OBMol::GetMolWt() and OBMol::GetExactMass(). These *should* be the same before and after OBMol::AddHydrogens(). For example:. cout << obmol.GetMolWt() << endl; // calculates molecular weight ; inc. implicit hydrogens. obmol.AddHydrogens(); // should make implicit hydrogens into ; explicit ones. cout << obmol.GetMolWt() << endl; // should be the same as before. Instead, while the calculated *formulas* are correct, I get things like:. CCOC(CNC(=O)NC(=O)c1cccnc1)OCC; 281.138 // before hydrogen addition; 281.157 // after hydrogen addition. FC(F)(F)C/1=NNC(=O)\C1=C/NCc2cccs2; 275.034 // before hydrogen addition; 275.187 // after hydrogen addition. Cn1ccc2nc3oc4ccccc4c(=O)c3cc2c1=O; 278.069 // before; 278.183 // after. All of the masses seem correct before hydrogen addition. I have not ; checked the complete list of formulas or masses by hand yet. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/534:8,test,test,8,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/534,1,['test'],['test']
Testability,The stack array kLeast_rho_fix is initiated as an array with; MAX_LAYERS entries. It was used as a pointer in statements to; test whether the pointer is NULL. The clang compiler did not; like this and therefore an alternative test for MAX_LAYERS>0; is used.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2074:125,test,test,125,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2074,2,['test'],['test']
Testability,"The wx-widgets test is called and stored in the Makefile even when the wx-gui is not enabled. This results in a build failure on Gentoo Linux. The wx-config command should never be called if the GUI hasn't been enabled. config.status: executing include/openbabel/babelconfig.h commands; Makefile:162: *** missing separator. Stop.; *; * ERROR: sci-chemistry/openbabel-2.2.0_beta5 failed.; * Call stack:; * ebuild.sh, line 49: Called src_compile; * environment, line 2104: Called die; * The specific snippet of code:; * emake || die ""emake failed""; * The die message:; * emake failed. Reported by: @cryos",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/764:15,test,test,15,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/764,1,['test'],['test']
Testability,There are two rules in bondtyp.txt that I don't understand the; justification of and I don't see how they can be correct when you take; into account that they are applied before aromaticity is perceived so; I've removed them. I have included a test case from a PDB ligand that fails one of these; rules. If there is a good reason to leave these in then we may need to call; AssignFunctionalGroupBonds after pass 5 of PerceiveBondOrders so; aromaticity is set or figure some otherway to narrow the rules to not; apply in inappropriate cases.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2384:244,test,test,244,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2384,1,['test'],['test']
Testability,"There is a bug in the current version with OBMolAtomBFSIter in Python bindings. ; The Python3 code like . for atom, depth in OBMolAtomBFSIter(mol, 1):. results in an error. Traceback (most recent call last):; File ""./test.py"", line 17, in <module>; for atom, depth in OBMolAtomBFSIter(mol, 1):; TypeError: 'OBAtom' object is not iterable. This behavior can be checked with a script from https://baoilleach.blogspot.ru/2008/07/calculate-circular-fingerprints-with.html . The problem may be fixed by addition of `__next__ = next` in the code of the `class OBIterWithDepth(OBIter)` in `scripts/openbabel-python.i` lines 410 - 421. https://github.com/openbabel/openbabel/blob/6bfa4234df4e6744fec858b9e562d419848e6985/scripts/openbabel-python.i#L422",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1636:217,test,test,217,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1636,1,['test'],['test']
Testability,There were missed path changes in some places. Fix tests for BINDINGS_ONLY build (OB_MODULE_PATH override is necessary to point to system installation of OB).,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1977:51,test,tests,51,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1977,1,['test'],['tests']
Testability,"There's interest in revisiting the roundtrip testing, e.g., #2008 - I suspect there's a need to create a separate repository for a larger subset of testing, including SMILES, SDF/Mol, PDB, etc.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2048:45,test,testing,45,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2048,2,['test'],['testing']
Testability,"These changes add two new formats: [ChemDoodle JSON](http://web.chemdoodle.com/docs/chemdoodle-json-format) and [PubChem JSON](http://pubchem.ncbi.nlm.nih.gov/pug_rest/PUG_REST.html). Both formats depend on [JsonCpp](http://jsoncpp.sourceforge.net), a public domain JSON reader and writer library for C++. This has been added as a single amalgamated file to the project, so it is not required as an external dependency. I'm not sure how to provide unit tests and/or example files, but I can do so if needed.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/14:453,test,tests,453,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/14,1,['test'],['tests']
Testability,This branch contains updated versions of the tests that are all contained in a single executable.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/11:45,test,tests,45,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/11,1,['test'],['tests']
Testability,"This bug was discovered while testing out the new iterators. The old iterator marcos used iterators that had an operator bool() which implicitly converts into unsigned long. Instead of using the atom's id, a boolean value was used for IsCis/IsTrans.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2634:30,test,testing,30,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2634,1,['test'],['testing']
Testability,This change add support for converting Jaguar input files to other formats. i.e. it adds READ support for Jaguar input files. I didn't know how to update the tests for this feature. Please let me know how to do this if needed. Thanks.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/336:158,test,tests,158,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/336,1,['test'],['tests']
Testability,This change should fix #2428 by checking for the PNG format header using an `unsigned char`. Also added a regression test that tries to read SMILES data encoded in a png file.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2430:117,test,test,117,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2430,1,['test'],['test']
Testability,"This change will build _openbabel.so in scripts/python/openbabel instead; of the default build/lib. This is necessary because openbabel.py tries; to import _openbabel like this:. if __package__ or ""."" in __name__:; from . import _openbabel; else:; import _openbabel. This results in a circular import error when running make test (the; first branch of the if is triggered). This code appears to be generated by; SWIG with no obvious way to change it to catch the ImportError and call; import _openbabel instead. Note the PYTHONPATH is set to include; build/lib, but it doesn't matter because SWIG is forcing the import to; happen in scripts/python/openbabel. I'm not sure why this hasn't been a problem in the past, perhaps there's; been a change in SWIG. This is with SWIG 4.0.1 and cmake 3.18.6. I think the best solution is to move all the files that are being built; in /scripts to the build directory rather than polluting the src tree; with them, but this would require changing all the bindings and I'm not; up for building and testing every binding.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2378:325,test,test,325,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2378,2,['test'],"['test', 'testing']"
Testability,This fixes a logic error in OBBuilder which led to nondeterministic behavior for some groups (e.g. carboxylate).,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/236:13,log,logic,13,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/236,1,['log'],['logic']
Testability,"This format is named svgbs, but this is really a svg file. This PR is for test and review. It has only been tested with the dioxin file. Up to now there are some known limitations:; - How to handle wobbly bonds and ring bonds (I don't have any clue what this means); - The conversion of a file containing more than one molecule will fail (not tested). It brings more complexity, because that would imply keeping the svg definitions and saving everything in a memstream until the very end. That would spill svg related code.; - The tool does not allow two filters to have the same name. But the name is used as the file extension. Thus, we can not use svg for this new format. This is a proposed fix for #193",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/202:74,test,test,74,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/202,3,['test'],"['test', 'tested']"
Testability,"This happens reproducibly at least on: armv7hl, aarch64, ppc64, ppc64le. ```; 97% tests passed, 4 tests failed out of 157; Total Test time (real) = 4300.78 sec; The following tests FAILED:; 62 - test_regressions_1 (OTHER_FAULT); 63 - test_regressions_221 (OTHER_FAULT); 147 - inchiSteffen_PubChem.smi_Test (Timeout); 149 - pytest_sym (Timeout); Errors while running CTest; Makefile:130: recipe for target 'test' failed; ```. The relevant log snippets are:. ```; Start 62: test_regressions_1; 62/157 Test #62: test_regressions_1 ...............***Exception: Other601.71 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Start 63: test_regressions_221; 63/157 Test #63: test_regressions_221 .............***Exception: Other587.19 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; ```. ```; 147/157 Test #147: inchiSteffen_PubChem.smi_Test ....***Timeout 1500.01 sec; ==============================; *** Open Babel Warning in InChI code; #8 :Salt was disconnected;; ==============================; *** Open Babel Warning in InChI code; #30 :Salt was disconnected;; ```. ```; 149/157 Test #149: pytest_sym .......................***Timeout 1500.01 sec; ```. git commit used: 3a63a9849f8d9719c5989c43875d51be50c53019; environment: Fedora development branch (rawhide)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/266:82,test,tests,82,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/266,10,"['Test', 'log', 'test']","['Test', 'log', 'test', 'tests']"
Testability,"This is a ""master"" bug, to consolidate several otherwise duplicate reports. [*~*]; [c:c]; [Caa(O)aN]; [Ca(aO)aaN]; [*@;!;*]; C2C=CC=CC=2; F-c1:c:c2:c(:c(:c:n:c:2:c:c:1-N1-C-C-N-C-C-1)-C(-O)=O)=O. These are all tested in the ""smartsparse"" test. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/971:210,test,tested,210,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/971,2,['test'],"['test', 'tested']"
Testability,"This is a bug report from Stefano Forli on the openbabel-devel list.; When calling obabel with -p the pH model infers formal charges on an xyz; (since the format doesn't support them) but the code was always; incrementing the number of hydrogens if a charge is added, even if there; were already the appropriate number of explicit hydrogens. Change the; code to call OBAtomAssignTypicalImplicitHydrogens after updating the; formal charge. Include a regression test.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2380:460,test,test,460,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2380,1,['test'],['test']
Testability,"This is a bug reported by Madeleine Walz on the openbabel-devel list. Given a file format without bond orders, the bond orders for azete were not being correctly inferred. Madeleine reported the bug with Gaussian input, but has been strangely resistent to providing actual example files so the test is with xyz. The issue is PerceiveBondOrders uses bond angles to estimate; hybridization states and azete has a 90 degree angle (so the N; hybridization is set to zero and double bonds aren't made where they; should). The fix is a pretty narrow check that probably doesn't generalize to any other molecules. Regression test included.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2379:294,test,test,294,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2379,2,['test'],['test']
Testability,"This is a first pass at folding EQeq (a speed-optimized crystal-focused charge estimator described [here](http://pubs.acs.org/doi/abs/10.1021/jz3008485)) into openbabel. This currently runs and appears to produce the same results as the original EQeq, but has not yet been rigorously tested. One note is that the EQeq algorithm requires higher-order ionization energy data and metal ion charges, both of which I couldn't find in `OBElementTable`. Currently, this implementation reads a separate data file for this. There are also some parameters that are hardcoded, but, in practice, people don't seem to ever change these - this could be fixed if needed. Current test script is through Python:. ``` python; import pybel; import EQeq; import sys. with open(sys.argv[-1]) as in_file:; m = in_file.read(). # Test EQeq's openbabel implementation; mol = pybel.readstring(""cif"", m); eqeq = pybel.ob.OBChargeModel_FindType(""eqeq""); eqeq.ComputeCharges(mol.OBMol); charges = [a.partialcharge for a in mol]. # EQeq's standard Python bindings; out = EQeq.run(m, output_type=""list""). # Compare (this assumes atoms don't get shuffled in openbabel); print charges; print out; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/54:284,test,tested,284,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/54,3,"['Test', 'test']","['Test', 'test', 'tested']"
Testability,This is a fix for #305. The test file provided by the OP is included as a regression.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/308:28,test,test,28,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/308,1,['test'],['test']
Testability,"This is a follow-on from the work on implicit hydrogens. In the end no changes were made to the data structures used to store information, but the handling of the existing file formats has been tweaked. Storing undervalent atoms in MOL files now uses the valence field, rather than M RAD. M RAD is only used if a spin has been specified. Now reading undervalent atoms from SMILES does not set the spin (it did previously). For depiction, changes were needed to ensure that radical dots were depicted in the same situations as before (by testing for either spin or undervalence).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1626:537,test,testing,537,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1626,1,['test'],['testing']
Testability,"This is an alternative fix to generating crazy hydrogens. Instead of defaulting to a hybridization 2 kind of bond, if the builder doesn't think there is a reasonable bond vector, then the hydrogen isn't added. I've also updated the documentation for GetNewBondVector to state that a non-finite vector can be returned if there isn't a reasonable location for another atom. This restores the old behavior of GetNewBondVector (return non-finite bond vectors), which is good in the off chance anyone was relying on it while still fixing the problem. In the corner case that a molecule has multiple conformers, some where the hydrogen can be added and some where it can't the hydrogen is added at (0,0,0), but I'm not sure this can actually happen. This also comes with updated hydrogen testing code. The goal is to eventually always perform consistent and reasonable protonation and this PR is a baby step in that direction. Incidentally, the problem with the test molecule is that it has had the formal charge information stripped from the azide. In my perfect world, AddHydrogens would also update formal charges if doing so resulted in a more reasonable molecule than adding a hydrogen.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2010:782,test,testing,782,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2010,2,['test'],"['test', 'testing']"
Testability,This is an updated pull request for #1656 that fixes the test failures when it was merged after #1640.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1661:57,test,test,57,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1661,1,['test'],['test']
Testability,"This is currently in progress: turn the current website & documentation ; into a wiki. A test wiki has been installed and the current ""skin"" for Open Babel and ; the individual web pages are slowly being converted. Initial experience is ; good -- this should make life easier for everyone soon. -Geoff. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/71"":https://sourceforge.net/p/openbabel/feature-requests/71",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1440:89,test,test,89,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1440,1,['test'],['test']
Testability,"This is from Craig James (migrated from PR#1445453. Here is another case that is probably the same bug. This is; particularly bad because it loses aromaticity on a simple; benzene ring. The SD File is parsed correctly can converted; to a SMILES, but when you re-parse the SMILES that OpenBabel; already produced, you get garbage. See the SD file below; (call it ""foo.sdf""), and use it for this test:. $ babel /tmp/foo.sdf -o smi ; c1(n(c2c(c(o1)=O)cccc2)CC(=O)OCC)=O; 1 molecule converted; [M6:cj] /emi/src/docs/patents $ babel /tmp/foo.sdf -o smi |; babel -i smi -o smi; 1 molecule converted; C1(OC(C2C(N1CC(=O)OCC)CCCC2)=O)=O; 1 molecule converted. ----------------------. OpenBabel05020621282D. 18 19 0 0 0 0 0 0 0 0999 V2000; 1.3509 0.4120 0.0000 C 0 0 0 0 0; 0.6384 -0.0005 0.0000 N 0 0 0 0 0; 1.3509 1.2370 0.0000 O 0 0 0 0 0; 0.6384 1.6537 0.0000 C 0 0 0 0 0; -0.0741 1.2370 0.0000 C 0 0 0 0 0; -0.0783 0.4120 0.0000 C 0 0 0 0 0; 0.6342 -0.8255 0.0000 C 0 0 0 0 0; 2.0634 -0.0005 0.0000 O 0 0 0 0 0; -0.0866 -1.2380 0.0000 C 0 0 0 0 0; 0.6384 2.4787 0.0000 O 0 0 0 0 0; -0.7991 -0.8255 0.0000 O 0 0 0 0 0; -0.7908 1.6495 0.0000 C 0 0 0 0 0; -0.0866 -2.0630 0.0000 O 0 0 0 0 0; -0.7908 -0.0005 0.0000 C 0 0 0 0 0; -0.7991 -2.4755 0.0000 C 0 0 0 0 0; -1.5033 1.2370 0.0000 C 0 0 0 0 0; -1.5033 0.4120 0.0000 C 0 0 0 0 0; -0.8033 -3.3005 0.0000 C 0 0 0 0 0; 2 1 1 0 0 0; 3 1 1 0 0 0; 8 1 2 0 0 0; 6 2 1 0 0 0; 7 2 1 0 0 0; 4 3 1 0 0 0; 5 4 1 0 0 0; 10 4 2 0 0 0; 12 5 2 0 0 0; 6 5 1 0 0 0; 14 6 2 0 0 0; 9 7 1 0 0 0; 11 9 2 0 0 0; 13 9 1 0 0 0; 16 12 1 0 0 0; 15 13 1 0 0 0; 17 14 1 0 0 0; 18 15 1 0 0 0; 17 16 2 0 0 0; M END; $$$$; -------------------. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/546:394,test,test,394,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/546,1,['test'],['test']
Testability,"This is meant as an improvement: with these changes, CMake first checks if there is a build of Schrödinger's maeparser and coordgen libraries that can be used in openbabel's build. If there isn't, then, this patch downloads the sources and builds them. This means that it addresses #2015. Some notes:; - CMake will, by default, look in standard library and include directories for the built library and the required headers. Other directories can be specified for the lookup by using ""maeparser_DIR"" and ""coordgen_DIR"".; - By default, the ""master"" branch of maeparser and coordgen will be downloaded from GitHub. This can be changed using the ""MAEPARSER_VERSION"" and ""COORDGEN_VERSION"" variables, pointing them to specific tags, branches or commits.; - If sources are already present at the directory where CMake would put them, the download step will be skipped, and the available sources will be used.; - Both maeparser and coordgen test executables will not be built. In case they are, ctest won't be able to find them, since they will be put in the ""bin"" directory, together with the rest of the openbabel executables.; - Boost threads need to be disabled in case of a static build, or the build will fail (I haven't investigated this too much, but probably the Boost libraries are not built using --static-libgcc.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2064:935,test,test,935,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2064,1,['test'],['test']
Testability,"This is related to https://github.com/openbabel/enhancement-proposals/pull/7. I only made the change for SMILES and InChI, as MOL needs more thought. The change was simple in the end and didn't require any API changes. A one line change in the relevant readers. It was figuring out why test cases failed that took the time. A number of bugs were fixed in the course of getting the test suite back to working:; - if a molecule didn't have hybridisation perceived, OBBuilder did not work correctly.; - OBAtom:: and Bond:IsAromatic() did not always trigger reperception, even where the OBMol flag was unset. I've changed this behavior, as I think it's unexpected.; - vector3::randomUnitVector() created a static OBRandom but set the seed using system time each time it was called. This meant that the same 'random' vector was returned during a period of 1s. Meanwhile, the OBBuilder is looping around for 1 second trying to find a suitable vector.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1696:286,test,test,286,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1696,2,['test'],['test']
Testability,This is to test OB:s capacity to generate correct bond orders by comparing reading a correct SDF file to a Gaussian log file. More tests can be added later.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2385:11,test,test,11,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385,3,"['log', 'test']","['log', 'test', 'tests']"
Testability,"This merge request is to fix CDXML inverted y-axis discussed in [PR1777](https://github.com/openbabel/openbabel/pull/1777).; The `Molfile` coordinate system: increase Y, move up.; The `Cdxml` coordinate system: increase Y, move down.; Two systems define opposite Y-axis directions, and result in an inverse during conversion. Meanwhile, Chemdraw doesn't auto-center the structure, and I add logic to make sure the structure showed in the field-of-view. If the structure position is in a negative region, it hides. I pick 15 molecules with stereochemisty, and convert them from `mol` to `cdxml` with this PR.; The `compare.docx` in the zip file shows the conversion is good, and no inverse occures.; [openbabel_cdxml_inverse_updated.zip](https://github.com/openbabel/openbabel/files/1967324/openbabel_cdxml_inverse_updated.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1831:391,log,logic,391,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1831,1,['log'],['logic']
Testability,"This problem was originally posted on openbabel-discuss forum by David Rose-9 on Nov. 15, 2007. However, I still have exactly the same problem using version 2.2.3, which is the last one on Feb. 19, 2010, on my x86 64 bit RedHat Linux and it is better to notice the problem here. ; ---------------------------; I have had several instances where I build a fast search index without any apparent trouble but then can't search it without an error. I finally have a small example of this problem that I can post, using a 10 molecule smi file (ten.smi) as input: . $ cat ten.smi ; C12(C(N(C(=O)C)c3c2cccc3)=O)Nc2c(ccc(c2N1)OCCCC)OCCCC ; n1c([nH]c(cc1c1ccccc1)=O)c1ccc(cc1)Br ; n1c(nc2c(c1N(C)C)cccc2)c1c(O)cccc1 ; C1(/[CH]2[CH]3\C(=C4/CC(C)(C)NC(C4)(C)C)C=C[CH]3[CH]1C=C2)=C1/CC(C)(C)NC(C1)(C)C ; n1c(c2ccc(C(=O)O)cc2)ccc(c1)CCCCC ; N1(C(CN(CC1=O)C(=O)C1CCCCC1)=O)CCc1ccccc1 ; S(N1[CH](c2ccccc2C=C1)C#N)(c1ccc(cc1)C)(=O)=O ; c12c(c(OC)c3c(c1OC)occ3)ccc(o2)=O ; c12c(O[CH](C1=O)C(C)C)cc1c(c2)ccc(=O)o1 ; c12[C]3([C@H]4([N@@](CCc1c1ccccc1[nH]2)C[C@H](C=C4CC)C3))C(=O)OC . # file looks OK...build index: . $ babel ten.smi -ofs ; This will prepare an index of ten.smi and may take some time... ; It took 0 seconds ; 10 molecules converted ; 37 audit log messages . $ ls -lt ten.fs ; -rw-r--r-- 1 rose staff 1564 Nov 15 12:51 ten.fs . # looks OK, no errors, fs file exists and has stuff in it. Try a search: . $ babel ten.fs -ifs -s'Nc2nc(c1ccccc1)nc3ccccc23' out.smi ; ============================== ; *** Open Babel Error in ReadChemObject ; Difficulty reading from index ten.fs . 0 molecules converted ; 1 errors 1 audit log messages. From this past post ---Problem using fs index file--- (http://n4.nabble.com/Problem-using-fs-index-file-td958832.html#a958832), problem may be caused by incompatible binary operation on 64 bit machine but I cannot figure out the cause. Reported by: makio323",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966:1241,log,log,1241,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966,2,['log'],['log']
Testability,This provides a new tool that extracts thermochemistry (Delta H formation etc.) from a Gaussian log file. The patch also provides the necessary reference data from a large set of calculations and experiments.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/200:96,log,log,96,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/200,1,['log'],['log']
Testability,"This relates to reading the correct change and spin multiplicity when importing a Gaussian log file (.g03). The current implementation looks for the a line containing ""Symbolic Z-matrix:"" then reads the 3rd and 6th tokens from the next line, which usually says ""Charge = # Multiplicty = #"". Some log files do not contain the words ""Symbolic Z-matrix"", but follow a different format, such as:. Cartesian coordinates read from the checkpoint file:; checkpointfilename.chk; Charge = # Multiplicity = #. or. Redundant internal coordinates taken from checkpoint file:; checkpointfilename.chk; Charge = # Multiplicity = #. Molecules read from these log files end up with no charge or spin multiplicity set. Instead of looking for the line after ""Symbolic Z-matrix"", is there any harm in just looking for the line containing ""Multiplicity ="" ?. (The latter seems to work for all my files). Reported by: rhw27",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/747:91,log,log,91,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/747,3,['log'],['log']
Testability,"This script fails:; ```; import pybel; mymol=pybel.readstring('smi','CCOC(=O)C'); mymol.addh(); mymol.make3D(); print mymol.write(format='mol2'); ```; ```; Traceback (most recent call last):; File ""x.py"", line 3, in <module>; mymol=pybel.readstring('smi','CCOC(=O)C') ; File ""/usr/local/lib/python2.7/site-packages/pybel.py"", line 199, in readstring; raise ValueError(""%s is not a recognised Open Babel format"" % format); ValueError: smi is not a recognised Open Babel format; ```. But when queried, it says that ```smi``` is supported:; ```; import pybel; print sorted(pybel.informats); ```; ```; ['CONFIG', 'CONTCAR', 'CONTFF', 'HISTORY', 'MDFF', 'POSCAR', 'POSFF', 'VASP', 'abinit', 'acesout', 'acr', 'adfout', 'alc', 'aoforce', 'arc', 'axsf', 'bgf', 'box', 'bs', 'c09out', 'c3d1', 'c3d2', 'caccrt', 'can', 'car', 'castep', 'ccc', 'cdjson', 'cdx', 'cdxml', 'cif', 'ck', 'cml', 'cmlr', 'crk2d', 'crk3d', 'ct', 'cub', 'cube', 'dallog', 'dalmol', 'dat', 'dmol', 'dx', 'ent', 'exyz', 'fa', 'fasta', 'fch', 'fchk', 'fck', 'feat', 'fhiaims', 'fract', 'fs', 'fsa', 'g03', 'g09', 'g92', 'g94', 'g98', 'gal', 'gam', 'gamess', 'gamin', 'gamout', 'got', 'gpr', 'gro', 'gukin', 'gukout', 'gzmat', 'hin', 'inchi', 'inp', 'ins', 'jin', 'jout', 'log', 'lpmd', 'mcdl', 'mcif', 'mdl', 'ml2', 'mmcif', 'mmd', 'mmod', 'mol', 'mol2', 'mold', 'molden', 'molf', 'moo', 'mop', 'mopcrt', 'mopin', 'mopout', 'mpc', 'mpo', 'mpqc', 'mrv', 'msi', 'nwo', 'orca', 'out', 'outmol', 'output', 'pc', 'pcjson', 'pcm', 'pdb', 'pdbqt', 'png', 'pos', 'pqr', 'pqs', 'prep', 'pwscf', 'qcout', 'res', 'rsmi', 'rxn', 'sd', 'sdf', 'siesta', 'smi', 'smiles', 'smy', 'sy2', 't41', 'tdd', 'text', 'therm', 'tmol', 'txt', 'txyz', 'unixyz', 'vmol', 'xml', 'xsf', 'xyz', 'yob']; ```. Downstream FreeBSD bug report: https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=194599. Version 2.4.1 on FreeBSD 11.2 installed from the port.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1898:1234,log,log,1234,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1898,1,['log'],['log']
Testability,"This was likely a bug before, but is more obvious now. The ""chains ; parser"" feature, which attempts to deduce residues and peptide chains ; *ONLY* works without any attached hydrogens. The attached test file ""test.gpr"" is a Ghemical file with a random amino ; acid chain and hydrogens added. test-noH.mol2 is a Mol2 file from babel 2.0 with proper residue/chain ; perception after hydrogens were deleted. test-withH.mol2 is a Mol2 without hydrogen deletion. No residues were ; found. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/515:199,test,test,199,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/515,4,['test'],"['test', 'test-noH', 'test-withH']"
Testability,"This was reported on the list by Bjoern Gruening. Here's a test case in Python, using the attached test.mol:; mol = pybel.readfile(""mol"", ""test.mol"").next().OBMol; bond = mol.GetBond(1, 28); mol.DeleteBond(bond); mol.Separate() # Segfault. Note that test.mol is a 2D structure with very short bond length. This shouldn't affect mol.Separate() though, right?. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/851:59,test,test,59,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/851,4,['test'],['test']
Testability,"ThrowError was taking a total of 1.9% of the time for smi->smi. This was mainly attributed to three log messages, all audits. I've added an 'if' statement to check the logger's output level before throwing the error. I think it would make sense for this to be an idiom throughout the library.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1714:100,log,log,100,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1714,2,['log'],"['log', 'logger']"
Testability,"To create a test file use: ; obabel -:C1C(CC)C1 --gen2d -h -O testfile.mol. If we generate the aliases, the ethyl will be replaced. However, none of its hydrogens are, resulting in an incorrect molecular structure (with lots of disconnected hydrogen radicals!):. obabel testfile.mol -omol --genalias -xA. OpenBabel03151210282D. 14 11 0 0 0 0 0 0 0 0999 V2000; 1.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.5000 -0.8660 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.5000 -1.8660 0.0000 * 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 -0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1.9266 0.5350 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.7566 -0.7566 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; -0.5335 -1.1430 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.4266 -2.4010 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5000 -2.9360 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.2927 -1.8310 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; -0.3660 -3.4360 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.2927 -2.9010 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; -0.9266 0.5350 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.2769 1.0335 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 4 1 0 0 0 0; 1 2 1 0 0 0 0; 1 5 1 0 0 0 0; 1 6 1 0 0 0 0; 2 3 1 0 0 0 0; 2 4 1 0 0 0 0; 2 7 1 0 0 0 0; 3 8 1 0 0 0 0; 3 9 1 0 0 0 0; 4 13 1 0 0 0 0; 4 14 1 0 0 0 0; A 3; Et; M END; 1 molecule converted. Note that there is a somewhat related problem with expanding aliases (should the hydrogens be added or not?), but I don't think this really matters that much. The user can always explicitly request new hydrogens. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1161:12,test,test,12,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1161,3,['test'],"['test', 'testfile']"
Testability,"To test whether a double bond is implicitly cis (and thus requires no stereobond symbols), the original code used SSSR based ring perception. In fact, it always triggered it, even where the bond was not in a ring. Doh!. The replacement code does not use the SSSR.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1715:3,test,test,3,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1715,1,['test'],['test']
Testability,"Trying out the new ""obmm"" tool, and running a CG step yields a fast crash. The ""logos"" variable is never initialized, so the code attempts to write to a NULL stream. While this can be fixed with modifications to obmm, I worry that there's no guarantee that the stream pointer will be set. (i.e., there's no exposed constructor). So this can occur easily in even well-meaning client code. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/606:80,log,logos,80,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/606,1,['log'],['logos']
Testability,"Trying to strip properties from an SDF, we've come across a change in behaviour between Open Babel 2.3.0 and 2.3.1/2.3.2 where Babel >2.3.1 seems not to read or output the valences correctly and results in output SDFs with many radical atoms defined. Deleting or adding Hs has no effect, if we output SMILES then the SMILES also contain atoms with non-standard valences, e.g. converting babel -isdf my_sdf.sdf -osdf my_new_sdf.sdf returns an SDF with ; M RAD 8 7 3 8 2 9 2 10 2 11 2 12 2 13 2 14 2; The corresponding SMILES:; O=C1N(C=NC=NC1)C2=CC=CC=C2 (from the SDF properties); O=C1N(c2[c][c][c][c][c]2)[C]=N[C]=N[C]1 (from Babel GUI); So, we have tested this on:; Linux, Mac 2.3.0 - we obtain a SDF / SMILES with the molecule we expect; Windows GUI or command line 2.3.1, 2.3.2, Mac - we obtain the radical representation, i.e. SDF with M RAD lines for each molecules and smiles with [c] and similar as above. The SMILES via Windows GUI did change slightly between 2.3.1 (O=C1N(c2ccccc2)[C]=N[C]=N[C]1) and 2.3.2 (O=C1N(c2[c][c][c][c][c]2)[C]=N[C]=N[C]1), but the M RAD line in the SDF was the same.; The input SDF (attached) was generated via MetFrag command line using the CDK to output structures retrieved from ChemSpider. A difference in the SDF is that the 6th column after the atom letter in the input SDF contains the valences, this is not in the output SDF from Babel - for 2.3.0 or >=2.3.1.; I am not 100 % sure if this a problem with our SDF, or a bug? If the former, please let us know! . Reported by: schymane. Original Ticket: [openbabel/bugs/931](https://sourceforge.net/p/openbabel/bugs/931)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1311:650,test,tested,650,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1311,1,['test'],['tested']
Testability,"Unexpected cross of binding when generating chemical structures from smiles. I had difficulties opening exported .mol file using Compound Discoverer 3.3 SP3, which may or may not be related to this issue. `obabel -:""N(=NF)F"" -O ""test.svg""`. or. `obabel -:""N(=NF)F"" -O ""Dinitrogen_difluoride.mol"" --gen2D`. EDIT: This appears to also be the case in pubchems 2D viewer. Is this made using openbabel or am I missing something? See: https://pubchem.ncbi.nlm.nih.gov/compound/139594. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: Mac OS Sonoma 14.2 (23C64). ## Expected Behavior; F-N=N-F. ## Actual Behavior; F-NXN-F or see attached image.; ![test](https://github.com/openbabel/openbabel/assets/47218002/0e82373e-41ae-4125-84d0-3b114875a9a1)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2699:229,test,test,229,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2699,2,['test'],['test']
Testability,Use partial metrization and damped stereochemical corrections. This is still incomplete - causes some test failures.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/253:102,test,test,102,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/253,1,['test'],['test']
Testability,"UsePythonTest.cmake contains a template that is used to create a series of cmake files that execute tests for the python language bindings. Quotes within this template need to be escaped, otherwise they fail to appear in the resulting cmake files. In this context, the unescaped quotes were optional so no error was actually caused. However, as of cmake 2.8.12, the unescaped quotes cause a warning when running cmake: ""Argument not separated from preceding token by whitespace."". This change simply removes the unescaped quotes, causing no changes to the resulting cmake files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/35:100,test,tests,100,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/35,1,['test'],['tests']
Testability,"Using ""babel --fillUC strict test.cif test.pdb"" to transform a structure with a given symmetry group into a P1 structure creates duplicate atoms. Example with a ""P-1"" space group: the atom at (0,0,1/2) is duplicated when symmetry is removed, leading to two identical atoms at the same position. $ cat test.cif ; data_test. _cell_length_a 10.0000(0); _cell_length_b 10.0000(0); _cell_length_c 10.0000(0); _cell_angle_alpha 90.0000(0); _cell_angle_beta 90.0000(0); _cell_angle_gamma 90.0000(0). _symmetry_space_group_name_H-M 'P -1'; _symmetry_Int_Tables_number 2; _symmetry_cell_setting cubic. loop_; _symmetry_equiv_pos_as_xyz; '+x,+y,+z'; '-x,-y,-z'. loop_; _atom_site_label; _atom_site_type_symbol; _atom_site_fract_x; _atom_site_fract_y; _atom_site_fract_z; O1 O 0.0000 0.0000 0.5000; $ babel --fillUC strict test.cif test.pdb; 1 molecule converted; 1 info messages 21 audit log messages ; $ cat test.pdb ; COMPND test.cif ; AUTHOR GENERATED BY OPEN BABEL 2.3.1; CRYST1 10.000 10.000 10.000 90.00 90.00 90.00 P 1 1; HETATM 1 O HOH 1 -0.000 -0.000 5.000 1.00 0.00 O ; HETATM 2 O HOH 2 -0.000 -0.000 5.000 1.00 0.00 O ; MASTER 0 0 0 0 0 0 0 0 2 0 2 0; END. Reported by: coudert",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1151:29,test,test,29,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1151,8,"['log', 'test']","['log', 'test']"
Testability,Using test.smi. c1ccccc1C=Cc2ccccc2	stilbene; c1ccccc1\C=C\c2ccccc2 trans Stilbene; c1ccccc1\C=C/c2ccccc2	cis Stilbene; c1ccccc1	benzene. obgrep -n 'cC=Cc' '/Users/user1/Desktop/test.smi'. gives . stilbene; trans Stilbene; cis Stilbene. obgrep -n 'c\C=C/c' '/Users/user1/Desktop/test.smi'; or ; obgrep -n 'c\C=C\c' '/Users/user1/Desktop/test.smi'. gives no results. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/447:6,test,test,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/447,4,['test'],['test']
Testability,Using the -i option with output type SVG results in a segfault. Without -i works perfectly. babel -ixyz test.xyz -osvg -i; Segmentation fault: 11. Affects current production release and nightly build. Reported by: *anonymous. Original Ticket: [openbabel/bugs/834](https://sourceforge.net/p/openbabel/bugs/834),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1214:104,test,test,104,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1214,1,['test'],['test']
Testability,"Using the SourceForge Compile farm for testing, I noted; a failure on the matrix algebra test:. bash-2.03$ uname -a; SunOS usf-cf-sparc-solaris-2 5.8 Generic_108528-17; sun4u sparc SUNW,Ultra-60. Reading specs from; /opt/sfw/lib/gcc-lib/sparc-sun-solaris2.8/2.95.2/specs; gcc version 2.95.2 19991024 (release). Testing Matrix Algebra...; Matrix eigenvector test failed, wrong eigenvalues computed.; ERROR: ***MATRIX test failed***. There were no other error messages from this build. Let; me know if you need more information. (Everyone with a; SF.net account can access and use the Compile Farm.). -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/409:39,test,testing,39,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/409,5,"['Test', 'test']","['Testing', 'test', 'testing']"
Testability,"Using this branch to change the runner for automated testing on babel, updating the python version in hopes to resolve the security checks",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2592:53,test,testing,53,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2592,1,['test'],['testing']
Testability,"Various improvements and fixes for the tautomer code. - Fix issue #227 ; - Fix various backtracking issues (rewritten using RAII); - Perceive aromaticity for each tautomer (fixes failing antralin test); - Mark atoms that have initially have all bonds assigned as Other (fixes failing tenoxicam test which contains sulfon group); - Add support for enumerating unique tautomers only (duplicates may be present due to symmetry); - Add test cases from slides, all are working now (see https://www.daylight.com/meetings/emug99/Delany/taut_html/sld030.htm). TODO:; - More testing with special functional groups (e.g., N-oxide, conjugated carbanion/carbocation, conjugated nitrogen); - Add support for keto/enol tautomerism?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2171:196,test,test,196,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2171,4,['test'],"['test', 'testing']"
Testability,"Very little of the internal code uses the new OBMessageHandler and ; OBError classes. Much of the code uses combinations of ThrowError ; and cerr, and thus inconsitencies can occur frequently. The code needs to be switched *CONSISTENTLY* to the new error ; logging classes. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/478:257,log,logging,257,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/478,1,['log'],['logging']
Testability,"We should kekulize hypervalent N and S, especially as we write out the first one, and the second one occurs in SMILES strings generated by another toolkit. This is a minor tidy-up based on the SMILES reading benchmark I put together.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1787:208,benchmark,benchmark,208,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1787,1,['benchmark'],['benchmark']
Testability,We should try to get rid of all compiler warning such that we can require this of all new code as well.; % grep -c warning make.log ; 85; It does seem doable.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1862:128,log,log,128,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1862,1,['log'],['log']
Testability,"What is the Tanimoto coefficient of two molecules that have no bits set? The answer should be 0. This can occur where you are comparing two molecules that don't have any functional groups, e.g. using FP3. In the Python interface (Windows) I get an answer of ""-1.#IND"" which is a new one on me. I guess it means division by zero error. Here's a test case:. >>> import pybel; >>> mols = [pybel.readstring(""smi"", x) for x in ['CCCC', 'CCCN']]; >>> fps = [x.calcfp(""FP3"") for x in mols]; >>> fps[0] | fps[1]; -1.#IND. Here's a page that suggests that this results from a variable not being initialised:; http://www.thescripts.com/forum/thread62988.html. Noel. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/648:344,test,test,344,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/648,1,['test'],['test']
Testability,"When _not_ running BeginModify & EndModify on molecules, AddHydrogens segfaults when it is called. It's related to the conformer data, specifically the call to SetConformer(0). Reproducing:. // test AddHydrogens; OBMol testMolH;; OBAtom *testAtom = testMolH.NewAtom();; testAtom->SetVector(0.5f, 0.5f, 0.5f);; testAtom->SetAtomicNum(6);; testMolH.AddHydrogens();; if (testMolH.NumAtoms() == 5) {; cout << ""ok 9"" << endl;;; } else {; cout << ""not ok 9"" << endl;;; }. Fixing: Uncomment BeginModify and EndModify. I am adding both versions to the unit testing for mol.cpp. Reported by: @milkypostman",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/607:194,test,test,194,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/607,9,['test'],"['test', 'testAtom', 'testMolH', 'testing']"
Testability,"When a test fails, it would be nice to see the test output, especially for those cases where I'm having trouble reproducing the test failure.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1959:7,test,test,7,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1959,3,['test'],['test']
Testability,"When an index is prepared from the attached smiles file (with CRLF line endings):; babel 4mols.smi -ofs ; and searched; babel 4mols.fs -sC#N -osmi; The correct response, which occurs newlinebuf is disabled by giving SmilesFormat a READBINARY flag, is: . 2 candidates from fingerprint search phase; O=N(=O)c1ccc(c(c1)N(=O)=O)SC#N 540; Clc1ccccc1C=C(C#N)C#N 542; 2 molecules converted; 41 audit log messages. With newlinebuf active for SmilesFormat. 2 candidates from fingerprint search phase; O=N(=O)c1ccc(c(c1)N(=O)=O)SC#N 540; 1 molecule converted; 41 audit log messages. This was on Windows XP. The behaviour is the same if 4mols.smi has just LF endings.; ; Fastsearch uses seek positions in the smiles file and I suspect newlinebuf has interfered with these. I'll look further when I have time later in the week. Reported by: @chrismorl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/585:393,log,log,393,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/585,2,['log'],['log']
Testability,"When building 2.2.0 b4, perl bindings fail to build with gcc-4.3 on ppc64. Fedora buildsystem task can be viewed here:; http://koji.fedoraproject.org/koji/taskinfo?taskID=484772. Full build.log attached. Reported by: dmierzej",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736:190,log,log,190,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736,1,['log'],['log']
Testability,"When converting a small-molecule CIF file to mmCIF, the resulting mmCIF is missing many mandatory values in the atom_site table. The mandatory items are documented for the atom_site category in the current mmCIF documentation, https://mmcif.wwpdb.org/dictionaries/mmcif_pdbx_v50.dic/Categories/atom_site.html. The mandatory fields are those that are annotated with exclamation point inside a circle: auth_asym_id, label_alt_id, label_asym_id, label_atom_id, label_comp_id, label_entity_id, label_seq_id, and type_symbol. Of those, Open Babel only populates the type_symbol value. In practice, auth_asym_id is not required. Reasonable default values for the other missing values are:; label_alt_id .; label_asym_id A; label_comp_id UNL; label_entity_id ?; label_seq_id . label_atom_id should be unique for every atom -- if it is present, just reuse the atom_site_label value from the small-molecule CIF file (https://www.iucr.org/__data/iucr/cifdic_html/1/cif_core.dic/Iatom_site_label.html). Otherwise, number them, eg., C1, C2, etc. A test file is https://github.com/openbabel/openbabel/blob/master/scripts/python/examples/hashizume.cif",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2545:1036,test,test,1036,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2545,1,['test'],['test']
Testability,"When doing a force field minimization of a molecule with Open Babel 2.4.1 the optimization continues till the completion of number of steps specified. A convergence criteria given is ignored.; Reason is that the OBForceField functions e.g. ConjugateGradientsTakeNSteps, SteepestDescentTakeNSteps, SteepestDescent etc. all do not return FALSE (or return) if convergence criterion has been reached.; The parameter econv seems to be ignored in all functions. Tested with Openbabel 2.4.1 (64bit) and Win10 pro 64 bit.; This bug was not present in Open Babel 2.3.2. see also:; https://sourceforge.net/p/openbabel/mailman/message/35400728/. Reported by: yodah134. Original Ticket: [openbabel/bugs/987](https://sourceforge.net/p/openbabel/bugs/987)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1366:456,Test,Tested,456,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1366,1,['Test'],['Tested']
Testability,When doing some round tripping testing in OpenBabel 2.3.0 I came across the following cases where hydrogen was erroneously added to atoms with explicitly no hydrogen in the conversion from SMILES to InChI. Group 1/2 metals and In/Sn/Sb/Tl/Pb/Bi/Po/At. e.g. [Li] -->InChI=1S/Li.H instead of InChI=1S/Li; [Bi] --> InChI=1S/Bi.3H instead of InChI=1S/Bi. Possibly relatedly [BiH4] gives InChI=1S/Bi.5H instead of InChI=1S/Bi.4H. Reported by: dan2097,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1078:31,test,testing,31,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1078,1,['test'],['testing']
Testability,"When outputting files in MDL MOL format, ""M CHG"" records are not generated for charged atoms, instead the charge is stored in the atom block. This causes problems if any ""M RAD"" records are present, as the standard says that in this case all charges read from atom blocks should be ignored, and only charges read from ""M CHG"" records should be considered. The standard seems to suggest that atom block charges are semi-deprecated anyway, and ""M CHG"" records are preferred. I have attached a trivial test SMILES file that should reproduce the bug when converted to MDL MOL format. I am running OpenBabel version 2.1.1 on Linux. My email address is p.mortenson@astex-therapeutics.com. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/679:499,test,test,499,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/679,1,['test'],['test']
Testability,"When reading a .cdx with negative charges, the charges get an unsigned number. ; For example, converting a given .cdx containing two charged atoms into the mol format, atom no.8's charge is set to 255 instead of being -1. ; Hence, I see: ; M CHG 2 4 1 8 255; instead of : ; M CHG 2 4 1 8 -1. I have modified the file chemdrawcdx.cpp as below to fix this when the condition cdxr.GetLen()==1 is True. However, I was not able to test the code found in the else statement since I never meet this case. . ```; case kCDXProp_Atom_Charge:; if(cdxr.GetLen()==1) ; charge = (int)((char)cdxr.data().get());; else; READ_INT32(cdxr.data(), charge);; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/338:426,test,test,426,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/338,1,['test'],['test']
Testability,"When reading an xtc file with multiple frames, only the coordinates of the last conformer are valid. I think it is happening because the destructor of the vector confs is being called whenever a frame is finished being read and the array that stores the atomic coordinates for that frame is freed. Meanwhile the pointer to that (now unallocated) array is stored in vconf and then in the OBMol object. See http://sourceforge.net/p/openbabel/code/HEAD/tree/openbabel/trunk/src/formats/xtcformat.cpp#l187. So whenever I try accessing the conformer coordinates after reading them from an xtc file, I see a partially overwritten array. This may also be related to bug #745, if the OBMol destructor is trying to free the already freed arrays of conformer coordinates. I mention this because I'm getting similar behavior from calling OBMol.Clear() at the end of my test. libopenbabel version: 2.3.2+dfsg-1.1, from Ubuntu 14.04 repository. Reported by: zetadin. Original Ticket: [openbabel/bugs/960](https://sourceforge.net/p/openbabel/bugs/960)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1339:858,test,test,858,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1339,1,['test'],['test']
Testability,"When rendering molecules in obabel, Pt is so light colored is is almost invisible. Tested on 2.3.2 and 2.3.3dev. N\[Pt\](N)(Cl)Cl. Reported by: jeff-janes. Original Ticket: [openbabel/bugs/924](https://sourceforge.net/p/openbabel/bugs/924)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1304:83,Test,Tested,83,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1304,1,['Test'],['Tested']
Testability,"When run with Python 3.6, test/testdistgeom.py fails with a SyntaxError; about a malformed character escape. This arises from a failure to escape; literal backslash characters in single-quoted SMILES strings (several; occurrences). Python 2 accepts this and does the right things with it,; but Python 3 rejects it. Fixes #2217",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2218:26,test,test,26,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2218,2,['test'],"['test', 'testdistgeom']"
Testability,"When running a forcefield conjugate on a molecule, if any two atoms are on top of each other this results in a divide by 0 and a 'nan' for results. This should be fixed before release. Attached is some testing code for this situation. You will see the segfault. Reported by: @milkypostman",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/629:202,test,testing,202,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/629,1,['test'],['testing']
Testability,"When taking the last molecule configuration from a Gaussian 03 output file (or fchk file, same issue) to a gzmat file, some of the bond lengths have wrong values. The -ogau xyz-type file does not have this problem, using the same g03 output file as the source.; I've uploaded a simple example g03 output file.; babel -ig03 h2o.log -ogau test_xyz.com; gives the correct (same as log file) atom 1 to atom 3 bond length of 0.95991; babel -ig03 h2o.log -ogzmat test_gzmat.com; gives an incorrect atom 1 to atom 3 bond length of 0.95990; The first file I found this with had a significantly larger error. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1008:327,log,log,327,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1008,3,['log'],['log']
Testability,"When the attached file is processed with babel, e.g. converted to SMILES, the aromaticity of one of the benzene is lost and the ring is converted to a cyclohexane:; babel test.mol2 -osmi; C(=O)(OCc1ccccc1)NC(C(NCP(OC(C(O)O)CC1CCCCC1)(O)O)=O)C 8cpa_ligand_001; 1 molecule converted; 2 info messages 12 audit log messages . The compound contains two benzene rings, one is changed. Paul W. Elsinhorst suggested a workaround:; Just a workaround,. do it like this: babel -imol2 test.mol2 -opdb | babel -ipdb -osmi. Paul. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/759:171,test,test,171,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/759,3,"['log', 'test']","['log', 'test']"
Testability,"When working on the Windows conda-forge versions, I got a compile error on the maeparser code (https://dev.azure.com/conda-forge/feedstock-builds/_build/results?buildId=90306&view=logs&jobId=171a126d-c574-5c8c-1269-ff3b989e923d&taskId=7225e372-3a5e-5b11-c153-719d50bbeacd&lineStart=510&lineEnd=528&colStart=1&colEnd=1) due to a mismatch between the calls to find_package in OpenBabel and Maeparser. In OB, there was a check for plain Boost to decide if Maeparser should be built but in the building of Maeparser, there were some component required. This PR will check for those components also in the OB code. That way, if the required components are missing, OB will just drop mae support instead of failing to compile. There are still several checks for Boost libraries in CmakeLists.txt, leading to rather unhelpful logs with alternating ""Boost found"" and ""Boost NOT found"" messages in unfortunate cases. There could probably be done more to alleviate this or at least be more clear in the error messages but I'll leave that to someone more experienced with Cmake.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2076:180,log,logs,180,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2076,2,['log'],['logs']
Testability,"While following the example at https://open-babel.readthedocs.io/en/latest/UseTheLibrary/PythonInstall.html#test-the-installation, noticed that the `mol.draw()` step fails on importing of `Tkinter` in Python 3.7. The module was renamed to `tkinter` in Python 3+ versions, and the `six` library supports the proper handling of the change: https://six.readthedocs.io/#module-six.moves (thanks to @tacaswell for the reference). I added `six` as the install requirement.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2157:108,test,test-the-installation,108,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2157,1,['test'],['test-the-installation']
Testability,"With -DPERL_BINDINGS=ON, cmake fails in the configure stage:; ... -- Found Perl: /usr/bin/perl (found version ""5.16.1"") ; -- Found PerlLibs: /usr/lib64/perl5/CORE/libperl.so (found version ""5.16.1"") ; -- Perl bindings will be compiled; CMake Error at scripts/CMakeLists.txt:245 (add_custom_target):; add_custom_target cannot create target ""bindings_perl"" because another; target with the same name already exists. The existing target is a module; library created in source directory ""/tmp/SBo/openbabel-2.3.2/scripts"".; See documentation for policy CMP0002 for more details.; ... The attached patch fixes the reported duplication and enables configuration (and subsequent) build to complete correctly. This patch tested on Linux - unsure of any impact on other platforms. Reported by: cwilling. Original Ticket: [openbabel/bugs/839](https://sourceforge.net/p/openbabel/bugs/839)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1219:713,test,tested,713,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1219,1,['test'],['tested']
Testability,"With OpenBabel 2.2.3, I get a segmentation fault when converting the attached MOPAC output file to a MOL file (see below). Most other MOPAC files are processed as expected, without error. Also, I tried processing the same file with the OpenBabel 2.2.0 GUI (on a separate system) and the conversion to MOL file seemed to work properly. gmagoon@pharos:~/threeDcheck_testdir$ babel -imoo QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.out -omol QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.mol2 ---errorlevel 5; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; Segmentation fault. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1133:538,Log,Log,538,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1133,5,['Log'],['Log']
Testability,"With current 11-molecule test suite, the following bugs; are obvious:. 417.cml: lots of kekulization errors; 417.cml c3d1, c3d2, mmads errors with typing &quot;O.co2&quot;. 1hvc.pdb: c3d1, c3d2, mmads errors with typing &quot;N&quot;. buckyball.xyz: lots of kekulization errors. Segfaults; 1hvc.pdb -&gt; bin -&gt; pdb; 1hvc.pdb -&gt; mol -&gt; pdb (assert 0 349); 1hvc.pdb -&gt; smi -&gt; pdb (1hvc.smi is empty); 1hvc.pdb -&gt; fix. table.xyz -&gt; smi -&gt; xyz (table.smi is empty); table.xyz -&gt; cacint; table.xyz -&gt; fix. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/410:25,test,test,25,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/410,2,"['assert', 'test']","['assert', 'test']"
Testability,"With the most recent Open Babel version 2.4.1, xyz files containing heteroaromatics are not converted to mol files correctly in some cases. Taking triazine as an example, the following sequence of commands leads to different results in versions 2.3.2 and 2.4.1, respectively:. obabel -:""n1cncnc1"" -O test.xyz --gen3d; obabel -ixyz test.xyz -omol. In version 2.3.2, the mol output is correct, whereas in version 2.4.1, a wrong radical structure is generated, ending in ""M RAD 1 6 2; M END"". Reported by: mdbu. Original Ticket: [openbabel/bugs/981](https://sourceforge.net/p/openbabel/bugs/981)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1360:300,test,test,300,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1360,2,['test'],['test']
Testability,"With this ```x.smi``` file: ```O=C(O)CCCCC``` I run this command:; ```; obabel -i smi x.smi -o xyz -O x1.xyz --gen3d; ```. The produced outputs are a little bit different with every run:; ```; $ diff x1.xyz x2.xyz ; 3,22c3,22; < O 2.80897 0.95953 -0.55185; < C 2.31033 -0.02262 -0.02710; < O 0.97006 -0.19149 0.06313; < C 3.07414 -1.17334 0.58772; < C 4.58550 -0.97549 0.48201; < C 5.34900 -2.14439 1.10655; < C 6.86037 -1.94108 0.99792; < C 7.62678 -3.09920 1.61670; < H 0.70739 -1.02022 0.50592; < H 2.78449 -2.09272 0.06679; < H 2.78449 -1.25134 1.64155; < H 4.87040 -0.04029 0.98021; < H 4.87040 -0.86979 -0.57232; < H 5.06672 -3.07791 0.60475; < H 5.06672 -2.24615 2.16150; < H 7.14793 -1.01060 1.50124; < H 7.14793 -1.84227 -0.05533; < H 7.38728 -3.20534 2.67958; < H 8.70461 -2.93105 1.52686; < H 7.38728 -4.04175 1.11413; ---; > O 2.79827 0.94419 -0.78732; > C 2.30225 0.05508 -0.11491; > O 0.96238 -0.10012 0.00253; > C 3.06876 -0.98420 0.67100; > C 4.57978 -0.80310 0.53395; > C 5.34512 -1.85925 1.33266; > C 6.85617 -1.67396 1.19240; > C 7.62428 -2.72048 1.98393; > H 0.70195 -0.85007 0.56965; > H 2.78027 -1.97412 0.30044; > H 2.78035 -0.89719 1.72445; > H 4.86364 0.19878 0.87975; > H 4.86359 -0.86301 -0.52423; > H 5.06357 -2.86003 0.98314; > H 5.06370 -1.79534 2.39085; > H 7.14294 -0.67605 1.54402; > H 7.14291 -1.74056 0.13642; > H 7.38553 -2.65956 3.05050; > H 8.70190 -2.56728 1.86813; > H 7.38557 -3.73020 1.63495; ```. The actual molecules are the same, typical ```RMSD``` differences are ```0.00190```, ```0.00102```, ```0.00067```. OpenBabel should never use random numbers to randomize molecules, because this is bad for testing frameworks that expect repeatability.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1934:1645,test,testing,1645,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1934,1,['test'],['testing']
Testability,"With this patch, MOL files now read in atom class information (3rd from final column in atom block) by default, and write it out if the ""-xa"" option is specified. This is the same as with the SMILES format. Test case roundtripping SMI->MOL->SMI:; obabel -:[CH4:1] -omol -xa | obabel -imol -osmi -xa; [CH4:1]",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/57:207,Test,Test,207,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/57,1,['Test'],['Test']
Testability,Wrong Gaussian Log --> XYZ conversion (with CounterPoise),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1105:15,Log,Log,15,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1105,1,['Log'],['Log']
Testability,Wrong enegy values when converting Gaussian .log files to .xyz files,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2636:45,log,log,45,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2636,1,['log'],['log']
Testability,X object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object te,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:53654,test,test,53654,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,XX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFi,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:52734,test,test,52734,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,XX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMakeFiles/obabel.dir/all] Error 2; ---------------------------------------------------------------; [100%] Linking CXX executable ../bin/test_runner; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/test_runner.dir/build.make:1049: bin/test_runner] Error 1; make[1]: *** [CMakeFiles/Makefile2:1166: test/CMakeFiles/test_runner.dir/all] Error 2; make: *** [Make,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2377:2983,test,test,2983,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377,1,['test'],['test']
Testability,[ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runne,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:53112,test,test,53112,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"[ Version affected/tested ]; Open Babel 2.0.2. [ Overview ]; When protonating with molecules with more than ~30k; atoms, the output becomes incorrect with (1) only; hydrogen atoms being output, and (2) a small number; (down to 4) of hydrogen atoms output being output. [ Details ]; The number of input atoms required to trigger the bug; varies with the molecule (however the driver might be; the number of output atoms). For example, a (slightly; processed) version of 2bo8 executes correctly when; 31076 lines/atoms are in the input file: 131072; lines/atoms are output. When 31077 lines/atoms are in; the input file, 4 lines/atoms are output. The switch; over for 1jrp is at 30850 lines, with 131074 lines of; output decreasing to 8 lines. Using ---errorlevel 5 does not reveal any errors. [ Command line ]; f=2bo8; head -31077 $f.pdbatm > $f.pdbatm.cut; babel -p -iPDB $f.pdb.cut -oPDB $f.pdbh. (the datafile required to reproduce this bug is 400kB; bz2 compressed - please contact me if you would like me; to send it to you). Reported by: tadpole_leg",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/568:19,test,tested,19,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/568,1,['test'],['tested']
Testability,[test-reaction-map.zip](https://github.com/openbabel/openbabel/files/1538600/test-reaction-map.zip). This PR attempt to fix the following bug:. OpenBabel get Segfault while reading CDX contains such a reaction map like this: A -> B -> C (I expect to get the 2 reactions from the output: A->B and B->C). I include a simple CDX to test for this case (please rename it from `.zip` to `.cdx`).,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1720:1,test,test-reaction-map,1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1720,3,['test'],"['test', 'test-reaction-map']"
Testability,"[x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 ; Operating system and version: Fedora 34. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. OpenBabel should correctly (de)protonate the following molecules or leave them untouched:. ![inputs](https://user-images.githubusercontent.com/1926852/124920501-4acc1a80-dfef-11eb-9ee8-9dbb7b3441a0.png). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. OpenBabel incorrectly modifies the input molecules and generates invalid SMILES.; <img width=""451"" alt=""outputs"" src=""https://user-images.githubusercontent.com/1926852/124920614-67685280-dfef-11eb-98f3-1b3273b0f25d.png"">. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```bash; #!/usr/bin/env bash. declare -a smiles_list=(; 'O=C1CCC=C2C=COC=C12'; 'COC=CC=O'; 'C1=NNN=N1'; 'CON(=O)=O'; 'COC1=CC(=O)C1=O'; 'ON1CC=NO1'; 'COP(=O)(OC)OC=CC=O'; 'COP1(=O)CCC(C=O)=CO1'; 'COP1(=O)CCCC(C=O)=CO1'; 'O=C1C=CC2C=NOC2=C1'; 'N1NC=NN1'; 'O=C1N=CC=C\C1=C1/ONC=C1'; 'CC1=C\C(ON1)=C1\C=C2C=CC=CC2=NC1=O'; 'O=CC1=C\C(ON1)=C1/C=CC=CC1=O'; 'C1ON2OC3=CNC=C3[C@H]2C=C1'; 'O=CC1=CONC1'; 'N1OO1'; 'COC1=CC(=O)C=CC1=C1C=CC(=O)C=C1OC'; 'COC1=CC(=O)C2=C3C(=CC=C2)C2=CC=CC4=C2C(C(OC)=CC4=O)=C13'; 'ON(=O)=C1C=CC=CC1=O'; 'O=CC1=C(OS(=O)=O)C2=CC=CC=C2S(=O)(=O)N1'; ). for smiles in ""${smiles_list[@]}""; do; output=$(obabel -:""${smiles}"" -ismi -ocan -p7.4 2>/dev/null); echo ""${smiles} -> ${output}""; done; ```. Output:; ```text; O=C1CCC=C2C=COC=C12 -> O=C1CCC=C2C1=C[O-]C=C2 ; COC=CC=O -> C[O-]C=CC=O ; C1=NNN=N1 ->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2397:1669,test,test,1669,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2397,1,['test'],['test']
Testability,"_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:16588,test,test,16588,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['test'],['test']
Testability,"_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:19211,test,test,19211,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,2,['test'],"['test', 'testexample']"
Testability,_bns.c#L2737; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L128; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1676; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1677; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/graphsym.cpp#L389; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/obconversion.cpp#L302; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/residue.cpp#L853. `ctest` output:. ```; test 5; Start 5: test_align_5; --; 5: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 5: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 17; Start 17: test_builder_1; --; 17: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 17: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 18; Start 18: test_builder_2; --; 18: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 18: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 19; Start 19: test_builder_3; --; 19: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/g,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:2393,test,test,2393,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/math.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/mol.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/phmodel.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/residue.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/ringtest.o; [ 98%] Building CXX object te,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:54369,test,test,54369,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"`; does not. *However*. I noticed `C[C@H]1CC[N@@]2CCC[C@@H]12` is described with nitrogen as a stereocentre. Thus, when submitted *as such* to either [PubChem Sketcher](https://pubchem.ncbi.nlm.nih.gov/edit3/index.html) or the [ChemDraw JS sample page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) visualized with a wedge:. ![initial_state](https://user-images.githubusercontent.com/19709084/123659339-1b185800-d822-11eb-9fc5-2cbd3506ad28.png). Since the conversion SMILES to canonical SMILES ; ```; obabel -:""C[C@H]1CC[N@@]2CCC[C@@H]12"" -ocan; ```; yields `C[C@H]1CC[N@]2[C@H]1CCC2` with the same issue in visualization and format conversion, I passed the canonical SMILES to RDKit (version 2020.09.4, as provided by Debian's repositories) :; ```; >>> import rdkit; >>> from rdkit import Chem; >>> ; >>> # SMILES to mol:; >>> m = Chem.MolFromSmiles(""C[C@H]1CC[N@]2[C@H]1CCC2""); >>> ; >>> # mol to SMILES:; >>> Chem.MolToSmiles(m); 'C[C@H]1CCN2CCC[C@@H]12'; >>> ; ```; *This* newly generated SMILES string is visualized differently now, without the wedge on nitrogen. ![later_state](https://user-images.githubusercontent.com/19709084/123661419-0b017800-d824-11eb-8b9a-e1a5a517ffb5.png). and the attempt to convert this to a 3D `.xyz` by; ```; obabel -:""C[C@H]1CCN2CCC[C@@H]12"" -h --gen3d -oxyz -O output.xyz; ```; does not yield any warning (even if it is not OpenBabel's canonical SMILES string, `C[C@H]1CCN2[C@H]1CCC2`). Perhaps this is a bypass for a few instances when OpenBabel otherwise states ""Open Babel Warning in CorrectStereoAtoms"", but is there a more efficient way to for this in OpenBabel itself? Is there a ""SMILES sanitizer"", other than the options listed in section 18.1.7?. <!-- ## Steps to Reproduce -->; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2393:4074,test,test,4074,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2393,1,['test'],['test']
Testability,`OBMol` has both `NumAtoms` and `NumHvyAtoms` while `OBResidue` only has `GetNumAtoms`. This PR adds `GetNumHvyAtoms` to `OBResidue`. I am not familiar with OpenBabel's tests. I added simple tests for `GetNumAtoms` and `GetNumHvyAtoms` but advice on how to do this properly is very welcome.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2299:169,test,tests,169,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2299,2,['test'],['tests']
Testability,```; 178/227 Test #178: test_charge_mmff94_1 .............***Failed 0.46 sec; # Testing MMFF94 Charge Model...; Bail out! Cannot load charge model!. Start 179: test_charge_gasteiger_1; 179/227 Test #179: test_charge_gasteiger_1 ..........***Failed 0.45 sec; # Testing GASTEIGER Charge Model...; Bail out! Cannot load charge model!; ```. ## Environment Information; Open Babel version: 3-1-1-178-g2b211d6ac; Operating system and version: FreeBSD 13.2,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2604:13,Test,Test,13,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2604,4,['Test'],"['Test', 'Testing']"
Testability,"```; [92/558] Building CXX object src/CMakeFiles/openbabel.dir/mol.cpp.o; In member function ‘void OpenBabel::OBMol::ConnectTheDots()’:; cc1plus: warning: ‘void* __builtin_memset(void*, int, long unsigned int)’: specified size 18446744073709551608 exceeds maximum object size 9223372036854775807 [-Wstringop-overflow=]; ```; The change I've made is to guard against a negative value. I think the compiler is maybe being extra cautious. On the other hand, maybe it's a true logic error in the original code - can you take a quick look @ghutchis.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2211:473,log,logic,473,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2211,1,['log'],['logic']
Testability,`obabel` and InChI/InChIKey logging issues,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2505:28,log,logging,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2505,1,['log'],['logging']
Testability,a) The ECFP implementation was expecting the ``std::vector<int>`` to be treated as a list of hashes whilst the callers were expected it to be a bit set. Whilst return the raw hash values is useful it would require a new API point.; b) Resolves #1651. With these changes the fingerprint scores 76.2% on the Briem Lessel benchmark. . Also looks like the ``Fold()`` function is doing the wrong thing elsewhere too. For example if I generate MACCS keys...; ```; 0000000000021000014416cf1be5b083ad2fef7f1f	204; 0004200000000021418004afa160b00910a1e46a1b	205; 8004040000100200000816cf8d69b847856dfefb19	206; 000000002000002141d034e82b61b08b01230d2d1f	207; 00000000204000840194b1091b73b3e781eb2fff1f	208; ```; and then fold them to say 256 bits... one would expect the output to be padded with trailing zeros; ```; 000000000000300001d204de90699425843952fe1f0000000000000000000000	173; 801480800d580b84e5fc9ded3773d16fd6efeb7f1f0000000000000000000000	174; 000000040000000000000006800c2e84290404d6080000000000000000000000	175; 0000000000000000810002401b510165546fc3ff1f0000000000000000000000	176; 000000002000002001d0169e9b61b16340e3cdfb1f0000000000000000000000	177; 0000000000400084015085871013a7e58deff7df1f0000000000000000000000	178; ```; good... but now 512...; ```; 000004000001002001c4301e9b61bd43cce17deb1f00000000000000000000007373000000000000510000000000000000000000000000000900000006000000	17; 0000000000000001038002461a81a18149a1c5391f00000000000000000000007373000000000000510000000000000024000000000000002400000000000000	18; 0000000000002000800230510000016604dcbafa1f00000000000000000000007373000000000000b10000000000000090460828177f00000000000000000000	19; 0000000000000000004434c80960b1e38963afff1f00000000000000000000007373000000000000210000000000000090be6d000000000098be6d0000000000	20; 000000002000102181d41ecf133192635c6feafd1f00000000000000000000007373000000000000f10100000000000058f86d000000000008fc6e0000000000	21; 0000800008108364600cb1703f59ecafdbbb7fff1f00000000000000000000007373000000,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1653:319,benchmark,benchmark,319,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1653,1,['benchmark'],['benchmark']
Testability,"a); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:5986,test,test,5986,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['test'],['test']
Testability,"abel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: MacOS Mojave. ## Expected Behavior; python3 -c 'import openbabel' <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior. python3 -c 'import openbabel'; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/usr/local/lib/python3.8/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/usr/local/lib/python3.8/site-packages/openbabel/openbabel.py"", line 22, in <module>; from . import _openbabel; ImportError: dlopen(/usr/local/lib/python3.8/site-packages/openbabel/_openbabel.cpython-38-darwin.so, 2): Symbol not found: __ZN9OpenBabel9aromtyperE; Referenced from: /usr/local/lib/python3.8/site-packages/openbabel/_openbabel.cpython-38-darwin.so; Expected in: flat namespace; in /usr/local/lib/python3.8/site-packages/openbabel/_openbabel.cpython-38-darwin.so; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; python3 -c 'import openbabel' <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2244:1997,test,test,1997,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2244,1,['test'],['test']
Testability,"abel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:Open Babel 2.4.1 -- Apr 4 2018 -- 09:45:46; Operating system and version:ubuntu 16.04 LTS. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The current API documentation gives the following details for the function of interest :. void CopyConformer ( double * c,int nconf ) . Copy the conformer nconf into the array c; Warning: Does no checking to see if c is large enough . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; in fact I saw that the opposite was done, the content of the array c is copied into the nconf. the code is; void OBMol::CopyConformer(double *c,int idx); {; // obAssert(!_vconf.empty() && (unsigned)idx < _vconf.size());; memcpy((char*)_vconf[idx],(char*)c,sizeof(double)*3*NumAtoms());; }. <!--- If suggesting a change/improvement, explain the difference from current behavior —>; if I do not make any mistake, I would suggest the new code; void OBMol::CopyConformer(double *c,int idx); {; // obAssert(!_vconf.empty() && (unsigned)idx < _vconf.size());; memcpy((char*)c,(char*)_vconf[idx],sizeof(double)*3*NumAtoms());; }. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1907:2040,test,test,2040,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1907,1,['test'],['test']
Testability,"ad of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 82; Start 82: test_regressions_1; --; 82: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 82: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; --; test 83; Start 83: test_regressions_221; --; 83: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 83: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 83: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 83: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 83: /usr",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:8387,test,test,8387,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,akeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/math.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/mol.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/phmodel.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/residue.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/ringtest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartstest.o; [ 98%] Building CXX obje,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:54437,test,test,54437,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"allet lcms ldap libnotify mad mng modules mp3 mp4 mpeg multilib ncurses nls nptl nvidia ogg opengl openmp pam pango pcre pdf phonon plasma png policykit ppds qml qt3support qt4 qt5 readline sdl seccomp semantic-desktop session spell ssl startup-notification svg systemd tcpd tiff truetype udev udisks unicode upower usb vorbis wayland widgets wxwidgets x264 xattr xcb xcomposite xinerama xml xscreensaver xv xvid xwayland zlib"" ABI_X86=""64"" ALSA_CARDS=""ali5451 als4000 atiixp atiixp-modem bt87x ca0106 cmipci emu10k1x ens1370 ens1371 es1938 es1968 fm801 hda-intel intel8x0 intel8x0m maestro3 trident usb-audio via82xx via82xx-modem ymfpci"" APACHE2_MODULES=""authn_core authz_core socache_shmcb unixd actions alias auth_basic authn_alias authn_anon authn_dbm authn_default authn_file authz_dbm authz_default authz_groupfile authz_host authz_owner authz_user autoindex cache cgi cgid dav dav_fs dav_lock deflate dir disk_cache env expires ext_filter file_cache filter headers include info log_config logio mem_cache mime mime_magic negotiation rewrite setenvif speling status unique_id userdir usertrack vhost_alias"" CALLIGRA_FEATURES=""kexi words flow plan sheets stage tables krita karbon braindump author"" COLLECTD_PLUGINS=""df interface irq load memory rrdtool swap syslog"" CPU_FLAGS_X86=""mmx mmxext sse sse2"" ELIBC=""glibc"" GPSD_PROTOCOLS=""ashtech aivdm earthmate evermore fv18 garmin garmintxt gpsclock isync itrax mtk3301 nmea ntrip navcom oceanserver oldstyle oncore rtcm104v2 rtcm104v3 sirf skytraq superstar2 timing tsip tripmate tnt ublox ubx"" INPUT_DEVICES=""evdev synaptics"" KERNEL=""linux"" L10N=""en en_AU en_GB en_US en-AU en-GB en-US"" LCD_DEVICES=""bayrad cfontz cfontz633 glk hd44780 lb216 lcdm001 mtxorb ncurses text"" LIBREOFFICE_EXTENSIONS=""presenter-console presenter-minimizer"" OFFICE_IMPLEMENTATION=""libreoffice"" PHP_TARGETS=""php5-6"" PYTHON_SINGLE_TARGET=""python3_4"" PYTHON_TARGETS=""python2_7 python3_4"" RUBY_TARGETS=""ruby21 ruby22"" USERLAND=""GNU"" VIDEO_CARDS=""nvidia intel"" XTABLES_ADDON",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566:11572,log,logio,11572,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566,1,['log'],['logio']
Testability,"aluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to su",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:2925,test,test,2925,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,2,['test'],"['test', 'testbabel']"
Testability,"amples where obabel fails. . % obabel mymol.smi -oxyz; 6. O 0.00000 0.00000 0.00000; Br 0.00000 0.00000 0.00000; H 0.00000 0.00000 0.00000; C 0.00000 0.00000 0.00000; C 0.00000 0.00000 0.00000; Br 0.00000 0.00000 0.00000. % obabel mymol.smi -osdf; OpenBabel05171709412D. 6 3 0 0 0 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 O 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 Br 0 3 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 Br 0 5 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 2 3 1 0 0 0 0; 4 5 2 0 0 0 0; M CHG 2 2 1 6 -1; M END; $$$$. -Xianghai Sheng. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1570:2078,test,test,2078,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1570,1,['test'],['test']
Testability,another test,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/387:8,test,test,8,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/387,1,['test'],['test']
Testability,"ass. ## Errors from failing tests. ```sh; Test project /home/jfkonecn/repos/openbabel/build; Start 212: pytest_babel; 1/1 Test #212: pytest_babel .....................***Failed Error regular expression found in output. Regex=[ERROR] 1.16 sec; /home/jfkonecn/repos/openbabel/scripts/python:/home/jfkonecn/repos/openbabel/build/lib; .......E/usr/lib/python3.10/subprocess.py:955: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used; self.stdin = io.open(p2cwrite, 'wb', bufsize); /usr/lib/python3.10/subprocess.py:961: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used; self.stdout = io.open(c2pread, 'rb', bufsize); /usr/lib/python3.10/subprocess.py:966: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used; self.stderr = io.open(errread, 'rb', bufsize); ........; ======================================================================; ERROR: testOBRMS (__main__.TestOBabel); Sanity checks for obrms; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/home/jfkonecn/repos/openbabel/test/testbabel.py"", line 529, in testOBRMS; output, err = run_exec( ""obrms -t 10 %s %s""%(sdffile,sdffile)); File ""/home/jfkonecn/repos/openbabel/test/testbabel.py"", line 56, in run_exec; p = Popen([exe] + broken[1:],; File ""/usr/lib/python3.10/subprocess.py"", line 971, in __init__; self._execute_child(args, executable, preexec_fn, close_fds,; File ""/usr/lib/python3.10/subprocess.py"", line 1863, in _execute_child; raise child_exception_type(errno_num, err_msg, err_filename); FileNotFoundError: [Errno 2] No such file or directory: '../bin/obrms'. ----------------------------------------------------------------------; Ran 16 tests in 1.128s. FAILED (errors=1). CMake Error at pytest_babel.cmake:20 (MESSAGE):; 1. 0% tests passed, 1 tests failed out of 1. Total T",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2662:1773,test,testOBRMS,1773,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2662,1,['test'],['testOBRMS']
Testability,"at happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. The geometry is converted to `P 1` when the symmetry operations are insufficient, but *no* messages are issued for the full HM symbol:. | `space_group_name_H-M_alt` in input CIF | `_space_group_symop_operation_xyz` in input CIF | error messages | `_space_group_name_H-M_alt` in generated CIF |; |-----------------------------------------|-------------------------------------------------|:-----:|----------------------------------------------|; | `F m -3 m`		(short)	| null		 	| N | `F m 3 m` |; | `F m -3 m`		(short)	| insufficient	| **Y** | `P 1` |; | `F m -3 m`		(short)	| all			| N | `F m 3 m` |; | `F 4/m -3 2/m`	(full)	| null			| N | `F m 3 m` |; | `F 4/m -3 2/m`	(full)	| insufficient	| **N** | `P 1` |; | `F 4/m -3 2/m`	(full)	| all			| N | `F m 3 m` |. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. Prepare the following file named as NaCl.cif:. ```; data_NaCl; _cell_length_a 5.6; _cell_length_b 5.6; _cell_length_c 5.6; _cell_angle_alpha 90.0; _cell_angle_beta 90.0; _cell_angle_gamma 90.0; _chemical_name_common NaCl; _space_group_IT_number 225; _space_group_name_H-M_alt 'F m -3 m'; loop_; _space_group_symop_operation_xyz; x,y,z; loop_; _atom_site_type_symbol; _atom_site_fract_x; _atom_site_fract_y; _atom_site_fract_z; Na 0.0 0.0 0.0; Na 0.5 0.5 0.0; Na 0.5 0.0 0.5; Na 0.0 0.5 0.5; Cl 0.5 0.0 0.0; Cl 0.0 0.5 0.0; Cl 0.0 0.0 0.5; Cl 0.5 0.5 0.5; ```. Here, `_space_group_symop_operation_xyz` is apparently insufficient. <details>; <summary>all of the operations for Fm-3m</summary>; <pre><code> x,y,z; -x,-y,z; -x,y,-z; x,-y,-z; z,x,y; z,-x,-y; -z,-x,y; -z,x,-y; y,z,x; -y,z,-x; y,-z,-x; -y,-z,x; y,x,-z; -y",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2586:4120,test,test,4120,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2586,1,['test'],['test']
Testability,"ated based on the typical bond lengths and angles of the atoms involved. ## Actual Behavior; There is a check for whether the molecule HasNonZeroCoords() beforehand. If all the present coordinates are zero, then the hydrogen coordinates are left as zero also. This seems reasonable for most molecules, where it may be assumed that if the coordinates are all zero, then they will be set to something else later, so there is no use in generating coordinates for the hydrogens. But it leads to odd behavior if the molecule has a single heavy atom, such as water, ammonia, methane, etc. With these molecules, coordinates are generated for the hydrogens so long as the heavy atom coordinate is not located at the origin. For context, this came up when I was using simple test cases to create a bond adding routine that constructs valid molecules from sets of disconnected atoms produced by a generative model. While the issue was resolved by simply changing the coordinates of the test case molecules, the behavior seemed odd enough (and the proposed solution simple enough) that I would open an issue. ## Steps to Reproduce. ```; from openbabel import openbabel as ob. def test_case(atomic_num, x, y, z):; mol = ob.OBMol(); atom = mol.NewAtom(); atom.SetAtomicNum(atomic_num); atom.SetVector(x, y, z); mol.BeginModify(); ob.OBAtomAssignTypicalImplicitHydrogens(atom); mol.EndModify(); mol.AddHydrogens(); print('with {} at ({:.2f}, {:.2f}, {:.2f}),'.format(; ob.GetSymbol(atomic_num), x, y, z; )); for a in ob.OBMolAtomIter(mol):; if a != atom:; print(' H placed at ({:.2f}, {:.2f}, {:.2f})'.format(; a.GetX(), a.GetY(), a.GetZ(); )). test_case(8, 0, 0, 0); test_case(8, 1, 0, 0); ```; Output:; ```; mtr22@g001:~/gan$ python3 test_ob_problem.py; with O at (0.00, 0.00, 0.00),; H placed at (0.00, 0.00, 0.00); H placed at (0.00, 0.00, 0.00); with O at (1.00, 0.00, 0.00),; H placed at (1.97, 0.00, 0.00); H placed at (0.68, -0.53, -0.75; ```; ## Proposed Solution; An optional argument for AddHydrogens to ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2365:1901,test,test,1901,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2365,1,['test'],['test']
Testability,"ating system and version: Debian 12.5. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; openbabel yields SMILES without chirality for [spiro&#x5b;4.4&#x5d;nonatetraene](https://www.chemspider.com/Chemical-Structure.123328.html): `C1=CC2(C=C1)C=CC=C2`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. openbabel thinks the spiro center is chiral: `C1=C[C@]2(C=C1)C=CC=C2`, while it works successfully for spiro[2.2]pentadiene, `C1=CC21C=C2`, spiro[3.3]heptane, `C1CC2(C1)CCC2`, and spiro[4.4]nonane, `C1CCC2(C1)CCCC2`. I checked all of the combinations of (cyclopropane, cyclopropene, cyclopentane, and cyclopentadiene), and found that spiro[2.4]heptatriene is also misclassified as chiral: `C1=C[C@]2(C=C1)C=C2`. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```xml; <?xml version=""1.0"" encoding=""UTF-8""?>; <molecule xmlns=""http://www.xml-cml.org/schema"">; <atomArray>; <atom id=""a1"" elementType=""C"" x3=""0"" y3=""0"" z3=""0""/>; <atom id=""a2"" elementType=""C"" x3=""-0.94"" y3=""-1.2"" z3=""0""/>; <atom id=""a3"" elementType=""C"" x3=""-2.258"" y3=""-0.707"" z3=""0""/>; <atom id=""a4"" elementType=""C"" x3=""-2.258"" y3=""0.707"" z3=""0""/>; <atom id=""a5"" elementType=""C"" x3=""-0.94"" y3=""1.2"" z3=""0""/>; <atom id=""a6"" elementType=""C"" x3=""0.94"" y3=""0"" z3=""-1.2""/>; <atom id=""a7"" elementType=""C"" x3=""2.258"" y3=""0"" z3=""-0.707""/>; <atom id=""a8"" elementType=""C"" x3=""2.258"" y3=""0"" z3=""0.707""/>; <atom id=""a9"" elementType=""C"" x3=""0.94"" y3=""0"" z3=""1.2""/>; <atom id=""a10"" elementType=""H"" x3=""-0.650"" y3=""-2.230"" z3=""0""/>; <atom id=""a11"" elementType=""H"" x3=""-3.137"" y3=""-1.316"" z3=""0""/>; <atom id=""a12"" elementType=""H",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2674:1677,test,test,1677,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2674,1,['test'],['test']
Testability,"ation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-d",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:7239,test,test,7239,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,2,['test'],"['test', 'testfastsearch']"
Testability,"avogadro/testfiles/methane.mpo crashes quite a lot in Avogadro if I select some vibrations or try to animate them. Curiously enough, transforming it to molden format and visualizing the resulting vibrations does work fine in Avogadro, so I assume this is a bug in the molpro format code. Reported by: @mbanck",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/900:9,test,testfiles,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/900,1,['test'],['testfiles']
Testability,babel nanotube.xyz -O nanotube.cif; or ; obabel nanotube.xyz -O nanotube.cif . ==============================; *** Open Babel Error in expand_cycle; maximum time exceeded...; ==============================; *** Open Babel Error in expand_cycle; maximum time exceeded...; ==============================; *** Open Babel Error in ... both fail in converting a simple xyz file nanotube.xyz (attached). Using gdb I find the code is hung inside kekulize.cpp . If you change the C's to H's in nanotube.xyz babel runs fine. . babel nanotube_H.xyz -O nanotube_H.cif; 1 molecule converted; 9 audit log messages . I have attached that working version too. I recompiled babel with -g -O0 and that did not help. Ron Cohen; rcohen@gl.ciw.edu. Reported by: recohen. Original Ticket: [openbabel/bugs/870](https://sourceforge.net/p/openbabel/bugs/870),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1250:588,log,log,588,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1250,1,['log'],['log']
Testability,"bel in gdb produces the following output:. (gdb) run; Starting program: /home/cjh/local/bin/babel -ig03 1.gjf -oreport; [Thread debugging using libthread_db enabled]. Program received signal SIGSEGV, Segmentation fault.; __strlen_sse2 () at ../sysdeps/x86_64/multiarch/../strlen.S:31; 31	../sysdeps/x86_64/multiarch/../strlen.S: No such file or directory.; 	in ../sysdeps/x86_64/multiarch/../strlen.S; (gdb) bt; #0 __strlen_sse2 () at ../sysdeps/x86_64/multiarch/../strlen.S:31; #1 0x00007ffff6cfa5cc in std::string::operator+=(char const*) () from /usr/lib/libstdc++.so.6; #2 0x00007fffed87e180 in OpenBabel::GaussianOutputFormat::ReadMolecule (this=0x7fffeda97610, pOb=0x62f040, pConv=0x7fffffffd5a0); at /home/cjh/local/src/openbabel/src/formats/gaussformat.cpp:324; #3 0x00007ffff770ec3c in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffd5a0, pFormat=0x7fffeda97610); at /home/cjh/local/src/openbabel/src/obmolecformat.cpp:105; #4 0x00007ffff6389d97 in OpenBabel::OBMoleculeFormat::ReadChemObject (this=0x7fffeda97610, pConv=0x7fffffffd5a0); at /home/cjh/local/src/openbabel/include/openbabel/obmolecformat.h:114; #5 0x00007ffff76970af in OpenBabel::OBConversion::Convert (this=0x7fffffffd5a0) at /home/cjh/local/src/openbabel/src/obconversion.cpp:485; #6 0x00007ffff7696d99 in OpenBabel::OBConversion::Convert (this=0x7fffffffd5a0, is=0x7fffffffcdf0, os=0x0) at /home/cjh/local/src/openbabel/src/obconversion.cpp:418; #7 0x00007ffff769af11 in OpenBabel::OBConversion::FullConvert (this=0x7fffffffd5a0, FileList=..., OutputFileName=..., OutputFileList=...); at /home/cjh/local/src/openbabel/src/obconversion.cpp:1378; #8 0x000000000040573e in main (argc=4, argv=0x7fffffffd8f8) at /home/cjh/local/src/openbabel/tools/babel.cpp:347. This problem seems specific to the Gaussian file parser; for example, this works fine. $ babel -igamin emptyfile -oreport; 0 molecules converted; 2 audit log messages . This problem occurs as of r4430 on ubuntu-10.04 x86_64. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1098:2040,log,log,2040,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1098,1,['log'],['log']
Testability,"bel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ x] This is a feature request. ## Environment Information; Open Babel version: Open Babel 2.4.1 -- Dec 13 2017 -- 10:41:11; Operating system and version: Linux styx 4.9.0-4-amd64 #1 SMP Debian 4.9.65-3 (2017-12-03) x86_64 GNU/Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. I would like to have tinker txyz output files with atom types corresponding to a custom force field. ## Actual Behavior. Currently, the MM2 atom types are used. Using write option 3, atom types for the MM3 forcefield can be written. I would like to use SMILE code and the Atom Class informations feature as an atom type for each atom. Below is the OpenSmiles specification for Atom Class: . > An ""atom class"" is an arbitrary integer, a number that has no chemical meaning. It is used by applications to mark atoms in ways that are meaningful only to the application. Multiple atoms may be labeled with the same atom class.; > The atom class is specified after all other properties in square brackets. From Daylight:. > SMILES Atom Expression Grammar:; > atom 		:	SYMBOL; > 			|	[ WEIGHT SYMBOL mods ]; > 			|	[ WEIGHT SYMBOL mods : CLASS ]; > 			;; > mods : mod mods; > 			;; > mod : HCOUNT | CHARGE | CHIRAL; > 			;. Exemple:. Ethanol smile code CCO is written:. `[C:345]([H:34])([H:34])([H:34])[C:234]([H:34])([H:34])[O:67]([H:68])`. where hydrogens have been written explicitly and atom class numbers correspond to some force field types. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1732:2282,test,test,2282,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1732,1,['test'],['test']
Testability,"binchi/ichicano.c:1676:21 in ; 211: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; 211: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:21 in ; 211: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; --; test 212; Start 212: inchiSamplesTechMan.sdf_Test; --; 212: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 212: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 212: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 212: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMA",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:22161,test,test,22161,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"binchi/ichicano.c:1677:21 in ; 212: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; 212: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 212: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 213; Start 213: inchiSteffen_PubChem.smi_Test; --; 213: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 213: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 213: /usr/include/string.h:44:28: note: nonnull attribute specified here; 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 213: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 213: /usr/include/string.h:44:28: note: nonnull attribute specified here; 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; 213: ../src/formats/libinchi/ichi_bns.c:2737:66: ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:24229,test,test,24229,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"bu"" received signal SIGFPE, Arithmetic exception.; [Switching to Thread 0x7ffff5fc2700 (LWP 9010)]; 0x0000000000dc98c9 in OpenBabel::vector3::normalize() (); (gdb) bt; #0 0x0000000000dc98c9 in OpenBabel::vector3::normalize() (); #1 0x0000000000e0543f in OpenBabel::OBBuilder::GetNewBondVector(OpenBabel::OBAtom*, double) (); #2 0x0000000000b4723b in OpenBabel::OBMol::AddNewHydrogens(OpenBabel::HydrogenType, bool, double); (); #3 0x0000000000d1b06f in OpenBabel::OBGroupContrib::Predict(OpenBabel::OBBase*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (); ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; This happens with any PDB structure containing the PA0 ligand (e.g. 3E3Z), a phenyl ring with arsenic attached. Getting the logP property. Example code (the 'content' string contains a mol format string with the PA0 compound:. std::ios_base::openmode imode = std::ios_base::in|std::ios_base::binary;; std::ios_base::openmode omode = std::ios_base::out|std::ios_base::binary;; std::stringstream ssi(content, imode);; std::stringstream sso("""", omode);; OpenBabel::OBConversion conv(&ssi, &sso);; OpenBabel::OBFormat* molformat = conv.FindFormat(""mol"");; conv.SetInFormat(molformat);; OpenBabel::OBMol mol;; molformat->ReadMolecule(&mol, &conv);; json js;; OpenBabel::OBDescriptor* pDesc = OpenBabel::OBDescriptor::FindType(""logP"");; if(pDesc) js[""LogP""] = pDesc->Predict(&mol);. mol string for PA0.178:A:; PA0; JL BFD1119190613; Written by the BioLeap Fragment Displayer(TM)[BioLeap, Inc.]; 12 12 0 0 0 0 0 0 0 0999 V2000; 7.2100 -10.0520 2.6110 As 0 3 0 0 0 0 0 0 0 1 0 0; 7.1560 -10.0390 1.2400 C 0 0 0 0 0 0 0 0 0 2 0 0; 6.2490 -9.2320 0.5650 C 0 0 0 0 0 0 0 0 0 3 0 0; 6.2170 -9.2220 -0.8210 C 0 0 0 0 0 0 0 0 0 4 0 0; 7.08",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2088:2302,log,logP,2302,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2088,1,['log'],['logP']
Testability,"bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: Open Babel 3.1.1; Operating system and version: Windows 11. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I'm just trying to convert a SMILES string to an .xyz file using the --gen3d to get an approximate low energy conformation. I expect to get an xyz file with 3d coordinates. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior --> It generates the xyz file, but I do not get 3D coordinates ( in that the z column is all 0s) showing that no optimization is happening. I get the following output:. ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldMMFF94::ParseParamFile; Cannot open parameter file; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldUFF::ParseParamFile; Cannot open UFF.prm; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldUFF::SetTypes; Cannot open UFF.prm; 1 molecule converted. ## Steps to Reproduce; I am using the command 'obabel -:""CCCC"" -O 1.xyz --gen3D -xb -h' in the command line.; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. I saw a different thread about someone who added BABEL_DATADIR as an environment variable and fixing a similar problem, but that didn't work for me.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2676:2055,test,test,2055,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676,1,['test'],['test']
Testability,"cccc2CN1; C[C@H]1Cc2ccccc2CN1; FC[C@H]1Cc2ccccc2CN1; N[C@@H]1CCSC1=O; N[C@H]1CCSC1=O; OC(=O)C[C@@H]1CCNC1; OC(=O)C[C@H]1CCNC1; OC[C@H]1Cc2ccccc2CN1. Failed InChI:; C\C=N/OC[C@H]1CCCN1C; CN(C)CC#C[C@H]1CCCN1; CN1CCC[C@H]1c2cccnc2; CP(O)(=O)C[C@H](O)CN; FC[C@@H]1CCCN1; N[C@H]1CCn2cccc2C1; NC[C@@H]1CC(=O)NO1; NC[C@H]1CC(=O)NO1; NC[C@H]1COc2ccccc2O1; OC(=O)[C@@H]1CCCN1. Failed SMILES:; CC(C)[C@H](N)C(O)=O; CC[C@H](O)C([O-])=O; CO[C@@H](CN)c1ccccc1; CO[C@H](CN)c1ccccc1; N[C@@H](CO)C(O)=O; N[C@H](CO)C(O)=O; NCCC[C@H](N)C(O)=O; NCCSC[C@H](N)C(O)=O. Command being used: babel ---errorlevel 2 -ocan -ismi <string>; (or -oinchi for inchi output). Open Babel 2.1.1 -- Sep 28 2007 -- 18:13:29; Altix Itanium; Intel(R) C++ Itanium(R) Compiler for Itanium(R)-based applications; Version 8.0 Build 20031017 Package ID: l_cc_p_8.0.056; Copyright (C) 1985-2003 Intel Corporation. All rights reserved. To be honest, I don't have many independent mechanisms to verify that OpenBabel is the point of failure in all cases; I can't read the SMILES 'by eye', and I don't have access to other internal tools to test the chirality. I detect 'disruption' when the OpenBabel generated key (either 'can' or 'inchi' format) differs depending on if I use the molfile or SMILES string supplied by the vendor; it's possible that the vendor has not done the molfile-to-SMILES mapping properly, and that the chirality differs within the vendor DB. So I am passing judgment on the molecules based on graphical visualization provided by PubChem:. http://pubchem.ncbi.nlm.nih.gov/edit/. ... and whenever I've spot-checked a disruption by this (unwieldy) mechanism, the chirality of the vendor-supplied SMILES matches that of the key generated by OB via the vendor-supplied molfile, but not the OB key made from the vendor-supplied SMILES (I can't be sure that there is not a bug within the PubChem tool, though). In a few cases, converting to InChI seems to demonstrate indisputable lost of stereochemical information. The following",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/683:2071,test,test,2071,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683,1,['test'],['test']
Testability,"ceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Gentoo Linux, 5.6.15-gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Failed 0/8 test programs. 0/34 subtests failed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Can't call method ""GetMass"" on an undefined value at t/data.t line 21.; t/data.t ........... Dubious, test returned 255 (wstat 65280, 0xff00) ; Failed 1/2 subtests . t/data.t (Wstat: 65280 Tests: 1 Failed: 0); Non-zero exit status: 255; Parse errors: Bad plan. You planned 2 tests but ran 1.; Files=8, Tests=34, 0 wallclock secs ( 0.03 usr 0.01 sys + 0.39 cusr 0.06 csys = 0.49 CPU); Result: FAIL; Failed 1/8 test programs. 0/34 subtests failed. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; swig -perl5 -c++ -small -O -templatereduce -naturalvar -I/usr/include/openbabel3 -o scrips/perl/openbabel-perl.cpp -outdir scrips/perl scripts/openbabel-perl.i; cd scrips/perl; perl Makefile.PL PREFIX=/usr INSTALLDIRS=vendor INSTALLMAN3DIR=none DESTDIR=/var/tmp/portage/sci-chemistry/openbabel-perl-3.1.1/image INC=-I/usr/include/openbabel3; make -j17 -l4 'OTHERLDFLAGS=-Wl,-O1 -Wl,--as-needed -Wl,--hash-style=gnu; make -j17 -l4 test; ```. The offending line in `scrips/perl/t/data.t` is:; ```; my $mass = $Chemistry::OpenBabel::etab->GetMass(2);; ```; I don't know much about p",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2247:1422,Test,Tests,1422,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247,1,['Test'],['Tests']
Testability,check reports failed test,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/750:21,test,test,21,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/750,1,['test'],['test']
Testability,"ck to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:5659,test,test,5659,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,2,['test'],"['test', 'testsym']"
Testability,cmake question & make test error,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2234:22,test,test,22,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234,1,['test'],['test']
Testability,"cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really need to be that long-running; ; run the coverage only, say, once per day;; ... I'd be very happy for feedback on this. [1] Issues https://github.com/openbabel/openbabel/issues/1937 https://github.com/openbabel/openbabel/issues/1893 https://github.com/openbabel/openbabel/issues/1321 https://github.com/openbabel/openbabel/issues/1861; I searched for ""eqeq"" through the tests and there was no match, i.e. it seemed like the implementation was entirely untested, so I started looking for test coverage re",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2312:1887,Test,Test,1887,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312,1,['Test'],['Test']
Testability,"conversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behav",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:12962,test,test,12962,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,ct test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CX,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:53429,test,test,53429,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,ct test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX o,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:53507,test,test,53507,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,ct test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:53582,test,test,53582,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"ctions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really need to be that long-running; ; run the coverage only, say, once per day;; ... I'd be very happy for feedback on this. [1] Issues https://github.com/openbabel/openbabel/issues/1937 https://github.com/openbabel/openbabel/issues/1893 https://github.com/openbabel/openbabel/issues/1321 https://github.com/openbabel/openbabel/issues/1861; I searched for ""eqeq"" through the tests and there was no match, i.e. i",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2312:1790,Test,Test,1790,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312,1,['Test'],['Test']
Testability,"cule converted. $ obabel -:""N.O"" -h --gen3D -omol2 --partialcharge none | obabel -imol2 -omol2 -r --partialcharge none; 1 molecule converted; @<TRIPOS>MOLECULE; *****; 4 3 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 N 1.3360 0.8278 1.4241 N.3 1 UNL11 0.0000; 2 H 2.2288 1.0378 0.9788 H 1 UNL11 0.0000; 3 H 0.6713 1.4731 1.0055 H 1 UNL11 0.0000; 4 H 1.0728 -0.0780 1.0207 H 1 UNL11 0.0000; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1; 3 1 4 1; 1 molecule converted; ```. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; `obabel -r` forcefully changes original molecule(s) charges to some values of unknown origin which are numerically close to Gasteiger charges but not equal to those. This behavior is uncontrollable and cannot be changed by `--partialcharge` option. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; `obabel -:""N.O"" -h --gen3D -omol2 --partialcharge none` works as expected but `obabel -imol2 -omol2 -r` produces incorrect output which is listed below. Explicitly selected `--partialcharge` scheme does not affect anything. ```; $ obabel -:""N.O"" -h --gen3D -omol2 --partialcharge none | obabel -imol2 -omol2 -r; 1 molecule converted; @<TRIPOS>MOLECULE; *****; 4 3 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 N 1.6600 -1.4704 0.6450 N.3 1 UNL11 -0.3437; 2 H 2.5902 -1.1111 0.4256 H 1 UNL11 0.1146; 3 H 1.1235 -0.6251 0.8901 H 1 UNL11 0.1146; 4 H 1.2604 -1.7322 -0.2588 H 1 UNL11 0.1146; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1; 3 1 4 1; 1 molecule converted. $ obabel -:""N.O"" -h --gen3D -omol2 --partialcharge none | obabel -imol2 -omol2 -r --partialcharge none; 1 molecule converted; @<TRIPOS>MOLECULE; *****; 4 3 0 0 0; SMALL",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2320:2586,test,test,2586,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2320,1,['test'],['test']
Testability,"d Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Dec 12 2022 -- 05:03:20; Operating system and version: Mac M1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Obabel can convert the format normally. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Some elements can not be coverted from gro file to pdb file. I tried some elements like Li, Mg, Be. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; This is my `.gro` file content:; ```; GAFF force field; 66; 15EC Li 1 1.802 3.228 1.416 -0.5422 -0.0976 -0.1356; 41EC C 2 1.943 2.749 1.644 0.6229 -0.0702 -0.7896; 41EC C1 3 1.961 2.828 1.772 0.0766 -0.1379 0.1261; 41EC O 4 1.932 2.968 1.738 -0.1870 -0.4902 -0.1177; 41EC C2 5 1.897 2.970 1.604 0.4416 -0.4313 0.3827; 41EC O1 6 1.866 3.069 1.542 -0.2911 0.2250 0.3756; 41EC O2 7 1.885 2.848 1.556 -0.0665 0.1267 -0.4593; 41EC H 8 1.887 2.655 1.652 0.9759 -0.2466 -0.3474; 41EC H1 9 2.042 2.732 1.602 -0.0691 0.5175 -2.7663; 41EC H2 10 2.066 2.813 1.797 0.6073 -0.2252 -1.9787; 41EC H3 11 1.903 2.791 1.859 -2.1307 -0.4792 -1.3989; 44EC C 12 2.035 2.297 2.100 -0.7722 0.0818 0.3746; 44EC C1 13 2.098 2.224 1.975 -0.1648 0.0654 0.1066; 44EC O 14 2.065 2.309 1.863 0.5016 0.5182 -0.4674; 44EC C2 15 1.976 2.403 1.905 0.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2614:1274,test,test,1274,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2614,1,['test'],['test']
Testability,"d issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: M1 Mac running Sonoma 14.5. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. Expected `obabel -:""CCO.OCC>>CCC"" -O output.cdxml --gen2D` to turn `>>` into `<arrow />`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The output is instead `output.cdxml:`. ```; <?xml version=""1.0""?>; <!DOCTYPE CDXML; SYSTEM ""http://www.camsoft.com/xml/cdxml.dtd"">; <CDXML BondLength=""30"">; <page>; <fragment>; <n id=""1"" p=""223.923048 90.000000""/>; <n id=""2"" p=""197.942286 105.000000""/>; <n id=""3"" p=""171.961524 90.000000"" Element=""8""/>; <n id=""4"" p=""223.923048 165.000000"" Element=""8""/>; <n id=""5"" p=""197.942286 180.000000""/>; <n id=""6"" p=""171.961524 165.000000""/>; <n id=""7"" p=""141.961524 105.000000""/>; <n id=""8"" p=""115.980762 90.000000""/>; <n id=""9"" p=""90.000000 105.000000""/>; <b B=""1"" E=""2""/>; <b B=""2"" E=""3""/>; <b B=""4"" E=""5""/>; <b B=""5"" E=""6""/>; <b B=""7"" E=""8""/>; <b B=""8"" E=""9""/>; </fragment>; </page>; </CDXML>; ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; `obabel -:""CCO.OCC>>CCC"" -O output.cdxml --gen2D`",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2703:1899,test,test,1899,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2703,1,['test'],['test']
Testability,"df)) by August 2020, p. 11, which offers cases `0`, `1`, `2`, or `3`. Let me suggest OpenBabel retains `CFG=[x]` in a line like; ```; M V30 3 1 3 4 CFG=2; ```; when writing such a file. Similar to molecule sketchers, the request to visualize a structure as a `.svg` could yield either a wavy single bond attached to the double bond in question .or. a crossed double bond to mark the lack of specification; apparently, this is not yet enabled. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Passing a `.sdf` about alkenes including the `CFG=2` entry (generation by [DataWarrior](https://openmolecules.org/datawarrior/index.html), cf. attached archive) removes this indicator. If `.cdxml` and `.mol (v3000)` of alkenes generated by ChemDraw are used as input, the indicator equally is absent in OpenBabel's output. . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ```bash; $ obabel -:""CC=CC"" -omol -x3; ==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D. OpenBabel11122115062D. 0 0 0 0 0 999 V3000; M V30 BEGIN CTAB; M V30 COUNTS 4 3 0 0 0; M V30 BEGIN ATOM; M V30 1 C 0 0 0 0; M V30 2 C 0 0 0 0; M V30 3 C 0 0 0 0; M V30 4 C 0 0 0 0; M V30 END ATOM; M V30 BEGIN BOND; M V30 1 1 1 2; M V30 2 2 2 3; M V30 3 1 3 4; M V30 END BOND; M V30 END CTAB; M END; 1 molecule converted; ```. and files within the archive attached. [v3000_extended_stereo.zip](https://github.com/openbabel/openbabel/files/7528092/v3000_extended_stereo.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2429:2366,test,test,2366,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2429,1,['test'],['test']
Testability,"dfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really need to be that long-running; ; run the coverage only, say, once per day;; ... I'd be very happy for feedback on this. [1] Issues https://github.com/openbabel/openbabel/issues/1937 https://github.com/openbabel/openbabel/issues/1893 https://github.com/openbabel/openbabel/issues/1321 https://github.com/openbabel/openbabel/issues/1861; I searched for ""eqeq"" through the tests and there was no match, i.e. it seemed like the implementation was entirely untested, so I started looking for test coverage reports.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2312:1988,Test,Test,1988,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312,5,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"drc@macinchem.fsnet.co.uk. One of the ""bugs"" that came to light from the early beta testers of ; iBabel was the issue of line endings on the Mac. At the moment ; Babel expects UNIX (or DOS?) line endings. I got round the problem ; by adding a PERL script to the import of iBabel to convert Mac line ; endings to UNIX. However it might be better to have Babel support ; Mac line endings at least for import. Reported by: *anonymous. Original Ticket: ""openbabel/feature-requests/36"":https://sourceforge.net/p/openbabel/feature-requests/36",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1406:84,test,testers,84,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1406,1,['test'],['testers']
Testability,e error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavi,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:4236,test,test,4236,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"e program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and apply the suggested patch. https://github.com/harryjubb/openbabel_python_docker/issues/1. Can anyone help?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2250:1375,Test,Test,1375,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250,8,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"e, if converted to a SMILES string, appears to have a saturated 6 membered ring, whereas it actually contains a phenyl ring. To be specific, the problem is that the benzene ring in the ACB_PCA-0004 molecule is not perceived correctly. NewPerceiveKekuleBonds doesn't seem to be doing its job. Actually, I'm not sure why this function is being called...according to the API, this function ""has been specifically designed to handle molecule files without explicit hydrogens"". This molecule does have explicit hydrogens... If you turn on the error messages you will see... ============================START. babel -iMOL2 ACB_PCA-0004.mol2 -oMOL2 tmp.mol2 ---errorlevel 4; ==============================; *** Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; OpenBabel::Read molecule Sybyl Mol2 format; ==============================; *** Open Babel Audit Log in OpenBabel::OBMol::Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in OpenBabel::OBMol::Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in OpenBabel::OBMol::FindRingAtomsAndBonds; Ran OpenBabel::FindRingAtomsAndBonds; ==============================; *** Open Babel Information in OpenBabel::OBMol::NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule ACB_PCA-0004. ==============================; *** Open Babel Information in OpenBabel::OBMol::NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule ACB_PCA-0004; Kekulize: Cannot get an even number of electron for molecule ACB_PCA-0004. ==============================; *** Open Babel Audit Log in OpenBabel::OBMoleculeFormat::WriteChemObjectImpl; OpenBabel::Write molecule Sybyl Mol2 format; ==============================; *** Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignTypes; Ran OpenBabel::AssignTypes; ==============================; *** Open Babel Audit Log in OpenBabel::OBAromaticTyper::AssignAromaticFlags; Ran OpenBabel:",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/671:786,Log,Log,786,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/671,4,['Log'],['Log']
Testability,eFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object t,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:52584,test,test,52584,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"eatformat.cpp; fhformat.cpp; freefracformat.cpp; gamessformat.cpp; gausscubeformat.cpp; ..\..\src\formats\gausscubeformat.cpp(576) : warning C4146: unary minus operator applied to unsigned type, result still unsigned; gaussformat.cpp; gausszmatformat.cpp; ghemicalformat.cpp; gromos96format.cpp; hinformat.cpp; jaguarformat.cpp; mmcifformat.cpp; mmodformat.cpp; moldenformat.cpp; mopacformat.cpp; mpdformat.cpp; mpqcformat.cpp; msiformat.cpp; Generating Code...; Compiling...; msmsformat.cpp; nwchemformat.cpp; pcmodelformat.cpp; PQSformat.cpp; qchemformat.cpp; shelxformat.cpp; tinkerformat.cpp; turbomoleformat.cpp; unichemformat.cpp; viewmolformat.cpp; xedformat.cpp; xyzformat.cpp; yasaraformat.cpp; zindoformat.cpp; Generating Code...; Creating browse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.21022; Copyright (C) Microsoft Corporation. All rights reserved.; BSCMAKE: error BK1506 : cannot open file '.\Debug\KFReader.sbr': No such file or directory; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-ae-vc2008\OBMoreFormats\Debug\BuildLog.htm""; OBMoreFormats - 62 error(s), 23 warning(s); ------ Build started: Project: OBXMLFormats, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; chemkinformat.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory; cmlformat.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory; cmlreactformat.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory; rsmiformat.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/share",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778:19592,log,log,19592,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778,1,['log'],['log']
Testability,"eck boxes.; -->. - [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: any; Operating system and version: Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I would like to get 1.0 when I'm calling the function; `dynamic_cast<OBPairFloatingPoint *>((OBGenericData*)NULL)->GetGenericValueDef(1.0)`; but I get segmentation fail in Ubuntu 18.04 (master branch compiled with standard g++ compiler from Ubuntu repository. See https://stackoverflow.com/questions/2474018/when-does-invoking-a-member-function-on-a-null-instance-result-in-undefined-behav. Simple test case (fails in Ubuntu 18.04 `g++ -O3 main.cpp; ./a.out`); ```; // Example program; #include <iostream>; #include <string>. class A {; public: ; float f;; inline float foo(const float & def) {; if( this == NULL) {; return def;; }; else return f; ; }; };. int main(); {; A * d = NULL; ; std::cout << d->foo(1.0) << std::endl;; }; ```. I think, that it is much better to have the function like this; ```; static ValueT GetValue(OBGenericData * obd); { ; OBPairTemplate<ValueT> * pd = dynamic_cast<OBPairTemplate<ValueT> *>(obd);; assert( pd != NULL);; return pd->GetGenericValue();; }; static ValueT GetValue(OBGenericData * obd, const ValueT &def_val); { ; OBPairTemplate<ValueT> * pd = dynamic_cast<OBPairTemplate<ValueT> *>(obd);; return (pd == NULL) ? def_val : pd->GetGenericValue();; }; ```; Using the static function gives much nicer call.; `float f = OBPairFloatingPoint::GetValue(a.getData(""something""), 1.0);`; instead of; `float f = dynamic_cast<OBPairFloatingPoint *>(a->GetData(""something""))->GetGenericValueDef(1.0);`. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1913:1786,assert,assert,1786,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1913,2,"['assert', 'test']","['assert', 'test']"
Testability,ect test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/math.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/mol.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/phmodel.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/residue.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/ringtest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartstest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartsparse.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/smilesmatch.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/unitcell.o; [ 99%] Building CXX,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:54651,test,test,54651,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"eel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.1 -- Aug 30 2020 -- 02:22:45; Operating system and version: Ubuntu 20.20. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. gen3D for two identical structures in one input file (0d or 2d) should yield some 3d structure, where both molecules are placed next to each other. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. When you input two identical structures in one input file (0d or 2d), gen3D superimposes both molecules. . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. Input for a benzene dimer:. ```bash; $ obabel -:""c1ccccc1.c2ccccc2"" --gen3D -o mol; ```. Openbabel output with the molecules having the identical coordinates:. ```. OpenBabel09082017143D. 24 24 0 0 0 0 0 0 0 0999 V2000; 1.3440 -0.2250 0.0360 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.5020 -1.2510 -0.0040 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.8560 -1.0420 0.0030 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.3730 0.2230 -0.0410 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.5090 1.2150 0.0750 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8920 1.0800 -0.0700 C 0 0 0 0 0 0 0 0 0 0 0 0; 1.3440 -0.2250 0.0360 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.5020 -1.2510 -0.0040 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.8560 -1.0420 0.0030 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.3730 0.2230 -0.0410 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.5090 1.2150 0.0750 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8920 1.0800 -0.0700 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2278:1527,test,test,1527,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2278,1,['test'],['test']
Testability,"ehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 83: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 83: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 85; Start 85: test_regressions_223; --; 85: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 85: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 95; Start 95: test_regressions_2111; --; 95: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 95: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 95: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:21 in ; 95: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /us",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:9846,test,test,9846,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"ello,. After installing Openbabel 3.1.1 on my computer, some output formats are not available such as FH format, Fenske-Hall Z-Matrix format, see image below.; This is not coming from Openbabel program but it seems from my computer (64 bits, Latitude 5480, win10). Any idea why some formats are not available on my computer?; Please note that in View / Select set of formats or in Plugins / Formats, the FH format is not available as well.; Thanks. . ![Image1](https://user-images.githubusercontent.com/79590079/109020913-b2c23a00-76ba-11eb-9da2-fa2d9d8063ba.png); <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Win10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect to have the possiblity to select the FH output format.; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Some output formats are not showing up.; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2331:1899,test,test,1899,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2331,1,['test'],['test']
Testability,"equests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: Linux Debian 10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I would like to suggest the `idcode` format internally used by [DataWarrior](http://www.openmolecules.org/datawarrior/index.html) to be added to the cheminformatics formats read / written by Open Babel. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The format is missing. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; DataWarrior is a program freely available and used to compute and manage chemical structures and properties. Examples of functions offered by DataWarrior include the determination of molecular mass, cLogP, small ring count, similarity searches, PCA, simplification to Murcko scaffold and skeleton, SAR-tables. The program stores information as `.dwar` files (example attached) in plain ASCII, where chemical structures are written as `idcodes`. Thomas Sander describes these strings as «a very compact text representation of a molecule [...] somewhat comparable to an isomeric SMARTS» ([reference](http://openmolecules.org/forum/index.php?t=msg&th=422&start=0&)). For example, the three isomers of tartaric acid, `O[C@H]([C@H](C(O)=O)O)C(O)=O` (2R, 3R), `O[C@@H]([C@@H](C(O)=O)O)C(O)=O` (2S, 3S) and `O[C@H]([C@@H](C",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2311:1413,test,test,1413,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2311,1,['test'],['test']
Testability,ertest.o; //usr/lib/x86_64-linux-gnu/libharfbuzz.so.0: undefined reference to `FT_Get_Var_Blend_Coordinates'; //usr/lib/x86_64-linux-gnu/libgtk-3.so.0: undefined reference to `g_log_structured_standard'; //usr/lib/x86_64-linux-gnu/libcairo.so.2: undefined reference to `FT_Get_Var_Design_Coordinates'; collect2: error: ld returned 1 exit status; src/GUI/CMakeFiles/obgui.dir/build.make:149: recipe for target 'bin/obgui' failed; make[2]: *** [bin/obgui] Error 1; CMakeFiles/Makefile2:6751: recipe for target 'src/GUI/CMakeFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_ru,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:52063,test,test,52063,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,es'; collect2: error: ld returned 1 exit status; src/GUI/CMakeFiles/obgui.dir/build.make:149: recipe for target 'bin/obgui' failed; make[2]: *** [bin/obgui] Error 1; CMakeFiles/Makefile2:6751: recipe for target 'src/GUI/CMakeFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeF,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:52360,test,test,52360,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"es: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: Ubuntu 21.04. ## Expected Behavior; Iterating over the molecules in an mmcif with multiple chains (e.g. ligands) should yield a different molecule for each chain (asym_id). ## Actual Behavior; Iterating over the molecules in an mmcif with multiple chains (e.g. ligands) will only yield one single molecule which contains the atoms from all chains. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; 1. Download this file; [P04406.mmcif.txt](https://github.com/openbabel/openbabel/files/8403838/P04406.mmcif.txt). 2. From the same directory the above file is located in, run:; ```python; from openbabel import pybel; molecules = list(pybel.readfile(""mmcif"", ""P04406.mmcif.txt"")); print(len(molecules)); ```. This prints `1`, but if you look at the actual file, you'll note that there are clearly multiple molecules. For instance, in this part of the `_atom_site` loop, we move from `ATOM` to `HETATM`, with different `asym_id` (`A` -> `B`) which indicate a change in molecule:; ```; ATOM 2530 O O . GLU A 1 335 ? -24.426 9.206 -5.546 1.0 88.86 ? 335 GLU A O 1 P04406 UNP 335 E ; ATOM 2531 C CG . GLU A 1 335 ? -21.013 7.997 -2.666 1.0 88.86 ? 335 GLU A CG 1 P04406 UNP 335 E ; ATOM 2532 C CD . GLU A 1 335 ? -21.190 ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2458:1280,test,test,1280,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2458,1,['test'],['test']
Testability,"es?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Python version: 3.6.7; Open Babel version: 2.4.1 ; Operating system and version: Mac OS 10.13.6 (replicated on Ubuntu 16.04 LTS) . ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. The formal charge of the attached .mol2 file should be +1. . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. Pybel reports the charge of this molecule to be 0, whereas RDKit correctly identifies it as having a formal charge of +1. When converted to any other file format by openbabel, the charge information is lost. . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. The .mol2 file is attached, and the following python snippet reproduces the problem:. ```; import pybel; from rdkit import Chem. # pybel mol2 file; pybel_mol2 = pybel.readfile(""mol2"", ""ligand.mol2"").__next__(); print(pybel_mol2.charge); # RDKit mol2 file; rdkit_mol2 = Chem.MolFromMol2File(""ligand.mol2""); print(Chem.GetFormalCharge(rdkit_mol2)); ```; [ligand.mol2.zip](https://github.com/openbabel/openbabel/files/3158771/ligand.mol2.zip). Thanks! Please let me know if there are any issues with replication, or if there's a simple mistake I'm making with the file reading API.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1982:1564,test,test,1564,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1982,1,['test'],['test']
Testability,est_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/math.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/mol.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/phmodel.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/residue.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/ringtest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartstest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartsparse.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/smilesmatch.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/unitcell.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/cmlreadfile.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/obtest.o; [ 99%] Linking CXX executable ../bin/test_runner; [ 99%] Built target test_runner; Makefile:140: recipe for target 'all' failed; make: *** [all] Error 2. ```; Any help would be,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:54951,test,test,54951,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"estion about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1, 2.3.2; Operating system and version: Ubuntu 16.04 Xenial. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When using the following command:; `obabel MMFF94_hypervalent.sdf -O MMFF94_hypervalent.smi --energy --ff MMFF94 --append Energy --log`. to compute the energies of molecules from the [validation suite ](http://www.ccl.net/cca/data/MMFF94/), a few molecules show an energy that doesn't match that provided by the reference suite.; [obabel241_reference_calibration.txt](https://github.com/openbabel/openbabel/files/1727000/obabel241_reference_calibration.txt); [MMFF94_hypervalent.smi.txt](https://github.com/openbabel/openbabel/files/1727003/MMFF94_hypervalent.smi.txt); The following molecule show the largest difference (in both v2.3.2 and v2.4.1):. 1. CUGLOF; 2. FORJIF; 3. GIHZEC; 4. JALSOE; 5. SEGWEG; 6. VIGTUA; 7. SO18A; 8. ERULE_03. The base SDF file was taken from the MMFF94 website and modified to account for the formal charges that weren't explicit in the original mol2 file. Is this a mistake from my part or in my open babel distribution?. Many thanks for developing open babel!. Best Regards. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1778:2256,test,test,2256,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1778,1,['test'],['test']
Testability,"ests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: Open Babel 3.1.1 (built from GitHub commit [f495cc6](https://github.com/openbabel/openbabel)); Operating system and version: Ubuntu 20.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The charged hydrogen atoms are retained or a warning is issued that such constructs are not allowed. . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Operations that output SMILES strings silently remove `[H-]` and `[H+]` atoms from constructs like `[H-][Al+3]([H-])[H-]`. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Operation:; ```; echo ""[H-][Al+3]([H-])[H-]"" | obabel -i smi -o can; ```; Expected output:; ```; [H-][Al+3]([H-])[H-] or [H][Al]([H])[H] or something similar; ```; Actual output:; ```; [Al+3]; ```. # Additional notes. * Conversion from the `""[H-][Al+3]([H-])[H-]""` SMILES to SDF retains the negatively charged hydrogen atoms.; * Conversion from the `""[H-][Al+3]([H-])[H-]""` SMILES to InChI retains the H atoms, although it does disconnect them and neutralise the overall charge. ; * The charged hydrogen atoms are not removed if they are not bound by other atoms.; * The charged hydrogen atoms are not removed if they are bridging atoms, e.g. canonicalisation of `[Al][H-][Al]` produces `[Al][H-][Al]`.; * I fully understand that the provided example is quite unconventional, thus if it is not supported, it would be",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2625:1416,test,test,1416,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2625,1,['test'],['test']
Testability,"et. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1+; Operating system and version: maybe not applicable (GitHub). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Starting on a pristine fork from this repository's branch master, my aim was to correct minor inconsistencies; within the program's documentation when calling `obabel -H`. Because of changes I do not consider them; as ""mission critical"", I speculated the filed [PR](https://github.com/openbabel/openbabel/pull/2307) would launch the automatic code check as prerequisite; for Open Babel's maintainers to decide about the change. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; At present -- six days later -- there are six of the automated tests successfully passed, yet still four in line; awaiting processing. The results, in my understanding, however are mixed. + Is there something I could have done differently to accelerate the automated tests to take less time --; e.g., some hours instead of multiple days?; + I don't understand why the test labelled `CMake Build Matrix / Windows Latest MSVC x86 (pull_request)`; fails while for same changes yield for some tests about MacOS, Linux, and Ubuntu apparently pass. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ![check_stop](https://user-images.githubusercontent.com/19709084/101386459-22433d00-38b5-11eb-89ed-a35f637f2a53.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2309:1563,test,tests,1563,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2309,5,['test'],"['test', 'tests']"
Testability,"ets x264 xattr xcb xcomposite xinerama xml xscreensaver xv xvid xwayland zlib"" ABI_X86=""64"" ALSA_CARDS=""ali5451 als4000 atiixp atiixp-modem bt87x ca0106 cmipci emu10k1x ens1370 ens1371 es1938 es1968 fm801 hda-intel intel8x0 intel8x0m maestro3 trident usb-audio via82xx via82xx-modem ymfpci"" APACHE2_MODULES=""authn_core authz_core socache_shmcb unixd actions alias auth_basic authn_alias authn_anon authn_dbm authn_default authn_file authz_dbm authz_default authz_groupfile authz_host authz_owner authz_user autoindex cache cgi cgid dav dav_fs dav_lock deflate dir disk_cache env expires ext_filter file_cache filter headers include info log_config logio mem_cache mime mime_magic negotiation rewrite setenvif speling status unique_id userdir usertrack vhost_alias"" CALLIGRA_FEATURES=""kexi words flow plan sheets stage tables krita karbon braindump author"" COLLECTD_PLUGINS=""df interface irq load memory rrdtool swap syslog"" CPU_FLAGS_X86=""mmx mmxext sse sse2"" ELIBC=""glibc"" GPSD_PROTOCOLS=""ashtech aivdm earthmate evermore fv18 garmin garmintxt gpsclock isync itrax mtk3301 nmea ntrip navcom oceanserver oldstyle oncore rtcm104v2 rtcm104v3 sirf skytraq superstar2 timing tsip tripmate tnt ublox ubx"" INPUT_DEVICES=""evdev synaptics"" KERNEL=""linux"" L10N=""en en_AU en_GB en_US en-AU en-GB en-US"" LCD_DEVICES=""bayrad cfontz cfontz633 glk hd44780 lb216 lcdm001 mtxorb ncurses text"" LIBREOFFICE_EXTENSIONS=""presenter-console presenter-minimizer"" OFFICE_IMPLEMENTATION=""libreoffice"" PHP_TARGETS=""php5-6"" PYTHON_SINGLE_TARGET=""python3_4"" PYTHON_TARGETS=""python2_7 python3_4"" RUBY_TARGETS=""ruby21 ruby22"" USERLAND=""GNU"" VIDEO_CARDS=""nvidia intel"" XTABLES_ADDONS=""quota2 psd pknock lscan length2 ipv4options ipset ipp2p iface geoip fuzzy condition tee tarpit sysrq steal rawnat logmark ipmark dhcpmac delude chaos account""; Unset: CC, CPPFLAGS, CTARGET, CXX, EMERGE_DEFAULT_OPTS, INSTALL_MASK, LC_ALL, PORTAGE_BUNZIP2_COMMAND, PORTAGE_COMPRESS, PORTAGE_COMPRESS_FLAGS, PORTAGE_RSYNC_EXTRA_OPTS, USE_PYTHON; ```.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566:12692,log,logmark,12692,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566,1,['log'],['logmark']
Testability,fail to calculate logP using pybel,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2372:18,log,logP,18,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2372,1,['log'],['logP']
Testability,ffmmff94 test fails under MSVC and on Kitware buildbot,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1013:9,test,test,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1013,1,['test'],['test']
Testability,"fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 2.4.1 -- Oct 20 2017 -- 06:42:45; Operating system and version: Darwin box.local 16.7.0 Darwin Kernel Version 16.7.0: Thu Jun 15 17:36:27 PDT 2017; root:xnu-3789.70.16~2/RELEASE_X86_64 x86_64. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Explicit hydrogens on LSD molecule display correctly. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>; One of the explicit hydrogens, at least on the LSD molecule, prints over the C-C bond 'below' it. This hydrogen protrudes above the molecule, so it is not energetically false I don't think, but for cheminformatics, it looks like a bug. Geoff reckons it is anyway. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. Take the LSD .sdf file from pubchem renamed to .txt for github:; [VAYOSLLFUXYJDT-RDTXWAMCSA-N.txt](https://github.com/openbabel/openbabel/files/1426112/VAYOSLLFUXYJDT-RDTXWAMCSA-N.txt). Run this:. obabel VAYOSLLFUXYJDT-RDTXWAMCSA-N.sdf -O VAYOSLLFUXYJDT-RDTXWAMCSA-N.png -d -xp 1025 -xu -xU -xb none -xB black -xd -xm -xt. Look at the resulting image:. ![vayosllfuxyjdt-rdtxwamcsa-n](https://user-images.githubusercontent.com/20246402/32156975-71cc705e-bd38-11e7-9c1a-f70d2f4ab901.png). SDF appear to have better molecule arrangement characteristics than SMILES but using SMILES does not produce this as it doesn't print this hydrogen. Maybe it's not explicit then I guess. My cheminformatics is new.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1681:1704,test,test,1704,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1681,1,['test'],['test']
Testability,"for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found PkgConfig: /usr/bin/pkg-config (found version ""1.6.1"") ; -- Found RapidJSON: /usr/include (found suitable version ""1.1.0"", minimum required is ""1.1.0"") ; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /usr/include; -- Checking for module 'cairo'; -- Found cairo, version 1.16.0; -- Found Cairo: /usr/lib64/libcairo.so ; -- Cairo found. PNG output will be supported.; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets found => GUI will be built; -- Found PythonInterp: /usr/bin/python (found version ""2.7.16"") ; -- Found SWIG: /usr/bin/swig (found version ""3.0.12"") ; -- Found SWIG: /usr/bin/swig (found suitable version ""3.0.12"", minimum required is ""2.0"") ; -- Found PythonLibs: /usr/lib64/libpython2.7.so (fou",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1996:2735,Test,Test,2735,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1996,6,['Test'],['Test']
Testability,"for x, y in broken]; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); ```. <!--- If suggesting a change/improvement, explain the difference from current behavior —>. Digging a bit, I tried using the openbabel method that generates the list of data processed by this function:. ```; In [2]: from openbabel import openbabel as ob . In [3]: ob.OBConversion() ; Out[3]: <openbabel.openbabel.OBConversion; proxy of <Swig Object of type 'OpenBabel::OBConversion *' at 0x7f9bfc78b150> >. In [4]: o = ob.OBConversion() . In [5]: o.GetSupportedInputFormat() ; ==============================; *** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Out[5]: ('ops',); ```; But the ops string returned here does not contain a ' -- ' as expected by the python code to split the string (see https://github.com/openbabel/openbabel/blob/master/scripts/python/openbabel/pybel.py#L64). When plugins are there, the behavior for this method is the following:. ```; In [1]: from openbabel import openbabel as ob . In [2]: o = ob.OBConversion() . In [3]: o.GetSupportedInputFormat() ; Out[3]: ; ('abinit -- ABINIT Output Format',; 'acesout -- ACES output format',; 'acr -- ACR format',; [...]; 'xtc -- XTC format',; 'xyz -- XYZ cartesian coordinates format',; 'yob -- YASARA.org YOB format'); ```; An easy fix (which I could provide) would be to handle the absence of the ' -- ' by omitting the entry, but I don't think this is what should be done. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Just install openbabel v3.0.0 and run the above code with a bad BABEL_LIBDIR.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2078:3618,test,test,3618,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2078,1,['test'],['test']
Testability,g CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:53348,test,test,53348,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"g for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::tr1::shared_ptr in tr1/memory; -- Found PkgConfig: /usr/bin/pkg-config (found version ""0.27.1"") ; -- Checking for module 'cairo'; -- No package 'cairo' found; -- Could NOT find Cairo (missing: CAIRO_LIBRARIES CAIRO_INCLUDE_DIRS) ; -- Could NOT find Cairo. PNG output will NOT be supported.; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Found PythonInterp: /apps/python/intelpython2018.3/intelpython3/bin/python (found version ""3.6.3"") ; -- Configuring done; -- Generating done; -- Build files have been written to: /home/syesylevsky/install/openbabel-build; ```. But after that build fails:. ```; [ 69%] Building CXX object src/formats/CMakeFiles/cacheformat.dir/cacheformat.cpp.o; /home/syesylevsky/install/openbabel/src/formats/gamessukformat.cpp: In member function ‘bool OpenBabel::GAM",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1919:3312,Test,Test,3312,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1919,6,['Test'],['Test']
Testability,"graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 82; Start 82: test_regressions_1; --; 82: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 82: SUMMARY: UndefinedBehaviorSan",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:7050,test,test,7050,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 82; Start 82: test_regressions_1; --; 82: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 82: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; --; test 83; Start 83: test_regressions_221; --; 83: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 83: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 83",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:7826,test,test,7826,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"havior; <!-- Describe the intended output or what you expected to see. -->. There is varying behavior for these formats both when using python and when using the command line.; I would like to see openbabel replicate the export capabilities of ChemDraw. . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Command Line Interface:. - When trying to convert cdxml to sdf the formula is brought along with the molecule in the data section, however, no annotations are brought. This makes it impossible to grab the name of the molecule since ChemDraw assigns a number to the ID field of the fragments in the original file. - When trying to convert a cdx to sdf nothing is brought along with the fragment. - When reading the smile from a cdxml file I get a different and incorrect smile than when reading from a cdx file. If you take the cdxml smile you get out and put it back into ChemDraw it produces a molecule with a bunch of valence errors. When taking the cdx smile and putting back into ChemDraw it reproduces the same molecule. Python:. - Cannot read cdx files . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Command Line:; 1. Create Chemdraw file; 2. Create Molecule; 3. Annotate the name on the Molecule; 4. Export as cdx file; 5. Export as sdf file; 6. `obabel <input cdxml> -Oobabel_cdxml_sdf.sdf` and compare to chemdraw sdf; 7. `obabel <input cdx> -Oobabel_cdx_sdf.sdf` and compare to chemdraw sdf; 8. `obabel <input cdxml> -osmi -xk -xh` and compare to `obabel <input cdx> -osmi -xk -xh`. Python:; ```; from openbabel import pybel. for mol in pybel.readfile(""cdx"", <input cdx>):; total_molecules += 1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2343:2213,test,test,2213,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2343,1,['test'],['test']
Testability,"he following:. ```; <?xml version=""1.0""?>; <molecule formalCharge=""4"" xmlns=""http://www.xml-cml.org/schema"">; ...; </molecule>; ```. When using the above code for the mdl format it produces the following between molecules:. ```; M END. OpenBabel03252112043D; ```. If you then try to read all the molecules from either of these files pybel will only read the first one with mdl format with no error and will fail before reading any molecules with the cml format. The error produced for the cml files is:. ```; :1: parser error : Extra content at the end of the document; er=""1""/> <bond atomRefs2=""a72 a78"" order=""1""/> </bondArray></molecule>; ^; ==============================; *** Open Babel Error in XML Parser ./test_data/output2.cml; Extra content at the end of the document; ```. The formats for the files produces match those of a file with a single molecule in both cases. ; I do not think the Outputfile is correctly handling file formating for multiple molecules. If I manually modify the python output cml and mdl files to match the format produced by the command line then pybel is able to read them in correctly. For cml files since the hierarchy of the brackets changes with multiple molecules a new file needs to be written with the correct hierarchy. For the mdl files a simple delineator line could be added in the self.obConversion.Write(molecule.OBMol) for this format. ```; def write(self, molecule):; """"""Write a molecule to the output file. Required parameters:; molecule; """"""; if not self.filename:; raise IOError(""Outputfile instance is closed.""). if self.total == 0:; self.obConversion.WriteFile(molecule.OBMol, self.filename); else:; self.obConversion.Write(molecule.OBMol); self.total += 1; ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2339:3869,test,test,3869,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2339,1,['test'],['test']
Testability,"hello. building from git on linux with gcc:. ----8<----; install:651> uname -sr; Linux 5.0.7; install:652> gcc --version; gcc (GCC) 8.3.0; Copyright (C) 2018 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ---->8----. With current master (6aff822f8d37074eebcd1901628623ea1b97f6ae) I get a; flood of errors like this:. ----8<----; scripts/ruby/openbabel-ruby.cpp:49397 error: 'OBMolRingIter' is not a member of 'OpenBabel'; ---->8----. (build log is too big (~9.8MB) to attach). My previous build (c28c7dc86db1f415c0a60abeb94497d49161ff8d) was; absolutely fine, as always. Is there any problem or am I missing something?. thanks a lot; ciao; -g",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1962:578,log,log,578,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1962,1,['log'],['log']
Testability,"help with this. Both of these changes address long-standing major deficiences of the toolkit. Regarding (1), there have been many bug reports related to implicit hydrogens appearing/disappearing. Furthermore, it is really much simpler to do things this way, and the code will be faster as there will be no continual reperception of hydrogen counts. Previously there were several functions and flags to work-around the existing system such as ForceNoImplH; these all go away now. Regarding (2), the previous approach was (IMO) solving the wrong problem. It is now much simpler and faster. Previously parts of the kekulization infrastructure were spread around several different files (some in SMILES format, some in OBMol, and some in kekulization.cpp) and had several associated trigger functions (e.g. IsKSingle). So what's the downsides? Well, these are major changes and there are still some wrinkles:; 1. The existing radical code was built as an adjustment on top of the old implicit valence code. There are no tests, and so some of this may not work now. I'll be meeting Chris Morley at an RSC meeting in June and will bend his ear.; 2. Smiley Format doesn't read in SMILES correctly. I think this should be removed and the error messages and nice functions merged with the existing SMILES reader.; 3. Since kekulization has been tightened up, we should implement the Daylight aromaticity model as a starting point for SMILES writing. Otherwise we will write out SMILES we cannot kekulize.; 4. I implemented an implicit hydrogen adder based on typical valences (e.g. for PDB) with code from @dan2097. This is likely different from the old one (using IMPVAL values), and may need further tweaking.; 5. I didn't know where to put global functions, e.g. OBKekulize and GetTypicalValences. Consider their current locations placeholders.; 6. Now that I think of it, I scattered around a few TODOs. I should check those... These are the things that I know about. Others may become apparent over time.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1576:1265,test,tests,1265,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1576,1,['test'],['tests']
Testability,"ic factor on the crystallisation of desmotropes of irbesartan."" RSC advances 9.9 (2019): 5244-5250.)_. Theoretically, when using the option `-p7.4 `for neutralization, the chemical transformation should be the following:; `c1[nH]nnn1` >> `c1nnn[n-:1]1` - 1H-Tetrazole (H in position 1); `c1nnn[nH]1` >> `c1nnn[n-:1]1` - 1H-Tetrazole (H in position 4); `c1n[nH]nn1` >> `c1nn[n-:1]n1` - 2H-Tetrazole (H in position 2); `c1nn[nH]n1` >> `c1nn[n-:1]n1` - 2H-Tetrazole (H in position 3). ## Actual Behavior; Only one SMILES string is correctly matched and converted, the others lead to the wrongly-neutralized structure. These are the SMILES string I get back after running conversion first from SMI to SDF, then SDF to SMI again:; `STARTING | SMI to SDF -p7.4 | SDF to SMI`; `c1[nH]nnn1 | [H]C1=NN=N[N-]1 | c1nnn[n-:1]1` - RIGHT: 1H-Tetrazole (H in position 1); `c1n[nH]nn1 | [H]N1N=NC([H])=[N-]1 | N1N=NC=[N-]1` - WRONG: 2H-Tetrazole (H in position 2), lost aromaticity, wrong valence; `c1nn[nH]n1 | [H]N1N=[N-]C([H])=N1 | N1N=C[N-]=N1` - WRONG: 2H-Tetrazole (H in position 3), lost aromaticity, wrong valence; `c1nnn[nH]1 | [H]N1N=N[N-]=C1[H] | N1C=[N-]N=N1` - WRONG: 1H-Tetrazole (H in position 4), lost aromaticity, wrong valence. If I change the `phmodel.txt ` file with the expected chemical transformations and switch off the original transformations, nothing happens. Even if I enter the corresponding SMARTS pattern, the output of the protonation step is wrong. What I did was to explicitly write all the permutations as SMILES strings for all the isomers of tetrazole. . ## Steps to Reproduce; Attached is the starting SMILES file with the molecules I manually generated to test this behavior as a txt file. The same problem occurs with other versions of OpenBabel (tested: 2.3.1, 2.4.1, and 3.1.1). The problem occurred also on several libraries downloaded as SDF files from different chemical providers. [MANUAL-TETRA.txt](https://github.com/openbabel/openbabel/files/5292364/MANUAL-TETRA.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2284:3341,test,test,3341,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2284,2,['test'],"['test', 'tested']"
Testability,igned integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undef,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:15354,test,test,15354,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"iguration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; transform3d.cpp; ..\..\src\math\transform3d.cpp(58) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; transform.cpp; spacegroup.cpp; rotor.cpp; rotamer.cpp; ring.cpp; residue.cpp; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; kekulize.cpp; griddata.cpp; grid.cpp; generic.cpp; descriptor.cpp; Generating Code...; Compiling...; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; base.cpp; atom.cpp; alias.cpp; Generating Code...; Compiling...; typer.cpp; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; Creating library ../OBConv.lib and object ../OBConv.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 0 error(s), 0 warning(s); ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; ..\..\src\formats\mdlformat.cpp(629) : error C2780: 'const _Ty &std::min(const _Ty &,const _Ty &,_Pr)' : expects 3 arguments - 2 provided; C:\Program Files\Micr",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/773:1623,log,log,1623,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/773,1,['log'],['log']
Testability,ilding CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/tes,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:52808,test,test,52808,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"include/libxml/xmlexports.h: CMake no longer defines _WIN32 under Cygwin. . src/fingerprint.cpp: likely a typo -- ""**CYGWIN32**"" is not defined. test/CMakeLists.txt: need to include ""include(UsePythonTest)"" before using ADD_PYTHON_TEST.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/226:145,test,test,145,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/226,1,['test'],['test']
Testability,ing CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:53270,test,test,53270,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"ing pybel. I've been using the pybel readfile method to extract geometries from the output files for various quantum chemistry codes. Unfortunately, when looking at the output files, readfile just hung. The problem seems to be that these readers (e.g NWChemOutputFormat::ReadMolecule) never return ""false"". They just trundle through the output looking for the coordinates block and replacing the old molecule with the new one until they hit the end of; the file. Hence if you call the OBConversion ReadFile method on them, you just get the final geometry and a return state of ""true"". Subsequent calls to the OBConversion Read method just return an empty molecule and the reader returns a state of ""true"". Hence the following block of code in pybel:. obmol = ob.OBMol(); notatend = obconversion.ReadFile(obmol,filename); while notatend:; yield Molecule(obmol); obmol = ob.OBMol(); notatend = obconversion.Read(obmol). just keeps looping forever. I can get this to work for me by calling NumAtoms() on the returned molecule and breaking if this is None. I've included a block of code below that demonstrates what I mean and have also attached a zipped NWChem output file that I used for testing this.; import sys; import openbabel as ob. filename = 'optim_c6h6.nwo' # NWChem output file; #filename = '3d.head.sdf' # Sample SDF file where the original; method works. obconversion = ob.OBConversion(); format = obconversion.FormatFromExt( filename ). formatok = obconversion.SetInFormat(format); if not formatok:; raise ValueError,""%s is not a recognised OpenBabel format"" % format. obmol = ob.OBMol(); notatend = obconversion.ReadFile(obmol,filename). i=0; while notatend:. # Need to check natoms or we go on forever.; natoms = obmol.NumAtoms(); if not natoms:; print ""Molecule has no atoms!""; break. atom = obmol.GetFirstAtom(); print ""Got 1st coords "",atom.x(),atom.y(), atom.z(). obmol = ob.OBMol(); notatend = obconversion.Read(obmol); i+=1. print ""Found %s molecules"" % i . Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/651:1446,test,testing,1446,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/651,1,['test'],['testing']
Testability,"ing python/openbabel/openbabel-python.cpp, python/openbabel/openbabel.py; cd /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts && /usr/bin/swig -python -c++ -small -O -templatereduce -naturalvar -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -o /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/python/openbabel/openbabel-python.cpp -DHAVE_EIGEN -DHAVE_EIGEN3 -outdir /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/python/openbabel /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/openbabel-python.i; gmake[2]: Leaving directory `/builddir/build/BUILD/openbabel-openbabel-3-1-1'; [ 86%] Built target test_inchiwrite; [ 86%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; cd /builddir/build/BUILD/openbabel-openbabel-3-1-1/test && /usr/bin/c++ -DFORMATDIR=\""/builddir/build/BUILD/openbabel-openbabel-3-1-1/lib64//\"" -DHAVE_EIGEN -DHAVE_EIGEN3 -DHAVE_LIBZ -DHAVE_RADPIJSON -DHAVE_SHARED_POINTER -DHAVE_WXWIDGETS -DTESTDATADIR=\""/builddir/build/BUILD/openbabel-openbabel-3-1-1/test/files/\"" -DUSING_DYNAMIC_LIBS -DWXUSINGDLL -D_FILE_OFFSET_BITS=64 -D__WXGTK__ -I/usr/include/boost169 -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/data -I/usr/include/eigen3 -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/test -isystem /usr/lib64/wx/include/gtk3-unicode-3.0 -isystem /usr/include/wx-3.0 -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -pthread -DNDEBUG -O3 -DNDEBUG -fPIE -pthread -std=gnu++11 -o CMakeFiles/test_runner.dir/automorphismtest.cpp.o -c /builddir/build/BUILD/openbabel-openbabel-3-1-1/test/automorphismtest.cpp; /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/openbabel-python.i:79: Error: Syntax error in input(1).; gmake[2]: *** [scripts/python/openbabel/openbabel-python.cpp] Error 1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2407:1325,test,test,1325,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2407,4,['test'],['test']
Testability,"int; -- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0""); -- Found PkgConfig: /usr/bin/pkg-config (found version ""0.28""); -- Checking for module 'cairo'; -- Found cairo, version 1.14.10; -- Found Cairo: /usr/lib64/libcairo.so; -- Cairo found. PNG output will be supported.; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Found PythonInterp: /usr/bin/python (found version ""3.6.2""); -- Configuring done; -- Generating done; -- Build files have been written to: /home/building/science/openbabel-2.4.1/build. If it's relevant, there is no ""FindWxWidgets.cmake"" in the modules directory:. > ls openbabel-2.4.1/cmake/modules/; FindCairo.cmake FindEigen3.cmake MacroEnsureVersion.cmake; FindEigen2.cmake FindInchi.cmake UsePythonTest.cmake",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1780:1831,Test,Test,1831,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1780,6,['Test'],['Test']
Testability,ir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/math.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/mol.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/phmodel.o; [ 98%] Building CXX object,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:54225,test,test,54225,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"it; sync-uri: git://anongit.gentoo.org/proj/mozilla.git; masters: gentoo; priority: 50. spring; location: /var/lib/layman/spring-overlay; sync-type: git; sync-uri: git://github.com/springlobby/overlay.git; masters: gentoo; priority: 50. steam-overlay; location: /var/lib/layman/steam-overlay; sync-type: git; sync-uri: git://github.com/anyc/steam-overlay.git; masters: gentoo; priority: 50. ACCEPT_KEYWORDS=""amd64 ~amd64""; ACCEPT_LICENSE=""*""; CBUILD=""x86_64-pc-linux-gnu""; CFLAGS=""-O2 -pipe""; CHOST=""x86_64-pc-linux-gnu""; CONFIG_PROTECT=""/etc /usr/lib64/libreoffice/program/sofficerc /usr/share/config /usr/share/gnupg/qualified.txt""; CONFIG_PROTECT_MASK=""/etc/ca-certificates.conf /etc/dconf /etc/env.d /etc/fonts/fonts.conf /etc/gconf /etc/gentoo-release /etc/revdep-rebuild /etc/sandbox.d /etc/terminfo""; CXXFLAGS=""-O2 -pipe""; DISTDIR=""/usr/portage/distfiles""; FCFLAGS=""-O2 -pipe""; FEATURES=""assume-digests binpkg-logs config-protect-if-modified distlocks ebuild-locks fixlafiles merge-sync news parallel-fetch preserve-libs protect-owned sandbox sfperms strict unknown-features-warn unmerge-logs unmerge-orphans userfetch userpriv usersandbox usersync xattr""; FFLAGS=""-O2 -pipe""; GENTOO_MIRRORS=""http://ftp.swin.edu.au/gentoo""; LANG=""en_AU.UTF-8""; LDFLAGS=""-Wl,-O1 -Wl,--as-needed""; MAKEOPTS=""-j9""; PKGDIR=""/usr/portage/packages""; PORTAGE_CONFIGROOT=""/""; PORTAGE_RSYNC_OPTS=""--recursive --links --safe-links --perms --times --omit-dir-times --compress --force --whole-file --delete --stats --human-readable --timeout=180 --exclude=/distfiles --exclude=/local --exclude=/packages --exclude=/.git""; PORTAGE_TMPDIR=""/var/tmp""; USE=""X a52 aac acl acpi alsa amd64 berkdb branding bumblebee bzip2 cairo cdda cdr cli cracklib crypt cups cxx dbus declarative dri dts dvd dvdr emboss encode exif fam firefox flac fortran gdbm gif glamor gpm gtk iconv ipv6 jpeg kde kipi kms kwallet lcms ldap libnotify mad mng modules mp3 mp4 mpeg multilib ncurses nls nptl nvidia ogg opengl openmp pam pango pcre pdf phono",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566:9621,log,logs,9621,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566,3,"['log', 'sandbox']","['logs', 'sandbox']"
Testability,"l -ipdb -opdb` to get all the connection but `obConversion.SetInFormat('pdb')` and `obConversion.ReadFile()` should be doing this. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Using the `output.pdb` in the link as the input you will see the issues on residue 101 and 152 in the output.; ```; from openbabel import openbabel. pdbmol=openbabel.OBMol(); obConversion = openbabel.OBConversion(); obConversion.SetInFormat('pdb'); obConversion.ReadFile(pdbmol,""output.pdb""). ## confirm this is first atom in valine residue 101; pdbmol.GetAtom(1604).GetType(); pdbmol.GetAtom(1604).GetResidue().GetName(). ## delete just before Oxygen in Ribociclib; for i in range(5269, 5239, -1):; # delete atom; print(""Deleting atom:"", i); pdbmol.DeleteAtom(pdbmol.GetAtom(i)); # test VAL 101 is still valine; print(""Residue 101 is still:"", pdbmol.GetAtom(1604).GetResidue().GetName()); ; # leucine 152 is also good; pdbmol.GetAtom(2455).GetResidue().GetName(); ; # now delete atom 5239 Oxygen 03; pdbmol.GetAtom(5239).GetType(); pdbmol.DeleteAtom(pdbmol.GetAtom(5239)). # now we see atom 1604 is no longer a valine? ; # Not a simulation... so how does it learn to update residues?; pdbmol.GetAtom(1604).GetResidue().GetName(). # leucine 152 atom 2455 is also messed up; both of these are in ligand binding region; pdbmol.GetAtom(2454).GetResidue().GetName(); pdbmol.GetAtom(2455).GetResidue().GetName(). ## after deleting the remainder this writes all sorts of funky stuff now; for i in range(5238, 5207, -1):; pdbmol.DeleteAtom(pdbmol.GetAtom(i)); obConversion.SetOutFormat('pdb'); obConversion.WriteFile(pdbmol,""uncomplexed.output.pdb""); ```; ![UCSF Chimera 2022-05-26 04-51-12](https://user-images.githubusercontent.com/26236052/170466512-ab11ac77-b7bb-41bd-9b06-609891ba594a.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2481:3062,test,test,3062,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481,1,['test'],['test']
Testability,"l include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; error: legacy-install-failure. ```. <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Run the 'pip instll openbabel' command on a machine running MacOS 12.6.1. ## Other Python packages installed:; ((sciflow) ) n00002621@chalk3 sciflow % pip list; Package Version; ------------------------- ---------; asgiref 3.5.2; attrs 21.4.0; bcrypt 4.0.1; cachetools 5.2.0; certifi 2022.12.7; cffi 1.15.1; charset-normalizer 2.1.1; chembl-webresource-client 0.10.8; cryptography 38.0.4; defusedxml 0.7.1; Deprecated 1.2.13; Django 4.1.4; django-admin-logs 1.0.2; django-allauth 0.51.0; django-cors-headers 3.13.0; django-crispy-forms 1.14.0; django_debug_toolbar 3.8.1; djangorestframework 3.14.0; easydict 1.10; exceptiongroup 1.0.4; frozendict 2.3.4; idna 3.4; iniconfig 1.1.1; itsdangerous 2.1.2; jgo 1.0.5; JPype1 1.4.1; lxml 4.9.1; mypy-extensions 0.4.3; mysqlclient 2.1.1; numpy 1.23.5; oauthlib 3.2.2; packaging 22.0; pandas 1.5.2; paramiko 2.12.0; Pillow 9.3.0; pip 22.3; pluggy 1.0.0; psutil 5.9.4; pycparser 2.21; PyGithub 1.57; PyJWT 2.6.0; PyLD 2.0.3; PyNaCl 1.5.0; pyparsing 3.0.9; pytest 7.2.0; python-dateutil 2.8.2; python3-openid 3.2.0; pytz 2022.6; PyYAML 6.0; qwikidata 0.4.2; rdkit-pypi 2022.9.2; requests 2.28.1; requests-cache 0.7.5; requests-oauthlib 1.3.1; scipy 1.9.3; scyjava 1.8.1; setuptools 65.6.3; six 1.16.0; sqlparse 0.4.3; tomli 2.0.1; url-normalize 1.4.3; urllib3 1.26.13; wheel 0.38.1; wrapt 1.14.1",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2554:5247,log,logs,5247,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2554,1,['log'],['logs']
Testability,l/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/obconversion.cpp#L302; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/residue.cpp#L853. `ctest` output:. ```; test 5; Start 5: test_align_5; --; 5: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 5: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 17; Start 17: test_builder_1; --; 17: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 17: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 18; Start 18: test_builder_2; --; 18: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 18: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 19; Start 19: test_builder_3; --; 19: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-b,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:2913,test,test,2913,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"l/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1 (installed using `conda install -c openbabel openbabel`); Operating system and version: MacOS 10.12.6. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. Expected SMILES string: `[Li]OC(=O)OCC[O+]1CCOC1=O`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->. Generated SMILES string: `[Li]OC(=O)OC[CH2].C1(=O)OCCO1`. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. After copying the structure information into `structure.xyz`, the following code should reproduce the bug. ```; import pybel. mol = next(pybel.readfile('xyz', 'structure.xyz')); smiles = mol.write('smiles').split('\t')[0]; print(smiles); ```. XYZ file contents:; ```; 21; Energy: 46.5530552; Li -1.05918 -6.48375 3.03497; C -3.67179 -3.25569 4.73488; O -2.88169 -4.12988 5.05149; O -3.95901 -6.03517 3.39980; O -4.97821 -3.46526 4.48731; C -5.26948 -5.59870 3.34006; C -5.65864 -4.68124 4.51417; H -5.94439 -6.48245 3.31165; H -5.41690 -5.03354 2.39534; H -6.75045 -4.49118 4.40348; H -5.51590 -5.18271 5.49492; C -3.47339 -6.91364 4.31571; O -2.16776 -7.23753 4.29134; O -3.32406 -1.96706 4.65992; O -4.20346 -7.42376 5.15235; C -4.43330 -1.22706 4.32170; C -5.58838 -2.24603 4.27319; H -4.26286 -0.76996 3.32316; H",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1808:1311,test,test,1311,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1808,1,['test'],['test']
Testability,"l/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: ``; Linux mscoc7 5.15.0-58-generic #64-Ubuntu SMP Thu Jan 5 11:43:13 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux ; Distributor ID: Ubuntu; Description: Ubuntu 22.04.1 LTS; Release: 22.04; Codename: jammy; ``. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; No failed tests. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; ```; The following tests FAILED:; 60 - test_gzip_1 (Failed); 72 - test_isomorphism_5 (Failed); 73 - test_isomorphism_6 (Failed); 77 - test_multicml_1 (Failed); 97 - test_rotor_2 (Failed); 98 - test_rotor_3 (Failed); 99 - test_rotor_4 (Failed); 214 - pytest_sym (Failed); 217 - pytest_distgeom (Failed); Errors while running CTest; ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; `tar -xvf openbabel-3.1.1-source.tar.bz2; cd openbabel-3.1.1; mkdir build; cd build/; cmake ..; make -j16; make test; ctest --rerun-failed --output-on-failure`. Full output attached. The `test_rotor` failure sound particularly serious since I want to use the `--gen3D` function. [mscoc7_ob311_failed_tests.txt](https://github.com/openbabel/openbabel/files/10810027/mscoc7_ob311_failed_tests.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2573:1151,test,tests,1151,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2573,3,['test'],"['test', 'tests']"
Testability,"lain text; Full Aux. info; Timeout per structure: 60000 msec; Up to 1024 atoms per structure. Error 71 (no InChI; Error: No V3000 CTAB end marker) inp structure #1.; End of file detected after structure #1. ; Finished processing 1 structure: 1 error, processing time 0:00:00.00; $ cat obabel_Helium.sdf.txt ; * Input_File: ""./obabel_Helium.sdf""; $ ; $ obabel obabel_Helium.sdf -oinchi; InChI=1S/He; 1 molecule converted; $ ; ```. 2) On the other hand, [Marvin](https://marvinjs-demo.chemaxon.com/latest/) describes the same structure without the empty atom block:. ```. Mrv2311 09192409232D . 0 0 0 0 0 999 V3000; M V30 BEGIN CTAB; M V30 COUNTS 1 0 0 0 0; M V30 BEGIN ATOM; M V30 1 He -0.875 1.6667 0 0; M V30 END ATOM; M V30 END CTAB; M END; ```. Both InChI trust's reference executable, as well as OpenBabel can process and assign an InChI on this dataset:. ```shell; $ ./inchi-1 ./marvinjs_He_v3000.mol; InChI version 1, Software v. 1.07 (inchi-1 executable) ; Linux 64-bit Build (gcc 11.4.0) of Aug 10 2024 18:58:34. Opened log file './marvinjs_He_v3000.mol.log'; Opened input file './marvinjs_He_v3000.mol'; Opened output file './marvinjs_He_v3000.mol.txt'; Opened problem file './marvinjs_He_v3000.mol.prb'; The command line used:; ""./inchi-1 ./marvinjs_He_v3000.mol""; Generating standard InChI; Input format: MOLfile; Output format: Plain text; Full Aux. info; Timeout per structure: 60000 msec; Up to 1024 atoms per structure. End of file detected after structure #1. ; Finished processing 1 structure: 0 errors, processing time 0:00:00.00; $ cat ./marvinjs_He_v3000.mol.txt ; * Input_File: ""./marvinjs_He_v3000.mol""; Structure: 1; InChI=1S/He; AuxInfo=1/0/N:1/rA:1nHe/rB:/rC:.25,2.375,0;; $ ; $ obabel ./marvinjs_He_v3000.mol -oinchi; InChI=1S/He; 1 molecule converted; ```. The observations are collected with InChI version 1.07.1 published by August 21 ([source](https://github.com/IUPAC-InChI/InChI/releases)), and OpenBabel version 3.1.1/Sep 4 2024 as provided by Linux Debian 13/trixie.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2725:2711,log,log,2711,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2725,2,['log'],['log']
Testability,"lds as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version:Debian Buster, glibc ver. 2.28(most recent for Debian), gcc 8.3.0, Boost 1.76.0. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Compiled static version of Open Babel 3.1.1. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; It appears that during the make routine, it is trying to link dynamic version of library libboost_iostreams.so (confirmed that static library libboost_iostreams.a exists in boost path/lib) and also getting error for undefined reference to symbol. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; command line syntax: ; ```; cmake .. \; 	-DCMAKE_PREFIX_PATH=$BOOST_PATH \; 	-DCMAKE_INSTALL_PREFIX=$OPENBABEL_CMAKE_PREFIX \; 	-DZLIB_ROOT=$ZLIB_PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFil",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2377:1592,test,test,1592,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377,1,['test'],['test']
Testability,"libXML and zlib should be optional. -- Could NOT find LibXml2 (missing: LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR); -- Could NOT find ZLIB (missing: ZLIB_LIBRARY ZLIB_INCLUDE_DIR); -- Could NOT find wxWidgets (missing: wxWidgets_FOUND); -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; LIBXML2_LIBRARIES (ADVANCED); linked by target ""openbabel"" in directory /home/user/tools/openbabel/trunk/src; ZLIB_LIBRARY (ADVANCED); linked by target ""openbabel"" in directory /home/user/tools/openbabel/trunk/src. -- Configuring incomplete, errors occurred!. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/961:247,Test,Test,247,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/961,3,"['Test', 'test']","['Test', 'tested']"
Testability,"link dynamic version of library libboost_iostreams.so (confirmed that static library libboost_iostreams.a exists in boost path/lib) and also getting error for undefined reference to symbol. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; command line syntax: ; ```; cmake .. \; 	-DCMAKE_PREFIX_PATH=$BOOST_PATH \; 	-DCMAKE_INSTALL_PREFIX=$OPENBABEL_CMAKE_PREFIX \; 	-DZLIB_ROOT=$ZLIB_PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2377:2226,test,test,2226,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377,1,['test'],['test']
Testability,linux-gnu/libcairo.so.2: undefined reference to `FT_Get_Var_Design_Coordinates'; collect2: error: ld returned 1 exit status; src/GUI/CMakeFiles/obgui.dir/build.make:149: recipe for target 'bin/obgui' failed; make[2]: *** [bin/obgui] Error 1; CMakeFiles/Makefile2:6751: recipe for target 'src/GUI/CMakeFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFil,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:52284,test,test,52284,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,logP contrib per heavy atom,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/74:0,log,logP,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/74,1,['log'],['logP']
Testability,"luation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:11569,test,test,11569,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,2,['test'],"['test', 'testkekule']"
Testability,"luation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:9408,test,test,9408,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,2,['test'],"['test', 'testunique']"
Testability,"m/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Linuxmint-20.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The program should read input data from _stdin_ and output all separate disconnected fragments into individual molecular records. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The program reads input data from _stdin_ and outputs only one of the disconnected fragments as an individual molecular record. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; I have observed this behaviour with SMILES and SDF formats, but it is possible that other formats are affected as well. Contents of the `test.smi` file:; <pre>; [Na].[Cl]; </pre>. Providing the `test.smi` file directly results in the expected output:; <pre>; $ obabel -iSMI test.smi -oSMI --separate. [Na]	#1; [Cl]	#2; 2 molecules converted; </pre>. However, reading the same data from _stdin_ results in only the first component being output:; <pre>; $ cat test.smi | obabel -iSMI -oSMI --separate. [Na]	#1; 1 molecule converted; </pre>",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2386:1494,test,test,1494,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2386,5,['test'],['test']
Testability,make stdout writes dependent on verbose flag that allow to turn off logs completely,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2477:68,log,logs,68,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2477,1,['log'],['logs']
Testability,make test fails on some tests,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044:5,test,test,5,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044,2,['test'],"['test', 'tests']"
Testability,"make test fails, and can't use pybel.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2046:5,test,test,5,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2046,1,['test'],['test']
Testability,"master is not generating correct atom types when outputting pdbqt files. This is because the pdbqt writer works on copies (possibly fragments) of the original molecule. The copies have their perception flags reset. By default, nonpolar hydrogens are removed when outputting pdbqt files. When the aromaticity flags are recomputed on the molecule with the deleted hydrogens, atoms that should be aromatic are not marked as such. Note that this is a regression from 2.4. My suspicion is that there is a difference in how the new aromatic typer is dealing with molecules with deleted hydrogens. I would appreciate it if @baoilleach could take a look. I think this fix is good in addition to any fixes that may be made to the aromatic typer as it will prevent an unnecessary recomputation of aromaticity, but would appreciate feedback. A test case is provided (without the fix the phenyl ring of the tyrosine is not marked aromatic).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1790:833,test,test,833,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1790,1,['test'],['test']
Testability,me error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 183; Start 183: test_ffmmff94_5; --; 183: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 183: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 185; Start 185: test_ffuff_1; --; 185: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 185: SUMMARY: UndefinedBehaviorSanitizer: undefine,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:17756,test,test,17756,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,me error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 183; Start 183: test_ffmmff94_5; --; 183: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 183: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 185; Start 185: test_ffuff_1; --; 185: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 185: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 203; Start 203: test_phmodel_1; --; 203: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 203: SUMMARY: UndefinedBehaviorSanitizer: undefined-b,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:18021,test,test,18021,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"n Babel. ## Environment Information; Open Babel version: `3.0.0` (installed using `conda` and the `conda-forge` channel); Operating system and version: macOS 10.15. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. I expect `pybel.readfile` to work with multi-model PDB files as it does for SDF and MOL2 files. For the following test PDD; ```text; MODEL 1; HETATM 1 C UNL 1 5.100 4.809 -9.314 1.00 0.00 C; HETATM 2 C UNL 1 4.758 6.074 -9.583 1.00 0.00 C; ENDMDL; MODEL 2; HETATM 1 C UNL 1 5.125 4.901 -9.530 1.00 0.00 C; HETATM 2 C UNL 1 4.570 6.075 -9.852 1.00 0.00 C; ENDMDL; END; ```. I expect the following code to work:; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]. asseret len(obmols) == 2; ```. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. The previous code snippet fails with an `AssertionError`:; ```python; AssertionError Traceback (most recent call last); <ipython-input-3-119b3d6fa691> in <module>; ----> 1 assert len(obmols) == 2. AssertionError:. ```. The reason is that `len(obmols)` is equal to `3` and the last molecule is empty. The following code; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]; for obmol in obmols:; print(obmol, obmol.OBMol.NumAtoms(), obmol.OBMol.NumBonds()); ```. produces the following output:. ```text; C#C	test.pdb; 2 1; C#C	test.pdb; 2 1; 	test.pdb; 0 0. ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. See above. ## Comments. The code failing above works as expected with multi-molecule MOL2 and SDF files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2097:1082,Assert,AssertionError,1082,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2097,9,"['Assert', 'assert', 'test']","['AssertionError', 'assert', 'test']"
Testability,"nbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version:; ```; # Name Version Build Channel; openbabel 3.1.1 py310h956b46e_7 conda-forge; ```; Operating system and version:; ```; Distributor ID: ManjaroLinux; Description: Manjaro Linux; Release: 23.0.0; Codename: Uranos; ```. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I was trying to recover bond orders and atom specific formal charges from a XYZ file of a molecule. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; It seems only the bond orders are recovered but the charges on the NH3+ and COO- are not written to the output SDF file.; Wondering if there are other functions I need to call for this.; I do not wish to add or remove hydrogen atoms as the molecule should not be modified in any way. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ```python; from openbabel import pybel. mol = next(pybel.readfile(format=""xyz"", filename=""structure.xyz"")) # readfile returns an iterator; mol.OBMol.ConnectTheDots() # perceives bonding between atoms; mol.OBMol.PerceiveBondOrders(). mol.write(format=""sdf"", filename=""structure.sdf"", overwrite=True); ```. [structures.zip](https://github.com/openbabel/openbabel/files/12459604/structures.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2623:1655,test,test,1655,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623,1,['test'],['test']
Testability,"nbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10 and Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The NET binding worked fine under the net core 2.1, net core 3.1 and net framework 4.x at version 2.4.1 and 3.0.0. I have tested both on Windows and Linux system. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The NET binding fails to work at net framework 4.x and all versions of net core. System.BadImageFormatException:“Could not load file or assembly 'OBDotNet, Version=0.5.0.0, Culture=neutral, PublicKeyToken=3069c9c4f488e4bd'. An attempt was made to load a program with an incorrect format”. It looks like the OBDotNet.dll has not been updated since version 2.3.2, the targeted framework is still net framework 3.5. For some reason, it still works under net framework 4.x and net core. But it no longer works in version 3.1.1. Those who use net framework or net core environment, please do not upgrade to 3.1.1, stay at 3.0.0 or lower. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2268:2038,test,test,2038,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2268,1,['test'],['test']
Testability,"nclude/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; python setup.py install; ----------------------------------------; ERROR: Command errored out with exit status 1: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile Check the logs for full command output. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018:2727,log,logs,2727,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018,1,['log'],['logs']
Testability,ng CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:53721,test,test,53721,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,ng CXX object tools/CMakeFiles/obminimize.dir/obminimize.o; [ 86%] Linking CXX executable ../bin/obsym; [ 86%] Built target obsym; Scanning dependencies of target obtautomer; [ 86%] Building CXX object tools/CMakeFiles/obtautomer.dir/obtautomer.o; [ 86%] Linking CXX executable ../bin/obminimize; [ 86%] Built target obminimize; Scanning dependencies of target obgui; [ 86%] Linking CXX executable ../bin/obtautomer; [ 86%] Built target obtautomer; Scanning dependencies of target test_inchiwrite; [ 86%] Building CXX object test/CMakeFiles/test_inchiwrite.dir/inchiwrite.o; [ 86%] Building CXX object src/GUI/CMakeFiles/obgui.dir/OBGUI.o; [ 86%] Building CXX object test/CMakeFiles/test_inchiwrite.dir/__/src/formats/getinchi.o; [ 87%] Linking CXX executable ../bin/test_inchiwrite; [ 87%] Built target test_inchiwrite; [ 88%] Building CXX object src/GUI/CMakeFiles/obgui.dir/stdwx.o; [ 88%] Building CXX object src/GUI/CMakeFiles/obgui.dir/optswx.o; Scanning dependencies of target test_runner; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.o; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.o; [ 88%] Linking CXX executable ../../bin/obgui; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/buildertest.o; //usr/lib/x86_64-linux-gnu/libharfbuzz.so.0: undefined reference to `FT_Get_Var_Blend_Coordinates'; //usr/lib/x86_64-linux-gnu/libgtk-3.so.0: undefined reference to `g_log_structured_standard'; //usr/lib/x86_64-linux-gnu/libcairo.so.2: undefined reference to `FT_Get_Var_Design_Coordinates'; collect2: error: ld returned 1 exit status; src/GUI/CMakeFiles/obgui.dir/build.make:149: recipe for target 'bin/obgui' failed; make[2]: *** [bin/obgui] Error 1; CMakeFiles/Makefile2:6751: recipe for target 'src/GUI/CMakeFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:50825,test,test,50825,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"nt 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 97; Start 97: test_rotor_2; --; 97: ../src/obconversion.cpp:302:24: runtime error: load of value 109, which is not a valid value for type 'bool'; 97: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 98; Start 98: test_rotor_3; --; 98: ../src/obconversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-beh",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:12434,test,test,12434,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"o a OBConversion should not be deallocated before the OBConversion is deallocated or the stream is replaced. Details:; This was all motivated by a memory leak due to the line ending filter. OBConversion would swap out the rdbuf of the passed input stream with its own filtering rdbuf to normalize all line endings. This means a user-provided data structure is having its internals messed with and there is no way to properly free the filtering streambuf (since OBConversion doesn't control the stream itself). This would cause my long running program that opens millions of files to eventually consume all the memory on the machine and crash. Not acceptable. The solution is to not mess with the internals of the passed stream, but wrap the stream with a filtering stream. The full stream is wrapped, not just the underlying streambuf, in order to (more or less) keep the state of the user-provided stream consistent. That is, when OBConversion reads to the end of the file, the good bit of the user-provided steram will also be turned off (some test code depended on this behavior). GetInStream/GetOutStream may now return a stream that is not identical to the user-provided stream (since it's the wrapped version). In addition to the newline filter, streams may be wrapped if compression is enabled. . Compression is now provided by virtue of wrapping the stream (and leaving it that way until all writing/reading is done). GetInStream/GetOutStream provide this wrapped stream and so can be read as if the underlying stream were not compressed. FormatFromExt can take a second argument, a bool passed by reference, that will be set to true if the file is gzipped. For example, ""sdf.gz"" will return the SDF format and set the bool to true. SetInAndOutFormat, SetInFormat, SetOutFormat have all been modified to take an optional isgzip parameter which, if true, enables compression. The functions GetInGzipped/GetOutGzipped are also provided. Essentially, the compression state of the file is part of",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/191:1432,test,test,1432,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/191,1,['test'],['test']
Testability,"o openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 2.5.0 (2017-XX-XX) (cloned from github.com); Operating system and version: Ubuntu 16.04.4 LTS; Running Anaconda python 3.6. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. Openbabel imports fine, but Pybel returns a unicode error. . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. compiled using:. cmake .. -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON . make & sudo make install all run ok. make test all tests run fine. Output from python below:. Python 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) ; [GCC 7.2.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import openbabel; >>> import pybel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/xxxx/anaconda3/lib/python3.6/site-packages/pybel.py"", line 43, in <module>; descs = _getpluginnames(""descriptors""); File ""/home/xxxx/anaconda3/lib/python3.6/site-packages/pybel.py"", line 41, in _getpluginnames; return [x.split()[0] for x in plugins]; File ""/home/xxxx/anaconda3/lib/python3.6/site-packages/pybel.py"", line 41, in <listcomp>; return [x.split()[0] for x in plugins]; UnicodeDecodeError: 'utf-8' codec can't decode byte 0xf0 in position 0: invalid continuation byte",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1805:1588,test,test,1588,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1805,2,['test'],"['test', 'tests']"
Testability,"o.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 213; Start 213: inchiSteffen_PubChem.smi_Test; --; 213: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 213: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 213: /usr/include/string.h:44:28: note: nonnull attribute specified here; 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 213: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 213: /usr/include/string.h:44:28: note: nonnull attribute specified here; 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; 213: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```shell; mkdir build; cd build; CC=clang CXX=clang++ cmake -DBOOST_ROOT=path/to/boost -DEIGEN3_INCLUDE_DIR=path/to/eigen/include/eigen3 -DPYTHON_BINDINGS=YES -DRUN_SWIG=YES -DWITH_COORDGEN=YES ..; make; ctest -V; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:25622,test,test,25622,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/math.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/mol.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/phmodel.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/residue.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/ringtest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartstest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartsparse.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/smilesmatch.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/unitcell.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/cmlreadfile.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/obtest.o; [ 99%] Linking CXX executable ../bin/test_runner; [ 99%] Built target test_runner; Makefile:140: recipe for target 'all' failed; make: *** [all] Error 2. ```; Any help would be appreciated. Thanks in advance.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:55022,test,test,55022,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,11,['test'],['test']
Testability,"obabel has no problem creating a .fs file from a .sdf.gz file. However, the search will fail because the .fs file stored the record index in the uncompressed file, while the datastream.seekg() seeks to a position in the compressed file, and the code returns compressed text. As a result, the fastsearch results are essentially useless. What this patch does is:; 1. print a warning message during index creation if the input file is gzip compressed; 2. log an error message and stop during search if the datafile is gzip compressed",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1733:452,log,log,452,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1733,1,['log'],['log']
Testability,"obabel test_input.sdf -O test.sdf --append ""cansmi"" # only works with a single molecule",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1603:25,test,test,25,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1603,1,['test'],['test']
Testability,obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMakeFiles/obabel.dir/all] Error 2; ---------------------------------------------------------------; [100%] Linking CXX executable ../bin/test_runner; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/test_runner.dir/build.make:1049: bin/test_runner] Error 1; make[1]: *** [CMakeFiles/Makefile2:1166: test/CMakeFiles/test_runner.dir/all] Error 2; make: *** [Makefile:141: all] Error 2; ```; [MakeLog.log](https://github.com/openbabel/openbabel/files/6606177/MakeLog.log); [CMakeLog.log](https://github.com/openbabel/openbabel/files/6606178/CMakeLog.log),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2377:3806,test,test,3806,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377,6,"['log', 'test']","['log', 'test']"
Testability,"obgrep reports SMARTS as illegal, but it is actually valid SMARTS:. am@box:~$ obgrep ""F-c1:c:c2:c(:c(:c:n:c:2:c:c:1-N1-C-C-N-C-C-1)-C(-O)=O)=O"" test.smi; ==============================; *** Open Babel Error in SMARTSError; SMARTS Error:; F-c1:c:c2:c(:c(:c:n:c:2:c:c:1-N1-C-C-N-C-C-1)-C(-O)=O)=O; ^. Reported by: maunza",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/959:144,test,test,144,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/959,1,['test'],['test']
Testability,obprop needs to add non-explicit hydrogens before calculation. see results below. user$ /Downloads/openbabel-2.0.0b2-20050701/tools/obprop /Users/; user/Desktop/test.smi ; name stilbene; mol_weight 168.15; num_rings 2; $$$$; name trans Stilbene; mol_weight 168.15; num_rings 2; $$$$; name cis Stilbene; mol_weight 168.15; num_rings 2; $$$$; name benzene; mol_weight 72.0642; num_rings 1; $$$$. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/455:161,test,test,161,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/455,1,['test'],['test']
Testability,obsym; [ 86%] Built target obsym; Scanning dependencies of target obtautomer; [ 86%] Building CXX object tools/CMakeFiles/obtautomer.dir/obtautomer.o; [ 86%] Linking CXX executable ../bin/obminimize; [ 86%] Built target obminimize; Scanning dependencies of target obgui; [ 86%] Linking CXX executable ../bin/obtautomer; [ 86%] Built target obtautomer; Scanning dependencies of target test_inchiwrite; [ 86%] Building CXX object test/CMakeFiles/test_inchiwrite.dir/inchiwrite.o; [ 86%] Building CXX object src/GUI/CMakeFiles/obgui.dir/OBGUI.o; [ 86%] Building CXX object test/CMakeFiles/test_inchiwrite.dir/__/src/formats/getinchi.o; [ 87%] Linking CXX executable ../bin/test_inchiwrite; [ 87%] Built target test_inchiwrite; [ 88%] Building CXX object src/GUI/CMakeFiles/obgui.dir/stdwx.o; [ 88%] Building CXX object src/GUI/CMakeFiles/obgui.dir/optswx.o; Scanning dependencies of target test_runner; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.o; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.o; [ 88%] Linking CXX executable ../../bin/obgui; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/buildertest.o; //usr/lib/x86_64-linux-gnu/libharfbuzz.so.0: undefined reference to `FT_Get_Var_Blend_Coordinates'; //usr/lib/x86_64-linux-gnu/libgtk-3.so.0: undefined reference to `g_log_structured_standard'; //usr/lib/x86_64-linux-gnu/libcairo.so.2: undefined reference to `FT_Get_Var_Design_Coordinates'; collect2: error: ld returned 1 exit status; src/GUI/CMakeFiles/obgui.dir/build.make:149: recipe for target 'bin/obgui' failed; make[2]: *** [bin/obgui] Error 1; CMakeFiles/Makefile2:6751: recipe for target 'src/GUI/CMakeFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX ob,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:50899,test,test,50899,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"ocs, examples etc.) in `C:\ProgramData\OpenBabel-3.1.1`; - Uninstall registry key to `\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\OpenBabel-3.1.1`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The installer drops its files and registry values in locations specific to the user account under which context the installer was run. To illustrate with an example scenario: a user is logged in interactively with a standard user account named 'Bob' with SID `S-1-5-21-1234`. The user downloads and runs the installer and is prompted to enter admin credentials so the user authenticates with an account named 'Admin' with SID `S-1-5-21-1000`. The installer finishes successfully but the user doesn't see OpenBabel in the Apps list in Windows Settings (alt. Programs and Features in Control Panel) or any shortcuts in their Start Menu; they log out from Bob and log in as Admin to find both there. The files and registry key are incorrectly in places specific for the account which was used to elevate the privileges of the installer (Admin in this example), not for the user which had interactively executed the installer (Bob in this example) or for all users on the computer (see the **Expected Behavior** section above).; - Shortcuts in `C:\Users\Admin\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\OpenBabel 3.1.1`; - Miscellaneous program data (docs, examples etc.) in `C:\Users\Admin\AppData\Roaming\OpenBabel-3.1.1`; - Uninstall registry key to `\HKEY_USERS\S-1-5-21-1000\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\OpenBabel-3.1.1`. This issue is particularly important on multi-user machines as well as for packaging the software for Microsoft SCCM/Intune. This does not pose an issue only in the scenario of single account machines where the account used for regular work is an administrator. ## Step",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2724:2002,log,log,2002,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2724,2,['log'],['log']
Testability,"oject: OBCommonFormats, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; APIInterface.cpp; atomrecord.cpp; cansmilesformat.cpp; ..\..\src\formats\cansmilesformat.cpp(865) : warning C4101: 'canorder' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1346) : warning C4101: 'atom' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1397) : warning C4101: 'p' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1397) : warning C4101: 'pp' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1395) : warning C4101: 'tmp' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1396) : warning C4101: 'chg' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1445) : warning C4101: 'bond' : unreferenced local variable; mdlformat.cpp; mol2format.cpp; ..\..\src\formats\mol2format.cpp(341) : warning C4800: 'const char *' : forcing value to bool 'true' or 'false' (performance warning); obmolecformat.cpp; opendxformat.cpp; pdbformat.cpp; smilesformat.cpp; Generating Code...; Compiling manifest to resources...; Microsoft (R) Windows (R) Resource Compiler Version 6.0.5724.0; Copyright (C) Microsoft Corporation. All rights reserved.; Linking...; Creating library ..\Debug/obcommonD.lib and object ..\Debug/obcommonD.exp; Embedding manifest...; Microsoft (R) Windows (R) Resource Compiler Version 6.0.5724.0; Copyright (C) Microsoft Corporation. All rights reserved.; Creating browse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.21022; Copyright (C) Microsoft Corporation. All rights reserved.; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Debug\BuildLog.htm""; OBCommonFormats - 0 error(s), 8 warning(s); ========== Build: 1 succeeded, 0 failed, 3 up-to-date, 0 skipped ==========. Can the warnings be safely ignored?. Reported by: peterennis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767:2174,log,log,2174,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767,1,['log'],['log']
Testability,"on; Open Babel version: 3.1.0; Operating system and version: Windows 10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Aromatic rings of protein complex molecule correctly identified. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I used ob.OBConversion().ReadFile() to read PDB file (mmCIF format) into mol.; All rings returned by mol.GetSSSR() are labeled as ""non-aromatic"", which is incorrect.; The same procedure on older PDB file format produced the correct results, i.e. some of the rings are labeled as ""aromatic"". So far I have been able to trace the discrepancy to OBAtom.GetImplicitHCount(), so there was probably a bug in the PDB file reading code that didn't correct update the implicit H count. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; The following is python code to reproduce this error, biopython is used to retrieve PDB file, which can be done manually. ```; from Bio.PDB import PDBList; from openbabel import openbabel as ob; pdbl = PDBList(); pdb_fname_old = pdbl.retrieve_pdb_file('3BBT', file_format='pdb'); pdb_fname_new = pdbl.retrieve_pdb_file('3BBT') ; ```; #### Build mol object from PDB file of older format. ```; ob_conv = ob.OBConversion(); ob_conv.SetInFormat('PDB'); mol1 = ob.OBMol(); ob_conv.ReadFile(mol1, pdb_fname_old ); ```; #### Build mol object from PDB file of newer format; ```; ob_conv = ob.OBConversion(); ob_conv.SetInFormat('mmCIF'); mol2 = ob.OBMol(); ob_conv.ReadFile(mol2, pdb_fname_new ); ```; #### The following results for the two mol object differ, where the first gives correct results, the second returns False ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2440:1774,test,test,1774,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2440,1,['test'],['test']
Testability,"openbabel provides working functionality to perform substructure searches using SMARTS. This works well on SMILES files. . openbabel xxx.smi -ocan -s a1aaaa1. This SMARTS query retrieves all molecular structures with aromatic 5-membered ring systems from xxx.smi. Further, openbabel provides working functionality to generate fingerprint indexes to speed up substructure searching by candidate preselection. . openbabel xxx.smi -ofs . This generates the index file xxx.fs. Now, the index file can be used to search quickly:. openbabel xxx.fs -ocan -s C1CCCC1. This SMARTS query retrieves all molecular structures containing a cyclopentane moiety correctly. Apparently, this works. But C1CCCC1 does not only denote a valid SMARTS but also a valid SMILES! . Using a SMARTS that does NOT denote a valid SMILES like the first example (""a"" stands for any aromatic atom of N,C,O,S,Se) does not work and produces an error-message:. openbabel xxx.fs -ocan -s a1aaaa1. gives:. ==============================; *** Open Babel Error in ObtainTarget; Filename of pattern molecule in -S option must have an extension; 0 molecules converted; 1 errors 4 audit log messages . src/formats/fastsearchformat.cpp is suspect to me.; The message is produced in line 488 but a few lines before:. txt=p;; stringstream smarts(txt, stringstream::in);		; OBConversion Convsm(&smarts);; if(!Convsm.SetInFormat(""smi"")) return false;; Convsm.Read(&patternMol);. patternMol.Empty() is true for real SMARTS and false for SMILES. Reported by: vitalingo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/819:1144,log,log,1144,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/819,1,['log'],['log']
Testability,"or reports on test coverage for openbabel and wasn't able to find any. Would such reports be a welcome addition to the CI setup?. ![image](https://user-images.githubusercontent.com/1053245/102149305-682c7200-3e6e-11eb-9010-6b1eb109ab93.png). I started looking into adding this via CI [here](https://github.com/ltalirz/openbabel/tree/add-coverage) but it turns out that when compiling with `-DCMAKE_BUILD_TYPE=Debug` (which I believe is required for accurate coverage results - didn't check, though), the tests take a very long time ([gh actions log](https://github.com/ltalirz/openbabel/runs/1554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Te",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2312:1080,Test,Test,1080,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312,1,['Test'],['Test']
Testability,or: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: unde,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:16955,test,test,16955,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"osed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Cygwin, Python 3.7.4. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Expected to import openbabel. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>; Openbabel cannot be properly imported due to missing ""_clear"" attributes. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; I installed the new OpenBabel 3.0.0 with python bindings and swig on but there is an issue with the import of openbabel into python code now. OpenBabel 2.4.1 was working correctly before. Perhaps I am missing something?. Stack Trace & Error Message:; File ""/usr/lib/python3.7/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/usr/lib/python3.7/site-packages/openbabel/openbabel.py"", line 166, in <module>; vectorInt.clear = new_instancemethod(_openbabel.vectorInt_clear, None, vectorInt); AttributeError: module '_openbabel' has no attribute 'vectorInt_clear'",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2062:1345,test,test,1345,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2062,1,['test'],['test']
Testability,"ost to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10, 64-bit, version 20H2. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When installing the Open Babel 3.1.1 binaries, I know that this installs Visual C++ redistributable libraries. I expected this to occur silently, and maybe having to reboot my computer afterwards. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The installation of the Visual C++ redistributable libraries occurred silently, but then my machine rebooted, terminating all applications that I had open. This could be called a user error, since the installer probably tells me to close all other applications and whatnot, but it has been years since I've seen an installer spontaneously rebooting my machine without first asking me. If I may offer a suggestion: there is a flag /norestart for executing the installation of the redistributable libraries. Using this flag should prevent the spontaneous reboot. But it may then be necessary to tell the user to reboot their computer manually, which is of course also not ideal. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Install the Windows version of Open Babel on a computer that does not yet have the version of the Visual C++ redistributable libraries that comes with the installer.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2313:2128,test,test,2128,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2313,1,['test'],['test']
Testability,"ou see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Gentoo Linux, 5.6.15-gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Failed 0/8 test programs. 0/34 subtests failed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Can't call method ""GetMass"" on an undefined value at t/data.t line 21.; t/data.t ........... Dubious, test returned 255 (wstat 65280, 0xff00) ; Failed 1/2 subtests . t/data.t (Wstat: 65280 Tests: 1 Failed: 0); Non-zero exit status: 255; Parse errors: Bad plan. You planned 2 tests but ran 1.; Files=8, Tests=34, 0 wallclock secs ( 0.03 usr 0.01 sys + 0.39 cusr 0.06 csys = 0.49 CPU); Result: FAIL; Failed 1/8 test programs. 0/34 subtests failed. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; swig -perl5 -c++ -small -O -templatereduce -naturalvar -I/usr/include/openbabel3 -o scrips/perl/openbabel-perl.cpp -outdir scrips/perl scripts/openbabel-perl.i; cd scrips/perl; perl Makefile.PL PREFIX=/usr INSTALLDIRS=vendor INSTALLMAN3DIR=none DESTDIR=/var/tmp/portage/sci-chemistry/openbabel-perl-3.1.1/image INC=-I/usr/include/openbabel3; make -j17 -l4 'OTHERLDFLAGS=-Wl,-O1 -Wl,--as-needed -Wl,--hash-style=gnu; make -j17 -l4 test; ```. The offending line in `scrips/perl/t/data.t` is:; ```; my $mass = $Chemistry::OpenBabel::etab->GetMass(2);; ```; I don't know much about perl but it likely pertains to the shift from the use of `etab` to the use of `OBElement",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2247:1529,test,test,1529,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247,1,['test'],['test']
Testability,"ourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. This issue is similar to issue #780 but not the same. The problematic atom names occur in DNA strands not in proteins. ## Environment Information; Open Babel version: 2.4.1 ; Operating system and version: Linux 2.6.32-220.el6.x86_64. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I am converting a PDB file containing two strands of DNA into the XYZ format. The terminal bases in the DNA strands have hydrogen atoms labeled HO3' and HO5'. In the XYZ file produced they should be labeled as H for Hydrogen. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; The atoms labeled HO3' and HO5' in the PDB file are translated into Ho (Holmium) instead of into Hydrogen. This produces rather unnatural DNA. As I have about 6000 structures to convert I don't want to fix this by hand. - [test.pdb.gz](https://github.com/openbabel/openbabel/files/3530515/test.pdb.gz) The PDB file with the offending atoms numbered 7715, 8313, 8314, and 8918.; - [test_wrong.xyz.gz](https://github.com/openbabel/openbabel/files/3530517/test_wrong.xyz.gz) The XYZ file produced by OpenBabel.; - [test_expected.xyz.gz](https://github.com/openbabel/openbabel/files/3530520/test_expected.xyz.gz) The XYZ file corrected by hand. <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; The incorrect XYZ file was produced by running:; `obabel -ipdb test.pdb -O test_wrong.xyz`",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2016:1548,test,test,1548,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2016,4,['test'],['test']
Testability,"overloaded ""="" for OBAtom & OBMol don't test auto assign.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/865:40,test,test,40,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/865,1,['test'],['test']
Testability,"overloaded operators ""="" for OBAtom and ; OBMol don't test auto-assignation. Index: src/atom.cpp; ===================================================================; --- src/atom.cpp	(revision 2930); +++ src/atom.cpp	(working copy); @@ -149,8 +149,11 @@; //copy atom information; //bond info is not copied here as ptrs may be invalid; {; - _idx = src.GetIdx();; - Duplicate(&src);; + if( this != &src ); + {; + _idx = src.GetIdx();; + Duplicate(&src);; + }; return(*this);; }. Index: src/mol.cpp; ===================================================================; --- src/mol.cpp	(revision 2930); +++ src/mol.cpp	(working copy); @@ -1160,6 +1160,11 @@; //All OBGenericData incl OBRotameterList is copied, CM 2006; //OBChiralData for all atoms copied, TV 2008; {; + if( this == &source ); + {; + return *this;; + }; +; OBMol &src = (OBMol &)source;; vector<OBAtom*>::iterator i;; vector<OBBond*>::iterator j;. Reported by: lleell00",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/865:54,test,test,54,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/865,1,['test'],['test']
Testability,"p:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_addh_1; --; 61: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_impl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:5289,test,test,5289,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"p; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; ..\..\src\formats\mdlformat.cpp(629) : error C2780: 'const _Ty &std::min(const _Ty &,const _Ty &,_Pr)' : expects 3 arguments - 2 provided; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xutility(3379) : see declaration of 'std::min'; ..\..\src\formats\mdlformat.cpp(629) : error C2782: 'const _Ty &std::min(const _Ty &,const _Ty &)' : template parameter '_Ty' is ambiguous; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xutility(3371) : see declaration of 'std::min'; could be 'unsigned long'; or 'unsigned int'; atomrecord.cpp; APIInterface.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 2 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; fingerprint.cpp; finger3.cpp; finger2.cpp; Generating Code...; Linking...; Creating library ../OBFPRT.lib and object ../OBFPRT.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\BuildLog.htm""; OBFPRT - 0 error(s), 1 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; fingerprintformat.cpp; fastsearchformat.cpp; Generating Code...; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 0 error(s), 0 warning(s); ========== Build: 5 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========. Reported by: peterennis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/773:3756,log,log,3756,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/773,2,['log'],['log']
Testability,"pen Babel version: 3.1.1 (tested using the x64 installer); Operating system and version: Windows 11 23H2 (OS Build 22631.4037). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The installer drops OpenBabel's files and registry keys in a location for all users.; - Shortcuts in `C:\ProgramData\Microsoft\Windows\Start Menu\Programs\OpenBabel 3.1.1`; - Miscellaneous program data (docs, examples etc.) in `C:\ProgramData\OpenBabel-3.1.1`; - Uninstall registry key to `\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\OpenBabel-3.1.1`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The installer drops its files and registry values in locations specific to the user account under which context the installer was run. To illustrate with an example scenario: a user is logged in interactively with a standard user account named 'Bob' with SID `S-1-5-21-1234`. The user downloads and runs the installer and is prompted to enter admin credentials so the user authenticates with an account named 'Admin' with SID `S-1-5-21-1000`. The installer finishes successfully but the user doesn't see OpenBabel in the Apps list in Windows Settings (alt. Programs and Features in Control Panel) or any shortcuts in their Start Menu; they log out from Bob and log in as Admin to find both there. The files and registry key are incorrectly in places specific for the account which was used to elevate the privileges of the installer (Admin in this example), not for the user which had interactively executed the installer (Bob in this example) or for all users on the computer (see the **Expected Behavior** section above).; - Shortcuts in `C:\Users\Admin\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\OpenBabel 3.1.1`; - Miscellaneous program data (docs, examples etc.) in `C:\Users\Admin\AppData",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2724:1547,log,logged,1547,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2724,1,['log'],['logged']
Testability,"penbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/Users/n00002621/.local/share/virtualenvs/WFChemCookbook-hyZchOOL/include -I/opt/local/Library/Frameworks/Python.framework/Versions/3.10/include/python3.10 -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i; ; Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; error: legacy-install-failure. ```. <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Run the 'pip instll openbabel' command on a machine running MacOS 12.6.1. ## Other Python packages installed:; ((sciflow) ) n00002621@chalk3 sciflow % pip list; Package Version; ------------------------- ---------; asgiref 3.5.2; attrs 21.4.0; bcrypt 4.0.1; cachetools 5.2.0; certifi 2022.12.7; cffi 1.15.1; charset-normalizer 2.1.1; chembl-webresource-client 0.10.8; cryptography 38.0.4; defusedxml 0.7.1; Deprecated 1.2.13; Django 4.1.4; django-admin-logs 1.0.2; django-allauth 0.51.0; django-cors-headers 3.13.0; django-crispy-forms 1.14.0; django_debug_toolbar 3.8.1; djangorestframework 3.14.0; easydict 1.10; exceptiongroup 1.0.4; frozendict 2.3.4; idna 3.4; iniconfig 1.1.1; itsdangerous 2.1.2; jgo 1.0.5; JPype1 1.4.1; lxml 4.9.1; mypy-extensions 0.4.3; mysqlclient 2.1.1; numpy 1.23.5; oauthlib 3.2.2; packa",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2554:4690,test,test,4690,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2554,1,['test'],['test']
Testability,"penbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: OpenBabel 3.1.1+git2f34bda337d7ddefa8f2bebfc23931a63e45241f; Operating system and version: Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; - The build process should be completed without any errors. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; - It causes error like:; [error-deps.log](https://github.com/openbabel/openbabel/files/9179914/error-deps.log). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; - Build maeparser and install it on ../libmaeparser-1.2.4-220427; - Build coordgenlibs and install it on ../coordgenlibs-3.0.0-220427; - Run following command to try the build process:; `; mkdir build-openbabel; cd build-openbabel; cmake \; -DCMAKE_INSTALL_PREFIX=../openbabel-3.1.1-220621 \; -DBUILD_SHARED=OFF \; -DBUILD_MIXED=ON \; -DWITH_STATIC_INCHI=ON \; -DWITH_STATIC_LIBXML=ON \; -DWITH_COORDGEN=ON \; -DENABLE_OPENMP=ON \; -Dmaeparser_DIR=../libmaeparser-1.2.4-220427 \; -Dcoordgen_DIR=../coordgenlibs-3.0.0-220427 \; ../openbabel; `; `; cmake --build . --config Release -j; `; ## How to fix; - Apply following patch. It does not tested on any ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2513:1075,log,log,1075,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2513,1,['log'],['log']
Testability,"perl tests: Can't call method ""GetMass"" on an undefined value at t/data.t line 21.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2247:5,test,tests,5,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247,1,['test'],['tests']
Testability,"phsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_addh_1; --; 61: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_l",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:5550,test,test,5550,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"pip install openbabel. Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/; Collecting openbabel; Downloading openbabel-3.1.1.1.tar.gz (82 kB); |████████████████████████████████| 82 kB 1.0 MB/s ; Building wheels for collected packages: openbabel; Building wheel for openbabel (setup.py) ... error; ERROR: Failed building wheel for openbabel; Running setup.py clean for openbabel; Failed to build openbabel; Installing collected packages: openbabel; Running setup.py install for openbabel ... error; ERROR: Command errored out with exit status 1: /usr/bin/python3 -u -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '""'""'/tmp/pip-install-egicsh_z/openbabel_976894f6948d4a8aa4de632363cc09a7/setup.py'""'""'; __file__='""'""'/tmp/pip-install-egicsh_z/openbabel_976894f6948d4a8aa4de632363cc09a7/setup.py'""'""';f = getattr(tokenize, '""'""'open'""'""', open)(__file__) if os.path.exists(__file__) else io.StringIO('""'""'from setuptools import setup; setup()'""'""');code = f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record /tmp/pip-record-b91qplvd/install-record.txt --single-version-externally-managed --compile --install-headers /usr/local/include/python3.8/openbabel Check the logs for full command output. if anyone can update openbabel pypi (https://pypi.org/project/openbabel/) in python it will be helpful for us to do many things. Thanks in advance :)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2556:1292,log,logs,1292,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2556,1,['log'],['logs']
Testability,probe.dir/obprobe.o; [ 85%] Linking CXX executable ../bin/obrotate; [ 85%] Built target obrotate; Scanning dependencies of target obsym; [ 86%] Building CXX object tools/CMakeFiles/obsym.dir/obsym.o; [ 86%] Linking CXX executable ../bin/obprobe; [ 86%] Built target obprobe; Scanning dependencies of target obminimize; [ 86%] Building CXX object tools/CMakeFiles/obminimize.dir/obminimize.o; [ 86%] Linking CXX executable ../bin/obsym; [ 86%] Built target obsym; Scanning dependencies of target obtautomer; [ 86%] Building CXX object tools/CMakeFiles/obtautomer.dir/obtautomer.o; [ 86%] Linking CXX executable ../bin/obminimize; [ 86%] Built target obminimize; Scanning dependencies of target obgui; [ 86%] Linking CXX executable ../bin/obtautomer; [ 86%] Built target obtautomer; Scanning dependencies of target test_inchiwrite; [ 86%] Building CXX object test/CMakeFiles/test_inchiwrite.dir/inchiwrite.o; [ 86%] Building CXX object src/GUI/CMakeFiles/obgui.dir/OBGUI.o; [ 86%] Building CXX object test/CMakeFiles/test_inchiwrite.dir/__/src/formats/getinchi.o; [ 87%] Linking CXX executable ../bin/test_inchiwrite; [ 87%] Built target test_inchiwrite; [ 88%] Building CXX object src/GUI/CMakeFiles/obgui.dir/stdwx.o; [ 88%] Building CXX object src/GUI/CMakeFiles/obgui.dir/optswx.o; Scanning dependencies of target test_runner; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.o; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.o; [ 88%] Linking CXX executable ../../bin/obgui; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/buildertest.o; //usr/lib/x86_64-linux-gnu/libharfbuzz.so.0: undefined reference to `FT_Get_Var_Blend_Coordinates'; //usr/lib/x86_64-linux-gnu/libgtk-3.so.0: undefined reference to `g_log_structured_standard'; //usr/lib/x86_64-linux-gnu/libcairo.so.2: undefined reference to `FT_Get_Var_Design_Coordinates'; collect2: error: ld returned 1 exit status; src/GUI/CMakeFiles/obgui.dir/build.make:149: recipe for targe,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:50468,test,test,50468,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,ptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/math.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/mol.o; [ 98%] Building CXX object ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:54156,test,test,54156,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"pybel reports it can output copyformat, but it seemingly cannot. In [1]: import pybel. In [2]: pybel.outformats['copy']; Out[2]: 'Copy raw text'. In [3]: mol = pybel.readfile(""sdf"", ""Components-pub_less_than_300MW.sdf.gz"").next(). In [4]: mol.write('copy','test.sdf'); Not a valid output format. Reported by: @cowsandmilk. Original Ticket: [openbabel/bugs/899](https://sourceforge.net/p/openbabel/bugs/899)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1279:257,test,test,257,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1279,1,['test'],['test']
Testability,pytest_babel test fails on clean build,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2662:13,test,test,13,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2662,1,['test'],['test']
Testability,pyttest_babel test passes on clean build,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2663:14,test,test,14,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2663,1,['test'],['test']
Testability,"r add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43; Operating system and version: macOS 11.2.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect the energy from the `--gen3d best` command to deliver the global minimum or at least some <= the `--gen3d` option. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I first tried to calculate the energy using `--energy --append ""Energy""` and comparing this. This produced the same energy for both the default and best options and the structures were completely different. . I would expect based on the structure that the energy for the `--gen3d` default output would be a lower. . I took both molecules and imported into Avogadro and calculated the energy. The calculated energy for the `--gen3d` option was lower than that for the `--gen3d best` option. I've tested this with a few molecules and so far either the commands produce the same energy or the energy from the default option is lower than that of the ""best"" option. It is worth noting in all of the tests where the energy was the same they were negative values. While when they are different they are positive values. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; 1. Run; ```; obabel -:""<input smile>"" -Otest_data/gen3d_default.vmol --gen3d; obabel -:""<input smile>"" -Otest_data/gen3d_best.vmol --gen3d best; ```; 2. Open in Avogadro and comput energy.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2347:1713,test,tested,1713,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2347,3,['test'],"['test', 'tested', 'tests']"
Testability,"r is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 2.5.0 (2017-XX-XX) (cloned from github.com); Operating system and version: Ubuntu 16.04.4 LTS; Running Anaconda python 3.6. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. Openbabel imports fine, but Pybel returns a unicode error. . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. compiled using:. cmake .. -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON . make & sudo make install all run ok. make test all tests run fine. Output from python below:. Python 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) ; [GCC 7.2.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import openbabel; >>> import pybel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/xxxx/anaconda3/lib/python3.6/site-packages/pybel.py"", line 43, in <module>; descs = _getpluginnames(""descriptors""); File ""/home/xxxx/anaconda3/lib/python3.6/site-packages/pybel.py"", line 41, in _getpluginnames; return [x.split()[0] for x in plugins]; File ""/home/xxxx/anaconda3/lib/python3.6/site-packages/pybel.py"", line 41, in <listcomp>; return [x.split()[0] for x in plug",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1805:1379,test,test,1379,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1805,1,['test'],['test']
Testability,"r is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:3.1.1(conda-forge pre-compiled and self-compiled version); Operating system and version:Manjaro 5.15.12-1(64-bits). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Here are 2 similar example command lines:; ```sh; obabel -:'CC CC' -:'CC 4C' -:'CC CCC' -osmi --filter 'title=*C'; obabel -:'CO oh' -:'CO aoh' -:'CO oaoh' -:'CO ohaoh' -osmi --filter 'title=""*oh""'; ```; Expected output are:; ```txt; CC CC; CC 4C; CC CCC; 3 molecules converted; CO oh; CO aoh; CO oaoh; CO ohaoh; 4 molecules converted; ```; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Actual output are:; ```txt; CC 4C; 1 molecule converted; CO oh; CO aoh; CO oaoh; 3 molecules converted; ```; In general,if some target strings start with the same string as the one after the conditions' `*`,these targets will not be conversed,regardless of the existence of quotes around strings.This behavior seems to be a bug. ; The string comparsion with a sufixed `*`,however,works correctly.; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ```sh; obabel -:'CC CC' -:'CC 4C' -:'CC CCC' -osmi --filter 'title=*C'; obabel -:'CO oh' -:'CO aoh' -:'CO oaoh' -:'CO ohaoh' -osmi --filter 'title=""*oh""'; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2444:2036,test,test,2036,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2444,1,['test'],['test']
Testability,raphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 5: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 17; Start 17: test_builder_1; --; 17: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 17: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 18; Start 18: test_builder_2; --; 18: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 18: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 19; Start 19: test_builder_3; --; 19: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: unde,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:3173,test,test,3173,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"rch open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: macOS 10.15.6 && Ubuntu Linux 16.04.6 LTS. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Separately instantized `OBConversion`, `OBMol`, etc. objects should be thread-safe. (C++11). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When some openbabel objects are instantized inside separate `std::thread`'s with no shared memory, the program crashes with error message ""memory corruption or double-free of memory"".; I have not yet tried profiling the program (I'll do it soon), but I believe this is due to the global message handler `obErrorLog`, and/or some other shared objects. If it is, just adding some mutex and locking mechanism should fix this issue (hopefully). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Try to read some quite big (~10MiB) mol2 files (or any other format) in two or more `std::thread`'s, and the program will crash soon.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2269:1797,test,test,1797,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2269,1,['test'],['test']
Testability,"re request. ## Environment Information; Open Babel version: 3.1.1 (conda-forge - Python 3.7); Operating system and version: Kernel: 5.15.6-2-MANJARO x86_64 bits: 64 compiler: gcc v: 11.1.0; Desktop: GNOME 41.1 tk: GTK 3.24.30 wm: gnome-shell dm: GDM; Distro: Manjaro Linux base: Arch Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When running `python check_undercoordinated_sio2.py final.xyz` I should get the output:; `The sample has 68 under-coordinated Si and 68 under-coordinated O.`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When running for the `.xyz` file I get a Segmentation Fault.; If I convert the `.xyz` to a `.pdb` and pass the converted file to the script, then it works properly. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ```; [hmcezar@bitz-dell 12]$ python check_undercoordinated_sio2.py final.xyz; Falha de segmentação (imagem do núcleo gravada); [hmcezar@bitz-dell 12]$ python check_undercoordinated_sio2.py final.pdb; The sample has 68 under-coordinated Si and 68 under-coordinated O.; ```. Running with `faulthandler` doesn't help much, besides telling that the problem appears to be in the ConnectTheDots() method:; ```; [hmcezar@bitz-dell 12]$ python -X faulthandler check_undercoordinated_sio2.py final.xyz; Fatal Python error: Segmentation fault. Current thread 0x0000153cebfb1740 (most recent call first):; File ""/home/hmcezar/GDrive/USP/Sampa_Post-Doc/scripts/check_undercoordinated_sio2.py"", line 45 in <module>; Falha de segmentação (imagem do núcleo gravada); ```. All the files are attached below. [ob_issue.zip](https://gi",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2438:1738,test,test,1738,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2438,1,['test'],['test']
Testability,regression tests fail on non-x86 architectures,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/266:11,test,tests,11,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/266,1,['test'],['tests']
Testability,"requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: e7aa0942f6c7733950dcf49e3c8e7f1b56feeea5; Operating system and version: Debian 12.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. obconformer generates the most stable conformation of a cyclic compond, e.g. cyclohexane chair; methylcyclohexane chair, where Me is equatorial. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. obconformer gives e.g. - cyclohexane: boat → boat, not chair; - methylcyclohexane: axial chair →axial chair, not equatorial chair. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```xml; <?xml version=""1.0"" encoding=""UTF-8""?>; <molecule id=""cyclohexane-boat"" xmlns=""http://www.xml-cml.org/schema"" xmlns:cml=""http://www.xml-cml.org/dict/cml"" xmlns:units=""http://www.xml-cml.org/units/units"" xmlns:xsd=""http://www.w3c.org/2001/XMLSchema"" xmlns:iupac=""http://www.iupac.org"">; <atomArray>; <atom id=""a1"" elementType=""C"" x3=""1.36396"" y3=""0"" z3=""0.654084"" />; <atom id=""a2"" elementType=""C"" x3=""0.787262"" y3=""-1.26551"" z3=""0"" />; <atom id=""a3"" elementType=""C"" x3=""-0.770966"" y3=""-1.2704"" z3=""0"" />; <atom id=""a4"" elementType=""C"" x3=""-1.35676"" y3=""0"" z3=""0.63574"" />; <atom id=""a5"" elementType=""C"" x3=""-0.769195"" y3=""1.27076"" z3=""0"" />; <atom id=""a6"" elementType=""C"" x3=""0.789101"" y3=""1.26544"" z3=""0"" />; <atom id=""a7"" elementType=""H"" x3=""1.13351"" y3=""0"" z3=""1.7363"" />; <atom id=""a8"" elementType=""H"" x3",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2633:1412,test,test,1412,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2633,1,['test'],['test']
Testability,"revision 2698, Visual Studio 2008. this is still causing problems:. fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp'. log file attached. should it be taken up on the boost list?. Reported by: peterennis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/787:137,log,log,137,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/787,1,['log'],['log']
Testability,"rmats read / written by Open Babel. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The format is missing. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; DataWarrior is a program freely available and used to compute and manage chemical structures and properties. Examples of functions offered by DataWarrior include the determination of molecular mass, cLogP, small ring count, similarity searches, PCA, simplification to Murcko scaffold and skeleton, SAR-tables. The program stores information as `.dwar` files (example attached) in plain ASCII, where chemical structures are written as `idcodes`. Thomas Sander describes these strings as «a very compact text representation of a molecule [...] somewhat comparable to an isomeric SMARTS» ([reference](http://openmolecules.org/forum/index.php?t=msg&th=422&start=0&)). For example, the three isomers of tartaric acid, `O[C@H]([C@H](C(O)=O)O)C(O)=O` (2R, 3R), `O[C@@H]([C@@H](C(O)=O)O)C(O)=O` (2S, 3S) and `O[C@H]([C@@H](C(O)=O)O)C(O)=O` (2R, 3S) are described as ` dedF@@PfFTf{nZjfSET@`, `dedF@@PfFTf{nZjfSIR@` and `dedF@@PfFTf{nZjfSIT@`, respectively. File `idcodes_examples.txt` equally attached compiles some molecules tested. According to Thomas Sander (_loc. cit._) the use of idcodes and their implementation into other programs is permitted (e.g., LigandScout) and is part of the actively developed [`OpenChemLib`](https://github.com/Actelion/openchemlib) project on GitHub. . [test.dwar.txt](https://github.com/openbabel/openbabel/files/5671704/test.dwar.txt); [idcodes_examples.txt](https://github.com/openbabel/openbabel/files/5671707/idcodes_examples.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2311:2534,test,tested,2534,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2311,3,['test'],"['test', 'tested']"
Testability,rror: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:15620,test,test,15620,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,rror: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: unde,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:16692,test,test,16692,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"rs.py"", line 258, in assertWriters; test_write_string(self, mol, conv, expected_output, normalize); File ""test/testobconv_writers.py"", line 165, in test_write_string; test_case.assertMultiLineEqual(output.replace(""\r\n"", ""\n""), expected_output.replace(""\r\n"", ""\n"")); AssertionError: '{\n [1926 chars]102014\n ],\n ""y"": [[1070 chars]]\n}' != '{\n [1926 chars]102012\n ],\n ""y"": [[1070 chars]]\n}'; {; ""PC_Compounds"": [; {; ""atoms"": {; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""element"": [; 6,; 6,; 6,; 6,; 6,; 6,; 8,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""bonds"": {; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5,; 6,; 1,; 2,; 3,; 4,; 5,; 7; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""order"": [; 2,; 1,; 2,; 1,; 2,; 1,; 1,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""coords"": [; {; ""type"": [; 1; ],; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""conformers"": [; {; ""x"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""y"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""style"": {; ""annotation"": [; 8,; 8,; 8,; 8,; 8,; 8; ],; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6; ]; }; }; ]; }; ],; ""charge"": 0; }; ]; }. ```. ## Steps to Reproduce; See e.g.:; https://objectstorage.prodstack4-5.canonical.com/v1/AUTH_77e2ada1e7a84929a74ba3b87153c0ac/autopkgtest-groovy/groovy/arm64/o/openbabel/20200603_115438_23a53@/log.gz; https://objectstorage.prodstack4-5.canonical.com/v1/AUTH_77e2ada1e7a84929a74ba3b87153c0ac/autopkgtest-groovy/groovy/ppc64el/o/openbabel/20200603_110529_77a4e@/log.gz. Also test/testbindings.py and test/testsym.py have issues on non-amd64 platforms.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2246:2576,log,log,2576,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246,6,"['log', 'test']","['log', 'test', 'testbindings', 'testsym']"
Testability,"rsion.SetInFormat('xyz'); obmol = ob.OBMol(); success = obconversion.ReadString(obmol, xyz); ```. When inputting a radical`xyz` (taking [CH2]C as an example), the generated `obmol` should have an atom with spin multiplicity > 1. Therefore when running the following script,; ```; for obatom in ob.OBMolAtomIter(obmol):; print(obatom.GetSpinMultiplicity()); ```; We should see a 2 in the output. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; In version 2.4.1, the behavior is as expected. But after upgrading from 2.4.1 to 3.1.0, I found that all atoms in the generated `obmol` have zero spin multiplicity (from `obatom.GetSpinMultiplicity()`), while the spin multiplicity for the molecule is still correct (from `obmol.GetTotalSpinMultiplicity()`). . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Some example XYZs for you to try:; ```; 4; [CH3]; C 0.005855 0.001990 0.281379; H 1.045523 -0.137365 -0.095125; H -0.625527 -0.822825 -0.092566; H -0.425852 0.958201 -0.093688. 7; [CH2]C; C 0.860801 -0.129576 -0.398801; C -0.613070 0.014747 -0.013112; H 1.239333 -0.933807 0.290165; H 1.359583 0.810233 -0.054703; H -0.881226 1.081339 -0.159005; H -0.785917 -0.222193 1.047743; H -1.179504 -0.620742 -0.712286; ```. And run; ```; from openbabel import openbabel as ob. obconversion = ob.OBConversion(); obconversion.SetInFormat('xyz'); obmol = ob.OBMol(); success = obconversion.ReadString(obmol, xyz). print(f'Total Multplicity: {obmol.GetTotalSpinMultiplicity()}'); for obatom in ob.OBMolAtomIter(obmol):; print(f'Atom {obatom.GetAtomicNum()}: {obatom.GetSpinMultiplicity()}'); ```; What I got is; For [CH3]; ```; ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2392:2015,test,test,2015,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2392,1,['test'],['test']
Testability,runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/math.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/mol.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/phmodel.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/residue.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/ringtest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartstest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartsparse.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/smilesmatch.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/unitcell.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/cmlreadfile.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/obtest.o; [ 99%] Linking CXX executable ../bin/test_runner; [ 99%] Built target test_runner; Makefile:140: recipe ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:54879,test,test,54879,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"s and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. Just for notification: recent maeparser change breaks compatibility (schrodinger/maeparser#62). - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 7684a772e6b60e6b37aa70ad05764d526ab9b00c; Operating system and version: Debian 10.3. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. Build is successful. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Build fails. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```shellsession; $ rm -rf external/maeparser-master; $ cmake -GNinja -Bbuild .; $ cmake --build build -- src/formats/CMakeFiles/maeformat.dir/maeformat.cpp.o; ../src/formats/maeformat.cpp: In member function ‘virtual bool OpenBabel::MAEFormat::WriteMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*)’:; ../src/formats/maeformat.cpp:332:49: error: cannot bind rvalue reference of type ‘std::shared_ptr<schrodinger::mae::IndexedBlock>&&’ to lvalue of type ‘std::shared_ptr<schrodinger::mae::IndexedBlock>’; ibm->addIndexedBlock(atom_block->getName(), atom_block);; ^~~~~~~~~~; In file included from ../external/maeparser-master/maeparser/Reader.hpp:8,; from ../src/formats/maeformat.cpp:33:; ../external/maeparser-master/maeparser/MaeBlock.hpp:72:10: note: initializing argument 2 of ‘void schrodinger::mae::Indexe",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2180:1398,test,test,1398,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2180,1,['test'],['test']
Testability,"s for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Ubuntu 22.04.1 / Linux 5.19.0-32. ## Expected Behavior; Hi,; I am looking up the implementation of the improper torsions for GAFF in the file src/forcefields/forcefieldgaff.cpp (the set up is at lines 727-900) and I am a bit puzzled. Maybe I got it wrong, but it seems to me that the implementation consider the second atom ""b"" as the central one, while this should be the third one according to AMBER (see for example [here](http://archive.ambermd.org/201307/0519.html) or [here](https://github.com/openbabel/openbabel/blob/2b211d6acfc0f9e1c6746a984da3483b729aa32b/src/forcefields/forcefieldgaff.cpp#L1160), or it is also evident looking at the parameter file where in lines like:. X -o -c -o 1.1 180.0 2.0 JCC,7,(1986),230; X -X -c -o 10.5 180.0 2.0 JCC,7,(1986),230. the wildcards are there to say that the first and second atom can be anything, but there is never a wildcard on the third one). I have this impression as in this part of the code different swaps are attempted (A-B-C-D -> A-B-D-C -> C-B-D-A), while these should correspond to different angles. I think it is a bug, but maybe I am missing something here...; Paolo; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2577:2199,test,test,2199,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2577,1,['test'],['test']
Testability,"s). The idea is for the EPs to have the following properties and labels (From article: Molecular Mechanical Study of Halogen Bonding in Drug Discovery):; For Chlorine and EP (XCl):; Bond lenght (Cl - XCl = 1.95A ; Angle (X - Cl - XCl) = 180 degrees. For Bromine and EP (XBr):; Bond lenght (Br - XBr = 2.22A ; Angle (X - Br - XBr) = 180 degrees. For iodine and EP (XI):; Bond lenght (CI - XI = 12.35A ; Angle (X - CI - XI) = 180 degrees. I have attached a modified element.txt from Open Babel 2.3.2 (running on Ubuntu 14.04 Linux) that includes the properties XCl, XBr and XI. . I tried to modify the mol.cpp, mol.h, openbabel-python.cpp, openbabel.py and pybel.py files (also attached) to include a new function called AddX (same functionality as AddHydrogens for now, just different name). After sucessfully compiling the modified mol.cpp and mol.h files I then used pycharm and a simple pyhton script to see if it worked. I first tried:; import openbabel, pybel; mol = pybel.readfile(""pdb"", ""~/Documents/test/Chlroroquine.pdb"").next(); print len(mol.atoms), mol.molwt; mol.OBMol.AddHydrogens(); print len(mol.atoms), mol.molwt; pybelmol = pybel.Molecule(mol); pybelmol.write(""pdb"", ""~/Documents/test/Chlroroquine_test.pdb"", overwrite=True). With the following output:; 22 319.87214; 48 319.87214. Then I tried the following::; import openbabel, pybel; mol = pybel.readfile(""pdb"", ""/home/xeonbas/Documents/MGLTools_test/test/Chlrooquine.pdb"").next(); print len(mol.atoms), mol.molwt; mol.OBMol.AddX(); print len(mol.atoms), mol.molwt; pybelmol = pybel.Molecule(mol); pybelmol.write(""pdb"", ""/home/xeonbas/Documents/MGLTools_test/test/Chlrooquine_test.pdb"", overwrite=True). With the following output:; Traceback (most recent call last):; 22 319.87214; File ""~/PycharmProjects/untitled3/test.py"", line 4, in <module>; mol.OBMol.AddX(); AttributeError: 'OBMol' object has no attribute 'AddX'. I am not a programmer so my programming skills are virtually non-existent. Any kind of assistance will be grea",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1542:1417,test,test,1417,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1542,1,['test'],['test']
Testability,s/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/math.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/mol.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/phmodel.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/residue.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/ringtest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartstest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartsparse.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/smilesmatch.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/unitcell.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/cmlreadfile.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/obtest.o; [ 99%] Linking CXX executabl,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:54803,test,test,54803,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"s://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.3.1; Operating system and version: Ubuntu 18.04.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Reading an `.xyz` file should not affect the behaviour of `ReadString`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>; Reading an `.xyz` file makes `ReadString` work. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ```; import openbabel as ob. xyz_string = (; ""3\n\nO -0.0343604951 0.9775395708 0.0076015923\n""; ""H 0.0647664923 0.0205721989 0.0015346341\n""; ""H 0.8717903737 1.3007924048 0.0006931336""; ); ```; Then, if I run this; ```; mol = ob.OBMol(); ob.OBConversion().ReadString(mol, xyz_string); ```; it returns `False`. If I run this; ```; with open(""temp.xyz"", ""w"") as f:; f.write(xyz_string). mol = ob.OBMol(); ob.OBConversion().ReadFile(mol, ""temp.xyz""); ```; it returns True. But what really puzzles me is that if I run; ```; ob_conversion = ob.OBConversion(). with open(""temp.xyz"", ""w"") as f:; f.write(xyz_string). mol = ob.OBMol(); ob_conversion.ReadFile(mol, ""temp.xyz""); ob_conversion.ReadString(mol, xyz_string); ```; then this returns `True` now!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1994:1356,test,test,1356,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1994,1,['test'],['test']
Testability,"s?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: OpenBabel 3.1.1+git2f34bda337d7ddefa8f2bebfc23931a63e45241f; Operating system and version: Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; - The build process should be completed without any errors. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; - It causes error like:; [error-deps.log](https://github.com/openbabel/openbabel/files/9179914/error-deps.log). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; - Build maeparser and install it on ../libmaeparser-1.2.4-220427; - Build coordgenlibs and install it on ../coordgenlibs-3.0.0-220427; - Run following command to try the build process:; `; mkdir build-openbabel; cd build-openbabel; cmake \; -DCMAKE_INSTALL_PREFIX=../openbabel-3.1.1-220621 \; -DBUILD_SHARED=OFF \; -DBUILD_MIXED=ON \; -DWITH_STATIC_INCHI=ON \; -DWITH_STATIC_LIBXML=ON \; -DWITH_COORDGEN=ON \; -DENABLE_OPENMP=ON \; -Dmaeparser_DIR=../libmaeparser-1.2.4-220427 \; -Dcoordgen_DIR=../coordgenlibs-3.0.0-220427 \; ../openbabel; `; `; cmake --build . --config Release -j; `; ## How to fix; - Apply following patch. It does not tested on any other linux distribution or OS than Ubuntu 18.04.; [adjust-dependencies.patch.txt](https://github.com/openbabel/openbabel/files/9179786/adjust-dependencies.patch.t",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2513:1328,test,test,1328,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2513,1,['test'],['test']
Testability,"sdf --splitinto 3` yielded **""bigfile1.sdf, bigfile2.sdf and bigfile3.sdf"".** In the updated documentation for obabel I only see -m as a possible flag. Yet in either case, I have tried splitting my_big.sdf into 400 smaller files with --splitinto 400 and -m 400, but without success. Is the ability to split large sdf files into additional files depreciated? . <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: openbabel 3.0.0; Operating system and version: ; NAME=""CentOS Linux""; VERSION=""7 (Core)"". ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; `obabel -isd lig_SARSCOV2_Protease_HTVS.sdf -O test.sdf --splitinto 400`. (400 files such as 01test.sdf, 02test.sdf ...). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Copying input > output without splitting. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; In my conda env entering:. `obabel -isd lig_SARSCOV2_Protease_HTVS.sdf -O test.sdf --splitinto 400`",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2147:1401,test,test,1401,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2147,3,['test'],['test']
Testability,"sed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:3.1.1(self compiled version); Operating system and version:Manjaro 5.15.12. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; In the specified path,there are some SMI files:; ```txt; zinc10.smi; *zinc10.smi; zinc10*.smi; ?zinc10.smi; arg.smi; aspirin.smi; ```; In obgui's input filename box,here are some inputs with wildchars I tested:. 1. `*.smi`; 2. `*zinc10.smi`; 3. `?zinc10.smi`; 4. `z*.smi`; 5. `arg.smi;a*.smi;zinc10.smi`. Respiectively,expected conversed files are:. 1. `zinc10.smi;*zinc10.smi;zinc10*.smi;?zinc10.smi;arg.smi;aspirin.smi`; 2. `zinc10.smi;*zinc10.smi`; 3. `*zinc10.smi;?zinc10.smi`; 4. `zinc10.smi;zinc10*.smi`; 5. `arg.smi;aspirin.smi;zinc10.smi`; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Actually,conversed files are:. 1. None; 2. None; 3. None; 4. None; 5. `arg.smi;zinc10.smi`. In general,any wildchars in the input filename box will not be conversed. ; Any wildchars in the filename will not be conversed,even selected in the input dialoag. ; Other filenames without `*` or `?` splited by `;` will converse correctly. ; `*` in output filename box works correctly if input filename box has no `*`.; ## Steps ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2445:1085,test,tested,1085,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2445,1,['test'],['tested']
Testability,"see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Gentoo Linux, 5.6.15-gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Failed 0/8 test programs. 0/34 subtests failed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Can't call method ""GetMass"" on an undefined value at t/data.t line 21.; t/data.t ........... Dubious, test returned 255 (wstat 65280, 0xff00) ; Failed 1/2 subtests . t/data.t (Wstat: 65280 Tests: 1 Failed: 0); Non-zero exit status: 255; Parse errors: Bad plan. You planned 2 tests but ran 1.; Files=8, Tests=34, 0 wallclock secs ( 0.03 usr 0.01 sys + 0.39 cusr 0.06 csys = 0.49 CPU); Result: FAIL; Failed 1/8 test programs. 0/34 subtests failed. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; swig -perl5 -c++ -small -O -templatereduce -naturalvar -I/usr/include/openbabel3 -o scrips/perl/openbabel-perl.cpp -outdir scrips/perl scripts/openbabel-perl.i; cd scrips/perl; perl Makefile.PL PREFIX=/usr INSTALLDIRS=vendor INSTALLMAN3DIR=none DESTDIR=/var/tmp/portage/sci-chemistry/openbabel-perl-3.1.1/image INC=-I/usr/include/openbabel3; make -j17 -l4 'OTHERLDFLAGS=-Wl,-O1 -Wl,--as-needed -Wl,--hash-style=gnu; make -j17 -l4 test; ```. The offending line in `scrips/perl/t/data.t` is:; ```; my $mass = $Chemistry::OpenBabel::etab->GetMass(2);; ```; I don't know much about perl but it likely pertains to the shift from the use of `etab` to the use of `OBElements`.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2247:1744,test,test,1744,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247,2,['test'],['test']
Testability,"ssible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; kekulize.cpp; griddata.cpp; grid.cpp; generic.cpp; descriptor.cpp; Generating Code...; Compiling...; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; base.cpp; atom.cpp; alias.cpp; Generating Code...; Compiling...; typer.cpp; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; Creating library ../OBConv.lib and object ../OBConv.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 0 error(s), 0 warning(s); ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; ..\..\src\formats\mdlformat.cpp(629) : error C2780: 'const _Ty &std::min(const _Ty &,const _Ty &,_Pr)' : expects 3 arguments - 2 provided; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xutility(3379) : see declaration of 'std::min'; ..\..\src\formats\mdlformat.cpp(629) : error C2782: 'const _Ty &std::min(const _Ty &,const _Ty &)' : template parameter '_Ty' is ambiguous; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xutility(3371) : see declaration of 'std::min'; could be 'unsigned long'; or 'unsigned int'; atomrecord.cpp; APIInterface.cpp; Generating Code...; Build log was s",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/773:2064,log,log,2064,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/773,1,['log'],['log']
Testability,"ssues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:3.1.1; Operating system and version: Ubuntu 18.04 LTS (GNU/Linux 4.15.0-23-generic x86_64). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; After building OpenBabel I expected ctest to run all the tests and for them all to pass; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; run this command twice: **cmake ../../openbabel-2.4.1 -DPYTHON_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=~/softwares/openbabe**. -- Using included inchi library.; -- Could NOT find wxWidgets (missing: wxWidgets_LIBRARIES wxWidgets_INCLUDE_DIRS); -- Checking available shared pointer...; -- Use std::shared_ptr in memory; -- Could NOT find Boost; -- Could NOT find Boost; -- Maestro formats will NOT be supported. Please install Boost to enable Maestro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2234:955,test,tests,955,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234,1,['test'],['tests']
Testability,"st_residue_1; --; 204: ../src/residue.cpp:853:13: runtime error: member call on address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/residue.cpp:853:13 in ; 204: ../include/openbabel/atom.h:160:45: runtime error: member access within address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../include/openbabel/atom.h:160:45 in ; --; test 211; Start 211: inchiSamples.sdf_Test; --; 211: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 211: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; --; 211: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 211: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMA",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:20096,test,test,20096,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"stall, make test) all run successfully. I had to convert ""#""'s to ""//"" comments in open-babel-java.i since the 3.0.8 Swig I have in my environment treats them as directives. The libopenbabel_java.jnilib is found and being loaded but crashes the JVM. The following is the JVM crash to the console:. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00000001363187a5, pid=17284, tid=6403; #; # JRE version: Java(TM) SE Runtime Environment (8.0_74-b02) (build 1.8.0_74-b02); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.74-b02 interpreted mode bsd-amd64 compressed oops); # Problematic frame:; # C [libawt_lwawt.dylib+0x447a5] JNI_OnLoad+0x91; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/marko/eclipseLuna_ws/IZIntegOpenBabel_1_8_0_74/hs_err_pid17284.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #; ```. I get the same crash and location using 3 different Java VM's. The JVM installs and runtimes are solid and I verified that the the JVM's libs were picked up for each OpenBabel build. I have verified each JVM does work with other JNI libraries I have written. I tried using the standard JVM flags: -verbose:jni and the Oracle specific JVM flags: -Xcheck:jni and -Xint (ie. don't use HotSpot) but got same results and didn't see any obvious issues logged before the crash. The attached pidXXX.log has details about the crash. I have done a full JVM core dump for these crashes but analysis so far has not helped since the JVM is dying early in the native lib loading. Reported by: terry-vincente. Original Ticket: [openbabel/bugs/973](https://sourceforge.net/p/openbabel/bugs/973)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1352:1832,log,log,1832,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1352,3,['log'],"['log', 'logged']"
Testability,"stro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -- Could NOT find Boost; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR); -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) (Required is at least version ""2.0""); -- SWIG 2.0 NOT found; -- Configuring done; -- Generating done; -- Build files have been written to: /home/kk/build. **make test**; 97% tests passed, 6 tests failed out of 227. Total Test time (real) = 64.56 sec. The following tests FAILED:; 221 - pybindtest_bindings (Failed); 222 - pybindtest__pybel (Failed); 223 - pybindtest_example (Failed); 224 - pybindtest_obconv_writers (Failed); 225 - pybindtest_cdjsonformat (Failed); 226 - pybindtest_pcjsonformat (Failed); Errors while running CTest; Makefile:72: recipe for target 'test' failed; make: *** [test] Error 8. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. 1. download the sourse code(openbabel-openbabel-3-1-1.tar.gz); 2. sudo apt install libboost-dev; 3. sudo apt install gcc g++ make cmake; 4. sudo apt install libxml2-dev zlib1g-dev libcairo2-dev libeigen3-dev libopenbabel-dev; 5. sudo apt install python3-dev; 6. tar -xzvf openbabel-openbabel-3-1-1.tar.gz; 7. mkdir build; 8. cd build; 9. cmake ../../openbabel-2.4.1 -DPYTHON_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=~/softwares/openbabel ; 10. make; 11. make test",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2234:2544,test,tests,2544,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234,5,['test'],"['test', 'tests']"
Testability,"sts.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Gentoo Linux, 5.6.15-gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Failed 0/8 test programs. 0/34 subtests failed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Can't call method ""GetMass"" on an undefined value at t/data.t line 21.; t/data.t ........... Dubious, test returned 255 (wstat 65280, 0xff00) ; Failed 1/2 subtests . t/data.t (Wstat: 65280 Tests: 1 Failed: 0); Non-zero exit status: 255; Parse errors: Bad plan. You planned 2 tests but ran 1.; Files=8, Tests=34, 0 wallclock secs ( 0.03 usr 0.01 sys + 0.39 cusr 0.06 csys = 0.49 CPU); Result: FAIL; Failed 1/8 test programs. 0/34 subtests failed. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; swig -perl5 -c++ -small -O -templatereduce -naturalvar -I/usr/include/openbabel3 -o scrips/perl/openbabel-perl.cpp -outdir scrips/perl scripts/openbabel-perl.i; cd scrips/perl; perl Makefile.PL PREFIX=/usr INSTALLDIRS=vendor INSTALLMAN3DIR=none DESTDIR=/var/tmp/portage/sci-chemistry/openbabel-perl-3.1.1/image INC=-I/usr/include/openbabel3; make -j17 -l4 'OTHERLDFLAGS=-Wl,-O1 -Wl,--as-needed -Wl,--hash-style=gnu; make -j17 -l4 test; ```. The offending line in `scrips/perl/t/data.t",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2247:1309,Test,Tests,1309,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247,1,['Test'],['Tests']
Testability,"sues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: Open Babel 3.1.1 (built from GitHub commit [f495cc6](https://github.com/openbabel/openbabel/commit/f495cc6bae6ddd8133a6e78c1655e69611ac8ca6)) ; Operating system and version: Ubuntu 20.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The calculated chemical formula should always include explicitly specified hydrogen atoms. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; SMILES strings that contain hydrogen atoms in brackets together with another atom do not get included into the calculated molecular formula. Examples of such SMILES are provided in the `Steps to Reproduce` section. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Command:; ```; echo '[OH2].[OH2]' | obabel -i smi -o can --append formula; ```; Expected output:; ```; O.O	H4O2; ```; Output:; ```; O.O	O2; ```; Additional notes:; * If the input SMILES `[OH2].[OH2]` is instead rewritten as `[H][O][H].[H][O][H]` the formula is correctly calculated as `H4O2`.; * The bug does not seem to manifest if there is only a single molecular entity in the SMILES, e.g. formula for `[OH2]` is correctly calculated as `H2O`. ## Related issues:. This issue might be related to issue #2363.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2624:1545,test,test,1545,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2624,1,['test'],['test']
Testability,"t ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 0 error(s), 0 warning(s); ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; ..\..\src\formats\mdlformat.cpp(629) : error C2780: 'const _Ty &std::min(const _Ty &,const _Ty &,_Pr)' : expects 3 arguments - 2 provided; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xutility(3379) : see declaration of 'std::min'; ..\..\src\formats\mdlformat.cpp(629) : error C2782: 'const _Ty &std::min(const _Ty &,const _Ty &)' : template parameter '_Ty' is ambiguous; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xutility(3371) : see declaration of 'std::min'; could be 'unsigned long'; or 'unsigned int'; atomrecord.cpp; APIInterface.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 2 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; fingerprint.cpp; finger3.cpp; finger2.cpp; Generating Code...; Linking...; Creating library ../OBFPRT.lib and object ../OBFPRT.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\BuildLog.htm""; OBFPRT - 0 error(s), 1 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; fingerprintformat.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/773:3067,log,log,3067,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/773,1,['log'],['log']
Testability,t test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/math.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/mol.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/phmodel.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/residue.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/ringtest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartstest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartsparse.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/smilesmatch.o; [ 99%] Building CXX ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:54581,test,test,54581,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,t/CMakeFiles/test_runner.dir/automorphismtest.o; [ 88%] Linking CXX executable ../../bin/obgui; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/buildertest.o; //usr/lib/x86_64-linux-gnu/libharfbuzz.so.0: undefined reference to `FT_Get_Var_Blend_Coordinates'; //usr/lib/x86_64-linux-gnu/libgtk-3.so.0: undefined reference to `g_log_structured_standard'; //usr/lib/x86_64-linux-gnu/libcairo.so.2: undefined reference to `FT_Get_Var_Design_Coordinates'; collect2: error: ld returned 1 exit status; src/GUI/CMakeFiles/obgui.dir/build.make:149: recipe for target 'bin/obgui' failed; make[2]: *** [bin/obgui] Error 1; CMakeFiles/Makefile2:6751: recipe for target 'src/GUI/CMakeFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:51903,test,test,51903,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"t; ../../include\openbabel/reaction.h(92) : error C2334: unexpected token(s) preceding '{'; skipping apparent function body; ../../include\openbabel/reaction.h(56) : error C2065: '_reactants' : undeclared identifier; ../../include\openbabel/reaction.h(56) : error C2228: left of '.size' must have class/struct/union; type is ''unknown-type''; ../../include\openbabel/reaction.h(59) : error C2065: '_products' : undeclared identifier; ../../include\openbabel/reaction.h(59) : error C2228: left of '.size' must have class/struct/union; type is ''unknown-type''; ../../include\openbabel/reaction.h(62) : error C2065: '_reactants' : undeclared identifier; ../../include\openbabel/reaction.h(62) : error C2228: left of '.push_back' must have class/struct/union; type is ''unknown-type''; ../../include\openbabel/reaction.h(62) : error C2065: 'sp' : undeclared identifier; ../../include\openbabel/reaction.h(65) : error C2065: '_products' : undeclared identifier; ../../include\openbabel/reaction.h(65) : error C2228: left of '.push_back' must have class/struct/union; type is ''unknown-type''; ../../include\openbabel/reaction.h(65) : error C2065: 'sp' : undeclared identifier; ../../include\openbabel/reaction.h(68) : error C2065: '_ts' : undeclared identifier; ../../include\openbabel/reaction.h(68) : error C2065: 'sp' : undeclared identifier; ../../include\openbabel/reaction.h(71) : error C2065: '_agent' : undeclared identifier; ../../include\openbabel/reaction.h(71) : error C2065: 'sp' : undeclared identifier; ..\..\src\formats\chemdrawcdx.cpp(755) : warning C4065: switch statement contains 'default' but no 'case' labels; ..\..\src\formats\chemdrawcdx.cpp(1087) : warning C4065: switch statement contains 'default' but no 'case' labels; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBMoreFormats\Release\BuildLog.htm""; OBMoreFormats - 61 error(s), 17 warning(s); ========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========. Reported by: peterennis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/774:11863,log,log,11863,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/774,1,['log'],['log']
Testability,"tVec::CountBits which; is now 50x faster. These improvements have knock on effects in; speeding up many of the library's slower operations, such as; OBMol::ContigFragList and OBBond::IsClosure. I would like to submit my changes to svn. they affect bitvec.cpp, .h; residue.cpp, .h and half a dozen minor changes to files that use; OBResidue->Begin/EndAtoms however, these files are not my code, so I; will submit or not as the developer team choose. > I don't believe that the bitvec changes would affect code that uses; > the; > API. No, this looks good. Would you consider helping out a little bit and; adding Doxygen documentation comments to bitvec.h and bitvec.cpp. It's; one of the classes we haven't finished in the 2.0 or 2.1 documentation; and would be greatly appreciated. The basic idea would be to add comments on what every single method in; bitvec.h does. Thanks! Improvements to bitvec will definitely help a range of; functions in the rest of the library.; -Geoff . I have tested the code on Linux gcc v4.1.2, Windows VC8 sp1, and Macintosh gcc v4.0.1 it; compiles and runs successfully with no warnings (-Wall / -W4 -analyze ). Here are the profile timing details:; Profiling; Top 10 Application Exclusive Times Before, After; OpenBabel::EvalAtomExpr 698.826936 690.121976; OpenBabel::OBBond::IsClosure(void) 279.642807 169.510756; OpenBabel::OBBitVec::NextBit(int) 258.648177 13.774759; OpenBabel::DetermineFRJ 232.795392 228.121234; OpenBabel::OBMol::ConnectTheDots(void) 228.119041 237.671913; OpenBabel::OBSSMatch::Match 183.537663 151.428923; OpenBabel::OBMol::ContigFragList 167.962881 68.488272; OpenBabel::OBResidue::GetSerialNum 144.409723 116.851829; OpenBabel::OBAtom::GetResidue(void) 141.741211 124.446245; OpenBabel::OBMol::NextAtom 135.275772 139.024312. OBBitVec, Elapsed Inclusive Time Before, After. OpenBabel::OBBitVec::CountBits(void) 331.374589 5.245531; OpenBabel::OBBitVec::NextBit(int) 289.776188 15.537802; OpenBabel::OBBitVec::operator|=3D(class 22.527727 22",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1491:1356,test,tested,1356,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1491,1,['test'],['tested']
Testability,"td::char_traits<char>, std::allocator<char> >*) (); ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; This happens with any PDB structure containing the PA0 ligand (e.g. 3E3Z), a phenyl ring with arsenic attached. Getting the logP property. Example code (the 'content' string contains a mol format string with the PA0 compound:. std::ios_base::openmode imode = std::ios_base::in|std::ios_base::binary;; std::ios_base::openmode omode = std::ios_base::out|std::ios_base::binary;; std::stringstream ssi(content, imode);; std::stringstream sso("""", omode);; OpenBabel::OBConversion conv(&ssi, &sso);; OpenBabel::OBFormat* molformat = conv.FindFormat(""mol"");; conv.SetInFormat(molformat);; OpenBabel::OBMol mol;; molformat->ReadMolecule(&mol, &conv);; json js;; OpenBabel::OBDescriptor* pDesc = OpenBabel::OBDescriptor::FindType(""logP"");; if(pDesc) js[""LogP""] = pDesc->Predict(&mol);. mol string for PA0.178:A:; PA0; JL BFD1119190613; Written by the BioLeap Fragment Displayer(TM)[BioLeap, Inc.]; 12 12 0 0 0 0 0 0 0 0999 V2000; 7.2100 -10.0520 2.6110 As 0 3 0 0 0 0 0 0 0 1 0 0; 7.1560 -10.0390 1.2400 C 0 0 0 0 0 0 0 0 0 2 0 0; 6.2490 -9.2320 0.5650 C 0 0 0 0 0 0 0 0 0 3 0 0; 6.2170 -9.2220 -0.8210 C 0 0 0 0 0 0 0 0 0 4 0 0; 7.0890 -10.0140 -1.5640 C 0 0 0 0 0 0 0 0 0 5 0 0; 8.0000 -10.8330 -0.9030 C 0 0 0 0 0 0 0 0 0 6 0 0; 8.0240 -10.8420 0.4890 C 0 0 0 0 0 0 0 0 0 7 0 0; 8.6560 -11.4170 0.9490 H 0 0 0 0 0 0 0 0 0 8 0 0; 8.6120 -11.3920 -1.4070 H 0 0 0 0 0 0 0 0 0 9 0 0; 7.0620 -9.9950 -2.5330 H 0 0 0 0 0 0 0 0 0 10 0 0; 5.5780 -8.6550 -1.2800 H 0 0 0 0 0 0 0 0 0 11 0 0; 5.6350 -8.6730 1.0660 H 0 0 0 0 0 0 0 0 0 12 0 0; 1 2 1 0 0 0 0; 2 3 2 0 0 0 0; 2 7 1 0 0 0 0; 3 4 1 0 0 0 0; 4 5 2 0 0 0 0; 5 6 1 0 0 0 0; 7 6 2 0 0 0 0; 3 12 1 0 0 0 0; 4 11 1 0 0 0 0; 5 10",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2088:2900,log,logP,2900,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2088,2,"['Log', 'log']","['LogP', 'logP']"
Testability,"te and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Debian Sid. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Depth=1 which is the query atom should always be singular ID. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>; With larger depths (>3) the output contains multiple atoms at depth=1. I could not reproduce it for small molecules even with depth=8. . If the depth is small and we bump the loop break condition to `if current_depth > 5 * depth: break` the bug surfaces at smallest depth=1. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; This occurs on larger molecules, although I noticed it on proteins. Here is [one](http://dude.docking.org/targets/xiap/receptor.pdb). I've also tried PDBbinds 10gs protein.; ```; import pybel. pybel.ob.OBIterWithDepth.__next__ = pybel.ob.OBIterWithDepth.next. mol = next(pybel.readfile('pdb', 'pdbbind/v2016/10gs/10gs_protein.pdb')); depth = 4. fp = []; for i in range(len(mol.atoms)):; envs = {}; for atom, current_depth in pybel.ob.OBMolAtomBFSIter(mol.OBMol, i + 1):; if current_depth > depth:; break; if current_depth not in envs:; envs[current_depth] = []; envs[current_depth].append(atom.GetIdx()); ; # catch bug; if current_depth == 1 and len(envs[current_depth]) > 1:; print(""BUG!!!"", i, atom.GetIdx()); #continue; ; fp.append(list(envs.values())); ```. > BUG!!! 982 1; >BUG!!! 985 1; >BUG!!! 1003 1; >BUG!!!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1639:1568,test,test,1568,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1639,1,['test'],['test']
Testability,"tead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. I (really a program I am using) am trying to delete a ligand from a ""receptor""-ligand complex PDB at the link below. Deleting all these atoms of the ligand screws up the residue names in the binding site because most PDB files do not have the `CONECT` for the actual residues of the protein. When I start deleting the atoms descending from atom number 5269 down to atom 5240 everything is okay however after I deleting `03` from Ribociclib atom number 5239, this messes up both residues 101 and 152 in the binding domain and some of the residues become ""UNK"" and the chain name disappears. There is a way around this I believe if I run an `obabel -ipdb -opdb` to get all the connection but `obConversion.SetInFormat('pdb')` and `obConversion.ReadFile()` should be doing this. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Using the `output.pdb` in the link as the input you will see the issues on residue 101 and 152 in the output.; ```; from openbabel import openbabel. pdbmol=openbabel.OBMol(); obConversion = openbabel.OBConversion(); obConversion.SetInFormat('pdb'); obConversion.ReadFile(pdbmol,""output.pdb""). ## confirm this is first atom in valine residue 101; pdbmol.GetAtom(1604).GetType(); pdbmol.GetAtom(1604).GetResidue().GetName(). ## delete just before Oxygen in Ribociclib; for i in range(5269, 5239, -1):; # delete atom; print(""Deleting atom:"", i); pdbmol.DeleteAtom(pdbmol.GetAtom(i)); # test VAL 101 is still valine; print(""Residue 101 is still:"", pdbmol.GetAtom(1604).GetResidue().GetName()); ; # leucine 152 is also good; pdbmol.GetAtom(2455).GetResidue().GetName(); ; # now delete atom 5239 Oxygen 03; pdbmol.GetAtom(",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2481:2375,test,test,2375,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481,1,['test'],['test']
Testability,"ters: gentoo; priority: 50. grub2-themes; location: /var/lib/layman/grub2-themes; sync-type: git; sync-uri: git://github.com/gentoo/grub2-themes-overlay.git; masters: gentoo; priority: 50. mozilla; location: /var/lib/layman/mozilla; sync-type: git; sync-uri: git://anongit.gentoo.org/proj/mozilla.git; masters: gentoo; priority: 50. spring; location: /var/lib/layman/spring-overlay; sync-type: git; sync-uri: git://github.com/springlobby/overlay.git; masters: gentoo; priority: 50. steam-overlay; location: /var/lib/layman/steam-overlay; sync-type: git; sync-uri: git://github.com/anyc/steam-overlay.git; masters: gentoo; priority: 50. ACCEPT_KEYWORDS=""amd64 ~amd64""; ACCEPT_LICENSE=""*""; CBUILD=""x86_64-pc-linux-gnu""; CFLAGS=""-O2 -pipe""; CHOST=""x86_64-pc-linux-gnu""; CONFIG_PROTECT=""/etc /usr/lib64/libreoffice/program/sofficerc /usr/share/config /usr/share/gnupg/qualified.txt""; CONFIG_PROTECT_MASK=""/etc/ca-certificates.conf /etc/dconf /etc/env.d /etc/fonts/fonts.conf /etc/gconf /etc/gentoo-release /etc/revdep-rebuild /etc/sandbox.d /etc/terminfo""; CXXFLAGS=""-O2 -pipe""; DISTDIR=""/usr/portage/distfiles""; FCFLAGS=""-O2 -pipe""; FEATURES=""assume-digests binpkg-logs config-protect-if-modified distlocks ebuild-locks fixlafiles merge-sync news parallel-fetch preserve-libs protect-owned sandbox sfperms strict unknown-features-warn unmerge-logs unmerge-orphans userfetch userpriv usersandbox usersync xattr""; FFLAGS=""-O2 -pipe""; GENTOO_MIRRORS=""http://ftp.swin.edu.au/gentoo""; LANG=""en_AU.UTF-8""; LDFLAGS=""-Wl,-O1 -Wl,--as-needed""; MAKEOPTS=""-j9""; PKGDIR=""/usr/portage/packages""; PORTAGE_CONFIGROOT=""/""; PORTAGE_RSYNC_OPTS=""--recursive --links --safe-links --perms --times --omit-dir-times --compress --force --whole-file --delete --stats --human-readable --timeout=180 --exclude=/distfiles --exclude=/local --exclude=/packages --exclude=/.git""; PORTAGE_TMPDIR=""/var/tmp""; USE=""X a52 aac acl acpi alsa amd64 berkdb branding bumblebee bzip2 cairo cdda cdr cli cracklib crypt cups cxx dbus declarative d",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566:9486,sandbox,sandbox,9486,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566,1,['sandbox'],['sandbox']
Testability,test,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/387:0,test,test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/387,1,['test'],['test']
Testability,test coverage reports?,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2312:0,test,test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312,1,['test'],['test']
Testability,test(python): improvements,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2468:0,test,test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2468,1,['test'],['test']
Testability,test.pdb; ---; TITLE Hydrogen atom; HETATM 1 H 0 0.000 0.000 0.000 H; END; ---. $ babel -ipdb test.pdb -oreport. FILENAME: test.pdb; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 791686707; ... Specifying the hydrogen atom as an XYZ file works just fine. test.xyz; ---; 1; Hydrogen atom; H 0 0 0; ---. $ babel -ixyz test.xyz -oreport; FILENAME: test.xyz; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 2; ... This problem occurs on the head revision (r4430) on ubuntu-10.04 x86_64. Reported by: @jiahao,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1093:0,test,test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1093,6,['test'],['test']
Testability,testdistgeom.py fails when run with Python 3,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2217:0,test,testdistgeom,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2217,1,['test'],['testdistgeom']
Testability,testobconv_writers test failure on arm64 and ppc64el,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2246:19,test,test,19,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246,1,['test'],['test']
Testability,ther upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; command line syntax: ; ```; cmake .. \; 	-DCMAKE_PREFIX_PATH=$BOOST_PATH \; 	-DCMAKE_INSTALL_PREFIX=$OPENBABEL_CMAKE_PREFIX \; 	-DZLIB_ROOT=$ZLIB_PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMa,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2377:2499,test,test,2499,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377,1,['test'],['test']
Testability,"there is a problem with indicating Z/E isomers in SMILES generated from mol2 files. Eg. for 1,2-dichloroethane. For structures saved in mol files, smiles (smi or can) are generated correctly:; >babel Z.mol -o can; Cl/C=C\Cl Z; 1 molecule converted; 32 audit log messages. >babel E.mol -o can; Cl/C=C/Cl E; 1 molecule converted; 32 audit log messages. while for files saved in mol2 format, we dont get the E/Z isomerism:. >babel Z.mol2 -o can; ClC=CCl Z; 1 molecule converted; 32 audit log messages. >babel E.mol2 -o can; ClC=CCl E; 1 molecule converted; 32 audit log messages. Converting mol2 back to mol fixes the problem. greetings,; F. Reported by: filipspl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1049:258,log,log,258,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1049,4,['log'],['log']
Testability,time error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ..,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:4500,test,test,4500,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"to BigEndian and LowEndian conversions. Essentially, I read each block as a hexadecimal formatted Unsigned integer, do a BigEndian to LowEndian conversion and add the result to a list of `unsigned Integers`. After that loop I reverse the `list<uint>` to generate the `OpenBabel.VectorUInt`. However, while some positions of the generated fingerprint are correct, many positions (without any pattern I can recognize) do not match to a `OpenBabel.VectorUInt` which is directly generated from the identical structure using the OpenBabel.Net library. What am I doing wrong? Can somebody share some code on how to shuffle the bytes?. Thank you very much in advance!; Jan. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: windows 10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2023:3297,test,test,3297,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2023,1,['test'],['test']
Testability,to `FT_Get_Var_Blend_Coordinates'; //usr/lib/x86_64-linux-gnu/libgtk-3.so.0: undefined reference to `g_log_structured_standard'; //usr/lib/x86_64-linux-gnu/libcairo.so.2: undefined reference to `FT_Get_Var_Design_Coordinates'; collect2: error: ld returned 1 exit status; src/GUI/CMakeFiles/obgui.dir/build.make:149: recipe for target 'bin/obgui' failed; make[2]: *** [bin/obgui] Error 1; CMakeFiles/Makefile2:6751: recipe for target 'src/GUI/CMakeFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runn,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:52138,test,test,52138,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: Ubuntu 20.04.2 LTS. ## Bug; I am trying to produce a mol2 file from xyz including valid atom and bond types. However, openbabel messes up the bonding and produces two Texas carbons. ## Steps to Reproduce; Input file:; ```; 49; 1aof_DHE_B_1; C -3.30400 13.00300 78.18000; C 4.35100 17.99000 81.82100; C 0.26300 15.84100 87.88100; C -5.69900 13.22500 82.98300; N -1.12200 14.81400 80.58000; C -3.25700 11.57200 78.46200; C 5.08200 16.75000 82.11900; C 1.07600 14.64500 87.58800; C -6.84800 13.57900 83.41600; N 1.18700 16.26100 81.70200; C -4.18400 10.68600 77.75900; C 2.35300 19.26300 80.93000; C -1.09500 17.86500 87.15300; C -8.12300 13.05200 82.94500; N -2.32400 14.65900 83.25100; C -3.32600 13.90000 81.15700; C 1.01300 15.26600 79.46800; C 1.91500 17.41700 83.67400; C -1.86000 15.10100 85.62500; C -0.40200 13.89400 77.06600; C -4.67100 13.79900 85.99600; O 3.50700 16.89300 79.16800; O 1.90300 17.99600 86.58800; C -2.29200 14.14200 80.26600; C 1.59200 16.07600 80.40900; C 1.01300 16.96800 84.59700; C -2.66200 14.62200 84.58400; O -4.92100 11.14600 76.87400; O 6.30900 16.81800 82.32700; O 0.73300 13.55100 88.07900; O -9.12500 13.19300 83.66500; C -2.21800 13.74500 78.90700; C 2.79000 16.91600 80.14500; C 1.07300 17.31300 86.03600; C -3.96800 14.03100 84.68800; O -4.19400 9.49400 78.07600; O 4.46200 15.66800 82.15600; O 2.08500 14.75900 86.87200; O -8.15600 12.47700 81.84100; C -0.98200 14.11500 78.42900; C 2.94800 17.83200 81.35500; C -0.11700 16.66200 86.70400; C -4.40300 13.76200 83.41200; C -0.28200 14.76100 79.49100; C 1.98800 17.15800 82.32400; C -0.73700 15.90600 85.52600; C -3.35400 14.09300 82.51700; N -0.05800 16.14700 84.36300; Fe -0.57700 15.48800 82.46900; ```; `obabel -ixyz -omol2 test.xyz -O test.mol2`; ![Capture](https://user-images.githubusercontent.com/7810340/141285342-c17ab1f6-ed93-47fe-a750-88acf4aabd65.PNG)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2427:1885,test,test,1885,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2427,2,['test'],['test']
Testability,"to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn};",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:3502,test,test,3502,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,2,['test'],"['test', 'testbabel']"
Testability,"to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43; Operating system and version: MacOS 11.2.3. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect to be able to write an output file from python after running a conformer search like I am able to from the command line. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I get a segmentation fault when writing the output file when running in python. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; I have tried running with/without gen3d, energy and minimizing energy scores, writing through the molecule class and through the OutputFile class. The setup is for 1 conformer and a convergence of 2 so it will run quickly, but I have tried it with the defaults of 30 conformers and a convergence of 25. ```python; import sys; sys.path.append('/usr/local/lib/python3.9/site-packages'); import pandas as pd; from openbabel import openbabel; from openbabel import pybel. gen3d = openbabel.OBOp.FindType(""gen3d""); ff = openbabel.OBForceField.FindForceField(""mmff94""). excel_file = 'test_data/blah.xlsx'; df = pd.read_excel(excel_file); #print(df.columns); smiles = df['SMILES ']; #print(smiles[0]); dummy_file_cml_fp = pybel.Outputfile('vmol', 'test_data/test_energy2.vmol', overwrite=True); mymol = pybel.readstring(""sm",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2349:1482,test,test,1482,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2349,1,['test'],['test']
Testability,"treams.a exists in boost path/lib) and also getting error for undefined reference to symbol. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; command line syntax: ; ```; cmake .. \; 	-DCMAKE_PREFIX_PATH=$BOOST_PATH \; 	-DCMAKE_INSTALL_PREFIX=$OPENBABEL_CMAKE_PREFIX \; 	-DZLIB_ROOT=$ZLIB_PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command li",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2377:2345,test,test,2345,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377,1,['test'],['test']
Testability,"ts/libinchi/ichicano.c:1677:21 in ; 95: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; --; 95: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 95: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 97; Start 97: test_rotor_2; --; 97: ../src/obconversion.cpp:302:24: runtime error: load of value 109, which is not a valid value for type 'bool'; 97: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 98; Start 98: test_rotor_3; --; 98: ../src/obconversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:11674,test,test,11674,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"ttps://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: Open Babel 3.1.1; Operating system and version: Gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; For it to not crash. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; `obabel` crashes if you give it an exported cjson file from Avogadro2 or running Extensions>Open Babel>Optimize Geometry. The message is the following:; ```obabel: /usr/include/rapidjson/document.h:1053: rapidjson::GenericValue<Encoding, Allocator>& rapidjson::GenericValue<Encoding, Allocator>::operator[](const rapidjson::GenericValue<Encoding, SourceAllocator>&) [with SourceAllocator = rapidjson::MemoryPoolAllocator<>; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>]: Assertion `false' failed.; [1] 26929 IOT instruction /home/laura/avo/openchemistry-build/prefix/bin/obabel -icjson -ocjson --noh```. ## Steps to Reproduce; - build https://github.com/openchemistry/openchemistry; - open Avogadro2; - create something; - press Ctrl+Alt+O. alternatively; - build https://github.com/openchemistry/openchemistry; - open Avogadro2; - create something; - save it as a cjson file like the one I attached; - run `$PREFIX/bin/obabel -icjson -ocjson --minimize --noh --log --ff UFF < e.cjson`. [e.cjson.txt](https://github.com/openbabel/openbabel/files/12336311/e.cjson.txt); (btw ignore the .txt ending github doesn't let me upload it otherwise)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2619:1451,Assert,Assertion,1451,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2619,2,"['Assert', 'log']","['Assertion', 'log']"
Testability,"ually empty, i.e. ```; M V30 BEGIN BOND; M V30 END BOND; ```. 1) One observation is on .sdf (v3000) written by openbabel -- though these can not be processed by the InChI reference executable (version 1.07.1, 64bit, Linux variant), openbabel itself is capable to assign an InChI. For instance. ```shell; $ obabel -:""[He]"" -O obabel_Helium.sdf -x3; ==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; 1 molecule converted; $ cat obabel_Helium.sdf. OpenBabel09192411482D. 0 0 0 0 0 999 V3000; M V30 BEGIN CTAB; M V30 COUNTS 1 0 0 0 0; M V30 BEGIN ATOM; M V30 1 He 0 0 0 0; M V30 END ATOM; M V30 BEGIN BOND; M V30 END BOND; M V30 END CTAB; M END; $$$$; $ ; $ ./inchi-1 ./obabel_Helium.sdf; InChI version 1, Software v. 1.07 (inchi-1 executable) ; Linux 64-bit Build (gcc 11.4.0) of Aug 10 2024 18:58:34. Opened log file './obabel_Helium.sdf.log'; Opened input file './obabel_Helium.sdf'; Opened output file './obabel_Helium.sdf.txt'; Opened problem file './obabel_Helium.sdf.prb'; The command line used:; ""./inchi-1 ./obabel_Helium.sdf""; Generating standard InChI; Input format: MOLfile; Output format: Plain text; Full Aux. info; Timeout per structure: 60000 msec; Up to 1024 atoms per structure. Error 71 (no InChI; Error: No V3000 CTAB end marker) inp structure #1.; End of file detected after structure #1. ; Finished processing 1 structure: 1 error, processing time 0:00:00.00; $ cat obabel_Helium.sdf.txt ; * Input_File: ""./obabel_Helium.sdf""; $ ; $ obabel obabel_Helium.sdf -oinchi; InChI=1S/He; 1 molecule converted; $ ; ```. 2) On the other hand, [Marvin](https://marvinjs-demo.chemaxon.com/latest/) describes the same structure without the empty atom block:. ```. Mrv2311 09192409232D . 0 0 0 0 0 999 V3000; M V30 BEGIN CTAB; M V30 COUNTS 1 0 0 0 0; M V30 BEGIN ATOM; M V30 1 He -0.875 1.6667 0 0; M V30",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2725:1390,log,log,1390,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2725,1,['log'],['log']
Testability,"ude/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 95: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 97; Start 97: test_rotor_2; --; 97: ../src/obconversion.cpp:302:24: runtime error: load of value 109, which is not a valid value for type 'bool'; 97: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 98; Start 98: test_rotor_3; --; 98: ../src/obconversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavi",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:12176,test,test,12176,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"uestion about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1, installed with conda from conda-forge (also checked quickly with 2.4.1); Operating system and version: Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; After running `StripSalts`, ions such as Na should be removed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When using InChIs as input and output, ions are not removed in the output. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Here are some snippets from my terminal, using sodium salicylate as an example. Hopefully they make things clear:. ```; >>> from openbabel import pybel; >>> smi = pybel.readstring(""smi"", ""[Na+].O=C([O-])c1ccccc1O""); >>> smi.molwt; 160.10257000000001; >>> smi.OBMol.StripSalts(); True; >>> smi.molwt; 137.11280000000002; >>> print(smi.write(""smi"")); O=C([O-])c1ccccc1O	; ```; which is as expected. Now with InChIs:. ```; >>> inchi = pybel.readstring(""inchi"", ""InChI=1S/C7H6O3.Na/c8-6-4-2-1-3-5(6)7(9)10;/h1-4,8H,(H,9,10);/q;+1/p-1""); >>> inchi.molwt; 160.10256999999996; >>> inchi.OBMol.StripSalts(); True; >>> inchi.molwt; 137.11279999999996 # this still seems correct; >>> print(inchi.write(""inchi"")); InChI=1S/C7H6O3.Na/c8-6-4-2-1-3-5(6)7(9)10;/h1-4,8H,(H,9,10);/q;+1/p-1 # this is identical to the input. ```. (As",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2288:1438,test,test,1438,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2288,1,['test'],['test']
Testability,"ugh), the tests take a very long time ([gh actions log](https://github.com/ltalirz/openbabel/runs/1554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really need to be that long-running; ; run the coverage only, say, once per day;; ... I'd be very happy for feedback on this. [1] Issues https://github.com/openbabel/openbabel/issues/1937 https://github.com/ope",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2312:1588,Test,Test,1588,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312,1,['Test'],['Test']
Testability,ui.dir/build.make:149: recipe for target 'bin/obgui' failed; make[2]: *** [bin/obgui] Error 1; CMakeFiles/Makefile2:6751: recipe for target 'src/GUI/CMakeFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object t,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:52431,test,test,52431,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,uilding CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:53195,test,test,53195,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,untime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer:,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:15886,test,test,15886,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,untime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer:,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:16149,test,test,16149,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,untime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 183; Start 183: test_ffmmff94_5; --; 183: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 183: SUMMARY: UndefinedBehaviorSanitizer: und,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:17487,test,test,17487,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,untime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 183; Start 183: test_ffmmff94_5; --; 183: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 183: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 185; Start 185: test_ffuff_1; --; 185: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 185: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 203; Start 203: test_phmodel_1; --; 203: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 203: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 204; Start 204: test_residue_1; --; 204: ../src/residue.cpp:853:13: runtime error: member call on address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../s,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:18555,test,test,18555,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,untime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-be,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:3969,test,test,3969,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,use isinstance to test if filename is bytes,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1673:18,test,test,18,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1673,1,['test'],['test']
Testability,"user account named 'Bob' with SID `S-1-5-21-1234`. The user downloads and runs the installer and is prompted to enter admin credentials so the user authenticates with an account named 'Admin' with SID `S-1-5-21-1000`. The installer finishes successfully but the user doesn't see OpenBabel in the Apps list in Windows Settings (alt. Programs and Features in Control Panel) or any shortcuts in their Start Menu; they log out from Bob and log in as Admin to find both there. The files and registry key are incorrectly in places specific for the account which was used to elevate the privileges of the installer (Admin in this example), not for the user which had interactively executed the installer (Bob in this example) or for all users on the computer (see the **Expected Behavior** section above).; - Shortcuts in `C:\Users\Admin\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\OpenBabel 3.1.1`; - Miscellaneous program data (docs, examples etc.) in `C:\Users\Admin\AppData\Roaming\OpenBabel-3.1.1`; - Uninstall registry key to `\HKEY_USERS\S-1-5-21-1000\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\OpenBabel-3.1.1`. This issue is particularly important on multi-user machines as well as for packaging the software for Microsoft SCCM/Intune. This does not pose an issue only in the scenario of single account machines where the account used for regular work is an administrator. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; 1. Download the installer from this GitHub repo's releases section: [OpenBabel-3.1.1-x64.exe](https://github.com/openbabel/openbabel/releases/download/openbabel-3-1-1/OpenBabel-3.1.1-x64.exe); 2. Run the installer, preferably as a non-privileged user; 3. Observe where the aforementioned files and registry values are placed",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2724:3159,test,test,3159,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2724,1,['test'],['test']
Testability,"using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 2f34bda337d7ddefa8f2bebfc23931a63e45241f; Operating system and version: Debian 11.3. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. When output format of `obabel` is `inchi` or `inchikey` and logging is enabled (i.e. `-xl`):. 1. Log levels for InChI are appropriately set; 2. Input format is correctly determined from command line argument. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. 1. In the examples below, the level should be Info (or Debug) but not Error; 2. Input format is always MOLfile–file extension and `-i` option are ignored. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. If input is SMILES-string,. ```console; $ obabel -:C -o inchi -xl; InChI=1S/CH4/h1H4; ==============================; *** Open Babel Error in InChI log; Generating standard InChI; Input format: MOLfile; Output format: Plain text; Full Aux. info; No timeoutUp to 65534 atoms per structure; 1 molecule converted; ```. If input is a CML file,; ```console; $ obabel -:C -O CH4.cml --gen3D; 1 molecule converted; $ obabel CH4.cml -o inchi -xl; InChI=1S/CH4/h1H4; ==============================; *** Open Babel Error in InChI log; Generating standard InChI; Input format: MOLfile; Output format: Plain text; Full Aux. info; No timeoutUp to 65534 atoms per structure; 1 molecule converted; ```. `obabel -:C -o cml --gen3D | obabel -i cml -o inchi -xl` gives the same output.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2505:1500,test,test,1500,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2505,3,"['log', 'test']","['log', 'test']"
Testability,"uss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 2.4.1 -- Nov 22 2017 -- 15:48:24; Operating system and version: Linux hostname 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. I expect the molecule to have the correct resname (UNL by default) in the output PDB file. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. I see weird resnames in the output file. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; obabel -p 7.4 -i sdf Spongothymidine_1.sdf -o pdb; ```. My output; ```; ATOM 1 C5M T A 1 26.362 58.646 91.209 1.00 0.00 C ; ATOM 2 C5 T A 1 25.922 57.822 90.045 1.00 0.00 C ; ATOM 3 C6 T A 1 24.699 57.300 89.909 1.00 0.00 C ; ATOM 4 N1 T A 1 24.311 56.600 88.785 1.00 0.00 N ; ATOM 5 C1* T A 1 22.945 56.099 88.619 1.00 0.00 C ; ATOM 6 O4* T A 1 22.049 56.831 89.499 1.00 0.00 O ; ATOM 7 C4* T A 1 21.402 55.880 90.357 1.00 0.00 C ; ATOM 8 C5* T A 1 21.209 56.431 91.767 1.00 0.00 C ; ATOM 9 O5* T A 1 20.616 55.451 92.611 1.00 0.00 O ; ATOM 10 C3* T A 1 22.230 54.602 90.335 1.00 0.00 C ; ATOM 11 O3* T A 1 21.417 53.477 90.642 1.00 0.00 O ; ATOM 12 C2* T A 1 22.722 54.594 88.897 1.00 0.00 C ; ATOM 13 O2* T A 1 23.810 53.710 88.674 1.00 0.00 O ; ATOM 14 C2 T A 1 25.178 56.411 87.710 1.00 0.00 C ; ATOM 15 O2",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1767:1499,test,test,1499,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1767,1,['test'],['test']
Testability,"ut; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pyb",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:17727,test,test,17727,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['test'],['test']
Testability,"utput or what you expected to see. -->. First of all, thanks for the great software!. I use smile code to define AtomClass value for each atom and want to write it in CML output. For exemple `[N:730]`, should give the following output for the atom field:. `<atom id=""aa730"" elementType=""N""/>`. The atom id is created including a string (aa) and the atom class value (730). The string value is incremented (ab, ac, ...) if other atoms with the same atom class exist in the molecule. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->. Everything is fine if and only if the number of atoms with the same class is smaller than 27. For large molecules, obabel fails and a seg fault is produced. <!--- If suggesting a change/improvement, explain the difference from current behavior —>. I found the problem comes from `src/formats/xml/cmlformat.cpp`. I edited the file `cmlformat.cpp`, subroutine `void CMLFormat::MakeAtomIds(OBMol& mol, vector<string>& atomIDs)` to allow for up to 9999 atoms with the same atom class. The modified source file is attached along with the file mpdtmd3.smi to check everything is fine. . Would it be possible to include this new feature/correction in future versions?. Please, note that I am a fortran programmer (!) not really familiar with cpp... ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. When using obabel 2.4.1 with the command; `obabel -ismi mpdtmc3.smi -ocml`, a segmentation fault occurs with the original version whereas a unique atom id is given for each atom with the correction proposed. [mpdtmc3.smi.zip](https://github.com/openbabel/openbabel/files/1584141/mpdtmc3.smi.zip); [cmlformat.cpp.zip](https://github.com/openbabel/openbabel/files/1584138/cmlformat.cpp.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1731:2428,test,test,2428,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1731,1,['test'],['test']
Testability,"valuation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppr",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:5084,test,test,5084,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,2,['test'],"['test', 'testsym']"
Testability,"version: SVN trunk; OS: Linux. 1:; graphsym.cpp; Newly allocated memory for _frag_atoms in the OBGraphSym constructor gets not freed.; A simple `delete _frag_atoms;` in the destructor solved it for my test case, but this has to be reviewed esp. if frag_atoms are given as parameters. 2:; obconversion.cpp; The last pLineEndBuf created in OBConversion::InstallStreamFilter() gets never freed.; 'delete pLineEndBuf;' in the destructor worked though. Reported by: runz",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/980:201,test,test,201,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/980,1,['test'],['test']
Testability,viors are detected at:; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/include/openbabel/atom.h#L160; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichi_bns.c#L2737; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L128; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1676; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1677; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/graphsym.cpp#L389; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/obconversion.cpp#L302; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/residue.cpp#L853. `ctest` output:. ```; test 5; Start 5: test_align_5; --; 5: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 5: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 17; Start 17: test_builder_1; --; 17: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 17: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 18; Start 18: test_builder_2; --; 18: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 18: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 19; Start 19: test_builder_3; --; 19: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:2139,test,test,2139,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"wse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.21022; Copyright (C) Microsoft Corporation. All rights reserved.; BSCMAKE: error BK1506 : cannot open file '.\Debug\KFReader.sbr': No such file or directory; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-ae-vc2008\OBMoreFormats\Debug\BuildLog.htm""; OBMoreFormats - 62 error(s), 23 warning(s); ------ Build started: Project: OBXMLFormats, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; chemkinformat.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory; cmlformat.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory; cmlreactformat.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory; rsmiformat.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory; rxnformat.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory; Generating Code...; Creating browse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.21022; Copyright (C) Microsoft Corporation. All rights reserved.; BSCMAKE: error BK1506 : cannot open file '.\Debug\chemkinformat.sbr': No such file or directory; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-ae-vc2008\OBXMLFormats\Debug\BuildLog.htm""; OBXMLFormats - 6 error(s), 0 warning(s); ========== Build: 0 succeeded, 2 failed, 12 up-to-date, 4 skipped ==========. Reported by: peterennis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778:21092,log,log,21092,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778,1,['log'],['log']
Testability,wx-widgets test called even when wx-gui is not enabled,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/764:11,test,test,11,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/764,1,['test'],['test']
Testability,ym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 17: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 18; Start 18: test_builder_2; --; 18: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 18: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 19; Start 19: test_builder_3; --; 19: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: unde,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:3433,test,test,3433,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Windows 10; anaconda3 powershell. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. When trying to convert a single step reaction scheme from cdx, one should obtain the same scheme in rxn format. The command being. obabel -icdx 'Example.cdx' -O 'Example.rxn'. There should be the same amount of molecules. Molecules above the arrow should be maintained there. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. A catalyst molecule is lost, going from 6 total molecules to 5 (see Example.rxn in the zip file). . Example_Eric.jpg (first picture) is what the input scheme looks like. Whereas Example.png is what is output to the rxn (second picture). . ![Example_Eric](https://user-images.githubusercontent.com/57144474/69673530-1c8b0880-1060-11ea-8a96-a283412e1c17.jpg); ![test-Example](https://user-images.githubusercontent.com/57144474/69673532-1d239f00-1060-11ea-9235-1ac811ae57ba.png). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. run command obabel -icdx 'Example.cdx' -O 'Example.rxn'. use rdkit to visualize Example.rxn within a python shell with; import rdkit; from rdkit import Chem; from rdkit.Chem import AllChem; from rdkit.Chem import Draw; rxn = AllChem.ReactionFromRxnFile('Example.rxn'); k = Draw.ReactionToImage(rxn); k.save('test-Example.png'). [Example.zip](https://github.com/openbabel/openbabel/files/3894075/Example.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2099:1712,test,test-Example,1712,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2099,3,['test'],"['test', 'test-Example']"
Testability,"} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. Python bindings will be compiled; Configuring done; CMake Warning (dev):; Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; --help-policy CMP0042"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. MACOSX_RPATH is not specified for the following targets:. inchi; openbabel. This warning is for project developers. Use -Wno-dev to suppress it. Generating done. Need help! Thank you~",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:20021,test,test,20021,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,3,['test'],"['test', 'testexample']"
Usability, 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 1 10 2 0 0 0; 1 2 1 0 0 0; 2 3 2 0 0 0; 3 4 1 0 0 0; 4 9 1 0 0 0; 4 5 2 0 0 0; 5 6 1 0 0 0; 6 7 2 0 0 0; 7 8 1 0 0 0; 8 19 1 0 0 0; 8 9 2 0 0 0; 9 10 1 0 0 0; 10 11 1 0 0 0; 11 20 2 0 0 0; 11 12 1 0 0 0; 12 13 2 0 0 0; 13 14 1 0 0 0; 14 15 2 0 0 0; 15 20 1 0 0 0; 15 16 1 0 0 0; 16 17 2 0 0 0; 17 18 1 0 0 0; 18 19 2 0 0 0; 19 20 1 0 0 0; M END. Messages:. babel 1.smi 1.mol ---errorlevel 4; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule SMILES format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in AssignSpinMultiplicity; Ran OpenBabel::AssignSpinMultiplicity; ==============================; *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in FindRingAtomsAndBonds; Ran OpenBabel::FindRingAtomsAndBonds; ==============================; *** Open Babel Information in NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule. ==============================; *** Open Babel Audit Log in WriteChemObjectImpl; OpenBabel::Write molecule MDL MOL format; 1 molecule converted; 1 info messages 6 audit log messages. Version Open Babel 2.2.0 -- Jul 7 2008 -- 22:06:15 . OS - gentoo GNU/linux. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830:1442,Clear,Clear,1442,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830,2,['Clear'],['Clear']
Usability," Operating system and version: Ubuntu 18.04. ## Expected Behavior; When calling OBMol.AddHydrogens(), it is expected to generate coordinates for the added hydrogens. The coordinates are generated based on the typical bond lengths and angles of the atoms involved. ## Actual Behavior; There is a check for whether the molecule HasNonZeroCoords() beforehand. If all the present coordinates are zero, then the hydrogen coordinates are left as zero also. This seems reasonable for most molecules, where it may be assumed that if the coordinates are all zero, then they will be set to something else later, so there is no use in generating coordinates for the hydrogens. But it leads to odd behavior if the molecule has a single heavy atom, such as water, ammonia, methane, etc. With these molecules, coordinates are generated for the hydrogens so long as the heavy atom coordinate is not located at the origin. For context, this came up when I was using simple test cases to create a bond adding routine that constructs valid molecules from sets of disconnected atoms produced by a generative model. While the issue was resolved by simply changing the coordinates of the test case molecules, the behavior seemed odd enough (and the proposed solution simple enough) that I would open an issue. ## Steps to Reproduce. ```; from openbabel import openbabel as ob. def test_case(atomic_num, x, y, z):; mol = ob.OBMol(); atom = mol.NewAtom(); atom.SetAtomicNum(atomic_num); atom.SetVector(x, y, z); mol.BeginModify(); ob.OBAtomAssignTypicalImplicitHydrogens(atom); mol.EndModify(); mol.AddHydrogens(); print('with {} at ({:.2f}, {:.2f}, {:.2f}),'.format(; ob.GetSymbol(atomic_num), x, y, z; )); for a in ob.OBMolAtomIter(mol):; if a != atom:; print(' H placed at ({:.2f}, {:.2f}, {:.2f})'.format(; a.GetX(), a.GetY(), a.GetZ(); )). test_case(8, 0, 0, 0); test_case(8, 1, 0, 0); ```; Output:; ```; mtr22@g001:~/gan$ python3 test_ob_problem.py; with O at (0.00, 0.00, 0.00),; H placed at (0.00, 0.00, 0.00); H pla",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2365:1684,simpl,simple,1684,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2365,1,['simpl'],['simple']
Usability," SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:15312,Simpl,Simplify,15312,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['Simpl'],['Simplify']
Usability,"""openbabel -H"" outputs a list of supported formats, but it's not exactly easy to parse: there are lots of other text on top of it, and the fields themselves could be clearer. For example, you could format the list like that:. xyz -- RW -- XYZ cartesian coordinates format. where "" -- "" are separators, the first column is the file format short name, the last is the description, and the second is whether it's read-write (RW), or only read (R) or write (W). Reported by: coudert. Original Ticket: ""openbabel/feature-requests/136"":https://sourceforge.net/p/openbabel/feature-requests/136",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1505:166,clear,clearer,166,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1505,1,['clear'],['clearer']
Usability,## Beep boop. Your images are optimized!. Your image file size has been reduced by **16%** 🎉. <details>; <summary>; Details; </summary>. | File | Before | After | Percent reduction |; |:--|:--|:--|:--|; | /data/splash.png | 52.43kb | 40.58kb | 22.60% |; | /doc/splash.png | 52.43kb | 40.58kb | 22.60% |; | /test/files/aromatics.png | 276.60kb | 217.29kb | 21.44% |; | /test/files/alias.png | 13.95kb | 11.22kb | 19.56% |; | /doc/images/rmsdconformerscore.png | 44.32kb | 38.06kb | 14.13% |; | /doc/images/spectrophore_cage.png | 36.35kb | 32.53kb | 10.52% |; | /doc/images/tetraplanar.png | 24.58kb | 22.22kb | 9.59% |; | /doc/images/tetrahedral.png | 14.24kb | 12.91kb | 9.34% |; | /doc/images/cistrans.png | 7.30kb | 6.71kb | 8.12% |; | /doc/images/squareplanar.png | 8.55kb | 7.89kb | 7.71% |; | /doc/images/tetranonplanar.png | 47.94kb | 44.66kb | 6.84% |; | /doc/images/SPshapes.png | 57.16kb | 53.47kb | 6.45% |; | /doc/images/energyconformerscore.png | 31.76kb | 30.00kb | 5.54% |; | /doc/images/gettransref.png | 1.30kb | 1.23kb | 5.54% |; | /doc/images/getcisref.png | 1.27kb | 1.22kb | 3.78% |; | | | | |; | **Total :** | **670.15kb** | **560.54kb** | **16.36%** |; </details>. ---. **Black Lives Matter** | [💰 donate](https://blm-bookmarks.carrd.co/#donate) | [🎓 learn](https://blm-bookmarks.carrd.co/#learn) | [✍🏾 sign](https://blm-bookmarks.carrd.co/#sign). [📝 docs](https://imgbot.net/docs) | [:octocat: repo](https://github.com/dabutvin/ImgBot) | [🙋🏾 issues](https://github.com/dabutvin/ImgBot/issues) | [🏅 swag](https://goo.gl/forms/1GX7wlhGEX8nkhGO2) | [🏪 marketplace](https://github.com/marketplace/imgbot),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2345:1274,learn,learn,1274,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2345,2,['learn'],['learn']
Usability,"## Environment Information; Open Babel version: 3.1.0. ## Expected Behavior; I have a selection of conformers of the same molecule. I want to collect all of the torsions in one file for comparison purposes. This should be easily done using the report file type. ## Actual Behavior; However, the list of torsions that are generated in this format vary from conformer to conformer, which makes it quite a bit more difficult. . I have attached the reports for three of the conformers for a small molecule to illustrate that the torsion list is different.; [CCB-CH2CN_1.txt](https://github.com/openbabel/openbabel/files/13367470/CCB-CH2CN_1.txt); [CCB-CH2CN_2.txt](https://github.com/openbabel/openbabel/files/13367471/CCB-CH2CN_2.txt); [CCB-CH2CN_3.txt](https://github.com/openbabel/openbabel/files/13367472/CCB-CH2CN_3.txt). ## Steps to Reproduce. I am simply using the basic convert feature to convert Gaussian job log files to report files. Input log files are attached below.; [CCB-CH2CN_1.log](https://github.com/openbabel/openbabel/files/13367504/CCB-CH2CN_1.log); [CCB-CH2CN_2.log](https://github.com/openbabel/openbabel/files/13367505/CCB-CH2CN_2.log); [CCB-CH2CN_3.log](https://github.com/openbabel/openbabel/files/13367506/CCB-CH2CN_3.log)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2644:851,simpl,simply,851,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2644,1,['simpl'],['simply']
Usability,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: Linux OpenSUSE Tumbleweed. ## Expected Behavior; Correct conversion of g98 format file containing vibrational frequencies to e.g. cjson. ## Actual Behavior; Converting a Gaussian 98 file to `.cjson` or `.molden` both result in the first atom (index 1, g98 seems to start at index 1) being dropped from all the displacements. If the vibrations are viewed with e.g. Avogadro the wrong atoms are animated for each frequency, as the displacements are incorrectly assigned to the atom with an index one higher. ## Steps to Reproduce; Two example files are attached, both produced by frequency calculations with `xtb`. Acetone shows the problem quite clearly because the C=O stretch at ~1700 cm-1 doesn't have a large coefficient on the O any more. The benzene files are primarily to show that the behaviour is systematic; by counting the number of coordinates in the displacement and comparing to the g98 file it is easy to see that again, the displacements for atom 1 have not been read/converted/stored. Since both `.molden` and `.cjson` files are missing the displacements of the first atom, it seems the problem is not in the conversion to the output format but rather the parsing of the input file. [acetone_g98.out.txt](https://github.com/openbabel/openbabel/files/13518791/acetone_g98.out.txt); [acetone.cjson.txt](https://github.com/openbabel/openbabel/files/13518792/acetone.cjson.txt); [acetone.molden.txt](https://github.com/openbabel/openbabel/files/13518793/acetone.molden.txt); [benzene_g98.out.txt](https://github.com/openbabel/openbabel/files/13518794/benzene_g98.out.txt); [benzene.cjson.txt](https://github.com/openbabel/openbabel/files/13518795/benzene.cjson.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2652:730,clear,clearly,730,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2652,1,['clear'],['clearly']
Usability,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: MacOS Silicon. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior. When I perform poetry add open-babel the installation files during wheel compilation, because the tool is looking for the includes library in a ""standard folder"" for linux, while Brew install in another location. Guessing Open Babel location:; - include_dirs: ['/Users/currentuser/Library/Caches/pypoetry/virtualenvs/data-AqK3HHEa-py3.9/include', '/Users/currentuser/.pyenv/versions/3.9.7/include/python3.9', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib']. I think the build failure should provide a clear message on how to set an environment variable that will allow you use different folders",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2412:732,clear,clear,732,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2412,1,['clear'],['clear']
Usability,"$ babel si-extra-h.sdf -o smi; C[SiH](C)C. The attached file has a very simple trimethyl [Si]. When printed as a SMILES, and extra H is added to the [Si] atom. This does not appear to happen in the SDF -- printing the SDF doesn't show any extra atoms. Reported by: @cjames53",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/741:72,simpl,simple,72,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/741,1,['simpl'],['simple']
Usability,"); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:17935,Simpl,Simplify,17935,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['Simpl'],['Simplify']
Usability,"**Is your feature request related to a problem? Please describe.**; A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]. **Describe the solution you'd like**; A clear and concise description of what you want to happen. **Describe alternatives you've considered**; A clear and concise description of any alternative solutions or features you've considered. **Additional context**; Add any other context or screenshots about the feature request here. openbabel==2.4.1. I want to convert .smi to .xyz, then i will achieve some task of prediciiton, so it is strict with the accuracy of 3D coordinate. When i use the openbabel convert .smi to .xyz, then convert .xyz to .smi. But i find the two smiles is differernt. the below is my code, I want to know how to get the better accuracy in .xyz coordinate. Thank you!. .smi->.xyz; ```python; ## Use openbabel to convert SMILES to xyz.; mol = pybel.readstring(""smi"", smiles); mol.localopt(forcefield=""mmff94"", steps=5000); mol.make3D(forcefield='mmff94', steps=100); mol.write(""xyz"", filename=out_name+'_pybel.xyz', overwrite=True); ```. .xyz->.smi. ```python; def MolFormatConversion(input_file:str,output_file:str,input_format=""xyz"",output_format=""smi""):; molecules = readfile(input_format,input_file); output_file_writer = Outputfile(output_format,output_file); for i,molecule in enumerate(molecules):; output_file_writer.write(molecule); output_file_writer.close(); print('%d molecules converted'%(i+1)); ```; This is the right smiles:O=C1[N]C([S])=NC2=NC=CN=C21; ![image](https://user-images.githubusercontent.com/32425458/172286276-53de501c-a049-4c1c-b908-b742bb8c60c2.png); This is convert smiles: O=C1N=[C](=S)N=C2N=CC=N[C]12; ![image](https://user-images.githubusercontent.com/32425458/172286420-71022838-b981-42b9-9415-b471416e4e25.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2484:70,clear,clear,70,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2484,3,['clear'],['clear']
Usability,**Is your feature request related to a problem? Please describe.**; A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]. At the moment vasp format writes coordinates in `Cartesian` only. **Describe the solution you'd like**; A clear and concise description of what you want to happen. Writes `Direct` i.e. fractional coordinates as well. **Describe alternatives you've considered**; A clear and concise description of any alternative solutions or features you've considered. **Additional context**; Add any other context or screenshots about the feature request here.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2564:70,clear,clear,70,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2564,3,['clear'],['clear']
Usability,"**Is your feature request related to a problem? Please describe.**; I am trying to use OpenBabel in a 64-bit application (written in C#). Simply including the 32-bit `OBDotNet.dll` obviously causes a crash. **Describe the solution you'd like**; Could OpenBabel provide a 64-bit, i.e., `OBDotNet-x64.dll` as well?. **Describe alternatives you've considered**; Providing a clear build instruction on how to generate an OBDotNet.dll could also be a solution. This can enable us to produce compatible DLLs. . Regarding this, in [this issue/comment](https://github.com/openbabel/openbabel/issues/1347#issuecomment-331784917), it is said that such a 64-bit DLL exists. I have never been able to find this (in a 64-bit Binary Release for OpenBabelGUI). The [latest documentation](https://open-babel.readthedocs.io/en/latest/UseTheLibrary/CSharp.html) also claims otherwise. Am I mistaken?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2532:138,Simpl,Simply,138,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2532,2,"['Simpl', 'clear']","['Simply', 'clear']"
Usability,", Windows VC8 sp1, and Macintosh gcc v4.0.1 it; compiles and runs successfully with no warnings (-Wall / -W4 -analyze ). Here are the profile timing details:; Profiling; Top 10 Application Exclusive Times Before, After; OpenBabel::EvalAtomExpr 698.826936 690.121976; OpenBabel::OBBond::IsClosure(void) 279.642807 169.510756; OpenBabel::OBBitVec::NextBit(int) 258.648177 13.774759; OpenBabel::DetermineFRJ 232.795392 228.121234; OpenBabel::OBMol::ConnectTheDots(void) 228.119041 237.671913; OpenBabel::OBSSMatch::Match 183.537663 151.428923; OpenBabel::OBMol::ContigFragList 167.962881 68.488272; OpenBabel::OBResidue::GetSerialNum 144.409723 116.851829; OpenBabel::OBAtom::GetResidue(void) 141.741211 124.446245; OpenBabel::OBMol::NextAtom 135.275772 139.024312. OBBitVec, Elapsed Inclusive Time Before, After. OpenBabel::OBBitVec::CountBits(void) 331.374589 5.245531; OpenBabel::OBBitVec::NextBit(int) 289.776188 15.537802; OpenBabel::OBBitVec::operator|=3D(class 22.527727 22.958838; OpenBabel::OBBitVec::Clear(void) 17.309754 38.937146; *OBRingSearch::RemoveRedundant calls more often; OpenBabel::OBBitVec::operator=3D(class 13.516117 13.361786; OpenBabel::OBBitVec::IsEmpty(void) 13.172408 8.526192; OpenBabel::OBBitVec::Resize(int) 9.163442 0.239190; OpenBabel::OBBitVec::SetBitOn(int) 8.433342 6.604024; OpenBabel::OBBitVec::OBBitVec(void) 4.358699 0.026231; OpenBabel::OBBitVec::ToVecInt(class 4.154683 3.295529; OpenBabel::OBBitVec::OBBitVec(class 1.560059 2.204832 *called 5x as; often OBMol::FindSSSR; OpenBabel::OBBitVec::FromVecInt 0.490307 0.390806 *App Exclusive Time; OpenBabel::OBBitVec::operator&=3D(class 0.108372 0.183811 *called 5x as; often OBMol::FindSSSR. OBResidue->OBAtom, Elapsed Inclusive Time Before, After. OpenBabel::OBResidue::~OBResidue(void) 7.255922 3.532200; OpenBabel::OBResidue::AddAtom(class OpenBabel::OBAtom *) 90.960348; 36.679044; OpenBabel::OBResidue::GetAtomID(class OpenBabel::OBAtom *) 17.294657; 11.365676 *Exclusive Time; OpenBabel::OBResidue::GetNumAt",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1491:2398,Clear,Clear,2398,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1491,1,['Clear'],['Clear']
Usability,"- Gert Thijs <gert.thijs@silicos.com>; - openbabel 2.1.1; - Mac OS X 10.5 on x86_64. I have encountered a problem when using the phmodel that is linked to the type of the input file. I have a simple molecule in both a smiles (test.smi) and a sd file (test.sdf). When I convert them using obabel with the -p option for protonation I get two different results. This is illustrated in the steps below. macbook1:~ gert$ cat test.smi ; C[N+]1=CC=CC=C1	1. macbook1:~ gert$ cat test.sdf; 1; -OEChem-07030811492D. 7 7 0 0 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 N 0 3 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 2 7 1 0 0 0 0; 2 3 2 0 0 0 0; 3 4 1 0 0 0 0; 4 5 2 0 0 0 0; 5 6 1 0 0 0 0; 6 7 2 0 0 0 0; M CHG 1 2 1; M END; $$$$. When using the phmodel to convert the molecule, the positive charge on the nitrogen will be lost when starting from the SD file as an input ; while this is not the case with the smiles input file. . macbook1:~ gert$ obabel -h -p -isdf test.sdf -osmi 2> /dev/null; [CH3][n]1[cH][cH][cH][cH][cH]1	1; macbook1:~ gert$ obabel -h -p -ismi test.smi -osmi 2> /dev/null; [CH3][n+]1[cH][cH][cH][cH][cH]1	1. When only adding hydrogens, there is no difference between the two generated smiles and the nitrogen still has a positive charge. Any idea where this difference might come from? . Many thanks,; Gert Thijs. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/785:192,simpl,simple,192,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/785,1,['simpl'],['simple']
Usability,"- [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: windows 10. I am looking for an example on how to pass input or output conversion options while using the `openbabel.OBConversion` object in python? As an example, if I wish to convert `xyz` format to `inchified smiles` string I would simply run the following command in the command line:. ```bat; obabel -ixyz <filePath> -osmi -xI; ````. where `-xI` indicates output options and `I` means produce inchified smiles in this case. Is there a way to pass such flags via the `openbabel.OBConversion` object methods? I could see that there is `SetInOutFormat` method, but couldn't find anything on the extra flags. Another use case is the generation of 2D or 3D coordinates handled by the `--gen2d` and `--gen3d` flags. If setting extra conversion flags in the `openbabel.OBConversion` object is not possible, do we need to do these extra operations manually via other available openbabel classes and methods? If so, could someone please point me to some tutorials?. Many thanks,; Daniel",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2390:353,simpl,simply,353,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2390,1,['simpl'],['simply']
Usability,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Linux CentOS 7; Conda version: 4.11.0; Python: 3.8.6 (have also tried 3.9.9, no help). ## Expected Behavior; Call obabel, with relevant flags/arguments, convert molecules.; The program worked this way for a long time with no issue, but ceased working around the time I set up a new virtual environment with conda and updated several modules. ## Actual Behavior; Using the command obabel in any capacity results in the following message:; obabel: error while loading shared libraries: libopenbabel.so.5: cannot open shared object file: No such file or directory; I have searched through the libraries in the conda virtual environments and in the base conda libraries but cannot find it (both lib and pkg directories). Using the find command similarly does not find it.; I do, however, have 'libopenbabel.so.7' in the lib folders of conda, which I also find on when I use the ldcnfig command. I have tried to add 'libopenbabel.so.5' temporarily to my library path (LD_LIBRARY_PATH) without success. I also tried simply using conda remove and conda install again to try and reset it. I have looked on previous GitHub issues and the forums on openbabel-discuss@lists.sourceforge.net. I have not interfered with the deeper files of OpenBabel but fear either a library has been inadvertently deleted or I need to respecify which library OpenBabel should use (although I am not sure how to do that). Can anyone advise me?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2446:1178,simpl,simply,1178,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2446,1,['simpl'],['simply']
Usability,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1 (`master`); Operating system and version: Ubuntu 20.04. ## Expected Behavior; Calling the `.formula` attribute in Pybel should reflect the *current* state of the molecule. ## Actual Behavior; In Pybel, if you have called `.formula` once and then try to alter the molecule (adding/removing hydrogens), it will not update the `.formula` attribute. This happens because if the `""Formula""` attribute is already set, then `GetFormula()` just returns that attribute. One method of solving this would be to clear the `""Formula""` attribute when changes are made to the molecule. In my testing cases, this was only with `.addh()` and `.removeh()` (Discovered while testing for #2363.), but perhaps there are other modifying functions that would need to clear the `""Formula""` attribute?. ## Steps to Reproduce. ```python; >>> from openbabel import pybel; >>> mol = pybel.readstring(""smi"", ""C.[Ru]""); >>> mol.formula; 'CRu'; >>> mol.addh() # adding H after getting .formula; >>> mol.formula # attr(""Formula"") is already set, so not created; 'CRu'; >>> ; >>> mol = pybel.readstring(""smi"", ""C.[Ru]""); >>> mol.addh(); >>> mol.formula; 'CH4Ru'; >>> mol.removeh(); >>> mol.formula; 'CH4Ru'. ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2364:604,clear,clear,604,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2364,2,['clear'],['clear']
Usability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Ubuntu 18.04 - 4.15.0-43-generic. I tried to generate a SMILE string departing from the PDB file in attachment, but the program is generating an invalid output. I believe the problem is in the algorithm for aromatic ring perception as I also identified the same problem in other aromatic rings. In the attached example, the program does not identify one of the aromatic rings in the molecule X01 and generates an output containing a simple ring (not aromatic) and a Nitrogen (N04) with two double bonds. I also tested the same procedure in an older Open Babel version (2.3.2) and surprisingly the output generated was correct. Thus, I believe the bug was introduced in some of the newest versions. Outputs:; Version 2.4.1 (error): [N]1=C(N=C(NC=1)N)c1c(ccc(c1)C#N)O; Version 2.3.2 (ok): n1c(nc(nc1)N)c1c(ccc(c1)C#N)O. [error.txt](https://github.com/openbabel/openbabel/files/2757278/error.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1920:601,simpl,simple,601,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1920,1,['simpl'],['simple']
Usability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Linux. I found a possible issue with the function MatchesSMARTS() available at OBAtom when dealing with cyclic/symmetric molecules. A simple example is the molecule ""NC(=O)CCC1O[Mg]O1"". If I search for a pattern like ""[OX2][C;X4,X3][OX2]"" the result I got was False, but of course the pattern exists. Then, I took a look at the file atom.cpp and I observed that MatchesSMARTS() is using the function GetUMapList() from OBSmartsPattern. The problem here is that GetUMapList() returns only unique matched patterns, so when we have cyclic/symmetric molecules, not all patterns are returned, but only one of them. As a consequence, the first atom of the unique list may not correspond to the target atom, so the pattern above works only for one of the Oxygens. To solve this problem, I made my own function to match patterns by using GetMapList(). So, it returns all possible patterns, which means I can find all oxygens. Therefore, I think you guys may update the function MatchesSMARTS by exchanging GetUMapList by GetMapList. bests",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2131:302,simpl,simple,302,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2131,1,['simpl'],['simple']
Usability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: openbabel-dev 3.1.1; Operating system and version: Ubuntu 20.10. ## Expected Behavior. Be able to read a CIF generated by VESTA. ## Actual Behavior. Getting this error message in the console:. ```; ==============================; *** Open Babel Error in Find; Unknown space group error (H-M symbol:P 1), cannot match the list of transforms, please file a bug report.; ==============================; *** Open Babel Warning in Do; Converting to P 1 cell using available symmetry transformations.; ```. ## Steps to Reproduce. I am trying to read the CIF file with this simple program `read.cpp`:. ```cpp; #include<openbabel/atom.h>; #include<openbabel/mol.h> // OpenBabel::OBMol; #include<openbabel/generic.h> // OpenBabel::OBUnitCell; #include<openbabel/obconversion.h>. int main(int argc, char** argv){. 	OpenBabel::OBMol mol;; 	{; 		OpenBabel::OBConversion obconv; obconv.SetInFormat(""cif"");; 		obconv.ReadFile(&mol, ""VO2-Tetragonal-ICSD_CollCode647613_double_c_triclinic.cif""); ; 		std::cout<< mol.NumAtoms() << std::endl;; 		assert( mol.NumAtoms() == 12 );; 	}; }; ```. This is the complete CIF file `VO2-Tetragonal-ICSD_CollCode647613_double_c_triclinic.cif`. ```; #======================================================================; # CRYSTAL DATA; #----------------------------------------------------------------------; data_VESTA_phase_1. _chemical_name_common 'Vanadium dioxide - HT'; _cell_length_a 4.553490; _cell_length_b 4.553490; _cell_length_c 5.698880; _cell_angle_alpha 90.000000; _cell_angle_beta 90.000000; _cell_angle_gamma 90.000000; _cell_volume 118.162136; _space_group_name_H-M_alt 'P 1'; _space_group_IT_number 1. loop_; _space_group_symop_operation_xyz; 'x, y, z'; 'x, y, z+1/2'. loop_; _atom_site_label; _atom_site_occupancy; _atom_site_fract_x; _atom_site_fract_y; _atom_site_fract_z; _atom_site_adp_type; _atom_site_B_iso_or_equiv; _atom",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2414:698,simpl,simple,698,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414,1,['simpl'],['simple']
Usability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. [cloud_init_openbabel.txt](https://github.com/openbabel/openbabel/files/3648942/cloud_init_openbabel.txt). ## Environment Information; Open Babel version: 2.4.1 and HEAD; Operating system and version: Ubuntu 18.04. ## Expected Behavior; make test to pass, pybel to work. ## Actual Behavior; pybindtest_bindings fails make test. Trying to import Pybel fails with:. > PYTHONPATH=/usr/local/lib/python2.7/dist-packages/openbabel/ python test.py; > Traceback (most recent call last):; > File ""test.py"", line 3, in <module>; > import pybel; > File ""/usr/local/lib/python2.7/dist-packages/openbabel/pybel.py"", line 51, in <module>; > from . import openbabel as ob; > ValueError: Attempted relative import in non-package; > . I wanted to verify that #1557 was fixed in HEAD, figure out what commit fixed it, and see if it the same issue as one I ran into in a different context (obabel command line), and maybe learn a little pybel at the same time. But I can't get pybel to run at all, and there is a possibly related regression test failure. . ## Steps to Reproduce. I've seen similar reports before, but they don't seem to go anywhere often due to reproducibility issues or problems with finding multiple libraries from different versions. To try to get around that I've attached a file that can be sent as ""user data"" to a AWS instance, this should make it very reproducible to anyone that uses AWS. I used Ubuntu 18.04 ami-05c1fa8df71875112 (64-bit x86), and m4.large or m4.xlarge size. If you aren't an AWS user, I hope it is easy enough to parse this file out into the steps. In the past I had issues with getting the environment right for ""make test"" to find the right .so files. By doing ""make install"" before ""make test"", I think it should get around that, and the final test I do should only use the installed files anyway.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2046:987,learn,learn,987,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2046,1,['learn'],['learn']
Usability,"- [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 from conda-forge (py39hc681964_1); Operating system and version: Ubuntu 20.04. ## Expected Behavior; While the mol2 sections are not required to be in a certain format, certain readers (e.g. Antechamber) assume that the ATOM and BOND section will be the first two sections. Ideally, it would simply skip over the UNITY_ATOM_ATTR section and move onto the BOND section. One workaround is to use `-xu` to suppress writing formal charge information to the file, but then it is not a complete mol2 file. ## Actual Behavior; Antechamber replicates the last atom read 3 times (for 3 lines in the UNITY_ATOM_ATTR section). This has been brought up on the Amber mailing list (http://archive.ambermd.org/202103/0308.html), and is definitely a deficiency in the way Amber reads mol2 files. However, it may be easier for users to change the order of mol2 sections as written with OpenBabel. ## Steps to Reproduce; `obabel -:""[O--]"" -o mol2 -O ominus.mol2` produces the following file:; ```; @<TRIPOS>MOLECULE; *****; 1 0 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O 0.0000 0.0000 0.0000 O.3 1 HOH1 0.0000; @<TRIPOS>UNITY_ATOM_ATTR; 1 1; charge -2; @<TRIPOS>BOND; ```; Running `antechamber -dr no -i ominus.mol2 -fi mol2 -o tmp -fo ac` with this file ends up with 4 oxygen atoms, but doesn't produce an error. The file is below:; ```; CHARGE -2.00 ( -2 ); Formula: O4 ; ATOM 1 O HOH 1 0.000 0.000 0.000 0.000000 os; ATOM 2 O1 MOL 1 0.000 0.000 0.000 0.000000 os; ATOM 3 O2 MOL 1 0.000 0.000 0.000 0.000000 os; ATOM 4 O3 MOL 1 0.000 0.000 0.000 0.000000 os; ```. However, rearranging the sections to be; ```; @<TRIPOS>MOLECULE; *****; 1 0 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O 0.0000 0.0000 0.0000 O.3 1 HOH1 0.0000; @<TRIPOS>BOND; @<TRIPOS>UNITY_ATOM_ATTR; 1 1; charge -2; ```; gives a much more reasonable output with the correct number of atoms.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2350:379,simpl,simply,379,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2350,1,['simpl'],['simply']
Usability,"/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/co",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2546:2593,learn,learn-github-actions,2593,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2546,1,['learn'],['learn-github-actions']
Usability,"/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 7. ## Expected Behavior. ""`make install`"" works. ## Actual Behavior. ""`make install`"" sometimes fails with:. ```; make[2]: *** No rule to make target `/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2/lib/libmaeparser.so', needed by `lib/libopenbabel.so.7.0.0'. Stop; ```. This issue isn't always reproducible, it's not clear to me yet why it doesn't happen consistently... ## Steps to Reproduce. ```; mkdir /tmp/OpenBabel-3.1.1/build; cd /tmp/OpenBabel-3.1.1/build; cmake -DCMAKE_INSTALL_PREFIX=/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2 -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_C_COMPILER='icc' -DCMAKE_C_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_CXX_COMPILER='icpc' -DCMAKE_CXX_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_Fortran_COMPILER='ifort' -DCMAKE_Fortran_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_FIND_USE_PACKAGE_REGISTRY=FALSE -DBOOST_ROOT=/software/Boost/1.72.0-iimpi-2020a -DBoost_NO_SYSTEM_PATHS=ON -DBoost_INCLUDE_DIR=/software/Boost/1.72.0-iimpi-2020a/include -DBoost_LIBRARY_DIR_RELEASE=/software/Boost/1.72.0-iimpi-2020a/lib -DENABLE_OPENMP=ON -DENABLE_TESTS=ON -DBUILD_GUI=OFF -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DPYTHON_INCLUDE_DIR=/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2443:1082,clear,clear,1082,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2443,1,['clear'],['clear']
Usability,"3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: any; Operating system and version: Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I would like to get 1.0 when I'm calling the function; `dynamic_cast<OBPairFloatingPoint *>((OBGenericData*)NULL)->GetGenericValueDef(1.0)`; but I get segmentation fail in Ubuntu 18.04 (master branch compiled with standard g++ compiler from Ubuntu repository. See https://stackoverflow.com/questions/2474018/when-does-invoking-a-member-function-on-a-null-instance-result-in-undefined-behav. Simple test case (fails in Ubuntu 18.04 `g++ -O3 main.cpp; ./a.out`); ```; // Example program; #include <iostream>; #include <string>. class A {; public: ; float f;; inline float foo(const float & def) {; if( this == NULL) {; return def;; }; else return f; ; }; };. int main(); {; A * d = NULL; ; std::cout << d->foo(1.0) << std::endl;; }; ```. I think, that it is much better to have the function like this; ```; static ValueT GetValue(OBGenericData * obd); { ; OBPairTemplate<ValueT> * pd = dynamic_cast<OBPairTemplate<ValueT> *>(obd);; assert( pd != NULL);; return pd->GetGenericValue();; }; static ValueT GetValue(OBGenericData * obd, const ValueT &def_val); { ; OBPairTemplate<ValueT> * pd = dynamic_cast<OBPairTemplate<ValueT> *>(obd);; return (pd == NULL) ? def_val : pd->GetGenericValue();; }; ```; Using the static function gives much nicer call.; `float f = OBPairFloatingPoint::GetValue(a.getData(""something""), 1.0);`; instead of; `float f = dynamic_cast<OBPairFloatingPoint *>(a->GetData(""something""))->Get",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1913:1247,Simpl,Simple,1247,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1913,1,['Simpl'],['Simple']
Usability,"://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: macOS 10.15.5. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; `obabel ... -h` should ""hydrogenate"" a molecule: C2N --> C2H7N. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; `obabel -h` does not change the molecule, nor is the `-h` flag even listed in the help text.; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; [14:23:03] tmck:stoichkit git:(feat/reaction-domain-model*) $ obabel -icdxml priv/cd.xml -omolreport -h; TITLE: 47; FORMULA: C2N; MASS: 38.0281; TOTAL SPIN: 2; ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.2150; ATOM: 2 C TYPE: C3 HYB: 3 CHARGE: 0.1075; ATOM: 3 C TYPE: C3 HYB: 3 CHARGE: 0.1075; BOND: 0 START: 1 END: 2 ORDER: 1; BOND: 1 START: 1 END: 3 ORDER: 1; 1 molecule converted; ```; (where `priv/cd.xml` contents is shown here: https://gist.github.com/ttymck/931b4594d827ea60c415d1191f6f3717). I would expect `FORMULA: C2H7N`. As well, `-h` is not included in the help text, so it is not clear if this feature is still available:. ```; [14:20:41] tmck $ obabel --help | grep -e '-h' ; [14:21:37] tmck $; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2266:2089,clear,clear,2089,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2266,1,['clear'],['clear']
Usability,"<!--; --> I'm trying to run a pretty simple conversion of a text file to pdb. I'm running my program on python 2.7 in a conda virtual environment on MacOSx, but I'm getting an error code. . My code:; `import pybel`; `drug_3d = pybel.readfile(""text"", ""/Users/myname/Documents/drug.txt"")`; `drug_3d_output = pybel.Outputfile(""pbd"", ""/Users/myname/Documents/drug.pdb"")`; `drug_3d_output.write(drug_3d)`; `drug_3d_output.close()`. I get this error code:; ""Traceback (most recent call last):; File ""/Users/myname/Documents/myprogram.py"", line 20, in <module>; drug_3d_output.write(drug_3d); File ""/Users/myname/miniconda2/envs/myenv/lib/python2.7/site-packages/pybel.py"", line 272, in write; self.obConversion.WriteFile(molecule.OBMol, self.filename); AttributeError: 'generator' object has no attribute 'OBMol'. - [X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Most recent on conda; Operating system and version: MacOSx Sierra. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. --> . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior --> Error; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; --> ; [drug.txt](https://github.com/openbabel/openbabel/files/1182056/drug.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1607:37,simpl,simple,37,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1607,1,['simpl'],['simple']
Usability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Linux Mint 19.3 64-bit Xfce and Windows 10 ver 1909. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; obspectrophore generates spectrophores that are decimal fractions. Consequently, comparisons must be done with distance measures such as Euclidean distances rather than Tanimoto distances or Tanimoto similarity coefficients. Could the spectrophore sets for each compound simply be multiplied by a constant (e.g., 10^5) to convert all the numbers to integers so that Tanimoto coefficients could then be computed? Would this be a legitimate procedure?; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Please see description above.; ## Steps to Reproduce; <!--; This is the current consistent behavior. If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2142:1168,simpl,simply,1168,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2142,1,['simpl'],['simply']
Usability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Ubuntu 18.04. `OBSmartsPattern` does not match itself for some SMARTS.; The simplest example was `[c]1ccc[c]c1`. ```; $ echo '[c]1ccc[c]c1' | obgrep -c '[c]1ccc[c]c1'; 0; ```. I know there are limitations in the current implementation ([Wiki](https://openbabel.org/wiki/SMARTS)), but this does not seem to be reported.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2025:830,simpl,simplest,830,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2025,1,['simpl'],['simplest']
Usability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: `Open Babel 3.0.0 -- Oct 20 2019 -- 15:03:24`; Operating system and version: `macOS 10.15.1`. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ```; obrms --a; ```; should fail with the clear message; ```; obrms: invalid option -- a; Unrecognized option: 63; ``` ; as it happens with `obrms -a`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. A segmentation fault occurs:; ```; obrms --a; [1] 17978 segmentation fault obrms --a; ```; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. See above.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2071:943,clear,clear,943,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2071,1,['clear'],['clear']
Usability,"A confab beta tester reports:; ""When I input a gzipped file it only appears to read the first molecule. This has happened to me in the past in my own code - when I call OBConversion::Read; with the second argument as a file stream it only reads the first molecule. The trick is to; set the input stream first, then call Read with just the single OBMol& argument. It's a subtle one as it only shows up for zipped input formats, but it is to do with the fact; that when the stream argument is not null, it gets checked to see if it is zipped, and if; it has been checked before the Read simply returns false (to avoid repeated checking)."". Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1015:585,simpl,simply,585,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1015,1,['simpl'],['simply']
Usability,A simple check before appending residue id to residue name. It checks if the exact number is not already at the end of residue name string. Fixes #1819,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1828:2,simpl,simple,2,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1828,1,['simpl'],['simple']
Usability,Added two new options to the PDBQT writing code:; -h to preserve hydrogens ; -n to preserve atom and residue naming; These are useful to simplify the integration of Vina/autodock with other tools.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/147:137,simpl,simplify,137,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/147,1,['simpl'],['simplify']
Usability,"Although existing in my smi and fs prepared with 2.3.0, I cannot search for isonitriles. Error was also in 2.2.x. I get:. 0 candidates from fingerprint search phase; Segmentation fault. A simple database might look like this. [C-]#[N+]CCCC(SC[N+]#[C-])SC[N+]#[C-] 1,1-bis(isocyanomethylthio)-4isocyanobutane; CCC(C)(C)[N+]#[C-] 1,1-Dimethylpropylisonitril; [C-]#[N+]CCCOCCOCCC[N+]#[C-] 1,2-bis-(3-isocyano-propoxy)ethane; [C-]#[N+]CCCOCCOCCC[N+]#[C-] 1,2-bis-(3-isocyano-propoxy)_ethane; CCCCCCCCCCCCCCCCC([N+]#[C-])C[N+]#[C-] 1,2-diisocyano-octadecane. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1066:188,simpl,simple,188,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1066,1,['simpl'],['simple']
Usability,"Apologies! learning how SWIG works so i've refactored this commit, i've also updated the test to be stricter on the SMILES; ordering. . valgrind test - no leaks. # Wiswesser Reader Release Notes. The following are sections from Elbert G. Smiths rule book that were used to create; the wln reader. Note that not all chapters are listed here, only the ones where compound; types were introduced. ## Rules fully supported; * Unbranched and Branched Chains; * Systematic Contractions; * Organic Salts; * Benzene Derivatives; * Multisubstituted Benzene Rings; * Benzene Rings in Branching Chains; * Monocyclic Rings; * Bicyclic Rings; * Polycyclic Rings; * Perifused Rings; * Chains of Rings other than Benzene; * Sprio Rings; * Bicyclic Bridged Rings; * Rings with Pseudo Bridges; * Ring Structures with Crossed Bonds and Unbranched Bridges; * Rings of Rings Contraction; * Metallocenes and Catanenes ; * Chelete Compounds; * Ionic Charges, Free Radicals and Isotopes. ## Rules unsupported. * Multipliers; * Ring Contractions and Multipliers; * All Special Problems Rules",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2591:11,learn,learning,11,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2591,1,['learn'],['learning']
Usability,"As described at https://github.com/openbabel/enhancement-proposals/blob/master/reactions-as-obmols/reaction-handling.md. I still have some reaction formats left but I'd like to get in a PR now, and get some feedback, as all the tests pass, and the rest will be a bit of a slog. SMILES, RINCHI and RXN all support reactions via OBMols now. I've added an OBReactionFacade class to simplify things. In short, reactions are supported via three attributes, a flag on an OBMol, and two OBPairInteger data objects on an OBAtom, ""rxncomp"" and ""rxnrole"".",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1836:207,feedback,feedback,207,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1836,2,"['feedback', 'simpl']","['feedback', 'simplify']"
Usability,"As simple as in title. I was thinking of implementing other GENOPTIONS, like -f, -l in pybel. I think it would be better and more user-friendly when pybel.readfile() would have explicit arguments: pybel.readfile(....., first=None, last=None). Ideas?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/126:3,simpl,simple,3,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/126,2,"['simpl', 'user-friendly']","['simple', 'user-friendly']"
Usability,Canon failure for very simple case of two ions,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1166:23,simpl,simple,23,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1166,2,['simpl'],['simple']
Usability,Clear ImplicitHydrogens on multi-fragment cdxml documents.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2697:0,Clear,Clear,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2697,1,['Clear'],['Clear']
Usability,Clear the ifs stream flags in the outformat reader.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/5:0,Clear,Clear,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/5,1,['Clear'],['Clear']
Usability,"Cmake 3.0.0 gives the following warning when compiling Open Babel on OS X:. ```; CMake Warning (dev):; Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; --help-policy CMP0042"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. MACOSX_RPATH is not specified for the following targets:. openbabel; ```. To suppress the warning, policy CMP0042 needs to be set to `OLD` or `NEW` in CMakeLists.txt. This commit simply sets CMP0042 to `OLD`, to continue the pre-3.0 behaviour. From reading the cmake documentation, it looks like setting the policy to `NEW` _should_ be fine, because CMakeLists.txt defines `CMAKE_INSTALL_NAME_DIR`, which acts as a manual override to any of the changes in default behaviour caused by the new policy. However, I think sticking with `OLD` for now would be best to maintain backwards compatibility with older versions of Cmake (just like what is already done with CMP0005). More details here:. http://www.cmake.org/cmake/help/v3.0/policy/CMP0042.html; http://www.cmake.org/Wiki/CMake_RPATH_handling; http://www.cmake.org/Wiki/CMake/Policies; http://www.cmake.org/cmake/help/v3.0/prop_tgt/INSTALL_NAME_DIR.html; http://www.cmake.org/cmake/help/v3.0/prop_tgt/MACOSX_RPATH.html",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/85:475,simpl,simply,475,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/85,1,['simpl'],['simply']
Usability,"Conversion from a Q-Chem z-matrix shows clear problems; on some molecules (likely from a torsional change). The; resulting structure is not anything like the XYZ; cartesian coordinates immediately before the z-matrix. A new test should be created to test the; internal-&gt;cartesian and cartesian-&gt;internal conversion; routines. Ideally, these should be self-consistent, at; least in the internal coordinates presented. Further; testing of this sort may elucidate where the problem; exists. -Geoff. (I also need to post a few test structures which show; this bug.). Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/430:40,clear,clear,40,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/430,1,['clear'],['clear']
Usability,"Currently the documentation (from bond.cpp) for bond orders says:. ""The bond order (i.e., 1 = single, 2 = double... 5 = aromatic)"". The numbers ""1"", ""2"", ... ""5"" should be defined as constants:. #define SINGLE_BOND 1; #define DOUBLE_BOND 2; ...; #define AROMATIC_BOND 5. Also the documentation does not specify clearly the connection between order=5 and flag=OB_AROMATIC_BOND... That leads to misuse of the API, e.g.:. Incorrect: mol.AddBond(atomX, atomY, 1, OB_AROMATIC_BOND); // will not mark atoms as aromatic; Correct: mol.AddBond(atomX, atomY, 5); // why 5???. Suggestion:. Define additional function AddAromaticBond() with same arguments as AddBond() and eliminate order=5. Reported by: dma_k",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1136:311,clear,clearly,311,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1136,1,['clear'],['clearly']
Usability,"Currently, ""conformers"" in OB can be: a) list of real conformers; b) list of geometry optimization steps; c) if relaxed scan is performed, sequential compozition of lists of all geometry optimization steps. However, it would be useful to distinguish a) and b) (e.g., in latter case conversion to Hartree units are more desirable in external application, in former - not). Case ""c"" also needs to be distinguished - minimums of every optimization cycle are ""real"" conformers in a) sense, and lists of every optimization need to be separated to simplify life of users. Reported by: @annulen. Original Ticket: [openbabel/feature-requests/153](https://sourceforge.net/p/openbabel/feature-requests/153)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1522:542,simpl,simplify,542,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1522,1,['simpl'],['simplify']
Usability,"Dear Administrator, . scPDB dataset provides protein structures by mol2 format.; To generate machine learning features I used pybel, but Segmentation fault has been occurred for large protein file. - [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: openbabel 2.4.1 (conda-forge) installed with `conda install`; Operating system and version: CentOS7, anaconda3-2018.12 (installed by pyenv). ## Expected Behavior; Reading protein.mol2 without any error. ## Actual Behavior; Segmentation fault was occurred. ## Steps to Reproduce; ```py; import pybel; mol = next(pybel.readfile(""mol2"", ""scPDB/1e1q_4/protein.mol2"")) # Segmentation fault; ```. corresponding URL to scPDB:; http://bioinfo-pharma.u-strasbg.fr/scPDB/SITE=1e1q_4",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2014:101,learn,learning,101,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2014,1,['learn'],['learning']
Usability,"Dear sir:. I am an undergraduate student from Dalian University of Technology,China.Our team is working on a program ,we appriciate applying with MMFF94 force field in order to optimize the conformation of; molecule.But unhappy , we are obsessed on the Stretch Bend term,we can't make this term achieve to convergence all the time by Steepest-Descending; Algorithm .we reference to the derivative expression of openbable 2.2.0,but we were defeated again and again,so we appeal for your aid .We appreciate your suggestion on this derivative or any other guidance on solving this energy term.We're looking forward to your reply.; Thanks very much!; Best wishes!; . Sincerely,; Fang Bai. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/828:553,guid,guidance,553,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/828,1,['guid'],['guidance']
Usability,"Discussion on the 'openbabel-discuss' mailing list asked how to get the text id; of an OBAtom; the current approach requires getting the atom's residue to call; OBResidue::GetAtomID(OBAtom*) and passing in the atom's pointer. To simplify; this use case, OBAtom::GetAtomID() is added by this patch.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1544:229,simpl,simplify,229,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1544,1,['simpl'],['simplify']
Usability,"Error reading simple CIF file generated with VESTA with space group ""P 1""",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2414:14,simpl,simple,14,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414,2,['simpl'],['simple']
Usability,ExtensionTable cleared,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/395:15,clear,cleared,15,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/395,2,['clear'],['cleared']
Usability,"Fix for #1731. Changes how atom class information is used in CML. CML doesn't itself provide a way to do this, so we hack it into the atomid. The existing code used a complex method, perhaps because of a belief that the atomid had to be letters followed by a number. Checking the CML spec, this doesn't appear to be the case. It just should be alphanumeric (or also underscore and minus), and unique within the molecule. Given that, there's a very simple alternative; just append _ATOMCLASS to the end of the existing atomid. So what was ""a3"" for atom number 3, now might be a3_4 if that atom had atom class 4.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1746:448,simpl,simple,448,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1746,1,['simpl'],['simple']
Usability,"Fix issue with protonating charged ARG; ; OB was placing a third H on NH1 using a random bond vector. The; AssignBonds, which is suppose to match known protein residue bonding; patterns, was not working because atom names were not stripped of; whitespace. Also, the original pattern in resdata.txt does not match the; convention of the double bond going to NH1 (it has NH2). Then, even if; AssignBonds sets the right bond order, the; PerceivedBonds fragment matching code undoes it, so refined the bond; typer patterns.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2504:472,undo,undoes,472,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504,1,['undo'],['undoes']
Usability,"For a molecule with no bond, or no atoms, the various iterators spend a fraction of a second allocating a visit array from 0 to -1 which is 2**32 or so. This effect can be observed for:; obabel -:C -omol; as it visibly pauses after writing the header. The fix is simply to remove the no-op ""return"" to the start of the iterator ctors.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1610:219,pause,pauses,219,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1610,2,"['pause', 'simpl']","['pauses', 'simply']"
Usability,"For quite some time, the program no longer is called from the CLI by `openbabel`, but by `obabel`. Surprisingly, calling `obabel -H` still suggested the old form e.g., the call `openbabel -L` to learn about the formats Open Babel is aware. This PR addresses the issue in this ""inner documentation"" of the program.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2307:195,learn,learn,195,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2307,1,['learn'],['learn']
Usability,"From Andrew Dalke:. OBAtom.HtoMethtyl() can dump code to stderr. v3: < -0.28, 0, 0 > v4: < -0.28, 0, 0 >. This is quite clearly a bit of debugging code which; wasn't removed:. cerr << ""v3: "" << v3 << "" v4: "" << v4 << endl;. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1056:120,clear,clearly,120,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1056,1,['clear'],['clearly']
Usability,"From Miguel Quiros Olozabal:. Nevertheless, these atoms with more bonds than ""standard organic"" are; still not well represented in many cases. The compulsory brackets that; should be used are usually absent: for example, carbon with more than; four bonds or boron with more than three should be [C] or [B], simply C; or B is not correct. Also the H atoms bonded to such atoms must be; always explicitly indicated. Another example of this is coordinated; water, that should be [M]([OH2])... and, instead of this, appears; usually as [M](O)... (this means coordinated hydroxyl, not coordinated; water). Phosphorus in coordinated phosphines is another example of; usually missing brackets. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/841:307,simpl,simply,307,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/841,1,['simpl'],['simply']
Usability,"From Miguel Quiros Olozabal:; - When an atom as O, N or S is bonded to a metal and also forms a double; bond to a carbon and thus should be represented as [M]([X]=C...), the; bond is transformed into simple to keep ""standard valency"" of atom X and; this introduces more inaccuracies, for example is quite frequent to find; something like [M](X[C]...), a false trivalent carbon. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/844:200,simpl,simple,200,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/844,1,['simpl'],['simple']
Usability,"From: Ian Mason; irm2204@yahoo.co.uk; Hi. I'm trying to use OpenBabel to convert reaction files to RXN format. My OS is Windows 2000SP4. If I use the Windows GUI I get an Unhandled Exception error, if I use the command line I get a C++ Runtime Error (and an empty RXN file is produced). No other information is given. It doesn't seem to matter what the inoput format is - I've tried with CDXML and with CML. I have attached a simple CDXML file to use as an input file. Set the output format to RXN and click convert and you will see the error. It will convert it successfully to pretty much any other compatible format, including CML. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/691:426,simpl,simple,426,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/691,1,['simpl'],['simple']
Usability,"Hello everyone,. I am Ayush Paliwal, a 3rd-year student at the Indian Institute of Technology (BHU), Varanasi. I am interested in working with OpenBabel for GSoC 2021. I want to work on the project Develop a validation and standardization filter. I have good experience in C++, python and JS. I also worked on a molecular simulation project using MAPS software.; I would be grateful if you guided me on how to get more involved, contribute.; Looking forward to contributing!. Sincerely,. Ayush Paliwal.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2334:390,guid,guided,390,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2334,1,['guid'],['guided']
Usability,"Hello!. I am calculating energies of subsets of proteins using the OBForceField::AddIntraGroup() functionality. I've discovered that, unexpectedly, pairwise electrostatic and VDW energies are not calculated. Because GetNumElectrostaticPairs() and GetNumVDWPairs() return 0, I believe these interaction pairs are either getting cleared or are not being set in the first place. A fix or workaround would be greatly appreciated. I wrote a small program to demonstrate the problem on PDB-format proteins, selecting the backbone atoms as the intragroup:. - - -. $ obexample minimized.pdb ; ->Energy(false): 699.005; ->E_Bond(false): 26.092; ->E_Angle(false): 66.944; ->E_Torsion(false): 605.969; ->E_OOP(false): 0; ->E_Electrostatic(false): 0; ->E_VDW(false): 0; ->GetNumElectrostaticPairs(): 0; ->GetNumVDWPairs(): 0. - - -. Below is the source code used to produce the above:. - - -. #ifdef WIN32; #define USING_OBDLL; #endif; #include <openbabel/babelconfig.h>; #include <openbabel/base.h>; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>; #include <openbabel/forcefield.h>; #ifndef _MSC_VER; #include <unistd.h>; #endif. using namespace std;; using namespace OpenBabel;. string AtomID(OBAtom *atom); {; const OBResidue *residue = atom->GetResidue();; if(residue == NULL) return """";; return residue->GetAtomID(atom);; }. int main(int argc, char **argv); {; // Read in a molecule from argv[1]; OBConversion conversion;; OBFormat *format = conversion.FormatFromExt(argv[1]);; conversion.SetInFormat(format);; ifstream infile(argv[1]);; conversion.SetInStream(&infile);; OBMol molecule;; conversion.Read(&molecule);. // Create a backbone bitmask; OBBitVec backbone(molecule.NumAtoms()+1);; for(size_t i = 1; i < molecule.NumAtoms()+1; ++i); {; OBAtom *a = molecule.GetAtom(i);; if(AtomID(a) == "" N "") { backbone.SetBitOn(i); }; if(AtomID(a) == "" CA "") { backbone.SetBitOn(i); }; if(AtomID(a) == "" C "") { backbone.SetBitOn(i); }; }. // Setup intragroup forcefield; OBForceField *forcefield(O",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1561:327,clear,cleared,327,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1561,1,['clear'],['cleared']
Usability,"Hello, . I would like to apply in my python script the next function of openbabel to determine the aromaticity: ""Applying a model involves creating an instance of OBAromaticTyper(), and calling AssignAromaticFlags() passing an OBMol as a parameter."". However, after trying to find a clear example, it has been impossible to understand why the output is empty. Here, I copy a simple code that I am using:. > #### Reading the molecule; > mol = pybel.readstring(""smi"", ""CCC(C1)CCC2[n+]1CCC3C2[nH]C4C3CCCC4""); > #### Checking the aromaticity; > [int(atom.IsAromatic()) for atom in openbabel.OBMolAtomIter(mol.OBMol)]; > #### Adding the aromatic flags; > molmod = openbabel.OBAromaticTyper().AssignAromaticFlags(mol.OBMol). molmod is an empty object while I expected the molecule with aromatic flags. ; What I am doing wrong? . Thank you so much for your help and time!!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2508:283,clear,clear,283,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508,2,"['clear', 'simpl']","['clear', 'simple']"
Usability,"Hello,. I am presenting a first patch towards the acceptance of PDB insertion codes.; A more detailed description on what insertion codes are and how they are used I put as a comment to commit https://github.com/openbabel/openbabel/commit/46bb2d1d42b23938c6446680632477e950643e1d - in short, it is a single character that extends the residue ID and may become particularly important when it is only that character that distinguishes two consecutive residues representing the same amino acid. The patch is complete in the sense that PDB files with insertion codes are now properly read and transformations into other formats, tested was FASTA, behave correctly, i.e. no residue is omitted. The patch is incomplete in the sense that related formats like PDBQT (and possibly others beyond my immediate expertise) are not yet addressed. Also, I yet did not address any writing of PDB formats. I am prepared to continue this work, just hoping for a bit of a review and guidance in that I am not completely erroneous in how I addressed the insertion codes in the first place. I am attaching relevant lines of a structure with that feature; [test_insertioncode.pdb.txt](https://github.com/openbabel/openbabel/files/123521/test_insertioncode.pdb.txt); which transformed looks like. <pre>; $ obabel -ipdb openbabel/test_insertioncode.pdb -ofasta ; >openbabel/test_insertioncode.pdb 6 bp; generated with OpenBabel 2.3.90; SVSSSY; 1 molecule converted; </pre>. while the current implementation omits one (the middle) S.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/257:964,guid,guidance,964,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/257,1,['guid'],['guidance']
Usability,"Hello,. I discovered the following when i converted some SYBYL; MOL2 files to PDB format:. Excerpt from PDB file:. ATOM 9306 XX UNK 1 5.358 -30.465 37.754; 1.00 0.00; ATOM 9307 XX UNK 1 4.363 -30.911 37.578; 1.00 0.00; ATOM 9695 XX UNK 1 1.781 -27.681 31.783; 1.00 0.00; ATOM 9696 XX UNK 1 1.543 -26.779 31.193; 1.00 0.00; ATOM 10000 H UNK 1 -1.600 -11.612 27.818; 1.00 0.00; ATOM 10001 H UNK 1 -1.108 -10.156 26.898; 1.00 0.00; ATOM 10002 H UNK 1 -2.242 -11.325 26.157; 1.00 0.00. this should state clear what happens, doesn't it?. Thank You,. Kristian Rother; kristian.r@gmx.de. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/408:500,clear,clear,500,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/408,1,['clear'],['clear']
Usability,"Hello,. for a learning algorithm I create SMARTS directly from the SMILES.; In some cases I get the following error message,. *** Open Babel Error in SMARTSError; SMARTS Error:; C2C=CC=CC=2. Whenever there is a bond before the closing ringbond marker Open Babel fails to parse the SMARTS.; If I convert ""C2C=CC=CC=2"" as SMILES to an OBMol, the SMILES parser creates no errors. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/904:14,learn,learning,14,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/904,1,['learn'],['learning']
Usability,"Here is an implementation of OBMol::CopySubstructure. It copies a substructure of a molecule to another one, and has a bunch of optional parameters that hopefully cover every possible use case (or at least, make it possible for the user to do so). OBMol::NextFragment() already had some of this code; I've taken it out and expanded it, and now NextFragment() just calls this new function. This is needed to implement reactions as OBMols - e.g. if someone wants reagent 1. Also, we really should have it in any case - I've missed it before, and it's not the sort of thing that's simple for the user to throw together. One use case is that it simplifies work with matched pairs, where you are chopping up molecules.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1811:578,simpl,simple,578,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1811,2,['simpl'],"['simple', 'simplifies']"
Usability,"Here's some code to perform a weighted rotor search. It segfaulted on the first SMILES string I tried. ////////////////////////////////////////////////. int main(int argc,char *argv[]); {; OBForceField* pFF = OBForceField::FindForceField(""MMFF94"");; if (!pFF); {; cout << ""Bail out! Can't find forcefield!"" << endl;; system(""pause"");; return -1;; }; OBOp* pOp = OBOp::FindType(""Gen3D"");; if (!pOp); {; cout << ""Bail out! Can't find Gen3D!"" << endl;; system(""pause"");; return -1;; }. string SmilesString=""C2CN(CCN1C(=O)N(CC)N=N1)CCC2(COC)N(C(=O)CC)C3=CC=CC=C3"";; stringstream ss(SmilesString);; OBConversion conv(&ss);; OBMol mol;; if(!conv.SetInFormat(""smi"") || !conv.Read(&mol)); {; cout << ""Bail out! Can't read SMILES string"" << endl;; system(""pause"");; return -1;; }; mol.AddHydrogens();; if (!pOp->Do(&mol)); {; cout << ""Bail out! 3D generation failed"" << endl;; system(""pause"");; return -1;; }; if (!pFF->Setup(mol)); {; cout << ""Bail out! Forcefield Setup failed"" << endl;; system(""pause"");; return -1;; }; pFF->SteepestDescent(1000);; pFF->GetCoordinates(mol);; int numrots = mol.NumRotors();; cout << ""Number of rot: "" << numrots << endl;; pFF->WeightedRotorSearch(numrots, 100);; pFF->GetCoordinates(mol);; cout << ""Got to the end"" << endl;; system(""pause"");; }. ////////////////////////////////////////////////. The error was in std::vector:; _DEBUG_ERROR(""vector iterator not dereferencable"");. The call stack was:; msvcp80d.dll!00819961(); [Frames below may be incorrect and/or missing, no symbols loaded for; msvcp80d.dll]; > OpenBabelDLLD.dll!std::_Vector_const_iterator<OpenBabel::OBBond; *,std::allocator<OpenBabel::OBBond *> >::operator*() Line 99 + 0x14; bytes C++; OpenBabelDLLD.dll!std::_Vector_iterator<OpenBabel::OBBond; *,std::allocator<OpenBabel::OBBond *> >::operator*() Line 327 C++; OpenBabelDLLD.dll!OpenBabel::OBMol::FindChildren(std::vector<int,std::allocator<int>; > & children=[0](), int first=3, int second=4) Line 560 + 0x23; bytes C++; OpenBabelDLLD.dll!OpenBabel::",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/751:325,pause,pause,325,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/751,5,['pause'],['pause']
Usability,"Hi all,. PubChem exports SMILES in the form:; [I-].[H+]; or simply; [H]; Unfortunately, reading such SMILES through obconversion.Read( &mol, &ifstr ) doesn't work as the H gives some error. For any feedback or update, please contact me at e-mail bigfan // users.sourceforge.net. Thanks for any help on fixing this!. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/926:60,simpl,simply,60,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/926,2,"['feedback', 'simpl']","['feedback', 'simply']"
Usability,"Hi everybody. I apologize in advance if my question is dumb, and thank anyone that could help me out. I'm quite new to C++ and cmake. I have written a new plugin format, PDBT, which at the moment is nothing more than a copy of pdbqt format, but which will change once I can get it to work. When compiling normally everything works, I am able to use the new file format. However, I need an executable that can be distributed for use on different machines. When compiling using -DBUILD_SHARED=OFF -DBUILD_MIXED=ON, I can compile libopenbabel.a which I can then use to compile a static obabel binary. This executable works, but the new plugin (PDBT) is absent from obabel -L formats list, and fails when I try to use it doing ""obabel -isdf test/pdb_ligands_sdf/966c_rs2.sdf -opdbt"". Does anyone have any idea why the plugin is not working on the mixed compiled executable?. Here is my fork with the PDBT format (simply copied the pdbqt file in formats folder and modified formats.cmake to add pdbt format):. https://github.com/rquiroga7/openbabel.git. I am attaching my CMakeLists file which I use to compile the obabel executable:; [CMakeLists.txt](https://github.com/openbabel/openbabel/files/4268993/CMakeLists.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2134:909,simpl,simply,909,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2134,1,['simpl'],['simply']
Usability,"Hi guys, i'm trying to follow this papeline on git hub: ; https://github.com/seanharr11/phytebyte. When i arrive to point four this is the result : . % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (60) SSL certificate problem: certificate has expired; More details here: https://curl.se/docs/sslcerts.html. curl failed to verify the legitimacy of the server and therefore could not; establish a secure connection to it. To learn more about this situation and; how to fix it, please visit the web page mentioned above. How can i resolve it ? i don't want to use the site without protection.... . Thanks",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2628:530,learn,learn,530,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2628,1,['learn'],['learn']
Usability,"Hi there,. I have a problem with the bs format (ball-and-stick for use by the xbs code). Open Babel (when converting from xyz) outputs something like this:. #Set no. 17 (Final); 70; C 8.8148 -0.9294 -0.1838 2 5 18; C 9.4460 -0.0258 -1.1217 3 6 1; C 8.4029 0.7228 -1.8030 9 4 2; C 7.1295 0.2884 -1.2796 3 12 5; C 7.3839 -0.7293 -0.2737 4 1 15; C 10.6458 0.6065 -0.7784 2 7 20; C 10.8451 2.0056 -1.0869 8 6 23; C 9.8437 2.7253 -1.7385 9 30 7; C 8.6071 2.0768 -2.1060 10 3 8. But this doesn't correspond to the bs file format, which is defined here:; https://manpages.ubuntu.com/manpages/xenial/man1/xbs.1.html. and looks like this:. In a simple case, a file ch4.bs could look like this:. atom C 0.000 0.000 0.000; atom H 1.155 1.155 1.155; atom H -1.155 -1.155 1.155; atom H 1.155 -1.155 -1.155; atom H -1.155 1.155 -1.155. spec C 1.000 0.7; spec H 0.700 1.00. bonds C C 0.000 4.000 0.109 1.00; bonds C H 0.000 3.400 0.109 1.00; bonds H H 0.000 2.800 0.109 1.00. This sets the coordinates in the format; atom species x y z; and how to draw each atomic species, in the format; spec name radius color; and how to draw bonds, in the format bonds name1 name2 min-length max-length radius color. Any help much appreciated!. Many thanks.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2576:636,simpl,simple,636,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2576,1,['simpl'],['simple']
Usability,"Hi there,. I tried to convert a Tyrosine from PDB to MOL by adding hydrogens at pH 7. I observed that one hydrogen is always added to the tyrosine hydroxyl at a given position (let's call it 'A') when there is only this residue in the PDB file. However, when the PDB file contains other residues and a ligand near the tyrosine, the hydrogen is always placed at another position (let's call it 'B'). At this position, the hydrogen points out to the ligand oxygen, which would favor a hydrogen bond. The same would not happen with the hydrogen placed at position A. However, when I tried to convert the entire PDB file, the hydrogen position at the hydroxyl changed to position A again. So, I wonder what may be happening with the hydrogen addition under the hoods. I thought the hydrogen placement would be biased by potential hydrogen bonds when I converted that given tyrosine with nearby residues and ligands. But I got a different result when I used the entire PDB file. Note that the nearby residues/ligands are a subset of the entire PDB, so I think the conversion shouldn't have changed. . So, I wonder if Open Babel considers local pH or nearby charges and hydrogens to properly define the hydrogens. I tried to find some posts or issues at this repo to learn more about how hydrogens are placed by Open Babel, but I couldn't find any clues explaining why this unexpected situation happened. Would you have any ideas? Does Open Babel consider local pH, nearby atoms, charges, and hydrogen bonds to properly define hydrogen placement?. bests",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2542:1261,learn,learn,1261,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2542,1,['learn'],['learn']
Usability,"Hi there,. I've noticed some recent problems with spacegroup # 230 in OpenBabel. . For a while, I haven't been able to use the 'set spacegroup' feature of Avogadro because it will crash with the following message:; Cannot find an OpenBabel equivalent to Spglib's Hall symbol ""-I 4bd 2c 3"". If I look inside the spacegroups.txt file in openbabel/data, I see that this is a symbol for spacegroup number 230, and for some reason it isn't loading properly. I also noticed that if I do something as simple as OpenBabel::SpaceGroup::GetSpaceGroup(spg)->GetHMName(), it will crash if spg is 230 (but it will work fine if spg is any other number 1 to 229). I'll try to look into the issue, but if any of you know how to fix it, that'd be great!. Thanks,; Patrick",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/242:494,simpl,simple,494,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/242,1,['simpl'],['simple']
Usability,"Hi, I have a problem when removing isotopes from InChI identifier using OpenBabel (3.1.1 installed via conda) InChI to InChI conversion (parameter `/noiso`). If I have an InChI of compound like deuterium oxide `InChI=1S/H2O/h1H2/i/hD2` that contains isotopes and would like to remove the isotopes (so I do simple InChI to InChI conversion using parameter `/noiso`), I get an InChI that looks like this: `InChI=1S/H2O/h1H2/hD2`. This InChI is however incorrect, any other conversion or action using this InChI ends with an error (example: I now want to convert `InChI=1S/H2O/h1H2/hD2` to can SMILES, I get an error: `*** Open Babel Error in InChI code, Reading InChI failed`). I have recently come across several of such compounds where removing isotopes disrupt the InChI. What I originally needed to do is simply removing isotopes from selected compounds to obtain more general structure. . More examples (compound containing H isotopes that is ok and one that fails to convert):; Original InChI: InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/i1D3,2D,3D,4D,5D (o-Cresol-d7); After ignoring isotopes (`/noiso`): InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3; Conversion to can SMILES: OK. Original InChI: InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/i1D3,2D,3D,4D,5D/hD (o-Cresol-d8); After ignoring isotopes (`/noiso`): InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/hD; Conversion to can SMILES: FAILED. What I would **expect to get from both of these compounds** is InChI of o-Cresol: `InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3`. I get it from the first example but in the second, there is still deuterium `/hD` in the InChI identifier. From this it seems that OpenBabel ""ignores isotopes"" by simply removing everything after `i` till the next `/` character, but that does not always work. Is this a bug or am I missing some chemical knowledge that explain this behaviour?. Example command line for removing isotopes from InChI: `obabel -i 'inchi' cresol_d7.inchi -o 'inchi' -O cresol_d7_out.in",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2308:306,simpl,simple,306,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2308,2,['simpl'],"['simple', 'simply']"
Usability,"Hi,. I have been working on a project which included a lot of malformed SMILES been fed to OpenBabel via Python bindings. I have found out a case when OpenBabel crashes with a segmentation fault. After playing a bit, I have found the simplest case to break it is something like the following SMILES string:. F13.1. To reproduce the error, do the following:. $ echo 'F13.1' > test.smi; $ babel -i smi test.smi -o mol test.mol; Segmentation fault. In Python:; $ python; Python 3.4.1 (default, May 23 2014, 17:48:28) [GCC] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; import pybel; pybel.readstring('smi', 'F13.1'); Segmentation fault; $. I have run babel with GDB, here is the backtrace:. 1 0x00007fffef348cdb in OpenBabel::OBSmilesParser::ParseSmiles (this=this@entry=0x7fffffff41b0, mol=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:431; 2 0x00007fffef349427 in OpenBabel::OBSmilesParser::SmiToMol (this=this@entry=0x7fffffff41b0, mol=..., s=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:398; 3 0x00007fffef349c63 in OpenBabel::SMIBaseFormat::ReadMolecule (this=<optimized out>, pOb=<optimized out>, pConv=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:343; 4 0x00007ffff77934e2 in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffdf60, pFormat=0x7fffef55fb50 <OpenBabel::theSMIFormat>) at ../temp/openbabel-2.3.2/src/obmolecformat.cpp:105; 5 0x00007ffff7738e8c in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/obconversion.cpp:519; 6 0x00007ffff773b33d in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60, is=0x7fffffffd3e0, os=os@entry=0x7fffffffcfe0) at ../temp/openbabel-2.3.2/src/obconversion.cpp:450; 7 0x00007ffff773d6cf in OpenBabel::OBConversion::FullConvert (this=this@entry=0x7fffffffdf60, FileList=..., OutputFileName=..., OutputFileList=...) at ../temp/openbabel-2.3.2/src/obconversion.cpp:1417; 8 0x0000000000402",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1316:234,simpl,simplest,234,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1316,1,['simpl'],['simplest']
Usability,"Hi,. I'm running MacOs X 10.4.11. I am having trouble installing OpenBabel and iBabel. When installing OpenBabel (2.2.3a-mac) I get the following message:. You cannot install Open Babel 2.2.3 on this volume. Could not find specified message for index 31. iBabel appears to install but does not allow me to see structures. I tried installing an earlier version of OpenBabel but that didn't help (although it appeared to install). I'm probably just forgetting to do something simple. Any suggestions?. Joe. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/965:474,simpl,simple,474,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/965,1,['simpl'],['simple']
Usability,"Hi,. I've installed OpenBabel 3.1.1 as per the documentation using the Windows installer downloaded from this repo. I can't seem to find the files that the docs seem to indicate should be installed in /Program Files/OpenBabel-3.1.1/. openbabel-3.dll is there, but the lib for linking is missing, as are the header files. I've pulled the header files from the repo and created a babelconfig.h from examples I found (it was missing in the source I pulled down). I'm using cmake in VS 2022 and I get the expected errors when linking fails, e.g.:. error LNK2019: unresolved external symbol ""public: __cdecl OpenBabel::OBMol::OBMol(void)"" (??0OBMol@OpenBabel@@QEAA@XZ) referenced in function ""private: bool __cdecl Application::initSphereInstances(void)"" (?initSphereInstances@Application@@AEAA_NXZ); error LNK2019: unresolved external symbol ""public: virtual __cdecl OpenBabel::OBMol::~OBMol(void)"" (??1OBMol@OpenBabel@@UEAA@XZ) referenced in function ""private: bool __cdecl Application::initSphereInstances(void)"" (?initSphereInstances@Application@@AEAA_NXZ); . I'm sure I'm missing something simple; it's been a while since I've used c++/cmake, so I'm a bit rusty. Any help or advice will be greatly appreciated!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2716:1090,simpl,simple,1090,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2716,1,['simpl'],['simple']
Usability,"Hi,. Just a small efficiency issue when reading very large mol2-files (formats/mol2format.cpp) in . bool MOL2Format::ReadMolecule(OBBase* pOb, OBConversion* pConv). . The assignment of neighbor bond information to atoms is using an unnecessary amount of time and could; be split up into two loops (clearing and assigning). While stepping through the bond list, adding said ; bond directly to the ""Begin"" and ""End"" atom would make the function more efficient instead of always searching ; for the correct atom in the entire bond list (which can take a couple of seconds for very large; molecules). However the order of the neighbor bonds for a particular atom might be different than; before (does this matter?). Hope this helps; Fabian. PS> I didn't check the other file formats if the same applies there too. Original version starting on line 291 :. for (patom = mol.BeginAtom(apos); patom; patom = mol.NextAtom(apos)); {; patom->ClearBond();; for (pbond = mol.BeginBond(bpos); pbond; pbond = mol.NextBond(bpos)); {; if (patom == pbond->GetBeginAtom() || patom == pbond->GetEndAtom()); {; patom->AddBond(pbond);; }; }; }. New version:. for (patom = mol.BeginAtom(apos); patom; patom = mol.NextAtom(apos)); {; patom->ClearBond();; }. for (pbond = mol.BeginBond(bpos); pbond; pbond = mol.NextBond(bpos)); {; 	patom = pbond->GetBeginAtom();; 	patom->AddBond(pbond);; 	patom = pbond->GetEndAtom();; 	patom->AddBond(pbond);; }. Reported by: fab5",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/994:298,clear,clearing,298,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/994,3,"['Clear', 'clear']","['ClearBond', 'clearing']"
Usability,"Hi,. When I load with the OpenBabel library the attached ; molecule (.cml) file, it sometimes says that the ; bonds have order 18 or 28. The problem doesn't happen everytime (perhaps 50% of ; times). When it happens, it is followed several ; seconds later by a segfault, though I don't know if ; it happens in our own program -Kalzium) or in the OB ; libraries themselves. With other (simpler) .cml files, the problem doesn't ; happen at all. As you can see in the attached .cml file, the bonds ; in that molecule only have order 1 or 2. Perhaps we're stupid and the probem lies in the way ; we use OB to load the molecule file?. Here are relevant parts of the Kalzium code:. code for loading the .cml file:. ---------. OpenBabel::OBMol* OpenBabel2Wrapper::readMolecule( ; const QString& filename ); {; 	OpenBabel::OBConversion Conv;; 	OpenBabel::OBFormat *inFormat = NULL;. 	//the OB2 Molecule; 	OpenBabel::OBMol *mol = new OpenBabel::OBMol;; 	std::ifstream inFileStream( ; filename.toLatin1() );; 	if ( !inFileStream ) {; 		QMessageBox::warning( 0, ; i18n( ""Problem while opening the file"" ),; 				i18n( ""Cannot open ; the specified file."" ) );; 		return 0;; 	}. 	//find out which format the file has...; 	inFormat = Conv.FormatFromExt( ; filename.toLatin1() );; 	Conv.SetInAndOutFormats( inFormat,inFormat );; 	Conv.Read( mol, &inFileStream );. 	kDebug() << QString::fromLatin1( ; mol->GetFormula().c_str() ) << "" (Weight: "" << ; mol->GetMolWt() << "", Title: ""<< mol->GetTitle() ; << "")"" << endl;. 	return mol;; }. --------. Code for determining the order of bonds:. --------. 	int order;; 	if( bond->IsSingle() ) order = 1;; 	else if( bond->IsDouble() ) order = 2;; 	else if( bond->IsTriple() ) order = 3;; 	else; 	{; 		order = bond->GetBondOrder();; 		if( order > 12 ) // probably a bogus ; molecule file!; 			// according to the ; element.txt file in OB,; 			// no element can have more ; than 12 bonds; 		{; 			order = 1;; 			kDebug()<<""Umm, some bond ; pretends to have ""; 				""order ""<<bond->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/561:385,simpl,simpler,385,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/561,1,['simpl'],['simpler']
Usability,"Hi. I like to distinguish between Carboxylic acids and ; Carboxylic esters: . Based on ; http://www.daylight.com/support/faq/smarts_examples.fa; q.html#META. the SMARTS for Carboxylic acid (with proton) (-oic acid, ; COOH) should be [CX3](=O)[OX2H1]. With this code I get for lMatches = 0. // start sample code	; OBSmartsPattern* sp = new OBSmartsPattern; ; std::istringstream is(""CC(=O)O"");; OBMol mol(SMI,MOL2);; vector<vector<int> >	mlist;; long lMatches = -1;. if (sp->Init(""[CX3](=O)[OX2H1]"")); {; mol.Clear();; OBFileFormat::ReadMolecule(is, mol);; if (! mol.Empty()) ; {; sp->Match(mol);; mlist = sp->GetMapList();; lMatches = mlist.size();; } ; } ; // end sample code	. If I change ; if (sp->Init(""[CX3](=O)[OX2H1]"")); to; if (sp->Init(""[CX3](=O)[OX1]"")); I get for lMatches = 1. For this test I used Microsoft Visual Studio.net 2003 ; C++ Compiler. I had no problem with the sample ; application smartstest. . Thank you for your work!! . Best regards. Ivo; silvestri@isitech.com. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/456:507,Clear,Clear,507,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/456,1,['Clear'],['Clear']
Usability,"Hydrogens in MOL/SDF files are handled inconsistently when written as SMILES. The attached SDF file has three records, all simple methane, but two instances have a deuterium atom, and the third has a simple hydrogen atom. These should all three produce a correct SMILES for methane, but the third one instead produces ""[CH]"", which is just plain wrong. $ babel ~/tmp/babel_bug.sdf -o smi; C[2H] deuteromethane; C[2H] deuteromethane; [CH] plain methane. The interpretation in the SMILES writer seems to be, ""If any explicit hydrogens are present, then ALL hydrogens for this heavy atom are fully specified."" But this can't be correct, because it means that deuterium and tritium are an exception. Reported by: @cjames53",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/743:123,simpl,simple,123,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/743,2,['simpl'],['simple']
Usability,"I am faced with a set of strange SMART query failures across different molecules and I wonder if I am encountering something like [this](https://github.com/openbabel/openbabel/issues/1034) or it is a new bug entirely (?). Specifically, I am trying to match just the atoms of the backbone with: `[NH0,NH1,NH2,NR5]~[C,CR5]-[CX3](=O)`. (That is a Nitrogen at the start of a chain (NH2), a Nitrogen somewhere along the chain (NH0, NH1), a Nitrogen on the ring of a PROline aminoacid, followed by a carbon (or carbon of a PROline aminoacid, followed by the final carbon of the main chain atoms). I have two molecules that I am trying this query on, a simple one (1GCN) and a more complex one (6QWY). This query matches ALL residues on 1GCN but skips residues 63,72,83,84 (**zero based index used here**) . The residues that are there are CYS, ARG, LEU, SER. So, it is not even the same residue it skips. When I am quering the atoms of the residues that are skipped (and I would expect that the query would have picked up), they are not any different than others that have produced a positive match. Their **types** are still ""Nam, C3, C2, O2"". Am I missing something here or could this be some sort of a bug?. ** Environment Information:**. Open Babel version: 2.3.2; Operating system and version: Linux (Ubuntu 18.04)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2156:646,simpl,simple,646,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2156,1,['simpl'],['simple']
Usability,"I am trying to output CML corresponding to the resonance form of carbon monoxide, [C]=O; As it is not necessarily clear whether hydrogen are implicit or explicit I have added hydrogenCount=""0"" to the carbon to say explicitly that the carbon has no hydrogens. OpenBabel however appears to ignore hydrogenCount=""0"" implicitly adding two hydrogens. On a related note OpenBabel's handling of CML's hydrogenCount attribute when explicit hydrogen are present is technically wrong.; If you have an atom with hydrogenCount=""2"" and one explicit hydrogen the number of hydrogens bonded tor the atom should according to the CML spec still actually be 2 , not 3. Taken from http://cml.sourceforge.net/schema/cmlCore/HTMLDOCS/cmlCore.pdf :; ""hydrogenCount[el.atom.hydrogenCount]; The total number of hydrogen atoms bonded to an atom.; The total number of hydrogen atoms bonded to an atom, whether explicitly included; as atoms or not. It is an error to have hydrogen count less than the explicit hydrogen; count. There is no default value and no assumptions about hydrogen Count can be; made if it is not given."". I have attached a zip file with a CML file demonstrating both cases. Reported by: dan2097",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/990:114,clear,clear,114,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/990,1,['clear'],['clear']
Usability,"I am using Open Babel ver 2.3.1 on a win7 Home machine 64bit; It seems that open babel cannot compute the valence of ANY radical carbon.; Here is how I found this problem. I want to find carbon radicals using SmartsDescriptors.; To do that, I added a SmartsDescriptor to plugindefines.txt in my working folder; according to daylight ; http://www.daylight.com/dayhtml_tutorials/languages/smarts/smarts_examples.html#RAD. I tried with some single-radicals, and the program never found a match for the RandomTest.txt file (see attachment). Trying to understand why, I set these following descriptors (in plugindefines.txt). SmartsDescriptor; v4; [v4]; Number of atoms with valence of 4. SmartsDescriptor; v3; [v3]; Number of atoms with valence of 3. #the following copied from Daylight; SmartsDescriptor; CR; [CX3v3+0]; C radicals. When testing the program I had the following output; obabel RandomTest.txt -h -ismi -otxt --append cansmi formula CR V3 V4; I had as output the following; cansmi formula CR V3 V4; [CH3] CH3 0 0 1; C[CH2] 	C2H5 0 0 2; C[CH]C 	C3H7 0 0 3; C[C](C)C 	C4H9 0 0 4; C=[CH] 	C2H3 0 0 2; C[C]=C 	C3H5 0 0 3; C#[C] 	C2H 0 0 2. No radicals are found (first numeric column). ; That’s because no carbon has a valence of 3 (second numeric column): all carbons always have valence of 4 (last column).; I expected the ""v3"" being equal to 1 for all the tested molecules and the V4 being lower by 1.; It is not clear to me if this is a bug, an unsupported feature or if I didn't really understand what obabel means with ""valence"".; Am I missing something or this is a bug?; Samuele; samuele.sommariva@gmail.com. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1160:1422,clear,clear,1422,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1160,1,['clear'],['clear']
Usability,"I am working on command line using obabel ver 2.3.1 on Win 7 machine.; I'm working on group additivity calculations (enthalpies).; I simply edited the plugindefines.txt adding at the end the definition of my new property (HF_Try) and defined my groups (at the moment: alkanes only) ; I attached a zip file containig:; - plugindefines.txt (last rows are what I edited); - HF_Try.txt (the groups I have added); - HC.txt (input file); There are two main problems: ; 1 - It looks like when more than 1 H atom is present on the group, multiple (= number of H) matches are found.; Using -d or -h combined with --gen2d or --gen3d didn't help. I have inserted in the database only alkanes group, so each attachment will be a saturaded carbon (-[CX4]); I defined the following groups:(HF_Try.txt, attached). First time with SMARTS, to be sure I did it right, I checked them with ; http://smartsview.zbh.uni-hamburg.de/smartsview/view. [CH3](-[CX4])	11 Primary C; [CH2](-[CX4])(-[CX4])	111 Secondary C; [CH](-[CX4])(-[CX4])(-[CX4])	1111 Tertiary C; [C](-[CX4])(-[CX4])(-[CX4])(-[CX4])	11111 Quaternary C. And I tryied with the following Hydrocarbons getting the following results: (C:\Translator>obabel HC.txt -ismi -otxt --append HF_Try). CC 66; CCC 288; CCCC 510; CC(C)C 1210; CCCCC 732; CC(C)CC 1432; CC(C)(C)C 132. Looking at the results the some things seem wrong to me.; I figured out how the program gets those results: every time H is present is counted with a ""multiplicity"". a - Every time there is a match on the methyl group, it is counted 3 times more than expected; 		(CC = 6*11, instead of 2*11); 		this problem is found also every time a methyl group is present ; b - Every time a Secondary group is found, it is counted twice ; 		(CCC = 2*111 + 6*11, instead of 2*11+111); 		(CCCC = 4*111 + 6*11, instead of 2*11+2*111); 		(CCCCC = 6*111+6*11 , instead of 2*11+3*111); c - Tertiary carbons itself seems ok; 		(CC(C)C = 1111 + 9*11 instead 1111 + 3*11, reffers to the (a) in this list); 		(CC(C)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1159:133,simpl,simply,133,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1159,1,['simpl'],['simply']
Usability,"I downloaded and compiled open babel 2.1.1 on Apr 4 and the check utility returned the messages in the attached file. The program ran OK with some simple SMILES, sdf, and mol2 examples. I'm using RHEL 4 (2.6.9-67.0.7.ELsmp) on an HP xw4600 workstation. Thanks,; David Moreland; davemoreland@idscbiotechnetwork.com. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/750:147,simpl,simple,147,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/750,1,['simpl'],['simple']
Usability,"I fixed two problems:; - the fingerprint was being resized to 0 with an initial Clear() so nothing was returned.; - there was an off-by-one when using the atom Idx() to address AtomInfo. This was in the code to handle the nbrs, and lead to an out-of-bounds memory access (with random values sometimes appearing in the fingerprint). As a general principle, rather than subtracting one from atom indices, we should just use them as provided, and instead increase the size of the referenced data structures by 1. This avoids this sort of error, where you remember to subtract 1 in one place but not another.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1829:80,Clear,Clear,80,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1829,1,['Clear'],['Clear']
Usability,"I get a segmentation fault when computing SMILES after deleting an atom from a simple molecule. I am using openbabel 2.3.2, python 2.7. import openbabel; obc = openbabel.OBConversion(); obc.SetInAndOutFormats('smi', 'smi'); mol = openbabel.OBMol(); obc.ReadString(mol, 'CC1=C(C)C(C(=C(N1)C)C)C'); mol.DeleteAtom(mol.GetAtom(1)); obc.WriteString(mol); ---Segmentation fault-------. My current workaround is to delete the bonds to the atom I want to delete, then split the components. . Reported by: mtrsky. Original Ticket: [openbabel/bugs/857](https://sourceforge.net/p/openbabel/bugs/857)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1237:79,simpl,simple,79,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1237,1,['simpl'],['simple']
Usability,"I got a ""grid not read"" error when trying to read a .cube file as from obprobe program. could it be something wrong with the OBConversion? Please help. OBConversion conv1;; OBFormat *format_grid_in = conv1.FormatFromExt("".cube"");; OBFormat *format_grid_out = conv1.FormatFromExt("".cube"");; ifstream ifs1;; ifs1.open(""954_site_37_0.000000.cube"");. OBMol mol;; mol.Clear();. if (!conv1.Read(&mol, &ifs1)){; cerr<<""grid not read\n"";; exit(-1);; }; OBGridData* gd;; gd = (OpenBabel::OBGridData*)mol.GetData(24);. Reported by: yongjinxu",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/826:363,Clear,Clear,363,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/826,1,['Clear'],['Clear']
Usability,"I have 3 installations of Open Babel I am testing with:. (1) Installed on Mac OS X 10.10.1, using v2.3.1 installer from downloads page; (2) Installed on Mac OS X 10.10.1, building from git repository, v2.3.90; (3) Installed on Ubuntu 14.04, building from git repository, v2.3.90. First, there is some ambiguity in the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html) for confab for number of conformers:. In options list: **--conf** used. ```~~; --conf <#confs>; ```~. In examples: **-nconfs** used. ```~~; obabel bostrom.sdf -O confs.sdf --confab -nconfs 100000; ```~~. I am unable to verify which one is correct, because I am unable to get confab to work properly, but this should be cleared up in the documentation eventually. Confab; -----------------; Based on the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html) example:. ```~~; obabel bostrom.sdf -O confs.sdf --confab -nconfs 100000; ```~~. My input:. ```~~; $ obabel r.xyz -O a.xyz --confab; ```~~. Outputs:; (1) Mac, 2.3.1 - confab not recognized, so it just converts xyz to xyz. ```~~; 1 molecule converted; ```~~. (2) Mac, 2.3.90, fails to build forcefield (this is invariant to number of rotatable bonds). ```~~; **Starting Confab 1.1.0; **To support, cite Journal of Cheminformatics, 2011, 3, 8.; ..Input format = xyz; ..Output format = xyz; ..RMSD cutoff = 0.5; ..Energy cutoff = 50; ..Conformer cutoff = 1000000; ..Write input conformation? False; ..Verbose? False. **Molecule 1; ..title = 0 1; ..number of rotatable bonds = 0; !!Cannot set up forcefield for this molecule; !!Skipping. 0 molecules converted; ```~~. (3) Ubuntu, 2.3.90, confab not recognized, so it just converts xyz to xyz, same as (1). ```~~; 1 molecule converted; ```~~. Genetic Algorithm; -----------------; Documentation input:. ```~~; obabel startingConformer.mol -O ga_conformers.sdf --conformer --nconf 30; --score rmsd --writeconformers; ```~~. My input:. `",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1330:737,clear,cleared,737,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1330,1,['clear'],['cleared']
Usability,"I have a sdf file containing 31000 ligands from a database called CMNPD; ![Screenshot 2024-08-22 115041](https://github.com/user-attachments/assets/c5b43fb4-2d99-4b06-8a20-13e798209b1a); . I want to perform energy minimization of the ligands before proceeding for virtual screening.; I am using Open babel on linux terminal to do so. The command I used is, ; obminimize -ff MMFF94 -sd CMNPD-export.sdf > target.sdf. Which ran successfully a while, but exited once an error was encountered, . ""**S E T T I N G U P C A L C U L A T I O N S. SETTING UP BOND CALCULATIONS...; COULD NOT FIND PARAMETERS FOR BOND 1-4 (IDX)...; obminimize: could not setup force field**."". Can you please guide me how to solve the issue? Or what could've gone wrong?; Is there any way to skip the problematic molecules for which force field cannot be generated?; Also, how can I determine up to which molecule the command ran successfully?. Thanks in advance.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2719:680,guid,guide,680,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719,1,['guid'],['guide']
Usability,"I have an sdf file with 3D structures, some of which have carbon ; atoms with undefined stereochemistry (""3"" for atom stereo parity ; in the atom block). However, upon conversion to smiles strings ; these atoms are treated as if they had a defined stereo chemistry, ; resulting in the corresponding atoms [C@H] or [C@@H]. This is ; especially troublesome, since there are other stereocenters ; present in the molecules which *are* defined (so no simple ; removal of ""@""s possible). ; Got the same results with versions 1.100.2 and 2.0.0b5. Christian Laggner. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/484:446,simpl,simple,446,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/484,1,['simpl'],['simple']
Usability,I have been having trouble converting z-matrices to XYZ or other formats. I have included a simple example which does not work. This file converts properly in babel-1.6. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/808:92,simpl,simple,92,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/808,1,['simpl'],['simple']
Usability,"I have obtained the attached CIF file for Prussian Blue directly from the journal website PR Bueno, et al., J. Phys. Chem. C, 2008, 111(34), 13264-71. The IUCr CIF test site confirms that both its basic and full structural information are without error. However, when I attempt a conversion under Windows 2003 using the most current OpenBabel 2.2.0 (converting to CIF - in order to use the simplest conversion - or anything else for that matter), I get the following report: ; =============================; *** Open Babel Warning in OpenBabel::CIFFormat::ReadMolecule; Problems reading a CIF file: no structure found !; 0 molecules converted; ============================; I am no expert in CIF - could someone advise how to correct the file? Why is Babel having a problem?; ; I actually wish to put the structure into Jmol, which also rejects the CIF file with ""Error reading file at line 5: String index out of range: -31 .... type mol"". LesG. lesg@users.sourceforge.net. . Reported by: lesg",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/814:390,simpl,simplest,390,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/814,1,['simpl'],['simplest']
Usability,"I tried to compile the Python bindings according to [the guidance](https://open-babel.readthedocs.io/en/latest/Installation/install.html#compile-language-bindings). The compilation was completed, but no Python binding was generated:. ```shell; sudo apt -y build-dep openbabel; git clone https://github.com/openbabel/openbabel.git openbabel.git && cd openbabel.git; mkdir build && cd $_; cmake .. -DBUILD_GUI=ON -DPYTHON_BINDINGS=ON; make -j 44; sudo make install; export PYTHONPATH=/usr/local/lib:$PYTHONPATH; ```; Then I checked as follows:. ```shell; werner@X10DAi:~$ python; Python 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from openbabel import openbabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ImportError: cannot import name 'openbabel' from 'openbabel' (unknown location); >>> . werner@X10DAi:~$ sudo find /usr/local -name ""pybel*""; werner@X10DAi:~$ ; ```; How to fix this problem?. Regards,; Zhao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2673:57,guid,guidance,57,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2673,1,['guid'],['guidance']
Usability,"I use the perl module of OpenBabel 2.0.2 and I; experiment the problem of memory leak when I work with; sdf files of 400MB or files with thousands of smiles.; I don't know C++, but I think the problem is in the; OBConversion class. When I measure the memory used by a subprogram where I; have created an object of this class, the result is; that it leaves data in memory after closing the; subprogram. And if I don't use this class, the memory; after calling the subprogram is 0. I send you the tiny perl program used to take this; conclusions, each '#number' tell you the memory usage. Thanks for all. #!/usr/bin/perl -W. use Chemistry::OpenBabel;; use Memchmark qw(memchmark);;; use strict;. my $mem=memchmark {main_program()};; print ""\n\nMemoria usada: $mem\n\n"";. exit;. sub main_program {; 	my; $molec=""C(Nc1ccc([S]([N]2[CH](c3cnccc3)CCCC2)(=O)=O)cc1)(c1c(Br)cccc1)=O"";; 	my $smarts_pattern=""[S]"";. 	#0; 	my $obConversion=new Chemistry::OpenBabel::OBConversion;; 	#2727936; 	my $obSmartsPattern = new; Chemistry::OpenBabel::OBSmartsPattern;; 	#2727936; 	$obConversion->SetInFormat(""sdf"");; 	#2727936; 	my $obMol=new Chemistry::OpenBabel::OBMol;; 	#2727936; 	$obConversion->ReadString($obMol,$molec);; 	#2863104; 	$obMol->ConvertDativeBonds();; 	#2863104; 	$obSmartsPattern->Init(""$smarts_pattern"");; 	#2863104; 	if ($obSmartsPattern->Match($obMol)) {; 		print ""\nOK\t$molec\n"";	; 	}; 	#2863104; 	$obMol->Clear();; 	#2863104. }. Reported by: oligoelemento",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/565:1410,Clear,Clear,1410,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/565,2,['Clear'],['Clear']
Usability,"I was having some problems with the sklearn package and even reported an issue in their github:; https://github.com/scikit-learn/scikit-learn/issues/10196. Later we found out that the source of the problem was actually importing pybel, when I installed the `pip` version of openbabel.; If I install openbabel with `conda install -c openbabel openbabel` everything works properly. I'm not sure what's the problem, but it seems like a problem on the openbabel side (specifically de `pip` version).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1702:123,learn,learn,123,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1702,2,['learn'],['learn']
Usability,"I'd like to see more output options with Obgen. It's a really handy tool for me but I feel I am limited by the formatting of the output... ; - Whenever I use obgen to convert SMILES strings --> .sdf files; I notice that the the automatically generated ID for the smiles string is not completely unique. I run a script directing obgen to process 100 files at a time in 200 parallel sessions - as a result if all sessions start at the same time I see block repeats of the same ID e.g. 'OpenBabel08061310513D' ; I would love to see a simple implementation of a unique ID generator - or perhaps even a way to read in names. . Energy minimization steps and other forcefield parameters would also be nice to specify asides from default settings. The sdf output file is not correctly formatted, the molecule data sections contain a space at the start of the file, which makes it uninterpretable for consistent conversion to other file formats. I spend most of my time editing dodgy output files with lengthy and inelegant sed/awk/perl commands. Reported by: mattycoze. Original Ticket: [openbabel/feature-requests/167](https://sourceforge.net/p/openbabel/feature-requests/167)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1535:531,simpl,simple,531,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1535,1,['simpl'],['simple']
Usability,"I'm encountering a problem involving the OBMol::StripSalts() method. I've included some code and an example input file to describe the problem:. File 'inp.smi' is the molecule input file. This file contains only one line describing the smiles of an input molecule composed of two disconnected fragments (therefore the dot):. CC(=C)C(=O)OCCN(C)C.C=CN1CCCC1=O TIM|OVS2573256. This smiles describes a molecule composed of two disconnected fragments, of which the first (the largest fragment) does not contain a ring, while the second does. The code itself is given here:. OBConversion conv;; conv.SetInFormat(conv.FormatFromExt(""/Users/hans/Temp/inp.smi""));; OBMol* m = new OBMol();; m->Clear();; (void) conv.ReadFile(m, ""/Users/hans/Temp/inp.smi"");; m->StripSalts();; std::vector<OpenBabel::OBRing*> r(m->GetSSSR());; int s(0);; unsigned int nrings(r.size());; for (unsigned int i = 0; i < nrings; ++i); {; if (r[i]->IsAromatic()) s += +0.2244435;; }; exit(0);. When running this program, I'm getting a segmentation fault. Removing the OBMol::StripSalts() method resolves the problem, as well as modifying the input file by removing either the first of second fragment (it works fine on either of these). Analysing the problems has shown that the OBMol::StripSalts() method is correctly removing the smallest fragment (the second part of the input smiles, and which contains a ring), keeping only the first part which contains no rings. However, it seems that the OBMol::GetSSSR() method, which is called on the following line, still detects the presence of rings, and this is not correct. As a consequence, the program crashes when calling the OBRing::IsAromatic() method, since the OBRing pointer is pointing to a ring that does not exists anymore... Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/776:684,Clear,Clear,684,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/776,1,['Clear'],['Clear']
Usability,"I'm using OpenBabel to perfrom substructure search in my own library. For this I'm converting my molecular structures (stored in Selection class) to OBMol using the following code:; ```; void Selection::to_obmol(OpenBabel::OBMol &mol) const; {; mol.Clear();. map<int,OpenBabel::OBResidue*> reslist;. mol.BeginModify();. for(int i=0;i<size();++i){; auto& at = atom(i);. // Create new atom in this mol; auto oba = mol.NewAtom();. oba->SetAtomicNum(at.element_number);; oba->SetPartialCharge(at.charge);; oba->SetVector(10.0*x(i),10.0*y(i),10.0*z(i));. // Create new residue if needed; if(reslist.count(at.resid)==0){; OpenBabel::OBResidue* obr = mol.NewResidue();; obr->SetNum(at.resid);; obr->SetChain(at.chain);; reslist[at.resid] = obr;; }. reslist[at.resid]->AddAtom(oba);; reslist[at.resid]->SetAtomID(oba,at.name);; }. mol.ConnectTheDots();; // Guess bond orders and aromaticity; mol.PerceiveBondOrders();; ; mol.EndModify();. // Need to avoid recomputing partial charges on output; mol.SetPartialChargesPerceived();; }; ```. Obtained OBMol seems to be correct and consistent - it is written normally to files, reports correct number of bonds, etc. However when I'm trying to use it in substructure search it fails:; ```. void Selection::find_mapping(const Selection sel); {; OpenBabel::OBMol src,sample;; to_obmol(src);; ; //------------------------------; // (1) Variant with conversion ; sel.to_obmol(sample);; //------------------------------. //------------------------------; // (2) Variant with reading the file directly; OpenBabel::OBConversion conv;; conv.ReadFile(&sample,""sample.pdb"");; //------------------------------. OpenBabel::OBQuery* query = OpenBabel::CompileMoleculeQuery(&sample);; OpenBabel::OBIsomorphismMapper *mapper = OpenBabel::OBIsomorphismMapper::GetInstance(query);; OpenBabel::OBIsomorphismMapper::Mappings maps;; mapper->MapAll(&src,maps);. std::cout << ""found "" << maps.size() << "" mappings"" << std::endl;. delete mapper;; delete query;; }. ```. If variant (2) is ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1884:249,Clear,Clear,249,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1884,1,['Clear'],['Clear']
Usability,"I've just installed the mac binary version 2.1.1, and so far all attempts to run the program generate a set of LoadFormatFiles errors. I've tried several files, going from cml to pdb or pdb to cml, and I've tried both direct command-line invocation and running via iBabel. This might be an installer problem, a system config problem, or simple user error. os version: osX 10.4.11; python version: 2.3.5; babel version: 2.1.1 via mac binary installer pkg. typical error message (this one from iBabel, but command-line is the same). computer:~ me$ /usr/local/bin/babel -icml '/Users/me/Documents/web_downloads/1UD0.pdb' -ocml '/Users/me/Desktop/outputfile.cml' ; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/cdxmlformat.so did not load properly; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/cmlformat.so did not load properly; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/cmlreactlformat.so did not load properly; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/pubchem.so did not load properly; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/xmlformat.so did not load properly; babel: cannot read input format!. Am attaching a typical pdb file that fails to convert. Reported by: eingersoll",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/744:337,simpl,simple,337,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/744,1,['simpl'],['simple']
Usability,"I've just updated the Java bindings to be equivalent with the Python bindings, but I get the following errors. I've tried changing the %import to %include in openbabel-java.i but it just swaps one set of errors for another and I simply don't understand the problem in the first place:. $ javac *.java; OBMol.java:569: cannot find symbol; symbol : class OBBitVec; location: class OBMol; public void FindLargestFragment(OBBitVec frag) {; ^; OBRing.java:43: cannot find symbol; symbol : class OBBitVec; location: class OBRing; public void set_pathset(OBBitVec value) {; ^; OBRing.java:47: cannot find symbol; symbol : class OBBitVec; location: class OBRing; public OBBitVec get_pathset() {; ^; OBRing.java:59: cannot find symbol; symbol : class OBBitVec; location: class OBRing; public OBRing(vectorInt path, OBBitVec set) {; ^; OBMolRingIter.java:64: cannot find symbol; symbol : class OBBitVec; location: class OBMolRingIter; public void set_pathset(OBBitVec value) {; ^; OBMolRingIter.java:68: cannot find symbol; symbol : class OBBitVec; location: class OBMolRingIter; public OBBitVec get_pathset() {; ^; OBResidueData.java:63: cannot find symbol; symbol : class OBBitVec; location: class OBResidueData; public boolean AssignBonds(OBMol arg0, OBBitVec arg1) {; ^; OBSmartsPattern.java:99: cannot find symbol; symbol : class OBBitVec; location: class OBSmartsPattern; public boolean RestrictedMatch(OBMol mol, OBBitVec bv, boolean single) {; ^; OBSmartsPattern.java:103: cannot find symbol; symbol : class OBBitVec; location: class OBSmartsPattern; public boolean RestrictedMatch(OBMol mol, OBBitVec bv) {; ^; OBUnitCell.java:60: cannot find symbol; symbol : class SpaceGroup; location: class OBUnitCell; public void SetSpaceGroup(SpaceGroup sg) {; ^; OBUnitCell.java:104: cannot find symbol; symbol : class SpaceGroup; location: class OBUnitCell; public SpaceGroup GetSpaceGroup() {; ^; OBUnitCell.java:125: cannot find symbol; symbol : class matrix3x3; location: class OBUnitCell; public matrix3x3 G",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/721:229,simpl,simply,229,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/721,1,['simpl'],['simply']
Usability,"If ""folding"" is requested for fingerprints from smaller to larger; bit sizes, simply extend the vector.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1658:78,simpl,simply,78,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1658,1,['simpl'],['simply']
Usability,"If PkgConfig is not available then we cannot find Cairo, but this should; fail gracefully so that systems without Cario can simply disbale options.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/6:124,simpl,simply,124,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/6,1,['simpl'],['simply']
Usability,"If an SD File contains a <NAME> field with more than one line, OpenBabel produces invalid SD Files and SMILES files on output. The attached SDF (""methane.sdf"") has such a name. Test it as:. babel methane.sdf -o sdf; babel methane.sdf -o smi. It's not clear whether this should be considered a bug in the output modules, or the input module, and it boils down to the question: Is a name allowed to have multiple lines? If ""yes"", then the bug is in the output modules. If ""no"", then the input SDF reader should reject, or better yet, ignore multi-line names. Multi-line names are typically due to the 80-character restriction on line length in an SDF; very long names have to be broken into two lines. My suggestion is to allow them on input. On output, suppress any name that has multiple lines. You can write it in the SDF body, but not in the SDF header part. You have to drop it altogether for SMILES. Reported by: @cjames53",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/766:251,clear,clear,251,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/766,1,['clear'],['clear']
Usability,"If the atom currently being visited in a path through the atoms can; both close a ring back to the first atom, and can also proceed; to a different atom, and the bond enumerator returns the closing; bond first, then the other path was omitted. That is because after; the path was marked as closed and the ring added to the fingerprint; bit set, the closure is not cleared. When the next bond is visited,; the path is not added because it still appears to be closed. In order for the bit to be missed altogether, this problem must; occur in both directions along the path, so the situation is somewhat; rare. See bug #206",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/223:364,clear,cleared,364,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/223,1,['clear'],['cleared']
Usability,"In mol2format.cpp line 46:; return ""http://www.tripos.com/custResources/mol2Files/"";. URL is now invalid due to Tripos changing their; website. The following 2 URLs now point to the; specification, pdf and HTML page respectivley. http://www.tripos.com/data/support/mol2.pdf; http://www.tripos.com/index.php?family=modules,SimplePage,,,&page=sup_mol2&s=0. Reported by: nickengland",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/468:322,Simpl,SimplePage,322,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/468,1,['Simpl'],['SimplePage']
Usability,"In slide 4 of https://www.slideshare.net/NextMoveSoftware/building-on-sand-standard-inchis-on-nonstandard-molfiles, @johnmay shows that Open Babel is not reading the ""atomic mass delta"" in Mol files correctly. This value is one way of specifying the isotopic mass. . The correct way to read this is whatever BioVIA draw is doing. Presumably @johnmay has already fixed this in CDK (?) and we can steal, I mean study and learn from, his approach.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1769:419,learn,learn,419,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1769,1,['learn'],['learn']
Usability,"In the VASP format, frequency parsing was done until tokenization; returned less than two elements. However, the list of displacements may; be closed with a section such as the following:. ```; Finite differences POTIM= 2.000000000000000E-002; LATTYP: Found a simple tetragonal cell.; ALAT = 12.7378929000; C/A-ratio = 2.5701183985. Lattice vectors:; ```. that would not break from the frequency-parsing loop and keep parsing; nonexisting data, eventually leading to a crash. Instead of breaking the loop on 'less than two tokens', we check whether; the header contains one of `f/i=` or `f`, if it does not, we break; the loop.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/101:260,simpl,simple,260,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/101,1,['simpl'],['simple']
Usability,Is BitGrid usable ? hbtypes.txt is missing for test. lshyamal AT yahoo DOT com. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/423:11,usab,usable,11,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/423,1,['usab'],['usable']
Usability,"It turns out that the part of the InChI writer that handles the stereo assumes that AtomIds are simply AtomIdxs-1, but this is not true in general, and can lead to an incorrect stereo layer. The fix is to properly convert from AtomIds to AtomIdxs. Although this only affects 11 molecules in ChEMBL when converting straight from SMI to InChI (and so wouldn't have been noticed before), it was already causing my second RInChI test case to fail (a test case taken from the RInChI docs). My guess is that it must be copying the molecule when generating the shared pointer, thus rearranging either the Ids or Idxs. To be honest, I'm not 100% convinced that we need AtomIds - I must talk to Tim about this sometime.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1652:96,simpl,simply,96,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1652,1,['simpl'],['simply']
Usability,"Ive been converting pdb structures for use in autodock vina using obabel. . I get this error in autodock vina ; Parse error on line 2444 in file ""receptor_4.pdbqt"": Unknown or inappropriate tag. when I check this line it says ROOT. Out of curiosity I tried just deleting that line and it immediately flags up the following lines instead. The format of the file appears correct and when I used obabel to convert small molecules from the smiles the system has no issue with it. this is the ; line I used for the conversion ; obabel receptor_3.pdb -O receptor_4.pdbqt -h -gen3D . I have tried lots of variations and using different structures etc. but always the same issue. Ive also tried using the online version of obabel and when I select add hydrogens and generate 3D co ordinates it simply gives a blank output. When I don't include this it works but because there aren't 3D co ordinates it can't be used . attached here is the output. I am sure it's some silly mistake but I can't see it . [receptor_5.txt](https://github.com/openbabel/openbabel/files/13950454/receptor_5.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2665:786,simpl,simply,786,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2665,1,['simpl'],['simply']
Usability,"Java binding libopenbabel_java.dylib - crashes the JVM using simple test OBabel. Crashes verified for following environments:; OpenBabel Source:; 2.3.1 source; 2.3.2 source; Latest from Github (Feb 24th); Host OS: MAC OS X 10.9.5; Java: 1.7.0_40, 1.8.0_66 and 1.8.0_74. Build process with make outputs are in attachments and include CMakeCache.txt are from the Latest OpenBabel source from github and the Java 1.8.0_74 environment. (Note other build combinations had same problem but figured latest code was best bet for figuring out this issue). > cmake -DEIGEN3_INCLUDE_DIR=/Users/marko/ob/eigen3.2.8 -DRUN_SWIG=ON -DJAVA_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=/Users/marko/ob/vlatest/install ../ob-src 2>&1 | tee cmake.out; > make | tee make.out; > make install | tee make_install.out; > make test | tee make_test.out. The make activities (cmake, make, make install, make test) all run successfully. I had to convert ""#""'s to ""//"" comments in open-babel-java.i since the 3.0.8 Swig I have in my environment treats them as directives. The libopenbabel_java.jnilib is found and being loaded but crashes the JVM. The following is the JVM crash to the console:. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00000001363187a5, pid=17284, tid=6403; #; # JRE version: Java(TM) SE Runtime Environment (8.0_74-b02) (build 1.8.0_74-b02); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.74-b02 interpreted mode bsd-amd64 compressed oops); # Problematic frame:; # C [libawt_lwawt.dylib+0x447a5] JNI_OnLoad+0x91; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/marko/eclipseLuna_ws/IZIntegOpenBabel_1_8_0_74/hs_err_pid17284.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1352:61,simpl,simple,61,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1352,1,['simpl'],['simple']
Usability,Just a simple addition of documentation for the SVG format.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/210:7,simpl,simple,7,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/210,1,['simpl'],['simple']
Usability,"Just like you can re-use an OBMol, it would be nice to be able to reuse a std::vector as there might be some performance benefit both from avoiding creating the variable again in Python, and from avoiding some mallocs on the C++ side. With this in mind, I've commented out the SWIG directive to ignore the .clear() method.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1834:307,clear,clear,307,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1834,1,['clear'],['clear']
Usability,"My enviroment: Win 7, Obabel 2.3.1, Feb 27 2012 (dev. version); I was playing around, and I have noticed that radicals with a parent aromatic molecule, simply don't work.; If I abstract a H atom from an aromatic structure, the SMILES still rapresent the parent molecule.; I don't know how often that happens; I tried to abstract an H from benzene, pirrole, pyridin, furan: it never worked. See attched examples. This probelm seems to involve only the smile canonization: I tried to convert one of the furan radical into png, gaussian and mol file and it works fine in all the occasions. obabel WorngRadicals.txt -ismi -ocan. Samuele. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1168:152,simpl,simply,152,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1168,1,['simpl'],['simply']
Usability,"Note: this pull request is on top of #1576, and should not be merged before that. 1. Removed calls to SetType() from the SMILES parser, as well as from OBAtom::SetIsotope; 2. Changed ParseSimple and ParseComplex to (each) use a single switch statement, rather than a test for isupper() first of all; 3. In ParseComplex, parse the isotopes more efficiently and tighten up their handling when reading/writing. The test cases I wrote flushed out a few issues which I fixed:; 1. Parse 'new' elements (based on those present in elements.txt); 2. Parse aromatic [te] and [bH]. In passing, I removed the warnings about ""Illegal aromatic element"". We handle these elements without trouble (by analogy with C, N or O), and I think they might cause a user to simply uppercase the element in the SMILES, which would not be correct.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1589:749,simpl,simply,749,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1589,1,['simpl'],['simply']
Usability,"O)])]; ```; But for 'CH-acidic_strong' it is:; ```; [CX4;!$([H0]);!$([!#6;!$([P,S]=O);!$(N(~O)~O)])]; ```; According to 'SMARTS_InteLigand.txt' they should be the same, but they are not. And that's why I got very confused. To my understanding, the 'CH-acidic' SMARTS means:; A C-atom with a total of 4 connections, that must not have 0 hydrogens attached and that must be bound to another C-atom of some kind (`[#6]`) that is not bound to P=O, S=O or N(~O)~O. On the other hand, the 'CH-acidic_strong' SMARTS means:; A C-atom with a total of 4 connections, that must not have 0 hydrogens attached and that must be a C-atom of some kind that is not bound to P=O, S=O or N(~O)~O. So, in 'CH-acidic' the CX4 is bound to another C-atom (`[#6]`) and in 'CH-acidic_strong' CX4 itself must not be bound to P=O...; At least, that is how I understood it. It might very much be possible that I just don't understand it correctly. And in that case, I would be very very happy, if anyone could explain my mistake to me. ; Because the reason why I even mention it is, that when I use the 'CH-acidic_strong' SMARTS as is, I can find the substructure in the molecule described by the SMILES; ```; 'S(c1c(C(C)(C)C)cc(CO)c(C)c1)C1C(=O)O[C@@](C(C)C)(CCc2ccc(N)cc2)CC1=O' ; (see picture down below). ; ```; But when I exchange the first part of the SMARTS string with the one of 'CH-acidic', I don't get a hit in the molecule any longer. . And I just don't understand why. And I also don't know, which SMARTS is correct. ; I feel like, if I don't understand these SMARTS strings correctly, I don't understand the SMARTS syntax correctly in general. I hope, someone can help me out with this problem and please forgive me, if I just did a very simple or obvious mistake. I am doing my very best to teach this stuff to myself, since I need it for my work, but don't have anyone to ask about it. . Thanks a lot!. ![molecule_hit](https://github.com/openbabel/openbabel/assets/138202958/40cc5d1d-1831-484f-9209-35049b2aef57)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2607:3780,simpl,simple,3780,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2607,1,['simpl'],['simple']
Usability,"OBConversion::m_IsLast is set to true in the constructor and can't be changed. OBConversion::SetLast(bool) is clearly needed:. SetLast(bool IsLast) {m_IsLast = IsLast;}. So that it vould be possible to use (with n molecules to save):; cons.SetLast(false);; for (i=1; i<n; i++); {; conv.SetOutputIndex(i);; conv.Write(mol[i-1], pos);; }; conv.SetLast(true);; conv.SetOutput(n);; conv.Write(mol[n-1], pos);. Reported by: jbrefort",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/596:110,clear,clearly,110,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/596,1,['clear'],['clearly']
Usability,"One slowdown in the current 2.0 code is the delay to load all file format ; modules. A possible solution is to allow fine-grained loading of modules. For ; example, some modules are required by all code, and some code (like the ; help/usage commands) need to load all modules. But a simple conversion:. babel -ixyz 'foo.xyz' -opdb 'foo.pdb'. This could only load a few modules (i.e., any required modules, ; xyzformat, and pdbformat). I suspect that as the number of formats increases over time, this will be a ; useful performance boost to load formats only as required. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/65"":https://sourceforge.net/p/openbabel/feature-requests/65",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1434:283,simpl,simple,283,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434,1,['simpl'],['simple']
Usability,"Only the first molecule can be read from multimolecule files on Windows (no problems on Linux). Further attempts to read molecules (using OBConversion::Read) return False (indicating EOF). No segfault occurs; multimolecule files simply behave like single molecule files. It appears that is due to changes in file handling introduced in December of last year (not included in OBPython 1.0 which was based on SVN r1650, patched with r1655, r1656, r1677 and r1680). Here is the typical usage from Python:. obconversion = openbabel.OBConversion(); formatok = obconversion.SetInFormat(format); if not formatok:; raise ValueError,""%s is not a recognised OpenBabel format"" % format. obmol = openbabel.OBMol(); notatend = obconversion.ReadFile(obmol,filename); while notatend:; yield Molecule(obmol); obmol = openbabel.OBMol(); notatend = obconversion.Read(obmol). Noel. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/644:229,simpl,simply,229,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/644,1,['simpl'],['simply']
Usability,"Open Babel converts to CONFIG (DL_POLY) format, but the generated file is not ; usable by the DL_POLY program, who gives this error message:; At line 1160 of file setup_module.f (unit = 10, file = 'CONFIG'); Fortran runtime error: Bad value during floating point read. I think the problem is that DL_POLY uses a fixed format for the atom coordinates,; requiring 3 floating numbers with 20 spaces for each of them (f20.0). But the; output file generated by Open Babel writes x in columns 1-20 (OK), y in columns 21-41 (instead of 21-40) and z in columns 42-62 (instead of 41-60). Searching for advice in the web I found the code dlpolyformat.cpp in the Github; and I saw that in line 369 you use the format ""%20.15f %20.15f %20.15f\n"" to; write the CONFIG output. I guess that using ""%20.15f%20.15f%20.15f\n"" will; remove the extra space that makes the file unusable by DL_POLY. PS: I found this using Open Babel 2.3.0 in a Ubuntu virtual machine. I converted the file attached using obabel -i pdb argon_864_v2.pdb -o CONFIG -O CONFIG. ; The conversion works, but the CONFIG file will not work. Reported by: magg71. Original Ticket: [openbabel/bugs/922](https://sourceforge.net/p/openbabel/bugs/922)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1302:80,usab,usable,80,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1302,1,['usab'],['usable']
Usability,"OpenBabel version 2.2.3; CentOS Linux version 4.6 (kernel 2.6.9-67.0.22.ELsmp). Paul Mortenson; p.mortenson@astex-therapeutics.com. Maybe I've misunderstood the purpose of this function, but OBMol::SetCoordinates doesn't do what I expected it to! I expected to supply a coordinate vector as a double*, and have the molecule's current coordinates (for the current conformer) set to these values. However, instead the function copies the molecule's current coordinates into my supplied double*. The problem (if this is indeed incorrect behaviour) is in line 3077 of mol.cpp:. memcpy((char*)c,(char*)_c,sizeof(double)*3*NumAtoms());. should be. memcpy((char*)_c,(char*)c,sizeof(double)*3*NumAtoms());. i.e. copy from the supplied coordinates to the molecule, not the other way around. Apologies if I've got the wrong end of the stick here, though if that is the case I might argue that the documentation isn't crystal clear!. Keep up the good work, guys. Cheers,; Paul. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/978:915,clear,clear,915,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/978,1,['clear'],['clear']
Usability,Openbabel fails to create usable png image of adenosine,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2195:26,usab,usable,26,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2195,2,['usab'],['usable']
Usability,"Openbabel is advertised as an open source application that supports quantum chemistry packages like Gamess, Gaussian, and NWChem. Can you please provide better documentation for these types of quantum packages?. I'm developing an open source application at https://sourceforge.net/projects/atomicglobalmin/ . This program has built in functions for reading and writing Gaussian files, and I would like to use openbabel to support additional packages. It has been very challenging to learn how to use open babel with these packages. Here are some specific questions:. 1. How to read the SCF energy (without the rotational or vibrational energy).; 2. How to create an input file with a method and basis set. Is the first item supported with openbabel? The second one is described at http://openbabel.org/wiki/Keywords. When I first read this, I thought it would help me set these keywords and write an input file in for a user specified quantum chemistry program. After looking through the example, I'm not sure this is the case. Does openbabel do this? If it doesn't that's fine, but I would like to know. If it does, I would like to know how to do it?. Thanks for writing an opensource application that provides such great cross-platform support!. Reported by: sethcall. Original Ticket: [openbabel/feature-requests/158](https://sourceforge.net/p/openbabel/feature-requests/158)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1527:483,learn,learn,483,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1527,1,['learn'],['learn']
Usability,"Openbabel is advertised as an open source application that supports quantum chemistry packages like Gamess, Gaussian, and NWChem. Can you please provide better documentation for these types of quantum packages?. I'm developing an open source application at https://sourceforge.net/projects/atomicglobalmin/ . This program has built in functions for reading and writing Gaussian files, and I would like to use openbabel to support additional packages. It has been very challenging to learn how to use open babel with these packages. Here are some specific questions:. 1. How to read the SCF energy (without the rotational or vibrational energy).; 2. How to create an input file with a method and basis set. Is the first item supported with openbabel? The second one is described at http://openbabel.org/wiki/Keywords. When I first read this, I thought it would help me set these keywords and write an input file in for a user specified quantum chemistry program. After looking through the example, I'm not sure this is the case. Does openbabel do this? If it doesn't that's fine, but I would like to know. If it does, I would like to know how to do it?. Thanks for writing an opensource application that provides such great cross-platform support!. Reported by: sethcall. Original Ticket: [openbabel/feature-requests/159](https://sourceforge.net/p/openbabel/feature-requests/159)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1528:483,learn,learn,483,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1528,1,['learn'],['learn']
Usability,Possible conflict with scikit-learn in pip version of pybel,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1702:30,learn,learn,30,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1702,2,['learn'],['learn']
Usability,"Posted from the CCL e-mail list:. Sent to CCL by: ""Phil Hultin"". I also find that OpenBabel 2.0 for Windows does not run properly. In the; GUI version it simply fails to convert anything, but when run from the; command line I get ""iconv.dll not found"" just as Zhao Yuan reported. The; library iconv.dll is not present in the zip archive downloaded from; sourceforge. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/497:154,simpl,simply,154,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/497,1,['simpl'],['simply']
Usability,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1334:439,Simpl,Simple,439,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334,7,"['Clear', 'Simpl']","['Clear', 'Simple']"
Usability,Re-enable vector.clear() to allow wrapped std::vectors to be reused,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1834:17,clear,clear,17,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1834,2,['clear'],['clear']
Usability,"Replaced convoluted logic with a simple flag check. Builds and runs on my computer, and should fix #173.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/185:33,simpl,simple,33,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/185,1,['simpl'],['simple']
Usability,"Reported by: W. D. Ihlenfeldt; Xemistry GmbH; wdi@xemistry.com; ; Take the following completely legal SD file record:; ; ----. -ISIS- 03190722292D; $$$$; 1 0 0 0 0 0 0 0 0 0999 V2000; -2.3167 -0.2167 0.0000 Au 0 0 0 1 0 0 1 0 0 0 0 0; M END; > <PRICE>; $$$$; ; $$$$; ------; ; This is a single record, with multiple ""$$$$"" in places where they are *not* record terminators. All simple string search methods with awk or similar tools which simply look for the $$$$ line will fail on this. Never assume that such records do not exist. I *have* seen $$$$ in SD data lines before. While Babel is smart enough to read and output the first records from an SD input file with repeated records as above (almost) correctly, its skip function seems to have less brainpower and gets confused. It simply silently quits without any message. It is not possible to output records starting after first record from above repeated multi-record test file or after encountering such as record anywhere in the skipped part. A bad thing if something like this happens in the middle of your 500Mb file where you cannot edit. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/627:378,simpl,simple,378,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/627,3,['simpl'],"['simple', 'simply']"
Usability,"Reported by:; W. D. Ihlenfeldt; Xemistry GmbH; wdi@xemistry.com; . Take the following completely legal SD file record:; ; ----. -ISIS- 03190722292D; $$$$; 1 0 0 0 0 0 0 0 0 0999 V2000; -2.3167 -0.2167 0.0000 Au 0 0 0 1 0 0 1 0 0 0 0 0; M END; > <PRICE>; $$$$; ; $$$$; ------. While on superficial inspection the Babel output looks correct when run on the first records, a closer look shows that critical information has been lost. Babel needs to read records into its internal datastructure before output via conversion.However, its Molfile parser is rather simple and supports few of the more advanced Molfile encoding conventions. In this case, Babel silently drops the critical H0 designator flag (plus a second flag) which lets a Molfile reader distinguish between metal Au and AuH3 with implicit H. So after the pass through Babel, the compound has changed, without any notification, from metal Au to AuH3. That can be a problem. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/628:558,simpl,simple,558,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/628,1,['simpl'],['simple']
Usability,"SMARTS match is wrong for SMARTS containing cis/trans double bonds. Examples:. $ echo 'C\C=C/C' | obgrep 'C\C=C/C'; C\C=C/C; $ echo 'C/C=C\C' | obgrep 'C\C=C/C'; C/C=C\C; $ echo 'C/C=C/C' | obgrep 'C/C=C/C'; C/C=C/C; $ echo 'C\C=C\C' | obgrep 'C/C=C/C'; (no output). The last example ""C\C=C\C"" is the exact same trans configuration as the second-to-last one, so it should match ""C/C=C/C"", but it doesn't. You simply can't use SMARTS if it contains '/' or '\' because it frequently gives the wrong answer. Reported by: @cjames53. Original Ticket: ""openbabel/feature-requests/110"":https://sourceforge.net/p/openbabel/feature-requests/110",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1479:409,simpl,simply,409,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1479,1,['simpl'],['simply']
Usability,SMILES parsing failure for a simple case,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1570:29,simpl,simple,29,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1570,2,['simpl'],['simple']
Usability,"SVG output with atom labelling (option ""i"") currently only supports numeric atom indices. These indices change, when explicit hydrogens are excluded (a typical use case when dealing with organic molecules). I have input from CML or CIF files and want to use atom labelling in SVG output for identification of torsions, rings, etc. detected by OB. Desired output will print (non-numeric) atom labels given in input (generic data ""label"" or ""_atom_site_label""). Any chance to get that functionality? A simple alternative/workaround without changing the library would be a XSLT style sheet generating the desired output from SVG with embedded CML (option ""e""). Reported by: shabermehl. Original Ticket: [openbabel/feature-requests/169](https://sourceforge.net/p/openbabel/feature-requests/169)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1537:500,simpl,simple,500,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1537,1,['simpl'],['simple']
Usability,Seeking guidance for GSoC 2021,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2334:8,guid,guidance,8,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2334,2,['guid'],['guidance']
Usability,Simple ReadFile program leaks memory,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370:0,Simpl,Simple,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370,1,['Simpl'],['Simple']
Usability,Simplify user installation by creating build directory upfront,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1614:0,Simpl,Simplify,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1614,1,['Simpl'],['Simplify']
Usability,Simplify/fix behavior of OBAtom::GetResidue so that it behaves like other lazy properties,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1849:0,Simpl,Simplify,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1849,1,['Simpl'],['Simplify']
Usability,"Some OBChemTsfm transformations, especially on radicals, can result in unexpected implicit hydrogen counts since PR#1576. I wrote up an example failure in the first commit of this PR, where assigning a charge of -1 to an atom can give it 255 implicit hydrogens under certain conditions. I suspect the underlying cause is unsigned integer arithmetic in phmodel.cpp:321 (possibly also 343). Subtraction of two unsigned ints gives an unsigned int--if the difference would be negative, then the result is wrapped back to `UINT_MAX`, e.g. printing `(j->second - old_bond_order)` gives 4294967295 instead of -1. Then there's some truncation to fit in the unsigned char. But even if the overall expression gives the right answer most of the time, I think it would be clearer to be more explicit about the math, which would fix special cases like this bug. How should we adjust the line(s) of code in phmodel.cpp? We could explicitly typecast everything to a signed int then ensure that there are at least zero implicit hydrogens, but that seems verbose. @baoilleach Please feel free to directly commit on my PR if you have any ideas. Of course we'll need to update the test case with the correct answer as well (not H255).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1895:760,clear,clearer,760,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1895,1,['clear'],['clearer']
Usability,"Sorry! the previously submitted 'bug' was NO BUG. the (wrong) message went like this:. ""Hi all,. PubChem exports SMILES in the form:; [I-].[H+]; or simply; [H]; Unfortunately, reading such SMILES through obconversion.Read( &mol, &ifstr; ) doesn't work as the H gives some error. For any feedback or update, please contact me at e-mail bigfan // ; users.sourceforge.net. Thanks for any help on fixing this!; "". Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/927:148,simpl,simply,148,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/927,2,"['feedback', 'simpl']","['feedback', 'simply']"
Usability,"Suggest setting a non-zero exit code if the conversion was unsuccessful, as this is an important and simple way the caller can check what is in the output - an error message or the converted result. I'm using Python to call ""babel"" via subprocess to convert molecules, but the exit code from babel is always 0, so the only (?) way to see if the output is the converted result or an error message is to check it for presence of ""Open Babel Error"". Reported by: ipsecog. Original Ticket: [openbabel/feature-requests/162](https://sourceforge.net/p/openbabel/feature-requests/162)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1531:101,simpl,simple,101,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1531,1,['simpl'],['simple']
Usability,"The API documentation for Get/SetTotalSpinMultiplicity disagree. In one case, 1 is singlet, in the other case, 0 is singlet. The former is correct and appears to be how the Gaussian file writer interprets this value. Here is the API documentation for OBMol:. void SetTotalSpinMultiplicity 	(unsigned int 	 spin) 	. Set the total spin multiplicity of this molecule to spin (i.e., 0 = singlet (default), 1 = doublet, 2 = triplet, etc.) . unsigned int GetTotalSpinMultiplicity 	() 	. Returns:; the total spin on this molecule (i.e., 1 = singlet, 2 = doublet...) . Returns the total spin multiplicity -- if it has not previously been set it is calculated from the atomic spin multiplicity information assuming the high-spin case (i.e. it simply sums the atomic spins, making no attempt to pair spins). However, if you set atomic spins with OBAtom::SetSpinMultiplicity() you really should set the molecular spin with OBMol::SetTotalSpinMultiplicity() . Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/676:734,simpl,simply,734,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/676,1,['simpl'],['simply']
Usability,"The Babel 1.6 code has a variety of; undocumented/semidocumented switches. From convert.c:. -version; -v verbose (i.e. debugging output); -spline; -split; -renum X (start with atom X for the Z-matrix); -precip; -push; -nodummy; -m menu mode; -help; -h add hydrogens; -d delete hydrogens (or other type); -center; -charge; -blurb (like help); -bbldef; -align. Reported by: *anonymous. Original Ticket: ""openbabel/feature-requests/17"":https://sourceforge.net/p/openbabel/feature-requests/17",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1386:37,undo,undocumented,37,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1386,1,['undo'],['undocumented']
Usability,"The CVS update from June 22nd fails to compile for me:. mol2format.cpp: In member function `virtual bool ; OpenBabel::MOL2Format::ReadMolecule(OpenBabel::OBBase*, ; OpenBabel::OBConversion*)':; mol2format.cpp:247: error: `ClearBond' undeclared; (first use this function). If I comment out the line 'patom->ClearBond();' then; the system builds, but of course it may not be working; correctly for format conversions... . Other parts of the system appear to function normally. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/450:222,Clear,ClearBond,222,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/450,2,['Clear'],['ClearBond']
Usability,"The ConnectTheDots() ""cleanup"" deletes too many bonds when there is a small bond angle. . In pseudocode, the broken bit of the algorithm is:; WHILE (atom exceeds its maximum valence OR smallest bond angle < 45 degrees) { DELETE THE LONGEST BOND }. The documentation does not mention the minimum bond angle rule. I attach an XYZ file for a molecule that I would expect to have bonds angles less than 45 degrees, and for which ConnectTheDots() returns very strange results. I am not sure where the 45 degree constraint comes from, so although simply removing it solves my specific problem, I am nervous suggesting this as the general solution. Perhaps some people like it? (I've not yet found a reference to it though). However, even if consensus is that there should be a >45 degree rule, the current implementation is flawed: if the two shortest bonds from an atom are at 44 degrees to each other, the algorithm deletes all the longer bonds (longest first) before deleting the offending bond, and you end up with only one bond. This is surely not desired. ASCII sketch of expected bonding:; O-O; \ /; Ti; /|\; Cl3. Molecule is described in http://dx.doi.org/10.1021/jp0661950. Reported by: rhw27",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/745:541,simpl,simply,541,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/745,1,['simpl'],['simply']
Usability,"The DSW and DSP files for VC++ are not usable with ; 1.1000, some files need to be added from the CVS. lshyamal AT yahoo DOT com. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/422:39,usab,usable,39,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/422,1,['usab'],['usable']
Usability,"The OBExtensionTable data (and likely other classes) seems to be cleared when the object is destroyed. If the ASCII files cannot be found by the OBExtensionTable, then the next extension table receives no data at all. The &quot;data headers&quot; should probably be &quot;static const char&quot; rather than just &quot;char&quot; types. (Why would the data be anything other than const?). -Geoff. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/395:65,clear,cleared,65,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/395,1,['clear'],['cleared']
Usability,"The ViewMol code is clearly incorrect. The code reads; coordinates in bohr, converts to angstroms internally; and then writes as angstroms. This clearly causes coordinate shifts when converting; to/from this format. (e.g. roundtripping). -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/417:20,clear,clearly,20,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/417,2,['clear'],['clearly']
Usability,"The XTCformat code needs a more graceful mechanism for failing and returning an error. The current code calls exit() which will, of course, kill any application calling libopenbabel. For 2.2.1, this code has been revised to simply call return(), but there must be a better error handling mechanism for this code. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/140"":https://sourceforge.net/p/openbabel/feature-requests/140",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1509:224,simpl,simply,224,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1509,1,['simpl'],['simply']
Usability,"The change I've made is simply to remove the prescan for illegal characters as we shouldn't be scanning over the SMILES string twice. It's enough to do this in the parser. I've moved the warning message into ParseSimple and ParseComplex, but depending on the location of the illegal character, the parser will often just ""return false;"" without any warning message. The day will come when we improve the warning messages across the board, but that's not the focus of this PR, just to reduce the work we're doing.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1716:24,simpl,simply,24,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1716,1,['simpl'],['simply']
Usability,"The configure script should detect expat if available; for use with CML and other XML-based file formats.; (These will probably become more widely used soon.). This would greatly simplify the cml.cpp code. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/21"":https://sourceforge.net/p/openbabel/feature-requests/21",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1390:179,simpl,simplify,179,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1390,1,['simpl'],['simplify']
Usability,"The current CVS version of obgrep seems to have uncovered a bug ; in obconversion.h/cpp on UNIX (at least). The code now assigns a default format and stdin/stdout for the ; conversion input/output streams. Everything goes normally until :. // Search for pattern; for (c=0;;); {; mol.Clear();; conv.Read(&mol);; if (mol.Empty()); break;. The conv.Read() causes the program to abort after a failed cast from ; obconversion code. The new obgrep code ""looks"" correct. Since I'm not sure how to debug code in obconversion.* easily, I'm ; currently assigning this to Chris Morley. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/445:283,Clear,Clear,283,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/445,1,['Clear'],['Clear']
Usability,"The current Gasteiger charge model in Open Babel is clearly based ; on the old Gasteiger-sigma charges and does not include later ; contributions from that group. The partial charge model should be updated to allow multiple ; algorithms and a more recent Gasteiger-Marsili implementation and ; parameters. -Geoff. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/62"":https://sourceforge.net/p/openbabel/feature-requests/62",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1431:52,clear,clearly,52,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1431,1,['clear'],['clearly']
Usability,"The fix is for a simple string-to-integer function where it was mistakenly coercing a istringstream to a boolean, but MSVC 2013 no longer is happy with this.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/174:17,simpl,simple,17,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/174,1,['simpl'],['simple']
Usability,The following molecule has unspecificied dbl bond stereo but is rendered as cis:. obabel -:ClC=CCl -O tmp.svg. A twisted dbl bond should be used to indicate unknown stereo (never mind the IUPAC guidelines). Reported by: @baoilleach,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1165:194,guid,guidelines,194,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1165,1,['guid'],['guidelines']
Usability,"The following simple example code models much more complex situation when OBMol have to be created programmatically from the data stored in the format of other molecular modeling tookit. ; - It reads existing mol2 file to get some data (in real example data come from other toolkit); - It creates empty OBMol and populates it with data; - It writes obtained file back in mol2 format; The problem is that setting partial charges in such OBMol object makes no effect at all - the written file always have zero charges. ```; #include <iostream>; #include <openbabel/obconversion.h>; #include <openbabel/mol.h>; #include <openbabel/atom.h>; #include <openbabel/residue.h>. using namespace std;. int main(int argc,char **argv); {; OpenBabel::OBConversion conv;; OpenBabel::OBMol mol;; conv.ReadFile(&mol, ""mhc-opt.mol2"");; ; OpenBabel::OBMol newmol;; ; OpenBabel::OBResidue obr;; ; FOR_ATOMS_OF_MOL(ba, mol); {; OpenBabel::OBAtom oba;; ; auto n = ba->GetAtomicNum();; oba.SetAtomicNum(n);; ; auto v = ba->GetVector();; oba.SetVector(v);; ; float c = ba->GetPartialCharge();; oba.SetPartialCharge(c);; ; newmol.AddAtom(oba);; ; obr.SetName(""RES"");; obr.SetNum(1);; obr.SetChain('A');; obr.AddAtom(&oba);; obr.SetAtomID(&oba, ba->GetResidue()->GetAtomID(&(*ba))); ; }; newmol.AddResidue(obr);; ; ; FOR_ATOMS_OF_MOL(ba, newmol); {; ba->SetPartialCharge(1.0); // These charges are NOT actually set!; }; ; conv.WriteFile(&newmol,""out.mol2""); // Writes zero charges; ; return 0;; }; ```. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: latest git; Operating system and version: Linux Mint 18.3. ## Expected Behavior; Generated file have to contain charges set programmatically in the code. ## Actual Behavior; Generated file have zero charges regardless of what I set in the code. ## Steps to Reproduce; The code above compiled as:; g++ ob.cpp -I/usr/include/openbabel-2.0/ -L/usr/lib/openbabel/2.4.90/ -lopenbabel -lstdc++ -O3 -",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1817:14,simpl,simple,14,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1817,1,['simpl'],['simple']
Usability,"The new 2.1 function OBMol::NewBond() appears to cause crashes when used. It's not clear how it differs from the existing AddBond() call, which works fine. I'm adding a new unit test for this bug and will debug. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/608:83,clear,clear,83,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/608,1,['clear'],['clear']
Usability,"The opening bond-specification of a ring-closure digit; is ignored, resulting in incorrect answers and in; failure to recognize invalid SMARTS. Strictly speaking, bond specs are supposed to go on the; closing ring-digit, e.g. C1CCCCC=1 (and OB parses this; correctly). However, most users will type ""C=1CCCCC1"",; and indeed OpenBabel itself produces MANY SMILES in; this form, resulting in a large fraction of molecules; that don't match their own SMILES strings. Example: C=1CCCCC1 matches cyclohexane, which is wrong.; Instead, the following four should be identical and; should match cyclohexene:. C=1CCCCC1; C1CCCCC=1; C=1CCCCC=1; C1=CCCCC1. Example: C:1CCCCC:1 is valid (but won't match anything). Example: C=1CCCCC#1 is wrong; Example: C-1CCCCC:1 is wrong. The correct rule should be: ; * If either, but not both, ring-digits are preceeded; by a bond spec, then use that bond spec; * If both ring-digits are preceeded by a bond spec,; then the two specs must agree or it is an error. Looking at the current code, parsmart.cpp in the; regious of lines 1445 and 1472, it looks like the; parser is simply discarding a bond spec that was found; before the ""opening"" ring digit. Reported by: @cjames53",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/548:1101,simpl,simply,1101,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/548,1,['simpl'],['simply']
Usability,"The original patch is from @rogersayle, which I've restricted a bit. This is is a SMILES extension that is already present in OEChem and RDKit, both undocumented and due to Roger. For at least OEChem, support is present for 1- and 2-digit numbers too. The primary use case is to support new elements where we don't yet have the symbol, but also to read SMILES written by OEChem/RDKit where *they* don't yet have the symbol. My own take is that this seems relatively safe, at least if restricted to 3-digits. As an implementation detail, if an atomic number >255 is specified, the SMILES is rejected with a warning (we use a char for the atomic number).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1997:149,undo,undocumented,149,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1997,1,['undo'],['undocumented']
Usability,"The simple command ""obabel -i"" causes a segfault. The problem is several cases like this:. for (arg = 1; arg < argc; ++arg); {; ...; case 'i':; iext = argv[arg] + 2;; if(!*iext); iext = argv[++arg];. Note that arg is incremented without checking to see whether it's past argc, so it's accessing past the end of the argv array. By luck, it's getting a NULL pointer, but iext could point to anything. There are a number of instances of this in the command-line parsing section. Reported by: @cjames53. Original Ticket: [openbabel/bugs/902](https://sourceforge.net/p/openbabel/bugs/902)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1282:4,simpl,simple,4,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1282,1,['simpl'],['simple']
Usability,"The unique IUPAC name according to the nomenclature ; rules of the IUPAC. See for instance: . A Guide to IUPAC Nomenclature of Organic Compounds ; (recommendations 1993). Panico, R.; Powell, W.H. and Richer, J-C.; Blackwell Science, 1993 [ISBN 0-63203-4882] ; Corrections published in Pure Appl. Chem., Vol. 71, No. ; 7, pp.1327-1330, 1999 ; ; http://www.iupac.org/publications/books/author/panico.h; tml. Reported by: lmocbt. Original Ticket: ""openbabel/feature-requests/31"":https://sourceforge.net/p/openbabel/feature-requests/31",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1400:96,Guid,Guide,96,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1400,1,['Guid'],['Guide']
Usability,"This PR has two changes:; 1. Keep aromaticity in EndModify(); 2. A drive-by removal of code in EndModify() that I recognise as a workaround for the problem fixed in #1724. I know that there's an idea that all lazily perceived flags should be blown away in EndModify(), but I think this is going too far - we should try as far as possible to avoid blowing away information that has been perceived. Here I make a minor change so that aromaticity perception is preserved even when, for example, an atom is deleted (which triggers this code). IMO, this keeps things simpler and more understandable. Aromaticity will only be reperceived when the user directly unsets the aromaticity flag of the OBMol. Until then, they can delete all they want and nothing will change. If the user deletes an atom from benzene and writes it out as SMILES and sees that it is aromatic, they will soon realise what's going on. This is easier to understand than the current situation, where if you want to preserve the aromatic flags then you need to set the molecule as having aromaticity perceived after deleting an atom. To a user, it wouldn't be at all obvious that this is possible.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1847:562,simpl,simpler,562,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1847,1,['simpl'],['simpler']
Usability,"This fixes #2677 ; CorrectForPH currently clears all perceived attributes through mol.EndModify(). In my change, I check if chains are perceived before hand and in that case sets them as perceived also after since normally the residues and chains shouldn't change through pH-correction.; However, this is a breaking change if someone previously relied on the old behavior. In that case they need to manually reperceive the chains after the call to CorrectForPH (or reset the flag before...).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2678:42,clear,clears,42,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2678,1,['clear'],['clears']
Usability,"This fixes following issue.; #340; The total spin of the ground state is difficult to calculate, however, my simple patch; is better than apparently wrong total spin.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1563:109,simpl,simple,109,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1563,1,['simpl'],['simple']
Usability,"This fixes following issue.; https://github.com/openbabel/openbabel/issues/340; The total spin of the ground state is difficult to calculate, however, my simple patch; is better than apparently wrong total spin.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1562:154,simpl,simple,154,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1562,1,['simpl'],['simple']
Usability,"This involves two commits that:; 1. install the python files into site-packages corresponding to the python used, rather than next to the libraries. eg /usr/lib64/python2.7/site-packages instead of /usr/lib64; 2. CMake's PythonLibs and PythonInterp can find different versions of python. In my case, I had python3.2 and python2.7 installed. the PythonInterp found python2.7 since it was /usr/bin/python , but PythonLibs found the devel files for Python3 . This clearly did not work very well. Now, I search for the python first, then restrict the libraries found based on the version of the python interpreter.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/33:461,clear,clearly,461,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/33,1,['clear'],['clearly']
Usability,"This is from Craig James (migrated from PR#1445453. Here is another case that is probably the same bug. This is; particularly bad because it loses aromaticity on a simple; benzene ring. The SD File is parsed correctly can converted; to a SMILES, but when you re-parse the SMILES that OpenBabel; already produced, you get garbage. See the SD file below; (call it ""foo.sdf""), and use it for this test:. $ babel /tmp/foo.sdf -o smi ; c1(n(c2c(c(o1)=O)cccc2)CC(=O)OCC)=O; 1 molecule converted; [M6:cj] /emi/src/docs/patents $ babel /tmp/foo.sdf -o smi |; babel -i smi -o smi; 1 molecule converted; C1(OC(C2C(N1CC(=O)OCC)CCCC2)=O)=O; 1 molecule converted. ----------------------. OpenBabel05020621282D. 18 19 0 0 0 0 0 0 0 0999 V2000; 1.3509 0.4120 0.0000 C 0 0 0 0 0; 0.6384 -0.0005 0.0000 N 0 0 0 0 0; 1.3509 1.2370 0.0000 O 0 0 0 0 0; 0.6384 1.6537 0.0000 C 0 0 0 0 0; -0.0741 1.2370 0.0000 C 0 0 0 0 0; -0.0783 0.4120 0.0000 C 0 0 0 0 0; 0.6342 -0.8255 0.0000 C 0 0 0 0 0; 2.0634 -0.0005 0.0000 O 0 0 0 0 0; -0.0866 -1.2380 0.0000 C 0 0 0 0 0; 0.6384 2.4787 0.0000 O 0 0 0 0 0; -0.7991 -0.8255 0.0000 O 0 0 0 0 0; -0.7908 1.6495 0.0000 C 0 0 0 0 0; -0.0866 -2.0630 0.0000 O 0 0 0 0 0; -0.7908 -0.0005 0.0000 C 0 0 0 0 0; -0.7991 -2.4755 0.0000 C 0 0 0 0 0; -1.5033 1.2370 0.0000 C 0 0 0 0 0; -1.5033 0.4120 0.0000 C 0 0 0 0 0; -0.8033 -3.3005 0.0000 C 0 0 0 0 0; 2 1 1 0 0 0; 3 1 1 0 0 0; 8 1 2 0 0 0; 6 2 1 0 0 0; 7 2 1 0 0 0; 4 3 1 0 0 0; 5 4 1 0 0 0; 10 4 2 0 0 0; 12 5 2 0 0 0; 6 5 1 0 0 0; 14 6 2 0 0 0; 9 7 1 0 0 0; 11 9 2 0 0 0; 13 9 1 0 0 0; 16 12 1 0 0 0; 15 13 1 0 0 0; 17 14 1 0 0 0; 18 15 1 0 0 0; 17 16 2 0 0 0; M END; $$$$; -------------------. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/546:164,simpl,simple,164,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/546,1,['simpl'],['simple']
Usability,"This is related to https://github.com/openbabel/enhancement-proposals/pull/7. I only made the change for SMILES and InChI, as MOL needs more thought. The change was simple in the end and didn't require any API changes. A one line change in the relevant readers. It was figuring out why test cases failed that took the time. A number of bugs were fixed in the course of getting the test suite back to working:; - if a molecule didn't have hybridisation perceived, OBBuilder did not work correctly.; - OBAtom:: and Bond:IsAromatic() did not always trigger reperception, even where the OBMol flag was unset. I've changed this behavior, as I think it's unexpected.; - vector3::randomUnitVector() created a static OBRandom but set the seed using system time each time it was called. This meant that the same 'random' vector was returned during a period of 1s. Meanwhile, the OBBuilder is looping around for 1 second trying to find a suitable vector.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1696:165,simpl,simple,165,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1696,1,['simpl'],['simple']
Usability,"This pull request is related to issue #1298 on which I have commented. The segfault was caused by line with symmetry of the mode like this one:; > FREQUENCY: 2.93 1.88 0.55 0.35 0.16; > SYMMETRY: E E E E E; > REDUCED MASS: 6.79503 6.40438 13.42881 10.66293 9.71937; The line was skipped by the program and the following loop did not read atoms correctly. The problem was apparently fixed in master, however fixing it exposes new segfault caused by the fact that `modeCount` variable is defined in line **548** as `unsigned int` and then used to leave the loop in lines **551-591**. At the end of loop there is a line; ```; modeCount = vs.size() - 3;; ```; For an empty vector the result (-3) is incorrectly casted to `unsigned int` and the condition in line **551**; ```; while (modeCount >= 1) {; ```; fails. This has been resolved in lines **554-555** like this:; ```; if (!atom); break; // something is very wrong; ```; My suggestion is to simply declare `modeCount` as `int`.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1772:943,simpl,simply,943,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1772,1,['simpl'],['simply']
Usability,"This pull request makes two changes to the Open Babel API:; 1. The count of implicit hydrogens on an atom is stored explicitly.; 2. Kekulization has been rewritten as a perfect matching algorithm rather than dearomatization. Hat-tip to @johnmay for help with this. Both of these changes address long-standing major deficiences of the toolkit. Regarding (1), there have been many bug reports related to implicit hydrogens appearing/disappearing. Furthermore, it is really much simpler to do things this way, and the code will be faster as there will be no continual reperception of hydrogen counts. Previously there were several functions and flags to work-around the existing system such as ForceNoImplH; these all go away now. Regarding (2), the previous approach was (IMO) solving the wrong problem. It is now much simpler and faster. Previously parts of the kekulization infrastructure were spread around several different files (some in SMILES format, some in OBMol, and some in kekulization.cpp) and had several associated trigger functions (e.g. IsKSingle). So what's the downsides? Well, these are major changes and there are still some wrinkles:; 1. The existing radical code was built as an adjustment on top of the old implicit valence code. There are no tests, and so some of this may not work now. I'll be meeting Chris Morley at an RSC meeting in June and will bend his ear.; 2. Smiley Format doesn't read in SMILES correctly. I think this should be removed and the error messages and nice functions merged with the existing SMILES reader.; 3. Since kekulization has been tightened up, we should implement the Daylight aromaticity model as a starting point for SMILES writing. Otherwise we will write out SMILES we cannot kekulize.; 4. I implemented an implicit hydrogen adder based on typical valences (e.g. for PDB) with code from @dan2097. This is likely different from the old one (using IMPVAL values), and may need further tweaking.; 5. I didn't know where to put global functions, ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1576:476,simpl,simpler,476,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1576,2,['simpl'],['simpler']
Usability,"To whom it may concern My name is Alfredo Alba ( alba.alfredo@gmail.com) . Operating on Linux CentOS 5.4 and Fedora core 11, and 12. Have been using Open Babel over the JNI interface for a while and recently I found that when running in a concurrent environment it causes carashes. . I have tried SUN JVM 1.6 and IBM JVM 1.6 as well they both present the issue. . Essentially I am running a Web App with the LD_PRELOAD=/usr/loca/lib/libopenbabeljni.so option. . In this scenario when 2 Smile to InChI conversion calls execute simultaneously Sometimes Open babel produces the following Stack:. terminate called after throwing an instance of 'std::ios_base::failure'; what(): basic_ios::clear; JVMDUMP006I Processing dump event ""abort"", detail """" - please wait.; JVMDUMP032I JVM requested System dump using '/localdata/tomcat55/bin/core.20100328.223821.420.0001.dmp' in response to an event; Unhandled exception; Type=Segmentation error vmState=0x00020002; J9Generic_Signal_Number=00000004 Signal_Number=0000000b Error_Value=00000000 Signal_Code=00000001; Handler1=00002AAAAACE7310 Handler2=00002AAAAB06F720 InaccessibleAddress=0000000000000010; RDI=000000000000000C RSI=00000000000001B0 RAX=00000000000001B1 RBX=00002AACCC1EA730; RCX=000000000000000C RDX=0000000000000000 R8=00002AACCC000128 R9=0101010101010101; R10=0000000000000006 R11=0000000000200206 R12=00002AACCC000078 R13=00002AACCC000020; R14=0000000000000001 R15=0000000000000880; RIP=0000003F6F872B31 GS=0000 FS=0000 RSP=0000000041C86F30; EFlags=0000000000210202 CS=0033 RBP=0000000000000000 ERR=0000000000000006; TRAPNO=000000000000000E OLDMASK=0000000000000000 CR2=0000000000000010; xmm0 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm1 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm2 00002aacbc083b58 (f: 3154656000.000000, d: 2.318224e-310); xmm3 00002aacbc083ba5 (f: 3154656256.000000, d: 2.318224e-310); xmm4 00002aaaaae4a100 (f: 2867110144.000000, d: 2.317785e-310); xmm5 0000000000000000 (f: 0.000000, d: 0.000000e+00); xm",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/979:685,clear,clear,685,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/979,1,['clear'],['clear']
Usability,"Together with the ``-r`` option for ""strip all but the largest component"", neutralize is often an essential first step for standardising a dataset of molecules (especially as provided by vendors). Here's the help text from ```obabel -L neutralize``` (some additional background at https://baoilleach.blogspot.com/2019/12/no-charge-simple-approach-to.html):. ```; One of the ops; neutralize Neutralize +1 and -1 charges. Note: this method accepts an optional argument 'changed' which is; described below. This method uses a simple procedure to generate the neutral form of a; molecule. It does not attempt to balance charges but simply to convert; all atoms with a +1 or -1 charge to neutral by addition or subtraction; of H+. To a first approximation the procedure is simply to identify all atoms with; either a +1 or -1 charge, set their charges to zero and adjust their; hydrogen counts by -1 or +1 (i.e. we are adding/removing H+). The first; minor issue is that +1 charged atoms must have a hydrogen, or otherwise; we can't remove H+. The second issue is that we must avoid altering; charge-separated representations of multiple bonds, such as nitro which; is often represented as [N+](=O)[O-]. It does this by checking whether a; neighbor atom has a negative charge (for the +1 atoms) or a positive; charge (for the -1 atoms). If specified, the optional argument 'changed' causes the method to return; True if the molecule was changed by the neutralize operation, and False; otherwise. This is mostly useful if using the API, but for command-line; usage (e.g. via obabel) this filters out molecules that are unchanged; by the operation and only retains those that are changed.; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2109:331,simpl,simple-approach-to,331,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2109,4,['simpl'],"['simple', 'simple-approach-to', 'simply']"
Usability,Undocumented Babel 1.6 command-line,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1386:0,Undo,Undocumented,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1386,1,['Undo'],['Undocumented']
Usability,"UsePythonTest.cmake contains a template that is used to create a series of cmake files that execute tests for the python language bindings. Quotes within this template need to be escaped, otherwise they fail to appear in the resulting cmake files. In this context, the unescaped quotes were optional so no error was actually caused. However, as of cmake 2.8.12, the unescaped quotes cause a warning when running cmake: ""Argument not separated from preceding token by whitespace."". This change simply removes the unescaped quotes, causing no changes to the resulting cmake files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/35:493,simpl,simply,493,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/35,1,['simpl'],['simply']
Usability,"When reading a file with non-UNIX line-endings, e.g. \r\n from Windows ; files or \r from old classic Mac files, input breaks horribly. In some cases with Windows, the final \n still allows getline() to function ; correctly, but the \r character shows up in titles, etc. With classic Mac files (like the attached sample), the lack of \n characters ; totally breaks file translation. What is needed is a simple translating streambuf class to filter \r\n ; sequences or \r line endings into \n for input. Since almost all of the ; internal code expects UNIX-style line endings, this would be the simplest ; solution. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/557:403,simpl,simple,403,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/557,2,['simpl'],"['simple', 'simplest']"
Usability,"When reading a line beginning with ""ATOM"" or ""HETATM"" in PDB file,; openbabel computes element from atom name field instead of element field. Here some extract of PDB documentation :; ""Therefore the PDB element column or mmCIF type_symbol data item should; be used to determine the element type, rather than using the atom name.""; (April 25, 2007); http://remediation.wwpdb.org/documentation/remediation_overview.pdf; ""Using the justification of the atom name to derive atom type; information is now strongly discouraged."" (June 29, 2007); http://remediation.wwpdb.org/documentation/remediation-impacts.pdf. Source code (ParseAtomRecord function) :; https://openbabel.svn.sourceforge.net/svnroot/openbabel/openbabel/trunk/src/formats/atomrecord.cpp . Patch explanation :; ParseAtomRecord is called when reading PDB file and PQR format because ""[PQR] format is a modification of the PDB format"" ).; In fact PDD and PQR formats are not so identical, for example in HETATM/ATOM lines, element field is mandatory for PDB format while PQR format doesn't mention it.; PDB format:; http://www.wwpdb.org/documentation/format32/sect9.html#ATOM; PQR format:; http://apbs.sourceforge.net/doc/user-guide/index.html#pqr-format. With this patch :; - PDB format and PQR format have each one their own ParseAtomRecord function (atomrecord.cpp is deleted) ; - Callers of ParseAtomRecord take care of returned value; - read/write PDB field charge (column 79-80). Please let me know if you see possible improvements. What is the coding style (code appearance) for openbabel ?. Reported by: lleell00",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/840:1186,guid,guide,1186,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/840,1,['guid'],['guide']
Usability,"When reading an xtc file with multiple frames, only the coordinates of the last conformer are valid. I think it is happening because the destructor of the vector confs is being called whenever a frame is finished being read and the array that stores the atomic coordinates for that frame is freed. Meanwhile the pointer to that (now unallocated) array is stored in vconf and then in the OBMol object. See http://sourceforge.net/p/openbabel/code/HEAD/tree/openbabel/trunk/src/formats/xtcformat.cpp#l187. So whenever I try accessing the conformer coordinates after reading them from an xtc file, I see a partially overwritten array. This may also be related to bug #745, if the OBMol destructor is trying to free the already freed arrays of conformer coordinates. I mention this because I'm getting similar behavior from calling OBMol.Clear() at the end of my test. libopenbabel version: 2.3.2+dfsg-1.1, from Ubuntu 14.04 repository. Reported by: zetadin. Original Ticket: [openbabel/bugs/960](https://sourceforge.net/p/openbabel/bugs/960)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1339:833,Clear,Clear,833,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1339,1,['Clear'],['Clear']
Usability,"When taking the last molecule configuration from a Gaussian 03 output file (or fchk file, same issue) to a gzmat file, some of the bond lengths have wrong values. The -ogau xyz-type file does not have this problem, using the same g03 output file as the source.; I've uploaded a simple example g03 output file.; babel -ig03 h2o.log -ogau test_xyz.com; gives the correct (same as log file) atom 1 to atom 3 bond length of 0.95991; babel -ig03 h2o.log -ogzmat test_gzmat.com; gives an incorrect atom 1 to atom 3 bond length of 0.95990; The first file I found this with had a significantly larger error. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1008:278,simpl,simple,278,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1008,1,['simpl'],['simple']
Usability,"When working on the Windows conda-forge versions, I got a compile error on the maeparser code (https://dev.azure.com/conda-forge/feedstock-builds/_build/results?buildId=90306&view=logs&jobId=171a126d-c574-5c8c-1269-ff3b989e923d&taskId=7225e372-3a5e-5b11-c153-719d50bbeacd&lineStart=510&lineEnd=528&colStart=1&colEnd=1) due to a mismatch between the calls to find_package in OpenBabel and Maeparser. In OB, there was a check for plain Boost to decide if Maeparser should be built but in the building of Maeparser, there were some component required. This PR will check for those components also in the OB code. That way, if the required components are missing, OB will just drop mae support instead of failing to compile. There are still several checks for Boost libraries in CmakeLists.txt, leading to rather unhelpful logs with alternating ""Boost found"" and ""Boost NOT found"" messages in unfortunate cases. There could probably be done more to alleviate this or at least be more clear in the error messages but I'll leave that to someone more experienced with Cmake.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2076:980,clear,clear,980,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2076,1,['clear'],['clear']
Usability,"While this is not Open Babel specific, having a CMLDOM; written in C++ would make things much easier and would; obviously ensure direct compliance with the official; CML specifications. It'd also make a dead-simple API for CML documents:. &gt; CMLDocument doc = CMLDocument.createDocument(url);; &gt;; &gt; The DOM (synonymous with document) has methods like:; &gt; CMLMolecule mol = doc.getMolecule(); //; Java usually &quot;getX&quot;; &gt; ; //rather than &quot;GetX&quot;; &gt; CMLAtom atom = mol.getAtom(i);; &gt; Coord2 xy2 = atom.getXY2(); ; &gt;; &gt; The complete Java CMLDOM is available at; cml.sourceforge.net. It is large; &gt; and not thrilling reading but I developed it in; parallel with the OMG's; &gt; initiative on small molecules (Netgenics, ACD and; Pfizer mainly).; &gt; ; &gt; CMLDOM is an API - just as org.w3.dom.*. It is; therefore representable in; &gt; UML (and has been) and so can generate many language; bindings. The; &gt; &quot;correct&quot; way would be to UMLise CMLDOM and export; the classes in C++.; &gt; There is one class for each element (and some; maintenance classes) and; &gt; also 1 interface for each global attribute. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/22"":https://sourceforge.net/p/openbabel/feature-requests/22",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1391:208,simpl,simple,208,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1391,1,['simpl'],['simple']
Usability,"With OpenBabel 2.2.3, I get a segmentation fault when converting the attached MOPAC output file to a MOL file (see below). Most other MOPAC files are processed as expected, without error. Also, I tried processing the same file with the OpenBabel 2.2.0 GUI (on a separate system) and the conversion to MOL file seemed to work properly. gmagoon@pharos:~/threeDcheck_testdir$ babel -imoo QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.out -omol QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.mol2 ---errorlevel 5; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; Segmentation fault. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1133:671,Clear,Clear,671,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1133,8,['Clear'],['Clear']
Usability,"[ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1, installed with conda from conda-forge (also checked quickly with 2.4.1); Operating system and version: Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; After running `StripSalts`, ions such as Na should be removed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When using InChIs as input and output, ions are not removed in the output. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Here are some snippets from my terminal, using sodium salicylate as an example. Hopefully they make things clear:. ```; >>> from openbabel import pybel; >>> smi = pybel.readstring(""smi"", ""[Na+].O=C([O-])c1ccccc1O""); >>> smi.molwt; 160.10257000000001; >>> smi.OBMol.StripSalts(); True; >>> smi.molwt; 137.11280000000002; >>> print(smi.write(""smi"")); O=C([O-])c1ccccc1O	; ```; which is as expected. Now with InChIs:. ```; >>> inchi = pybel.readstring(""inchi"", ""InChI=1S/C7H6O3.Na/c8-6-4-2-1-3-5(6)7(9)10;/h1-4,8H,(H,9,10);/q;+1/p-1""); >>> inchi.molwt; 160.10256999999996; >>> inchi.OBMol.StripSalts(); True; >>> inchi.molwt; 137.11279999999996 # this still seems correct; >>> print(inchi.write(""inchi"")); InChI=1S/C7H6O3.Na/c8-6-4-2-1-3-5(6)7(9)10;/h1-4,8H,(H,9,10);/q;+1/p-1 # this is identical to the input. ```. (As an extra, here's the output when trying to print the InChI from the SMILES input and vice versa). ```; >>> print(inchi.write(""smi"")); c1ccc(c(c1)C(=O)O)[O-]	# looks fine; >>> print(smi.write(""inchi"")); ==============================; *** Open Babel Warning in InChI code; #1 :Prot",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2288:1649,clear,clear,1649,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2288,1,['clear'],['clear']
Usability,[test-reaction-map.zip](https://github.com/openbabel/openbabel/files/1538600/test-reaction-map.zip). This PR attempt to fix the following bug:. OpenBabel get Segfault while reading CDX contains such a reaction map like this: A -> B -> C (I expect to get the 2 reactions from the output: A->B and B->C). I include a simple CDX to test for this case (please rename it from `.zip` to `.cdx`).,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1720:315,simpl,simple,315,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1720,1,['simpl'],['simple']
Usability,"_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:4039,Simpl,Simplify,4039,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['Simpl'],['Simplify']
Usability,`OBMol` has both `NumAtoms` and `NumHvyAtoms` while `OBResidue` only has `GetNumAtoms`. This PR adds `GetNumHvyAtoms` to `OBResidue`. I am not familiar with OpenBabel's tests. I added simple tests for `GetNumAtoms` and `GetNumHvyAtoms` but advice on how to do this properly is very welcome.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2299:184,simpl,simple,184,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2299,1,['simpl'],['simple']
Usability,"`QChemOutputFormat::ReadMolecule` cannot handle Q-Chem output files that contain fragments. I've included a sample output, though I could also create a simpler one. Reported by: @berquist. Original Ticket: [openbabel/bugs/951](https://sourceforge.net/p/openbabel/bugs/951)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1331:152,simpl,simpler,152,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1331,1,['simpl'],['simpler']
Usability,"are of cleaning up the current stream. The semantics of the copy constructor have been refined and an assignment operator added. Previously the state was just copied resulting in two objects that both thought they owned the same memory and had to delete it. This only worked because of the implicit assumption that OBConversions were only copied to create AuxConv objects for XML parsing (why these need to be subclasses, I know not) and there's special logic to avoid duplicate deletions in this case. Now the semantics are that only the originating OBConversion retains ownership of any memory it allocated. This eliminates the possibility of a free-after-free, but not a use-after-free (the copy constructor just shouldn't be used). ReadFile/WriteFile will now extract the format from the filename if the format is not already set. This includes setting the gzip status of the file. I've also added a convenience constructor to OBConversion that takes filenames. This removes a lot of the boilerplate required for doing simple tasks. For example:. OBMol mol;; OBConversion conv(infile);; while(conv.Read(&mol)) {; //do stuff; }. Gzip support has been improved to work properly on files that are concatenations of gzip files (this is suppose to be a valid thing to do). The XML reader would return true to ReadMolecule even if it hadn't read a molecule in a multi-molecule file (because it was absorbing the ending `</cml>` tag). Now it returns false. ---. I suspect these changes will cause some people's code to crash. However, the cause of the crash should be immediately identifiable - the lifetime of the OBConversion object is longer than the lifetime of the input stream passed to it (and the OBConversion destructor crashes trying to flush to the no longer available user-provided stream). It should not be surprising to anyone that leaving a stale pointer to a stream in OBConversion could cause bad things to happen and the fix is easy (call SetInStream(NULL) when done reading the input s",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/191:4617,simpl,simple,4617,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/191,1,['simpl'],['simple']
Usability,"ated based on the typical bond lengths and angles of the atoms involved. ## Actual Behavior; There is a check for whether the molecule HasNonZeroCoords() beforehand. If all the present coordinates are zero, then the hydrogen coordinates are left as zero also. This seems reasonable for most molecules, where it may be assumed that if the coordinates are all zero, then they will be set to something else later, so there is no use in generating coordinates for the hydrogens. But it leads to odd behavior if the molecule has a single heavy atom, such as water, ammonia, methane, etc. With these molecules, coordinates are generated for the hydrogens so long as the heavy atom coordinate is not located at the origin. For context, this came up when I was using simple test cases to create a bond adding routine that constructs valid molecules from sets of disconnected atoms produced by a generative model. While the issue was resolved by simply changing the coordinates of the test case molecules, the behavior seemed odd enough (and the proposed solution simple enough) that I would open an issue. ## Steps to Reproduce. ```; from openbabel import openbabel as ob. def test_case(atomic_num, x, y, z):; mol = ob.OBMol(); atom = mol.NewAtom(); atom.SetAtomicNum(atomic_num); atom.SetVector(x, y, z); mol.BeginModify(); ob.OBAtomAssignTypicalImplicitHydrogens(atom); mol.EndModify(); mol.AddHydrogens(); print('with {} at ({:.2f}, {:.2f}, {:.2f}),'.format(; ob.GetSymbol(atomic_num), x, y, z; )); for a in ob.OBMolAtomIter(mol):; if a != atom:; print(' H placed at ({:.2f}, {:.2f}, {:.2f})'.format(; a.GetX(), a.GetY(), a.GetZ(); )). test_case(8, 0, 0, 0); test_case(8, 1, 0, 0); ```; Output:; ```; mtr22@g001:~/gan$ python3 test_ob_problem.py; with O at (0.00, 0.00, 0.00),; H placed at (0.00, 0.00, 0.00); H placed at (0.00, 0.00, 0.00); with O at (1.00, 0.00, 0.00),; H placed at (1.97, 0.00, 0.00); H placed at (0.68, -0.53, -0.75; ```; ## Proposed Solution; An optional argument for AddHydrogens to ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2365:1862,simpl,simply,1862,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2365,2,['simpl'],"['simple', 'simply']"
Usability,"atomic weight information leaks over into the atomic symbol in OBSmilesParser::ParseComplex . Here are two reproducibles. >>> mol = pybel.readstring(""smi"", ""[987U]""); >>> mol.atoms[0].OBAtom.GetType(); 'U87'. >>> pybel.readstring(""smi"", ""[1234z]"").write(""smi""); ==============================; *** Open Babel Warning in ParseComplex; Illegal aromatic element z]34. This is because the 'char symbol[7]' is used for isotope parsing then reused for symbol parsing but without properly clearing the field. The solution is to put a memset(symbol, '\0', 7*sizeof(char)) after; isotope = atoi(symbol);. Reported by: dalke",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1080:482,clear,clearing,482,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1080,1,['clear'],['clearing']
Usability,"babel creates unreadable mmcif output (syntax problem) for the following fields:. _chemical.entry_id; _chemical_formula.entry_id; _cell.entry_id. In each case a whitespace is missing in the generated mmcif file after the keyword, e.g.; ; ##############; ## CHEMICAL ##; ##############. _chemical.entry_idREDUCED/1AFK_REDUCED.PDB; _chemical.name_common 'reduced/1afk_reduced.pdb'. ######################; ## CHEMICAL FORMULA ##; ######################. _chemical_formula.entry_idREDUCED/1AFK_REDUCED.PDB; _chemical_formula.structural 'C1170H2154N352O574P6S24'. ... ##########; ## CELL ##; ##########. _cell.entry_idREDUCED/1AFK_REDUCED.PDB; _cell.length_a 101.54; ... I'm pretty sure that mmcif requires a whitespace in these cases. The behvior is the same for Open Babel 2.2.2b1 -- Jun 2 2009 -- 12:15:39 (from Avogadro package) as for Open Babel 2.2.1 -- Mar 1 2009 -- 19:20:41 (latest release package from sourceforge). The input pdb file was created from mmcif using babel. (Please note: This is important for me because I want to setup a transformation flow for my mmcif based application using some pdb based transforms and Open Babel. My application parser (Rutgers cifparse-obj-v7.025) reads complete mmcif and doesn't simply ignore those lines as e.g. pymol seems to do.) . Reported by: knollentroll",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/911:1226,simpl,simply,1226,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/911,1,['simpl'],['simply']
Usability,babel nanotube.xyz -O nanotube.cif; or ; obabel nanotube.xyz -O nanotube.cif . ==============================; *** Open Babel Error in expand_cycle; maximum time exceeded...; ==============================; *** Open Babel Error in expand_cycle; maximum time exceeded...; ==============================; *** Open Babel Error in ... both fail in converting a simple xyz file nanotube.xyz (attached). Using gdb I find the code is hung inside kekulize.cpp . If you change the C's to H's in nanotube.xyz babel runs fine. . babel nanotube_H.xyz -O nanotube_H.cif; 1 molecule converted; 9 audit log messages . I have attached that working version too. I recompiled babel with -g -O0 and that did not help. Ron Cohen; rcohen@gl.ciw.edu. Reported by: recohen. Original Ticket: [openbabel/bugs/870](https://sourceforge.net/p/openbabel/bugs/870),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1250:357,simpl,simple,357,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1250,1,['simpl'],['simple']
Usability,"ble for most molecules, where it may be assumed that if the coordinates are all zero, then they will be set to something else later, so there is no use in generating coordinates for the hydrogens. But it leads to odd behavior if the molecule has a single heavy atom, such as water, ammonia, methane, etc. With these molecules, coordinates are generated for the hydrogens so long as the heavy atom coordinate is not located at the origin. For context, this came up when I was using simple test cases to create a bond adding routine that constructs valid molecules from sets of disconnected atoms produced by a generative model. While the issue was resolved by simply changing the coordinates of the test case molecules, the behavior seemed odd enough (and the proposed solution simple enough) that I would open an issue. ## Steps to Reproduce. ```; from openbabel import openbabel as ob. def test_case(atomic_num, x, y, z):; mol = ob.OBMol(); atom = mol.NewAtom(); atom.SetAtomicNum(atomic_num); atom.SetVector(x, y, z); mol.BeginModify(); ob.OBAtomAssignTypicalImplicitHydrogens(atom); mol.EndModify(); mol.AddHydrogens(); print('with {} at ({:.2f}, {:.2f}, {:.2f}),'.format(; ob.GetSymbol(atomic_num), x, y, z; )); for a in ob.OBMolAtomIter(mol):; if a != atom:; print(' H placed at ({:.2f}, {:.2f}, {:.2f})'.format(; a.GetX(), a.GetY(), a.GetZ(); )). test_case(8, 0, 0, 0); test_case(8, 1, 0, 0); ```; Output:; ```; mtr22@g001:~/gan$ python3 test_ob_problem.py; with O at (0.00, 0.00, 0.00),; H placed at (0.00, 0.00, 0.00); H placed at (0.00, 0.00, 0.00); with O at (1.00, 0.00, 0.00),; H placed at (1.97, 0.00, 0.00); H placed at (0.68, -0.53, -0.75; ```; ## Proposed Solution; An optional argument for AddHydrogens to force the generation of coordinates even when the current coordinates are zero would be a simple API improvement. This would produce the expected behavior if needed, while maintaining the current, slightly more efficient behavior for the majority of cases where it makes sense.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2365:3016,simpl,simple,3016,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2365,1,['simpl'],['simple']
Usability,"conda); Operating system and version: Mac OS 10.12.5 (Sierra); Python version: 3.6.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect pybel library calls to either return or throw a catchable exception. ## Steps to Reproduce and Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I have a python function that reads in a bunch of xyz files into pybel Molecule objects. Later on I iterate over all of the Molecule objects and read variables from some of the pybel Atom objects within each Molecule (to generate features for machine learning). While trying to access the Atom objects and variables within them a segmentation fault occurs that kills the python interpreter (it terminates with exit code 139). I can also kill the python interpreter with a segfault while my code is paused in the debugger (which I access through Eclipse / PyDev) by navigating into and trying to inspect pybel Atoms' variables. The segfault does not always occur when accessing the first Atom and does not consistently happen on the same Atom when running the exact same code multiple times in succession but it does usually happen within the first 5-10 Atoms. ## Notes. Sorry I understand this is probably difficult to debug because of its inconsistency and lack of a small reproducible example but I've already spent a lot of time trying to understand what was going on so hopefully I can give enough information to still be helpful. My current workaround which appears to be working is to have a wrapper python atom class around the pybel atom class with variables to keep a copy of all the data that I use from the pybel atom. I initialize those variables in my wrapper's constructor right after the pybel Atom and OBAtom are constructed before their data becomes corrupted. My speculation would be that somewhere in the (p",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602:1718,pause,paused,1718,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602,1,['pause'],['paused']
Usability,"dfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really need to be that long-running; ; run the coverage only, say, once per day;; ... I'd be very happy for feedback on this. [1] Issues https://github.com/openbabel/openbabel/issues/1937 https://github.com/openbabel/openbabel/issues/1893 https://github.com/openbabel/openbabel/issues/1321 https://github.com/openbabel/openbabel/issues/1861; I searched for ""eqeq"" through the tests and there was no match, i.e. it seemed like the implementation was entirely untested, so I started looking for test coverage reports.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2312:2478,feedback,feedback,2478,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312,1,['feedback'],['feedback']
Usability,"e post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1 (installed through anaconda); Operating system and version: Mac OS 10.12.5 (Sierra); Python version: 3.6.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect pybel library calls to either return or throw a catchable exception. ## Steps to Reproduce and Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I have a python function that reads in a bunch of xyz files into pybel Molecule objects. Later on I iterate over all of the Molecule objects and read variables from some of the pybel Atom objects within each Molecule (to generate features for machine learning). While trying to access the Atom objects and variables within them a segmentation fault occurs that kills the python interpreter (it terminates with exit code 139). I can also kill the python interpreter with a segfault while my code is paused in the debugger (which I access through Eclipse / PyDev) by navigating into and trying to inspect pybel Atoms' variables. The segfault does not always occur when accessing the first Atom and does not consistently happen on the same Atom when running the exact same code multiple times in succession but it does usually happen within the first 5-10 Atoms. ## Notes. Sorry I understand this is probably difficult to debug because of its inconsistency and lack of a small reproducible example but I've already spent a lot of time trying to understand what was going on so hopefully I can give enough information to still be helpful. My current workaround which appears to b",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602:1471,learn,learning,1471,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602,1,['learn'],['learning']
Usability,"e, if converted to a SMILES string, appears to have a saturated 6 membered ring, whereas it actually contains a phenyl ring. To be specific, the problem is that the benzene ring in the ACB_PCA-0004 molecule is not perceived correctly. NewPerceiveKekuleBonds doesn't seem to be doing its job. Actually, I'm not sure why this function is being called...according to the API, this function ""has been specifically designed to handle molecule files without explicit hydrogens"". This molecule does have explicit hydrogens... If you turn on the error messages you will see... ============================START. babel -iMOL2 ACB_PCA-0004.mol2 -oMOL2 tmp.mol2 ---errorlevel 4; ==============================; *** Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; OpenBabel::Read molecule Sybyl Mol2 format; ==============================; *** Open Babel Audit Log in OpenBabel::OBMol::Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in OpenBabel::OBMol::Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in OpenBabel::OBMol::FindRingAtomsAndBonds; Ran OpenBabel::FindRingAtomsAndBonds; ==============================; *** Open Babel Information in OpenBabel::OBMol::NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule ACB_PCA-0004. ==============================; *** Open Babel Information in OpenBabel::OBMol::NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule ACB_PCA-0004; Kekulize: Cannot get an even number of electron for molecule ACB_PCA-0004. ==============================; *** Open Babel Audit Log in OpenBabel::OBMoleculeFormat::WriteChemObjectImpl; OpenBabel::Write molecule Sybyl Mol2 format; ==============================; *** Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignTypes; Ran OpenBabel::AssignTypes; ==============================; *** Open Babel Audit Log in OpenBabel::OBAromaticTyper::AssignAromaticFlags; Ran OpenBabel:",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/671:964,Clear,Clear,964,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/671,2,['Clear'],['Clear']
Usability,"ers/ms/anaconda/include/python2.7/ <-- must be set by hand; PYTHON_LIBRARY:FILEPATH=/Users/ms/anaconda/lib/libpython2.7.dylib <-- this too.; ```~. However, after building, the openbabel module then fails to import in anaconda python, causing it to to crash:. ```~~~; $> ipython; Python 2.7.6 |Anaconda 1.9.1 (x86_64)| (default, Jan 10 2014, 11:23:15) ; [...]. In [1]: import openbabel; Fatal Python error: PyThreadState_Get: no current thread; Abort trap: 6 ; ```~~~. It seems something is wrong with the way the _openbabel.so file in the python extensions is linked:. ```~~~; $> otool -L _openbabel.so ; _openbabel.so:; 	libpython2.7.dylib (compatibility version 2.7.0, current version 2.7.0) ; 	/Users/ms/openbabel/installation/lib/libopenbabel.4.dylib (compatibility version 4.0.0, current version 4.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1197.1.1); 	/usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.5); 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 120.0.0); ```~~~. Note that libpython2.7.dylib does not explicitely point to the anaconda python lib, but instead is specified as a simple file name. I suppose this causes the dynamic linker to use the system python lib at runtime. The system lib is from python 2.7.5, while anaconda comes with 2.7.6. The version mismatch is most likely responsible for the crash. . This mismatch can be fixed using install_name_tool to explicitely set the full path to the python lib:. ```~~~; install_name_tool -change libpython2.7.dylib /Users/ms/anaconda/lib/libpython2.7.dylib _openbabel.so; ```~~~. With this treatment, the import in anaconda python succeeds without error. I don't know enough about linker directives to really figure out what's going wrong during the build. Is it possible to supply the linker with the full path to the specified python lib?. Reported by: mschmuker. Original Ticket: [openbabel/bugs/916](https://sourceforge.net/p/openbabel/bugs/916)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1296:1698,simpl,simple,1698,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1296,1,['simpl'],['simple']
Usability,"es?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Python version: 3.6.7; Open Babel version: 2.4.1 ; Operating system and version: Mac OS 10.13.6 (replicated on Ubuntu 16.04 LTS) . ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. The formal charge of the attached .mol2 file should be +1. . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. Pybel reports the charge of this molecule to be 0, whereas RDKit correctly identifies it as having a formal charge of +1. When converted to any other file format by openbabel, the charge information is lost. . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. The .mol2 file is attached, and the following python snippet reproduces the problem:. ```; import pybel; from rdkit import Chem. # pybel mol2 file; pybel_mol2 = pybel.readfile(""mol2"", ""ligand.mol2"").__next__(); print(pybel_mol2.charge); # RDKit mol2 file; rdkit_mol2 = Chem.MolFromMol2File(""ligand.mol2""); print(Chem.GetFormalCharge(rdkit_mol2)); ```; [ligand.mol2.zip](https://github.com/openbabel/openbabel/files/3158771/ligand.mol2.zip). Thanks! Please let me know if there are any issues with replication, or if there's a simple mistake I'm making with the file reading API.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1982:2194,simpl,simple,2194,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1982,1,['simpl'],['simple']
Usability,"from the source... need to implement OBSmartsPattern::RestrictedMatch(). (Haven't the faintest what this is supposed to do, but; clearly there are some calls that weren't implemented; in OELib.). Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/394:129,clear,clearly,129,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/394,1,['clear'],['clearly']
Usability,"g to generate conformation using OBRotamerList and OBRotorList. However, I found 2 problems.; 1. SetFixAtoms did not seem to work for me. Could be my code problem?; 2. the default conformer(which I found later is the conformer 2 in my case) has the first atom X coordinate set to 0. here is my code:. #include <openbabel/babelconfig.h>; #include <openbabel/base.h>; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>; #include <openbabel/rotamer.h>; #include <openbabel/rotor.h>; #include <unistd.h>; #include ""tool.h"". using namespace std;; using namespace OpenBabel;. int main(int argc,char **argv); {. OBBitVec bitvec;; OBConversion conv;; OBFormat *format_out = conv.FindFormat(""sdf"");; OBFormat *format_in = conv.FindFormat(""mol""); ; conv.SetInAndOutFormats(format_in, format_out); . ifstream ifs;; ofstream ofs;; ifs.open(""covalance.mol"");; if (!ifs) {; cerr <<""cannot read input file!"" << endl;; exit (-1);; }. ofs.open(""cf.sdf"");; OBMol mol;; for (int c=1;;c++) {; mol.Clear();; if (!conv.Read(&mol, &ifs)); break;; if (mol.Empty()); break;; flush(cout);; //mol.AddHydrogens();; OpenBabel::OBMolAtomIter atom(mol);; while(atom){; 	 bitvec.SetBitOn(atom->GetIdx());; 	 ++atom;; }; conv.Write(&mol, &cout);; OBRotorList rl;; rl.SetFixAtoms(bitvec);; rl.Setup(mol);; cerr << "" Number of rotors: "" << rl.Size() << endl;; std::vector<int> rotorKey(rl.Size() + 1, 0);; OBRotamerList rotamers;; rotamers.SetBaseCoordinateSets(mol);; rotamers.Setup(mol, rl);		 ; ; 	; OBRotorIterator ri;; OBRotor *rotor = rl.BeginRotor(ri); ; for (int i = 1; i < rl.Size() + 1; ++i, rotor = rl.NextRotor(ri)){ ; 	 rotorKey[i]=rotor->GetResolution().size()-1;; 	 if (rotorKey[i]<0); 		 rotorKey[i]=0;; 	 cout<<rotor->GetResolution().size()<<'\t';; } ; rotamers.AddRotamer(rotorKey);; rotor = rl.BeginRotor(ri);. for (int i = 1; i < rl.Size() + 1; ++i, rotor = rl.NextRotor(ri)){ ; 	 rotorKey[i]=rotor->GetResolution().size()-3;; 	 if (rotorKey[i]<0); 		 rotorKey[i]=0;; 	 cout<<rotor->GetResolution().siz",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/709:1001,Clear,Clear,1001,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/709,1,['Clear'],['Clear']
Usability,"he following:. ```; <?xml version=""1.0""?>; <molecule formalCharge=""4"" xmlns=""http://www.xml-cml.org/schema"">; ...; </molecule>; ```. When using the above code for the mdl format it produces the following between molecules:. ```; M END. OpenBabel03252112043D; ```. If you then try to read all the molecules from either of these files pybel will only read the first one with mdl format with no error and will fail before reading any molecules with the cml format. The error produced for the cml files is:. ```; :1: parser error : Extra content at the end of the document; er=""1""/> <bond atomRefs2=""a72 a78"" order=""1""/> </bondArray></molecule>; ^; ==============================; *** Open Babel Error in XML Parser ./test_data/output2.cml; Extra content at the end of the document; ```. The formats for the files produces match those of a file with a single molecule in both cases. ; I do not think the Outputfile is correctly handling file formating for multiple molecules. If I manually modify the python output cml and mdl files to match the format produced by the command line then pybel is able to read them in correctly. For cml files since the hierarchy of the brackets changes with multiple molecules a new file needs to be written with the correct hierarchy. For the mdl files a simple delineator line could be added in the self.obConversion.Write(molecule.OBMol) for this format. ```; def write(self, molecule):; """"""Write a molecule to the output file. Required parameters:; molecule; """"""; if not self.filename:; raise IOError(""Outputfile instance is closed.""). if self.total == 0:; self.obConversion.WriteFile(molecule.OBMol, self.filename); else:; self.obConversion.Write(molecule.OBMol); self.total += 1; ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2339:3256,simpl,simple,3256,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2339,1,['simpl'],['simple']
Usability,"http://www.mdl.com is no longer available.; I found https://docs.chemaxon.com and replace with it, but I'm not sure it is appropriate.; I would appreciate feedback. Also, I updated the url in [`src/formats/exampleformat.cpp`](https://github.com/openbabel/openbabel/blob/48387991b746a312dab55cd2ce34c1469ad8351c/src/formats/exampleformat.cpp), but [`XXXFormat`](https://github.com/openbabel/openbabel/blob/48387991b746a312dab55cd2ce34c1469ad8351c/src/formats/exampleformat.cpp#L40) is not used in anywhere. Is the file required?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1980:155,feedback,feedback,155,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1980,1,['feedback'],['feedback']
Usability,"iew.zbh.uni-hamburg.de/smartsview/view. [CH3](-[CX4])	11 Primary C; [CH2](-[CX4])(-[CX4])	111 Secondary C; [CH](-[CX4])(-[CX4])(-[CX4])	1111 Tertiary C; [C](-[CX4])(-[CX4])(-[CX4])(-[CX4])	11111 Quaternary C. And I tryied with the following Hydrocarbons getting the following results: (C:\Translator>obabel HC.txt -ismi -otxt --append HF_Try). CC 66; CCC 288; CCCC 510; CC(C)C 1210; CCCCC 732; CC(C)CC 1432; CC(C)(C)C 132. Looking at the results the some things seem wrong to me.; I figured out how the program gets those results: every time H is present is counted with a ""multiplicity"". a - Every time there is a match on the methyl group, it is counted 3 times more than expected; 		(CC = 6*11, instead of 2*11); 		this problem is found also every time a methyl group is present ; b - Every time a Secondary group is found, it is counted twice ; 		(CCC = 2*111 + 6*11, instead of 2*11+111); 		(CCCC = 4*111 + 6*11, instead of 2*11+2*111); 		(CCCCC = 6*111+6*11 , instead of 2*11+3*111); c - Tertiary carbons itself seems ok; 		(CC(C)C = 1111 + 9*11 instead 1111 + 3*11, reffers to the (a) in this list); 		(CC(C)CC = 1111 + 2*111 + 9*11 instead 1111 + 3*11, reffers to (a) and (b) in this list); d - Quaternary carbons are NOT recognized (or multiplyed by 0?); 		(CC(C)(C)C = 12*11 instead of 11111+4*11). It seems to me that explicit H are somehow bothering the SMILES parser that makes somehow the following multiplication: groupFound*nH. 2 - when a group is NOT present in the database, the program keeps working, while it should probably give me an error message ; (if not all the atoms have been visited at least one, the calculation should somehow FAIL or warn me, that not all atoms have been visited). Using the same files I submitted C=CC (result: 0) and C=CCC (result: 3*11): the first three carbons have never been evaluated but still there is a result!. Thank you for your kind attention, I hope I have been clear enough to help.; You are doing a beatyfull job. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1159:2809,clear,clear,2809,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1159,1,['clear'],['clear']
Usability,"include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:1880,Simpl,Simplify,1880,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['Simpl'],['Simplify']
Usability,"it's clear,when you try to convert a molecular to 3D format ，open babel cannot give correct response.; ![stl](https://github.com/openbabel/openbabel/assets/148681573/9f9ae744-c663-4b9e-bd5d-01c757be4d25); ![cif](https://github.com/openbabel/openbabel/assets/148681573/a1040acc-5d1a-4f34-9108-0cc594cd9092)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2679:5,clear,clear,5,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2679,1,['clear'],['clear']
Usability,"l -ipdb -opdb` to get all the connection but `obConversion.SetInFormat('pdb')` and `obConversion.ReadFile()` should be doing this. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Using the `output.pdb` in the link as the input you will see the issues on residue 101 and 152 in the output.; ```; from openbabel import openbabel. pdbmol=openbabel.OBMol(); obConversion = openbabel.OBConversion(); obConversion.SetInFormat('pdb'); obConversion.ReadFile(pdbmol,""output.pdb""). ## confirm this is first atom in valine residue 101; pdbmol.GetAtom(1604).GetType(); pdbmol.GetAtom(1604).GetResidue().GetName(). ## delete just before Oxygen in Ribociclib; for i in range(5269, 5239, -1):; # delete atom; print(""Deleting atom:"", i); pdbmol.DeleteAtom(pdbmol.GetAtom(i)); # test VAL 101 is still valine; print(""Residue 101 is still:"", pdbmol.GetAtom(1604).GetResidue().GetName()); ; # leucine 152 is also good; pdbmol.GetAtom(2455).GetResidue().GetName(); ; # now delete atom 5239 Oxygen 03; pdbmol.GetAtom(5239).GetType(); pdbmol.DeleteAtom(pdbmol.GetAtom(5239)). # now we see atom 1604 is no longer a valine? ; # Not a simulation... so how does it learn to update residues?; pdbmol.GetAtom(1604).GetResidue().GetName(). # leucine 152 atom 2455 is also messed up; both of these are in ligand binding region; pdbmol.GetAtom(2454).GetResidue().GetName(); pdbmol.GetAtom(2455).GetResidue().GetName(). ## after deleting the remainder this writes all sorts of funky stuff now; for i in range(5238, 5207, -1):; pdbmol.DeleteAtom(pdbmol.GetAtom(i)); obConversion.SetOutFormat('pdb'); obConversion.WriteFile(pdbmol,""uncomplexed.output.pdb""); ```; ![UCSF Chimera 2022-05-26 04-51-12](https://user-images.githubusercontent.com/26236052/170466512-ab11ac77-b7bb-41bd-9b06-609891ba594a.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2481:3438,learn,learn,3438,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481,1,['learn'],['learn']
Usability,"m received signal SIGINT, Interrupt.; 0x00007ffff7b324a0 in __read_nocancel () at ../sysdeps/unix/syscall-template.S:82; 82	../sysdeps/unix/syscall-template.S: No such file or directory.; 	in ../sysdeps/unix/syscall-template.S; (gdb) bt; #0 0x00007ffff7b324a0 in __read_nocancel () at ../sysdeps/unix/syscall-template.S:82; #1 0x00007ffff7acd348 in _IO_new_file_underflow (fp=0x7ffff7dd76a0) at fileops.c:606; #2 0x00007ffff7aceeee in _IO_default_uflow (fp=0x0) at genops.c:440; #3 0x00007ffff7ac5c7b in _IO_getc (fp=0x7ffff7dd76a0) at getc.c:41; #4 0x00007ffff6cecadd in __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::uflow() () from /usr/lib/libstdc++.so.6; #5 0x00007ffff6cd2d90 in std::istream::get() () from /usr/lib/libstdc++.so.6; #6 0x00007ffff769ec89 in zlib_stream::basic_unzip_streambuf<char, std::char_traits<char> >::check_header (this=0x674cc0); at /home/cjh/local/src/openbabel/src/zipstreamimpl.h:819; #7 0x00007ffff769d8f8 in basic_zip_istream (this=0x674cc0, istream=..., window_size=-15, read_buffer_size=4096, ; input_buffer_size=4096, __in_chrg=<value optimized out>, __vtt_parm=<value optimized out>); at /home/cjh/local/src/openbabel/src/zipstreamimpl.h:744; #8 0x00007ffff7696ef4 in OpenBabel::OBConversion::Convert (this=0x7fffffffd570, is=0x0, os=0x7fffffffd1d0); at /home/cjh/local/src/openbabel/src/obconversion.cpp:421; #9 0x00007ffff769b16f in OpenBabel::OBConversion::FullConvert (this=0x7fffffffd570, FileList=..., OutputFileName=..., ; OutputFileList=...) at /home/cjh/local/src/openbabel/src/obconversion.cpp:1410; #10 0x000000000040573e in main (argc=4, argv=0x7fffffffd8c8) at /home/cjh/local/src/openbabel/tools/babel.cpp:347. From the trace it seems that something is going on with the zlib interface, but clearing the ZLIB related variables in cmake and setting -D DISABLE_WRITE_COMPRESSION in CPPFLAGS did not appear to solve the problem. This problem occurs as of r4519 on ubuntu-10.04 x86_64, compiled with Debug settings. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1119:2210,clear,clearing,2210,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1119,1,['clear'],['clearing']
Usability,"master is not generating correct atom types when outputting pdbqt files. This is because the pdbqt writer works on copies (possibly fragments) of the original molecule. The copies have their perception flags reset. By default, nonpolar hydrogens are removed when outputting pdbqt files. When the aromaticity flags are recomputed on the molecule with the deleted hydrogens, atoms that should be aromatic are not marked as such. Note that this is a regression from 2.4. My suspicion is that there is a difference in how the new aromatic typer is dealing with molecules with deleted hydrogens. I would appreciate it if @baoilleach could take a look. I think this fix is good in addition to any fixes that may be made to the aromatic typer as it will prevent an unnecessary recomputation of aromaticity, but would appreciate feedback. A test case is provided (without the fix the phenyl ring of the tyrosine is not marked aromatic).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1790:821,feedback,feedback,821,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1790,1,['feedback'],['feedback']
Usability,"moving isotopes from InChI identifier using OpenBabel (3.1.1 installed via conda) InChI to InChI conversion (parameter `/noiso`). If I have an InChI of compound like deuterium oxide `InChI=1S/H2O/h1H2/i/hD2` that contains isotopes and would like to remove the isotopes (so I do simple InChI to InChI conversion using parameter `/noiso`), I get an InChI that looks like this: `InChI=1S/H2O/h1H2/hD2`. This InChI is however incorrect, any other conversion or action using this InChI ends with an error (example: I now want to convert `InChI=1S/H2O/h1H2/hD2` to can SMILES, I get an error: `*** Open Babel Error in InChI code, Reading InChI failed`). I have recently come across several of such compounds where removing isotopes disrupt the InChI. What I originally needed to do is simply removing isotopes from selected compounds to obtain more general structure. . More examples (compound containing H isotopes that is ok and one that fails to convert):; Original InChI: InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/i1D3,2D,3D,4D,5D (o-Cresol-d7); After ignoring isotopes (`/noiso`): InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3; Conversion to can SMILES: OK. Original InChI: InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/i1D3,2D,3D,4D,5D/hD (o-Cresol-d8); After ignoring isotopes (`/noiso`): InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/hD; Conversion to can SMILES: FAILED. What I would **expect to get from both of these compounds** is InChI of o-Cresol: `InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3`. I get it from the first example but in the second, there is still deuterium `/hD` in the InChI identifier. From this it seems that OpenBabel ""ignores isotopes"" by simply removing everything after `i` till the next `/` character, but that does not always work. Is this a bug or am I missing some chemical knowledge that explain this behaviour?. Example command line for removing isotopes from InChI: `obabel -i 'inchi' cresol_d7.inchi -o 'inchi' -O cresol_d7_out.inchi -xT /noiso`. Thank you!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2308:1700,simpl,simply,1700,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2308,1,['simpl'],['simply']
Usability,"nChI [Write-only]; mdl -- MDL MOL format; ml2 -- Sybyl Mol2 format; mna -- Multilevel Neighborhoods of Atoms (MNA) [Write-only]; mol -- MDL MOL format; mol2 -- Sybyl Mol2 format; molreport -- Open Babel molecule report [Write-only]; moo -- MOPAC Output format [Read-only]; mop -- MOPAC Cartesian format; mopcrt -- MOPAC Cartesian format; mopin -- MOPAC Internal; mopout -- MOPAC Output format [Read-only]; mp -- Molpro input format [Write-only]; mpc -- MOPAC Cartesian format; mpo -- Molpro output format [Read-only]; mrv -- Chemical Markup Language; nul -- Outputs nothing [Write-only]; nw -- NWChem input format [Write-only]; nwo -- NWChem output format [Read-only]; orca -- ORCA output format [Read-only]; orcainp -- ORCA input format [Write-only]; outmol -- DMol3 coordinates format; paint -- Painter format [Write-only]; pc -- PubChem format [Read-only]; pcjson -- PubChem JSON; pdb -- Protein Data Bank format; png -- PNG 2D depiction; POSCAR -- VASP format; pov -- POV-Ray input format [Write-only]; pwscf -- PWscf format [Read-only]; qcin -- Q-Chem input format [Write-only]; qcout -- Q-Chem output format [Read-only]; report -- Open Babel report format [Write-only]; sd -- MDL MOL format; sdf -- MDL MOL format; siesta -- SIESTA format [Read-only]; smi -- SMILES format; smiles -- SMILES format; svg -- SVG 2D depiction [Write-only]; sy2 -- Sybyl Mol2 format; t41 -- ADF TAPE41 format [Read-only]; text -- Read and write raw text; tmol -- TurboMole Coordinate format; txt -- Title format; VASP -- VASP format; xml -- General XML format [Read-only]; xsf -- XCrySDen Structure Format [Read-only]; zin -- ZINDO input format [Write-only]`. In this [closed issue](https://github.com/openbabel/openbabel/issues/1722), @fredrikw suggests that this could have something to do with [BABEL_LIBDIR](https://open-babel.readthedocs.io/en/latest/Installation/install.html#environment-variables). However, it is not clear to me how I can use this information. I would appreciate your ideas. Thanks,. Othman",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2394:4792,clear,clear,4792,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2394,1,['clear'],['clear']
Usability,"nds while using PDB files and to report all the issues at once. The result of this analysis is in the attachment. As previously, I noticed that OpenBabel 2.3.2 generated a correct output for the molecule I was analyzing, then I also decide to use this version in my tests. In all tests, I used the openbabel 2.4.1 library (python) for creating an OBMol molecule and then I printed the smiles for each one of the inputs (listed below). To check for possible errors of valence, charge, etc, I used the tool Chemicalize from Chemaxon (the figures in the attachment were obtained with this tool). First, I extract the ligand from the PDB file (all ligands and ids were informed in the attached file). Four different inputs were used to create the OBMol object:; 1) A .mol file obtained by converting the extracted file using OpenBabel 2.3.2.; 2) A .mol file obtained by converting the extracted file using OpenBabel 2.4.1. ; 3) The .pdb file. Function used: readfile(""pdb"", file); 4) The .pdb file as a string. Function used: readstring(""pdb"", pdb_block). Besides it, for each ligand I also evaluated the impact of creating the molecule without hydrogens and adding hydrogens according to some pH value. In the excel file, you'll find a column with the ligand information, one to indicate if I had used hydrogens and other to inform at which pH the hydrogens were added. Also, four other columns were added (one for each input). The red cells indicate if there is an incorrect aromatic perception. I believe these results can help you guys to detect what are the possible causes for these errors. I have not uploaded the molecule files because it would be too many files and all of them can be accessed through the PDB site. . If anything is not clear enough please just let me know and I could help you to reproduce the errors. Excel file: ; [Analysis_of_the_best_input_Send_to_OpenBabel.xls.zip](https://github.com/openbabel/openbabel/files/2789808/Analysis_of_the_best_input_Send_to_OpenBabel.xls.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1925:2142,clear,clear,2142,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1925,1,['clear'],['clear']
Usability,"of incorporating some 'automatic' 3D-pharmacophore perception code into one of my programs. Nearly all works---except for the perception of ring atoms ---in the manner illustrated in the sample code below ---which mimics your example in the OBRing class description. So I am puzzled --because this 'used to work for me'. Indeed it did back at OpenBabel 2.3.0 or so. At this point when I compile and debug I wind up with a seg fault that traces to one of the OpenBabel ring iterators:. Specifically:; __normal_iterator(const _Iterator& __i) : _M_current(__i) { }. The SEG FAULT is:; Program received signal SIGSEGV, Segmentation fault.; 0x0000000000401a72 in __gnu_cxx::__normal_iterator<OpenBabel::OBRing**, std::vector<OpenBabel::OBRing*, std::allocator<OpenBabel::OBRing*> > >::__normal_iterator (this=0x7fffffffc580, __i=@0x0) at /usr/lib/gcc/x86_64-redhat-linux6E/4.4.7/../../../../include/c++/4.4.7/bits/stl_iterator.h:686; (gdb) . Trouble shooting I went back to the simplest example mimicking the snippet of example code in your OBRing class description ---. This 'used to work' and no longer does for me?.; It this operator error? Or a bug?; Just push me in the right direction for trouble shooting.; I am linking against the latest compiled libopenbabel.so in Version 2.3.2. Thank you for the gift of OpenBabel ---saves me time and effort each an every day. Danni; ________________________SAMPLE___CODE____________________. #include <iostream>; #include <fstream>; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>; #include <openbabel/ring.h>; using namespace std;; using namespace OpenBabel;. // Include Open Babel classes for OBMol and OBConversion; int main(int argc,char **argv); {; // Read from STDIN (cin) and Write to STDOUT (cout); ifstream fin;; fin.open(""c6h6.smi"",ios::in);; OpenBabel::OBConversion conv(&fin,&cout);; if(conv.SetInAndOutFormats(""SMI"",""CAN"")); {; OBMol mol;; if(conv.Read(&mol)); {; conv.Write(&mol);; //cout << ""WE ARE ABOVE "" << endl;; vector<OBRin",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1245:1005,simpl,simplest,1005,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1245,1,['simpl'],['simplest']
Usability,"ol:; E N E R G Y. TOTAL BOND STRETCHING ENERGY = 885.142 kJ/mol; TOTAL ANGLE BENDING ENERGY = 0.000 kJ/mol; TOTAL TORSIONAL ENERGY = 0.000 kJ/mol; TOTAL VAN DER WAALS ENERGY = 28.637 kJ/mol. TOTAL ENERGY = 913.77844 kJ/mol. 1.mol:; E N E R G Y. TOTAL BOND STRETCHING ENERGY = 885.082 kJ/mol; TOTAL ANGLE BENDING ENERGY = 0.000 kJ/mol; TOTAL TORSIONAL ENERGY = 0.000 kJ/mol; TOTAL VAN DER WAALS ENERGY = 40.619 kJ/mol. TOTAL ENERGY = 925.70114 kJ/mol. 2. Feeding SD file 01.sdf:; E N E R G Y. TOTAL BOND STRETCHING ENERGY = 885.142 kJ/mol; TOTAL ANGLE BENDING ENERGY = 0.000 kJ/mol; TOTAL TORSIONAL ENERGY = 0.000 kJ/mol; TOTAL VAN DER WAALS ENERGY = 28.637 kJ/mol. TOTAL ENERGY = 913.77844 kJ/mol. E N E R G Y. TOTAL BOND STRETCHING ENERGY = 25051.011 kJ/mol; TOTAL ANGLE BENDING ENERGY = 4739.340 kJ/mol; TOTAL TORSIONAL ENERGY = 0.000 kJ/mol; TOTAL VAN DER WAALS ENERGY = 30521.391 kJ/mol. TOTAL ENERGY = 60311.74191 kJ/mol. One cleary sees that the result for compound 1 from the SD file is not even close to the one which processing the MOL file of the compound gives (e.g. total energy 925.70114 kJ/mol (MOL) vs. 60311.74191 kJ/mol (SDF). The behaviour is reproducible on both Windows and Linux (OB 2.2.1 and 2.2.3) . . The same is true for obminimize. If I minimize the above compounds (e.g. obminimize -h -c 1e-4 -o mol 0.mol > 0.min.mol), I do get these results:. 0.min.mol:. OpenBabel08070915532D. 21 21 0 0 0 0 0 0 0 0999 V2000; -2.4575 5.8304 0.0019 C 0 0 0 0 0; -1.3334 3.7826 0.0003 C 0 0 0 0 0; -0.0840 1.5542 -0.0001 C 0 0 0 0 0; -1.2704 -0.5623 -0.0000 C 0 0 0 0 0; -2.4873 1.5297 -0.0001 C 0 0 0 0 0; -2.4795 0.1324 -0.0000 C 0 0 0 0 0; -1.2974 2.2633 -0.0001 C 0 0 0 0 0; -0.0744 0.1570 -0.0000 C 0 0 0 0 0; -3.7739 6.5786 -0.0053 C 0 0 0 0 0; 1.1240 2.2511 -0.0000 O 0 0 0 0 0; -1.4212 6.4741 -0.0002 O 0 0 0 0 0; -0.2658 4.3741 0.0007 O 0 0 0 0 0; -2.4936 4.4784 0.0002 O 0 0 0 0 0; -1.2579 -1.6475 0.0000 H 0 0 0 0 0; -3.4377 2.0474 0.0000 H 0 0 0 0 0; -3.4111 -0.4215 0.0000 H 0 ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/923:1269,clear,cleary,1269,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/923,1,['clear'],['cleary']
Usability,"openbabel 3.1.1 on both windows and linux. My group and I have had success converting most of our molecules from .xyz to .smi, however when trying to convert oximes like formaldoxime (CH2NOH) or NH2CHNOH, openbabel returns the smiles [CH2][N]O and O[N]C=[NH2], when they should be ON=C and ON=CN respectively. In both cases, there should be a C=N double bond where there is only a CN single bond (and in the second case an additional incorrect C=N double bond). I was wondering if this issue could be fixed or if I could get some knowledge on how your bond prediction system works, like if it bases on atom distance or the number of bonds an atom would/should have etc. As for using alternate file formats, my group is working with VASP files which don't include bond information, so we cannot use something like .mol. We understand the limitations of xyz and the fact the openbabel has to predict the bonds, this case seemed notable however since the bug appeared for a seemingly simple molecule that wasn't a radical or any special case. Attached are the .xyz files for the two molecules I mentioned. Thank you for the help. . [xyzfiles.zip](https://github.com/openbabel/openbabel/files/11681743/xyzfiles.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2594:981,simpl,simple,981,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2594,1,['simpl'],['simple']
Usability,"osed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Cygwin, Python 3.7.4. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Expected to import openbabel. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>; Openbabel cannot be properly imported due to missing ""_clear"" attributes. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; I installed the new OpenBabel 3.0.0 with python bindings and swig on but there is an issue with the import of openbabel into python code now. OpenBabel 2.4.1 was working correctly before. Perhaps I am missing something?. Stack Trace & Error Message:; File ""/usr/lib/python3.7/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/usr/lib/python3.7/site-packages/openbabel/openbabel.py"", line 166, in <module>; vectorInt.clear = new_instancemethod(_openbabel.vectorInt_clear, None, vectorInt); AttributeError: module '_openbabel' has no attribute 'vectorInt_clear'",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2062:1906,clear,clear,1906,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2062,1,['clear'],['clear']
Usability,"output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:12685,Simpl,Simplify,12685,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['Simpl'],['Simplify']
Usability,"output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:10524,Simpl,Simplify,10524,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['Simpl'],['Simplify']
Usability,"pen Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: Open Babel 3.1.1 (built from GitHub commit [f495cc6](https://github.com/openbabel/openbabel)); Operating system and version: Ubuntu 20.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The charged hydrogen atoms are retained or a warning is issued that such constructs are not allowed. . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Operations that output SMILES strings silently remove `[H-]` and `[H+]` atoms from constructs like `[H-][Al+3]([H-])[H-]`. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Operation:; ```; echo ""[H-][Al+3]([H-])[H-]"" | obabel -i smi -o can; ```; Expected output:; ```; [H-][Al+3]([H-])[H-] or [H][Al]([H])[H] or something similar; ```; Actual output:; ```; [Al+3]; ```. # Additional notes. * Conversion from the `""[H-][Al+3]([H-])[H-]""` SMILES to SDF retains the negatively charged hydrogen atoms.; * Conversion from the `""[H-][Al+3]([H-])[H-]""` SMILES to InChI retains the H atoms, although it does disconnect them and neutralise the overall charge. ; * The charged hydrogen atoms are not removed if they are not bound by other atoms.; * The charged hydrogen atoms are not removed if they are bridging atoms, e.g. canonicalisation of `[Al][H-][Al]` produces `[Al][H-][Al]`.; * I fully understand that the provided example is quite unconventional, thus if it is not supported, it would be very useful to get a clear warning/error.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2625:2358,clear,clear,2358,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2625,1,['clear'],['clear']
Usability,"pip install openbabel. Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/; Collecting openbabel; Downloading openbabel-3.1.1.1.tar.gz (82 kB); |████████████████████████████████| 82 kB 1.0 MB/s ; Building wheels for collected packages: openbabel; Building wheel for openbabel (setup.py) ... error; ERROR: Failed building wheel for openbabel; Running setup.py clean for openbabel; Failed to build openbabel; Installing collected packages: openbabel; Running setup.py install for openbabel ... error; ERROR: Command errored out with exit status 1: /usr/bin/python3 -u -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '""'""'/tmp/pip-install-egicsh_z/openbabel_976894f6948d4a8aa4de632363cc09a7/setup.py'""'""'; __file__='""'""'/tmp/pip-install-egicsh_z/openbabel_976894f6948d4a8aa4de632363cc09a7/setup.py'""'""';f = getattr(tokenize, '""'""'open'""'""', open)(__file__) if os.path.exists(__file__) else io.StringIO('""'""'from setuptools import setup; setup()'""'""');code = f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record /tmp/pip-record-b91qplvd/install-record.txt --single-version-externally-managed --compile --install-headers /usr/local/include/python3.8/openbabel Check the logs for full command output. if anyone can update openbabel pypi (https://pypi.org/project/openbabel/) in python it will be helpful for us to do many things. Thanks in advance :)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2556:60,simpl,simple,60,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2556,2,['simpl'],['simple']
Usability,"rt_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:6194,Simpl,Simplify,6194,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['Simpl'],['Simplify']
Usability,"tions I would like to add an Extra Point (EP) of Charge to halides (similar to how hydrogens are added to structures). The idea is for the EPs to have the following properties and labels (From article: Molecular Mechanical Study of Halogen Bonding in Drug Discovery):; For Chlorine and EP (XCl):; Bond lenght (Cl - XCl = 1.95A ; Angle (X - Cl - XCl) = 180 degrees. For Bromine and EP (XBr):; Bond lenght (Br - XBr = 2.22A ; Angle (X - Br - XBr) = 180 degrees. For iodine and EP (XI):; Bond lenght (CI - XI = 12.35A ; Angle (X - CI - XI) = 180 degrees. I have attached a modified element.txt from Open Babel 2.3.2 (running on Ubuntu 14.04 Linux) that includes the properties XCl, XBr and XI. . I tried to modify the mol.cpp, mol.h, openbabel-python.cpp, openbabel.py and pybel.py files (also attached) to include a new function called AddX (same functionality as AddHydrogens for now, just different name). After sucessfully compiling the modified mol.cpp and mol.h files I then used pycharm and a simple pyhton script to see if it worked. I first tried:; import openbabel, pybel; mol = pybel.readfile(""pdb"", ""~/Documents/test/Chlroroquine.pdb"").next(); print len(mol.atoms), mol.molwt; mol.OBMol.AddHydrogens(); print len(mol.atoms), mol.molwt; pybelmol = pybel.Molecule(mol); pybelmol.write(""pdb"", ""~/Documents/test/Chlroroquine_test.pdb"", overwrite=True). With the following output:; 22 319.87214; 48 319.87214. Then I tried the following::; import openbabel, pybel; mol = pybel.readfile(""pdb"", ""/home/xeonbas/Documents/MGLTools_test/test/Chlrooquine.pdb"").next(); print len(mol.atoms), mol.molwt; mol.OBMol.AddX(); print len(mol.atoms), mol.molwt; pybelmol = pybel.Molecule(mol); pybelmol.write(""pdb"", ""/home/xeonbas/Documents/MGLTools_test/test/Chlrooquine_test.pdb"", overwrite=True). With the following output:; Traceback (most recent call last):; 22 319.87214; File ""~/PycharmProjects/untitled3/test.py"", line 4, in <module>; mol.OBMol.AddX(); AttributeError: 'OBMol' object has no attribute 'Ad",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1542:1293,simpl,simple,1293,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1542,1,['simpl'],['simple']
Usability,use simple cube format for molecules with single grid,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2580:4,simpl,simple,4,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2580,2,['simpl'],['simple']
Usability,"ut; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:8363,Simpl,Simplify,8363,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['Simpl'],['Simplify']
Usability,"v[]); {; OBForceField* pFF = OBForceField::FindForceField(""MMFF94"");; if (!pFF); {; cout << ""Bail out! Can't find forcefield!"" << endl;; system(""pause"");; return -1;; }; OBOp* pOp = OBOp::FindType(""Gen3D"");; if (!pOp); {; cout << ""Bail out! Can't find Gen3D!"" << endl;; system(""pause"");; return -1;; }. string SmilesString=""C2CN(CCN1C(=O)N(CC)N=N1)CCC2(COC)N(C(=O)CC)C3=CC=CC=C3"";; stringstream ss(SmilesString);; OBConversion conv(&ss);; OBMol mol;; if(!conv.SetInFormat(""smi"") || !conv.Read(&mol)); {; cout << ""Bail out! Can't read SMILES string"" << endl;; system(""pause"");; return -1;; }; mol.AddHydrogens();; if (!pOp->Do(&mol)); {; cout << ""Bail out! 3D generation failed"" << endl;; system(""pause"");; return -1;; }; if (!pFF->Setup(mol)); {; cout << ""Bail out! Forcefield Setup failed"" << endl;; system(""pause"");; return -1;; }; pFF->SteepestDescent(1000);; pFF->GetCoordinates(mol);; int numrots = mol.NumRotors();; cout << ""Number of rot: "" << numrots << endl;; pFF->WeightedRotorSearch(numrots, 100);; pFF->GetCoordinates(mol);; cout << ""Got to the end"" << endl;; system(""pause"");; }. ////////////////////////////////////////////////. The error was in std::vector:; _DEBUG_ERROR(""vector iterator not dereferencable"");. The call stack was:; msvcp80d.dll!00819961(); [Frames below may be incorrect and/or missing, no symbols loaded for; msvcp80d.dll]; > OpenBabelDLLD.dll!std::_Vector_const_iterator<OpenBabel::OBBond; *,std::allocator<OpenBabel::OBBond *> >::operator*() Line 99 + 0x14; bytes C++; OpenBabelDLLD.dll!std::_Vector_iterator<OpenBabel::OBBond; *,std::allocator<OpenBabel::OBBond *> >::operator*() Line 327 C++; OpenBabelDLLD.dll!OpenBabel::OBMol::FindChildren(std::vector<int,std::allocator<int>; > & children=[0](), int first=3, int second=4) Line 560 + 0x23; bytes C++; OpenBabelDLLD.dll!OpenBabel::OBRotorList::AssignTorVals(OpenBabel::OBMol; & mol={...}) Line 424 C++; OpenBabelDLLD.dll!OpenBabel::OBRotorList::Setup(OpenBabel::OBMol &; mol={...}) Line 53 C++; OpenBabelDLLD.d",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/751:1260,pause,pause,1260,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/751,1,['pause'],['pause']
Usability,"varible was being used uninitialized, pretty simple fix.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/32:45,simpl,simple,45,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/32,1,['simpl'],['simple']
Usability,"version: SVN trunk; OS: Linux. 1:; graphsym.cpp; Newly allocated memory for _frag_atoms in the OBGraphSym constructor gets not freed.; A simple `delete _frag_atoms;` in the destructor solved it for my test case, but this has to be reviewed esp. if frag_atoms are given as parameters. 2:; obconversion.cpp; The last pLineEndBuf created in OBConversion::InstallStreamFilter() gets never freed.; 'delete pLineEndBuf;' in the destructor worked though. Reported by: runz",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/980:137,simpl,simple,137,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/980,1,['simpl'],['simple']
Usability,"version: Ubuntu 21.04. ## Expected Behavior; Iterating over the molecules in an mmcif with multiple chains (e.g. ligands) should yield a different molecule for each chain (asym_id). ## Actual Behavior; Iterating over the molecules in an mmcif with multiple chains (e.g. ligands) will only yield one single molecule which contains the atoms from all chains. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; 1. Download this file; [P04406.mmcif.txt](https://github.com/openbabel/openbabel/files/8403838/P04406.mmcif.txt). 2. From the same directory the above file is located in, run:; ```python; from openbabel import pybel; molecules = list(pybel.readfile(""mmcif"", ""P04406.mmcif.txt"")); print(len(molecules)); ```. This prints `1`, but if you look at the actual file, you'll note that there are clearly multiple molecules. For instance, in this part of the `_atom_site` loop, we move from `ATOM` to `HETATM`, with different `asym_id` (`A` -> `B`) which indicate a change in molecule:; ```; ATOM 2530 O O . GLU A 1 335 ? -24.426 9.206 -5.546 1.0 88.86 ? 335 GLU A O 1 P04406 UNP 335 E ; ATOM 2531 C CG . GLU A 1 335 ? -21.013 7.997 -2.666 1.0 88.86 ? 335 GLU A CG 1 P04406 UNP 335 E ; ATOM 2532 C CD . GLU A 1 335 ? -21.190 6.513 -2.996 1.0 88.86 ? 335 GLU A CD 1 P04406 UNP 335 E ; ATOM 2533 O OE1 . GLU A 1 335 ? -20.200 5.869 -3.409 1.0 88.86 ? 335 GLU A OE1 1 P04406 UNP 335 E ; ATOM 2534 O OE2 . GLU A 1 335 ? -22.265 5.907 -2.767 1.0 88.86 ? 335 GLU A OE2 1 P04406 UNP 335 E ; ATOM 2535 O OXT . GLU A 1 335 ? -23.030 10.937 -5.405 1.0 88.86 ? 335 GLU A OXT 1 P04406 UNP 335 E ; HETATM 2536 O O7N ? NAD B 2 336 ? 19.418873 -12.557346 25.040537 1.00 27.94 ? 336 NAD B O7N 1 ? ? ? ? ; HETATM 2537 C C7N ? NAD B 2 336 ? 18.608522 -13.471519 25.032057 1.00 31.53 ? 336",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2458:1772,clear,clearly,1772,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2458,1,['clear'],['clearly']
Usability,"xpected Behavior; <!-- Describe the intended output or what you expected to see. -->; I would like to suggest the `idcode` format internally used by [DataWarrior](http://www.openmolecules.org/datawarrior/index.html) to be added to the cheminformatics formats read / written by Open Babel. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The format is missing. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; DataWarrior is a program freely available and used to compute and manage chemical structures and properties. Examples of functions offered by DataWarrior include the determination of molecular mass, cLogP, small ring count, similarity searches, PCA, simplification to Murcko scaffold and skeleton, SAR-tables. The program stores information as `.dwar` files (example attached) in plain ASCII, where chemical structures are written as `idcodes`. Thomas Sander describes these strings as «a very compact text representation of a molecule [...] somewhat comparable to an isomeric SMARTS» ([reference](http://openmolecules.org/forum/index.php?t=msg&th=422&start=0&)). For example, the three isomers of tartaric acid, `O[C@H]([C@H](C(O)=O)O)C(O)=O` (2R, 3R), `O[C@@H]([C@@H](C(O)=O)O)C(O)=O` (2S, 3S) and `O[C@H]([C@@H](C(O)=O)O)C(O)=O` (2R, 3S) are described as ` dedF@@PfFTf{nZjfSET@`, `dedF@@PfFTf{nZjfSIR@` and `dedF@@PfFTf{nZjfSIT@`, respectively. File `idcodes_examples.txt` equally attached compiles some molecules tested. According to Thomas Sander (_loc. cit._) the use of idcodes and their implementation into other programs is permitted (e.g., LigandScout) and is part of the actively developed [`OpenCh",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2311:1767,simpl,simplification,1767,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2311,1,['simpl'],['simplification']
Usability,"y; In the derivation Wilmer et al. talk about the orbital overlap energy term (or short-ranged damping term), which they define as. <a href=""https://www.codecogs.com/eqnedit.php?latex=E_o(r_{ij})&space;=&space;\sum_m&space;\left(\mathrm{e}^{-\left(\frac{J_{ij}r_{ij}}{K}&space;\right&space;)^2}&space;\left(\frac{J_{ij}}{K}&space;=&space;\frac{J_{ij}^2r_{ij}}{K^2}&space;-&space;\frac{1}{r_{ij}}&space;\right&space;)&space;\right&space;)"" target=""_blank""><img src=""https://latex.codecogs.com/gif.latex?E_o(r_{ij})&space;=&space;\sum_m&space;\left(\mathrm{e}^{-\left(\frac{J_{ij}r_{ij}}{K}&space;\right&space;)^2}&space;\left(\frac{J_{ij}}{K}&space;=&space;\frac{J_{ij}^2r_{ij}}{K^2}&space;-&space;\frac{1}{r_{ij}}&space;\right&space;)&space;\right&space;)"" title=""E_o(r_{ij}) = \sum_m \left(\mathrm{e}^{-\left(\frac{J_{ij}r_{ij}}{K} \right )^2} \left(\frac{J_{ij}}{K} = \frac{J_{ij}^2r_{ij}}{K^2} - \frac{1}{r_{ij}} \right ) \right )"" /></a>. In the derivation, they make a clear distinction between the diagonal entries of `A`, and the off-diagonal entries. I'll refer to page 9 in the Supporting Info of the original paper, where they define the entries of `A` as:. <a href=""https://www.codecogs.com/eqnedit.php?latex=\frac{K}{2}&space;\left(&space;\alpha_{km}&space;&plus;&space;\beta_{km}&space;&plus;&space;E_o(r_{km})&space;\right&space;)&space;\equiv&space;J_{km}^{PE}"" target=""_blank""><img src=""https://latex.codecogs.com/gif.latex?\frac{K}{2}&space;\left(&space;\alpha_{km}&space;&plus;&space;\beta_{km}&space;&plus;&space;E_o(r_{km})&space;\right&space;)&space;\equiv&space;J_{km}^{PE}"" title=""\frac{K}{2} \left( \alpha_{km} + \beta_{km} + E_o(r_{km}) \right ) \equiv J_{km}^{PE}"" /></a>. <a href=""https://www.codecogs.com/eqnedit.php?latex=K&space;\left(&space;\alpha^*_{kk}&space;-&space;\frac{1}{\eta\sqrt{\pi}}&space;&plus;&space;\beta^*_{kk}&space;\right&space;)&space;&plus;&space;J_k&space;\equiv&space;J_{kk}^{PE}"" target=""_blank""><img src=""https://latex.codecogs.com/gif.latex?K&sp",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1861:2132,clear,clear,2132,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1861,1,['clear'],['clear']
