quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Availability,"Replaces #3360 as the pull request is blocked. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3462:591,failure,failures,591,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3462,2,['failure'],['failures']
Availability,"Replaces https://github.com/sofa-framework/sofa/pull/3806 after discussion during the dev meeting.; Fixes https://github.com/sofa-framework/sofa/discussions/3773. The includes are not exhaustive. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3865:740,failure,failures,740,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3865,2,['failure'],['failures']
Availability,"Replacing ; `std::enable_if_t<TL == 1 && TC != 1 || TC == 1 && TL != 1> >`; by; `std::enable_if_t<(TL == 1 && TC != 1) || (TC == 1 && TL != 1)> >`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3633:692,failure,failures,692,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3633,2,['failure'],['failures']
Availability,"Replacing automatically the deprecated template at the begining of the createObject method of the factory doesn't work for CUDA implementation using Matrices when compiling sofa in Double and CUDA in Float. See #3644 for more context . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3646:780,failure,failures,780,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3646,2,['failure'],['failures']
Availability,Requires #814 . Renaming DataTrackerDDGNode::isDirty() to DataTrackerDDGNode::hasChanged() to reduce confusion with DDGNode::isDirty(). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/820:392,failure,failures,392,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/820,2,['failure'],['failures']
Availability,"Requires other PRs to avoid crashes during the dump. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4818:597,failure,failures,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4818,2,['failure'],['failures']
Availability,RequriedPlugin does not updates when some of its data field are changed. ; This PR implement this behavior without breaking the existing one. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1458:400,failure,failures,400,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1458,2,['failure'],['failures']
Availability,"Reset button becomes Reload button (equivalent to CTRL+R); Reset remains available with ALT+R ; If this PR gets accepted I would propagate to ImGUI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3123:73,avail,available,73,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3123,3,"['avail', 'failure']","['available', 'failures']"
Availability,"Resize the force vector even when no force Data has been set. This avoids a crash later. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3670:633,failure,failures,633,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3670,2,['failure'],['failures']
Availability,"RestSpringsForceField has almost two versions: one for Vec (default implementation), the other for Rigid (specialization in cpp); Problems are:; - ugly code duplication; - not possible to instantiate from somewhere else for other kind of RigidTypes (i.e for float version or CudaRigid...). so this PR unifies the code and does not rely on any specialization in the cpp. The main difference is that the ""Vector"" version was testing if the stiffness was global or for each spring (more or less), with again an other ugly code duplication.; I removed the particular case but it means there is a test of the size at each iteration (in addF(), addDF()) which I think is not very problematic but I did not do any bench to test that. 🙊; ~~I also test if the case is Rigid on the Name(), a bit ugly but does the trick for me....~~. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3175:1368,failure,failures,1368,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3175,2,['failure'],['failures']
Availability,"Return type of `getRotations()` should use the `typedef` type to respect the floating point precision of the template `DataTypes`. As it is now, it causes compilation errors when using template `defaulttype::Vec3fTypes`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2235:167,error,errors,167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2235,3,"['error', 'failure']","['errors', 'failures']"
Availability,"Revert #3278 remove un-inded merge. Sorry for the mess. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4068:600,failure,failures,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4068,2,['failure'],['failures']
Availability,"Reverts sofa-framework/sofa#2208. Sorry, made an error with github cli !",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2214:49,error,error,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2214,1,['error'],['error']
Availability,"Revival of #1553 ; could not re-opened it because of force push🕵️‍♀️. Based on #1555 . ## Description:; Move fixed_array types (helper::fixed_array and defaulttype::Vec) and their satellites file (algo...) to the new Sofa.Type module.; No dependency on anything, except the (future) Sofa.Config to avoid weird cyclic deps.; As a compatibility layer for transition, so it should be as least breaking as possible. - sofa::defaulttype::Vec becomes sofa::type::Vec; - sofa::helper::fixed_array becomes sofa::type::stdtype::fixed_array. ## Breaking; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions cross and dot() when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. More info with #1521 . Another PR will remove all defaulttype::Vec (and helper::fixed_array); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1734:1592,failure,failures,1592,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1734,2,['failure'],['failures']
Availability,Rework the PR with clean history (see previous #1238); Fix #1166 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1241:323,failure,failures,323,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1241,2,['failure'],['failures']
Availability,"Right now for a tetrahedron: [P0, P1, P2, P3] (see picture below); The 4 triangles saved in the tetrahedron are:; - T0: [P1, P3, P2]; - T1: [P2, P3, P0]; - T2: [P3, P1, P0]; - T3: [P0, P1, P2]. This means the 4 triangles are clockwised oriented and thus their normals are going inside the tetrahedron. If there is a special reason for that I couldn't find it in the doc. . ![image](https://user-images.githubusercontent.com/21199245/50616906-cf072980-0eea-11e9-8bf0-72a4d2d584d7.png). As Gmsh nice ascii picture (from gmsh full doc) and the 2nd picture suggest. I changed to have counter-clockwise orientation so triangles on borders are by default well oriented to have normals going out. Then, T0 being the 2D plan [u,v], T1 sharing vector u and then T2 and T3 to close the tetrahedron; So new triangles are:; - T0: [P0, P2, P1]; - T1: [P0, P1, P3]; - T2: [P1, P2, P3]; - T3: [P0, P3, P2]. ![image](https://user-images.githubusercontent.com/21199245/50616994-4937ae00-0eeb-11e9-9aca-87385530a7ea.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/878:1260,failure,failures,1260,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/878,2,['failure'],['failures']
Availability,"Right now in SOFA we have:; - TopologySubsetData: templated but working only with ```unsigned int``` to store a list of indices following the topology. For example the ```indices``` of a FixedConstraint.; - TopologySparseData: templated on any structure (like TopologyData) but on a smaller set. This Data works with a second vector of indices as a map between the Topology buffer and this Data. This PR merge both code inside TopologySubSetData. If the second vector is not set and the TopologySubSetData is templated on ; ```unsigned int``` it will work as before. ![image](https://user-images.githubusercontent.com/21199245/121327022-5d313680-c913-11eb-99b4-3d543893ae06.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2114:1224,failure,failures,1224,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2114,2,['failure'],['failures']
Availability,"Right now, if you put a BoxROI in your scene to get the edges, triangles, etc. contained inside a box, the BoxROI will gets you every elements for which its center point is inside the box. An element partially inside the box can than be flagged as inside. This PR adds an option named ""strict"" to the BoxROI which will instead test that every nodes of the elements are contained inside the box. The option is false by default so that the current behavior remains unchanged. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1127:730,failure,failures,730,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1127,2,['failure'],['failures']
Availability,"Roadmap STC11. \<to be filled by people working on the subject\>. References:; #26 (mask); #800 (eigen); #1350 (visitors); #1341 (api); #1636 (getJ, getK)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2119:84,mask,mask,84,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2119,1,['mask'],['mask']
Availability,Roll back #1321 which should have been closed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1327:303,failure,failures,303,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1327,2,['failure'],['failures']
Availability,"SOFA with OpenGL adds a X11 dependency. If we compiled SOFA without OpenGL, this dependency was still there, which caused problem when compiling for a headless system (no X11 and no GL). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1370:443,failure,failures,443,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1370,2,['failure'],['failures']
Availability,"SOFA_COMPONENT_MISC_WRITESTATE_H was already used in WriteState.h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1954:611,failure,failures,611,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1954,2,['failure'],['failures']
Availability,SOFA_WITH_DEPRECATED_COMPONENTS option was declared after it was supposed to be used in SofaFramework's own CMakeLists. Therefore CMake was throwing an error at the first step [here](https://github.com/sofa-framework/sofa/blob/d3aee470bc79a017e4f3e04b608c49d16d5874a6/SofaKernel/SofaFramework/CMakeLists.txt#L26). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1452:152,error,error,152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1452,3,"['error', 'failure']","['error', 'failures']"
Availability,SPHParticleSink_obstacle.scn should be ignored. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1317:304,failure,failures,304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1317,2,['failure'],['failures']
Availability,"STLExporter had a useless dependency on VisualModelImpl.; Removing it removes the need on SofaBaseVisual for SofaExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2039:667,failure,failures,667,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2039,2,['failure'],['failures']
Availability,"Same as PR #284 but without the unwanted merge commits. Small fix related to issue #114 . Have tested the compilation without the flag SOFA_INSTALL_RESOURCES_FILES (which is set by default), Sofa.ini and installedSofa.ini, which are necessary for build and install, are well created. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/291:540,failure,failures,540,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/291,2,['failure'],['failures']
Availability,"Scene checkers were located in the SofaGraphComponent (even if they were not components themselves....); So they needed to be moved out of it.; The first idea was to move them to Sofa.Simulation as they related to the simulation itself (or rather its initialization).; But scene checking could need dependencies on components themselves (in this case, it needs the contact manager from Sofa.Component.Collision.Response.Contact, and APIVersion from Sofa.Component.SceneUtility); So finally a library was created into ~~applications/plugins, even if it is not really a plugin in the sofa-way of thinking (aka a set of components)~~ Sofa/plugins because it is not in Component or framework, but it could be placed in Sofa/ directly (where GUI is as well). As usual, a compat layer has been added to warn devs of the move. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2960:1364,failure,failures,1364,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2960,2,['failure'],['failures']
Availability,"SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins.; Your scene may not work on a sofa environment with different pre-loaded plugins.; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn):; <RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components [MeshExporter, ]-->; <RequiredPlugin pluginName='SofaGeneralSimpleFem'/> <!-- Needed to use components [HexahedralFEMForceField, ]-->. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SofaViewer] QtViewer::keyPressEvent, CONTROL pressed; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins.; Your scene may not work on a sofa environment with different pre-loaded plugins.; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn):; <RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2451:5577,ERROR,ERROR,5577,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2451,1,['ERROR'],['ERROR']
Availability,"SceneChecks were isolated in a project. But we may want that plugins add their own SceneCheck. An example with MultiThreading is provided here. The class `SceneCheck` is now available in Sofa.Simulation.Core. Tools to register a SceneCheck are also available in the module. The newly introduced SceneCheck checks if there are opportunities to use a multi-threaded component. It advices the user with a message looking like:. ```; [SUGGESTION] [SceneCheckMultithreading] This scene is using components implemented sequentially while a parallel implementation is available. Using the parallel implementation may improve the performances. Here is the list of sequen; tial components in your scene and their parallel equivalent:; BVHNarrowPhase -> ParallelBVHNarrowPhase; BruteForceBroadPhase -> ParallelBruteForceBroadPhase; HexahedronFEMForceField[Vec3d] -> ParallelHexahedronFEMForceField[Vec3d]; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3597:174,avail,available,174,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3597,5,"['avail', 'failure']","['available', 'failures']"
Availability,"SceneCreator/SceneCreatorConfig.cmake; 1>CMake Error at applications/plugins/CImgPlugin/cmake_install.cmake:38 (file):; 1> file cannot create directory:; 1> C:/projects/sofa-build/$C:/projects/sofa-build/install/plugins/CImgPlugin/bin.; 1> Maybe need administrative privileges.; 1>Call Stack (most recent call first):; 1> applications/plugins/cmake_install.cmake:37 (include); 1> cmake_install.cmake:88 (include); 1>; 1>; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: The command ""setlocal; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: ""C:\Program Files\CMake\bin\cmake.exe"" -DBUILD_TYPE=Release -P cmake_install.cmake; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmErrorLevel; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: exit /b %1; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmDone; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd; 1>C:\Program Files (x86)\Microsoft Visu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:2792,error,error,2792,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,2,['error'],"['error', 'errorlevel']"
Availability,"Second and last task about https://github.com/sofa-framework/sofa/issues/2483. Contains #2531. Create a new plugin SofaNewmat with ; - newmat lib itself; - NewmatMatrix and NewmatVector (and their tests); - LULinearSolver (only compatible with NewmatMatrix); ; Add a ""compatibility"" layer (tricky because SofaNewmat is optional; Update ComponentChange; Remove newmat usage in image plugin. Fix #2483 . Change the template of CGLinearSolver in the BeamLinearForceField because I dont see why we would need to run it with newmat matrices. It results with a very slight difference on the DOF positions. [ci-depends-on https://github.com/sofa-framework/Regression/pull/21]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2532:1214,failure,failures,1214,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2532,2,['failure'],['failures']
Availability,See #1180 for details. Fixes #1180; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1182:292,failure,failures,292,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1182,2,['failure'],['failures']
Availability,See #1271 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1272:268,failure,failures,268,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1272,2,['failure'],['failures']
Availability,"See #2641 and especially https://github.com/sofa-framework/sofa/pull/2641#issuecomment-1036695510. @EulalieCoevoet could you try this branch to make sure it fixes the error ? Thanks !. (NOTE: I did not revert the PR itself as there are some welcoming cleanings). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2699:167,error,error,167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2699,3,"['error', 'failure']","['error', 'failures']"
Availability,"See #4532 to review readable changes.; In addition, this PR removes the entire `Sofa/Component/Compat` layer.; This PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]; [ci-depends-on https://github.com/sofa-framework/Registration/pull/12]; [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/6]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4533:1032,failure,failures,1032,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533,2,['failure'],['failures']
Availability,"See doc https://cmake.org/cmake/help/latest/manual/cmake-presets.7.html. It gives 3 different presets similarly to what we are used to on the CI. The idea is the same (3 different config) but it cannot mimic it perfectly. For example, the CI checks if dependencies are available before setting a variable. It is not possible with presets. An example of CMakeUserPresets.json I use: https://gist.github.com/alxbilger/bee1135fbe222943906d0f595699c1a3. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3305:269,avail,available,269,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3305,3,"['avail', 'failure']","['available', 'failures']"
Availability,"See https://github.com/sofa-framework/LMConstraint and https://github.com/sofa-framework/sofa/pull/2508. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2828:649,failure,failures,649,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2828,2,['failure'],['failures']
Availability,"See https://json.nlohmann.me/api/basic_json/error_handler_t/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4900:606,failure,failures,606,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4900,2,['failure'],['failures']
Availability,See issue #784 : Quadractic complexity in BarycentricMapping ; This PR depends on PR #797: Cleaning and refactoring of BarycentricMapping. In this PR the initialization of BarycentricMapping (for topology container only) is optimized using spatial hashing. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/798:515,failure,failures,515,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/798,2,['failure'],['failures']
Availability,"See issue: https://github.com/sofa-framework/sofa/issues/338; The Rayleigh parameters (Rayleigh mass and stiffness) are used for numerical dumping in the simulation. However, most integration schemes (OdeSolvers) in SOFA use NON-ZERO default values. This commit fixes this.; The user must be aware of its dumping parameters, now : ; - default rayleighMass=0.0; - default rayleighStiffness=0.0. To avoid breaking all scenes, this PR also updates (where needed) the rayleighMass and; rayleighStiffness parameter (set to 0.1 like previous default values). NOTE : a script is available for updating all your own scenes if needed (script/update-scenes-rayleighcoeff.sh). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/350:572,avail,available,572,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/350,3,"['avail', 'failure']","['available', 'failures']"
Availability,"See the list of commit for a description of the changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4185:601,failure,failures,601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4185,2,['failure'],['failures']
Availability,"See; - #4429. (+ add registration from missing components sceneutility and engine.transform). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5055:638,failure,failures,638,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5055,2,['failure'],['failures']
Availability,"See; - #4429. EDIT:; Based on ; - #4863 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4858:586,failure,failures,586,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4858,2,['failure'],['failures']
Availability,"See; - #4429. [ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/143]; [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/458]; [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/305]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5012:775,failure,failures,775,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5012,2,['failure'],['failures']
Availability,"See; - #4429. [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/302]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4976:626,failure,failures,626,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4976,2,['failure'],['failures']
Availability,"See; - #4429. [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/306]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5033:626,failure,failures,626,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5033,2,['failure'],['failures']
Availability,"See; - #4429. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/462]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5052:630,failure,failures,630,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5052,2,['failure'],['failures']
Availability,"See; - #4429. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/463]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5053:630,failure,failures,630,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5053,2,['failure'],['failures']
Availability,"See; - #4429. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4930:558,failure,failures,558,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4930,24,['failure'],['failures']
Availability,"See; - #4429. some works still need to be done in the future to avoid calling a singleton for the ObjectFactory. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5098:657,failure,failures,657,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5098,2,['failure'],['failures']
Availability,Segmentation Fault when loading SofaPython3.dll,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1672:13,Fault,Fault,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1672,1,['Fault'],['Fault']
Availability,"Set of fixes for warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2140:571,failure,failures,571,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2140,2,['failure'],['failures']
Availability,"Set worker threads to idle state when there are no more tasks to execute.; It should fix the problem of the CPU busy when the simulation is not running raised in PR #1862 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1997:717,failure,failures,717,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1997,2,['failure'],['failures']
Availability,"Setting the background color with the component BackgroundSetting wasn't working anymore, because in PR #1758 the test changed from:. ```cpp; else if (_background==2); glClearColor(backgroundColour[0],backgroundColour[1],backgroundColour[2], 1.0f);	 ; ```; to: . ```cpp; else if (_background==3); glClearColor(backgroundColour[0],backgroundColour[1],backgroundColour[2], 1.0f);	; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1826:929,failure,failures,929,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1826,2,['failure'],['failures']
Availability,"Setup for the Sofa.Type module which will contain classes like Vec, Mat, etc.; Empty for now (just an init() ) and is set as a dependency for SofaHelper. (was before in #1553 but decided to split it). Issue #1521 ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - builds with SUCCESS for all platforms on the CI.; - does not generate new warnings.; - does not generate new unit test failures.; - does not generate new scene test failures.; - does not break API compatibility.; - is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1555:459,failure,failures,459,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1555,2,['failure'],['failures']
Availability,Several changes and fix from my master branch:; - Fix: Duplicate declaration of Data in MechanicalObject; - Fix: the graph display of topologyData.; - Replace serr by msg_error and put some methods and parameter from private to protected in SofaMeshCollision classes; - Add: missing generic methods in MeshTopology; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/953:572,failure,failures,572,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/953,2,['failure'],['failures']
Availability,"Several changes from my working branch:; - **TopologicalMapping**: Add method checkTopology. Can be called from outside the component. Need to be overwritten by children. Implement only the tetra2TriangleTopologicalMapping version.; - **Quad2TriangleTopologycalMapping**, **Hexa2TetraTopologicalMapping**, **Hexa2QuadTopologicalMapping**: clean component init and model check in methods.; - **MeshTopology**: reorder methods declaration in header for clarity.; - **EdgeSetTopologyContainer**, **TriangleSetTopologyContainer**, **TetrahedronSetTopologyContainer**: Improve checkTopology methods in container.; - **Mat**, **MatSym**: Improve invertMatrix error logs. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/999:653,error,error,653,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/999,3,"['error', 'failure']","['error', 'failures']"
Availability,Several changes in PluginManager:; - Add check to avoid registering the same plugin from different paths; - Change method getPlugin to look in the map of registered plugin using the plugin name instead of using a reconstructed path. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1472:489,failure,failures,489,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1472,2,['failure'],['failures']
Availability,Several crashes possible in Tetra2TriangleTopologicalMapping when removing tetrahedron.; - When removing the last elements; - When using noInitialTriangles or noNewTriangles options. Will fix issue #954 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/960:461,failure,failures,461,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/960,2,['failure'],['failures']
Availability,"Several fixes:; - TriangleFEMForcefield : wrong init value for strainDisplacement; - TriangularFEMForceField: strainDisplacement not updated at each timestep and using rest Triangle area like in TriangleFEMForceField; - Enable the 2 tests which same value references for TriangleFEMForcefield and TriangularFEMForceField:; checkTriangularFEMForceField_init; checkTriangularFEMForceField_values. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2275:939,failure,failures,939,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2275,2,['failure'],['failures']
Availability,"Several improvments regarding principal stress computation in `TriangularFEMForceFieldOptim`:; - Add Data `d_computePrincipalStress` to force the computation no matter if stress vector is displayed or not.; - Move the computation out from the draw loop, in addForce if `d_computePrincipalStress` or `d_showStressVector` is true; - Store principal stress info into the TriangleInfo structure so it can be accessed outside from the component; - Update drawing to use arrow with color orientation.; - Add Data `d_showStressThreshold` to display only vectors above a threshold. ![image](https://github.com/sofa-framework/sofa/assets/21199245/9da6ebe5-38b7-4e3a-a37c-7d25fc8724f4). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4027:1221,failure,failures,1221,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4027,2,['failure'],['failures']
Availability,"Several plugins out-sourced:; - [SixenseHydra](https://github.com/sofa-framework/SixenseHydra); - [Xitact](https://github.com/sofa-framework/Xitact); - [Haption](https://github.com/sofa-framework/Haption) ; - [Sensable](https://github.com/sofa-framework/Sensable); - [SensableEmulation](https://github.com/sofa-framework/SensableEmulation); - [LeapMotion](https://github.com/sofa-framework/LeapMotion); - [Geomagic](https://github.com/sofa-framework/Geomagic). Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4575:1068,failure,failures,1068,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4575,2,['failure'],['failures']
Availability,Several warning types:; - uint/int conversion; - bad init order; - missing break; - unused variables. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/873:358,failure,failures,358,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/873,2,['failure'],['failures']
Availability,"ShewchukPCGLinearSolver is not an ODE solver. Instead, the scenes examples/Components/linearsolver/FEMBAR-ShewchukPCGLinearSolver.scn and in the folder examples/Components/linearsolver/preconditioner shows how to use this component. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2726:777,failure,failures,777,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2726,2,['failure'],['failures']
Availability,Short fix in main CMakeList regarding compilation with other than Win; CPackNSIS preventing from compiling. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/867:364,failure,failures,364,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/867,2,['failure'],['failures']
Availability,"Should fix #2486 (at least it was working for me :p ). The InteractionPerformerFactory was instantiated in SofaUserInteraction but not exported so I suppose other dlls using this factory was created their own InteractionPerformerFactory (creating discrepancies between the various registations) ; This is valid only for Windows (Mac/Linux is not using this import/export mechanism). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2495:927,failure,failures,927,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2495,2,['failure'],['failures']
Availability,"Should fix a failing unit test: https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/3799/testReport/UnitTests/. The [dynamic_cast](https://github.com/sofa-framework/SofaPython3/blob/05195cd49b6db0dd028f1163ac407d459f6156f6/bindings/Modules/src/SofaPython3/SofaConstraintSolver/Binding_ConstraintSolver.cpp#L69) failed in:; ```cpp; py::cast(dynamic_cast<ConstraintSolverImpl*>(object));; ```. This is due to the lack of key function in the class ConstraintSolverImpl. See ; https://github.com/android/ndk/issues/533#issuecomment-335977747. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3240:1150,failure,failures,1150,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3240,2,['failure'],['failures']
Availability,Should fix crash and error on scenes:; - SimpleBox-Method2.scn; - testOmniDriverEmu.scn; - /scene-tests/archive/examples/Tutorials/Topologies/TopologyTetra2TriangleTopologicalMapping.scn. Fix unit test:; - ReadState_test.test_loadFailure. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/982:21,error,error,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/982,3,"['error', 'failure']","['error', 'failures']"
Availability,"Should fix issue #3750. In this PR : ; - minor cleaning : set the default value to `d_indexFromRoot` in init(); - checks size of `m_fromRoot` wrt to `d_indexFromRoot`, if `d_indexFromRoot` is out of bounds, uses default value instead.; - typo? : I think there was a typo at line 534, for me it should be `xfromRoot[indexFromRoot]` instead of `xto[indexFromRoot]`. It makes more sense to me. Could be double checked. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3751:960,failure,failures,960,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3751,2,['failure'],['failures']
Availability,"Should fix out-of-tree errors like https://github.com/guparan/SofaPython3/runs/7896706218?check_suite_focus=true; To be backported asap. [ci-depends-on https://github.com/sofa-framework/SofaGLFW/pull/57]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3229:23,error,errors,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3229,3,"['error', 'failure']","['errors', 'failures']"
Availability,"Should fix your infinite build issue @alxbilger :eyes: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2310:601,failure,failures,601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2310,2,['failure'],['failures']
Availability,"Showcase of a pure cpp application with direct usage of components.; Replace glut with sofalgfw (dependency).; Can be built out-of-tree. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2792:681,failure,failures,681,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2792,2,['failure'],['failures']
Availability,"Showcase, not supposed to be merged as it is.; (prone to discussion at sofameetings). This PR is a prototype on how exception would be used with the example of the matrix functions invert(). (Issue #1924 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1882:751,failure,failures,751,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1882,2,['failure'],['failures']
Availability,Signed-off-by: duriez <christian.duriez@inria.fr>. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/844:307,failure,failures,307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/844,2,['failure'],['failures']
Availability,Significant improvement.; Just removing msg coming in the console in release due to CTRL key pressed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1130:358,failure,failures,358,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1130,2,['failure'],['failures']
Availability,"Silence the -Wattribute warning because of its verbosity g++.; It was supposed to be in pr #1643 but it appears to have been lost somehow... so this PR add it again. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1657:712,failure,failures,712,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1657,2,['failure'],['failures']
Availability,"Similar code is factorized to be reused. Also, in `AnimationLoopParallelScheduler`, I replaced the use of the class `StepTask` by a lambda function. Since it is no longer used, I deprecated the `StepTask` class. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3607:756,failure,failures,756,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3607,2,['failure'],['failures']
Availability,"Similar scenes are introduced as a benchmark in order to compare their performances.; It's a cantilever beam simulated with 2.5k tetrahedra.; Depending on the scene, it is solved with either a Conjugate Gradient or a LDL solver.; The main difference is how the global system matrix is assembled (or not in case of a matrix free solver). This is defined by the template parameter of the linear solver. # Results. The results are the average duration in milliseconds of the AnimateVisitor step:. ```; MatrixAssembly_assembledCG_blocs.scn 6.54 ms; MatrixAssembly_assembledCG.scn 16.65 ms; MatrixAssembly_direct_blocs.scn 12.85 ms; MatrixAssembly_direct.scn 22.04 ms; MatrixAssembly_matrixfreeCG.scn 7.99 ms; ```. * MatrixAssembly_matrixfreeCG.scn: the linear solver is a Conjugate Gradient and the matrix is not built; * MatrixAssembly_assembledCG.scn: the linear solver is a Conjugate Gradient and the matrix is explicitly built; * MatrixAssembly_assembledCG_blocs.scn: the linear solver is a Conjugate Gradient and the bloc-based matrix is explicitly built; * MatrixAssembly_direct.scn: the linear solver is a LDL solver and the matrix is explicitly built; * MatrixAssembly_direct_blocs.scn: the linear solver is a LDL solver and the bloc-based matrix is explicitly built. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2208:1816,failure,failures,1816,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2208,2,['failure'],['failures']
Availability,"Similar to #2322, but in the profiler. Buttons collapse or expand the displayed tree of timers.; ![image](https://user-images.githubusercontent.com/10572752/134161374-9985c29b-d864-4900-a9ac-a5e27a59c964.png). Note that those two buttons add extra space on top of the tree widget, but not so much because there was already an empty spacer here. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2351:889,failure,failures,889,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2351,2,['failure'],['failures']
Availability,"Similar to TetrahedronFEMForceField, compute von mises per element and add option to draw it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4945:638,failure,failures,638,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4945,2,['failure'],['failures']
Availability,"Similar to https://github.com/sofa-framework/sofa/pull/3650; To make it compatible with Cuda 12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3868:641,failure,failures,641,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3868,2,['failure'],['failures']
Availability,"Similar to https://github.com/sofa-framework/sofa/pull/4720. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4721:605,failure,failures,605,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4721,2,['failure'],['failures']
Availability,"Similar to work done for triangles. Add tests on:; - Component creation; - Component init without topology; - Component init with empty topology; - checkDefaultAttributes; - check Wrong Attributes; - Check values at init; - Check values during simulation; - Check vertex position at init and after some steps. **Not all tests are activated** for `TetrahedronFEMForceField`, `CorotationalTetrahedralForceField `and `FastTetrahedralCorotationalForceField` because some are failing for now. . This PR doesn't change the behavior of the FEM, this will be done in next PR. ; This PR add tests to ensure the current behavior won't be broken in the incoming work. . ----- . Logs at this stage for 1000 steps of an horizontal fixed beam (resolution: 8x26x8). ; Average values of 6 executions of 4 successive simulations. | **ForceField** | **timeMin** | **timeMax** | **timeMean** |; | ------------- | ------------- | ------------- | ------------- |; | `TetrahedronFEMForceField` | 8.402152 | 8.643823 | 8.491758 |; | `TetrahedralCorotationalFEMForceField` | 13.79633 | 14.15237 | 13.96938 |; | `FastTetrahedralCorotationalForceField` | 5.71298 | 5.8269 | 5.772838 |. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2842:1704,failure,failures,1704,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2842,2,['failure'],['failures']
Availability,"Similarly to SparseLDLSolver own exporter, it is now possible to set the arithmetic precision of the matrix export. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2724:660,failure,failures,660,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2724,2,['failure'],['failures']
Availability,"Similarly to Vec implementation, add a NoInit constructor for Quat and a type QuatNoInit<Real>. Speedup is minor compare to Mat and Vec of big size but still it makes a small diff when working with several Quat in loops. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3217:765,failure,failures,765,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3217,2,['failure'],['failures']
Availability,"Simple PR to clean up DeformableOnRigidFrameMapping, during DEFROST team coding friday. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/848:344,failure,failures,344,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/848,2,['failure'],['failures']
Availability,"Simple add to make sure the return value corresponds to the package found (qt5 or 6). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2346:630,failure,failures,630,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2346,2,['failure'],['failures']
Availability,"Simple as is the title, namely:. - MeshTopology instead of Mesh; - PointCollisionModel instead of: Point, TPointModel, PointModel, PointMesh, PointSet; - LineCollisionModel instead of: Line, TLineModel, LineMeshModel, LineSetModel, LineMesh, LineSet, LineModel; - TriangleCollisionModel instead of: Triangle, TriangleSet, TriangleMesh, TriangleSetModel, TriangleMeshModel, TriangleModel, TTriangleModel; - SphereCollisionModel instead of: Sphere, SphereModel, TSphereModel; - CapsuleCollisionModel instead of: Capsule, CapsuleModel, TCapsuleModel; - CubeCollisionModel instead of: Cube, CubeModel; - CylinderCollisionModel instead of: Cylinder, CylinderModel; - RayCollisionModel instead of: Ray, RayModel; - TetrahedronCollisionModel instead of: Tetrahedron, TetrahedronModel; - EulerExplicitSolver instead of: Euler, EulerExplicit, ExplicitEuler, EulerSolver, ExplicitEulerSolver; - CGLinearSolver instead of CGSolver, ConjugateGradient; - SparseGridTopology instead of SparseGrid; - SVDLinearSolver instead of SVD, SVDSolver; - FreeMotionAnimationLoop instead of ; - DampVelocitySolver instead of DampVelocity. just you @epernod . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1292:1390,failure,failures,1390,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1292,2,['failure'],['failures']
Availability,"Simple change so isDiagonal is now const.; However, this PR is also to discuss the utility of this function. I did not found any usage of it. Should we keep it?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1903:706,failure,failures,706,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1903,2,['failure'],['failures']
Availability,Simple cleaning. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/856:273,failure,failures,273,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/856,2,['failure'],['failures']
Availability,"Simple fixes and improvements while wandering in SOFA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2667:599,failure,failures,599,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2667,2,['failure'],['failures']
Availability,"Simple for a summer restart !. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2294:575,failure,failures,575,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2294,2,['failure'],['failures']
Availability,"Simple move of example files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1778:574,failure,failures,574,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1778,2,['failure'],['failures']
Availability,"Simple, fast-merge :sunglasses: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1484:290,failure,failures,290,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1484,2,['failure'],['failures']
Availability,"SimpleApi feature is not really related to Simulation.Graph (even if it has a dependency on it); So it was decided to make its own module for it, aka **Sofa.SimpleApi**. Actually it was already using the sofa::simpleapi namespace so this move is making the code more consistent. There is a compatibility layer but if the user was relying only on Simulation,Graph (instead of Sofa.Testing for example) to use SimpleApi, it will break. But the user will be informed on how to fix the break nevertheless. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/397]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4495:1118,failure,failures,1118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4495,2,['failure'],['failures']
Availability,"Simply add an example scene for the THMPGSpatialHashing plugin. No scene were available. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2148:78,avail,available,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2148,3,"['avail', 'failure']","['available', 'failures']"
Availability,"Simply change the keyboard shortcut associated to camera mode: M key instead of Space key, because the latter is already used to interact with the GUI buttons.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/997:417,failure,failures,417,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/997,2,['failure'],['failures']
Availability,Simply remove a useless if block. Related to : https://github.com/sofa-framework/sofa/issues/535; Fixes #535 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/590:367,failure,failures,367,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/590,2,['failure'],['failures']
Availability,"Simply remove all lines in scenes (scn) including a DefaultCollisionGroupManager. `$ find . -type f -name ""*.scn"" -exec sed -i '/DefaultCollisionGroupManager/d' {} +`. [ci-depends-on https://github.com/sofa-framework/Regression/pull/30]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3104:782,failure,failures,782,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3104,2,['failure'],['failures']
Availability,Since #638 the PR breaks some #ifdef.; Here is fix for the #inclusion problem and a pattern to avoid this kind of problem to be repeated. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/672:396,failure,failures,396,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/672,2,['failure'],['failures']
Availability,"Since BoxROI supports 2D and 1D data types, it can lead to undefined behavior, due to out-of-range access.; This PR fixes them.; Oriented bounding box are not supported in 2D and 1D. A future PR could add the support in 2D. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2604:768,failure,failures,768,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2604,2,['failure'],['failures']
Availability,"Since C++11, it is possible to declare a variable with one copy per thread with the keyword `thread_local`. The consequence is that the code in `thread_specific_ptr.h` could be deprecated as it is not used anywhere else (not in this PR). Bonus: remove a memory leak. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3422:811,failure,failures,811,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3422,2,['failure'],['failures']
Availability,"Since CRS matrix are now optimized when inserting a 3x3 block, it is no longer necessary to have branches in force fields, where a branch is selected based on the type of matrix.; The virtual call to `add` is generic, but leads to the optimized matrix insertion. I did not notice any significant performances changes in the scenes located in `examples\Benchmark\Performance\MatrixAssembly`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2323:935,failure,failures,935,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2323,2,['failure'],['failures']
Availability,"Since SOFA is no modeler, remove the New option form the GUI as pointed out in #4520; However, the code in RealGUI.cpp remains. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4523:672,failure,failures,672,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4523,2,['failure'],['failures']
Availability,"Since SofaNG, cmake was again slow to configure (especially on Windows); After investigation, the previous sofa_find_package() was nulliified in #3120 , and I dont really see why. And the associated commit message is not informative https://github.com/sofa-framework/sofa/pull/3120/commits/8a3ae2dacc1bdff9be83aee15744a37e21eb0054. Bringing it back bring the config time from ~18s to 4.5s on Windows/MSVC generator on a minimal preset (all framework + comonents+ GL + GUI); (Manjaro/ninja generator go from 4 to 2.5s); So it is quite nice all in all 🥸. Trace: (orange part is time for `find_package()`); Before: ![cmake1](https://user-images.githubusercontent.com/11028016/195506545-32c3d4db-b6b2-4500-a3fb-dce59da50c53.png); After: ![cmake2](https://user-images.githubusercontent.com/11028016/195506607-e6ede1f9-c5fd-497d-bd4f-dd4832da918a.png). Install procedure should not be impacted, as the cmake.in files are not touched. \+ this PR fixes some missing sofa_find_package() here and there. Lets see if the CI confirms if https://github.com/sofa-framework/sofa/pull/3120/commits/8a3ae2dacc1bdff9be83aee15744a37e21eb0054 was only a mistake; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3382:1687,failure,failures,1687,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3382,2,['failure'],['failures']
Availability,"Since a few updates of MSVC2019, it is not possible anymore to have at the same time a directory and a target with the same name and in the same level. ; For example, SofaBase (containing all the SofaBase targets) and SofaBase (the target). MSVC complains that it cannot create the SofaBase target and thus, it is not possible de compile it... which is a bit bothersome 🤔. So this PR moves (in an IDE-way) the target into their respective directory (SofaBase in the SofaBase directory, SofaSimulation/SofaFramework/SofaGui same). And it makes more sense to set it like that anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2239:1126,failure,failures,1126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2239,2,['failure'],['failures']
Availability,"Since beams simulation is an important feature of SOFA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4253:600,failure,failures,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4253,2,['failure'],['failures']
Availability,"Since https://github.com/sofa-framework/sofa/pull/2281, it is no longer necessary to force the optimization of the matrix assembly based on the type of the matrix using a dynamic_cast.; This PR removes it for TorsionForceField. Note that there is no example for this component. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2859:822,failure,failures,822,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2859,2,['failure'],['failures']
Availability,"Since it has no significant added computational costs, I suggest to activate the export of lambda forces by default, i.e. set the `computeConstraintForces` data to true by default. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3857:725,failure,failures,725,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3857,2,['failure'],['failures']
Availability,"Since it is now possible to export a system matrix from any solver, the matrix export included in SparseLDLSolver is no longer required. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2725:681,failure,failures,681,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2725,2,['failure'],['failures']
Availability,"Since it's annoying every single user and developer!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3153:598,failure,failures,598,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3153,2,['failure'],['failures']
Availability,"Since state accessors work closely with a mstate, it seems logical that they inherit the same bbox.; Note that the mstate must be visited before the accessor in `UpdateBoundingBoxVisitor`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2780:733,failure,failures,733,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2780,2,['failure'],['failures']
Availability,"Since the 05/06, there are no GUI available on Ubuntu on the master branch.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3006:34,avail,available,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3006,1,['avail'],['available']
Availability,"Since the big refactoring from Sofa NG (https://github.com/sofa-framework/sofa/wiki/SOFA-NG:-documentation-on-transition), unit tests fail when the compatibility layer is not compiled, because they rely on the old modules. An example of failure:. ```; Sofa\Component\IO\Mesh\tests\STLExporter_test.cpp(79): error: Failed; A message of type 'Error' was not expected but it was received. ; ====================== Messages =======================; [RequiredPlugin]: ; Message type : Error; Message content: Plugin not found: ""SofaLoader""; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3389:237,failure,failure,237,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3389,4,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,"Since the components are explicit formulations, they don't contribute into an implicit scheme.; A task from #3967. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4000:659,failure,failures,659,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4000,2,['failure'],['failures']
Availability,"Since users often copy paste examples, let's show good scene habits: when modeling volumetric, the MeshMatrixMass should be used instead. I guess this will trigger the regression tests (but I need to recompile regression first, so I give the CI a chance :) ). [ci-depends-on https://github.com/sofa-framework/Regression/pull/64]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4687:874,failure,failures,874,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4687,2,['failure'],['failures']
Availability,"Small (and first) Pullrequest to add several methods in plugin SceneCreator:. - to add basic 3D object: Cube, Cylinder, Plane. In rigid or deformable.; - also add an executable sceneCreatorExamples to run simple examples using those methods.; - Minor changes in TriangularFEM and CylindricalGrid to use those components. This PR: ; - [x] succeed on each compilation setup on the CI; - [x] does not generates new warnings or test failure; - [x] does not seems to break existing scenes.; - [x] does not seems to break API compatibility. ; - [x] clean stuff; - [x] is now 1 week old and no one send a 'no go' comment. ; - [x] have tests on the introduced features.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/133:429,failure,failure,429,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/133,1,['failure'],['failure']
Availability,"Small PR on GridTopology and RegularGridTopology link to issue: #163. - Allow to set RegularGridTopology in 1,2 or 3 dimension. But still check if the grid resolution is valid.; - Fix example of Tetrahedron FEM that was crashing if no tetrahedron is found in the scene.; - Add an example scene.; - Remove RegularGridTopology dependencies from MechanicalObject. CHANGELOG:; - GridTopology ; - clean the code & factor the constructor; - implement ""flat"" grids in 1 or 2 dimension by using setting grid resolution to ""1"" in the corresponding axis; - RegularGridTopology clean the constructor's code & remove NDEBUG code. ; - Adds RegularGridTopology_test; - TetrahedronFEMForceField clean code; - MechanicalObject removes code that was specific to the grid. ; - Adds new examples scenes called: ; examples/Components/topology/Hexa2TetraTopologicalMapping.scn; examples/Components/topology/RegularGridTopology_dimension.scn; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/270:1151,failure,failures,1151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/270,1,['failure'],['failures']
Availability,Small PR on the pickHandler class.; ADD: several tests on pointers != null before accessing them. ; ADD: default ray length parameter in the constructor.; UPDATE: replace most of the .h include in the header by forward classes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/522:484,failure,failures,484,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/522,2,['failure'],['failures']
Availability,"Small PR to : ; - ~~remove useless header~~ (and then remove one dependency on SofaBaseTopology) (see discussion #242 ) (actually instead of removing, I used an existing #ifdef macro); - add forgotten Windows macro to export specialized functions into DLLs. This should not break any API compatibility or compilation (hopefully). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/249:560,failure,failures,560,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/249,1,['failure'],['failures']
Availability,Small PR to :. 1. Add more tests and error messages if **ArticulatedSystemMapping** init or bwdinit failed. ; 2. Check if **articulatedCenter** has been found in **ArticulatedHieararchyContainer**.; 3. Fix warning when drawing JointSpringFF lines and Update the warning message to be more understandable. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1448:37,error,error,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1448,3,"['error', 'failure']","['error', 'failures']"
Availability,"Small PR to allow compilation of SofaCUDA plugin with SOFA_NO_OPENGL flag (i.e disabling OpenGL); Remarks:; - The components' draw() functions in SofaCUDA should share their code with their ""normal"" version.; For example, CudaUniformMass with cudarigid3f should call the draw() of UniformMass<Rigid3>; Some work has to be done further in Sofa itself, that's why I just add preprocessor tests (#ifdef SOFA_NO_OPENGL) and did not use the drawtool functions 👅 ; - Obviously, if you compile without OpenGL, you wont be able to share OpenGL buffer in CUDA. In other words it is useless to use CudaVisualModel without SOFA_NO_OPENGL.; (Actually CudaVisualModel should be renamed CudaOglModel). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1242:944,failure,failures,944,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1242,2,['failure'],['failures']
Availability,Small PR to fix SofaPhysicsAPI compilation broken due to changes done in sofa main API on:. - helper::io::Image; - GUIManager::RegisterGUI. Maybe this project should be added to one of the vm of the dashboard?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/549:467,failure,failures,467,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/549,2,['failure'],['failures']
Availability,Small PR to fix two unneeded dependencies :-). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/588:303,failure,failures,303,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/588,2,['failure'],['failures']
Availability,"Small batch from Sofa-NG:; - FixedConstraint ; - remove useless dep on SparseMatrix (thus on SofaBaseLinearSolver); - remove other useless includes; - ContactIdentifier ; - use C++17 static inline initialization (solve export symbol problem); - move ctor/dtor definition into the cpp . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2255:830,failure,failures,830,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2255,2,['failure'],['failures']
Availability,Small changes found in my dev branch:; 1. clean various type mismatch warnings in **SofaBaseVisual** classes; 2. Clean some unnecessary/deprectated header includes in **SofaDeformable** classes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1449:451,failure,failures,451,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1449,2,['failure'],['failures']
Availability,Small changes to prepare to compile with stdc++17.; * weird problem with byte keyword (introduced with std::byte); * removal of binary_function in c++17 (already deprecated in c++11 actually). Final compatibility with c++17 will need the merge of #1101 (problem with Eigen) and a small change with CMake (CMAKE_CXX_STANDARD 17); waiting for the CI to be fully compatible. EDIT: had to update googletest as well because of new STL's things.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1162:697,failure,failures,697,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1162,2,['failure'],['failures']
Availability,"Small cleaning, replacing sout and serr by msg_info, dmsg_info or msg_error. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1234:333,failure,failures,333,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1234,2,['failure'],['failures']
Availability,"Small cleanings for the BeamFEMForceField :; - Use read and write accessors; - Make the data `youngModulus`, `radius` and `radiusInner` required to explicit the fact that BFFF only focuses on circular sections. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3887:755,failure,failures,755,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3887,2,['failure'],['failures']
Availability,"Small fix for GenericWidgets additional closing brackets (issue #2019 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2020:617,failure,failures,617,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2020,2,['failure'],['failures']
Availability,"Small fix related to issue #114 . Have tested the compilation without the flag `SOFA_INSTALL_RESOURCES_FILES` (which is set by default), Sofa.ini which is necessary is well created. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/284:438,failure,failures,438,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/284,2,['failure'],['failures']
Availability,Small fix to allocate memory on cuda_device much faster for large vectors. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1142:331,failure,failures,331,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1142,2,['failure'],['failures']
Availability,"Small fix, after a discussion we had Christian, Hugo, Erik and I on haptic rendering. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1537:342,failure,failures,342,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1537,2,['failure'],['failures']
Availability,"Small fix, correcting the check for the multiplicity between ""time"" and dt, as well as putting period to dt by default if nothing is given by the user.; Set back to the default behavior : periodic export activated. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/776:471,failure,failures,471,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/776,2,['failure'],['failures']
Availability,Small improvement on the view of html file associated with scenes. We can now navigate (with backward) between and starting Sofa scene directly with hyperlinks. The windows can also be hidden/displayed and its location preserved. . I cannot prevent myself to also clean small things in RealGUI and SetDirectory/FileSystem. ; But this is very minor. . I made a quick & dirty video to show the results so that you don't need to compile it: ; https://youtu.be/5uumC9f-wzo. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/540:726,failure,failures,726,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/540,2,['failure'],['failures']
Availability,"Small optimizations monitored using tests: ```TriangleFEMForceField3_test, DISABLED_testTriangularFEMPerformance``` which is performing 10 successive simulations of 1000 steps of a grid of 40x40x2= 3200 triangles. Current logs (per simulation of 1000 steps):; ```; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. First quick optimisation on accessing triangle in for loop:; ```; + const Triangle& tri = m_topology->getTriangle(elementIndex);; + Index a = tri[0];; + Index b = tri[1];; + Index c = tri[2];; - Index a = m_topology->getTriangle(elementIndex)[0];; - Index b = m_topology->getTriangle(elementIndex)[1];; - Index c = m_topology->getTriangle(elementIndex)[2];; ```; Gives:; ```; timeMean : 2.40153; timeMin : 2.38573; timeMax : 2.42425; ```. Additionnal small optimization using BeginWriteOnly accessors and const ref in methods give final record:. ```; timeMean : 2.26662; timeMin : 2.23438; timeMax : 2.2895; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2273:1484,failure,failures,1484,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2273,2,['failure'],['failures']
Availability,Small patch to restore ambient component in fake sphere rendering. Was:; ![manyspheres_00000002](https://cloud.githubusercontent.com/assets/11028016/23556748/ef984e7c-002d-11e7-9346-c7208b12f44d.png). Now:; ![manyspheres_00000001](https://cloud.githubusercontent.com/assets/11028016/23556756/f77050b8-002d-11e7-948d-5605c6cd2825.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed ; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/192:565,failure,failures,565,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/192,1,['failure'],['failures']
Availability,"Small revert from #1913 ; Sofa.GL is a pure ""dll"" with no component so cannot be a ""sofa module"" (aka loadable in a scene file). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1920:673,failure,failures,673,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1920,2,['failure'],['failures']
Availability,"Snap, CImg errors on Windows are fixed :tada: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/622:11,error,errors,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/622,3,"['error', 'failure']","['errors', 'failures']"
Availability,"So I wanted to open a python file in SOFA but the terminal shows this error-; [ERROR] [SofaPython3::SceneLoader] Unable to completely load the scene from file 'filepath'; Python exception:; ModuleNotFoundError: No module named 'splib3'. I am not able to fix this error. I have SofaPython3 and STLIB plugins already added. Can't figure out how to solve. Please help!. Also, I am using windows10 , python v3.7",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2959:70,error,error,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2959,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"So far, we used the ""Interactions"" DisplayFlag in the GUI (actually named as ""InteractionForceFields"" in the list:; 1. it's confusing; 2. this name is :question: $ :exclamation: :boom: :bird: . Here is a new suggestion: :white_flower: ""ContactInteractions"" :white_flower: ; Obviously, compat and generalization in the code will be done if we agree. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3977:893,failure,failures,893,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3977,2,['failure'],['failures']
Availability,So now the object is fully valid if the transformation's data are updated. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1459:331,failure,failures,331,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1459,2,['failure'],['failures']
Availability,"So we can validate how the ObjectFactory should behave. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2696:602,failure,failures,602,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2696,2,['failure'],['failures']
Availability,Sofa is a drama in term of #include coupling which make:; - compilation time to be larger than what it should; - cost a lot in term of code maintenance. . In the future we should try to progressively improve the situation. ; This PR is a minor step toward this target. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/419:140,mainten,maintenance,140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/419,3,"['failure', 'mainten']","['failures', 'maintenance']"
Availability,"Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collis",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:4553,ERROR,ERROR,4553,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"Sofa.Gui is needed for mouse interactors and was implicitly linked through Sofa.GUI.Qt . Add it by default so SofaCUDA can be compiled even if Qt is not used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4312:703,failure,failures,703,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4312,2,['failure'],['failures']
Availability,"SofaCUDA declaration is moved out of the condition on Sofa.GL.; It is moved after VolumetricRendering, because SofaCUDA has a dependency to VolumetricRendering. Therefore, VolumetricRendering must be declared first. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3514:760,failure,failures,760,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3514,2,['failure'],['failures']
Availability,"SofaComponentAll is not deprecated but is using deprecated things.; So it is little bit confusing (especially for newcomers); This change gets all the declared modules (thanks to sofa_add_module()) ; instead of SofaCommon/SofaMisc/SofaGeneral. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1696:788,failure,failures,788,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1696,2,['failure'],['failures']
Availability,SofaExporter was a linked to SofaPython & SofaGuiQt under the PUBLIC scope while that dependency is internal & should not be exposed publicly. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/963:399,failure,failures,399,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/963,2,['failure'],['failures']
Availability,"SofaFramework is storing resources for some tests (especially for test on files).; The path to the folder is set through a define preprocessor macro **FRAMEWORK_TEST_RESOURCES_DIR** on all its modules,; if testing was enabled...; Therefore to _ALL the modules in SOFA (+plugins!)_ 😵 , as everybody needs SofaFramework.; It is does not even make sense as this macro should only be used for the *_test projects anyway.; And the last and not the least, because of that, if you switch **SOFA_BUILD_TESTS** on/off, you have to recompile _all SOFA_ **every time** 🤪. Finally, this PR:; - removes the macro from SofaFramework; - moves all the resources files into Sofa.Testing; - sets the path into a new compile-test constant (defined in Sofa.Testing/config.h) named SOFA_TESTING_RESOURCES_DIR; - add a compatibility constant with the same name as the macro to avoid breaking for people using this macro; not sure if it is really necessary though. ( and I dont know how to deprecated a macro nicely). The license text was missing in some tests as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2000:1591,failure,failures,1591,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2000,2,['failure'],['failures']
Availability,"SofaGLFW was throwing me error when saving a camera view while effectively writting the file....; It appeared that SaveFile return XML_SUCCESS (underlying value of 0) when successful.... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4884:25,error,error,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4884,3,"['error', 'failure']","['error', 'failures']"
Availability,"SofaGeneralObjectInteraction; Adding plugin SofaGeneralSimpleFem; Adding plugin SofaGeneralTopology; Adding plugin SofaTopologyMapping; Adding plugin SofaUserInteraction; Adding plugin SofaConstraint; Adding plugin SofaGeneralLoader; Adding plugin SofaExporter; Adding plugin SofaSparseSolver; SofaSparseSolver: using built-in metis library; Adding plugin SofaPreconditioner; Adding plugin SofaHaptics; Adding plugin SofaValidation; Adding plugin SofaDenseSolver; Adding plugin SofaNonUniformFem; Adding plugin SofaOpenglVisual; Adding plugin SofaMiscTopology; Adding plugin SofaMiscExtra; Adding plugin SofaMiscForceField; Adding plugin SofaMiscEngine; Adding plugin SofaMiscSolver; Adding plugin SofaMiscFem; Adding plugin SofaMiscMapping; Adding plugin SofaMiscCollision; SofaMiscModule: build all maintained sofa components.; CMake Error at /usr/share/cmake-3.15/Modules/FetchContent.cmake:903 (message):; CMake step for cxxopts failed: No such file or directory; Call Stack (most recent call first):; /usr/share/cmake-3.15/Modules/FetchContent.cmake:1006 (__FetchContent_directPopulate); modules/SofaGuiCommon/CMakeLists.txt:18 (FetchContent_Populate). Configuring incomplete, errors occurred!; See also ""/media/maxim/big-500/sofa/build/v21.12/CMakeFiles/CMakeOutput.log"".; See also ""/media/maxim/big-500/sofa/build/v21.12/CMakeFiles/CMakeError.log"".; ```. As I understand there is problem with cxxopts:; ```; if(NOT cxxopts_POPULATED); FetchContent_Populate(cxxopts); ```. ---------------------------------------------. ### Environment; ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.5 LTS; Release:	18.04; Codename:	bionic; ```. ```; gcc-11 --version; gcc-11 (Ubuntu 11.1.0-1ubuntu1~18.04.1) 11.1.0; Copyright (C) 2021 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```. Thanks!; What I'm doing wrong?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3184:3382,error,errors,3382,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3184,2,"['avail', 'error']","['available', 'errors']"
Availability,"SofaMiscCollisionConfig.cmake.in was ill-formed, so projects using it in out-of-tree builds are stuck in the cmake configuration process. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2052:682,failure,failures,682,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2052,2,['failure'],['failures']
Availability,"SofaPython could not compile without having SofaExporter.; To solve that, bindings included in SofaPython are moved into SofaExporter. Bindings should be included into their respective modules/plugins anyway. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1095:465,failure,failures,465,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1095,2,['failure'],['failures']
Availability,"SofaPython is now disabled on CI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2526:578,failure,failures,578,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2526,2,['failure'],['failures']
Availability,"SofaPython was needed into SofaTest (to enable python test) and SofaExporter for bindings. 1- then CMake had to enable SofaPython then SofaTest then SofaPython/SofaPython_test, which is quite ""bothersome"",and made the main SOFA Cmakefile cluttered.; Now if SofaTest is enabled, SofaPython will enable the use of Python_test (and not the other way around); (NB SofaPython contains a redirection for project including `SofaTest/Python_test.h`). 2- SofaExporter is a Sofa module and so, it is quite weird to have a dependency to a plugin in a module.; Now SofaPython will enable SofaExporter bindings if SofaExporter has been enabled before (and not the other way around). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1875:1214,failure,failures,1214,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1875,2,['failure'],['failures']
Availability,"SofaSimulationGraph_test was disabled since a month, this PR restores it.; (1 unit test is failing but it is on purpose). One file from SofaSimulationCore has been moved directly to SofaSimulationGraph_test, as it is only used by it and is completely related to the tests anyway. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1988:826,failure,failures,826,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1988,2,['failure'],['failures']
Availability,"SofaSphFluid was computing normals using an experimental parallel loop (brought by std::execution); Requires external Intel' s TBB library and does not really bring an significant speed-up.; So it is better to remove it to remove conditional code (as it was not compiled for Apple as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1684:835,failure,failures,835,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1684,2,['failure'],['failures']
Availability,SofaUnity-Renderer demo scene of caudeus.scn crash with errors,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4156:56,error,errors,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4156,1,['error'],['errors']
Availability,"SofaValidation seems to be a true plugin and not a collection.; This PR does not move it from the `collection` folder. Question:; - Should the module decide by itself what type of module (plugin, collection etc) it is?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3296:764,failure,failures,764,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3296,2,['failure'],['failures']
Availability,"SoftRobots uses SceneCreator for its tests, but as it is built as an out-of-tree project on our CI, libSceneCreator.so can't be found. until this PR is merged at least... . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1109:429,failure,failures,429,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1109,2,['failure'],['failures']
Availability,"Solve #1331 . For multi configuration projects (e.g Visual Studio), the macro was not checking if the directory was existing, and was copying the lib as the configuration name (which is obviously wrong 🐇 ); The fix creates the directory before copying (no need to check as CMake does not do anything if it already exists). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1347:579,failure,failures,579,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1347,2,['failure'],['failures']
Availability,Solves issue #84 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/282:275,failure,failures,275,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/282,2,['failure'],['failures']
Availability,"Some advanced timer steps also pass the node as an ""obj"" data to the timer's record. This allows one to differentiate a timer call from another one in another node. I guess one picture is worth a lot or words here:. <img width=""675"" alt=""advanced_timer_graph"" src=""https://user-images.githubusercontent.com/6951981/74366929-3e7b6800-4dd1-11ea-82de-c4631ee7e857.png"">. This PR adds these obj ids to the timer labels. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1256:672,failure,failures,672,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1256,2,['failure'],['failures']
Availability,Some bug fix from my working branch. List of fix:; - **[FixedConstraint]** fix bug when several invalid indices need to be removed. Need to parse all first and remove in a second stage.; - **[SphereModel]** FIX: display of collision sphere in wireframe mode.; - **[TetrahedronSetTopologyContainer]** FIX: triangle created with bad orientation in addTetrahedronProcess method.; - **[TriangleModel]** FIX: need to check if topology has changed and update the triangles if needed before computing triangleModel BBox; - **[PointModel]** Fix pointModel crash when removing points. need to be well resized in computeboundingtree method.; - **[SofaBaseTopology]** Add a single static trianglesOrientationInTetrahedronArray in baseMeshTopology.h and remove all the different occurences (with different values) in the cpp files. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/985:1076,failure,failures,1076,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/985,2,['failure'],['failures']
Availability,Some changes to be able to handle tetra removal. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/554:305,failure,failures,305,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/554,2,['failure'],['failures']
Availability,"Some cleaning in `CudaPointModel`, `CudaLineModel`, `CudaTriangleModel `and `CudaSphereModel`; and fix the ambiguity between Collision element model and collision element. for example:; `using CudaLine = sofa::component::collision::TLine<CudaVec3fTypes>; // collision element`; `using CudaLineCollisionModel = sofa::component::collision::LineCollisionModel<CudaVec3Types>; // collision element model`. No support of Cuda double for now. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2673:981,failure,failures,981,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2673,2,['failure'],['failures']
Availability,"Some cmake file/macros/options references the SofaNG project (codename), which is not really good for consistency IMO.; This has been rename to SOFA, as the SOFANG was merely for dev purpose. e.g, the option to enable Sofa.Component.AnimationLoop was called:; `SOFANG_ENABLE_SOFA_COMPONENT_ANIMATIONLOOP`; now it is named:; `SOFA_ENABLE_SOFA_COMPONENT_ANIMATIONLOOP`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3102:912,failure,failures,912,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3102,2,['failure'],['failures']
Availability,"Some cmake instructions became irrelevant as new requirement versions for cmake, gcc ,and clang have been defined.; So this PR merely remove the now-dead code. \+ Sofa.compat deletion from #4760 was not totally finished (add a warning at cmake configure time). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4812:805,failure,failures,805,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4812,2,['failure'],['failures']
Availability,"Some computeBBox() functions were still using numeric_limits<Real>::min() instead of lowest(). numeric_limits<T>::min() returns 0 (more precisely a value very close to it) if T is a floating-point type, whereas numeric_limits<T>::lowest() returns -inf(more precisely -max of T), which is the expected behavior in computeBBox(). http://en.cppreference.com/w/cpp/types/numeric_limits/min; http://en.cppreference.com/w/cpp/types/numeric_limits/lowest. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/634:705,failure,failures,705,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/634,2,['failure'],['failures']
Availability,"Some files had either no licence or a wrong one (GPL). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1933:599,failure,failures,599,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1933,2,['failure'],['failures']
Availability,"Some global variables with internal linkage were defined multiple times with the same symbol, and the same values. Instead, I propose to merge them into a global variable with external linkage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1950:738,failure,failures,738,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1950,2,['failure'],['failures']
Availability,"Some methods are moved into a base class. They were exactly doing the same thing in both solvers. The result is that `buildSystem` now looks very similar in both classes. It allows to better understand that both solvers do some similar things. It could be factorized again in the future. A lot of cosmetic changes. `applyCorrection` has been split into smaller functions. `build_LCP` and `build_problem_info` are factorized. `ConstraintSolver::solveConstraint` is condensed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4213:1019,failure,failures,1019,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4213,2,['failure'],['failures']
Availability,Some minor warnings and ...; FIX strange double incrementation on iterator in DefaultMultiMatrixAccessor.cpp : @ChristianDuriez @courtecuisse your review would be great !. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/364:428,failure,failures,428,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/364,2,['failure'],['failures']
Availability,"Some minus signs disappeared in #2429 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2448:584,failure,failures,584,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2448,2,['failure'],['failures']
Availability,"Some of the PRs related to https://github.com/sofa-framework/sofa/pull/2228 were wrongly added to v21.06 changelog.; They are not in the v21.06 branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2234:696,failure,failures,696,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2234,2,['failure'],['failures']
Availability,"Some overloads of the function `add` from `BaseMatrix` were hidden in derived classes (SparseMatrix, RotationMatrix, FullMatrix and DiagonalMatrix). The using-declaration asks to bring all the overloads into the scope. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2304:765,failure,failures,765,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2304,2,['failure'],['failures']
Availability,"Some pragma directive were introduced by 4548ab474f89a229f; but they work only with gcc, and generate some warnings with ; other compilers, at least msvc based on my own experience. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/447:438,failure,failures,438,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/447,2,['failure'],['failures']
Availability,"Some scenes in LMConstraint were crashing on the CI due to the facts that those scenes were expecting the plugin to be compiled with SofaDistanceGrid (necessary for the response defined as ""distanceLMConstraint"").; As the CI is not compiling the SofaDistanceGrid plugin and the scenes were not telling that they needed it, the scenes are crashing once there is a contact. This PR adds the required plugins lines where it should be needed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1817:983,failure,failures,983,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1817,2,['failure'],['failures']
Availability,"Some scenes where presenting strange behavior : no object moving; with specific numerical settings, and with some others it was; working fine. This was due to a threshold of CG met at first step; on denominator value. Now force at least one step. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/521:503,failure,failures,503,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/521,2,['failure'],['failures']
Availability,"Some tests are in a wrong place since Sofa.Type and Sofa.Testing have been created; they were still in SofaHelper and SofaDefaulttype. This PR moves some tests in their respective folders (and create their respective ${project}_test target as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1998:794,failure,failures,794,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1998,2,['failure'],['failures']
Availability,"Some unit tests are generating sofa errors w/o generating gtest errors (e.g. SofaBoundaryCondition_test). To detect such problems, I had added a msg handler that was returning a gtest error at each sofa error.; It was not good enough because some tests can generate sofa errors on purpose.; But the new implementation defeat the main purpose.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/211:36,error,errors,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/211,5,['error'],"['error', 'errors']"
Availability,Some various changes that shouldn't break things but ease the SOFA_FLOAT removal. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/864:338,failure,failures,338,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/864,2,['failure'],['failures']
Availability,"Some vector calculus are performed on normalized orthogonal vectors, and the result is also normalized. Therefore, no need to normalize it again. The proposed change avoids 2 normalizations. To be multiplied by the number of elements. It's called in `addForce`. And I suspect this is why `addForce` is faster in https://github.com/sofa-framework/sofa/pull/2550 (the branch contains the same changes only for TetrahedronFEMForceField).; In this PR, the changes are applied on all the corotational FEM I could found. I found that the function `Decompose<Real>::getRotation` is very similar to my changes. However, the resulting rotation is the transpose of the rotation needed in the FEM. Also, I did not find any use of `Decompose<Real>::getRotation`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2647:1295,failure,failures,1295,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2647,2,['failure'],['failures']
Availability,Some very simple clean ups while I was there. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1124:302,failure,failures,302,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1124,2,['failure'],['failures']
Availability,"Some work on cleaning the components SparseGridTopology and SparseGridRamicficationTopology: . - Remove commented code; - Replace sout/serr by msg macro; - Remove duplicated Data in SparseGridRamicficationTopology which inherite from SparseGridTopology ; - Fix warnings (size_t, unsued variables, ...); - Fix SparseGridTopology.scn and SparseGridRamicficationTopology.scn behavior; - Add regression_test references for both scenes and add them to the list of scene to be tested. This PR replace an old one #706 instead of merging master. This PR is only a aesthetic clean before a more complex PR to clean and factorize methods inside the components as well as removing the fileMesh loaded inside the component and use topology Data buffers. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/855:998,failure,failures,998,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/855,2,['failure'],['failures']
Availability,"Some work on cleaning, adding more check and test on sparseGridTopology component. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/706:339,failure,failures,339,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/706,2,['failure'],['failures']
Availability,"Some work on dynamic topology changes:; - rewrite the TRIANGLESREMOVED case of Tetra2TriangleTopologyMapping, should bring a speedup of xN where N is the number of triangles to remove. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/788:443,failure,failures,443,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/788,2,['failure'],['failures']
Availability,"Something, when having multiple topologies in the same node as the input state, the barycentric mapping will get the wrong input topology since it rely only on `fromModel->getContext`. This PR fixes this by adding links for the input and output topologies. . Also some reformatting of the input topology type detection with a goto statement...a good example as to where goto can be useful :-). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1125:650,failure,failures,650,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1125,2,['failure'],['failures']
Availability,"Sometimes (every few thousand occurrences) the vector becomes invalid between getting its length and iterating over it. . This error was first described in https://www.sofa-framework.org/community/forum/topic/m_contactsvectorbuffer-not-valid-sometimes/. Now swapping the contents and the error does not occur anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2676:127,error,error,127,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2676,4,"['error', 'failure']","['error', 'failures']"
Availability,"Sometimes we see this kind of initialization of a Data:; ```cpp; showObjectScale(initData(&showObjectScale, 0.1f, ""showObjectScale"", ""Scale for object display. (default=0.1)"")); ```; The information on the default value is redundant and error-prone. A developer can decide to change the default value and forget to change the default value in the description. Instead, I suggest to store the default value of the Data and use it to print it in the GUI, in addition to the description. Here is the result:; ![image](https://github.com/sofa-framework/sofa/assets/10572752/eb6e238b-2b06-4d3b-bdc4-cf553d795606). We can also imagine having a small button to change the value to its default value (like in Unreal Engine). The implementation of this suggestion triggers some questions:; - I chose to store the default value only for some of the `Data<T>`, based on the type of `T`. Do we want that or do we want to store it for all types?; - I chose to store the default value of `Data<T>` as a T. But we can also consider storing its string representation.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4133:223,redundant,redundant,223,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4133,4,"['error', 'failure', 'redundant']","['error-prone', 'failures', 'redundant']"
Availability,Sorry the caduceus scene was also affected by #1369 ; Could anyone merge it straightaway?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1392:347,failure,failures,347,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1392,2,['failure'],['failures']
Availability,SparseGridTopology segmentation fault when the grid is out of bound,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1748:32,fault,fault,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1748,1,['fault'],['fault']
Availability,"Speed up by a (huge) factor the rendering of several spheres.; This is done in 2 ways:; - optimizing with VBO for ""normal"" spheres (like before, with rings and segments parameters) ; - impostors (https://paroj.github.io/gltut/Illumination/Tutorial%2013.html). On the same computer, for 150K spheres :; - 0.8fps with previous rendering; - 22fps with VBO; - 46 fps with impostors . This task is also the beginning of optimizing draw tools, by removing deprecated glu calls and non optimized OpenGL code ; and by using VBO/IBO and shaders. (class BasicShapesGL). This PR should resolve more or less the issue #142 . ; It depends if this issue talks about spheres only or more generally speeding up rendering itself (in that case, it will need much more commits ;) ). <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/170:938,failure,failures,938,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/170,1,['failure'],['failures']
Availability,Sphere drawn was actually half the size of the Sphere used.. Thank you @etagliabue for the notice !; ; Problem was:; ![](https://i.ibb.co/J5SkJ01/Sphere-ROI-00000001.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1318:428,failure,failures,428,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1318,2,['failure'],['failures']
Availability,"Split the content of MechanicalMatrixVisitor in separated files.; The files are located in a subdirectory called mechanicalvisitor/. #1989; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1992:684,failure,failures,684,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1992,2,['failure'],['failures']
Availability,"Split the default parameters of the FileRepository constructor into; multiple constructors to avoid ambiguous calls. Add a new constructor that allows the creation of the repository using; multiple paths. The plugin file repository is now initialized using both $SOFA_ROOT/lib; and $SOFA_ROOT/plugins. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1610:846,failure,failures,846,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1610,2,['failure'],['failures']
Availability,"Spotted by https://www.sofa-framework.org/community/forum/topic/error-in-first-launch-of-sofa-after-installation/; `resources` and `translations` folders are not installed where they should.; TODO: backport this in v20.12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1949:64,error,error-in-first-launch-of-sofa-after-installation,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1949,3,"['error', 'failure']","['error-in-first-launch-of-sofa-after-installation', 'failures']"
Availability,"Spotted by https://www.sofa-framework.org/community/forum/topic/export-graph-button-causes-runsofa-to-segfault-sigsegv-and-crash/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1948:675,failure,failures,675,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1948,2,['failure'],['failures']
Availability,"Start porting old (useful?) changes from old dev branches: https://github.com/epernod/sofa/pull/11/files. This changes allow to display the Contacts as a qt table instead of raw line data:; ![image](https://github.com/sofa-framework/sofa/assets/21199245/04a7ad35-8583-4406-82ec-526d241d02df). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4637:837,failure,failures,837,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4637,2,['failure'],['failures']
Availability,"Start with mappings. ![image](https://user-images.githubusercontent.com/10572752/214327429-63f4208d-a6fc-4e76-a939-5a16a14eb9e7.png). With a compatibility layer on headers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3601:717,failure,failures,717,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3601,2,['failure'],['failures']
Availability,"Start work on merging the duplicated code of the mesh loader components versus helper::io::mesh loaders. See issue #42 . Basically, all code to load a mesh file directly in the topology without using a meshLoader component. For example: `<GridTopology fileMesh=""my_mesh.msh"" /> or <OglModel filename=""my_mesh.obj"" />`; go through the class: helper::io::MeshTopologyLoader which had directly some code to load several formats or was using a helper::io::meshXX to read XX file format. All this code is duplicated with the meshLoader components and with some differences (otherwise it would not be fun...). For the moment I only updated the MeshTopologyLoader and the helper::io::mesh classes to check the tests on all plateforms. ; Changes are:; - obj -> nothing (use MeshObj class); - trian -> nothing (use MeshTrian class); - vtk -> remove code from 2009 and use MeshVTK class from 2015. Still different from meshVTKLoader.; - stl -> nothing (use MeshSTL class); - gmsh -> create a MeshGmsh class and move the code in it.; - xsp -> create MeshXsp class and move the code in it.; - cgal -> remove the methods. Assume it is deprecated.; - unknown format -> the ""else"" method when format not found return false now and is set as deprecated. - Update the helper::io::mesh class to have topology buffers in order to be similar as baseMeshLoader for future merge. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/661:1614,failure,failures,1614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/661,2,['failure'],['failures']
Availability,"Started from ; - #4858 . but decided to do a separate PR to introduce the new ComponentChange for lifecycle/user management.; and applying on Animation loop components. [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/296]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4863:781,failure,failures,781,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4863,2,['failure'],['failures']
Availability,"Started from the PR #4838 . Similar to the Thread Sanitizer.; Only for GCC/Clang and Unix (seems even GCC-win/Clang-win are not supported). This A(L)SAN adds leaks and memory detection.; More info:; - https://github.com/google/sanitizers/wiki/AddressSanitizer; - https://github.com/google/sanitizers/wiki/AddressSanitizerLeakSanitizer (leak is included into the addresssanitizer). The `-fno-omit-frame-pointer`adds also a better reporting (nicer stack traces). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4847:1005,failure,failures,1005,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4847,2,['failure'],['failures']
Availability,"Started from the fact that there was an option to profile MT scheduling but the header `TaskSchedulerProfiler.h`is not available anywhere (git history, etc) so I removed the macros related to profiling. - some files did not have the SOFA licence header; - indentation was all over the place; - guidelines, etc; - clean some includes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3448:119,avail,available,119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3448,3,"['avail', 'failure']","['available', 'failures']"
Availability,"Starting point for #2150 . Create a new module in SofaFramework called Sofa.LinearAlgebra, aiming to gather all structures related to linear algebra, i.e; stuff related to BaseMatrix & BaseVector.; To ensure maximum compatibility, this PR does not propagate the change to the whole SOFA. The downside of this is that SOFA cannot compile without the Sofa.Compat module for the moment (should be ok as the option is ON by default).; Further PRs:; - move tests as @alxbilger has well commented,; - move other *Matrix/Vector things from BTDLinear, etc; - split and create separate files for BlocFullMatrix; - and before the v21.12 release, effectively change the code base to only use sofa::linearalgebra and not the compatibility layer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2314:292,down,downside,292,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2314,3,"['down', 'failure']","['downside', 'failures']"
Availability,"Starting the work of cleaning the topology in Sofa.. resting in peace since 2012... - Change those methods: now returns unsigned int instead of int: ; - getEdgeIndex(PointID v1, PointID v2);; - getTriangleIndex(PointID v1, PointID v2, PointID v3);; - getQuadIndex(PointID v1, PointID v2, PointID v3, PointID v4);; - getTetrahedronIndex(PointID v1, PointID v2, PointID v3, PointID v4);; - getHexahedronIndex(PointID v1, PointID v2, PointID v3, PointID v4, PointID v5, PointID v6, PointID v7, PointID v8);; - Now unfound ID == UINT_MAX instead of -1.; - Change several serr/sout into msg_. In this PR, 2 scene tests are now sending error due to the conversion of serr into msg_error.; This is beacuse some scene test try to do topological change on regularGrid which doesnt support that. I would like to keep those scene error and handle that in a next PR (to split PRs and simplify review process). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/866:630,error,error,630,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/866,4,"['error', 'failure']","['error', 'failures']"
Availability,"StateAccessor is used quite intensively so this warning is popping up everywhere. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2835:626,failure,failures,626,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2835,2,['failure'],['failures']
Availability,StateMask is including Eigen/Sparse everywhere while it is not needed/used. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1505:334,failure,failures,334,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1505,2,['failure'],['failures']
Availability,Static access to the ConsoleMessageHandler (use case in SP3 ([PR #18](https://github.com/sofa-framework/SofaPython3/pull/18)). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1434:383,failure,failures,383,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1434,2,['failure'],['failures']
Availability,Static solver updated by @jnbrunet and I think @IPeterlik worked on it as well; It now includes : ; - possibility to make more than one Newton-Raphson step; - correction and residual tolerance as data; - option to stop iterations when residual is growing. Uses also #pragma; A DOC page will soon be made available specific to the static solver. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/950:183,toler,tolerance,183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/950,4,"['avail', 'failure', 'toler']","['available', 'failures', 'tolerance']"
Availability,"Static variable was not defined with double precision Cuda types. The CI probably does not compile SofaCUDA with double precision (off by default). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2440:692,failure,failures,692,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2440,2,['failure'],['failures']
Availability,"StiffSpringForceField is basically an extension of SpringForcefield adding implicit solving. ; The only added value comes from the ability to define the springs using added data indices1, indices2 and lengths. This mechanism need to also be merged with the current one available in SpringForceField. . Related to https://github.com/sofa-framework/sofa/issues/248. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4649:269,avail,available,269,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4649,3,"['avail', 'failure']","['available', 'failures']"
Availability,Stop the search of the Container/BaseTopology when one is found (using break). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new scene test failures.; - [ ] does not generate new unit test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1176:336,failure,failures,336,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1176,2,['failure'],['failures']
Availability,"Stumbled on it with #1649 . DiffusionSolver was unable to find ""png.h"" when SOFA_NO_OPENGL is activated. It appears that if SOFA_NO_OPENGL is not activated, adding glew somewhat adds the dependency package directory (<sofaroot>/include) to the include_directories of SofaHelper (and the subsequent modules needing it). But if SOFA_NO_OPENGL is not activated, this directory is not added.; DiffusionSolver needs Cimg, which adds only for himself the include directory (i.e no target_include_directories).; So CImg compiles well but the modules needing it do not. That's why DiffusionSolver cannot find ""png.h"". My fix does add this include_directory to the target, but I don't know if it is the best way. Joy of CMake 🥴. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1650:1264,failure,failures,1264,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1650,2,['failure'],['failures']
Availability,"Stumbled on this error:; ```; XXXXXXX exceeds the OS max path limit. The fully qualified file name must be less than 260 characters.; ```; while generating with MSVC (and Windows); I dont know if there is a specific CMake parameter to shorten build paths but here are some workarounds:; - move your build the closest to your root dir ( e.g at ```C:\``` ); - [discard the path limit](https://docs.microsoft.com/en-us/windows/win32/fileio/maximum-file-path-limitation#enable-long-paths-in-windows-10-version-1607-and-later) (starting from Windows 10, version 1607)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1716:17,error,error,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1716,1,['error'],['error']
Availability,"Stumbled on this file while compiling on M1 Silicon (ARM). atomic.h was used to have atomic operations before the stl introduced it in c++11. 1- this utility class is not compatible with other instructions sets than i386/amd64(e.g arm); 2- the STL version is obviously much better; 3- nobody is using it in the sofa code base actually (except its own testing suite). This PR allows the compilation of SOFA on M1 (and other arm in general). I let a file in Sofa.Compat to warn the eventual user to use the STL atomic. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2160:1061,failure,failures,1061,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2160,2,['failure'],['failures']
Availability,"Suffix was missing for SceneCreator, SofaTest and SofaSimulationCore.; Fixes #463 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/511:340,failure,failures,340,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/511,2,['failure'],['failures']
Availability,"Suggestion fixes #1666 ; I would like to know if @damienmarchal or @marques-bruno (if watching) sees possible problems while using SofaQtQuick.; But relying only on the callback should be sufficient. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2094:744,failure,failures,744,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2094,2,['failure'],['failures']
Availability,"Suggestion of buttons to expand all or collapse all in the scene graph view. https://user-images.githubusercontent.com/10572752/132018160-1192c958-1300-4ef3-b92a-3f0a0c10ae29.mp4. Note that the same feature already exists by right clicking on the root node. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2322:802,failure,failures,802,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2322,2,['failure'],['failures']
Availability,"Summary:; - duplicate changes appeared since the Sofa-ng move (and the message from uncreatable was reporting only the first registered move, so the displayed error message itself was incorrect); - few changes were invalid (some non-BaseObject were inserted); - few components were forgotten; - removed the creatablemoved class, since the move will be reported by the SceneCheckerRequiredPlugin anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2986:159,error,error,159,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2986,3,"['error', 'failure']","['error', 'failures']"
Availability,"Summary:; The issue started from the fact that the inversion of Matrix returns a boolean to inform the user if the matrix has been effectively inverted or not, and displays a message in the Messaging console.; A lot of bad points:; - almost nobody checks the return value,; - the really bad dependency on the Messaging system in a core component; - the message itself does not really say **who** could not invert the matrix; ; More generally this emphasizes the lack of a harmonious way to inform the user to handle errors, and how to be sure the user does something with it. The common way to do it in the industry:; - error codes,; - exception,; - the 'expected' idiom : [Systematic Error Handling in C++ by Dr. Andrei Alexandrescu](https://channel9.msdn.com/Shows/Going+Deep/C-and-Beyond-2012-Andrei-Alexandrescu-Systematic-Error-Handling-in-C) ,; - for sure there are many more, feel free to tell in this issue. All of them have their cons and their pros, but I wont explain here (lots of blogs are better than me ;); - https://ned14.github.io/outcome/motivation/; - https://bell0bytes.eu/expected/; - https://foonathan.net/2017/12/exceptions-vs-expected/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1924:516,error,errors,516,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1924,4,"['Error', 'error']","['Error', 'Error-Handling-in-C', 'error', 'errors']"
Availability,"Summery of the problem statement:; currently in sofa there is not rules to describe colors inthe data fields. Consequently some components use Data, others rely on Data and others are using a combination of Data with private float r,g,b,a member. So there are component that accepts color by string ""blue"" or ""#aabbccdd"", other works by passing ""0 1 0 1"" while others ""0 1 2"". This lack of consistency in a problem in term of user interface design which impact XML, python scene as all as in GUIs like runSofa or qtQuickSofa. To solve that I replace the existing data fields with a dedicated type for color (see defaulttype::RGBAColor introduced in PR ##119) . The advantages are multiple:; - expose color in a consistent way to the users.; - all the components now supports the following way to set color: ""blue"", ""0 0 1 1"", ""0 0 1"", ""#0000AAAA"", ""#0000AA"", ""#00AA"", ""#00A"",; - the code to convert the string to a RGBAColor is no more duplicated in component and is now more robust and reports more errors to the users.; - the behavior of the RGBAColor public API is now tested in Color_test.cpp. The disadvantage is that despite I try not to break things (especially in scene) ... it may happens (brecause the commit is rather big & touch a lot of files). So please test it on one or two scene of your choice and report problem. This PR depends on PR #119; This PR replace PR #124 ; This PR solve the Issue #64. Checklist to be merge:. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does may break API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/206:976,robust,robust,976,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/206,3,"['error', 'failure', 'robust']","['errors', 'failures', 'robust']"
Availability,"Summery of the problem statement:; currently in sofa there is not rules to describe colors inthe data fields. Consequently some components use Data<Vec3>, others rely on Data<Vec4> and others are using a combination of Data<string> with private float r,g,b,a member. So there are component that accepts color by string ""blue"" or ""#aabbccdd"", other works by passing ""0 1 0 1"" while others ""0 1 2"". This lack of consistency in a problem in term of user interface design which impact XML, python scene as all as in GUIs like runSofa or qtQuickSofa. To solve that I replace the existing data fields with a dedicated type for color (see defaulttype::RGBAColor introduced in PR #https://github.com/sofa-framework/sofa/pull/119) . The advantages are multiple:; - expose color in a consistent way to the users.; - all the components now supports the following way to set color: ""blue"", ""0 0 1 1"", ""0 0 1"", ""#0000AAAA"", ""#0000AA"", ""#00AA"", ""#00A"", ; - the code to convert the string to a RGBAColor is no more duplicated in component and is now more robust and reports more errors to the users. ; - the behavior of the RGBAColor public API is now tested in Color_test.cpp. . The disadvantage is that despite I try not to break things (especially in scene) ... it may happens (brecause the commit is rather big & touch a lot of files). So please test it on one or two scene of your choice and report problem. This PR depends on PR #https://github.com/sofa-framework/sofa/pull/119 ; This PR solve the Issue https://github.com/sofa-framework/sofa/issues/64. Checklist to be merge: ; - [ ] succeed on each compilation setup on the CI.; - [ ] does not generates new test failure. ; - [ ] does not seems to break existing scenes. ; - [ ] does not seems to break API compatibility. ; - [ ] introduces new component with tests & documentation. ; - [ ] is now 1 week old and no one send a 'no go' comment.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/124:1040,robust,robust,1040,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/124,3,"['error', 'failure', 'robust']","['errors', 'failure', 'robust']"
Availability,"Supersedes #4179. No tests of performances yet. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4236:592,failure,failures,592,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4236,2,['failure'],['failures']
Availability,"System: ""Ubuntu 20.04""; - Version of SOFA: v23.06.00 binaries"". **Command called**. ```txt; python3 /home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py. ```. **Env vars**. ```bash; #################; --- sys.version ---; 3.8.10 (default, Jul 29 2024, 17:02:10) ; [GCC 9.4.0]; --- PATH ---; /home/sofa/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin; --- SOFA_ROOT ---; /home/sofa/SOFA_v23.06.00/bin/.runSofa; --- PYTHONPATH ---; /home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages; --- sys.path ---; ['', '/home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:1849,ERROR,ERROR,1849,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['ERROR'],['ERROR']
Availability,THIS PR HAS BEEN REPLACED WITH #377.; So i close it. . ===============; This is an attempt to fix the bug here: #375 . The only real change is in BaseLink all the other file is cosmetic cleaning. ; Currently it is breaking & a wip. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/376:488,failure,failures,488,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/376,2,['failure'],['failures']
Availability,"TItle. GCC12, and SOFA minimal build (Sofa.framework + Sofa.Component + some stuff in Sofa.GUI) does not report warnings anymore; ~~But the current warning level is quite low...~~ not really, -Wall and -Wextra only reports warnings in tinyxml. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3627:788,failure,failures,788,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3627,2,['failure'],['failures']
Availability,TODO (to be discussed):. - [ ] Add a CI to https://github.com/sofa-framework/CSparseSolvers; - [ ] Add CSparseSolvers to the list of shipped plugins with the release (https://www.sofa-framework.org/download/),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4994:198,down,download,198,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4994,1,['down'],['download']
Availability,"TODO. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3643:550,failure,failures,550,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3643,2,['failure'],['failures']
Availability,"TSAN = thread sanitizer. Helpful for debugging race conditions in multithreaded context.; Only available for gcc and clang. https://github.com/google/sanitizers/wiki/ThreadSanitizerCppManual. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4534:95,avail,available,95,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4534,3,"['avail', 'failure']","['available', 'failures']"
Availability,"Tackles one point of #4221. Required for the conda-forge package (https://github.com/conda-forge/staged-recipes/pull/23085).; Externalize the previously embedded version of metis (5.1.0) which was statically linked. Provides a cmake module finder file (FindMetis.cmake), tested successfully with the following ways to provide the library:; - compile & install from source (v5.1.1) (warning: official repository cmakefiles are broken); - APT package libmetis-dev (v5.1.0); - conda package (v5.1.0 and v5.1.1); - vcpkg package (v2022-07-27); All on ubuntu 22.04. Not tested with conan. Some remarks to embed metis in the CI: The embedded version was compiled with GKlib using the `GKRAND` option. To the best of my knowledge, this can be provided either from compiling from source or with the conan package with a specific option. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4266:1373,failure,failures,1373,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4266,2,['failure'],['failures']
Availability,"Tackles one point of #4221.; Replace embedded version of nlohmann_json library by an external one, using the modern ""find or fetch"" mechanism from CMake >=v3.24 (see https://cmake.org/cmake/help/latest/guide/using-dependencies/index.html#fetchcontent-and-find-package-integration ), similarly to what has been done in https://github.com/sofa-framework/sofa/pull/4240 for TinyXML2.; This is not required by conda-forge for the SOFA conda package as the library is header-only, only recommanded.; We also discussed to remove this dependency as only used by AdvancedTimer, but meanwhile, if not removed by the next-release, we might consider this PR or not. Let me know.; As for other dependencies that will be handled by this ""find or fetch"" mechanism, additional work needs to be done to forbid the fetch if the find package failed (also required for the next release). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4257:1413,failure,failures,1413,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4257,2,['failure'],['failures']
Availability,"Take for example the scene: Demos/Liver.scn; Change the gravity of the root node:; <Node name=""lroot"" gravity=""0 0 0"" dt=""0.02"">. As soon as the simulation start, the liver disappears... No error message in the console, neither on the components. Does someone has an idea?. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/557:190,error,error,190,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/557,1,['error'],['error']
Availability,"Takes over #2851 (a mess to merge with master, easier to reopen a new one). Remove completely when useless else, replace it using callback. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4075:684,failure,failures,684,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4075,2,['failure'],['failures']
Availability,Targets are built with debug version of runtime library in debug configuration; under MS Visual Studio. This is enabled with /MDd compiler flag. Missing this; flag for NVCC generated object files results in linker fails due to different; versions of runtime libraries. The problem is resolved by explicitly setting compiler options for debug build; under Windows. The solution is given only for Windows and only for MSVS because; it's the only officially supported by NVidia compiler on this platform. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/300:758,failure,failures,758,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/300,2,['failure'],['failures']
Availability,"Task for #4217 . As less breaking as possible, but as I did not re-implement all functions from fixed_array, it is bound to break if one used a function not present (+some technicalities like array() which was returning a ref to a c-array[], which could be implicitly casted as pointer, or some functions which was taking a fixed_array as a parameter). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4263:897,failure,failures,897,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4263,2,['failure'],['failures']
Availability,"TaskScheduler was doing several things:; - A base class for task schedulers; - A factory to register and create task schedulers. The factory code is extracted from the TaskScheduler class and moved into its dedicated class and file. I refactored a bit how the factory works:; Before, it was like there could be only one TaskScheduler at a time. Everytime a new TaskScheduler was created, the previous one is destroyed. It prevents the use of multiple TaskScheduler with different type (derived class). Instead, the task schedulers are now stored in a map. ; The only issue is related to the task allocator. The task allocator is used every time a task is created. The task allocator is supposed to depend on the TaskScheduler where the task will be added. But in practice, a Task is created independently from the TaskScheduler. So I kept the old system that calls a static function setting the allocator when the task scheduler is created. Some unit tests are introduced. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3480:1517,failure,failures,1517,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3480,2,['failure'],['failures']
Availability,"Template aliases are clarified. They were introduced for `double` and `float` because of `DataExchange`. But it is a mistake since the default behavior is not in `DataExchange`. Therefore, I restored the template name to be `double` and `float` instead of `d` and `f` only for scalars. This is to mimic the default behavior. Template aliases are removed. Fixes https://github.com/sofa-framework/sofa/issues/3450. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3461:957,failure,failures,957,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3461,2,['failure'],['failures']
Availability,Tested on classical and retina screens on os x system and classical screen on linux system. I do not know how to create a unit test for this fix. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/311:402,failure,failures,402,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/311,2,['failure'],['failures']
Availability,"Tests pulled from https://github.com/InSimo/ISSofa/blob/issofa/framework/framework_test/defaulttype/ConstraintSparseMatrix_test.cpp. Major modifications:; - bloc -> block; - some tests fixed (???); - removal of MapMapSparse tests. \+ Important fix: readLine returns a endIterator if the line index is not correct (as described by the description....). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5037:896,failure,failures,896,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5037,2,['failure'],['failures']
Availability,"Thank you CLion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4181:561,failure,failures,561,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4181,2,['failure'],['failures']
Availability,"Thanks for replying, actually it worked, when I used the dll files of binary release of SOFA v23.06, But there was some issue when I load the demo scene of caudeus.scn, Here are the errors which were printed on the console of Unity editor:. ```; SofaContext::OnDestroy stop called.; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:OnDestroy () (at Assets/SofaUnity/Scripts/SofaContext.cs:251); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). SofaContext::OnDestroy stop now.; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:OnDestroy () (at Assets/SofaUnity/Scripts/SofaContext.cs:256); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). ReconnectSofaScene; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:480); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). KeyNotFoundException: The given key '4' was not present in the dictionary.; System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item (TKey key) (at <eef08f56e2e042f1b3027eca477293d9>:0); SofaUnityAPI.SofaContextAPI.loadScene (System.String filename) (at Assets/SofaUnity/Plugins/SofaUnityAPI/SofaContextAPI.cs:189); SofaUnity.SofaContext.ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:486); SofaUnity.SofaContext.Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext.StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext.Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr, Boolean&). Start: 'VisualEye'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). NullReferenceExcep",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4156:182,error,errors,182,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4156,1,['error'],['errors']
Availability,"That script is used to parse the output of the AdvancedTimer in a Python scene to plot it. One of the function bindings has changed name, but this change was not reflected in the script. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/458:443,failure,failures,443,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/458,2,['failure'],['failures']
Availability,"The BIG one. based on:; - #2717 (for one file moved in core). Deprecates _SofaDeformable_, _SofaObjectInteraction_, _SofaGeneralDeformable, SofaGeneralSimpleFem, SofaMiscFem, SofaNonUniformFem_; Deprecates partially _SofaRigid, SofaSimpleFem, SofaGeneralObjectInteraction, SofaMiscForceField_. Create a meta-module **SolidMechanics**, managing mechanics for mechanical object in a scene (internal forces?); It is composed of ; - **Spring**: with spring-system related components; - **FEM**: an other meta-module containing:; - **Elastic**: elastic FEM; - **HyperElastic**: hyperelastic FEM with materials; - **NonUniform**: non-uniform FEM ; - **TensorMass**: tensormass related components . ### Remarks, questions; - One Spring component has not been included (yet?), namely BoxStiffSpringForcefield, as it is meta-component; it would add dependencies on other module (Engine); - ~~The rest of the components implementing core::ForceField are things applying ""external"" forces on it, so we may create a whole category for them (not defined in the draft)~~ -> see #2783 . ~~SofaCUDA wont compile for the moment (WIP)~~, as the compatiblity files wont work. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2759:1701,failure,failures,1701,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2759,2,['failure'],['failures']
Availability,The BaseObject::draw() function should be used only for debugging purposes.; The BaseObject::draw() function is called when pass is standard and it is rendered before any VisualModel. Any overlay text rendered in BaseObject::draw() function is not visible. This line change allows every component to display overlay text (for debugging purposes) always at the top in the viewport in the draw() functon. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/929:661,failure,failures,661,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/929,2,['failure'],['failures']
Availability,The CGAL version provided in Unbuntu 18.04 LTS is 4.11 and it seems this version is now expecting that the CGAL_MESH_3_VERBOSE needs to have a value. . Otherwise it fails to compile.; The fix is minor so please consider merging it ASAP. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/664:495,failure,failures,495,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/664,2,['failure'],['failures']
Availability,"The CenterOfMassMapping, requires a Mass associated with its parent MechanicalState.; The initial code relies on a call to fromModel()->getContext()->getMass() to retrieve the associated mass, and did not propose a way to set explicitely the mass to use.; The mass was stored in a pointer during init(), and we want to use singleLinks instead, to keep track of how components interact with each other. The initial goal of this PR was to get rid of getMass in BaseContext(), but we want your opinion on how to do this, especially for the case of MultiMapping (CenterOfMassMultiMapping):. 1. add a SingleLink to the mass in the MechanicalState; 2. store a list of the masses associated to the list of models in CenterOfMassMultiMapping. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1184:991,failure,failures,991,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1184,2,['failure'],['failures']
Availability,"The Config.cmake.in was not consistent with the actual CMakeList.txt. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3576:614,failure,failures,614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3576,2,['failure'],['failures']
Availability,"The Data had always the prefix `(V_COORD)`. Now it really depends on the type. The bug has been introduced in https://github.com/sofa-framework/sofa/pull/2811. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2872:704,failure,failures,704,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2872,2,['failure'],['failures']
Availability,"The Data's hold their actual content within a dedicated container called DataContentValue.; Two versions of this containers exists, on holding the data using a copy-on-write mechanism while an other is using a systematic copy. . Currently the selection is based on the content of DataTypeInfo, I found it more explicit and clear to rely on type_traits to select the proper DataContentValue version. . ```console; Caduceuse, 10 000 iterations:; - master: 24.15 s; - copy on write to true: 24.2 s; - copy on write to false: 23.78 s; - copy on write to is_scalar: 25.0 s; - copy on write to !is_scalar: 23.0 s. collisionMultiple.scn, 1 000 iterations:; - master: 15.9 s; - copy on write to true: 15.9 s; - copy on write to false: 14.7 s; - copy on write to is_scalar: 16.3 s; - copy on write to !is_scalar: 14.5 s; ; beam16x16x76-hexafem-rk4-CPU.scn: 2000 iterations; - master: 1 m 30; - copy on write to true: 1 m 32; - copy on write to false: 1 m 30 ; - copy on write to is_scalar: 1 m 26; - copy on write to !is_scalar: 1 m 18; ; TorusFall: 4000 iterations; - master: 41.5 s; - copy on write to true: 43.9 s; - copy on write to false: 41.2 s ; - copy on write to is_scalar: 43.3 s ; - copy on write to !is_scalar: 42.5 s; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2285:1771,failure,failures,1771,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2285,2,['failure'],['failures']
Availability,"The LateSpecialization pattern, introduced in https://github.com/sofa-framework/sofa/commit/1b92a802eb69693af65f2094f02f9a734d333804, was used to avoid code duplication between float and double specialization of Rigids. However, now that there is only one specialization, it makes the code more difficult to read. Therefore, I suggest to go for a standard specialization. Note that the diff may be difficult to read, but this PR only moves code (with adaptation). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3126:1008,failure,failures,1008,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3126,2,['failure'],['failures']
Availability,"The LinearForceField component does not contribute anything to the matrix when solving a system. Accordingly, the addKToMatrix function does nothing. However, since it is not implemented, it displays a warning when running a simulation. This PR simply adds an empty implementation of that function, which removes the warning displayed by the definition in the base class. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/384:628,failure,failures,628,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/384,2,['failure'],['failures']
Availability,"The MechanicalMatrixMapper example scene deserved a bit of love. - Converted to Python3; - Add documentation (the concept of rigidification deserves a more detailed doc somewhere else); - It is possible to change the resolution of the grid while keeping the same behavior: 1) `indexPairs` is built algorithmically, 2) ConstantForceField is applied using a BoxROI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2361:908,failure,failures,908,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2361,2,['failure'],['failures']
Availability,"The MechanicalOperations (mops) already had the method `multiVector2BaseVector` that allows us to fill a BaseVector (one continuous memory vector) from a multi vector (group of vectors contained inside mechanical objects). However, the were no way to do the inverse (build a multi vector from a continuous vector) beside creating a new visitor, which is now done automatically by the mops. This PR is only adding a new method, it is non-breaking. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1248:703,failure,failures,703,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1248,2,['failure'],['failures']
Availability,"The MutationListener in Sofa is used to notify (A GUI for instance) of the SceneGraph's edition (addition / deletion / move of nodes, objects, or slaves); The MutationListener itself does not perform anything, but once inherited, its methods can be overloaded to perform operations on a ListView widget for instance, as does the GrapListenerQListView, in applications/sofa/gui/qt. The current implementation stores a pointer to every registered listeners in every node in the scene graph. Instead, the implementation proposed in this PR registers the listeners in the root node and child nodes forward the notifications to it. Also, the overloads are currently relying on the call super (the child class reimplements the method, then calls its base class implementation) This approach is [known to be error prone](https://en.wikipedia.org/wiki/Call_super) and can be reimplemented using delegates instead. Finally, this PR also adds extra delegates in the Nodes listeners notifications system and in the MutationListener, called *AFTER* the graph's edition. those are used in SofaQtQuick to be notified that the graph has indeed been updated. . Here are 2 quick UML diagrams showing the 2 architecture's differences. This one is the current implementation in sofa:; ![code_smell](https://user-images.githubusercontent.com/13734391/52288894-5245f000-296d-11e9-83b6-12f6ce1385f9.png). And this one is what this PR does:; ![code_clean](https://user-images.githubusercontent.com/13734391/52288978-730e4580-296d-11e9-9057-451922e971c8.png). Also, if someone could tell me what the master / slave relationship between BaseObjects are, I'd be curious to know if it is still in use in SOFA. It doesn't seem to be used in Listeners.. maybe added for Compliant / Flexible?. __This PR could potentially be breaking for plugins & projects implementing their own MutationListeners__. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] b",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/917:801,error,error,801,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/917,1,['error'],['error']
Availability,"The NumPy version is: ""1.26.4"". and make sure that they are the versions you expect.; Please carefully study the documentation linked above for further help. Original error was: No module named 'numpy.core._multiarray_umath'. The above exception was the direct cause of the following exception:. Traceback (most recent call last):; File ""C:\sofa_env\sofa_env\scenes\controllable_object_example\controllable_env.py"", line 1, in <module>; import gymnasium.spaces as spaces; File ""C:\SOFA\Lib\site-packages\gymnasium\__init__.py"", line 5, in <module>; from gymnasium.core import (; File ""C:\SOFA\Lib\site-packages\gymnasium\core.py"", line 8, in <module>; import numpy as np; File ""C:\SOFA\Lib\site-packages\numpy\__init__.py"", line 149, in <module>; raise ImportError(msg) from e; ImportError: Error importing numpy: you should not try to import numpy from; its source directory; please exit the numpy source tree, and relaunch; your python interpreter from there. I already checked the suggested troubleshooting, but I couldn't fix the error.; Can you help me?; Thank you!. **Steps to reproduce**; `py -3.11 -m venv C:/SOFA`; `SOFA\Scripts\Activate`; `git clone https://github.com/ScheiklP/sofa_env.git `; `cd sofa_env`; `pip install -e .`; `python3 sofa_env/scenes/controllable_object_example/controllable_env.py`. **Expected behavior**; I would have expected that no errors would appear. ---------------------------------------------. ### Environment. **Context**. - System: OS Name	Microsoft Windows 11 Home; - Version of SOFA: I compiled SOFA with Cmake to be able to use with Geomagic Touch; - State: Install directory: C:\sofa. **Command called**. ```txt. python3 sofa_env/scenes/controllable_object_example/controllable_env.py. ```. **Env vars**. ```txt. import sys; print(sys.path); ['', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\idlelib', 'C:\\SOFA\\Lib\\site-packages', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\\Python\\Python311\\python311.zip', 'C:\\Users\\",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5088:2633,error,error,2633,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5088,1,['error'],['error']
Availability,"The PLUGIN_SOFASPHFLUID option was not taken into account by the CUDA plugin, so it would try to link against that plugin even if it was not compiled with SOFA. There was also a file that was included twice in CMakeLists.txt. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/523:482,failure,failures,482,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/523,2,['failure'],['failures']
Availability,"The PR #2988 opens this discussion. ## Today; - gravity is defined though a data in the Nodes (by default `gravity=""0 9.81 0""`); - this gravity is propagated down from the root node to the child nodes; - gravity computation is performed by the mass (if any) in the node; - nowhere appears the gravity as a ForceField (mechanical load) within the node. #### Typical scene; ``` xml; <Node name=""root"" gravity=""0 -9.81 0"" dt=""0.01"">; <DefaultAnimationLoop name=""animationLoop"" solveVelocityConstraintFirst=""true"" . <Node name=""Object1"">; <EulerImplicitSolver name=""ODE0"" rayleighMass=""0.1"" rayleighStiffness=""0.1"" />; <SparseLDLSolver template=""CompressedRowSparseMatrixMat3x3d"" name=""Linear0"" />; <TetrahedronSetTopologyContainer name=""Torus0Topo"" position=""@/Mesh/stuffing.outputPoints"" tetrahedra=""@/Mesh/stuffing.outputTetrahedra""/>; <MechanicalObject name=""Torus0State"" template=""Vec3d"" velocity=""@/Mesh/TorusVVel.output_position"" rest_position=""@/Mesh/stuffing.outputPoints"" position=""@Torus0VXForm.output_position"" />; <TetrahedronSetGeometryAlgorithms name=""Torus0Algo"" />; <MeshMatrixMass name=""MMass"" massDensity=""2.0"" />; <TetrahedronFEMForceField name=""FEM"" youngModulus=""50"" poissonRatio=""0.45"" />; </Node>. <Node name=""Object2"" >; <EulerImplicitSolver />; <CGLinearSolver iterations=""200"" tolerance=""1e-09"" threshold=""1e-09""/>; <MechanicalObject template=""Rigid3d"" name=""myParticle"" position=""0 0 0 0 0 0 1"" showObject=""1"" />; <UniformMass name=""UMass"" totalMass=""1"" />; <ConstantForceField totalForce=""1 0 0 0 0 0"" />; </Node>; </Node>; ```. #### Advantages; - easy to write a scene with a global gravity; - light nodes (no additional ForceField appearing). #### Drawbacks; - prone to error for beginners not seeing that a gravity (external force) is acting. ## Proposal; - gravity can still be defined though a data in the Nodes (but default value changed `gravity=""0 0 0""`); - using this data gravity generates a warning (not the default/advised way of designing a scene); - if this grav",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3149:158,down,down,158,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3149,1,['down'],['down']
Availability,"The PR https://github.com/sofa-framework/sofa/pull/2943 replaced by mistake the ""activated"" with the ""currentIndexChanged"" one. But there is a slight difference between the two as currentIndexChanged can be called with; -1 (which makes the connected slot crash). To revert back to the ""activated"" signal instead (but using the modernized syntax). This PR fix issue #3017 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3018:917,failure,failures,917,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3018,2,['failure'],['failures']
Availability,"The PR just adds the template ""Vec1,Vec3"" to the component MechanicalMatrixMapper. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1703:627,failure,failures,627,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1703,2,['failure'],['failures']
Availability,"The Qt application is highly slowed down when the profiler window is displayed. The reasons:. - The tree is updated at each frame from scratch: 1) clearing the tree is time consuming, 2) building the widget tree is time consuming and 3) converting all the data (double) to `QString` is time consuming. I am not sure it is necessary to update the tree at each frame. We would need to find another mechanism (for example only when the button `Animate` is unpressed).; - The chart is updated at each frame from scratch",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2142:36,down,down,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2142,1,['down'],['down']
Availability,"The SOFA version of cleaning the Augean stables... 🐴. Make it compile and run (for the quadSpring scene); And does not need the sofaOPENCL application. Compile with the SofaSphPlugin as well, but the example scene crashes somewhere in the OpenCL kernel... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1361:512,failure,failures,512,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1361,2,['failure'],['failures']
Availability,"The SceneCreator is now based on the plugin manager to load its dependency. ; It seems that when compiling in debug the plugin names are changed. In this PR I added to the PluginManager a way to search for ""debugging"" names when Sofa is compiled in debug. . This should fix the failling tests on options_debug on master reported in #463 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/465:595,failure,failures,595,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/465,2,['failure'],['failures']
Availability,"The SofaBaseMechanics_test were probably broken. ; They were not in-heriting from SofaTest neither BaseTest. This means that uncatched msg_error() should generate test failure while they should. . In this PR I implement the proper behavior, so now several tests are ""correctly failing"" :) ; And I fixed the tests.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/832:168,failure,failure,168,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/832,3,['failure'],"['failure', 'failures']"
Availability,The TaskScheduler keepThreadsActive virtual function can be overridden to allow to change worker threads waiting policy when there are no tasks to steal. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/934:410,failure,failures,410,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/934,2,['failure'],['failures']
Availability,"The WIN32 implementation is lowering the case of the given path. This is; not consistent with other case insensitive OS like macos and is discussed in:; https://github.com/sofa-framework/sofa/pull/250. In this PR I deprecate this 'lowering' behavior, adds a dedicated message & I updated; the calling point all around Sofa. Code updated shouldn't print any message but un-touched one should continue working as usual and prints the deprecated message to indicate to user they must update. CHANGELOG:; - [SofaKernel]; - FileRepository::getRelativePath() lowering the case on WIN32 is now a deprecated behavior. ; . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old (or has fast-merge label).; - [x] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/264:844,failure,failures,844,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/264,1,['failure'],['failures']
Availability,"The `BaseCamera` is computing the scene center point and scene radius based on the current bounding box. The `InteractiveCamera` is using these information to compute the zoom/translation speed when navigating in the scene with mouse events. . Since the `BaseCamera` was computing the scene center point and radius only when `BaseCamera::p_computeZClip` was true, when manually giving the z-clip values, the interaction was not working at all (`sceneCenter` and `sceneRadius` were 0, hence the zoom/translation speed were 0). This was only visible when using the `QtViewer` since the `QglViewer` is using its own internal camera and is ignoring the cameras added to the scene. This PR also fixes the caduceus scene as it was using a `Camera` instead of `InteractiveCamera`, which isn't listening to mouse events at all, hence navigating with the mouse wasn't possible with the QtViewer. A little bit problematic when it is the default scene of runSofa.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1377:1210,failure,failures,1210,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1377,2,['failure'],['failures']
Availability,"The `LCPConstraintSolver` in its unbuilt version crashed when a contact does not have an associated constraint correction, because of a null pointer dereference. Now, the pointer is checked for null. Also, if there are only contacts without constraint correction, the algorithm stops. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2222:829,failure,failures,829,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2222,2,['failure'],['failures']
Availability,"The abstract class `BaseNonLinearMapping` is introduced. All mappings from the folder, except `RigidMapping`, inherit from `BaseNonLinearMapping`. The class relies on the delegate pattern to simplify the implementation of non-linear mappings. All the affected mappings relied on the same design, so it made sense to factorize common code in a base class. Breaking because I removed some aliases, made some methods final etc. What I would like for a next work is to factorize the 3 methods `buildGeometricStiffnessMatrix`, `applyDJT` and `updateK` (if possible). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5006:1106,failure,failures,1106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5006,2,['failure'],['failures']
Availability,"The access to the pointer of data &ptr[0] have been replaced by the use of .data() in PR #279 . This generate a problem because helper::vector is specialized for cuda (thanks to the MemoryManager) in vector_device.h. This type of vector mimic a std::vector but it does not implement all the functions of the stl. If new functions are necessary they must be also implemented in this vector_device class, but the consistency of data must be CAREFULLY checked. Indeed a cudavector has data both on the CPU and the GPU and one must guarantee that the accessed data is the correct one. This PR add the missing function in vector_device to make it match the API of helper::vector. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/320:933,failure,failures,933,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/320,2,['failure'],['failures']
Availability,"The actual implementation to store parentData is weird because it stores two times the same object. One is in the base class (parentBaseData) and one in its child class; (parentData). . The rational behind the current implementation is that we wanted to access the data without abstraction cost, ie. accessing the object with its true type (eg: Data<T>) instead of its parent type (BaseData) and at the same time having an abstraction to manipulate BaseData. . Duplicating the same obect/point is in general a code smell indicating that something is wrong in the implementation. In general duplication complexify the implementation and error prone (because you have to garantee that the different copies are kept synchronized and interact together in a seamlessness way. . So, in this PR I addresse this duplication problem by removing the lowest type and relying on a dynamic_cast when it is needed. There is an abstraction cost...but it is on a on a very rarerly used method (actually only used for fast copy of data field...and in that context...the cost of the dynamic cast against one of copying millions of Dofs is totally neglectible). . A different pattern was initially used with a child-delegation to expose the abstraction to its parent but it appears it would have made the PR breaking. The difference is that the selected pattern allows one data to be parented to a data of different type while the pattern with child-delegation restrict the parenting to be of exactly the same time. . I personally prefer to have parent only on same type (so that data conversion must be added manually and becomes explicit) but this was not done previously in Sofa and thus breaks some scenes (somes of them are actually really funny....and probably work only by side effect). . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1490:636,error,error,636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1490,1,['error'],['error']
Availability,"The assert triggers in the following case:; A SphereROI is defined in a Python script. In order for the outputs to be used right away, it must be initialize by the Python script, just after its definition.; But when the scene is completely defined, a visitor calls again the init method. So the assert triggers in case the addInput method is called multiple times (like in the example I gave). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2822:938,failure,failures,938,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2822,2,['failure'],['failures']
Availability,"The block size (2x3) did not make sense with regards to the matrix size (4x8). I changed the block size to 2x4. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3832:656,failure,failures,656,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3832,2,['failure'],['failures']
Availability,"The bwdInit is used to implement a bugfix that seems to be fixed in a more approriate way elegant way in BaseMapping; ```cpp; bool BaseMapping::insertInNode( objectmodel::BaseNode* node ); {; if( isMechanical() ) node->addMechanicalMapping(this);; else node->addMapping(this);; Inherit1::insertInNode(node);; return true;; }; ```. That said, I find annoying these two approaches because they are considering a a problem to have mechanicalmapping in the two list (mechanicalmapping and mapping). If a mechanicalmapping *is a* mapping it makes sense for it to be in the two lists. I don't know what would happend if I remove this behavior... a future PR maybe) . . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3954:1207,failure,failures,1207,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3954,2,['failure'],['failures']
Availability,"The callback on '''Data<string> texturename ''' was calling init() method. This can produce bugs as the init() method should be called only once to setup callbacks or init mesh. Move this callback creation in init method and use loadTextures(...) instead of init() method. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2298:817,failure,failures,817,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2298,2,['failure'],['failures']
Availability,"The case arises mostly because of running runSofa from a build directory but you set SOFA_ROOT. It will then tried to load plugins from the install afterwards, etc..., leading to stuff like:. ```; [WARNING] [ObjectFactory] Default template for class DynamicSparseGridGeometryAlgorithms already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: DynamicSparseGridGeometryAlgorithms<Vec2d>; [WARNING] [ObjectFactory] Class already registered: DynamicSparseGridGeometryAlgorithms<Vec3d>; ....; ```. or with a cryptic error message if you try to use the PluginManager from the GUI:; ```; [INFO] [PluginManager] Plugin not found in loaded plugins: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; [ERROR] [SofaPluginManager] plugin should be loaded: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; ```. Now, if you try to load twice the plugins (from differents paths then), it will print:; (one dll is in `build/bin/Release/` and the other one directly in `build/`; ```; [WARNING] [PluginManager] This plugin SofaNonUniformFem has been loaded from a different path, it will certainly lead to bugs or crashes...; You tried to load: ....build/bin/Release/SofaNonUniformFem.dll; Already loaded: ....\build\SofaNonUniformFem.dll; [WARNING] [PluginManager] Plugin SofaNonUniformFem is already loaded from a different path, check you configuration.; ```; The ""double information"" comes from the fact that in the end we consider the plugin as loaded ; the code afterwards will try to load the plugin nevertheless (hence having to detect twice the duplication); In the GUI code for example: https://github.com/sofa-framework/sofa/blob/71691309251177322967f53bc7a024e89c19bcbc/modules/SofaGuiQt/src/sofa/gui/qt/SofaPluginManager.cpp#L120. Obviously it is really not advised to continue to use Sofa if this case occurs but at least the user will know what is going on.; ______________________________________________________. By submitting this pull request, ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2352:573,error,error,573,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2352,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"The case where plugin is smaller than dotExt is not handled by std::equal. See how it works: http://en.cppreference.com/w/cpp/algorithm/equal. An assert is called.; I had the case when dotExt = "".dll"" and plugin = ""PSL"". ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/617:477,failure,failures,477,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/617,2,['failure'],['failures']
Availability,"The class `Simulation` has been refactored:. - It no longer inherits from `BaseObject`; - All the non-pure virtual methods have been deprecated. Instead, their equivalent are available as free functions. Indeed, the content did not need to be in a class and `DAGSimulation` did not override them.; - `sofa::simulation::setSimulation` is deprecated. The global variable `Simulation` is set once and for all in the initialization of the `Sofa.Simulation.Graph` module. ⚠️ If `new` is used to provide a new `Simulation`, it results in a memory leak, because `setSimulation` now does nothing. In summary, the type `Simulation` is now only useful to create `Node` instantiations. This feature can be done out of the Simulation class thanks to a refactoring of modules. It will be done later in another PR. Once it is done, the type could be deprecated. In this Pull Request, it is assumed that it is not possible to create another type of Simulation than `DAGSimulation`. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/350]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3889:175,avail,available,175,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889,3,"['avail', 'failure']","['available', 'failures']"
Availability,"The classes were used in a plugin which is no longer maintained. See https://www.sofa-framework.org/community/forum/topic/how-to-use-parallelvisitorscheduler/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3957:704,failure,failures,704,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3957,2,['failure'],['failures']
Availability,"The cmake part of our build process is very slow and is getting slower and slower the more we add plugins/modules and packages.; ; I noticed that commands like include or find_package(XXXXX) imply the search, the loading and the execution of the requested package XXXX each time. . This is very problematic as this scale in an horrible (non linear) way. . So I tried a quick and dirty fix based on inclusion gard, 'à la #ifdef MYFILE_H'. I first checked if the file are really loaded multiple times (and this was the case) and implemented a quick test to stop the loading. . The fix accelerates a lot the cmake time on my machine reducing the generation from 1min20 down to 15 sec. So I'm curious to see if such solution is reliable enough to be used (I consider that if this is not the default design of cmake package there must be a rational behind) and what are the possible drawback. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1464:666,down,down,666,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1464,4,"['down', 'failure', 'reliab']","['down', 'failures', 'reliable']"
Availability,"The cmake.in file for SofaGeneralObjectInteraction was missing the two news deps on SofaEngine and SofaGeneralEngine, following the PR on #2621 . Fix #2658; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2659:701,failure,failures,701,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2659,2,['failure'],['failures']
Availability,"The code in `proximity.h` has several problems:. - The classes names are misleading. It makes think that it computes the distance, but it computes the closest points.; - Classes with a single function that could be static. It could be a free function.; - Difficult to find this file in Helper. To me, it makes more sense to put it in Geometry.; - Types mismatch. I separated the 3 functions in dedicated files.; I deprecated the classes and the header. Note: I don't think the LCP approach is the fastest one to compute closest points. ; Not2: `Mat_solve_LCP.h` would deserve a bit of cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3666:1139,failure,failures,1139,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3666,2,['failure'],['failures']
Availability,"The code in `sofa::helper::gettypename` is similar (almost identical) to `NameDecoder::decodeTypeName`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2482:648,failure,failures,648,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2482,2,['failure'],['failures']
Availability,"The code removed in simpleapi was an experiment to avoid having to type ""string"" that shouldn't be merged. Given that no one use such a thin and how hard it would be to generalize the idea to the whole code base it is far better to remove it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1845:787,failure,failures,787,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1845,2,['failure'],['failures']
Availability,"The code was duplicated 4 times. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4355:577,failure,failures,577,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4355,2,['failure'],['failures']
Availability,"The collision model used in LMConstraint are only compiled if the SofaDistanceGrid plugin is loaded while they shouldn't. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1819:666,failure,failures,666,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1819,2,['failure'],['failures']
Availability,"The collision tree were built only if the broad phase algorithm requires it. But it is also up to the narrow phase to decide. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2109:670,failure,failures,670,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2109,2,['failure'],['failures']
Availability,"The comment is wrong.; I need more investigation to be able to write a better one. Till then, I remove the comment. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3582:660,failure,failures,660,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3582,2,['failure'],['failures']
Availability,The commits are touching a single file each and focus on fixing single bug or regression. Could you consider fast-merge ?; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/931:379,failure,failures,379,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/931,2,['failure'],['failures']
Availability,"The compatibility file SofaGuiQt.h (redirecting to sofa/gui/qt/config.h) had a `#endif` without a `#if`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2044:649,failure,failures,649,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2044,2,['failure'],['failures']
Availability,"The component FillReducingOrdering, introduced in https://github.com/sofa-framework/sofa/pull/2501, was using the METIS library to reorder the vertices. Now, it is able to use approximate minimum degree algorithm from the Eigen library. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2875:781,failure,failures,781,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2875,2,['failure'],['failures']
Availability,"The component has been deprecated in #2777. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3919:588,failure,failures,588,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3919,2,['failure'],['failures']
Availability,"The computation of the compliance matrices is expensive. When we have multiple objects in our scene it can be interesting to compute these matrices concurrently. ; I'm not an expert in multithreading... so any feedback would be much appreciated :) ; Here's the speed up I get (percentage wrt the whole simulation):. With two identical FEM models:; ![image](https://user-images.githubusercontent.com/12150715/109066864-b609f580-76bb-11eb-89e7-b76e3932fe0d.png); ![image](https://user-images.githubusercontent.com/12150715/109066298-deddbb00-76ba-11eb-935a-74966977f5a2.png) with multithreading. With four identical FEM models:; ![image](https://user-images.githubusercontent.com/12150715/109066733-822ed000-76bb-11eb-9f6a-d3376ecfeeef.png); ![image](https://user-images.githubusercontent.com/12150715/109066480-1f3d3900-76bb-11eb-8128-b2a3270f95a4.png) with multithreading. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1862:1417,failure,failures,1417,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1862,2,['failure'],['failures']
Availability,"The conda package of qglviewer on windows produces libraries prefixed QGLViewer2 instead of QGLViewer. This seems limited to the conda package on windows (does not appear on other OS). Also, the only other libqglviewer package I know for windows, which is vcpkg, is not affected neither (library is properly named QGLViewer). ; I think this should be corrected on conda package side, but meanwhile it ever happens one day, this would solve the problem for now. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4611:1005,failure,failures,1005,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4611,2,['failure'],['failures']
Availability,"The construction of xId caused an assert when `cParams->constOrder() == sofa::core::ConstraintOrder::VEL`. It happens only in debug, and it had no consequence because it was not used. Bug introduced in https://github.com/sofa-framework/sofa/pull/4213. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4389:796,failure,failures,796,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4389,2,['failure'],['failures']
Availability,"The current approach consist in recursively crawling up to the root node of; the scenegraph. Which have linear complexity in the depth of the graph. This PR implements a constant time mecanism. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3059:738,failure,failures,738,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3059,2,['failure'],['failures']
Availability,"The current implementation has flawns among which:; - lack of factorization between node & object rendering in the scenegraph view;; - the use of hardcoded color scheme in simulation:Colors. Here is a small attempt to change some of these aspects without the ambition to fix everything. ; Additionally, I would like to be able to add more colors/rendering scheme for objects that are not part of the base framework and wonder if we need to implement an extension mechanism so that object defines in plugins (eg: sofapython3::BasePrefab) can propose their own icon in the scene graph. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4536:1130,failure,failures,1130,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4536,2,['failure'],['failures']
Availability,"The current implementation is printing a deprecation message but the modified ""arg""; are also reported by caller's as error. To avoid that I don't accumulate the deprecation warning in the ""arg"" arguments; and print them immediately. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/939:118,error,error,118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/939,3,"['error', 'failure']","['error', 'failures']"
Availability,"The current implementation of file saving in XML is in fact doing a kind of complete dumping of the state of the objects in the scene. This is bad because this produce totally unreadable scene. . The idea of this PR is to implement a much more ""user friendly"" file saving as described in this issue; https://github.com/sofa-framework/sofa/issues/41. Saving caduceus.scn with the old way look produce a 2Mb file like this: http://pastebin.com/01hfAeAT; while with the current code it is a 3.5Kb file looking like this: http://pastebin.com/K3jzVxcE. Please help to improve it by reporting any problem or patch. . Additional things to do in future PR:; - support saving of scene created from Python (I have a prototype...I'm waiting integration of this PR); - support saving scene to python (with the same readability logic); - fix the broken component that parse directly the xml attribute instead of using data. This is the case of (VisualModelImpl, CubeTopology). These component have to be fixed one by one (including test to validate that there is no regression). ; - implement a more ""dump"" like feature to save a scene that have been simulated. . Checklist to be merge: ; - [ ] succeed on each compilation setup on the CI.; - [ ] does not generates new test failure. ; - [ ] does not seems to break existing scenes. ; - [ ] does not seems to break API compatibility. ; - [ ] introduces new component with tests & documentation. ; - [ ] is now 1 week old and no one send a 'no go' comment.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/116:1262,failure,failure,1262,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/116,1,['failure'],['failure']
Availability,"The current implementation of the tensor product of two vectors seems incorrect since it assumes the resulting square matrix is always symmetric.; This is not true in general, for example: ; ```; tensorProduct([0 1],[1 2]) = [0 1]'*[1 2] ; = [[0,0]; [1 2]]; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2787:807,failure,failures,807,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2787,2,['failure'],['failures']
Availability,"The current lifecycle mechanism when renaming the symbol of a Data object is depreciating the old data and setting the new data as a parent of the old one : ; `_oldData.setParent(d_newData)`. This is not 100% working, because a setValue on the old data will not be applied on the new one, because a child is only link to the parent by a callback (and not a _feedForward_). This means that a lot of the recent refactoring pr renaming data symbols are breaking. This pr aims at solving this, and is meant to be applied to all the recent pr to solve this issue. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4814:1105,failure,failures,1105,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4814,2,['failure'],['failures']
Availability,"The current process of constructing object is very complex, error prone and generates a lot of duplicated code. ; To clean a bit in this PR is:; 1) moving the common code into dedicated and opaque method: ; BaseObject::IsRequiredLinkPathPointingToCompatibleObject...; BaseObject::IsRequiredComponentInContext....; BaseObject::AddObjectToContextAndParse. 2) remove the create or canCreate method that I think where doing nothing more than the default ones (please check). 3) to update to new signature It was needed to update some rare component. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3309:60,error,error,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3309,3,"['error', 'failure']","['error', 'failures']"
Availability,"The data strings are replaced with Links! Finally!. It's obviously breaking but there is one important point: both ConstraintCorrection had a vector of LinearSolver\* while in fact only one was always used. It is now back only to a single pointer. Let's take time to discuss it with others!. @ziqiu-zeng . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3152:850,failure,failures,850,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3152,2,['failure'],['failures']
Availability,"The data strings are replaced with Links! Finally!; Let's take time to discuss it with others!. @ziqiu-zeng. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3155:653,failure,failures,653,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3155,2,['failure'],['failures']
Availability,The deprecated macro `sofa_generate_package` was not forwarded to the correct new macro.; Bug introduced in #1433 . EDIT: I joined a quick fix for SofaSparseSolver related to #1440. **Commits to be backported independently**. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1446:482,failure,failures,482,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1446,2,['failure'],['failures']
Availability,"The deprecation layer did not work in some cases (see https://github.com/sofa-framework/sofa/pull/4814). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4866:649,failure,failures,649,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4866,2,['failure'],['failures']
Availability,"The directories `screenshots` and `config` are currently created in the `build` directory of SOFA. When installing the software on a machine, those can end up in a read-only directory. . To avoid this problem, this PR changes:. On Linux:; - `screenshots` location to: `~/SOFAData/screenshots/`; - `config` location to: `~/.config/SOFA/config/` . On Windows:; - `screenshots` location to: `~/SOFAData/screenshots/`; - `config` location to: `~/AppData/Local/.config/SOFA/config/` . On MacOS:; - `screenshots` location to: `~/Library/Application Support/SOFAData/screenshots/`; - `config` location to: `~/Library/Application Support/.config/SOFA/config/` . These changes have only been tested on Linux. I'm not familiar with MacOS so I don't know what would be the best location. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5096:1321,failure,failures,1321,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5096,2,['failure'],['failures']
Availability,"The doc/ repository is removed and it now has its own GitHub repository : https://github.com/sofa-framework/olddoc. Additionally, the useless file `sofa_include_stats.md ` is also removed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2889:733,failure,failures,733,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2889,2,['failure'],['failures']
Availability,"The document is not maintained and obsolete. The relevant paragraphs are already in https://www.sofa-framework.org/community/doc/plugins/usual-plugins/multithreading/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3667:712,failure,failures,712,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3667,2,['failure'],['failures']
Availability,The duplicated code to initialize the data field in component looks really bad & error prone. ; Since c++x11 we can probably do much better.; ; If you think this is something to fix (or at least stop doing in new components) and have a better pattern that our copy-paste approach please drop it here. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/274:81,error,error,81,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/274,1,['error'],['error']
Availability,"The error pops up in debug mode. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1577:4,error,error,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1577,3,"['error', 'failure']","['error', 'failures']"
Availability,"The error was not detected on CI as nobody was using this `MatrixScale` thing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2369:4,error,error,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2369,3,"['error', 'failure']","['error', 'failures']"
Availability,"The examples were about components only available into the SofaEulerianFluid plugin. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2833:40,avail,available,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2833,3,"['avail', 'failure']","['available', 'failures']"
Availability,The existing Binding does not cover the whole feature of the c++ API.; With this PR it does.This is not breaking anything...it only add new features with their associated tests. . This allows python messages and error to be routed to the right component and have it added to its backlog and displayed in the GUIs. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/335:212,error,error,212,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/335,3,"['error', 'failure']","['error', 'failures']"
Availability,"The existing code is falling back into the std::runtime_expection if a node's data; is modified and it is not a transformation (which actually happens a lot). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3020:703,failure,failures,703,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3020,2,['failure'],['failures']
Availability,"The extern template instantiations allows to include ` SofaCUDA/config.h` before `ObjectFactor.h`. That is why the module name is defined properly in this PR. The extern template instantiations don't act directly on the module name, just the order of includes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4714:805,failure,failures,805,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4714,2,['failure'],['failures']
Availability,"The file does not seem to be used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4244:579,failure,failures,579,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4244,2,['failure'],['failures']
Availability,The file was still using the old .h location for RGBAColor. ; Replace to the new ones. ; It was also include DataFilename which was pointless. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1346:399,failure,failures,399,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1346,2,['failure'],['failures']
Availability,"The fix from Eigen https://gitlab.com/libeigen/eigen/-/commit/80142362ac35ca77bfc5ccf7ba49c9f034b57abc, making `SparseMatrixProduct` compile, is available starting 3.3.5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4630:145,avail,available,145,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4630,3,"['avail', 'failure']","['available', 'failures']"
Availability,"The following code create memory leaks:. ```cpp; static const BaseClass* get(); {; static TClass<T, Parents> *theClass=new TClass<T, Parents>();; return theClass;; }; ```. To remove the memory leak, it has to be replaced by:. ```cpp; static const BaseClass* get(); {; static TClass<T, Parents> theClass;; return &theClass;; }; ```. However, `Parents` can be a `std::pair`, which one of the pair type can be an abstract type. Since it is not possible to instantiate an abstract type, the compilation fails. This PR removes the use of `std::pair` to introduce a structure that does not need to instantiate the types. The compilation now succeeds. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3183:1189,failure,failures,1189,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3183,2,['failure'],['failures']
Availability,The following scenes must be fixed because they show warnings or error messages. ```; [INFO] [PluginFinder] Found 6 files with advice:; examples\Benchmark\Performance\MatrixAssembly\MatrixAssembly_direct.scn; examples\Components\linearsolver\preconditioner\FEMBAR_PCG_AsyncSparseLDLSolver.scn; examples\Components\loader\GIDMeshLoader.scn; examples\Components\solver\EulerExplicitSolver\EulerExplicitSolver.scn; examples\Components\solver\EulerExplicitSolver\EulerSymplecticSolver.scn; examples\Components\solver\NewmarkImplicitSolver.scn. [INFO] [PluginFinder] Found 9 files with deprecated:; examples\Components\interactionforcefield\BoxStiffSpringForceField.scn; examples\Components\linearsolver\FEMBAR_AsyncSparseLDLSolver.scn; examples\Components\misc\sleep\test_sleep.scn; examples\Components\misc\sleep\test_sleep2.scn; examples\Components\misc\sleep\test_sleep3.scn; examples\Components\visualmodel\OglLabel.scn; examples\Tutorials\Mappings\TutorialMappingOctopusArticulated.scn; examples\Tutorials\StepByStep\Visual\5_Visual.scn; examples\Tutorials\StepByStep\Visual\6_Visual.scn. [INFO] [PluginFinder] Found 132 files with warning:; examples\Benchmark\Analysis\constantMomentum.scn; examples\Benchmark\Performance\benchmark_cubes.scn; examples\Benchmark\Performance\BuildLCP\BuiltConstraintCorrection.scn; examples\Benchmark\Performance\BuildLCP\NonBuiltConstraintCorrection.scn; examples\Benchmark\TopologicalChanges\AffineMovementConstraint__RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\FixedConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\FixedPlaneConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\LinearMovementConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectDirectionConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToLineConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToPlaneConstraint_RemovingMeshTest.scn; examples\Benchmark\Topologi,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3352:65,error,error,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3352,1,['error'],['error']
Availability,"The following warnings appears everytime a Link is declared:. https://learn.microsoft.com/en-us/cpp/error-messages/compiler-warnings/compiler-warning-level-1-c4305?view=msvc-170. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3763:100,error,error-messages,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3763,3,"['error', 'failure']","['error-messages', 'failures']"
Availability,"The function `buildDampingMatrix` was introduced in #2777. By default, if a component does not implement it, it will call the implementation from `BaseForceField` which calls `addBToMatrix` with a warning message. This is the compatibility layer.; Therefore, I implemented `buildDampingMatrix` everywhere there is no `addBToMatrix` implementation. It will avoid to display the warnings of the compatibility layer and explicit the fact that there is no damping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3948:1005,failure,failures,1005,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3948,2,['failure'],['failures']
Availability,"The function `sofa::helper::system::DataRepository.findFile` triggers a `msg_error` if the file is not found. In the case of `PrecomputedConstraintCorrection`, an error is not appropriate because the file can be generated. Instead I used `msg_info`. Because the log message contained trailing line breaks, I introduced a couple of utility functions to remove them. Example of output:. ```; [INFO] [PrecomputedConstraintCorrection(PrecomputedConstraintCorrection1)] File SquareCloth1-675-0.04.comp NOT FOUND in :C:/Users/Alex/Dev/sofa1/src/share:C:/Users/Alex/Dev/sofa1/src/examples:C:/Users/Alex/Dev/sofa1/builds:C:/U; sers/Alex/Dev/sofa1/builds. Compliance will be pre-computed and saved into a file; ```. It fixes a scene test from https://github.com/sofa-framework/sofa/pull/4106. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4108:163,error,error,163,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4108,3,"['error', 'failure']","['error', 'failures']"
Availability,"The function is no longer used. I think it was never used at all in the master branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4620:631,failure,failures,631,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4620,2,['failure'],['failures']
Availability,"The function is not working at all and was not tested. In this PR:; - add tests for relativePathTo, following the existing function documentation.; - fix the function. Signed-off-by: Damien Marchal <damien.marchal@univ-lille1.fr>. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2350:775,failure,failures,775,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2350,2,['failure'],['failures']
Availability,"The function pluginIsLoaded is not behaving as it name suggest and does not detect plugin that have not been loaded using an absolute file path. . See: ; https://github.com/SofaDefrost/plugin.SofaPython3.deprecated/issues/137. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1615:771,failure,failures,771,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1615,2,['failure'],['failures']
Availability,The functions ParallelFor and ParallalFor2d make the for loop parallelization easier to write.; They internally used the task scheduler and automatically perform the the tasks partitioning and creation. ParallelFor is used to parallelize for loops iteration on one index.; ParallelFor2d is used to parallelize for loops iteration on two indices. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/902:602,failure,failures,602,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/902,2,['failure'],['failures']
Availability,"The goal is to comment useless warnings.; The following line was introduced to deprecate ExtVector. However, before adding this line it is necessary to remove all the use of ExtVector in the core of sofa. Indeed, the current compilation generates thousand of warnings and slow down significantly the compilation. In addition, remove the possibility to exploit other warnings since too much information is printed. . //[[deprecated(""since 19.06, ExtVector is deprecated. Use helper::vector instead. Will be removed in 19.12"")]]. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1144:277,down,down,277,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1144,3,"['down', 'failure']","['down', 'failures']"
Availability,"The goal is to reduce the number of alias declarations. I propose 2 methods:. 1. using traits (for example `DataVecCoord_t<Out>`). This is illustrated in `Multi2Mapping`.; 2. ~~using a set of macros. The aliases are still declared, but it is hidden inside the macro.~~. I find the trait approach elegant (nothing is hidden and no use of macro or additional code), but too much verbose when only one template parameter is available (e.g. `TetrahedronFEMForceField`). The advantage of the macro is that it does not require changes in the code other than the alias declarations. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4788:421,avail,available,421,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4788,3,"['avail', 'failure']","['available', 'failures']"
Availability,"The goal was to avoid type conversions by removing explicit types. Instead I took the rigorous returned types and added static_assert when two types are interacting. Curiously, I found out that the templated code (intersection with Sphere) is not called anywhere. Let's see if a known plugin is using it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3287:849,failure,failures,849,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3287,2,['failure'],['failures']
Availability,"The goal was to be able to set the minimal requirements to get Sofa.Component + runSofa + batch only, and not having seemingly unrelated dependency. Fixes:; - runSofa needed absolutely Sofa.Gui.Qt but not using it; - not possible to compile Sofa.Gui.Common without having to compile Sofa.Gui (which should be possible). and cmake cleanups here and there. \+ an other unrelated fix by repairing the typo for simulation core tests ; the consequence was that simulation.core.tests was always activated even if sofa_build_tests was off. This PR is a preliminary step to have SofaGui totally deprecated (and not used anymore by runSofa). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3323:384,repair,repairing,384,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3323,3,"['failure', 'repair']","['failures', 'repairing']"
Availability,"The idea is to define component Data's where they are declared, usually in the header file. See https://isocpp.org/wiki/faq/cpp11-language-classes#member-init. Pros:; - All pros described in https://isocpp.org/wiki/faq/cpp11-language-classes#member-init; - Data name, variable name and description are declared and defined at the same place. No more back and forth between the declaration and the constructor definition.; - No duplicates between Doxygen and Data description. Cons:; - A change in the definition leads to a re-compilation of the files including the header; - Does not solve https://github.com/sofa-framework/sofa/issues/274 or https://github.com/sofa-framework/sofa/issues/44. An evolution of this proof of concept will be proposed in another PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2613:1307,failure,failures,1307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2613,2,['failure'],['failures']
Availability,"The idea is to ease the understanding of what the **RestShapeSpringsForceField** does. Usually, this component is used to fix points, or follow a path, using elastic forces. That is why, a suggestion of a new name could be **SpringConstraint**. It would be a constraint based on penalties. Note that this PR requires more work for the renaming. For the moment, it is just a support for a discussion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3903:944,failure,failures,944,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3903,2,['failure'],['failures']
Availability,"The idea is to provide tools to write multithreaded code more efficiently. The functions introduced in this pull request allow to apply a function to a range in parallel.; Unit tests are provided.; The newly added functions are used as example in two places:; - GenericConstraintSolver: the code is unique for both sequential and parallel execution; - ParallelHexahedronFEMForceField: no ambiguity: the code is only for parallel execution. But nothing prevent to have a code supporting both sequential and parallel execution. But the component is not totally ready for a merge with HexahedronFEMForceField. Note that it avoids a lot of boilerplate code, hence reducing the complexity of the file. I think this will allow us to write more multithreaded code. In the back, the parallel loop uses a task scheduler and divides the number of elements in `n` ranges, where `n` corresponds to the number of threads in the task scheduler. This is to execute exactly `n` tasks, instead of `m`, if `m` is the number of elements. It avoids the overhead of creating a task for each element. It is more efficient when the number of elements is large. Benchmarks are yet to perform. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3548:1713,failure,failures,1713,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3548,2,['failure'],['failures']
Availability,"The idea is to trigger a callback after every plugin loading to permit SofaPython and SofaPython3 to check if any site-packages directory can be added to sys.path. No more manual PYTHONPATH setting should be needed with this change. To be backported in v20.12 to ease SofaPython3 usage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1777:831,failure,failures,831,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1777,2,['failure'],['failures']
Availability,"The idea of this PR is to check if some work done in 2016 in the branch ""Collodi"" has to be patched. The branch has been updated with recent version of master... probably with some conflicts resolution errors.. so it won't compile asis. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1492:202,error,errors,202,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1492,3,"['error', 'failure']","['errors', 'failures']"
Availability,"The implementation in accessor.h were deprecated with the one in Data.h. In addition, when trying to get an accessor from a data containnig an object overloading Data<>, this implemention; (the one in accessor.h) confuses the system wich mis-select to find the proper accessor implementation and fallback to the one; that is not offering the vectorized API. Removing the getReadAccess, getWriteAccess, getWriteOnlyAccess fix that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2278:975,failure,failures,975,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2278,2,['failure'],['failures']
Availability,"The implementation was not correct.; BaseData::getLinkPath() should return a string pointing to the current data not the link value; of a parented data. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2354:697,failure,failures,697,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2354,2,['failure'],['failures']
Availability,"The implementations of `addDForce` and `addBToMatrix` were removed in https://github.com/sofa-framework/sofa/commit/044f78ad4e3931b9754a90c251360f8f1e69c902. According to the commit message, an explicit formulation of the forces gives ""the best results"". This could not be tested on the example provided with SOFA as it is too simple (particles). To me, the computations seem ok, so I am in favor to keep them. However, we can discuss about activating the implicit formulation or not (through a Data?).; The implementation of `buildDampingMatrix` has been added according to #3967. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3999:1126,failure,failures,1126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3999,2,['failure'],['failures']
Availability,"The inheritance link between CollisionResetVisitor and CollisionVisitor and some other had a consequence that ProcessGeometricalData was called multiple times in the FreeMotionAnimationLoop when the free motion and the collision detection where computed in parallel. . Another issue was that we had two time the timers for the substeps of the collision detection in the case of parallel computation : IMO only the AnimationLoop should have timers for global computation made by visitors. Here I remove the one of the Pipeline. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5042:1073,failure,failures,1073,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5042,2,['failure'],['failures']
Availability,"The initialization of the data disappeared at some point in the past 🤥; This PR restores it. Credits to:; - [InSimo](https://github.com/InSimo)(@JeremieA , @fjourdes ) ; - @remibessard who reported it back to us. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1939:757,failure,failures,757,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1939,2,['failure'],['failures']
Availability,"The intention of `CRSMultiMatrixAccessor` was to use it as a replacement of `DefaultMultiMatrixAccessor` in `MatrixLinearSolver`. The switch is done at compilation time using a macro.; However, `CRSMultiMatrixAccessor` compilation was also controlled by the same macro which is not switched everyday. In other words, `CRSMultiMatrixAccessor` was almost dead code. I extracted the `CRSMultiMatrixAccessor` class from the `DefaultMultiMatrixAccessor` file to put it in its own file.; I removed the condition on the compilation of `CRSMultiMatrixAccessor` so that this code is always compiled. Currently, I don't know if `CRSMultiMatrixAccessor` is useful. It may be removed in the future. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2220:1231,failure,failures,1231,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2220,2,['failure'],['failures']
Availability,"The issue with #1913 was that Sofa.GL was added to plugin_list.conf.default ; This PR aims to clarify things between modules and plugins.; `sofa_add_plugin` will now be the ONLY macro that adds targets to plugin_list.conf.default, which totally makes sense. Also, for the record:; > Plugin = Something that CAN be loaded by the PluginManager, through a RequiredPlugin for example. The entry point of a Plugin is initExternalModule (and that name could be better).; > ; > Module = Something that CANNOT be loaded by the PluginManager. Most of the time, modules are not loaded manually, they are loaded implicitly during dependency resolution. The entry point of a Module is init (and that name could also be better).; > ; > From a CMake point of view, both Plugin and Module can be standalone packages or simple targets added to a bigger package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1941:1390,failure,failures,1390,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1941,2,['failure'],['failures']
Availability,"The jacobian is already computed. It must be transposed and multiply by a right-hand side matrix in this overload of `applyJT`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3776:672,failure,failures,672,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3776,2,['failure'],['failures']
Availability,"The last parameter of getAttribute is the value returned by default. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3946:615,failure,failures,615,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3946,2,['failure'],['failures']
Availability,"The line `dJ.startVec( row );` crashes in an example in the branch of #2777. I am not able to explain why, and I am not able to reproduce it in a simple example. But from what I can understand:. - Usage of `startVec` is internal to Eigen. I am not sure it is meant to be used outside of Eigen (but it's in the public API); - Manipulation of the `EigenSparseMatrix` is not consistent with the other non-linear mappings. This PR mimics the pattern from the other mappings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3803:1015,failure,failures,1015,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3803,2,['failure'],['failures']
Availability,"The line defining node gathering all the plugins was immediately closed (slash at the end); consequently, the second `</Node>` was closing the root node itself. (so the loaded scene was containing nothing). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2831:751,failure,failures,751,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2831,2,['failure'],['failures']
Availability,"The link to the doc was broken. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2011:576,failure,failures,576,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2011,2,['failure'],['failures']
Availability,"The link to the linear solver was always overwritten by the first linear solver in the current context. This PR adds the possibility for the user to specify which linear solver to use. This is useful when there are multiple linear solver in the current context (preconditioning methods). EDIT: about GlobalSystemMatrixExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2497:872,failure,failures,872,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2497,2,['failure'],['failures']
Availability,"The message was not making sense and was incorrect anyway,. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4120:604,failure,failures,604,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4120,2,['failure'],['failures']
Availability,"The method `applyConstraint(sofa::core::behavior::ZeroDirichletCondition* matrix)` was not implemented. It is added in this PR. A unit test is also added, based on the tests from `PartialFixedConstraint_test`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3925:754,failure,failures,754,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3925,2,['failure'],['failures']
Availability,"The method `umul24` disappeared fromt eh header `crt/device_functions.hpp` in cuda 12. It originally was just a wrapper for a call to `__umul24`, therefore the change. . This wrapper disappearing might indicate a deprecation, so this solution will maybe not be one with the next cuda release. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4319:837,failure,failures,837,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4319,2,['failure'],['failures']
Availability,The method exists in Sofa and is useful to explore the graph between components. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/843:337,failure,failures,337,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/843,2,['failure'],['failures']
Availability,"The method getTime has a problem of precision over the simulation in the animationLoop. Playing a scene with a Dt of 0.0051 and comparing the return time to ground truth reveal the error. See below. In DefaultAnimationLoop::step; ```; std::cout << ""!!!!!!!DefaultAnimationLoop::get startTime"" << std::endl;; SReal startTime = SReal(gnode->getTime());; std::vector<SReal> refs = { 0.0, 0.0051, 0.0102, 0.0153, 0.0204, 0.0255, 0.0306 };; for (auto ref: refs); std::cout << ""diff Time: "" << startTime - ref << std::endl;; ```. give:. ```; !!!!!!!DefaultAnimationLoop::get startTime; diff Time: 0; diff Time: -0.0051; diff Time: -0.0102; diff Time: -0.0153; diff Time: -0.0204; diff Time: -0.0255; diff Time: -0.0306. !!!!!!!DefaultAnimationLoop::get startTime; diff Time: 0.0051; diff Time: 0; diff Time: -0.0051; diff Time: -0.0102; diff Time: -0.0153; diff Time: -0.0204; diff Time: -0.0255. !!!!!!!DefaultAnimationLoop::get startTime; diff Time: 0.0102; diff Time: 0.0051; diff Time: 0; diff Time: -0.0051; diff Time: -0.0102; diff Time: -0.0153; diff Time: -0.0204. !!!!!!!DefaultAnimationLoop::get startTime; diff Time: 0.0153; diff Time: 0.0102; diff Time: 0.0051; diff Time: 1.73472e-18; diff Time: -0.0051; diff Time: -0.0102; diff Time: -0.0153. !!!!!!!DefaultAnimationLoop::get startTime; diff Time: 0.0204; diff Time: 0.0153; diff Time: 0.0102; diff Time: 0.0051; diff Time: 0; diff Time: -0.0051; diff Time: -0.0102. !!!!!!!DefaultAnimationLoop::get startTime; diff Time: 0.0255; diff Time: 0.0204; diff Time: 0.0153; diff Time: 0.0102; diff Time: 0.0051; diff Time: 3.46945e-18; diff Time: -0.0051. !!!!!!!DefaultAnimationLoop::get startTime; diff Time: 0.0306; diff Time: 0.0255; diff Time: 0.0204; diff Time: 0.0153; diff Time: 0.0102; diff Time: 0.0051; diff Time: 3.46945e-18; ```; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1079:181,error,error,181,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1079,1,['error'],['error']
Availability,"The module name is used by the PluginManager to identify a plugin. And there seems to have a need that the plugin binary filename matches the module name. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4720:699,failure,failures,699,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4720,2,['failure'],['failures']
Availability,The modules/SofaOpenglVisual/CMakeLists.txt has been changed because it always tried to generate the tests even if SOFAGUI_BUILD_TEST is set false. It makes the compilation fail. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1091:437,failure,failures,437,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1091,2,['failure'],['failures']
Availability,"The name `CollisionOBB` mismatched the module name `CollisionOBBCapsule`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3107:618,failure,failures,618,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3107,2,['failure'],['failures']
Availability,"The never-ending quest of eradicating implicit type conversion. This PR contains two things:. 1) Introduction of a user-defined literal for SReal constants.; 2) Avoid implicit conversions. **Introduction of a user-defined literal for SReal constants**. When dealing with constants that should be SReal, I saw the the following behavior in the SOFA code base:. - The `SReal` type is ignored and the constant is considered either as a double or a float, or any other primitive type. Example: `Vector3(1.f, 1.f, 1.f)`, `Vector3(1., 1., 1.)`, or `Vector3(1,1,1)`.; - The constant is C-style cast. Example: `Vector3( (SReal)1, (SReal)1, (SReal)1)`; - The constant is `static_cast`. Example: `Vector3( static_cast<SReal>(1), static_cast<SReal>(1), static_cast<SReal>(1))`. The first option is what we want to avoid. The second option has some problems that the third can solve. However, the third option is ugly, long and can be complex to read. To simplify such expressions, I introduced a user-defined literal. Example: `Vector3(1_sreal, 1_sreal, 1_sreal)`. This PR also fixes some implicit conversions that can be avoided.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3314:1665,failure,failures,1665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3314,2,['failure'],['failures']
Availability,"The new major version of[ MSVC 2022 (v17.4)](https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-4/) seems to change some std header inclusions.; `SceneLoaderFactory.h` did not know `std::string` anymore. \+ SpatialGridContainer.h was not compiling anymore as well, I just removed all the shenaningans made +15years to support the at-that-time experimental `unordered_map`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3466:932,failure,failures,932,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3466,2,['failure'],['failures']
Availability,"The new message is:; ```; [ERROR] [TriangleSetTopologyContainer(topo)] Cannot find edge 0 [161, 158] in triangle 0 [0 161 158] in the provided edge list (@/vtk file/topo.edges). It shows an inconsistency between the edge list (@/vtk file/topo.edges) and the triangle list (@/vtk file/topo.triangles). Either fix the topology (probably in a mesh file), or provide only the triangle list to '/vtk file/topo' and not the edges. In the latter case, the edge list will be computed from triangles.; ```. Previously it was:; ```; [ERROR] [TriangleSetTopologyContainer(topo)] Cannot find edge 0 [161, 158] in triangle 0; ```. Fixes https://github.com/sofa-framework/sofa/issues/2636. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2638:27,ERROR,ERROR,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2638,4,"['ERROR', 'failure']","['ERROR', 'failures']"
Availability,The operator>> was not functionning properly as it was returning; with a failbit set because of the in.peek() on empty string. This error; was generating a warning in UniformMass. The PR:; - fix this error; - adds a test that validate that the code is correct and does not generate error anymore.; - makes some sout/serr cleaning in uniformmass. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/993:132,error,error,132,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/993,5,"['error', 'failure']","['error', 'failures']"
Availability,"The option handleSeams was supposed to mimic the same mechanism as in the OglModel, i.e duplicated vertices when texture coordinates are present (as it is possible that one vertex has multiple texture coordinates).; This option never worked because of references errors ; this PR corrects it. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/923:263,error,errors,263,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/923,3,"['error', 'failure']","['errors', 'failures']"
Availability,"The option was available only for MSVC. There is no reason no to add it for gcc/clang.; I did not tested the option myself. Fix some typos. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3922:15,avail,available,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3922,3,"['avail', 'failure']","['available', 'failures']"
Availability,"The orientation must be skipped. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4891:577,failure,failures,577,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4891,2,['failure'],['failures']
Availability,"The parameter is not used in the function. Only its type. The parameter is here probably just for template deduction. I suggest to remove the use of a parameter. Reason in https://github.com/sofa-framework/sofa/pull/4816. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4817:766,failure,failures,766,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4817,2,['failure'],['failures']
Availability,The path to the pluginManager.cpp is incomplete in the CMakeLists. Thus prefix was always empty and nod set to _d in debug mode. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1313:385,failure,failures,385,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1313,2,['failure'],['failures']
Availability,"The position and edges vectors were not cleared if load() is called multiple times. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/337]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3702:700,failure,failures,700,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3702,2,['failure'],['failures']
Availability,"The preproc define SOFA_WITH_THREADING seems to not be used at all (except in a logger_test) and the cmake `SOFA_WITH_THREADING` option itself is misleading (both the name and the description); ```SOFA_WITH_THREADING ""Compile sofa with thread-safetiness support (PARTIAL/EXPERIMENTAL)``` 🤔 ?. So this PR removes everything related to this option, and as it was not used for some time, ; I did not do any compat/deprecation... EDIT:. After some investigation, it was created to let the user chose if he wants thread safety with the message dispatcher, with this commit https://github.com/sofa-framework/sofa/commit/2aebe06241c6f8b391f0cc3d32b12ed90e40ef96 (did not find the related PR) ; and it disappeared with #1799 (where the message dispatcher will always be thread-safe). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3565:1320,failure,failures,1320,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3565,2,['failure'],['failures']
Availability,"The preprocessor directive #warning is not standard. It does not exist on Windows in the Visual C++ compiler, creating an error in compilation.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3:122,error,error,122,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3,1,['error'],['error']
Availability,The problem the PR solve is related to how data are changed by the setValue function. When writing in data through an opaque pointer it is important to properly notify the data successors that a data has changed. This is why write access *must* be done using beginEdit/endEdit and absolutely not; by removing the const qualifier from q getValueVoidPtr using a cast (what was done in the setValue function). Doing it the wrong way break the data update mechanism. . The PR fix that.; To ease the writing of the beginEdit/endEdit pair it also add a RAII WriteAccessWithRawPtr. It is in BaseData...because it is for BaseData. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1006:881,failure,failures,881,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1006,2,['failure'],['failures']
Availability,The problem was that a failure to create a component due to template mismatch on a; pluginized object shows the pluginization message instead of template mismatch one. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1332:23,failure,failure,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1332,3,['failure'],"['failure', 'failures']"
Availability,"The purpose of this PR is to unify the mass components in SOFA (UniformMass, DiagonalMass and MeshMatrixMass):; - unify the naming of data for mass information (vertexMass, massDensity and totalMass); - unify their initialization process; - apply the coding rules (especially regarding the variable prefix d_ and m_) and use the msg API; - add the feature of dataTracker on the data for mass information; - add support for additional CUDA templates for the MeshMatrixMass (that should always be preferred as default mass). This should ease the understanding of new users at first look.; All tests and checks added should also make these codes more robust. A script is added with this PR to automatically update all your scene files (.xml and .scn). I invite to be really **prudent** before merging this PR, since it affect basically all simulations. Note: @hdeling I removed unused functions (numericalIntegrationOrder, numericalIntegrationMethod, integrationMethod) in MeshMatrixMass that I think were used before the ""plugin.HighOrder"" plugin was created. Can you confirm this?. Suggestion for future work:; - rename MeshMatrixMass into SparseMass; - move MeshMatrixMass with DiagonalMass; - make DiagonalMass depends from MeshMatrixMass (since it's a simplified -lumped- derived approach from MeshMatrixMass) : this would clearly factorize the code and make it more robust. PS : bisous. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/637:648,robust,robust,648,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/637,4,"['failure', 'robust']","['failures', 'robust']"
Availability,"The rational is that we should reduce as much as possible the interface size of an object as long as the same service can be done in our case the two variation are:; myData == value; vs; myData.getValue() == value. The second one has the advantage:; - to make explicit that there is computation/accessor. ; - the object we put in Data<> does not need anymore to have == operators. ; - as the Data interface has less functions so it is easier to learn/discover/read/remember. . EDIT: I'm not sure it is a good idea to remove the operator== directly without transition period, this is why I'm searching for some template tricks that would print the deprecation warning then stop the compilation but I didn't managed to do so. Any help appreciated.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1639:1291,failure,failures,1291,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1639,2,['failure'],['failures']
Availability,"The removed code is a copy/paste of its base class. It's useless, and also triggers warning because it hides its base class implementation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2430:684,failure,failures,684,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2430,2,['failure'],['failures']
Availability,"The removed line prevents referencing this plugin in another, externally built SOFA plugin.; (doing a `find_package(SofaPython)` from the CMakeLists.txt of another plugin, built as a standalone project did not work). I don't know the side-effect of simply removing this line, but I also don't see in which case this could (or should) work anyway: there is no reason to create a target during the import of a package. the targets are created at install, and loaded during the package import, not created, to my understanding. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/888:781,failure,failures,781,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/888,2,['failure'],['failures']
Availability,"The removed specializations were not that different from the generic `draw` method. So, I removed them. I also took the opportunity to implement bbox computation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4823:707,failure,failures,707,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4823,2,['failure'],['failures']
Availability,"The rigid type is registered both in applications/plugins/CollisionOBBCapsule/src/CollisionOBBCapsule/geometry/CapsuleModel.cpp and applications/plugins/CollisionOBBCapsule/src/CollisionOBBCapsule/geometry/RigidCapsuleModel.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4709:773,failure,failures,773,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4709,2,['failure'],['failures']
Availability,"The root tree is now displayed in the tree. Previously, only the root children were displayed. This root item provides more information about the time step: the time that has not been measured by timers (children). It's in the columns 'Self'. In the example, 3% of the step is not measured, corresponding to 1 ms. The second addition is the overhead due to timers processing. It is displayed in the left panel. Here, it takes 10 ms to process the incoming timers and update the chart. ![image](https://user-images.githubusercontent.com/10572752/151393063-10d272a0-38d9-4c64-9a76-b326fb010e15.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2643:1142,failure,failures,1142,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2643,2,['failure'],['failures']
Availability,"The same code in `ForceField` and both classes of this PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4779:603,failure,failures,603,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4779,2,['failure'],['failures']
Availability,"The scene `examples/Components/animationloop/FreeMotionAnimationLoop.scn` takes a lot of time to initialize. I would like to warn the user that it is normal, that SOFA did not freeze. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2470:728,failure,failures,728,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2470,2,['failure'],['failures']
Availability,"The scene checker detects when we use a plugin but forgot the ""required plugin"" tag and tells us how to add it in our scene, but without closing the tag. This PR fixes the bug in the suggestion and corrects some typos in error messages in the same file. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/573:221,error,error,221,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/573,3,"['error', 'failure']","['error', 'failures']"
Availability,"The scene graph view is not updated to reflect the content of the scene changes. ; This is because a mecanism was implemented to not update the view at each simulation step to maximise performance. . This may be useful when max performance is needed but this lead to an inconsistant display. . In this PR I try to fix the situation by allowing three states:; - lock = true => changes in the scene graph are not reflected into the model but the model is flagged as dirty ; - lock = false => changes in the scene graph are imediately reflected into the model; - dirty => true => the model is not anymore synchronized with the sofa scene graph; - dirty => false => the model is showing the content of the scene graph. when going from lock=true to lock=false the model is updated if it was dirty. . To let user to control if they want the graph to be updated we add an icon to lock/unlock the model state. If the model is dirtyfied; a the icon is reflecting the change (with an highly professional icon free of copyright ;)) . Fixes #2920 . The PR also contains few fixes for the modeller (that is still broken anyway). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3026:1662,failure,failures,1662,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3026,2,['failure'],['failures']
Availability,"The scene is generated successfully the first time with the the OglSceneFrame component correctly loaded and without warnings.; But, with or without any parameters specified in the component, I have been unable for the last few days to reload the scene. A segfault error is appearing.; I tried another scene containing this component and the result is the same.; I confirm that without this component, both scenes properly reload (using CTRL+R). Thanks in advance for resolving this issue!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/462:265,error,error,265,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/462,1,['error'],['error']
Availability,The script would sometimes plot completely wrong info because some numbers were treated as strings. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/519:356,failure,failures,356,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/519,2,['failure'],['failures']
Availability,"The second parsing values were not updated because insert() of (unordered_)map does not overwrite values. This bug was actually making all the scene tests (using runSofa) successful... 🤐. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3672:732,failure,failures,732,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3672,2,['failure'],['failures']
Availability,"The solver crash if the system is rank deficient because it read memory at indices like xxx[0]. . This PR:; - adds a conditional test prevent that. ; - adds SOFA_WITH_FLOAT, SOFA_WITH_DOUBLE to make it consistant with the rest of sofa.; - removes commented code. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/655:521,failure,failures,521,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/655,2,['failure'],['failures']
Availability,"The solver offers two methods to solve the constraint system: `build_LCP` and `build_problem_info`. They were very similar and long functions with a lot of duplicated code. The duplicated code has been moved into small functions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3474:774,failure,failures,774,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3474,2,['failure'],['failures']
Availability,"The state of vector.h and set.h is a bit messy right now. . A recent PR have added tests to vector & fix several crashes & infinite loop. It appears that the problematic code is also in set.h so a general code factoring is needed. . There is also some details on container refactoring in PR #113 ; Finally it is not very clear what should be in std:: and what should be in sofa::helper:: ...; and there is a lot of code in the .h for only two specialization I see no reason why they shouldn't be make extern and implemented in .cpp. . So this PR is a WIP in which everyone is welcome to contribute. My current todo list is:; - implement tests for set so we can refactor safely. ; - declare int & unsigned int as extern template & move specialization from .h to .cpp for vector & set; - have everything in sofa::helper for consistancy (vector, set, map, pair, list, deque); - fix the problem pointed by @maxime-tournier in #271 in the remove* functions. ; - remove the lines added by hugo ; ```cpp; /// \todo: refactoring of the containers required; /// More info PR #113: https://github.com/sofa-framework/sofa/pull/113; ```; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/278:1382,failure,failures,1382,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/278,2,['failure'],['failures']
Availability,"The static variable is constructed as soon as the plugin is loaded. This could be a problem if the plugin initialization failed (SofaCUDA). This PR remove the variable for a static function. The code is called only when used. Note that this PR is temporary, waiting for https://github.com/sofa-framework/sofa/pull/4852 where this variable won't be necessary. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4883:903,failure,failures,903,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4883,2,['failure'],['failures']
Availability,"The struct Operation was defined twice in two different files while; having the same implementation. It can be factorized into a single; implementation. The name Operation has been changed to; CenterOfMassMappingOperation for more clarity. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1957:784,failure,failures,784,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1957,2,['failure'],['failures']
Availability,"The template specializations that were in the cpp file are now supported in the non-specialized function in the .h file.; The changes also add support of filtering from CompressedRowSparseMatrixConstraint and any type of blocks. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4442:773,failure,failures,773,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4442,2,['failure'],['failures']
Availability,"The test `QuaterTest::EulerAngles` randomly fails on the CI. Here is a test that fails 100% of the time. Anybody wants to fix it?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4122:675,failure,failures,675,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4122,2,['failure'],['failures']
Availability,"The test is on large displacement. . Note: As stated in the class comments, the small displacement does not give the expected result. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4781:678,failure,failures,678,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4781,2,['failure'],['failures']
Availability,"The test was failing due to triangle orientation a priori, let's check the CI. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1338:335,failure,failures,335,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1338,2,['failure'],['failures']
Availability,"The timer ""ApplyCorrection"" is already in the mother class in applyCorrectionTask which is the method that actually call applyCorrection. ""Compute And Apply Motion Correction"" was thus redondant and the second ""ApplyCorrection"" was misleading. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5045:788,failure,failures,788,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5045,2,['failure'],['failures']
Availability,"The timer `Accumulate Constraint` included two steps: 1) reset the constraint, 2) accumulate the constraints.; Since resetting the constraints is not negligible, I suggest that each of the step has its own timer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2469:757,failure,failures,757,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2469,2,['failure'],['failures']
Availability,The title says it all. . I'm confused as the windows build used to terminate correctly when the PR was merged :-/. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/391:371,failure,failures,371,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/391,2,['failure'],['failures']
Availability,The title says it all. Feel free to comment if any of the removed scenes should be kept. Removed scenes:; - Components/controller/ArticulatedHierarchyBVHController.scn; - Components/controller/EdgeSetController.scn; - Components/controller/MechanicalStateController.scn; - Components/controller/NodeToggleController.scn; - Components/forcefield/BuoyantForceField.scn; - Components/forcefield/BuoyantForceField2Boxes.scn; - Components/forcefield/ForceMaskOff.scn; - Components/forcefield/WashingMachineForceField.scn; - Components/mapping/CatmullRomSplineMapping.scn; - Components/mapping/ProjectionToTargetLineMapping.scn; - Components/mapping/ProjectionToTargetPlaneMapping.scn; - Components/topology/HexaCenterPointMapping.scn; - Demos/10000.scn. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/922:1005,failure,failures,1005,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/922,2,['failure'],['failures']
Availability,"The underlying idea is that we should have only one alias for code consistency and to make things clearer.; I didn't deprecates/removed the long names alias but this should be done in a future PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3299:741,failure,failures,741,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3299,2,['failure'],['failures']
Availability,"The unit test in this PR relied on `rand()`, which was seeded by `srand(time(nullptr))`. However, it means that every time the test is executed, the generated input values are different. The test is not repeatable. And sometimes, the generated values lead to singularities, which are values not supported by the tested functions.; The changes in this PR made the random generation deterministic and portable, so that the test is repeatable. We also make sure that the generated values don't lead to singularities. For more information about the singularities, see https://github.com/sofa-framework/sofa/pull/4122. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4126:1158,failure,failures,1158,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4126,2,['failure'],['failures']
Availability,"The use of the macro CHECK_TOPOLOGY has been removed from the code through several PR. This one totally remove it. Remove duplicate call to createEdgeSetArray from Modifier when adding an edge to the topology. As all topology buffers are init at start, if hasEdges return 0, it means the topology is really empty not that the topology is not init.; This behavior has been set in the PR #967. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1399:648,failure,failures,648,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1399,2,['failure'],['failures']
Availability,"The use of those two step where not logical because:. 1. It only acted either on object inherited from `BaseConstraintSet` (in `buildConstraintMatrix`); 2. It was using part of the mechanical state code dedicated to Lagrangian based constraints (in `resetConstraint`). Tested the diff with ` AttachConstraint.scn`: nearly no performance change but still working. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4314:907,failure,failures,907,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4314,2,['failure'],['failures']
Availability,"The user was never informed that its scene does not compute bbox.; Consequently the viewer settings based on the bbox are messed up. This PR will at least warn the user that he needs to either:; - add a component which implements computeBBox; - implement itself in its own components; - force set bbox=""minx miny minz maxx maxy maxz"" parameter in a node/component. The logic would want to set it in the root node.; This PR fixes also the fact that the bbox parameter was being ignored by the BBox computing visitors. . This PR is related to issue #29, but it does not compute BBox automatically so #29 should not be closed, in my opinion. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/524:895,failure,failures,895,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/524,2,['failure'],['failures']
Availability,"The usual :p, adding dependencies introduced in #2777 in the CMakeLists.txt. It will fix the out-of-tree builds based on the current master, especially for SofaPython3. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3846:713,failure,failures,713,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3846,2,['failure'],['failures']
Availability,"The usual cleaning:. 1- removed commented code; 2- added using; 3- sofa rules with name (m_, d_); 4- moved definitions from .h to .inl; 5- replaced old serr/sout with msg_warning, msg_error, msg_info. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/846:457,failure,failures,457,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/846,2,['failure'],['failures']
Availability,"The usual pattern of component classes is the following:. - A generic method is defined in the base class of the component. Since it is generic, it does not know the type of the `DataTypes` (it's not templated). Instead, it acts on `VecId`.; - In a second base class, inheriting from the first one, the `DataTypes` is known (the class is templated). Therefore, the methods can be defined to work on the right type.; - In this class, the generic method calls the template-specific one. IMO, the template-specific method should not be public. In this PR, they are moved to protected. I think also, that the generic methods can be final, but this is breaking, so I am not sure that it is a good idea to keep the final keyword. The PR starts with the `final` keyword to study the consequence on the CI. Those changes force the user to call only the generic methods. I took the opportunity to add a check on the component state in the generic methods. If the final keyword is used, it would ensure that the component state is called before each call of the public API. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4943:1608,failure,failures,1608,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4943,2,['failure'],['failures']
Availability,The virtual function BaseLinearSolver::isMultiGroup() returns always false because multi group solver is no more supported after PR #901 in all LinearSolver classes. Needs #1060 to be merged first. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1063:454,failure,failures,454,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1063,2,['failure'],['failures']
Availability,"The warning message now indicates if the newly added Data/Link is used as a Data or as a Link. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2489:639,failure,failures,639,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2489,2,['failure'],['failures']
Availability,"The warning was:; ``` cmake; CMake Warning at Sofa/framework/Config/cmake/SofaMacrosInstall.cmake:1031 (message):; Deprecated macro. Use 'sofa_add_targets_to_package' instead.; Call Stack (most recent call first):; applications/plugins/image/image_gui/CMakeLists.txt:46 (sofa_install_targets); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3359:843,failure,failures,843,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3359,2,['failure'],['failures']
Availability,"The warning/deprecation message from OptionGroup containing the string ""error-prone"" was bothering me to find the real error in compilation outputs!. I therefore worked on upgrading the SOFA codebase to remove these warnings by replacing the deprecated constructor. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4064:72,error,error-prone,72,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4064,4,"['error', 'failure']","['error', 'error-prone', 'failures']"
Availability,"The website does not display the cpp code properly, so I added spaces to see if it fixes it. ![image](https://github.com/sofa-framework/sofa/assets/10572752/b80bca8b-6d79-43a5-bf23-faf675d1730a). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4695:740,failure,failures,740,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4695,2,['failure'],['failures']
Availability,The workflow is really slow when changing simple values in the data inspectors ; (validating by clicking on update). In this pr we allows the user to change the numeric values; by moving the mouse left&right to decrease/increase with immediate update. I will do a small video to show the results to make that more clear. ; https://www.youtube.com/watch?v=fuWz3Dn1-oM; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/750:624,failure,failures,624,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/750,2,['failure'],['failures']
Availability,"There are still lots of references to this plugin in the rest of the SOFA code base, including bindings in the `image` and `PSL` plugins. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3855:682,failure,failures,682,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3855,2,['failure'],['failures']
Availability,"There is duplicated code in several function of Link.h. ; I factored that. . I also removed an #ifdef MACRO that was standing there for year and no one cares. If we plan/want to refactor this part we should do that with [[deprecated]]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1704:780,failure,failures,780,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1704,2,['failure'],['failures']
Availability,There is examples which relies on SparseSolver without having the corresponding RequiredPlugin. ; This PR fix this (to make the CI happy). . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/748:397,failure,failures,397,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/748,2,['failure'],['failures']
Availability,"There is no need to have the operator<<() fully defined in the class declaration.; A better code decoupling can be obtained in the following way. Let's suppose we want to support a new class named MyClass. ; A more opaque design is composed of three parts. 1) declare the function << for a given type, (eg: in the vicinity of the forward declaration of MyClass in fwd.h):; ```cpp ; SOFA_CORE_API std::ostream& operator<<(..., MyClass&);; ```. 2) define the function in a MyClass.cpp (or anywhere you prefer):; ```cpp ; operator<<(..., MyClass& a){ ....put the implementation here... }; ```. 3) This one is optional only if the implementation of the operator requires access to private data field). If this happens then you need an exra step to specify the following ; ```cpp ; class MyClass { friend operator<<(..., MyClass&); }; ``` . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1751:1380,failure,failures,1380,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1751,2,['failure'],['failures']
Availability,There is not a lot of contribution to make plugin from the old sofa modules. ; Here is one. . The general idea is that it should decrease compilation time and memory footprint of sofa. . This is my contribution to the issue stated by @hugtalbot in ; https://github.com/sofa-framework/sofa/issues/346. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/396:557,failure,failures,557,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/396,2,['failure'],['failures']
Availability,"There is only one ""Node"" implemenation in Sofa so there is no need to expose internal details (saying it is ""DAG"") to the UI layer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2395:676,failure,failures,676,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2395,2,['failure'],['failures']
Availability,"There is several dependencies from SofaHaptics to ""hard"" to compile code. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/945:332,failure,failures,332,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/945,2,['failure'],['failures']
Availability,There should be no more calls of OpenGL API in SofaKernel's modules.; Clean gl's related includes as well. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/425:363,failure,failures,363,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/425,2,['failure'],['failures']
Availability,There was a regression in the way RGBAColor are parsed by the stream operator>>.; This was the cause of Material reading was not working (issue #302). . This PR fix:; - fix the problem. ; - add new tests for RGBAColor & Material ; - Clean Material without breaking the API. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/305:532,failure,failures,532,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/305,2,['failure'],['failures']
Availability,"There was a segfault when opening MechanicalObject properties in runSofa at least with caduceus.scn; Thanks @remibessard for spotting it :+1: . Details:; For a reason I don't know, there is a Datafield named ""dforce(V_DERIV)"" in MechanicalObject that has **no help message**. Thus, when opening MechanicalObject properties, QDisplayDataWidget's constructor runs `data_->getHelp()` which returns nullptr provoking a segfault when used in stringstream creation right after. Bug introduced by 48395d837474beb67ca4d9721ebb8b7361089fe3. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1090:788,failure,failures,788,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1090,2,['failure'],['failures']
Availability,"There was an error in the name of the (origin) directory to install. Not sure about the destination though. This fix has no impact on building Sofa, only on its installation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/959:13,error,error,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/959,3,"['error', 'failure']","['error', 'failures']"
Availability,"There was an unused variable in a frequently included header, and a missing override in another one. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/386:357,failure,failures,357,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/386,2,['failure'],['failures']
Availability,"There was no example scene for the following components:; - BlockJacobiPreconditioner ; - JacobiPreconditioner ; - PrecomputedWarpPreconditioner; - SSORPreconditioner; - WarpPreconditioner. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2492:734,failure,failures,734,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2492,2,['failure'],['failures']
Availability,"There were only a few tests on NameDecoder in `SofaKernel/modules/SofaCore/SofaCore_test/objectmodel/BaseClass_test.cpp`. I created a dedicated file to test the main functions in NameDecoder. It required changes in some of the algorithms to comply with the added test:. - Support of nested classes; - Spaces are processed in the first pass of the algorithm, instead of adding a second pass just for spaces. This is also to detect when spaces must be skipped or not (always skipped before). For example, it must not be skipped in `unsigned int`.; - Returned string get a balanced number of opening chevrons and closing chevrons. Note: Anonymous namespaces are not supported (yet?).; Note 2: The algorithms in `NameDecoder` are complicated to read. It is hard to anticipate the result. IMO, it's due to the fact that it is written to be executed in a single pass. I think allowing multiple passes would help to read and debug these functions. `decodeTemplateName` was never called. I call it now in `getOverridableTemplateName()` instead of assuming there is no template. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2380:1614,failure,failures,1614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2380,2,['failure'],['failures']
Availability,"There's a wierd issue in cmake package config that caused the paths to CImg to be inconsistent (depending on whether the build was triggered from ghprb or manually) on Defrost's CI.; It happens to be CMake's interpretation of the ""PACKAGE_"" prefix in . CImgPlugin/extlibs/CImg/CImgConfig.cmake.in that varied from one build to another.; The prefix is actually useless, since ${CIMG_INCLUDE_DIR} is already a valid and complete path, in build & install configurations. Removing the PACKAGE_ prefix solves the issue.; I flagged this PR as fast-merge since our CI @SofaDefrost does not build anything because of that.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/921:872,failure,failures,872,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/921,2,['failure'],['failures']
Availability,"These 2 classes were not compiled/used anymore for at least more than 1 year.; So I consider the ""deprecation""/""removal"" process as expired; and remove them from the SOFA codebase.; (and especially to avoid for good the confusion with helper::system::{Plugin/PluginManager}. Removed last files using these mechanism as well (some plugins); those files were not compiled so no consequence at all. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1612:940,failure,failures,940,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1612,2,['failure'],['failures']
Availability,"These are all fixes required to correctly compile out-of-tree plugins and project. We really need to add out-of-tree CI. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1767:667,failure,failures,667,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1767,2,['failure'],['failures']
Availability,"These function allows to retrive other base object from the context and are actually duplicating a service that is already provided by BaseContext. To refactor that there was two options.; (1) keep search & searchAll and remove the getContext() (to follow Demeter's rules); (2) remove the search & searchAll and keep getContext() . Given that accessing the context seems an important feature (used for much more) , decided to do solution (2). . NB: There was more line of code in the implementation that the line of of code this functions saves. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1842:1092,failure,failures,1092,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1842,2,['failure'],['failures']
Availability,"These references were not removed in; - #3960 . There should be errors like; `CMake Error: File applications/plugins/Flexible/ExternalProjectConfig.cmake.in does not exist.` occuring. 🤐. Not sure why the CI did not detect this, maybe because of CMake caches not cleaned or something like that. EDIT: seems it depend on some factors, I get ""only"" warning on other configuration; `applications/plugins/Compliant does not exist and will be ignored.`; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3980:64,error,errors,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3980,4,"['Error', 'error', 'failure']","['Error', 'errors', 'failures']"
Availability,"They are moved in an external plugin: https://github.com/sofa-framework/CSparseSolvers. Two components are impacted: `SparseLUSolver` and `SparseCholeskySolver`. The plugin `CSparseSolvers` is now fetchable. > ⚠️ `SparseLUSolver` has an equivalent using Eigen in SOFA (without the need of a plugin): `EigenSparseLU`, and `SparseCholeskySolver` equivalent is `EigenSimplicialLLT`. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/378]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/119]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4258:1068,failure,failures,1068,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258,2,['failure'],['failures']
Availability,"They are not meant to be overriden because there is another mechanism to have a custom class name or template name. As stated in the removed comments, it should have been final. But they could be non-virtual because Base is the top-level base class. Note this is breaking. For example, SoftRobots is affected. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/298]; [ci-depends-on https://github.com/sofa-framework/Registration/pull/4]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3242:997,failure,failures,997,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242,2,['failure'],['failures']
Availability,"They were failing since the introduction of 2 warning messages if one was not explicitly defining an AnimationLoop and a VisualLoop. I've also adding some comment on a test and using a string litteral instead of the ugly stringstream when describing the scene in xml. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2326:812,failure,failures,812,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2326,2,['failure'],['failures']
Availability,"This ""move"" is originally done to uncouple CGAL plugin and Image. This was done by moving Image class (along with dependencies) from Image plugin (ImageTypes.h) to CImgPlugin (CImgData.h). The point is to reduce compilation time since CImg takes less time to compile than Image.; Now Image and CGAL both depend on CImgPlugin which is lighter.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1104:600,failure,failures,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1104,2,['failure'],['failures']
Availability,This (old) PR allows to have topological change with UniformMass and DiagonalMass. PointAdded and PointRemoved are added.; Add clean tracker function (temporary regarding Data discussion). This should fix the testIncise. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1212:477,failure,failures,477,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1212,2,['failure'],['failures']
Availability,"This CMake macro permits to create dependent options for tests that will automatically be hidden and set to OFF if SOFA_BUILD_TESTS is defined and FALSE.; If SOFA_BUILD_TESTS goes back to TRUE, the option is shown again with its old value. This way of adding a tests subdirectory should be propagated to all plugins. See [CMake documentation](https://cmake.org/cmake/help/v3.10/module/CMakeDependentOption.html) for more details. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1164:686,failure,failures,686,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1164,2,['failure'],['failures']
Availability,This PR Do: ; [SofaGraphComponent] FIX Bug in scene checker.; [SofaGraphComponent] FIX RequiredPlugin . For more details have a look at the commit messages. ; This PR is a re-split of PR #548 to ease review & merging. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/563:476,failure,failures,476,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/563,2,['failure'],['failures']
Availability,This PR FIX Issue #928 and add basic tests on RestShapeSpringsForceField. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/942:332,failure,failures,332,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/942,2,['failure'],['failures']
Availability,"This PR add a component called TopologyChecker to be added in the scene and link to a MeshTopology / TopologyContainer in order to check the topology either on demand or every end of step. The methods used to check the topology is similar to the code inside the method xxxSetTopologyContainer::CheckTopology() ; which will be removed. **This PR use changes from PR #1593 and won't compile until the previous one is merged**. Fix #1367 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1594:981,failure,failures,981,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1594,2,['failure'],['failures']
Availability,"This PR add a frameskip option to the headless recorder.; Previous behavior is kept for compatibility.; Frameskip option can have 4 different values : ; - noskip and simulationtime : previous behavior, now default. One frame is taken at each time step.; - realtime : Output images at rate of 1/fps; - an arbitrary float : tries to skip this much time between each frame. The order between simulation and frame saving has also been inverted : now the first frame taken is at time 0, instead of time dt. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/615:758,failure,failures,758,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/615,2,['failure'],['failures']
Availability,"This PR add a new class to test at the same time TriangleFEMForceField and TriangularFEMForceField. Same results and value are expected in the idea of merging those 2 components in a near future. . In this PR 14 tests are added (7 on each version). 2 are failing and has been disabled: ; [ FAILED ] TriangleFEMForceField3_test.checkTriangularFEMForceField_init -> inconsistency in code; [ FAILED ] TriangleFEMForceField3_test.checkTriangularFEMForceField_values -> inconsistency in code. This PR also fix the init of both component, checking the input Data value and setting them as required.; Update setter as well which should be upgraded to Data callback in a next PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2249:1216,failure,failures,1216,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2249,2,['failure'],['failures']
Availability,"This PR add a unit test that is currently failing, showing that the inertia is wrongly taken into account for rigid with different inertia along each direction. . After rotation of a rigid, the inertia matrix is not rotated accordingly. See issue https://github.com/sofa-framework/sofa/issues/4936. . We need to fix this ! . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4935:869,failure,failures,869,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4935,2,['failure'],['failures']
Availability,This PR add some facility method to convert back and forth a `MapMapSparseMatrix` type ; into an `Eigen::SparseMatrix`. # CHANGELOG ; * Added some utility methods to be able to accumulate MatrixDeriv types to parent dofs when the mapping implements its jacobian using a sparse matrix from the Eigen library.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/452:565,failure,failures,565,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/452,2,['failure'],['failures']
Availability,"This PR add:; Initialization of helper::vector using {}. Example:; helper::vector< double > vec1 = {5,4,7,1,2};; helper::vector<helper::vector< double >> vec2 = {{5,4},{7,1,2}};; ______________________________________________________. This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/252:353,failure,failures,353,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/252,1,['failure'],['failures']
Availability,"This PR address the problem of the uses of atoi and atof in the parse methods. . In short, ; using atof/i is flawned because:; - it does not check that the attribute is successfully parsed by atoi/atof resulting in undefined behavior when user input is invalid. ; - the components that use them also forgot to set the Local to ""C"" resulting in wrong parsing of 0.1 vs 0,1 (reported in issue https://github.com/sofa-framework/sofa/issues/151); - a failure during the parsing of the attribute does not generate a message to the user when something is wrong. . This PR add getAttributeAsFloat and getAttributeAsInt to be used in place of atof(attr->getAttribute()).; The getAttributeAs* method set the correct Local as well as generates error messages in case they are unable to parse the attribute. The PR contains new tests for the two added functions as well as a more general test in MechanicalObject.; This PR shouldn't break any API or scene or whatever. <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old.; **Reviewers will merge only if all this checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/161:447,failure,failure,447,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/161,3,"['error', 'failure']","['error', 'failure', 'failures']"
Availability,"This PR adds 2 generic tests for mappings:. - It tests `applyDJT` in two different contexts to cover both situtations; - It tests `buildGeometricStiffnessMatrix`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4897:707,failure,failures,707,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4897,2,['failure'],['failures']
Availability,"This PR adds a ""MOVED"" status to ComponentChange, as it was only handling deprecated, removed and pluginized status. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2169:661,failure,failures,661,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2169,2,['failure'],['failures']
Availability,"This PR adds a CMake find module for the QGLViewer used in SOFA.GUI.Qt.; The behavior here (already in place) is to look for an external package of QGLViewer and if not found, use the embeded code of QGLViewer (which is linked dynamically).; I may have missed something but it seems that QGLViewer does not provide CMake config files (neither from source, or in package managers such as APT, Conda and vcpkg). And as SOFA was not including a CMake module for it, there was no chance for it to be found externally.; Then, this should not break current behavior but just fix the possibility to use an external GLViewer package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4290:1170,failure,failures,1170,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4290,2,['failure'],['failures']
Availability,"This PR adds a RGBAColor type in defaulttype as well as dedicated tests. . There is several advantage of doing so:; - no ambiguity in the code between a rgba color and vector4.; - the code needed to build colors from their name, hexadecimal or list of float is factored in this class (while currently there is at least 8 duplications in the sofa code base); - unifying the underlying data also offer the possibility to offer consistent user interface for colors . This PR will be the ground to solve issue #https://github.com/sofa-framework/sofa/issues/64. . This PR have no impact on the sofa source code. Checklist to be merge: ; - [x] succeed on each compilation setup on the CI.; - [x] does not generates new test failure. ; - [x] does not seems to break existing scenes. ; - [x] does not seems to break API compatibility. ; - [x] introduces new component with tests & documentation. ; - [x] is now 1 week old and no one send a 'no go' comment.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/119:718,failure,failure,718,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/119,1,['failure'],['failure']
Availability,"This PR adds a `isFile` function to the FileSystem component. The PluginManager will then use this new function to test whether or not the plugin path is an existent file. @guparan Concerning your question last week (what happens if the name of the plugin is passed without a path), the previous behavior was to check if the file was a valid library file (.so, etc.), and then gather the full path from the search directories. The new behavior will first check that the file is a valid file (which won't be if only the name is passed), and then try to find it in the search directories. This should not break any old behaviors. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/621:884,failure,failures,884,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/621,2,['failure'],['failures']
Availability,"This PR adds a base test for the MeshSTLLoader component, based on similar tests for the OBJ and VTK loaders. It loads and checks the composition of the 3 .stl meshes available in share/meshes. Fix #2899; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2999:167,avail,available,167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2999,3,"['avail', 'failure']","['available', 'failures']"
Availability,"This PR adds a callback in OglModel, to update the current visual (triggering a call to `initVisual()`), whenever the `m_positions` field is changed dynamically. The first interest of this PR is to add the possibility to change dynamically the underlying mesh of the OglModel (typically with a controller), and see the corresponding changes.; The context I'm using this feature is in a scene where I have several mesh files representing the same mesh moving along time. Loading these meshes sequentially along time, using a python controller, is equivalent to impose a displacement to the underlying mesh during the simulation. But visualising this movement requires this additional callback.; Unfortunately I can't share the data I'm referring to, and I don't have an example as striking at my disposal. There are two questions I'd like to discuss:; - Is this callback likely to cause some trouble in existing scenes ?; - Is this behaviour generally desirable ?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2925:1508,failure,failures,1508,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2925,2,['failure'],['failures']
Availability,This PR adds a few boolean Data parameters for the user to have ore control when using the component:; - stopAtNodeToParse: to avoid considering children nodes of the node to be parsed.; - skipJ1tKJ1: to avoid computing the contribution of the first object (useful when several MMMappers are used and you want to avoid to compute several time the same contribution); - skipJ2tKJ2: to avoid computing the contribution of the 2nd object. It adds also a few templates and corrects a bug (mat12.matrix->add instead of mat22.matrix->add). Enjoy!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/882:798,failure,failures,798,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/882,2,['failure'],['failures']
Availability,"This PR adds a new event type, `SimulationInitTexturesDoneEvent`, that will be launch as soon as textures have been initialized. This is needed to make sure all OpenGL buffers have been created, and that we can render a first frame even if there have been no simulation steps done. This was needed for the [SofaOffscreenCamera](https://github.com/jnbrunet/SofaOffscreenCamera) to be able to render the visual before any simulation steps. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1832:982,failure,failures,982,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1832,2,['failure'],['failures']
Availability,"This PR adds an attribute pathType (m_pathType) in DataFileName and DataFileNameVector to be able to easily identify whether a component holding a DataFileName accepts files, directories or both. This is useful to provide custom fileDialogs in user interfaces such as runSofa2, give more information about the type of values a dataFileName takes, and provide better error messages. To use it: in the ctor of the component, on a DataFileName datafield, call setPathType(<PathType>) (<PathType> being an enum value of either FILE, DIRECTORY or BOTH. Default value is FILE). The PathType of a DataFileName can be queried by calling getPathType(). In addition, checks are made within the updatePath() method of DataFileName, called when the value changes, to guarantee that the value set is consistent with the defined path type. Since the default pathtype is set to FILE, there are only few components that are directly affected by the pull request (AddResourceRepository is one of them (takes only directories), MeshExporters have a DataFileNameVector which can accept both directories and files. Those 2 components had to be modified to behave properly, and I've been able to identify them thanks to the existing unit tests & scene tests that we compile on the CI. There's no guarantee that there isn't any untested component that should be updated too, but the fix is easy (setPathType(WHATEVER) in the ctor of the component). Same goes for pluginized components of course. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1407:366,error,error,366,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1407,3,"['error', 'failure']","['error', 'failures']"
Availability,"This PR adds custom RPATH to handle dependencies to relocatable targets that will be installed in the ""plugins"" directory. 3 cases are handled:; - A non-relocatable library depends on a relocatable library; - A relocatable library depends on a relocatable library; - A relocatable library depends on a non-relocatable library. WARNING: note that this is a hacky fix based on the hacky RELOCATABLE ""feature"". ; TODO: rework the CMake files to replace the relocatable mechanism by something more standard. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1619:1048,failure,failures,1048,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1619,2,['failure'],['failures']
Availability,"This PR adds finally hyperelasticity code in SOFA! ; Related to issue : https://github.com/sofa-framework/sofa/issues/231. Based on the work of @hdeling with @IPeterlik six new hyperelastic models (linearized or non-linear constitutive law) can now be used:; - ArrudaBoyce; - StVenant; - Mooney-Rivlin; - VerondaWestman; - Costa; - Ogden. Note that a validation of such models was done in this [paper](https://hal.inria.fr/hal-01536406/).; More about this can be found on the[ SOFA website](https://www.sofa-framework.org/about/news/validation-of-a-non-linear-model-of-the-liver/). TODO next : ; - improve how parameters are given, stored; - allow for non-homogeneous model (definition per tetra); - add associated test. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/349:977,failure,failures,977,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/349,2,['failure'],['failures']
Availability,"This PR adds several bindings to the SOFA python's plugin that we recently needed for a project. - GUIManager: set prefix, config and screenshot directories; - RegularGrid: get the position of a given node index; - SparseGrid:; get the cube and node index in the underneath regular grid; get the position of a given node index; get the boundary cells and nodes; find the cube that enclose a given position; get the nodes indices of a given cube; - Simulation: init and unload a simulation node. Export a scene.; - SofaModule: add plugin repositories, create and set the simulation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/990:838,failure,failures,838,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/990,2,['failure'],['failures']
Availability,This PR adds some read/write access method for Data which can shorten slightly the syntax ; required when you want to construct a Read(Write)Accessor object for a Data. ; It extends the method implemented in commit 77ca6f2a7c2cf18a39cdad6a4a88f02ed6d9a9dd; for WriteOnlyAccessor to other types of Data Accessor.; ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/450:571,failure,failures,571,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/450,2,['failure'],['failures']
Availability,"This PR adds the ability to autoload plugins, i.e without the need to add ""RequiredPlugin"" in each scene file.; This is especially useful for ""essential"" plugins such as SofaPython.; For now, only SofaPython is marked as ""Autoloadable"". An other future PR will activate CImgPlugin to add image loading (and remove ImagePNG/ImageBMP from SofaKernel). ""Main"" programs just needs to add the line : ; `sofa::helper::system::PluginManager::getInstance().autoloadPlugins();`. Important Changes:; * autoload API in Plugin ""interface""; * remove hard loading of SofaPython in runSofa; * add a new commandline in runSofa to disable autoloading of plugins (enable by default); * add a test; * (not really related to the PR but could be useful) add an helper function to check if a file is a symbolic link. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old (or has fast-merge label).; - [ ] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/253:1025,failure,failures,1025,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/253,1,['failure'],['failures']
Availability,"This PR adds the cmake option ""NINJA_BUILD_POOL_FLEXIBLE"" which limits the number of CPU cores used to build the Flexible target (default value: 1). Can be easily replicated to other projects as needed. ; This is only effective when using Ninja.; This will make possible to optimize the number of build threads without hitting the RAM limit on CI, but also on workstations.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old (or has fast-merge label).; - [ ] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/254:605,failure,failures,605,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/254,1,['failure'],['failures']
Availability,"This PR adds the possibility to add bloc matrices in a basematrix. By default this function calls the add function with a scalar but it can also be overlaoaded to reduce the number of virtual function calls. . With the combination of 1x1, 2x2 and 3x3 matrices, it covers most of needs for simulations (the other matrix dimension can be implemented as a combination of the implemented functions). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1143:652,failure,failures,652,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1143,2,['failure'],['failures']
Availability,"This PR adds translation and rotation transforms to ReadState component. ; Scaling was already possible. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1733:651,failure,failures,651,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1733,2,['failure'],['failures']
Availability,"This PR aims at cleaning and improving the response method available in SOFA.; Here are the changes on the user standpoint:. - default :arrow_right: PenalityContactForceField; - FrictionContact :arrow_right: FrictionContactConstraint; - ray :arrow_right: RayContact; - registration :arrow_right: RegistrationContactForceField; - stick :arrow_right: StickContactForceField; - StickContactConstraint (remains unchanged); - distanceLMConstraint (remains unchanged). Personally, I love it :heart: . - Fix #1966; - NOTE: a documentation page should soon join the PR if it pleases the reviewers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2522:59,avail,available,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2522,3,"['avail', 'failure']","['available', 'failures']"
Availability,"This PR aims at correcting bugs related to the newly externalized tinyxml2 dependency in two ways : ; 1. For Windows, this corrects the FindTinyxml2.cmake to be able to find the lib and install it correctly when using the tinyxml2 lib present in the WinDepPack.; 2. For MacOS, this PR correct the rpath of the plugins linking to tinyxml2 for packaging. After this PR is closed, the installed version of tinyxml2 present on the CI builders will be remoced, and the one in the WinDepPack will be used instead (thanks to this pr: https://github.com/sofa-framework/ci/pull/48 and some manual configuration of the builders). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4574:1166,failure,failures,1166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4574,2,['failure'],['failures']
Availability,"This PR aims to improve the way we search and load plugins. It adds:; - recursive search in PluginManager::findPlugin; - finding plugin dependencies in its directory (Windows only); - (SofaPython) function to easily edit sys.path at any plugin init; - ~~new Data in RequiredPlugin to find out-of-sofa plugins: `searchPath`~~; - new component AddPluginRepository for adding a path to the pool of plugin paths; - ~~**BREAKING**~~: rename AddResourceRepository into AddDataRepository (alias added for backward compat); - new default plugins folder in build/install to allow drag&drop. The last one shall be discussed, I'm not sure it is really needed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/913:905,failure,failures,905,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/913,2,['failure'],['failures']
Availability,"This PR allows to add aliases in C++ in DisplayFlags.; Moreover, DisplayFlags are now case insensitive but a warning is given.; The DisplayFlagsDataWidget is now fixed to correspond to the FlagTreeItem names. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/671:465,failure,failures,465,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/671,2,['failure'],['failures']
Availability,"This PR allows to generate elliptic cylinder with Edge2QuadTopologyMapping.; Here's an example:. ![image](https://user-images.githubusercontent.com/12150715/109063762-907aed00-76b7-11eb-8d44-f994200c46d3.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1861:754,failure,failures,754,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1861,2,['failure'],['failures']
Availability,"This PR awaits first a migration to Discord. These actions allow 4 new notifications:; - when a new release of SOFA is done; - weekly to set up the SOFA dev meeting agenda; - weekly to summarize posts on GH discussions awaiting for a reply; - notification for all GH discussions ""Announcements"" or ""Share your achievements""; - forward all GH notifications (PR, issues, stars) in a minimalist and visual way in the main channel; - rename existing actions to better identify/distinguish them all. Python API has been factorized to use mostly one script. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4445:1096,failure,failures,1096,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4445,2,['failure'],['failures']
Availability,"This PR change the behavior of helper::vector to make it closer to svector; - helper::vector can parse space separated values **and** [,] separated values; - helper::vector now serialize into [,] separated string; - helper::Vec<Type> can also parse space separated values **and** [,] separated values. As a consequence the serialization/deserialization on the python side (SofaPython plugin) need to be updated accordingly. Now the repr() of a python object is used to serialize it into a string in the Node.createObject() method if it is not a string already. Later on, code can be cleaned-up:; - no more cat/concat/listToStr() calls needed in python code; - no more helper::svector needed in c++ code. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/328:960,failure,failures,960,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/328,2,['failure'],['failures']
Availability,"This PR changes the API of the Event class slightly so that there's no need to instantiate an Event to get its classname.; The getClassName method that was previously implemented by each of Event's subclasses is moved in the SOFA_EVENT_H macro, and a static GetClassName method becomes the one to override. This is important as Events do not have a default ctor and it is thus impossible to instantiate a dummy event to check its type without knowing the signature of the subclass's ctor. This allows me to implement better and cleaner bindings for events in SofaPython3. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1118:828,failure,failures,828,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1118,2,['failure'],['failures']
Availability,"This PR changes the behavior of helper::vector to make it closer to svector; - helper::vector can parse space separated values **and** [,] separated values; - helper::vector now serialize into [,] separated string; - helper::fixed_array (and so helper::Vec<Type>) can also parse space separated values **and** [,] separated values. As a consequence the serialization/deserialization on the python side (SofaPython plugin) is updated accordingly. Now the repr() of a python object is used to serialize it into a string in the Node.createObject() method if it is not a string already. Later on, code can be cleaned-up:; - no more cat/concat/listToStr() calls needed in python code; - no more helper::svector needed in c++ code. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/330:982,failure,failures,982,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/330,2,['failure'],['failures']
Availability,"This PR completes #1619 by adding a recursive dependency search.; RPATH should now cover ALL dependencies. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1710:651,failure,failures,651,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1710,2,['failure'],['failures']
Availability,This PR contains a set of small changes on SofaPython that we are using in our projects. . CHANGELOG:; - [SofaHelper] add StringUtils::getStringCopy (because it was duplicated in several place of the plugin); - [SofaPython] add systematically sys.argv in PythonEnvironment; - [SofaPython] add a very general getattr function in Binding_Node (to write node1.node2.node3.obj.data); - [SofaPython] add a getTarget in BaseObject (to return the plugins that contains a component); - [SofaPython] add a getComponentsFromTarget in the Sofa module ; - [SofaPython] add some minor function in Binding_Data; - [SofaPython] add docstring support for the Sofa module; - [SofaPython] change Binding_BaseContext.getObject to return None instead of a broken exception . There is tests for all features. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/656:1044,failure,failures,1044,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/656,2,['failure'],['failures']
Availability,"This PR contains all the changes I did to produce SOFA releases.; Basically it is almost only CMake improvements to ease SOFA installation. Some of them may not be clean/wanted/useful, **please give feedback**. WARNING: I renamed some macros in SofaMacros.cmake so this could break your code. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/635:549,failure,failures,549,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/635,2,['failure'],['failures']
Availability,This PR contains needed SOFA modifications for regression tests reactivation:; - Remove SofaTest_test/Regression_test (moved to https://github.com/sofa-framework/regression) and SofaVerification; - FIX DataRepository init: always load sofa.ini at construction; - FIX SofaGTestMain for out-of-sofa use; - ADD `FileSystem::findFiles` for recursive search; - FIX some scenes; - ADD `RegressionStateScenes.regression-tests` and `RegressionTopologyScenes.regression-tests` for listing tested scenes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/830:751,failure,failures,751,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/830,2,['failure'],['failures']
Availability,"This PR contains small changes to runSofa. . One is to save & restore the scenegraph state in the live-coding mode. This fix avoid to constantly have to expand/collapse things to restore the view in a manageable state when we reload. . The second change is to fix a problem. When Data fields that belong in the ""Infos"" results in having to ""Infos"" panel in the object inspector. So this PR add the Data fields which are in the Info groups to the existing ""Infos"" panel instead of creating a second one with the same name. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/657:780,failure,failures,780,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/657,2,['failure'],['failures']
Availability,This PR contains some minor fixes and adds two new components named: UniformStiff & DiagonalStiffness. Checklist: ; - [x] succeed on each compilation setup on the CI.; - [x] does not generates new test failure. ; - [x] does not seems to break existing scenes. ; - [x] does not seems to break API compatibility. ; - [x] introduces new component with tests & documentation. ; - [x] is now 1 week old and no one send a 'no go' comment.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/147:202,failure,failure,202,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/147,1,['failure'],['failure']
Availability,"This PR contains the code required to retrieve a component's bounding box in Python, and to manually call for a BaseObject's computeBBox method. This was necessary in my case to create a RegularGrid from a mesh, since contrary to the sparseGrid, the regularGrid does not look at the node's MechanicalObject to create the grid.; An example scene in this PR shows my specific use case. Concerning the bindings, I made the BoundingBox's minBBox and maxBBox read only since this should be computed by the component, and not set externally IMHO. Could be useful to bind the different methods of BoundingBox too, but this is not covered in this PR. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/736:899,failure,failures,899,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/736,2,['failure'],['failures']
Availability,"This PR depends on #2374 #2375 and #2376 and should be rebased before review. - Remove old method ```handleTopologyChange```; - Turn d_indices into TopologySubsetIndices, this automatically fix the topological changes update. ; - Fix the use of subset indices combined with topology changes.; - Add callback on endingEvent to update the totalMass/vertexMass; - Fix the center of gravity display when using subset of indices. Here is an example of scenes RemovingTrianglesProcess.scn using a subset of indices (yellow points); ```<UniformMass template=""Vec3d,double"" name=""mass"" totalMass=""1.0"" handleTopologicalChanges=""1"" indices=""0 1 2 3 4 5 6 7 8 9""/>```. ![RemovingTrianglesProcess_00000001](https://user-images.githubusercontent.com/21199245/135688953-b9a8d6fa-eafc-499e-916d-8e209b227736.png). ![RemovingTrianglesProcess_00000002](https://user-images.githubusercontent.com/21199245/135688979-3e678cc4-a95b-4ff8-b685-688e761d0640.png). ______________________________; ________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2377:1487,failure,failures,1487,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2377,2,['failure'],['failures']
Availability,"This PR depends on PR #2299 (should be rebased). 1. Use callback to update the list of triangles/quads and vertices when topological changes happened.; 2. Add also callback on texcoord to update texture coordinate when mesh changed. - Update of texture coordinates was buggy when removing points; <img src=""https://user-images.githubusercontent.com/21199245/129899818-50ef6454-ca73-49fa-9a1a-f3284eb4915b.png"" width=""70%"" />. - Adding new points where created with texCoord(0, 0); <img src=""https://user-images.githubusercontent.com/21199245/129899836-1a9ad38b-5359-447a-9d68-b11bb68f7813.png"" width=""70%"" />. -> Using the callback on texcoords, use ancestors and coefficient of added point to apply the good texCoords; <img src=""https://user-images.githubusercontent.com/21199245/129899846-178564ea-044d-4db8-a5fb-b4e318f0467e.png"" width=""70%"" />. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2300:1393,failure,failures,1393,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2300,2,['failure'],['failures']
Availability,This PR depends on the #1186 . Move code of ParticleSource into inl file and clean it: ; - change Data and member prefix; - remove old code and hacks; - update the scene examples. ![SPHParticleSource_00000001](https://user-images.githubusercontent.com/21199245/67021784-6f3be100-f100-11e9-89e6-98ddfd6d6393.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1190:569,failure,failures,569,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1190,2,['failure'],['failures']
Availability,"This PR deprecates LocalStorage and its (only) implementation CactusLocalStorage.; It seems it was planned for an eventual parallelization of the visitor traversal. Since then, it is not really relevant anymore (link, etc). Present since the beginning (16 years ago!) but it seems it was never used,; as the only implementation of LocalStorage (CactusLocalStorage) is never instanced anywhere. IMO we could even directly remove it as it is 99,99...9% sure nobody uses it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4327:1016,failure,failures,1016,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4327,2,['failure'],['failures']
Availability,"This PR diffs against the sofa-framework::issofa_constrainsolving branch until it has been merged into master. # Objectives; - Adjust FreeMotionAnimationLoop so that it is more faithful to the actual equations, most notably by ; allowing only one linearisation of the mappings within the time step. ; - Update the API in order to compute a linearised version of the constraint forces, in a similar fashion to ; what is done in the Compliant plugin. . # Requirements ; The following PR are required in order to build this ; - #484 ✔️; - #450 ✔️ ; - #452 ✔️ ; - #456 ✔️ . For testing: ; - `SOFA_USE_MASK` **must** be deactivated, otherwise derivatives quantities ( velocity at contact points for example) are not propagated at all since all dofs are ""masked"" by default. After having a rather quick look, apparently the `SOFA_USE_MASK` impose some strict (undocumented) requirements (on top of other limitations like the fact that it does not support changes in the topology) about where in the time step the ""apply"" method of mappings is called. - There is a branch on my local fork that integrates all the requirements for testing that can be found at the following location [fjourdes:insimo_freemotion_integration](https://github.com/fjourdes/sofa/tree/insimo_freemotion_integration). # Changelog; API Breaking. [SofaCore]; - `ConstraintSolver` can now define the VecId where the constraint lambdas and constraint correction are stored. Previously, these were fixed locations, usually VecId::externalForce() and VecId::dx(), but it could vary depending on the implementation of both the ConstraintSolver and the ConstraintCorrection API. Components can retrieve these locations when inspecting their ConstraintParams object which is usually a parameter of the API methods for constraint solving.; - `ConstraintParams` contains the `MultiMatrixDerivId` that can be used by components related to the `ConstraintSolver` to retrieve the location of the constraint jacobian.; - `ConstraintResolution` API ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459:749,mask,masked,749,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459,1,['mask'],['masked']
Availability,"This PR disable tests that identify known issues in SOFA.; However, failing tests prevent from an efficient review of the PR. We disable them for now, but GitHub issues should be created for each test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2290:746,failure,failures,746,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2290,2,['failure'],['failures']
Availability,"This PR disables all freshly pluginized modules by default except for SofaMiscCollision because it contains DefaultCollisionGroupManager. It also disables PSL by default.; Tell me if these default plugins should actually be kept. To continue testing as before (and to keep our scene tests working) I manually enable all these plugins in CI at configuration step. This will fix some failing scene tests due to missing dependency (RequiredPlugin).; Actually, the scenes with missing dependencies due to disabled plugin (plugin library not found in `bin`) should not even be tested. Some scenes like `Fluid2D.scn` and `Fluid3D.scn` could even be moved to an examples folder in `plugins/SofaEulerianFluid`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/575:959,failure,failures,959,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/575,2,['failure'],['failures']
Availability,"This PR does what I want it to do:; - when changing a MeshLoader's filename, all buffers are properly reset in the OglModel.; - When changing the edges / triangles / position fields of the oglModel, all buffers are properly reset. Yet I don't know if I'm doing this right. @fredroy especially, I think you might have some objections with the code.; Lemme know!. (this PR follows up on #1423). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1483:649,failure,failures,649,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1483,2,['failure'],['failures']
Availability,"This PR factorizes the code of PartialFixedConstraint by inheriting for most functions (init, draw) from the FixedConstraint; FIX #440 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/718:393,failure,failures,393,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/718,2,['failure'],['failures']
Availability,"This PR fix UI problem:; - the icon now display the correct icon (green for info message, yellow for warning and red for error) instead of a red sign all the time; - the icon was displayed at scene loading but not updated. This happens when using controllers that emits messages at simulation time. The result was that the treeview was out-of-date misleading the users. Using the feature introduced in #2397, the state is now tracked to correctly report the message status with it is changed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2398:121,error,error,121,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2398,3,"['error', 'failure']","['error', 'failures']"
Availability,This PR fix an issue with sofa-launcher. When we are using sofa-launcher the scene we want to execute is copied in the /tmp directory. ; But because we weren't closing the current file it wasn't saved and so wasn't executed. . The fix close it.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/592:502,failure,failures,502,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/592,2,['failure'],['failures']
Availability,This PR fix an issue with the BoxROI component. There was a test in the constructor of BoxROI that created an unwanted behavior.; This test was moved in reinit(); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/627:419,failure,failures,419,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/627,2,['failure'],['failures']
Availability,"This PR fix an issue with the WriteState component. When we are using WriteState, we indicate as an argument the period with which we want to save the states. The states will be then saved in a file when a modulo of the period is reached.; But I have observed that there is always a one step offset between reaching the time to save and the actual saving. So I naively add one dt to the time WriteState is working with. . If there is an other way to resolve this issue without hard-coding in WriteState like I have done, I will be happy implement it . Thanks in advance; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/625:827,failure,failures,827,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/625,2,['failure'],['failures']
Availability,"This PR fix the opengl performance issue reported in #https://github.com/sofa-framework/sofa/issues/1070. The fix is in OglModel.cpp/OglModel.h and is very simple, when the positions and normals array are containg double precision numbers they are converted into single precision one before sending the data to OpenGL. I'm sure we can optimize further the conversion loop...but I have not time for that (volunteer needed). . Because the code in OglModel was hard to read because of the #ifdef GLEW all around I first cleaned the whole SofaOpenglVisual code, by removing the #ifdef. I also updated the call to function with name *ARB because they are now part of any baseline opengl implementation since nearly a decade. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1069:978,failure,failures,978,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1069,2,['failure'],['failures']
Availability,This PR fixes ShewchukPCGLinearSolver member `preconditioners` initialization.; Should fix the failing scene test `FEMBAR-PCGLinearSolver.scn`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/737:400,failure,failures,400,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/737,2,['failure'],['failures']
Availability,"This PR fixes a bug introduced in #2225. It's basically just a revert. ; Half of my scenes were crashing :( . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2265:654,failure,failures,654,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2265,2,['failure'],['failures']
Availability,"This PR fixes a requirement of https://github.com/conda-forge/staged-recipes/pull/23085 for the SOFA conda package on conda-forge.; It is required that header-only embedded libraries have their license in a separate file, that can be listed then in the conda package recipe.; This PR adds a missing license file for json nlohmann library (MIT) and homogenize the license file name for the two others SOFA header-only embedded libraries (difflib and stb, both also on MIT license). ; Cxxopts, which the last header-only embedded library in SOFA, will be treated separately in another PR to handle the code fetch case through cmake FetchContent. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4272:1188,failure,failures,1188,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4272,2,['failure'],['failures']
Availability,"This PR fixes a requirement of https://github.com/conda-forge/staged-recipes/pull/23085 for the SOFA conda package on conda-forge.; This add a find package to the cmakelists to avoid the cmake fetch of cxxopts sources if a cxxopts is already available and found. This is a simplified version of a find or fetch mechanism which looks enough here, and does not require cmake >= 3.24 (which embedds a more sophisticated find or fetch within an improved FetchContent set of macros).; The PR also adds a cmake SOFA option, which may be re-used if other dependencies will be managed by a similar mechanism, to allow or disable the fetch content of cmake (default behavior is to allow fetching to keep compatibility). ; This is required by the conda-forge PR to disable the fetching of source. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4273:242,avail,available,242,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4273,3,"['avail', 'failure']","['available', 'failures']"
Availability,"This PR fixes applyJT (constraints) of RigidMapping. . When using `rigidIndexPerPoint`, it would only work with indices in ascending order. ; For example: `rigidIndexPerPoint=[8,10,10,6,6,8]` would only map the three first constraints. This PR fixes this issue and should not change the behavior when using `index` or `indexFromEnd`. @ChristianDuriez: This was the problem with Etienne's scene. If you could have a look.. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1813:968,failure,failures,968,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1813,2,['failure'],['failures']
Availability,This PR fixes errors like `[FileRepository] File icons/back.png NOT FOUND` reported recently. These errors were caused by the fact that SofaGuiQt and runSofa had no idea were to find their resources (if not installed).; Adding and configuring some .ini files will fix that. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/758:14,error,errors,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/758,4,"['error', 'failure']","['errors', 'failures']"
Availability,"This PR fixes errors on the CI. 1- SofaSph; SpatialGridPointModel should be in the same module as SpatialGridContainer (i.e SofaSphFluid). SPH is 100% linked with SpatialGridContainer and SpatialGridPointModel is always used with SPH so it makes much more sense to be in the SPH plugin.; The move is registered in the ComponentChange list. 2- SofaDistanceGrid; One file was present in SofaMiscCollision (namely FrictionContact_DistanceGrid.cpp) but was never enabled because of the dependency order. Moreover, the content of this file is already in SofaDistanceGrid, more precisely in RegisterModelToCollisionFactory.cpp). So this is totally useless. NB: the two scenes using SpatialGridPointModel does not need SofaMiscCollision anymore. Fix #1897. Contains #2169 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2170:14,error,errors,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2170,3,"['error', 'failure']","['errors', 'failures']"
Availability,"This PR fixes exception handling in Python bindings. Mostly, the PR replaces the incorrect:; ```c++; PyErr_BadArgument();; Py_RETURN_NONE;; ```; with the correct:; ```c++; PyErr_BadArgument();; return NULL;; ```. As the [Python API](https://docs.python.org/2/c-api/exceptions.html) documentation says: . > [Python exception handling] works somewhat like the Unix errno variable: there is a global indicator (per thread) of the last error that occurred. Most functions don’t clear this on success, but will set it to indicate the cause of the error on failure.; > ; > **Most functions also return an error indicator, usually NULL if they are supposed to return a pointer, or -1 if they return an integer (exception: the PyArg_*() functions return 1 for success and 0 for failure).**. As it happened, any error triggered within the python bindings would go unnoticed until someone else would check the error flag using `PyErr_Occurred`, possibly during a python code error or by some other C extension (in my case, Numpy). . Hopefully the behaviour is now correct. <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] the content of the PR is clear and that a future PR from @maxime-tournier may follow the @matthieu-nesme suggestion. ; - [x] is more than 1 week old.; **Reviewers will merge only if all this checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/156:432,error,error,432,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/156,9,"['error', 'failure']","['error', 'failure', 'failures']"
Availability,This PR fixes install finding of Boost::program_options dependency added for the new ArgumentParser API in #513 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/618:370,failure,failures,370,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/618,2,['failure'],['failures']
Availability,"This PR fixes missing default ""plugins"" (now modules) after https://github.com/sofa-framework/sofa/pull/732. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/753:365,failure,failures,365,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/753,2,['failure'],['failures']
Availability,"This PR fixes most of the warnings which are not related to the lifecycle (on Ubuntu).; Summer cleaning :shower: . I did not put it as fast merge regarding the test on intersection @fredroy ; Once your reviewed this part, we could flag it :flags: . :love_letter: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4909:809,failure,failures,809,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4909,2,['failure'],['failures']
Availability,"This PR fixes quaternion integration so that a 1 rad.s^{-1} angular velocity integrated during 1 second results in a 1 rad angle change, as one generally expects. The original quaternion integration scheme is a [gnomonic projection](https://en.wikipedia.org/wiki/Gnomonic_projection) on the 3-sphere (or equivalently, a variant of the Cayley transform) that prevents the maximum angular change to exceed *pi* rad during one time-step, which is problematic as angular velocities get larger. Also, the angular velocity does not integrate to the corresponding rotation angle using this chart, as demonstrated in the failing test. This PR implements the [exponential map](https://en.wikipedia.org/wiki/Exponential_map_(Riemannian_geometry)) for unit quaternion integration given spatial angular velocity, which fixes both issues. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed ; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/172:1056,failure,failures,1056,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/172,1,['failure'],['failures']
Availability,"This PR fixes reinit() of BarycentricMapping when using `useRestPosition` option. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1815:626,failure,failures,626,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1815,2,['failure'],['failures']
Availability,"This PR fixes the `init()` of RigidRigidMapping when using `globalToLocalCoords=True` (your positions are initially expressed wrt the global frame) with `repartition` (your child's positions are mapped to the parent's positions using this description). . When we look at the code, we can see that someone already fixed the `init()` but only for one of three cases. ; This PR fixes the two forgotten cases. . **EDIT**. This PR:. RigidMapping:; - adds template <Rigid3,Rigid3> with tests ; - this change required some updates/additions in RigidCoord and RigidDeriv; - cleans variables name (d_, m_), which is **breaking** . RigidRigidMapping:; - sets the component as deprecated (with instruction to fix the scene) ; - fixes `init()` when using `globalToLocalCoords=True` with `repartition` ; - adds tests; - cleans variables name (d_, m_), which is **breaking**; - adds vectors' size checks; - adds component state checks; - removes ""fake"" vectors' size checks: if the sizes mismatch it should be detected during the initialization and the component should be in an invalid state. If the sizes change during execution, it is not enough to just check the size, the component should be in an invalid state because it impacts many other things... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3680:1789,failure,failures,1789,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3680,2,['failure'],['failures']
Availability,This PR fixes the compilation of CGAL plugin with CGAL version greater than 4.10. It also enables back the CylinderMesh component for which I'm not sure why it was removed in the first place as it seems to work perfectly. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/783:478,failure,failures,478,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/783,2,['failure'],['failures']
Availability,This PR follows #1272 to fix a link error on Windows. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1282:36,error,error,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1282,3,"['error', 'failure']","['error', 'failures']"
Availability,"This PR follows @marques-bruno work on https://github.com/sofa-framework/sofa/pull/909. - add INCLUDE_SOURCE_DIR parameter to sofa_generate_package; - rename INCLUDE_ROOT_DIR to INCLUDE_INSTALL_DIR (avoid confusion with INCLUDE_SOURCE_DIR). The idea is to permit this:; ```; sofa_generate_package(; NAME SofaSparseSolver ; VERSION ${PROJECT_VERSION} ; TARGETS SofaSparseSolver; INCLUDE_SOURCE_DIR ""src/SofaSparseSolver""; INCLUDE_INSTALL_DIR ""SofaSparseSolver/SofaSparseSolver""; ); ```; to obtain for example an install tree like this; ```; install; include <-- include_directories here exposes ALL module headers; SofaBaseTopology; header.h; SofaSparseSolver <-- include_directories here exposes ONLY SofaSparseSolver headers; SofaSparseSolver; header.h; SofaValidation; header.h; ...; ```; which is needed if we want to cleanly separate SOFA include directories. In a future PR I'd like to rework all SOFA install tree based on this INCLUDE_SOURCE_DIR + INCLUDE_INSTALL_DIR mechanism. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/951:1242,failure,failures,1242,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/951,2,['failure'],['failures']
Availability,"This PR follows latest changes from master and using accessor instead of begin/endEdit(). SofaOpenCL is not activated by default (either in Sofa or the CI). so compilation and tests are not relevant here. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1880:749,failure,failures,749,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1880,2,['failure'],['failures']
Availability,"This PR gives the ability to exchange images between different threads in the MultiThreading plugin. It would be especially usefull for multithreading a camera grabber component and other components (for instance computer vision algorithms). In more details: ; - It consists in adding, in the DataExchange component, exchanges of image data types (ImageUC, ImageUS, ImageF). It involves a depedency with the image plugin, handled in the CMakeLists through a preprocessor directive (WITH_IMAGE) defined in config.h.in.; - A simple example passing an image loaded from an ImageContainer component (thread 1) to an ImageViewer component (thread 2), to display the image in the GUI, is added.; - An issue with OpenGL in the draw() function in the Kinect component in the image plugin has also been fixed, by using the SOFA_NO_OPENGL directive (in the CMakeLists and in Kinect.h). Indeed, with the lib FREENECT detected, the OpenGL functions in draw() may not be compiled given the OpenGL support of SOFA. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/770:1259,failure,failures,1259,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/770,2,['failure'],['failures']
Availability,"This PR hopes to solve the bug where radius option can't be used with AttachConstraint. Provided scenario will crash SOFA.; [attach_radius.txt](https://github.com/sofa-framework/sofa/files/1973782/attach_radius.txt) (Github don't let me give `*.scn` ...). This is due to a call done to early. First commit solve this specific issue.; However, if you execute the previous scenario with just the first commit, it will still not work correctly : both index 0 points will be attached to each other, and that's it. The reason is that the mechanical objects are not correctly initialized when AttachConstraint `init()` is called. Commit 2 is a hack to show how it behave if we delay the initialisation. This does not aim to stay (and likely breaks working scenarios). Is there a way to delay said initialisation ?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/650:1065,failure,failures,1065,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/650,2,['failure'],['failures']
Availability,"This PR improves the `sofa_add_external_*` macros used for example by SofaHighOrder. It changes `sofa_add_external_subdirectory` behavior: instead of directly fetching/cloning the repository, it creates a CMake option which, if checked, will do the fetch (and be automatically reset to OFF aftewards). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/759:558,failure,failures,558,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/759,2,['failure'],['failures']
Availability,"This PR improves the message about missing required plugins for python users. Before it was printing lines to cut and paste in the scene (which is really nice!), but only for xml users. Now I propose to check the scene's extension and adapt the message. Here's an example for python:. ![image](https://user-images.githubusercontent.com/12150715/173034896-f7547d53-6a99-475a-892f-b481709ed0c4.png); . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3033:944,failure,failures,944,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3033,2,['failure'],['failures']
Availability,This PR include PR #1508 and replace last use of Qwt in QGraphDataWidget by qtCharts; Remove all cmake config of Qwt and remove the internal library. should fix #1496 or make things worst!. ![graph_cg](https://user-images.githubusercontent.com/21199245/94787278-63f5ca00-03d2-11eb-8fca-80bfcd40ba29.JPG); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1512:561,failure,failures,561,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1512,2,['failure'],['failures']
Availability,"This PR includes PR #2082 . - move topology pointer in mother class TopologyHandler instead of TopologyDataHandler; - Register TopologyHandler directly in each TopologyContainer level instead of inside a global list.; - Remove Data list of TopologyChange from each TopologyHandler and use directly the one from the TopologyContainer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2085:878,failure,failures,878,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2085,2,['failure'],['failures']
Availability,"This PR includes PR #2085 and #2082; will be merge in TopologyChange Poc branch. This method is not needed anymore in the TopologyHandler mechanism. Remove this call from all components. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2086:731,failure,failures,731,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2086,2,['failure'],['failures']
Availability,"This PR includes all the work of #1859 and finalized the lock down of the modifier API by removing public access to the propagateTopologyChanges method. - Remove deprecated method: propagateTopologicalChangesWithoutReset; - Turn propagateTopologyChanges into protected (which will be deleted soon to use only engines); - Turn propagateTopologicalEnginesChanges into protected. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1860:62,down,down,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1860,3,"['down', 'failure']","['down', 'failures']"
Availability,"This PR integrate PR #2114 and will be merged inside branch inf_topologyChanges_POC. Remove several header includes not needed. Also remove all TopologyDataHandler in constraints as they were only redefining a Data resize operation. This is already done directly inside the TopologyData. ; The destroyFunction should be only overridden if a complex behavior is needed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2162:913,failure,failures,913,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2162,2,['failure'],['failures']
Availability,"This PR introduces CMake configurations for SOFA activating and deactivating sub-parts of the project given the SOFA_CONFIGURATION string : CORE/STANDARD/FULL. . The configuration can be forced using `SOFA_FORCE_CONFIGURATION` otherwise the configuration can still be tweaked using CMake option command line. . To apply those configuration I've made two main modification depending on what needed to be activated :; - For options : I've added a CMake macro `sofa_configuration_dependent_option` that allows to specify the scope of the option and force it when needed.; - For plugins : I've modified the sofa_add_subdirectory adding the possibility to specify a `CONFIGURATION` type enabling or disabling the plugin by default depending on the config type and forcing the activation when needed. These configurations have been defined regarding the last STC discussion. . PS: This PR also enables to build Sofa.GUI without Qt. ; PPS: This PR also deactivates the legacy headers by default now; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4766:1537,failure,failures,1537,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4766,2,['failure'],['failures']
Availability,"This PR introduces a finally-working mechanism to detect old discussion topics and close them.; Here is the definitive process over 4 months:; - When the most recent comment is done by a reviewer and is older than 2 months → a warning comment is done in the discussion; - Two months later, a last warning is written and the topic is closed. However, to avoid catching users unawares, a temporary mechanism has been introduced for discussions already older than 4 months: they will not be immediately closed but firstly warned with a specific message.; Trust me .. it will work :see_no_evil: (testable only after merge ..). So far the action is not fully active : a safety mechanism is done to limit the comment on only the first identified discussion to avoid a massive mess. To be fully operational, the following steps should be performed subsequent to merge:; - [ ] test with only one entry (break); - [ ] remove break; - [ ] after 1st of December 2023, remove the temporary layer (py script). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4268:1541,failure,failures,1541,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4268,2,['failure'],['failures']
Availability,"This PR introduces a way to test if concurrent simulations can run in the same time.; For now, the scenes are in XML (basically copy-paste of caduceus.scn and liver.scn). The liver test tests merely the possibility to launch multiple scenes.; The caduceus is more complex and test the whole collision pipeline, and constraint-based contacts (friction, LCP); -> this caduceus does not use MT (in the freeanimationloop) because the TaskScheduler needs a full rewrite to be thread-safe... The liver one is expected to be working but the caduceus is expected to crash (due to the intersections and constraints not being thread-safe for the moment); ""expected"" because MT usually is not really deterministic so results can vary... . The best way to make sure it works would be run the TSAN in the same time (not enabled on the CI). Remark: should the expected test to be failing be disabled by default ? or do we let the test failing ?; (The resolution in future PRs); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4580:1508,failure,failures,1508,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4580,2,['failure'],['failures']
Availability,"This PR introduces collision layers, a collision filtering algorithm similar to the one used in [Unity's collsion pipeline](https://docs.unity3d.com/Manual/LayerBasedCollision.html). The overall idea is to omit collision detection for models that are in different layers. This way, each layer can be used for different functionality, e.g. cutting simulation.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4219:904,failure,failures,904,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4219,2,['failure'],['failures']
Availability,This PR is Based on #1004 . CHANGELOG:; - Cosmetic cleaning in RigidRigidMapping & replace serr with msg_error. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1005:370,failure,failures,370,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1005,2,['failure'],['failures']
Availability,"This PR is a ""all-in-one"" fix that correct all the failing test taggued ""OpenIssue"". ; To fix the issues some changes have been done but it shouldn't be too disturbing. The biggest is probably the fixing done in sofa::helper::vector (have a look at the allowed syntax in the _test""). . CHANGELOG:; - ADD sofa::helper::vector<int> tests validating the different possible syntax ; - ADD sofa::helper::vector<unsigned int> tests validating the different possible syntax ; - FIX sofa::helper::vector<int>::read() so that it reports errors message in case of problem ; - FIX sofa::helper::vector<int>::read() so that there is no more endless loop for some input; - FIX sofa::helper::vector<unsigned int>::read() so that it reports errors message in case of problem ; - FIX sofa::helper::vector<unsigned int>::read() so that there is no more endless loop for some input; - FIX in all tests the ""_OpenIssue"" suffix that I forgot to remove when I fix the tests; - FIX MassSpringLoader to refuse to load a Xsp containing a rigid object and send warning messages. ; - FIX DefaultPipeline that was allowing negative depth attribute. Now it warns the user and set it default value (6).; - FIX DiagonalMass_test that was not checking that some pointer were valid before using them. ; - CHG GenerateRigiMass.inl now sends a warning message instead of an error. ; - FIX DistanceGrid add basic validation of dimensions given to the constructors. Sends a dmsg_warning if they are invalid and returns 0. ; - FIX DistanceGrid rename the attributes' names to match the sofa guidelines. . That's all, ; if merged with #267, #264 and #257 we should have a nearly green dashboard . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] is more than 1 ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/271:528,error,errors,528,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/271,2,['error'],['errors']
Availability,This PR is a cherry pick of the changes proposed in PR #869 . Here is the initial description of the PR by @fspadoni . ---------. When solving constraints using a BaseConstraintCorrection component the function ; addComplianceInConstraintSpace compute the compliance matrix and add the contribution of the compliance matrix to the constraint solver matrix. . the goal is to split the computation of the compliance matrix (local for each deformable object) and the sum of the compliance matrix to the constraint solver (global) matrix in two different functions. - BaseConstraintCorrection::computeComplianceInConstraintSpace:; should be used to compute the compliance. This computation is independent and can be easily parallelized. - BaseConstraintCorrection::addComplianceInConstraintSpace:; should be used only to add the contribution of the compliance matrix to the constraint solver matrix. . This change is propagated to the LinearSolver class hierarchy because a ConstraintCorrection component might delegate the computation of the compliance matrix to the the LinearSolver. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1447:1338,failure,failures,1338,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1447,2,['failure'],['failures']
Availability,"This PR is a clean before introducing more work on the GeomagicDriver and a GeomagicEmulator. - Move all code related to model display from GeomagicDriver to an embedded class GeomagicVisualModel. This last class is not a component but it creates the node hierarchy to display the device.; - Various minor changes in Driver like adding a singleLink to the Forcefeedback. If needed this work would allow to use GeomagicDriver without linking to SofaOpenglVisual nor SofaLoader. (With a few changes in the cmakelists and in code). ![geomagic_demo](https://user-images.githubusercontent.com/21199245/81161088-4e978380-8f8b-11ea-9f59-bad683bc014d.JPG). - Even if this display is only for debug, my eyes were bleeding too much to let that.; Update the mesh to have cleaner normals/vertices. New mesh display:. ![Geomagic-RigidCubes_00000003](https://user-images.githubusercontent.com/21199245/81160922-06786100-8f8b-11ea-91f8-59fd904c8c2f.jpg). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1366:1196,failure,failures,1196,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1366,2,['failure'],['failures']
Availability,This PR is a follow up #548 ; My last batch of changes to fix the CI. Please review :) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/565:345,failure,failures,345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/565,2,['failure'],['failures']
Availability,"This PR is a merge with #4802. ![](https://private-user-images.githubusercontent.com/30337881/337613447-0367e8be-aebb-4349-9b01-dc7f4e73ac2a.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTkzOTE1ODAsIm5iZiI6MTcxOTM5MTI4MCwicGF0aCI6Ii8zMDMzNzg4MS8zMzc2MTM0NDctMDM2N2U4YmUtYWViYi00MzQ5LTliMDEtZGM3ZjRlNzNhYzJhLmdpZj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA2MjYlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNjI2VDA4NDEyMFomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTIyN2QwNDYxMGJiM2ZkN2IwZDk1NTExNDlkOGM5NGQ5MDBhMTE2NzJiNzVlNGQ4YTZkZmUzMzg3Y2JlNjc1ZjImWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.tWIepU9BfDMpqQKGDy0qE8Y1rGyyX2betzD6udxDwik). - New Changelog; - Update CMake version ; - Fix Changelog with closed PR. close #4770; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4787:1487,failure,failures,1487,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4787,2,['failure'],['failures']
Availability,This PR is a proposal to remove the TestMessageHandler as it was discussed during the today's meeting (connected to Issue https://github.com/sofa-framework/sofa/issues/94). The reason is that the TestMessageHandler class is more or less included in the behavior of the ExpectMessage & MessageAsTestFailure. In case I'm wrong please tell me if some scenario of yours cannot be handled nicely with the ExpectMessage & MessageAsTestFailure so that I can update their API. Concretely by this PR:; - The class TestMessageHandler is removed; - Handler needed by ExpectMessage & MessageAsTestFailure are now installed by default for tests ( Issue https://github.com/sofa-framework/sofa/issues/94); - The tests using the TestMessageHandler class have been fixed to use the ExpectMessage&MessageAsTestFailure.; - A bug in LoggingMessageHandler.h has also been corrected. Examples of use of the ExpectMessage & MessageAsTestFailure classes... To generate a test failure when an expected message have not been emitted you have to do; ```cpp; {; ExpectMessage raii(Message::Error);; ... do something that must emit a message ...; }; ```; To generate a test failure when a un-expected message have been emitted you have to do; ```cpp; {; 	MessageAsTestFailure raii(Message::Error);; ... do something that must not emit an error message ...; }; ```. The raii can be combined in the following way:; ```cpp; {; 	ExpectMessage warning(Message::Info);; 	MessageAsTestFailure raii(Message::Error);; 	MessageAsTestFailure raii(Message::Warning);; 	...; }; ```. Any suggestion on this API is more than welcome. . TODO:; 	It would be nice to be able to write; ExpectMessage warning(Message::Info & Message::Warning);,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/96:952,failure,failure,952,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/96,6,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,"This PR is a step-by-step version of the experiment done in https://github.com/sofa-framework/sofa/pull/1552. Currently this PR shouldn't breaking too much, the CI will tells us. Two test are failing...but this is on purpose to keep a track the breaking parts. ; The failure results from the unification of the naming schemes. ; Fixing the tests is easy, just replace the old string with the new one (int->i).; Nevertheless I suggest to fix that when whole refactoring will be over. Compared to #1552 ; - In this PR I'm re-organizing the existing Sofa code without touching its logic. The files in typeinfo/models/* are cut & past from DataTypeInfo.h. The files in typeinfo/TypeInfo_XXX.h are the DataTypeInfo<> specialization that also come from DataTypeInfo.h; - Some breaking changed are introduced to unify the naming scheme. The 'short' naming scheme is following the standard for python.array and was very close to what we already have in Sofa. . - In this PR I don't use at all the TypeInfoRegistry (expect in the test part), this is on purpose so a future PR will be able to emphasize the change on the Sofa code base (in Data.h). ; - In this PR I don't register typeinfo the registry (because it is not used yet), but I added the 'empty' files for that...it is in typeinfo/TypeInfo_xxxxx.cpp ; ; What will be done in a future PR:; - 1. fill the registry with types we are using and replace the use of VirtualTypeInfo<T>::get() in Data.h by TypeInfoRegistry::Get(T).; - 2. remove step by step the static type info and there related #includes files. ; - 3. rename all the method/enum in the static & dynamic system to unify with official naming convention. ; a. static function must start with an UpperCase; b. function returning boolean must start with a verb like IsValidTypeInfo() instead of ValidTypeInfo() ; c. add a getName()/GetName() to replace name().; - 4. replace the enum involved in the static type info system with constexpr. . EDIT: To satisfy popular demand here is more or less",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1605:267,failure,failure,267,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1605,1,['failure'],['failure']
Availability,This PR is an attempt to solve the problem pointed in Issue #193 . Problem summary: ; Currently in runSofa when reloading the scene only the ScriptController's are reloaded but not the python code imported by the controllers. . This PR:; solve the issue which avoid to restart runSofa each time an imported module used by a ScriptController is changed. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed.; - [ ] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/198:585,failure,failures,585,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/198,1,['failure'],['failures']
Availability,"This PR is based on #1406 and #1407 and uses the callback mechanism on some SOFA components (mainly Mesh loaders); It also takes advantage of the newly added ""isDirectory"" method in DataFileName in AddResourceRepository. It also:; - Removes the isPersistent flag from datafields in MeshLoaders (because this flag should only be used to set application-specific behaviors: in runSofa2, this flag is used to determine whether the datafield should be recorded when saving the scene for instance); - takes advantage of the getAccessors introduced by @damienmarchal in #1254 ; - Clears log messages from components withing update callbacks if the componentState changes to ""Valid""; - Sets the dynamic datafields created on-the-fly in the MeshVTKLoader depending on the mesh file content as outputs of the component (to guarantee they're update when the component's inputs change; - Checks for the validity of binary STL files using `isBinarySTLValid` for better error handling (see comment in the code l.103 in MeshSTLLoader.cpp); - Removes the autoLink flag from fileMesh in VisualModelImpl. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1408:957,error,error,957,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1408,3,"['error', 'failure']","['error', 'failures']"
Availability,This PR is based on #853 despite there is not real connection. ; I was to lazy to swtich branch. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/862:353,failure,failures,353,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/862,2,['failure'],['failures']
Availability,"This PR is based on https://github.com/sofa-framework/sofa/pull/2613 and makes sense only if https://github.com/sofa-framework/sofa/pull/2613 is accepted. A macro is introduced to simplify declaration and definition of Data's. See code comments for a description of this macro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2614:822,failure,failures,822,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2614,2,['failure'],['failures']
Availability,This PR is basically the same as #444 but this time it is against master. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/449:330,failure,failures,330,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/449,2,['failure'],['failures']
Availability,"This PR is big but should finally clean all licenses in SOFA. Here is what I did:; - Fix the licenseUpdater script; - Fix wrong or missing LGPL headers in modules; - Fix wrong or missing LGPL headers in SofaKernel; **WARNING**: I found a **contaminating paste of GPL code** in LCPcalc.cpp:501 (lcp_lexicolemke function). Since I didn't found any usage of this function in SOFA (including plugins), **I removed it**. ; Please **tell me if this is OK**. Otherwise, we will have to discuss about GPL contamination.; - Fix wrong or missing GPL headers in applications/projects; - ~~Fix wrong or missing LGPL headers in applications/plugins~~ (commits removed); - ~~Fix wrong or missing GPL headers in applications/plugins: OptiTrackNatNet, SofaPML and SofaVRPNClient~~ (commits removed); - ~~Fix wrong license in SofaHAPI/initSofaHAPI:58 (should be LGPL)~~ (commits removed); - Optimize organization of LICENSE files in SOFA. <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old. **Reviewers will merge only if all this checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/139:1096,failure,failures,1096,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/139,1,['failure'],['failures']
Availability,"This PR is build on top of #1639. It contains: ; - using the SOFA_BEGIN_DEPRECATION_WARNING_AS_ERROR where is makes sense.; - warning fix for gcc. With modern g++ (after version 10.0) there is hundreds of thousand of warning generated by the use of the; ```cpp; __attribute__(visibility); # define SOFA_EXPORT_DYNAMIC_LIBRARY __attribute__ ((visibility (""default""))); # define SOFA_IMPORT_DYNAMIC_LIBRARY; ```; I don't know if there is a fix but in the meantime I suggest to quite the warning system a little bit. . EDIT: well it seems I forogot to add the -Wattribute stuff in the PR and it was merge...I will change the title and make a new pr :). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1643:1194,failure,failures,1194,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1643,2,['failure'],['failures']
Availability,"This PR is en enhancement of the AdvancedTimer. We have added the possibility to get two different JSON ouputs. The first one represent all informations without deep limitation and the other is easier to use but does not represent all the componants tree of the simulation. You can now use the timer in C++ and in python, change dynamically the output type of each timer separately and use the output of the AdvancedTimer to create graphs and/or compare datas from two different scene timers. You can find an exemple of JSON output here : [JSON_example.txt](https://github.com/sofa-framework/sofa/files/1200444/JSON_example.txt); And an exemple of Light JSON output here : [LJSON_example.txt](https://github.com/sofa-framework/sofa/files/1200439/LJSON_example.txt). This work was done with the help of @untereiner and @chpaulus. A documentation will come at the end of my internship. suggested tag : enhancement; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/360:1169,failure,failures,1169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/360,2,['failure'],['failures']
Availability,"This PR is following PR #1605 in which we layed out a new organization for the sofa type system (i.e. the system that provide information about the content of Data fields). . PR #1605 should be merged so this one will have a quite small number of file changed and not 82. In the present PR we are:; - filling the TypeInfoRegistry with the type used but most of components. This is done in .cpp files ; - adding sofa/core/typeinfo/TypeInfo_ with the same organization as the one we have in SofaDefaultType; - replace the use of VirtualTypeInfo in Data.h so we are now using the new dynamic system. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1611:1143,failure,failures,1143,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1611,2,['failure'],['failures']
Availability,This PR is here to support Issue #388 . This is the beginning of a work on cleaning and modularizing the; SofaVolumetricData.; The module is splitted in two Plugins.; - SofaDistanceGrid; - SofaImplicitField. A third plugin act as a transitional package SofaVolumetricData guiding; other developpers on the change they have to do in order to have their; code compiling again. CHANGELOG.txt:; - SofaVolumetricData was strongly refactored and splitted in two plugins SofaDistanceGrid and SofaImplicitField. Please report to sofa-dev any broken behavior. A transitional plugin SofaVolumetricData is provided for one year. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/389:876,failure,failures,876,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/389,2,['failure'],['failures']
Availability,"This PR is just an excuse to test latest SofaPython3 PR https://github.com/sofa-framework/SofaPython3/pull/252. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/252]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2905:728,failure,failures,728,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2905,2,['failure'],['failures']
Availability,"This PR is linked to the issue #308 .; Since the modification of MechanicalObject reinit method in PR #270 ([this commit](https://github.com/sofa-framework/sofa/pull/270/commits/b6750f06ea0c5082f8c88d5aaea6bc65d8840429) ). The mechanicalObject doesn't change the value of P0. Thus, it is not necessary anymore to shift the OglModel and the Surf mechanicalObj. Several scenes were impacted but without ground truth it is hard to say if the scene is totally fixed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/324:719,failure,failures,719,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/324,2,['failure'],['failures']
Availability,This PR is not supposed to be breaking but one day we will totally remove the sofa::defaulttype::RGBAColor. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1463:366,failure,failures,366,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1463,2,['failure'],['failures']
Availability,"This PR is the continuation of the refactoring of Link. . Currently there is two static function to check path that are fully implemented in Link.h. The drawback of doing is that this requires:; - more #include are needed because of the full function definition.; - the #includes propagate in all the files that includes Link.h (so nearly everywhere); - as the function are implemented on templated classes this also cause a a lot of code generation (one for each template instance). . The new implementation move the implmentation out of the .h and put that into PathResolver.h. ; Bacward compatibility is implemented and flagged as deprecated. This PR also includes #1714 (to validate that the CheckPath features are still working as they were doing in the past).; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1717:1311,failure,failures,1311,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1717,2,['failure'],['failures']
Availability,"This PR is the following work on Geomagic started in PR #1366 (which is included in this one). This PR:; - Totally rewrite the GeomagicDriver init. Now, the tool is directly well placed before simulation start and doesn't need 2 or 3 simulation step to be well init.; => fix #996 . - HD (openHaptics) scheduler communication has been cleaned and fired msg_error with HD error code and description in case of problems.; => fix the possibility to handle several devices. - Clean a lot of old code not anymore used. Like the denavit matrix computation as OpenHaptics is doing it internally. ; => As a consequence, 5 or 6 Data have been removed: dh_XX; - Others changes like variable names replaced to use ""device"" or ""haptic"" instead of ""omni"". And add Doxygen documentation. - Add a component GeomagicEmulator to be able to virtually recreate device motion and interaction. See #1371; => This is almost working.. just need to do some inverse kinematics to compute the good tools transform matrix from the set of arm angles. ... I beg for help here. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1378:370,error,error,370,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1378,3,"['error', 'failure']","['error', 'failures']"
Availability,"This PR is updating the PR #1483 because I can't push on the SofaDefrost repository. I removed the callback on the topological changes which could be causing perf issue and should not be handle like this.; Keep the rest of the PR. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2245:777,failure,failures,777,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2245,2,['failure'],['failures']
Availability,"This PR isolates OpenGL-specific code (pickhandler, viewers, etc) of SofaGuiQt to a new library (called SofaGuiQtOpenGL), thus allowing us to implement a viewer which cannot/dont want to use OpenGL (e,g to deal with macOS in the future). . This PR prepares the ground for a SofaQt3D viewer. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1121:547,failure,failures,547,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1121,2,['failure'],['failures']
Availability,"This PR just adds a new template to Multi2Mapping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1814:595,failure,failures,595,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1814,2,['failure'],['failures']
Availability,"This PR just reorder the files inside the CMakeLists but it would be a good starting point to discuss:; - how we want to reorder files in the plugin SofaCUDA. For the moment they are all in sofa/gpu/cuda/ in a big mess.; - refresh the CMakeLists for new CUDA support. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2534:812,failure,failures,812,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2534,2,['failure'],['failures']
Availability,"This PR kind of fixes #316 ; Concerning Multithreading plugin, it still would be better to get rid of Boost dependency as stated by @fjourdes in #316. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/359:407,failure,failures,407,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/359,2,['failure'],['failures']
Availability,"This PR links PythonLibs 2.7 to SofaPython ""the proper way"":. Until now, a target was created within SofaPython, in order to expose PythonLibs' leaders & libraries to linked projects. This led to issues when trying to link an external project to SofaPython, since the targets were not properly installed (see #888). Since there's not reason to create a separated target for PythonLibs anyway, I removed it, and simply linked PythonLibs as you would do for any other lib. It should not cause any issue to plugins using SofaPython, since PythonLibs' headers / lib are exposed publicly through the SofaPython target anyway. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/891:877,failure,failures,877,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/891,2,['failure'],['failures']
Availability,"This PR mainly changes SofaMacros.cmake to permit external (on another repository) projects/plugins to be automatically fetched, updated and added to SOFA. Important: this work will permit to include SofaQtQuick GUI as an external project :wink: . This is a modified version of @fredroy branch [setup_external_plugin](https://github.com/fredroy/sofa/tree/setup_external_plugin). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/649:635,failure,failures,635,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/649,2,['failure'],['failures']
Availability,"This PR makes it easier & more reliable for plugins / external projects to find paths to the ""examples/"" and the ""share/"" folders in both the build directory and install directory. The current system was filling a file (sofa.ini) for this single purpose, that GUIManager was then parsing to retrieve those paths. if another project (tests for instance) would want to retrieve those paths, they would have to first locate this sofa.ini file (which can be very tricky if not part of the SOFA project tree), parse it and add it to the DataRepository. Now, preprocessor defines holds the paths and you just have to add it to the DataRepository as such:; sofa::helper::system::DataRepository.addFirstPath(SOFA_SHARE_DIR); sofa::helper::system::DataRepository.addFirstPath(SOFA_EXAMPLES_DIR). In both cases, the paths are *absolute* which is great (and what I needed) when building an external project, but generating distributable binaries with absolute paths will not work out well...; I realise this PR is not mergeable until this issue is resolved, but don't know how to change that.; With relative paths, finding the install directory from external projects is impossible, and with absolute paths, redistribution of binaries is not feasible. . Looking fwd to your inputs!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/651:31,reliab,reliable,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/651,1,['reliab'],['reliable']
Availability,"This PR makes so that the user can activate an option to look for and use CCACHE for compilation.; If the option is activated, then CMake looks for ccache. If ccache is found, it is used for compilation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/692:460,failure,failures,460,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/692,2,['failure'],['failures']
Availability,"This PR merge the branch topologyChanges_PoC inside master. ; This branch contains PR:; - #2082 ; - #2085 ; - #2086 ; - #2087 ; - #2114 ; - #2171 ; - (EDIT) #2162 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2228:709,failure,failures,709,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2228,2,['failure'],['failures']
Availability,This PR moves required Data check from BaseObject::init() to a new SceneCheck loaded by default.; The starting problem for this work was that having the check in BaseObject::init() forces every Component that overrides init() to call the parent init(). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/754:509,failure,failures,509,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/754,2,['failure'],['failures']
Availability,"This PR parallelize the assembly of the compliance matrix for the constraint resolution. It is done using a task pool.; It currently only applies to sparse linear solver (LU and Cholesky).; For this part of the code i observed a speedup of more than 2.; The SparseLDLSolver is not yet concerned. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3093:840,failure,failures,840,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3093,2,['failure'],['failures']
Availability,"This PR proposes an alternative representation of the root path's name. If we consider a node named ""root"", with a child node named ""child"", a component named ""object"" and a data field named ""data"", here were the previous values returned by their `getPathName` method:. ```; root.getPathName(): """"; root.child.getPathName(): ""/child""; root.object.getPathName(): ""/object""; root.data.getLinkPath(): "".data""; ```. I find this naming convention misleading, as an empty string for the root path does not seem right to me, and "".data"" for the path of root.data also look wierd:. - When working with link paths, like we do all the time in Sofa, making a link between a component's data and root.value would look like this:; ```; root.createObject('MyComponent', value=""@.value""); ```. - The same way, if a component for some reason would need a take a node as an input field, passing root would look like:. ```; node.createObject(""MyComponent"", nodePath=""@"") # passing root to nodePath would lead to syntax errors during parsing.; ```. Thus I suggest that, as it is done in FTP clients for instance, or filesystem browsers in general, the root node, regardless of its name be represented as a forward slash `/`:. ```; root.getPathName(): ""/""; root.child.getPathName(): ""/child""; root.object.getPathName(): ""/object""; root.data.getLinkPath(): ""@/.data"" # this cas still looks a bit funny, but makes more sense IMHO. root.createObject('MyComponent', value=""@/.value""); root.createObject('MyComponent', nodePath=""@/""); ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1146:1001,error,errors,1001,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1146,3,"['error', 'failure']","['errors', 'failures']"
Availability,"This PR proposes to remove DiagonalMass and replace with MeshMatrixMass (with lumping); Fix #2452 . One case remains to be covered: RigidTypes with non uniform vertex mass. A new PR is coming on this. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3001:745,failure,failures,745,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3001,2,['failure'],['failures']
Availability,"This PR re-adds the previously removed Regression project. This time, we use our CMake ""external project"" feature to auto-fetch Regression from https://github.com/sofa-framework/regression. We are now able to build Regression_test within SOFA and to specify what version (commit) of the project shall be fetched.; To change the version that will be fetched, edit `applications/projects/Regression/ExternalProjectConfig.cmake.in`. I also removed the deprecated ci scripts from `scripts/ci`. You can find latest CI scripts in https://github.com/sofa-framework/ci. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1052:818,failure,failures,818,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1052,2,['failure'],['failures']
Availability,This PR removes all occurrences and related codes for SOFA_GUI_INTERACTION. Fixes #623 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/643:345,failure,failures,345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/643,2,['failure'],['failures']
Availability,This PR removes the COMPONENTSET mechanism from our CMakeLists.; Deprecated components are now identified by the option SOFA_WITH_DEPRECATED_COMPONENTS. I also couldn't resist to reformat a bit. Tell me if I did something wrong!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/586:486,failure,failures,486,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/586,2,['failure'],['failures']
Availability,"This PR removes the dependency from SofaTest to the framework_test executable.; The reason for this is that SofaTest depends on a **lot** (if not all...) of librarires which do not reside ; in SofaKernel. So having a dependency to SofaTest somewhat defeats the whole puropose of writing; self contained fast to compile unit tests.; As a general rule, it should be a requirement that SofaKernel can compile without any dependency to ; libraries that do not reside in SofaKernel.; This PR address the problem only for framework_test, but the problem persists in SofaSimulation_test. # CHANGELOG; - Moved AdvancedTimer_test and DefaultAnimationLoop to SofaSimulation_test since they require to be able to instantiate a concrete instance of a Node; - Moved _TrackedData_test to SofaSimulation_test since it requires to be able to instantiate an AnimateBeginEvent object; - Removed dependency to SofaTest from framework_test, which implied the following; - removing calls to EXPECT_MSG_NOEMIT ( which is defined in SofaTest ); - copy pasting EXPECT_MAT_NEAR and EXPECT_MAT_DOUBLE_EQ macros from SofaTest in MatTypes_test.cpp. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/455:1377,failure,failures,1377,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/455,2,['failure'],['failures']
Availability,"This PR removes warnings caused by inconsistent use of the override keyword. While it might not remove all of them (not all plugins have been checked), it allows developers to actually fix the remaining ones rather than ignoring them because it will only generate more warnings. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/423:535,failure,failures,535,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/423,2,['failure'],['failures']
Availability,This PR replaces #510 with a simple fix suggested by @vmagno (thank you). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/515:330,failure,failures,330,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/515,2,['failure'],['failures']
Availability,"This PR replaces `this->d_componentState.getValue() == ComponentState::Valid` with `this->isComponentStateValid()`; Removes location where it should managed through delegation mechanism. Closes #4921. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4995:745,failure,failures,745,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4995,2,['failure'],['failures']
Availability,"This PR restores the use of argv with runSofa. I'm sorry I've been keeping this fix for a long time now, so I cannot tell you which PR broke the feature. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2802:700,failure,failures,700,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2802,2,['failure'],['failures']
Availability,This PR should fix #401 bug. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/403:285,failure,failures,285,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/403,2,['failure'],['failures']
Availability,"This PR should fix the issue raised in #1650 by cleaning CImgPlugin to properly use targets for dependencies and thus propagate their include directories. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1651:699,failure,failures,699,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1651,2,['failure'],['failures']
Availability,"This PR shows how to replace sofa::type::Mat with Eigen::Matrix. The goal was to minimize the amount of code change in the code base. Several difficulties arise:; - `sofa::type::Mat` initializes the values, but `Eigen::Matrix` don't; - `sofa::type::Mat` relies on the [] operators from `fixed_array`. I tried to add the [] operators in `Eigen::Matrix`, but too much cases makes it difficult. Maybe not impossible.; - `sofa::type::Vec` must also be a `Eigen::Vector`, but `Eigen::Vector` is a `Eigen::Matrix`, so all the methods we add in `Eigen::Matrix` are also available in `Eigen::Vector`, but sometimes it does not make sense. So conditions must be added on the availability of those methods. Because of those difficulties, the replacement is not simple. This PR is not finished. It just show how (at least the first step). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4993:563,avail,available,563,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4993,4,"['avail', 'failure']","['availability', 'available', 'failures']"
Availability,This PR simply add a default class named NoArgument in Factory.h.; NoArgument is usefull when you try to instantiate BaseCreator or Factory without passing arguments. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/385:423,failure,failures,423,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/385,2,['failure'],['failures']
Availability,"This PR simply introduces the template alias:. ```c++ ; sofa::core::sptr<T> = boost::intrusive_ptr<T>;; ```; in `<sofa/core/sptr.h>` and reflects the needed changes in the codebase. # Motivation. Most (all?) component types in SOFA come with a member typename `T::SPtr` referring to `boost::intrusive_ptr<T>`, which makes it impossible to declare a member shared pointer to another component without including the component header file. In an effort to decrease compilation times by removing unneeded include files, this PR introduces a template alias to solve this problem. It is now possible to declare member shared pointers using a forward declaration of their types only, as shown in 48f1447. # Changelog. - added `sofa::core::sptr<T>` template alias; - reflected changes in BaseClass macros, Base and Aspects; - replaced many constructors in `New` with variadic templates; - added an example include fix in `Compliant`. # Note. This PR is *not* intended to be a place for fixing every member SPtr + includes, otherwise it will never get merged. . If we can agree on the PR's philosophy and get it merged, please make separate PRs for include simplifications. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/436:1421,failure,failures,1421,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/436,2,['failure'],['failures']
Availability,"This PR slightly improves the doc around the DataTypeInfo API according to our findings while digging in to implement the Data type binding in SofaPython3.; It also adds a specialization of the `DataTypeInfo<helper::vector<T> >` with `T=std::string`, which proves that it is possible to iterate over containers with `SimpleLayout() == true` and `BaseType()->FixedSize() == false`, which is important for SofaPython3 bindings. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1113:682,failure,failures,682,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1113,2,['failure'],['failures']
Availability,This PR suggested by @alxbilger fixes build on Windows with VS2017. Error was `C2057: expected constant expression`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/630:68,Error,Error,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/630,3,"['Error', 'failure']","['Error', 'failures']"
Availability,"This PR the updateLinks method in SingleLink and MultiLink.; The rational is taht there is no need to implement general algortihm in templated class if one version is possible for their abstract Base class. Implementing the algorithm in the has multiple advantage:; - easier to read, understand and debug because there the code is template free; - faster to compile as only one version of the code has to be code-generated instead of having one version for each type template in each the compilation units. ; - as the implementation is not templated it can be defined in the .cpp instead of the .h, this permit to have less #include files that propagate in all our code base. . Basically:; SingleLink<T>::updateLinks (in Link.h); MultiLink<T>::updateLinks (in Link.h); are now implemented in BaseLink.cpp. several methods (_doXXX_) in BaseLink have been introduced to expose Link<> behavior to BaseLink. This PR is based on top if #1717 and #1749; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1735:1492,failure,failures,1492,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1735,2,['failure'],['failures']
Availability,This PR unify the API for DataTrackerEngine and DataCallback; so they match. The difference between the two is that in DataTrackerEngine; the callback is called when the data is needed (so the output is accessed); while in a DataCallback the update is done each time the data is changed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1073:544,failure,failures,544,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1073,2,['failure'],['failures']
Availability,"This PR will be further discussed during STC#3. ## issofa_bugfix. ### Cleans; - BaseObject: Output message in serr for required datas. Error word should be reserved for messages that will make the application fail.; - RayTriangleVisitor and SceneLoaderFactory: clean warnings; - ParticlesRepulsionForceField: Add empty implementation of addKToMatrix to get rid of console warnings. ### Bugfixes; - AttachConstraint: fix crash when indices are resized; - BTDLinearSolver: fix constant log + operator new [] vs operator delete mismatch; - CatmullRomSplineMapping: fix applyJ compilation; - ConstantForceField: fix avoid crashes in draw when trying to apply a constantforcefield to a non existing point; - DistanceGrid: fix incorrect use of serr; - GeneralConstraintSolver: fix incorrect parent class in SOFA_CLASS macro; - IndicesFromValues: fix use getTemplateName to avoid problems of links with other data; - EulerImplicitSolver: fix Disable calls to solveConstraint from EulerImplicitSolver by default as it is not needed unless an very specific solver is added and it currently crashes in other cases + wrong argument order in calls to `AdvancedTimer::stepNext()`; - FixedConstraint and PartialFixedConstraint: fix ""fixed FixedConstraint & PartialFixedConstraint for size-varying mechanical objects"".; - MechanicalObject: fix crash in debug with null pointer; - Mass: fix remove error logging in Mass method that are inherited from Forcefield API and that are not relevant for Mass; - MechanicalMatrixVisitor and MechanicalOperations: fix if using a Linear Solver, projective constraints were wrongly applied when a force field is in a child node; - Mesh2PointMechanicalMapping: fix constraints ApplyJT; - Metis(gk_arch.h): fix compilation with Visual Studio 2015; - ParticlesRepulsionForceField and RepulsiveSpringForceField: fix avoid division by 0 on repulsion force fields; - PersistentContactBarycentricMapping: fix init variables in constructor; - RestShapeSpringsForceField: fix Runtime stif",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218:135,Error,Error,135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218,1,['Error'],['Error']
Availability,"This PR will be merged in the topologyChanges_POC branch. this method was never called and is not useful.; Add Disabled message. This need to be merged before #2114. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2171:710,failure,failures,710,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2171,2,['failure'],['failures']
Availability,This PR will fix our last failing unit test on Unix! :tada: . CImgPlugin defines for CImg build needed to also be defined by every project using CImg.; ~~They are now exported in `CImgPlugin_CFLAGS`.~~; They are now defined PUBLIC by CImgPlugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/595:502,failure,failures,502,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/595,2,['failure'],['failures']
Availability,This PR will remove various warnings generated when compiling with gcc 6.3.0. Warnings coming from extlibs are not fixed.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/454:379,failure,failures,379,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/454,2,['failure'],['failures']
Availability,"This PR:; - adds the new component MechanicalMatrixMapper (formerly called MappedMatrixForceField); - suppress the Cmake option SOFA_WITH_EXPERIMENTAL_FEATURES (Was used for development and is useless now) added in https://github.com/sofa-framework/sofa/pull/276. The component MechanicalMatrixMapper allows to compute the mapped matrices computed by ForceFields under mappings, which are ignored by the SOFA animation loops.; Typical usage would be:; **Node**; MechanicalObject (MO) **q**; MechanicalMatrixMapper (NodeParsed = **MappedNode**) --> computes **J**^T.**K**.**J** and **J**^T.**M**.**J**; .....**MappedNode**; .....MappedMechanicalObject (MMO) **q_m**; .....Mapping (input = ../MO, output = MMO) -> Computes **J**.**q_m**; .....ForceField -> Computes stiffness matrix **K**; .....Mass -> Computes Mass Matrix **M**. Any comments welcome!; (Work with @VannesteFelix @ChristianDuriez ); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/721:1154,failure,failures,1154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/721,2,['failure'],['failures']
Availability,"This PR:; - remove the ""Add Node"" context menu & feature because it is not working and even if working it makes no real sense without having the hability to save the scene.; ; - remove the transform feature in QSofaListView.cpp because it is not working and makes no real sense without having the hability to save the scene. . - modernize the qt connect to use the c++11 syntax. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3025:925,failure,failures,925,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3025,2,['failure'],['failures']
Availability,This PR:; - updates the sceneCheckerAPI by setting the default leve at 19.06 and removing the warning for BoxStiffSpringFF; - set as deprecated MatrixMass for developers; - warns users about the deprecation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1107:464,failure,failures,464,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1107,2,['failure'],['failures']
Availability,This PRs regroups 2 works:. **1. Changes for v19.12 packaging**; - Qt deployment using windeployqt/macdeployqt and post-install scripts; - Improvement of post-install scripts (Linux and MacOS); - MacOS packaging with latest CMake; - Better param names for macros sofa_install_libraries and sofa_copy_libraries. **2. Integration of DocBrowser by Defrost**; - New Qt dependencies (required): WebEngine + WebEngineWidgets; WARNING: this will definitely break VS2015 compatibility. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1275:734,failure,failures,734,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1275,2,['failure'],['failures']
Availability,"This Pull request is not supposed to be merged... it is for a demonstration for the CRIStAL seminar. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3506:647,failure,failures,647,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3506,2,['failure'],['failures']
Availability,"This Pull_request is adding three new tests:; - LocalMinDistance; - Light (the three kind of light); - AllComponent . These tests contains open issues. ; The AllComponent test will fail until all component have an associated example file, on failure it reports the number of missing examples and the component that have none)... Maybe this test should be moved as a tool and not a systematic test;. . This commit shouldn't break anything in sofa. If it does beep me.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/67:242,failure,failure,242,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/67,1,['failure'],['failure']
Availability,This STC#5 sprint pull-request cleans the whole Scene Checking API.; It also adds a new SceneCheck that warns for alias uses: `SceneCheckUsingAlias`. It's a first step concerning #677 :+1: ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/702:447,failure,failures,447,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/702,2,['failure'],['failures']
Availability,"This aims to tackle one point of #4221 . Required for the conda-forge package (https://github.com/conda-forge/staged-recipes/pull/23085).; This PR propose to replace tinyxml embedded library, which is unmaintained now for a long time, by tinyxml2 (https://github.com/leethomason/tinyxml2/tree/master, under Z-lib license) which looks to be its successor and best candidate, as it is maintened, well packaged with cmake and available on conda-forge. ; Also, it is compatible for a future ""find package or fetch content"" mechanism in cmake. I don't know if we want to split the implementation of this additional feature for this package in another PR because if we do so, current code would need an additional required dependency to tinyxml2. ; The ""find or fetch"" cmake mechanism for this package, avoiding the requirement for this dependency to be installed, can be implemented as it:. ```; # find or fetch TinyXML2; include(FetchContent); FetchContent_Declare(; tinyxml2; URL https://github.com/leethomason/tinyxml2/archive/refs/tags/9.0.0.tar.gz; FIND_PACKAGE_ARGS NAMES TinyXML2; ); FetchContent_GetProperties(tinyxml2); if(NOT tinyxml2_POPULATED); FetchContent_Populate(tinyxml2). set(tinyxml2_SHARED_LIBS ON CACHE INTERNAL """"). add_subdirectory(${tinyxml2_SOURCE_DIR} ${tinyxml2_BINARY_DIR}); endif(); ```; However, this would required cmake >=3.24 and this call to be at a toplevel cmake (duplicating this code to replace all current calls to `find_package(TinyXML2)` does not seem desirable neither, so we might think also about how we can implement that in the cmake chain).; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - i",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4240:383,mainten,maintened,383,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240,2,"['avail', 'mainten']","['available', 'maintened']"
Availability,"This allows to create a vector this way:. ```cpp; CudaVector<SReal> v { {1., 2., 3., 4.} };; ```. It is required to apply the suggestion from https://github.com/sofa-framework/sofa/pull/4852#discussion_r1696348587. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4868:759,failure,failures,759,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4868,2,['failure'],['failures']
Availability,"This assert is annoying:; In a better world, a singleton should never return null in the first place, so getSimulation() should create the simulation if it doesn't exist. but then in a better world, the Simulation class would not be a singleton in the first place..; Meanwhile, this assert prevents us from coding things like this:. ```cpp; if(!sofa::simulation::getSimulation()); sofa::simulation::setSimulation(new DAGSimulation());; ```; And that's a problem to initialize the Simulation singleton, because without the test, it would be recreated all the time.; So I vote for removing it entirely. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1082:857,failure,failures,857,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1082,2,['failure'],['failures']
Availability,"This branch contains the coding-sprint results & associated fixing commits. . There is the commit for the base branch, the coding sprint commit, post-sprint compilation fixes et test fixing. . CHANGELOG:; - deprecating several components (see the list in deprecatingcomponents.cpp); - the SceneCreator is base on a totally new implementation. The most notable difference is that the ; SceneCreator is no more relying on component from sofa core but use the factory to create the objects. ; The API does not change but if the factory is empty (because no plugin is loaded) then the ; components cannot be not created. So If you used SceneCreator in your test you may need to pre-load the plugin or module as done in ""sofa/SofaKernel/modules/SofaImplicitOdeSolver/SofaImplicitOdeSolver_test/loadPlugins.cpp""; - Fix FileMonitor_test that were randomly failing one MacOS; - Fix DataEngine_test that was failing on Vertex2Frame. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/457:1180,failure,failures,1180,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/457,2,['failure'],['failures']
Availability,"This branch is to prepare the coding sprint. It does:; - split the CMakeFile.txt in three sets to allow component deprecation/stabilization.; - implement a light C++ api in sofa::simpleapi::* to create component with a pythonic look & feel; - use the simpleapi to change the code of SceneCreator to cut the dependencies and to simplify the plugizniation of modules. ; - in SceneCreator, create SceneUtil.h where some function from SceneCreator are now. ; - remove the module/sofa/component/typedef/* (which seems to cause no real problem); - mute the SOFA_DECL_CLASS/SOFA_LINK_CLASS so maybe...as everything works in the CI we ca n probably remove those lines and stop using them in .cpp ; - remove c++ tutorials from CMakeList before real removal they are slow to compile, and induce big dependencies so it will slow down the deprecation. . To avoid post-cleaning workload I merged:; - PR#422 Fix for SofaImplicitField and SofaVolumetricData plugin; - PR#407 [SofaSphFluid & SofaMiscCollision] Pluginizing the two modules; For the same reasons we may also merge #414 #424 and 425 . Notes: ; - the SceneCreator refactoring is not fully working and generates few test failures but this can be fix easily. ; - removing the typedef & SOFA_DECl/SOFA_LINK seems to ok. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/429:818,down,down,818,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/429,4,"['down', 'failure']","['down', 'failures']"
Availability,"This branch's purpose is to create artificial targets when compiling to avoid the need of installing sofa to be able to use compiled sofa library in external project compilation. . This was needed by @courtecuisse in the development of external library. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4135:800,failure,failures,800,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4135,2,['failure'],['failures']
Availability,"This bug just pop up again in #967 and was referenced in issue #631 ; Several Gmsh file have non coherent topology information, for example Triangulation with edges on the border only. This mess up information feeding the topology container. If this behavior is wanted, use ``` <MeshGmshLoader createSubelements=""0"" />``` and be sure to link the different topology buffer data to the appropriate components.; For example:; ``` ; <MeshGmshLoader name=""loader"" createSubelements=""0"" />. <Node name=""triangulation"" >; <TriangleSetTopologyContainer name=""tri_topo"" triangles=""@../loader.triangles"" />; </Node>. <Node name=""border"" >; <TriangleSetTopologyContainer name=""edge_topo"" edges=""@../loader.edges"" />; </Node>; ```. fixes #631. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/986:988,failure,failures,988,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/986,2,['failure'],['failures']
Availability,"This bug seems to have been introduced by 0ae8f64fc7145417bb528af039b1b9bd30dfb247. To reproduce the bug, the following scene should normally converge. ```; <?xml version=""1.0""?>; <Node dt=""1"">; <StaticSolver />; 	<CGLinearSolver name=""CGLinearSolver"" printLog=""1"" iterations=""250"" tolerance=""1e-08"" threshold=""1e-08"" />; 	<RegularGridTopology name=""grid"" n=""3 3 25"" min=""0 0 0"" max=""15 15 180"" p0=""0 0 0"" />; 	<MechanicalObject template=""Vec3d"" name=""dof"" src=""@grid"" showObject=""1"" showObjectScale=""5"" />; 	<HexahedronSetTopologyContainer src=""@grid"" />; 	<HexahedronSetGeometryAlgorithms />; 	<HexahedronFEMForceField template=""Vec3d"" method=""small"" poissonRatio=""0.45"" youngModulus=""1.51665"" />; 	<BoxROI name=""fixedROI"" box=""0 0 -3.75 15 15 3.75"" drawBoxes=""1"" />; 	<FixedConstraint indices=""@fixedROI.indices"" />; 	<BoxROI name=""forceROI"" box=""0 0 176.25 15 15 183.75"" drawBoxes=""1"" />; 	<LinearForceField points=""@forceROI.indices"" times=""0 1"" forces=""0 0 0 0 -0.00166667 0"" />; </Node>; ```. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/539:282,toler,tolerance,282,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/539,1,['toler'],['tolerance']
Availability,"This cannot yet be tested due to the non-triggering of Actions (probably due to MacOS issue). However, I think we needed this action to daily check whether +1 year old topics where kept unanswered while having a reply from a core-dev. There it is. For the moment the action is de-activated to first test it and print as log:; ```; console.log(`Discussion Title: ${discussion.title}`);; console.log(`Discussion ID: ${discussion.id}`);; console.log(`Last Reply by ${teamName} Member: ${lastReplyUserName}`);; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4096:1056,failure,failures,1056,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4096,2,['failure'],['failures']
Availability,"This caused a compilation error since #4776 in Debug mode. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4792:26,error,error,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4792,3,"['error', 'failure']","['error', 'failures']"
Availability,This change has been performed to make the usage of the script and the documentary clearer. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/570:348,failure,failures,348,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/570,2,['failure'],['failures']
Availability,This change is needed before using the new dependency pack (libjpeg + libtiff) on Windows. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/566:347,failure,failures,347,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/566,2,['failure'],['failures']
Availability,"This code had to be removed:; ```cpp; if (this->m_separateGravity.getValue()) for ( unsigned int i=0; i<indices.size(); i++ ); {; }; ```. because it is empty, and also because the condition was already tested earlier. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3593:762,failure,failures,762,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3593,2,['failure'],['failures']
Availability,"This commit adds a directive to instruct CMake to find/use XCode's framework lastly.; E.g if you have installed libpng with homebrew/macport, CMake will use those first instead of the Apple's (old) ones. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/720:460,failure,failures,460,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/720,2,['failure'],['failures']
Availability,This commit fixes compilation error while adding QtGuiInteraction plugin.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/48:30,error,error,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/48,1,['error'],['error']
Availability,"This commit rewrites the static ODE solver, implements two additional convergence criteria, improves the documentation of every step found in the ""solve"" method, and adds useful doxygen documentation of the Newton algorithms executed by the component. Up until this commit, the only convergence criteria of the static ODE solver were absolute force residual norms, and absolute (displacement) increment norm. Using absolute values for convergence criteria means that the value set by the user is dependent on the simulation scale. For example, setting an absolute displacement norm of 1e-5 might seem enough for a liver mesh set in millimetres, but is definitely not adequate for the same liver using this time a mesh scaled in metres. This is a source of user error, and is probably why many FEM software will use relative convergence criteria. The two additional criteria are:. 1. The relative residual norm |R|/|R0| where |R| is the norm of the force vector after the last Newton iteration, and |R0| is the norm of the force vector after the first Newton iteration.; 2. The relative displacement norm |dx|/|U| where |dx| is the norm of the latest solution vector, and |U| is the norm of the sum over all previous solution vectors of the current time step. To remove any confusion between absolute and relative criteria, the convergence data field ""correction_tolerance_threshold"" and ""residual_tolerance_threshold"" were renamed for ""absolute_correction_tolerance_threshold"" and ""absolute_residual_tolerance_threshold"", respectively. Note that to keep a compatibility layer with older scene files, these old data field names are still available, but a deprecated warning is shown to the user, inviting him to update its scene. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/147]. EDIT: Fix #224. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2050:761,error,error,761,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050,1,['error'],['error']
Availability,"This commit sets the d_totalMass as read and write in DiagonalMass.; Before set as read-only, without reason.; The commit also updates the coding rules in the Data. Tests are added to check for both hexa and tetra topologies,; the coherency between totalMass and massDensity. It also checks that; if both totalMass and massDensity are defined, totalMass predomines. WARNING: the test showed issue of casting in the EXPECT_EQ(). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] breaks existing scenes.; - [x] breaks API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/230:658,failure,failures,658,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/230,1,['failure'],['failures']
Availability,"This component has been removed from SOFA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4708:587,failure,failures,587,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4708,2,['failure'],['failures']
Availability,"This component was using a set of data to define indices on which to apply springs. But those data already exist in the parent class. This was resulting in strange behaviors when using `AttachBodyPerformer` (which uses this component to attach an object to the mouse) out of the GUI API. . In fact the performer was acting on the parent data which is not directly used by the StiffSpringForcefield. A nebulous chain of update triggered by a GUI update made it work with the mouse interactor anyway, but not when the performer was own by a graph component. . Anyway this mechanism doesn't seem to have any added value and now the performer works great even outside the GUI interaction API. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4635:1235,failure,failures,1235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4635,2,['failure'],['failures']
Availability,"This could be a step toward the removal of some visitors. The goal is to write something like the following instead of going through visitors:. ```C++; //simple counter of BaseMechanicalState; std::size_t counter {};; for (const auto* state : simulation::SceneGraphObjectTraversal<sofa::core::behavior::BaseMechanicalState>(root.get())); {; ++counter;; }. // The following replaces the visitor MechanicalGetNonDiagonalMassesCountVisitor; const auto massTraversal = simulation::SceneGraphObjectTraversal<sofa::core::behavior::BaseMass>(this->getContext());; const std::size_t nbNonDiagonalMasses = std::count_if(massTraversal.begin(), massTraversal.end(), ; [](auto* mass){ return !mass->isDiagonal();});; //note that these lines don't compile yet because this->getContext() does not give a Node*; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4334:1346,failure,failures,1346,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4334,2,['failure'],['failures']
Availability,This data holds the force applied to satisfy the SlidingConstraint. Rename some data with more explicit names following Sofa conventions. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/780:394,failure,failures,394,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/780,2,['failure'],['failures']
Availability,"This does the issue https://github.com/sofa-framework/sofa/issues/4845. . During this refactoring, I've stumbled upon two issues : ; 1. The first refactoring has some errors, where the new type was compatible with the old one, but not the exact one. So I fixed it. Also Sometimes the old data type was changed but only on the old symbol, which is strange and certainly made the compat layer break is used because often the two types where completely unrelated but `setParent` isn't templated so.... ; 2. This compat layer only works for `Data<T>` every types that inherits from it, will only see the original `Data<T>` methods taken into account in the compact layer. This was the case here for `DataFileName` and all `TopologicalData`. . I've decided to adopt two different strategy : ; 1. For `DataFileName` I didn't put my component and still usef the 'setParent' strategy. This is because, a priori, we won't chage a filename data during execution, this is often a given parameter, but we often use methods specific to `DataFileName`. ; 2. For the topological one, usually topological mechanisms are used in very specific classes to handle topological changes. But in a user perspective, it is often used as a classical `Data<vector<Index>>`. So What I did is use `RenamedData` on those, allowing the compat on the `Data<T>` level, but not for the topological methods which are not working anymore on the old symbol (and will create a compilation error if used)... ; ; To make it cleaner we might need to create new `RenamedData` class for all classes inheriting from `Data<T>`. Which is not the purpose of this PR. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will m",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4927:167,error,errors,167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4927,1,['error'],['errors']
Availability,This file is needed even if SOFA_INSTALL_RESOURCES_FILES == false; Fixes #114. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/285:335,failure,failures,335,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/285,2,['failure'],['failures']
Availability,"This fix allows to select and copy parameters names in Sofa GUI interface, which is very useful when setting default values for elements in scene files. Instead of setting parameters names as titles of widgets I created QLabel objects and set them as the first row of the GridLayout manager. I know that current sofa GUI will be replaced with Qt quick GUI soon, but I guess this modification will still be useful for those who use this version of GUI. I also would to make this change for Qt quick GUI, but all parameters names in QML are covered with ""Mouse Area"" objects, which don't allow to handle mouse events for text objects under them. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/369:900,failure,failures,900,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/369,2,['failure'],['failures']
Availability,This fix allows to set the default filename for the Monitor class. The default name assignment is removed in 'init()' function since in constructor it doesn't work. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/500:423,failure,failures,423,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/500,2,['failure'],['failures']
Availability,"This fix was already applied to examples/Components/forcefield/TriangularForceFieldComparison.scn; See 28c8b68f9d6ed4be725baf305a0957097581fb13. Sorry but I can't explain why this fix was needed in the first place. ; If someone could, that would be great :+1: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/626:518,failure,failures,518,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/626,2,['failure'],['failures']
Availability,"This fixes a segmentation fault I had with the SofaPython3 where the valid gui name was a python string variable. Since the GUI manager was storing a raw pointer to it, and since the python variable was later destroyed, the GUI manager was seg faulting when accessing the pointer. This PR simply creates a copy of the string instead of storing a raw pointer to it. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1108:26,fault,fault,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1108,4,"['failure', 'fault']","['failures', 'fault', 'faulting']"
Availability,This fixes the GuiRepository path for Windows VS compiling related to issue #577 and then a subsequent issue with QTextBrowser opening the runsofa.html file. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/578:414,failure,failures,414,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/578,2,['failure'],['failures']
Availability,This fixes the problem of closing runSofa while window like pluginManager or VisitorWindow being open and not killed when main application stop. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1030:401,failure,failures,401,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1030,2,['failure'],['failures']
Availability,"This follows #2073 . BaseIntTool/MeshIntTool (and their friends IntrUtility stuff) was mostly created to handle OBB/Capsule.; Their design is quite weird (at least to me) and it is [based on a code copied from GeometricTools](https://github.com/sofa-framework/sofa/blob/44001a4da752dc91078b8e10ca035e07845ecb66/SofaKernel/modules/SofaBaseCollision/src/SofaBaseCollision/IntrUtility3.h#L22) (so the copyright/licensing is nebulous in the best case). This PR makes SofaBaseCollision to not rely at all on those code, mainly to revert back the code from a long time ago.; It fixes also the fact that DiscreteIntersection was using proximities for the various computeIntersection() [1st error], but not using proximities in the various testIntersection in the proximities-based Intersections [2nd error]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2081:683,error,error,683,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2081,4,"['error', 'failure']","['error', 'failures']"
Availability,"This function crashed in some cases covered by the added unit tests.; I changed the behavior:; - No difference between platforms; - Check if the returned path starts with a slash or backslash and remove it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3693:751,failure,failures,751,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3693,2,['failure'],['failures']
Availability,"This gives more choices for the ordering method. It mimics the choices we have in Eigen-based linear system (e.g. EigenSimplicialLDLT). The data applyPermutation is deprecated. Notes:; - It means we have an alternative to Metis for all solvers. However, it may not be as efficient as Metis.; - The new implementation may be less efficient (or not, I haven't tested) than calling directly the Metis function. But this call is made only once, or every time the matrix pattern changes (topological changes etc).; - Since we have multiple choices, we can put all of them in a factory. That way, Metis could be moved away from this module. Another module can be created, which depends on Metis and would populate the factory with Metis methods. This could also be the case with Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4370:1325,failure,failures,1325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4370,2,['failure'],['failures']
Availability,"This has not been tested but should not harm anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4626:597,failure,failures,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4626,2,['failure'],['failures']
Availability,"This helps to configure which branch to checkout when working with embedded external plugins (also for release generation). This parameter is mandatory for an `EXTERNAL` sub directory, because default value are misleading... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4448:771,failure,failures,771,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4448,2,['failure'],['failures']
Availability,This include #1283.... so please let the first one merge first. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1330:320,failure,failures,320,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1330,2,['failure'],['failures']
Availability,This include PR #1251 to make it compile in the CI. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1253:308,failure,failures,308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1253,2,['failure'],['failures']
Availability,"This include is actually required in some cases outside of SOFA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3547:609,failure,failures,609,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3547,2,['failure'],['failures']
Availability,"This is a WIP PR but need review flag for CI-driven investigation. [ci-depends-on https://github.com/sofa-framework/Regression/pull/25]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2800:681,failure,failures,681,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2800,2,['failure'],['failures']
Availability,This is a WIP to support discussion about issue #362 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/371:311,failure,failures,311,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/371,2,['failure'],['failures']
Availability,This is a basic fix when compiling sofa with Visual Studio 2015 and using the QWT plugin; last() is replaced by back() for deque. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/935:386,failure,failures,386,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/935,2,['failure'],['failures']
Availability,"This is a first attempt to fix our GitHub actions now failing. Solution from : https://stackoverflow.com/questions/75608323/how-do-i-solve-error-externally-managed-environment-every-time-i-use-pip-3. GitHub Action errors; ```; Run pip install python-graphql-client; error: externally-managed-environment. × This environment is externally managed; ╰─> To install Python packages system-wide, try apt install; python3-xyz, where xyz is the package you are trying to; install.; ; If you wish to install a non-Debian-packaged Python package,; create a virtual environment using python3 -m venv path/to/venv.; Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make; sure you have python3-full installed.; ; If you wish to install a non-Debian packaged Python application,; it may be easiest to use pipx install xyz, which will manage a; virtual environment for you. Make sure you have pipx installed.; ; See /usr/share/doc/python3.12/README.venv for more information. note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.; hint: See PEP 668 for the detailed specification.; ``` . We will therefore investigate in an upcoming PR the use of virtual Python environment and see how it behaves when the action runs itself a python script",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5065:139,error,error-externally-managed-environment-every-time-i-use-pip-,139,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5065,3,['error'],"['error', 'error-externally-managed-environment-every-time-i-use-pip-', 'errors']"
Availability,"This is a first attempt to fix our GitHub actions now failing. Solution from : https://stackoverflow.com/questions/75608323/how-do-i-solve-error-externally-managed-environment-every-time-i-use-pip-3. GitHub Action errors; ```; Run pip install python-graphql-client; error: externally-managed-environment. × This environment is externally managed; ╰─> To install Python packages system-wide, try apt install; python3-xyz, where xyz is the package you are trying to; install.; ; If you wish to install a non-Debian-packaged Python package,; create a virtual environment using python3 -m venv path/to/venv.; Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make; sure you have python3-full installed.; ; If you wish to install a non-Debian packaged Python application,; it may be easiest to use pipx install xyz, which will manage a; virtual environment for you. Make sure you have pipx installed.; ; See /usr/share/doc/python3.12/README.venv for more information. note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.; hint: See PEP 668 for the detailed specification.; ``` . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5061:139,error,error-externally-managed-environment-every-time-i-use-pip-,139,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5061,5,"['error', 'failure']","['error', 'error-externally-managed-environment-every-time-i-use-pip-', 'errors', 'failures']"
Availability,"This is a first pass. Everything is not fixed, but it is a good start. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5064:615,failure,failures,615,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5064,2,['failure'],['failures']
Availability,"This is a fix for a very specific situation. Here is what happens:. 1. A `msg_warning` is called in a component from a thread different from the main thread. It could be also `msg_error` or `msg_info`, as long as the message count of the element changes. It could be a change of name as well.; 2. The `ObjectStateListener` associated to the component updates the associated `QTreeWidgetItem` (this class is not a `QObject`).; 3. The icon is updated, so it warns the `QTreeWidget` (this class is a QObject) through a signal.; 4. Since the call happens in a thread different from the main thread, the queued connection is used. For that, all signals/slots parameters must be known to Qt's meta-object system. This PR registers the class `QVector<int>`, so it can be used in the queued connection. It partially fixes https://github.com/sofa-framework/sofa/issues/3610. The warning is no longer triggered by Qt. Therefore, the mutex is locked only once in one thread. I say it solves partially, because any other Qt error would trigger the same crash. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3749:1012,error,error,1012,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3749,3,"['error', 'failure']","['error', 'failures']"
Availability,This is a fix to update a bound box for a hyperelastic force field. Without updating the rotation and translation of a virtual camera works incorrectly. This method is a copy of a bound box computation from TetrahedronFEMForceField. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1401:489,failure,failures,489,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1401,2,['failure'],['failures']
Availability,"This is a follow up #3990 but now we focus on the complex use cases of canCreate. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3992:628,failure,failures,628,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3992,2,['failure'],['failures']
Availability,"This is a follow-up to #326, now with green tests. TL;DR: There should be no unprotected python code in sofa except in extension code. . Any code like this:. ```c++; void my_function(...) {; // ...; PySomething_Something(...);; }; ```. Should be GIL-protected as follows:; ```c++; void my_function(...) {; // ...; // the lock runs until the end of scope; sofa::simulation::PythonEnvironment::gil lock;; PySomething_Something(...);; }; ```. Or even better yet: don't use naked python calls and use the `PythonEnvironment` API instead. You may also temporarily release the GIL while doing a costly/blocking c++ operation as follows:. ```c++; void my_function_that_already_owns_the_gil(...) {; // ...; // unlocks the GIL until the end of scope; sofa::simulation::PythonEnvironment::no_gil unlock;; // ...; }; ``` . I tried looking for all python calls in the codebase, but I may have missed some. . # Changelog. - added `PythonEnvironment::gil` RAII for scoped acquisition of the GIL; - added `PythonEnvironment::no_gil` RAII for scoped release of the GIL; - GIL-protected most (all?) python calls with the above (except in extension code); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/347:1394,failure,failures,1394,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/347,2,['failure'],['failures']
Availability,"This is a long standing issue in Sofa about not being able to save 'usable' scene in runSofa. . This is the result of multiple problems combined together among which:; - there is keywords that are not Data field but parsing hook (eg: src, compatbility hook) and they needs to be converted into Data.; - the Data have a persistant field. But it is let to the component to specify which are or not depending on some object property but depend on their context of ""use"".; Eg:; *) a data changed in the GUI should be saved; *) a data filled with a script shouldn't; etc... To allow to control fine grain the state of a data is now set to non persitant; by default and should only be activated specifically (by the GUI, or the script); if it is needed to save it. This is what this PR do, and despiste this is a behavior change...it is on a totally broken feature. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1191:1116,failure,failures,1116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1191,2,['failure'],['failures']
Availability,This is a proposal PR following discussion on gitter to use a macro to define the extern template in the header and remove the non extern version from the cpp. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/777:416,failure,failures,416,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/777,2,['failure'],['failures']
Availability,"This is a proposal for a clean and consistent SofaKernel. ; The idea is to make SofaFramework modules consistent with the rest of SOFA by moving them into `SofaKernel/modules` and reorganizing their tests. Main changes:; - `SofaKernel/framework/sofa/*` goes to `SofaKernel/modules` with consistent naming; - `SofaKernel/framework_test/*` becomes XXX_test (where XXX is a SofaFramework module); - `SofaKernel/modules/sofa/*` becomes XXX_simutest (where XXX is a SofaFramework module); - `<sofa_root>/modules/tests` goes to `<sofa_root>/tests` for better readability. This PR is heavy but non-breaking. Package, module and library names stay the same. Include directories stay the same. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1200:941,failure,failures,941,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1200,2,['failure'],['failures']
Availability,This is a quick redo of #1437 ; I did not see that SOFASPARSESOLVER_HAVE_METIS and SOFASPARSESOLVER_HAVE_CSPARSE are actually used in SofaSparseSolver sources :fearful: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1440:427,failure,failures,427,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1440,2,['failure'],['failures']
Availability,This is a redo and fix #919 based on current master. To be tested by @Younesssss :wink: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1396:346,failure,failures,346,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1396,2,['failure'],['failures']
Availability,This is a remake of #1007 . Upgrading Eigen from 3.2.7 to ~~3.3.7~~ 3.2.10; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1101:332,failure,failures,332,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1101,2,['failure'],['failures']
Availability,"This is a small correction to fix the compilation of the Sensable plugin. Also, any idea why we keep the OmniDriver when there is a NewOmniDriver available?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/22:146,avail,available,146,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/22,1,['avail'],['available']
Availability,This is a subset of PR #1492 which aims at merging changes from old branch collodi.; This one only concerns some change done in Compliant plugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1557:402,failure,failures,402,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1557,2,['failure'],['failures']
Availability,This is a subset of PR #1492 which aims at merging changes from old branch collodi.; This one only concerns some change done in SofaBoundaryCondition. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1558:407,failure,failures,407,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1558,2,['failure'],['failures']
Availability,This is a subset of PR #1492 which aims at merging changes from old branch collodi.; This one only concerns some change done in collision components. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1559:406,failure,failures,406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1559,2,['failure'],['failures']
Availability,"This is a task for the conda-forge packaging. . This pr removes the folder containing the libQGLViewer source files and instead fetch our forked version (required to add a CMakeList to the project) when the dependency is not found. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4840:778,failure,failures,778,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4840,2,['failure'],['failures']
Availability,"This is a task for the conda-forge packaging. Add QGLViewer2 name as Conda installs this name instead of QGLViewer on Windows. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4841:671,failure,failures,671,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4841,2,['failure'],['failures']
Availability,"This is a task for the conda-forge packaging. This PR adds an option to completely deactivate WinDepPack mechanism. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4842:660,failure,failures,660,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4842,2,['failure'],['failures']
Availability,"This is a tentative to refactor `TetrahedronFEMForceField` for better readability. All the FEM methods have been dispatched into dedicated files. The methods are now classes sharing the same interface (polymorphism), called by the component. Advantages:; - `TetrahedronFEMForceField` is smaller; - `TetrahedronFEMForceField` had many similar codes (often identical). This is now avoided as all common code are in the base classes.; - It is easier to read the differences between the different FEM methods.; - We could imagine having a factory of FEM methods for `TetrahedronFEMForceField`. Then, the component could be extended in plugins by adding more methods into the factory. To do:. - [ ] Clean; - [ ] Move some class members from `TetrahedronFEMForceField` to `TetrahedronFEMForceFieldImpl`; - [ ] Restore initial performances; - [ ] Fix broken features such as drawing rotations; - [ ] If everyone agrees, remove the assembled methods. It adds complexity while the resulted matrix is not used.; - [ ] Adapt (if necessary) the derived classes (multithreading, CUDA etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2550:1621,failure,failures,1621,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2550,2,['failure'],['failures']
Availability,"This is a test to use Callbacks instead of inheriting from ```TopologyHandler```. - Callback have been added inside ```TopologyDat``` a to define specific method when creating/destroying element (call by remove/add). See ```TriangularFEMForceField``` for an example; - Map of Callback has been added inside TopologyHandler to set specific callback depending on the topology event. See ```TriangularBendingSprings``` as an example which handle Edge but also Triangle removing/adding. To discuss if this is better than inheriting from ```TopologyHandler```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2036:1100,failure,failures,1100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2036,2,['failure'],['failures']
Availability,"This is a variation of the proposal done by @fjourdes in #455 where I allow me a bit more refactoring. . Here is what the PR does:; - implement basic test class in sofa/helper/testing/ BaseTest & NumericTest so that all framework tests can use them. ; - in SofaSimulationGraph/testing add a BaseSimulationTest class that implement facilities for tests that needs scene manipulation & loading. ; - udpates SofaTest to use the previously defined classes but still behaving as they used to in the past. ; - updates the framework_test to use BaseTest or NumericTest in place of Sofa_test or ::testing; - moves the tests in framework to framework_extra when they are manipulating a simulation (thus requires BaseSimulationTest instead of BaseTest); - updates the tests in simulation_test so that they don't use SofaTest anymore. ; - moves SimpleApi from SceneCreator to SofaSimulationGraph & fix a bug.; - creates a plugin in a the application/package directory so that in our tests we can load all the common sofa component with a single RequirePlugin(""SofaAllCommonComponents""). The consequences are:; - SofaTest is no more needed in framework & simulation ; - we can now progressively make the other tests to rely on BaseTest, BaseSimulation and SimpleAPI that are dependency free instead of SofaTest/SceneCreator. . Feel free to provide feedback/comment. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471:1612,failure,failures,1612,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471,2,['failure'],['failures']
Availability,"This is a way to explicit the narrowing conversions in SOFA. Instead of using the classic `static_cast`, this function can check if the value changed after the cast. It can happen in case of narrowing conversion, when the target type is smaller than the source type.; Since the check must be performed at run-time (affects the performances), it is enabled only in DEBUG mode. The idea is to use this cast everywhere the compiler warns about possible data loss and it's not possible to avoid a narrow conversion (e.g. by adapting both target and source types). An example is provided in this PR in `MeshGmsh`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2590:1153,failure,failures,1153,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2590,2,['failure'],['failures']
Availability,"This is allowed since C++17: https://en.cppreference.com/w/cpp/language/class_template_argument_deduction. And it is, in my opinion, easier to read. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4351:693,failure,failures,693,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4351,2,['failure'],['failures']
Availability,"This is an attempt at fixing #1528. At the moment, file parsing in MeshGmsh.cpp and MeshGmshLoader.cpp is (hopefully) correctly handled, including more recent MSH file formats (=>4.0).; EDIT: I don't fully understand how the loader works, mainly why MeshGmshLoader::readGmsh() is temporarily not used (commented in l.111), with the parsing apparently relying only on MeshGmsh::readGmsh(). However I tried to keep the same structure as before, simply taking into account the case where the .msh version is > 2.; A .msh file with version 4.1 is added (share/mesh/msh4_cube.msh), and its parsing by the MeshGmshLoader is tested both in examples/Components/loader/MeshGmshLoader.scn and in a new unit test. Both tests are working locally. Regarding the original purpose of #1528, the PR should be sufficient. Fixes #2433 #1528; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2155:1368,failure,failures,1368,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2155,2,['failure'],['failures']
Availability,"This is an attempt to fix the error in issue https://github.com/sofa-framework/sofa/discussions/3773 by explicitly instantiate ForceField class for cuda types. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3806:30,error,error,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3806,3,"['error', 'failure']","['error', 'failures']"
Availability,"This is an attempt to fix the failing unit tests about the links.; Only 2 changes of behavior:. 1. The function `read` returns `false` and don't do anything in case the link has no owner.; 2. Paths not starting with '@' are not added to the list of links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2166:800,failure,failures,800,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2166,2,['failure'],['failures']
Availability,This is an attempt to refactor from PR #332 to make it non breaking. . No need for review now this is in WIP. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/596:368,failure,failures,368,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/596,2,['failure'],['failures']
Availability,"This is an example where a direct solver is not supported. https://user-images.githubusercontent.com/10572752/132351450-f862fa65-1821-4d2b-9c07-57bfedd5163e.mp4. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2325:706,failure,failures,706,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2325,2,['failure'],['failures']
Availability,"This is an old work that has already been merged into ng branch (see #620) but since the NG task is paused for now I think it would be appreciable to have this in master. The idea is to remove SofaComponent* from modules (because they are not modules) and put them next to SofaAllCommonComponents. Concretely, this PR does:; - Move SofaComponent* next to SofaAllCommonComponents; - Rename SofaAllCommonComponents into SofaComponentAll; - Rename ""packages"" into ""collections"" to avoid confusion with CMake packages like SofaGeneral, SofaFramework, ...; - Somes fixes in SofaPreconditioner and SofaSparseSolver completing #1137 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1155:884,failure,failures,884,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1155,2,['failure'],['failures']
Availability,"This is in the hope to fix the failing scene on Ubuntu gcc.; If it does fix the issue:; - [ ] Explain why the issue happened; - [ ] Study the effect on the performances. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3424:714,failure,failures,714,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3424,2,['failure'],['failures']
Availability,"This is just a small test to see if an automated replacement is working ""good"" enough. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/836:345,failure,failures,345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/836,2,['failure'],['failures']
Availability,"This is just to better display the CudaVector inside the qt gui. Before:; ![SOFA v21 12 99 - C__projects_sofa-src_applications_plugins_SofaCUDA_scenes_cpu-gpu_validation_CudaStiffSpringForceField scn 12_22_2021 4_34_15 PM](https://user-images.githubusercontent.com/21199245/147117105-858be56c-1440-4bac-bca8-020efcaa81df.png). After:; ![SOFA v21 12 99 - C__projects_sofa-src_applications_plugins_SofaCUDA_scenes_cpu-gpu_validation_CudaStiffSpringForceField scn 12_22_2021 4_33_29 PM](https://user-images.githubusercontent.com/21199245/147116953-03eda549-2825-42b0-ac81-5855e658b51b.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2558:1132,failure,failures,1132,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2558,2,['failure'],['failures']
Availability,"This is mainly to differentiate two identical error messages, but with different causes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3985:46,error,error,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3985,3,"['error', 'failure']","['error', 'failures']"
Availability,This is related to the issue at: https://github.com/sofa-framework/sofa/issues/816; Fixes #816 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/901:353,failure,failures,353,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/901,2,['failure'],['failures']
Availability,This is reopening one PR that was issued from SofaDefrost/master instead of a dedicated branch. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/691:354,failure,failures,354,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/691,2,['failure'],['failures']
Availability,"This is required by the plugin manager when writing and reading in an ini file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2948:624,failure,failures,624,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2948,2,['failure'],['failures']
Availability,"This is required to properly define SOFA_TARGET. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4726:593,failure,failures,593,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4726,2,['failure'],['failures']
Availability,"This is small feature addition. Currently, LinearMovementConstraint only takes trajectories relative to the rest position of the MechanicalState. Sometimes though, the trajectory is specified in world frame coordinates, and especially with Rigid3D (i.e. orientations), conversion is not trivial for the user . This patch introduces a switch ""relativeMovements"" (default true).; When disabled, trajectories can be specified in world frame coordinates. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/394:707,failure,failures,707,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/394,2,['failure'],['failures']
Availability,"This is still WIP be I would be happy to have some feedback. As discuss in #744 . The idea at the end is to remove all GetMeshTopology. ; 1. Add SingleLink in all component accessing GetMeshTopology from context; 2. Update all scenes but keep backward compability:; ```; if (linkTopology.empty()){; msg_warning() <<""set the link"";; linkTopology.set((this->getContext()->getMeshTopology());; }; ```; 3. Flag all getXXXMeshTopology to Depreciate 20.06 ?; 4. after 20.06 Remove all getMeshTopology(). Component upgraded: ; - DiagonalMass; - [SofaGeneralSimpleFEM]; - BeamFEMForceField; - TetrahedralCorotationalFEMForceField; - TriangularFEMForceFieldOptim; - [SofaSimpleFEM]; - HexahedronFEMForceField; - TetrahedronFEMForceField; - TetrahedronDiffusionFEMForceField; - NonUniformHexahedronFEMForceField; - [SofaGeneralDeformable] ; - QuadBendingSpring; - QuadularBendingSprings; - VectorSpringFF; - FastTriangularBendingSpring; - TriangleBendingSpring; - TriangularBendingSpring; - TriangularBiquadraticSpringFF; - TriangularQuadraticSpringFF; - TriangularTensorMassFF. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1183:1325,failure,failures,1325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1183,2,['failure'],['failures']
Availability,This is the Defrost cleaning week29 with...as usual a lot of std:cout and dead code removal. ; Shouldn't break anything. ; In case some component are too verbose please tell us. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/370:436,failure,failures,436,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/370,2,['failure'],['failures']
Availability,"This is the Defrost week contribution in cleaning & testing. CHANGE for Hugo:; - [FileMonitor] fix the recurrent problem with file 'SofaKernel/framework/framework_test/resources/existing.txt' pointed in Issue https://github.com/sofa-framework/sofa/issues/146; - [ConstantForceField] clean to follow sofa guideline & fix the ""visible dependencies"", ; - [ConstantForceField] replace the ""points"" attribute by ""indices"" (with backward compatibility & deprecation message); - [ConstantForceField] add test in ConstantForceField_test, some of them are OpenIssue demonstrating existing problem (as crashing sofa when using negative (or too large) values in indices). ; - [Light] clean and strenghening the interface; - [Light] add tests ; - [DefaultAnimationLoop] add tests; - [LocalMinDistance] add tests; - [RequiredPlugin] add tests; - [ClipPlane] add tests; - [DistanceGrid] add tests. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old (or has fast-merge label).; - [ ] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/258:1114,failure,failures,1114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/258,1,['failure'],['failures']
Availability,"This is the callback system we use in our dev branch for runSofa2.; It lets you add a callback function so that outputs can be updated upon changes on their input data.; The callback function returns a component state (Valid / invalid / ...) which guarantees that the component's state is properly maintained. I kept this PR simple (only tests to show the working principle), but will make another one later on with a few components that we've updated to use this callback mechanism (AddResourceRepository, MeshLoaders (OBJ / VTK / STL ...) . This mechanism is also used in the ""nodephysics"" Links POC (https://github.com/SofaDefrost/ComponentData_POC/pull/2). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1406:917,failure,failures,917,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1406,2,['failure'],['failures']
Availability,"This is the continuity of PR #1840 ; The idea is to move all the internal methods into protected so user (developer) do not need to know why there is RemovePointsWarning + propagateTopologyChanges + RemovePointsProcess to be called. Now the public api will only be AddPoints / RemovePoints / movePoints / renumberPoints which handle internally all the process in the good order. As xxxGeometryAlgorithms are more complex cases (where developers know what they do?), those classes are now friends of the xxxSetTopologyModifier. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1858:1071,failure,failures,1071,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1858,2,['failure'],['failures']
Availability,"This is the continuity of PR #1858 where only points were tested.; Do the same for: Edges, Triangles, Quads, Tetrahedron and Hexahedron setTopologyModifier and update all mappings. This PR include #1858 and should not be considered until the previous is merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1859:806,failure,failures,806,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1859,2,['failure'],['failures']
Availability,"This is the follow up of discussion: https://github.com/sofa-framework/sofa/issues/1675. The UI part is not very important but the change introduced in BaseData.h and BaseObject deserve ; a bit of attention. I will pass it to ready when I will need for a review but If you have some time @hugtalbot I would like to have ; your opinion on the change in BaseData. **EDIT**: . This PR allows to define optional datafields. Here's how it looks. ; If a datafield is set to have no default value (using the new `setWithDefaultValue()`), the gui will display `<no default value>`. . <img src=""https://user-images.githubusercontent.com/12150715/128062448-1720eb27-aa9a-4f29-a22e-ad961945f605.png"" width=""500""/>. Additionally, if a datafield is required and has no default value, an error will show up on the terminal and the gui will display `<missing value>`. . ![Screenshot from 2021-08-03 11-31-22](https://user-images.githubusercontent.com/12150715/128062431-05b679ed-10a2-45e6-9c9a-14aa41a1f1f4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1738:774,error,error,774,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1738,3,"['error', 'failure']","['error', 'failures']"
Availability,"This is the same scene than TetrahedronHyperelasticityFEMForceField.scn but TetrahedronHyperelasticityFEMForceField has been replaced by StandardTetrahedralFEMForceField. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2857:715,failure,failures,715,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2857,2,['failure'],['failures']
Availability,"This is the second step of removal of Base* inclusion in Node.h ; This is made possible by all the PR that layed out the fwd stuff and Link refactoring. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1765:699,failure,failures,699,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1765,2,['failure'],['failures']
Availability,"This is the the third step of my LockOut refactoring effort for Sofa. In PR#1283 we have refactored the reflection system. We can now clean the DDGNode to cut the un-needed dependencies. ; DDGNode needed to be part of reflection system because it was storing its inputs and ouputs with Links. It is unclear what the link data structure was needed for and storing the input and output with a more classical data structure (a stable_vector) remove the needs to have DDNode be part of the reflection system...so remove a lot of un-needed code. . Exemple of needed but in face un-needed code that are now removed:; ```cpp; /// This method is needed by DDGNode; const std::string& getName() const override; {; static const std::string emptyName ="""";; return emptyName;; }; /// This method is needed by DDGNode; objectmodel::Base* getOwner() const override { return nullptr; }; /// This method is needed by DDGNode; objectmodel::BaseData* getData() const override { return nullptr; }; ```; ; Some code was added in BaseData. This is because these code was in-herited from DDGNode and are now not provided anymore. The code cannot be removed because BaseData is still used in Links and thus, still required to implement the reflection system...removing that is for an incoming PR. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1372:1532,failure,failures,1532,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1372,2,['failure'],['failures']
Availability,"This is to avoid non-ascii characters. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4901:583,failure,failures,583,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4901,2,['failure'],['failures']
Availability,"This is to ease debugging by identifying threads managed by the task scheduler (Windows only).; Source: https://learn.microsoft.com/en-us/visualstudio/debugger/how-to-set-a-thread-name-in-native-code?view=vs-2022. ![image](https://user-images.githubusercontent.com/10572752/208109683-d20496a6-0d0c-4b4e-ad97-b139150d4c76.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3551:871,failure,failures,871,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3551,2,['failure'],['failures']
Availability,"This is to fix SOFA configuration without Qt; Not 100% sure of the change inside the cmake.in. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3423:639,failure,failures,639,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3423,2,['failure'],['failures']
Availability,"This is to support `root->getObjects( objects, ...)`, when `objects` is a `std::set` or a `std::unordered_set`. Otherwise, only containers with a `push_back` method could be supported.; I also moved the class definition out of the `BaseContext` class to ease the reading. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3495:816,failure,failures,816,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3495,2,['failure'],['failures']
Availability,"This is to take into account the geometric stiffness in non-linear mappings. It has to take into account the sum of all forces applied on a MechanicalObject. Therefore, a list of VecIds is maintained and accessed later. It fixes some of the existing scenes that were broken due to #2777. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3918:832,failure,failures,832,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3918,2,['failure'],['failures']
Availability,This is very useful to implement any kind of 3D interaction in the python controllers. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/731:345,failure,failures,345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/731,2,['failure'],['failures']
Availability,"This issue comes up from a SOFA-meeting discussion.; The question is how to homogenize and improve the check of data initialization (e.g. out of bounds values etc) in SOFA while avoiding increasing the computation time at the init phase. Consequence a more robust SOFA and possibility of avoiding long init phases. An option has been proposed and consists in creating a new specific virtual function ""check"" in which these checks would be done. To avoid over-computation, this function could be skipped to avoid huge computation time for SOFA-based applications. Could be [BREAKING] the API. Interested ? Any remark ? @damienmarchal @bcarrez @matthieu-nesme @francoisfaure @JeremieA",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/265:257,robust,robust,257,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/265,1,['robust'],['robust']
Availability,"This issue is connected to the discussion: ; https://github.com/sofa-framework/sofa/commit/aee0d912432d043a792f3b43160417e724b11704. This discussion was continued between I, Mathieu and Guillaume, during our weekly meeting. . Our conclusion were that: ; - in sofa::core the defaultmessagehandler should be the simplest so that people making third party applications out of Sofa are not disturbed by the new formatter. . - runSofa & Test may use the RichStyleFormater . - it would be nice to add more capability of routing the messages (explaination and details in the following). **New features:** ; Currently the _msg_* API has two class of message (Dev and Runtime). Message of class Runtime are supposed to be for ""the users"". Message of class Dev are supposed to be for developers. ; You can send message of class Runtime with _msg_info()_...and message of class Dev with _dmsg info()_. The use of macro was to allows us to totally remove the _dmsg*_ from the sofa official releases (they are totally removed from the binary and thus have a zero cost). ; ; In addition to the classes of message is the 'type' which is among: Advice, Info, Warning, Error, Deprecated, Fatal. To select the type you can use the macro _msg info_, _msg advice, _msg error_, ... or their dmsg_ equivalent. . It was suggested:; - to add one extra class of message for ""Log""; - to add a new MessageHandler that can route precisely the messages depending on the developper's need. ; (eg:; - route all the message to a FileMessageHandler but not the one of type advice); - route all the messages of class Log to a FileMessageHandler as well as the class Runtime&Error). DM",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/56:1152,Error,Error,1152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/56,2,['Error'],['Error']
Availability,"This issue was first discovered by @rosaliepl : https://www.sofa-framework.org/community/forum/topic/error-with-cimg-plugin-with-dependancy-to-skeleton-h-does-not-compile/#post-8397. The image plugin supports the python plugin, but does not require it. However, when linking the image plugin into an external project by using the install path of sofa, the image plugin lists the python plugin as a required dependency. CMake will then return the following error:. ```; CMake Error at CMakeLists.txt:50 (find_package):; Found package configuration file:. /.../sofa/build/install/lib/cmake/image/imageConfig.cmake. but it set image_FOUND to FALSE so package ""image"" is considered to be NOT; FOUND. Reason given by package:. The following imported targets are referenced, but are missing: SofaPython. -- Configuring incomplete, errors occurred!; ```. To reproduce the bug; 1. Compile SOFA with the image plugin activated, but without python plugin; 2. Lauch cmake on an external project and add the image plugin as a dependency; `find_package(image REQUIRED)`",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/135:101,error,error-with-cimg-plugin-with-dependancy-to-skeleton-h-does-not-compile,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/135,4,"['Error', 'error']","['Error', 'error', 'error-with-cimg-plugin-with-dependancy-to-skeleton-h-does-not-compile', 'errors']"
Availability,"This issue was first discovered by @rosaliepl : https://www.sofa-framework.org/community/forum/topic/error-with-cimg-plugin-with-dependancy-to-skeleton-h-does-not-compile/#post-8397. When installing SOFA's image plugin (ex.: make install), the image plugin installation does not preserve the file's hierarchy which will failed the compilation of any external project that includes the SOFACImg.h file. `/.../sofa/build/install/include/CImg/CImg.h:9341:21: fatal error: plugins/skeleton.h: No such file or directory`. If we look in the installation folder (sofa/build/install), all the required headers are in include/CImg instead of include/CImg/plugins which will then failed the compilation. To reproduce the bug. 1. Compile and install SOFA with the image plugin activated; 2. Create an external project with the image plugin as a requirement, and add the following line in any of the source file: `#include <CImg/SOFACImg.h>`",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/136:101,error,error-with-cimg-plugin-with-dependancy-to-skeleton-h-does-not-compile,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/136,2,['error'],"['error', 'error-with-cimg-plugin-with-dependancy-to-skeleton-h-does-not-compile']"
Availability,"This last parameter can be deduced from the container traits so there is no need to specify it. ; This allow to simplifying some calling point as in MechanicalVisitor & UpdateMappingVisitor.h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1689:737,failure,failures,737,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1689,2,['failure'],['failures']
Availability,This line has been removed accidentally in PR #1428 . need to be backported?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1438:334,failure,failures,334,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1438,2,['failure'],['failures']
Availability,"This line is the origin of our problem: https://github.com/sofa-framework/sofa/blob/9c85b17b55f4cd1a14927090754004aaba51b802/SofaKernel/framework/sofa/helper/system/PluginManager.cpp#L103; This line was creating entries in m_pluginMap because pluginPath is not always a path.; It is not a path when we are reading ""plugin_list.conf.default"" file to auto-load plugins at startup. This PR adds getPlugin method to avoid future operator[] mishandlings. It gets a loaded plugin by paths OR names (even if the map is based on paths). Conclusion: **`operator[]` on maps should be globally avoided for read access**. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/580:866,failure,failures,866,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/580,2,['failure'],['failures']
Availability,This member was an error prone copy of `PluginRepository::vpath`.; PluginManager is now always in sync with PluginRepository. AddPluginRepository component has no effect without this change. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/947:19,error,error,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/947,3,"['error', 'failure']","['error', 'failures']"
Availability,"This method is not needed anymore in the TopologyHandler mechanism. . Remove this call from all components. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2013:652,failure,failures,652,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2013,2,['failure'],['failures']
Availability,"This methods override the default behavior of python. Now when writing: dir(myObject) this will returns the list of methods available in myObject but also the list with the Datas and the Links. Example with:; ```py; print(dir(myMechanicalObject)); ```; Will prints:; ```; ['__class__', '__delattr__', '__dir__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'addData', 'addNewData', 'applyRotation', 'applyScale', 'applyTranslation', 'bbox', 'bwdInit', 'cleanup', 'computeBBox', 'constraint', 'context', 'derivX', 'downCast', 'drawMode', 'externalForce', 'findData', 'findLink', 'force', 'free_position', 'free_velocity', 'getAsACreateObjectParameter', 'getCategories', 'getClassName', 'getContext', 'getData', 'getDataFields', 'getLink', 'getLinkPath', 'getListOfDataFields', 'getListOfLinks', 'getMaster', 'getName', 'getPathName', 'getSize', 'getSlaves', 'getTarget', 'getTemplateName', 'init', 'isToPrint', 'listening', 'mappingJacobian', 'master', 'name', 'position', 'printLog', 'reinit', 'reserve', 'reset', 'reset_position', 'reset_velocity', 'resize', 'restScale', 'rest_position', 'rotation', 'rotation2', 'scale3d', 'setSrc', 'showColor', 'showIndices', 'showIndicesScale', 'showObject', 'showObjectScale', 'showVectors', 'showVectorsScale', 'size', 'slaves', 'storeResetState', 'tags', 'topology', 'translation', 'translation2', 'useTopology', 'velocity']; ```. NB: There is minimal test to be sure this work.; NB2: I'm not found of this big list but didn't want to change the semantics to visually separate the links, the data and the methods. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/762:124,avail,available,124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/762,2,"['avail', 'down']","['available', 'downCast']"
Availability,"This non-breaking PR:; - allows to set the index for input2 instead of using the last one; - allows to set the container. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2803:666,failure,failures,666,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2803,2,['failure'],['failures']
Availability,"This operator is not defined for RGBAColor. However, the compilator; somehow found a suitable operator in Vec.h, probably through implicit; conversion (?). This commit does not fix the compilation, but makes; things clearer. It also help the IDE to find the path to the operator; (it could not before). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1952:847,failure,failures,847,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1952,2,['failure'],['failures']
Availability,"This option was missing in the visitor to init writeState components with a period.; Teaser: it will be useful in the new version of Regression. Also rename some parameters to be more explicit. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4744:740,failure,failures,740,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4744,2,['failure'],['failures']
Availability,"This package is needed by plugins when building tests out-of-tree. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2511:611,failure,failures,611,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2511,2,['failure'],['failures']
Availability,"This part of Sofa.GUI (main codebase):; - is an option in Sofa.GUI (strongly non-recommended in Sofa nowadays); - need X11 libs (so being deprecated with the arrival of Wayland); - almost 99.9% restricted to Linux due to X11; - has replacement (https://github.com/jnbrunet/SofaOffscreenCamera among others); - is not compiling 😂. So IMO it was time to make it a plugin (as in, being in `applications/plugins`); Due to all recent implemented mechanisms, it was quite straight-forward and almost as easy as simply cut-pasting into the new folder. IMO 2, I would even directly put it into an external fetchable plugin. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4928:1160,failure,failures,1160,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4928,2,['failure'],['failures']
Availability,"This part of the code is dependent from Sofa.GUI and when `Sofa.GUI.Qt` was no found, `Sofa.GUI` was never linked, causing compilation error. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4227:135,error,error,135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4227,3,"['error', 'failure']","['error', 'failures']"
Availability,"This plugin allows us to load images using CImg API. For now this plugin is located in applications/plugins of Sofa, and does not supersede ImageQt/ImagePNG/ImageBMP. Tests and a simple scene to test all the supported formats are provided. An other pull-request will be done to remove ImageQt/ImagePNG/ImageBMP and their posssible dependencies in SofaKernel (e.g libpng), following further discussions. Linked to issue #51 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/185:655,failure,failures,655,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/185,1,['failure'],['failures']
Availability,"This pr aims at fixing the crash on exit for some python scene. It was due to the cache of the Sofa python module not being cleaned up correctly (deleted after the interpreter). This is corrected here by insuring that the interpreter is correcty released through cleanup callback (see the SofaPython3 pr for more insights) . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4828:869,failure,failures,869,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4828,2,['failure'],['failures']
Availability,"This pr clean most of warnings; The code has never been changed in terms of runtime, but sometimes one may thing that warning were here to detect potential error (passthrough in a case for instance).; The main remaining warning is the alreadydefine class but i will do that in a separate pr since I'm scared it changes behavior on other platforms. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1549:156,error,error,156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1549,3,"['error', 'failure']","['error', 'failures']"
Availability,"This pr only goal is to test the Regression [PR #68](https://github.com/sofa-framework/Regression/pull/68). [ci-depends-on https://github.com/sofa-framework/Regression/pull/68]. PR hijacking!; [ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/138]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4942:814,failure,failures,814,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4942,2,['failure'],['failures']
Availability,"This prevents creation of nodes / components with empty `names`, when instantiated in a ""non-conventional"" way:. ```py; py:; node.createChild(''); node.createObject('MyComponent', name=''); ```. ```xml; xml:; <Node name=""""></Node>; ```. By default, if `name` is not provided, unnamed is set in `name`. but if `name` is forcefully set to `""""`, there's currently no safeguards. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1009:632,failure,failures,632,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1009,2,['failure'],['failures']
Availability,"This pull request aims at add a new extension file (.tmg) supported by DistanceGrid. This extension file is used to represent a shape : it's a list of values corresponding to the function evaluated at each point. All the data are placed one after the other in a single column. ; It's a minor add which does not disturb anything in SOFA, so it shouldn't raise any problems. (edit - 08/08/17) The file is now able to provide the size of the grid : these 3 values (nx, ny, nz) are placed at the top of the .tmg file and are used at the DistanceGrid instaciation.; Example : . **Shape.tmg**; *Header with the grid size*; >150; 150; 150. *Values of the grid*; > 0.015; 1; 1; ... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/353:930,failure,failures,930,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/353,2,['failure'],['failures']
Availability,"This pull request aims at making the gravity clearly appearing in object nodes as a GravityForceField.; Old way to define gravity still works and is not deprecated. Main changes:; - By implementing this, the Mass is not inheriting from ForceField anymore.; - The optional mechanism of a separate gravity and the **Gravity** class are also deprecated.; - Default gravity is now 0 (therefore some scenes might fail and need an update). The GravityForceField can:; - either be manually added by the user in the node; - or the gravity can still be globally defined in the root node which will create the automatic creation of a GravityForceField for each mass in the graph. Fix: #2683. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/305]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/56]; [ci-depends-on https://github.com/sofa-framework/ci/pull/18]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2988:1431,failure,failures,1431,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2988,2,['failure'],['failures']
Availability,"This pull request allows the usage of the advanced timer ; 1. In the standard way; `runSofa -c 1`; 2. Only for the init functions:; `runSofa -c 0`; 3. For the init function and for every second step:; `runSofa -c -2`. Moreover, the usage of the advanced timer in batch mode works again:; `runSofa -c -2 -g batch -n 10`. Fixes #357 ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/468:589,failure,failures,589,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/468,2,['failure'],['failures']
Availability,This pull request contains few cleaning cout/print/comments. @ChristianDuriez also added the dot poduct for SofaPython Quaternion; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/404:387,failure,failures,387,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/404,2,['failure'],['failures']
Availability,"This pull request does not change anything to the compilation, it only affects the install phase. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/383:354,failure,failures,354,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/383,2,['failure'],['failures']
Availability,"This pull request enhances the Operation::createPerformer function to provide more detailed error messages when it fails to create an InteractionPerformer. The function now includes precise diagnostic messages that indicates where the failure occurred, improving the ease of debugging and maintaining the code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4880:92,error,error,92,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4880,4,"['error', 'failure']","['error', 'failure', 'failures']"
Availability,This pull request fix the problem proposed in issue #1390 . **1. BoxROI.inl**; Move the code piece; ```; if(!d_doUpdate.getValue()){; return ;; }; ```; in front of indices clear operations. **2. RestShapeSpringsForceField.inl**; Add warning message in function recomputeIndices(). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1391:537,failure,failures,537,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1391,2,['failure'],['failures']
Availability,"This pull request fixes issue #3510. In a nutshell: PR #3299 introduced a change of behavior in how the keyboard inputs are taken into account by the GUI during a simulation. This modification is actually a good idea (see #3384), but it was pushed in #3299 by mistake and should be introduced distinctively (as it seems to be breaking for the majority of scenes). This PR simply reverts the two lines in #3299 responsible for the change of behavior.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3562:995,failure,failures,995,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3562,2,['failure'],['failures']
Availability,This pull request removes classes implementing High Order simplicial elements from SOFA.; Those classes have been moved to plugin sofaFramework/ plugin.HighOrder; Updates include . - removing topological classes for High order triangulation and tetrahedral meshes; - removing tests associated with topological classes; - removing topological and mechanical mapping between regular and highorder meshes; - update of MeshMassMatrix by removing code to compute mass of high order elements. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/222:717,failure,failures,717,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/222,1,['failure'],['failures']
Availability,This pull-request adds the following features ; - add numerical integration on tetrahedra and triangles; - add a mechanical tag on a PointSetGeometry object in order to find its associated MechanicalObject; - add the orthogonal of a 2d vector; - add support of high order elements in VTK and Gmesh mesh loaders. It also fixes some bugs ; -Quand2Triangle Topologivcal mapping. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/219:606,failure,failures,606,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/219,1,['failure'],['failures']
Availability,This removes some override warnings that were (re)introduced recently. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/520:327,failure,failures,327,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/520,2,['failure'],['failures']
Availability,This removes warnings that appear when running runSofa from a directory where it was installed from source. This should not affect compilation in any way (but not sure how it would affect packaging Sofa). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/687:461,failure,failures,461,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/687,2,['failure'],['failures']
Availability,"This request contains: ; - Add new tests to LocalMinDistance; - Add new tests Light (the three kind of light); - Add AllComponent (this test is failling until all component have an associated example file, on failure it reports the number of missing examples); - Add new test to LightManager . The ChangeLog is updated with the content of this pull-request.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/89:209,failure,failure,209,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/89,1,['failure'],['failure']
Availability,This scene makes no sense since no ShapeMatchingForcefield is existing; in SOFA public. Another scene already shows ShapeMatching example; using the ShapeMatching engine:; ICPRegistration_ShapeMatching_Engine.scn. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/331:470,failure,failures,470,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/331,2,['failure'],['failures']
Availability,"This scene was using a TriangleFEMForceField and exploding. This is not possible as the projectToPointConstraint is constraining several points in a single position, leading to flat triangles. ; Using a MeshSpringForceField instead. ![ProjectToPointConstraint_00000001](https://user-images.githubusercontent.com/21199245/161145056-22a75286-ccf8-4346-b10f-b7059e5738e8.png). ![ProjectToPointConstraint_00000002](https://user-images.githubusercontent.com/21199245/161145064-b0fb09f8-3235-498b-b019-12170b1ad6ef.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2827:1059,failure,failures,1059,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2827,2,['failure'],['failures']
Availability,This shoud fix #1243 and several issues pointed out on the forum. Return was preventing from recomputing topology internally. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1245:382,failure,failures,382,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1245,2,['failure'],['failures']
Availability,This should avoid confusion in constraint resolution when mixing integration factors.; Let's see how this affect the CI. This affects the UncoupledConstraintCorrection : the flag _useOdeSolverIntegrationFactors_ is now true by default. This enforces to respect values returned by the ODESolver. See this [forum topic](https://www.sofa-framework.org/community/forum/topic/bilateralinteractionconstraint-reduces-gravity-by-100x/). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1369:685,failure,failures,685,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1369,2,['failure'],['failures']
Availability,This should avoid issue #768. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/778:286,failure,failures,286,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/778,2,['failure'],['failures']
Availability,This should avoid us to scroll through the entire build output searching for a crashed unit test (often due to a segfault).; It is just re-printing the output that was already printed. Some dump is still needed to debug the crash (see PR #191). This PR fixes issue #149. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/195:501,failure,failures,501,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/195,1,['failure'],['failures']
Availability,"This should fix ""a few"" failing scene tests due to ColladaSceneLoader on Windows. See the Details tab of https://ci.inria.fr/sofa-ci/job/windows7_VS-2015_options_amd64_pr1/526/warnings2Result/category.96784904/. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/504:468,failure,failures,468,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/504,2,['failure'],['failures']
Availability,"This should fix #5065. EDIT: `actions/setup-python` could be used to provision the Python install de Python (install provided by the OS). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5066:682,failure,failures,682,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5066,2,['failure'],['failures']
Availability,"This should fix CI ""minimal"" nightly builds :ok_hand: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1940:600,failure,failures,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1940,2,['failure'],['failures']
Availability,This should fix CMake errors like `file cannot create directory: C:/softwares/sofa-soft-build/$C:/softwares/sofa-soft-install/plugins/SofaMiscCollision/lib` on Windows. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1154:22,error,errors,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1154,3,"['error', 'failure']","['errors', 'failures']"
Availability,This should fix all the scene crashing when performing topological change with some mechanicalMapping in the scene. Like for example identityMapping between the mechanicalObject and the OglModel. This is a temporary fix. Those 2 visitors will be removed as soon as all the component listed in #810 will be updated to use TopologicalData. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/880:594,failure,failures,594,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/880,2,['failure'],['failures']
Availability,This should fix failing scene tests due to issofa_plugin merge ; Failures were due to wrong `plugin_list.conf` path implying no plugin loading. Added some output to understand better were this list is loaded from (especially in case of failure). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/502:65,Failure,Failures,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/502,4,"['Failure', 'failure']","['Failures', 'failure', 'failures']"
Availability,"This should fix most path size issues on Windows. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1769:594,failure,failures,594,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1769,2,['failure'],['failures']
Availability,"This should fix the CUDA issue on CI. Issue was due to SofaCUDA having a version number (instead of NO_VERSION) and thus not being deactivated for scene tests by CI scripts (main.sh). We chose to deactivate SofaCUDA for scene tests because VMs can't run CUDA (or can they?).; In CI, SofaCUDA is only compiled, never executed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1123:582,failure,failures,582,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1123,2,['failure'],['failures']
Availability,This should fix the failing ImagePng test failure. . The problem is the consequence of the use of the ExpectMessage RAII without adding a CountingMessageHandler to the MessageDispatcher. This is quick fix but more fundamentally we need an API improvement to make; that automatical/hidden. But how to do that in an efficient way is yet unclear.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/92:42,failure,failure,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/92,1,['failure'],['failure']
Availability,"This should fix the issues raised by @alxbilger when compiling https://github.com/sofa-framework/SofaGLFW/pull/41. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2940:659,failure,failures,659,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2940,2,['failure'],['failures']
Availability,This shouldn't break anything and is a first step toward the slighgly more ambitious pr #601 . CHANGELOG:; - update gtest from their master (version 1.9: sha1 447d58b4ee8ea96b4757a5bb5f0b3be75af6c2a1); - update the CMakeLists so that they correctly export the needed -D to be used as a shared library; - Fix the problem of missing GTEST_API_ operator<< gtest by implementing the function in TestMessageHandler_test instead of gtest. NB: A better FIX for the GTEST_API_ operator<< could be to make submit PR to gtest but I have no more time left. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/604:804,failure,failures,804,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/604,2,['failure'],['failures']
Availability,"This solves the issue : [runsofa] -a -n conflict for batch #552; In case to run infinite iterations, the command to be run in command line is: ; bin/runSofa -g batch -n -1. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/610:429,failure,failures,429,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/610,2,['failure'],['failures']
Availability,"This tests may be merged before refactoring otherwise it is harder to keep track of API changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1714:641,failure,failures,641,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1714,2,['failure'],['failures']
Availability,"This unit test, based on the issue #3499, crashes and waits for a fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3501:615,failure,failures,615,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3501,2,['failure'],['failures']
Availability,"This utility component takes one mechanical object and one constraint solver as input links and computes the forces induced by the constraints applied on the mechanical object. (it can also display those forces with a debug rendering). This feature seems to be quite recurrent from the discussions.; It suppose it would have been easy to do it with python bindings directly, but I did not find any mechanism to retrieve the constraint matrix (with its peculiar format) from the mechanical object. (and I prefer c++/scn anyway 🤫). https://user-images.githubusercontent.com/11028016/190094711-a9acea8b-154d-43fd-977b-c64e1f37813f.mp4. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3294:1177,failure,failures,1177,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3294,2,['failure'],['failures']
Availability,"This variable can be confused with another with the same name, also with; internal linkage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1956:636,failure,failures,636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1956,2,['failure'],['failures']
Availability,"This version is a following the effort started in #1605 and #1611 to clean TypeInfo. . In #1611 I tried to remove the hard dependency to all typeinfo and ODR violation by using the TypeInfoRegistry to get ; the typeinfo. The missing types were detected at runtime... In this version I found what is actually a much easier solution that removes the ODR violation and removes the need to typeinforegistry. . There is also two positive sides effects I see:; - in #1611 the missing types (one not having a datatype) were detected at runtime while in this one they are detected at link time with a single message like the one:; ""; undefined reference to 'sofa::core::objectmodel::Data<sofa::helper::vector<sofa::core::topology::Topology::Pyramid>::getValueTypeInfo() ; ""; - the mechanism is combined with the systematic use of declaring extern class Data<MyType>. The TypeInfo registration/generation is done where the Data<MyType> is not declared as extern. Comments welcome,; D. ; PS: I was also playing with Data/TData but this is for another PR so you can skip that part. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1632:1615,failure,failures,1615,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1632,2,['failure'],['failures']
Availability,This was only needed so that Data can be used with Link. As this is now a; deprecated feature we can remove this. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1541:370,failure,failures,370,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1541,2,['failure'],['failures']
Availability,"This was preliminary introduced in SofaGLFW/SofaImgui, where a new GUI is loaded at run-time; Contrary to the batch/qt/headlessrecorder GUIs which are forcefully linked at compile-time through SofaGui, which could depend (or not) on Qt, etc according to the CMake config,. SOFANG works already made all the different GUIs as independent libraries but ultimately the SofaGui was still present because of the fact that runSofa was still relying on this mechanism. Now :; - Qt/Batch/HeadLessRecorder are loadable plugins and register themselves in the GUIManager, if loaded .; - Batch is still forcefully loaded by runSofa ; otherwise it could be possible to run SOFA without any GUI (I am not against having this possibility tho); - SofaGui is officially deprecated 🎇. Remarks: ; - after this PR, I would really like to move HeadlessRecorder in applications/plugins (either that in the ""official"" SOFA trunk) as it is only supported on Linux, needs X libs dev and I dont even know if people really uses it.; - showing help will only show the help for the runSofa options not the ones introduced by the eventual plugins....; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3550:1666,failure,failures,1666,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3550,2,['failure'],['failures']
Availability,"This was preventing us from making compatibility layers in our plugins (i.e targeting master vs v20.12). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1771:649,failure,failures,649,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1771,2,['failure'],['failures']
Availability,"This will avoid updating each year the header, thus polluting the history of the code.; Update list of authors of SOFA. Perl code used for additional cleaning:; ```batch; perl -0777 -i -pe ""s/((\*){78}\/\n)((\/)(.*?)(\n)|\n|(\s*?)\*(.*?)(\n))/\1/s""; ```. Following files could also be discussed:; - SofaKernel/modules/SofaBaseCollision/IntrCapsuleOBB.inl; - SofaKernel/modules/SofaHelper/src/sofa/helper/RandomGenerator.cpp; - SofaKernel/modules/SofaHelper/src/sofa/helper/gl/Trackball.cpp // h ; - SofaKernel/modules/SofaHelper/src/sofa/helper/polygon_cube_intersection/fast_polygon_cube_intersection.cpp // h; - applications/projects/meshconv/meshconv.cpp; - SofaKernel/modules/SofaHelper/src/sofa/helper/fixed_array.h. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1375:978,failure,failures,978,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1375,2,['failure'],['failures']
Availability,"This will enable creating SOFA packages on Linux when Qt is installed from the package manager instead of the Qt installer. It also fixes some missing dependencies on Linux distros other than ubuntu 18.04. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1728:750,failure,failures,750,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1728,2,['failure'],['failures']
Availability,This will fix the crashing DistanceGridForceField-liver.scn. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/591:317,failure,failures,317,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/591,2,['failure'],['failures']
Availability,"This will remove the warning: ""Data alone linked"". Note for myself for this loop:; Possible duplication in update mechanism as Data<m_changeList> is set to dirty when a toplogyChange is added and at the same time PointSetTopologyContainer handle the topologyEngine update manually in this loop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1971:839,failure,failures,839,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1971,2,['failure'],['failures']
Availability,"This work aims at having a complete Doxygen documentation of SOFA components, especially concerning their Datas. I used the shell script doxygenDataComments.sh to; 1. Force each Data to be defined on one line; 2. Add an inlined and Doxygen-formatted comment on each Data (if no comment found) copying the description used in `initData`. Obviously this has not a 100% coverage (it ""only"" affects Data<.*> written members) but it's still a very good start. PS: our nightly-generated Doxygen is ready to receive these changes: https://www.sofa-framework.org/newapi. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/546:819,failure,failures,819,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/546,2,['failure'],['failures']
Availability,"This work is initially from @Camille-K in his branch https://github.com/Camille-K/sofa/tree/dev_limited_RestShapeSpringsForceField. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3850:676,failure,failures,676,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3850,2,['failure'],['failures']
Availability,"Those 2 components are purely based on OpenGL (opengl code in update visual and draw().; But unexpectedly, updateVisual() is called, even in batch mode; This PR simply skips the updateVisual() if the Visual params does not handle opengl (which is the case in batch). Philosophical question: should we really updateVisual if there is no visual ?. https://github.com/sofa-framework/sofa/blob/26f65f15accb058053f49fbcd862cf59dec50352/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp#L274. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4436:1047,failure,failures,1047,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4436,2,['failure'],['failures']
Availability,"Those headers are included almost everywhere so it triggers a large number of ""unused var"" warnings (~2k in a standard compilation), leading to big log files on the CI 😵. Only with clang though apparently. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4465:750,failure,failures,750,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4465,2,['failure'],['failures']
Availability,"Those macro are needed if you are trying to enhance the gui from your plugin linking with SofaGuiQt. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2555:645,failure,failures,645,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2555,2,['failure'],['failures']
Availability,"Through a blog, i tried a new way to compute the rotation of a Vec3 with a Quaternion from the famous [glm library](https://github.com/g-truc/glm); (that is to say, the method is tested thoroughly I suppose....); https://github.com/g-truc/glm/blob/cc98465e3508535ba8c7f6208df934c156a018dc/glm/detail/type_quat.inl#L347. Measured with SofaBenchmark (), MSVC/full optim enabled (LTO and full-inlining):; ```; before: BM_Quat_rotateVec/8192 46.4 us; after: BM_Quat_rotateVec/8192 33.6 us; ```; FYI, RelWithDebInfo (no inlining) ; ```; after: BM_Quat_rotateVec/8192 38.0 us; ```. GCC on Ubuntu has pretty much the same behavior. And this PR add some tests between the previous and the new implementations. Related SofaBenchmark PR : https://github.com/alxbilger/SofaBenchmark/pull/25; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3138:1325,failure,failures,1325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3138,2,['failure'],['failures']
Availability,"Throw an exception when denominator is zero. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2929:589,failure,failures,589,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2929,2,['failure'],['failures']
Availability,"Timers have been transformed to `AdvancedTimer`.; `MechanicalGetConstraintInfoVisitor` has now its own file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2640:653,failure,failures,653,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2640,2,['failure'],['failures']
Availability,"Title is self-explanatory.; Follows discussion about redefining CI minimal scope. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4300:626,failure,failures,626,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4300,2,['failure'],['failures']
Availability,Title says all (at least on Windows/MSVC). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1425:299,failure,failures,299,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1425,2,['failure'],['failures']
Availability,Title says all :). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label).; - [x] has been reviewed and agreed to be transitional.; - [x] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/240:249,failure,failures,249,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/240,1,['failure'],['failures']
Availability,"Title says all, forgotten lines and mess with the generated variables (dot and underscore) in SofaFrameworkConfig.cmake.in (and Sofa.GLConfig.in); Fix out-of-tree compilation (tested with Py3) which could not find GLEW::GLEW target. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1911:777,failure,failures,777,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1911,2,['failure'],['failures']
Availability,"Title says all, this PR removes all deprecated headers, occurring since the creation of Sofa.GL. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2045:641,failure,failures,641,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2045,2,['failure'],['failures']
Availability,"Title says all. - UnitTest is completely unused and deprecated (thats why I did not set a compat file); - I was trying to remove FnDispatcher but it is actually used in SolverMerger (is it useful?). Also, **a lot of classes** were including it for nothing at all. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1983:808,failure,failures,808,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1983,2,['failure'],['failures']
Availability,"Title says all. Should fix project using SofaGUI as dependencies. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2279:610,failure,failures,610,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2279,2,['failure'],['failures']
Availability,"Title says all.; I am still wondering why we did not encounter the problem before 🤔 (happening while doing sofang). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2247:660,failure,failures,660,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2247,2,['failure'],['failures']
Availability,"Title says all.; Not detectable on the CI unfortunately.; Thanks to @alxbilger for the report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2841:639,failure,failures,639,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2841,2,['failure'],['failures']
Availability,Title says it all. SofaMacros.cmake was becoming more and more messy. Nothing changes in the macros/functions (I promise :angel:). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1477:387,failure,failures,387,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1477,2,['failure'],['failures']
Availability,Title says it all. Sorry for the messy quick fixing. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/619:309,failure,failures,309,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/619,2,['failure'],['failures']
Availability,Title speaks for itself. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/981:281,failure,failures,281,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/981,2,['failure'],['failures']
Availability,"Title. The CI should not be impacted by this PR (hopefully). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3628:605,failure,failures,605,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3628,2,['failure'],['failures']
Availability,"Title. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3637:551,failure,failures,551,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3637,10,['failure'],['failures']
Availability,"To avoid NaN propagation when a wrong constraint is created using barycentricMapper and CreatePointLine. Also add a small changes in regularGrid done during debug division by 0. fix https://github.com/sofa-framework/BeamAdapter/issues/55 (does it works across repo?). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3383:812,failure,failures,812,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3383,2,['failure'],['failures']
Availability,"To be discussed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3956:561,failure,failures,561,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3956,2,['failure'],['failures']
Availability,"To be merged after https://github.com/sofa-framework/sofa/pull/2588. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2597:613,failure,failures,613,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2597,2,['failure'],['failures']
Availability,To complete the new doc page on [ShewchukPCG](https://www.sofa-framework.org/community/doc/components/linearsolver/preconditioned-cg/). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1420:392,failure,failures,392,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1420,2,['failure'],['failures']
Availability,"To experiment a new handling of sparse matrices under mappings in our plugin, a few changes are needed in the core of SOFA.; Main changes:; - Add a new function in MechanicalObject (commit 6a6fd98).; - Refactoring of MatrixDerivId: warning holonomicC() is deprecated --> replaced by constraintMatrix (commit 966f9af).; - Change allocation in createMatrix from a fullMatrix to a sparseMatrix.; Linked to #26 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/276:665,failure,failures,665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/276,2,['failure'],['failures']
Availability,"To fix rendering bug reported in https://github.com/sofa-framework/sofa/discussions/3100; Also restore the `msaa` command line option. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3105:679,failure,failures,679,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3105,2,['failure'],['failures']
Availability,"To identify where addDForce is called. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2213:583,failure,failures,583,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2213,2,['failure'],['failures']
Availability,"To make it more simple to manage deprecation and more specifically to not override the parse() method for that purpose. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3934:664,failure,failures,664,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3934,2,['failure'],['failures']
Availability,"To move forward in order to be ready for c++20 modules we need to clean the dependency graph of SOFA. This PR is going in this direction by removing most of the dependency to BaseVector.h, BaseMatrix.h and StringUtils.h. . In SOFA we often use this pattern; ```cpp; class MyClass; {; public:; typedef int Index; ; };; ``` . Which impose a dependency to the full MyClass definition to manipulate indices. ; I design pattern avoiding this problem is used in the PR. This PR work as the following: ; ```cpp; /// Forward declaration; class MyClass;; typedef int MyClassIndex;. /// Definition ; class MyClass; {; public:; typedef MyClassIndex Index; ; };; ``` . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1509:913,failure,failures,913,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1509,2,['failure'],['failures']
Availability,To move rmath.h from the header I had to moved the code that rely on rmath into Vec.inl so that the include is not spread all around the codebase. Now if you want to instanciate special version of the Vec templates you need to include Vec.inl either. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1543:509,failure,failures,509,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1543,2,['failure'],['failures']
Availability,To prepare for runSofa2 i feel the need to refactor some aspects. . CHANGELOG:; - ADD a Camera object inheriting from BaseCamera so that it become possible to render a scene. The difference with InteractionCamera is that the Camera component is not having any interaction so you can implement your own 'application specific behavior' by using an external Controller (eg: PythonScriptController).; - ADD a link in BaseCamera to a BackgroundSetting so different camera can have different background. ; - the Camera alias is not anymore creating an InteractionCamera but a Camera object; - Update the caduceus example.; - Light object now have a drawSource so that it is possible to draw the source from without having to change the d_drawSource data field.; ; This PR replace #674 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/676:1037,failure,failures,1037,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/676,2,['failure'],['failures']
Availability,"To register the data type info into the TypeInfoRegistry I used partial specialization of the Data class. ; The default implementation of AbstractTypeInfoRegistration is using the old code system (which imply a dependency to all the TypeInfo_xxxx.h). . For progressive migration to new typeinfo system, the selected typeinfo are specializating their custom AbstractTypeInfoRegistration. This custom registration is using the new system. To make sure that the partial specialization is used, the migrated types are declared as extern so we are sure there is a single registration. . An additional advantage of explicit extern declaration of Data is that this avoid bloating the compiler with all the data type to instanciate in every compilation unit. . Done:; - Data[bool]; - Data[RGBAColor] . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3289:1338,failure,failures,1338,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3289,2,['failure'],['failures']
Availability,To relax after discussions on DataEngines i clean that;. This one is based on stc5 branch (not master). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/818:360,failure,failures,360,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/818,2,['failure'],['failures']
Availability,"To reproduce the bug, simply add a `msg_error()` at the first line of `static std::string computeSofaPathPrefix()` (sofa/helper/Utils.cpp) on a mac OSX system. I believe this bug was due to an order mixup of global static initializer since this bug wasn't affecting Linux (not sure about Windows). I would need more time to prove this though. I moved the faulty global static intializer to local static initializer and that fixed the crashes. It may be a good idea in the future to minimize the uses of static objects (singletons, static global variables, etc) since they are pretty hard to debug and can cause behaviors dependent of the compiler used. @guparan could you test this in your PR #635 (by reinserting the msg_error) and make sure that the seg fault is gone?. Fixes #636 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/642:355,fault,faulty,355,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/642,4,"['failure', 'fault']","['failures', 'fault', 'faulty']"
Availability,"To use a LinearForceField, we need to specify a series of key times associated with forces. However, when simulation time goes beyond the last key time, the force becomes zero instantly. This PR changes it so that it stays at the last specified force instead.; There are a few more small changes to remove some warnings and to use SOFA coding conventions. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/525:612,failure,failures,612,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/525,2,['failure'],['failures']
Availability,"TopDown_fwd*` and `processNodeBottomUp_bwd*`: in the base class they do nothing. In the derived class, they must execute the corresponding `processNodeTopDown_fwd*_impl` or `processNodeBottomUp_bwd*_impl` function.; - `processNodeTopDown_fwd*_impl` and `processNodeBottomUp_bwd*_impl` which have a content and will execute the goal of the visitor. Those functions are not meant to be overriden by the derived classes. They are provided so derived class can call them when they override `processNodeTopDown_fwd*` or `processNodeBottomUp_bwd*`. ### Example. `MechanicalGetDimensionVisitor` inherits from `BaseMechanicalVisitor` and overrides `fwdMechanicalState`. In order for `fwdMechanicalState` to be executed, it must also override `processNodeTopDown_fwdMechanicalState`. In `processNodeTopDown_fwdMechanicalState`, it just have to call `processNodeTopDown_fwdMechanicalState_impl`. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Benefit from inheritance and avoid runtime checks compared to PR #1962 . ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to derive more functions. This PR is not to merge yet. It is suggested as an alternative to PR #1962 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1963:3388,failure,failures,3388,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1963,2,['failure'],['failures']
Availability,"TopologySubsetIndices can be initialized before their corresponding TopologyContainer is total init depending on the component graph order.; Therefor the member `m_lastElementIndex` used to store the size of the TopologyBuffer could be set to 0. Override the method `getLastElementIndex() ` in `TopologySubsetIndices` (and put it in const) to get the number of points as a TopologySubsetIndices is always used on the Point topology. This method is called before removing elements to make sure we use and up to date value of m_lastElementIndex before doing any process. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3331:1113,failure,failures,1113,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3331,2,['failure'],['failures']
Availability,"Towards a green dashboard. Scene was broken since the change on StaticSolver; But I am not convinced it was even working before, the simulation seems very unstable. A python script handling the incremental loading is added. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1064:480,failure,failures,480,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1064,2,['failure'],['failures']
Availability,"TriangleOctree is used in some case where people wants to do ray tracing on an octree structure (filled with triangles); It makes more sense to move it in helper, as it is not a component but a shared utility class potentially used by something else than ""GeneralCollisionMesh"" things (whatever that means). Based on; - #2763 ; ; Breaking 'cause I removed dependency on VisualTool (Sofa.Core) to use directly Drawtool. Still, it has a compat file to redirect deprecated usages.; Removed more useless headers...; This class would need a quite heavy facelift BTW. PS: There was a weird include of defaulttype/fwd.h in DrawTool which was undetected until now, 🤥 ??. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2805:1207,failure,failures,1207,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2805,2,['failure'],['failures']
Availability,"Triangles `or `TrianglesAroundEdges `as well as `d_triangles `array inside a `TetrahedronToplogy `where empty at start and created only the first time a getter is called.; For example: `getEdgesInTriangleArray()` was calling: `if(m_edgesInTriangleArray.empty()) createEdgesInTriangleArray()` . This works but means at start component are not fully init (potential unstable behavior) and there is no warranty at which timestep buffer will be created. ; Furthermore means that getter are not const and could change the content of the container which is a bad design (in my opinion). **This PR force the computation of all buffers at component init** using a dedicated method `initTopology()` which is called in cascade -> `Tetrahedron::initTopology()` will call `Triangle::initTopology()` -> `Edge::initTopology()`; **and remove all buffer creation call from the getter.**. - Additional changes: ; - Add more check in the buffer creation methods. Potentially exit if creation is not possible (will return bool in future changes).; - Always check buffer size access in the getter. If out of bound acces, returns Invalid element and only emit a warning if CHECK_TOPOLOGY is ON, as this call could be logical and the caller should check the invalid return. ; - Update all topologicalMapping to init the target topology at end of mapping init. ; - **Add some static invalid buffers in sofa::core::topology::Topology.h -> Im not fully happy about those add. Any better suggestion is welcomed.**. fixes #746; fixes #955; fixes #956 ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/967:1929,failure,failures,1929,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/967,2,['failure'],['failures']
Availability,Tried not to go too quickly....; - Replaced serr by msg_error/msg_warning and msg_info regarding the case.; - Remove all commented serr.; - Use stringstream to accumulate errors when inside a loop. This PR only trigger classes in Sofa modules see #1237 for changes in SofaKernel. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1236:171,error,errors,171,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1236,3,"['error', 'failure']","['errors', 'failures']"
Availability,Tried not to go too quickly....; - Replaced serr by msg_error/msg_warning and msg_info regarding the case.; - Remove all commented serr.; - Use stringstream to accumulate errors when inside a loop. This PR only trigger classes in SofaKernel. See #1236 for changes in Sofa Modules. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1237:171,error,errors,171,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1237,3,"['error', 'failure']","['errors', 'failures']"
Availability,"Trivial removeal of compilation warnings. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3494:588,failure,failures,588,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3494,2,['failure'],['failures']
Availability,Try to fix additional warnings !. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1210:290,failure,failures,290,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1210,2,['failure'],['failures']
Availability,"Try to fix and create a real test for TopologyChangeProcessor by loading the scene and access the topology container to check the topology after performing topology changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1909:718,failure,failures,718,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1909,2,['failure'],['failures']
Availability,"Trying to implement strict type for setValue() and stumbled on ClusteringEngine which was setting wrong values (copy-paste I suppose). \+ fix other strict type usages. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3398:712,failure,failures,712,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3398,2,['failure'],['failures']
Availability,"Trying to include the SofaExporter module in an external project (out-of-tree build of a plugin || test) was not functional since include directories were not exposed properly. I took inspiration from CImgPlugin for this PR, which uses CMAKE_CURRENT_SOURCE_DIR to expose the target's include directory.. but I believe this is actually wrong as this corresponds to the path to the sources (`/home/bruno/dev/sofa/modules/SofaExporter/src/` in my case for instance) and not to the installed include directory, (which should be `/home/bruno/dev/sofa/build/install/include/SofaExporter/src/SofaExporter` on my machine). I took a look at other plugins & pluginized modules & they all seem to do this, so Idk if it's a mistake or done on purpose..?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/975:999,failure,failures,999,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/975,2,['failure'],['failures']
Availability,"Trying to list automatable tests we could/should implement.; Feel free to complete it!. - ProjectiveConstraint:; - ""projectResponse"" could be tested by finite differences on ""projectPosition""; - MultiMapping:; - ""getK"" (assembled API) could be compared to ""applyDJT"" (non assembled API); - ForceField:; - masks: all the non-null lines of the stiffness matrix should have an entry in the mask vector (conservative test, i.e. the mask can contain more entries); - the compliance matrix should be equal to the inverse of the stiffness matrix (maybe with a different sign); - {Multi}Mapping; - masks: all the non-null columns of the Jacobian matrices should have an entry in the parent mask vectors (conservative test, i.e. the masks can contain more entries)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/111:305,mask,masks,305,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/111,6,['mask'],"['mask', 'masks']"
Availability,Turn ForceField init method as final and internally call a delegate fonction doInit which can be overide. This is to avoid adding a call super in each forcefield as ForceField::init has to be called in the current api. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1506:475,failure,failures,475,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1506,2,['failure'],['failures']
Availability,"Tutorials were not configuring. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3200:576,failure,failures,576,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3200,2,['failure'],['failures']
Availability,"Two change needed by the SofaPython3 plugin. . - In BaseData Some method have two version, one without arguments the other with an ExecParm. In pybind11 we need to differentiate explicitely the two version making the code more complex. As I see no good reason why to keep the two version in Sofa I merged these two into one by using a default param = nullptr. . - I have added a join/split function in the StringUtils class. . - In SimpleAPI I found allowing BaseObjectDescription useful to create object and node. So I added new functions.; _____________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/860:797,failure,failures,797,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/860,2,['failure'],['failures']
Availability,"Two events are launched during the constraint solver pipeline:; - `BuildConstraintSystemEndEvent` is launched after the constraint system has been built; - `SolveConstraintSystemEndEvent` is launched after the constraint system has been solved. This allows a Python controller to subscribe automatically to those events if the controller implements `onBuildConstraintSystemEndEvent` and `onSolveConstraintSystemEndEvent`:. ```python; class MyController(Sofa.Core.Controller):; def __init__(self, *args, **kwargs):; Sofa.Core.Controller.__init__(self, *args, *kwargs); ; def onBuildConstraintSystemEndEvent(self, params):; print(""BuildConstraintSystemEndEvent event received ""+str(params)). def onSolveConstraintSystemEndEvent(self, params):; print(""SolveConstraintSystemEndEvent event received ""+str(params)); ```. In collaboration with @TanguyNav and @EtienneMenager. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3418:1413,failure,failures,1413,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3418,2,['failure'],['failures']
Availability,"Two forcefields were existing and very similar:; - UniformVelocityDampingForceField : real applied similarly in a isotropic on each dofs (x, y, z); - DiagonalVelocityDampingForceField : possibly anisotropic vector of damping coefficient per node. Unify these two with the NodalLinearDampingForceField. One question : which input do we want ; - a real; - a vector of real (which not existing so far); - a vector of Deriv (allowing for anistropic damping while we do not do much anistropy in SOFA). Remaining TODO; - [ ] Update all tests; - [ ] Update all examples. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4920:1108,failure,failures,1108,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4920,2,['failure'],['failures']
Availability,Two minor changes:; - Remove FixedConstraint redundant with LinearMovementConstraint (on same DOFs); - Improve warning comment in MeshMMass when using explicit resolution (accFromF) with non-lumped sparse matrix. NOTE: I realized no sparse MassMatrix can therefore be used in explicit formulation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/983:45,redundant,redundant,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/983,3,"['failure', 'redundant']","['failures', 'redundant']"
Availability,"Two minor cleanings:; - clean dirty codes using `NDEBUG` to avoid warning and use `SOFA_UNUSED`; - remove last occurrence of SOFA_DEBUG . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4971:682,failure,failures,682,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4971,2,['failure'],['failures']
Availability,"Two new components:; - ComplianceMatrixExporter: Exports the compliance matrix of a constraint solver into a file; - ComplianceMatrixImage: visualization of the compliance matrix in the GUI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2782:735,failure,failures,735,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2782,2,['failure'],['failures']
Availability,"Two new menu entry are added in the SceneGraph view to jump to the source file location corresponding to the selected object. This PR is based on #1012 to get the file location. ; By default qtcreator will be used to open the file. ; But this can be changed by editting the config file saved by the QSetting mecanism. . NB: The ""Go To implementation"" really make sense when using STLIB as it allows ; to jump where a prefab is implemented. It would be nice if we could do the same for c++ ; but this is of lesser interest ...because we need to compile sofa to see a change :) . EDIT: small video show how it works ; [![video](http://img.youtube.com/vi/zzOY-Lt0vgM/0.jpg)](http://www.youtube.com/watch?v=zzOY-Lt0vgM); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1013:973,failure,failures,973,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1013,2,['failure'],['failures']
Availability,"Two optimizations:; - ~~SparseLDL is now instanciated by default with the template `CompressedRowSparseMatrix<Matrix3>` instead of `CompressedRowSparseMatrix<double>` : seems much faster with 3DOFs~~ warn the user to use `CompressedRowSparseMatrix<Matrix3>` if using only 3DOFs; - Optimize compliance computation : use the local constraint count instead of the global to compute the internal matrices Also rename Jdense to JLinv and Jminv to JLinvDinv to be coherent with what the current code is computing. (those descriptions comes directly from the commit messages). With my scene test (a dozen of objects with a SparseLDLSolver each, and a lot of constraints due to the FrictionContacts):; ```; - before : 5000 iterations done in 208.437 s ( 23.9881 FPS).; - after : 5000 iterations done in 75.8347 s ( 65.9328 FPS).; ```; I tried to keep the commit identical to the original one from the [ISSofa repo](https://github.com/InSimo/ISSofa) (author/message/date). Credits to:; - @JeremieA from [Insimo](http://insimo.com/); - @remibessard from [Mimesis](https://mimesis.inria.fr), for the report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1996:1641,failure,failures,1641,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1996,2,['failure'],['failures']
Availability,"Two pendulum links by their extremities. ![image](https://user-images.githubusercontent.com/10572752/226943766-038894a0-5298-4a7e-a6c1-bd5a29d2d0a8.png). [ci-depends-on https://github.com/sofa-framework/Regression/pull/40]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3742:768,failure,failures,768,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3742,2,['failure'],['failures']
Availability,Two thing:; - @epernod some of your code includes changes not merged yet on component**S**tate; - ```Sleep()``` on Linux is not working. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1393:393,failure,failures,393,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1393,2,['failure'],['failures']
Availability,"Two variables with internal linkage were defined with the same symbol, and the same value. Instead, I propose to associate these variable to the classes where they are used. I did not made them global variables because we could imagine having two different values for both classes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1951:826,failure,failures,826,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1951,2,['failure'],['failures']
Availability,"Two variables with the same name in the same scope: declaration hides previous local declaration. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2463:642,failure,failures,642,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2463,2,['failure'],['failures']
Availability,"Typo in the name of the variable in an assert, so compiled only in Debug. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2417:618,failure,failures,618,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2417,2,['failure'],['failures']
Availability,"UPDATE: SofaHelper compilation with msvc. libpng should not be forced; to be linked using pragma directive. The name of the library may vary,; and it the debug version may well not be available, and its; unavailability should not break the debug build. I fell in the same problem as the one mentionned in issue #443 while compiling; with msvc in debug, without having on my system a version of the libpng ; library called ""libpngd.lib"". ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/446:184,avail,available,184,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/446,3,"['avail', 'failure']","['available', 'failures']"
Availability,"Uber PR. - some instanciations were still refering to Vec3dTypes (instead of Vec3Types); - confusion between double and SReal; - Vector3 used as Vec<3. SReal> (confusion with Matrix3 for example which is effectively Mat<3,3,SReal>...); - MeshMatrixMass mixing MassType and DataTypes::Real; - Fix some double* cast to a float*...; - Fix a rounding error with float in regulargrid (**realllllllly** old bug); - short demo on godbolt: https://godbolt.org/z/no6hss6jr; ; -> massive use of auto and getAccessor(). This PR should be exactly the same if SOFA_FLOATING_POINT_TYPE is set to double (hopefully); ~The only breaking things are in MeshMatrixMass~. actually it should not be. I have ported the code from the standard set of sofa modules/plugins so plugins/tests are likely to fail (with float); CI is using double so it will only test if there is no regression. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2560:347,error,error,347,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2560,3,"['error', 'failure']","['error', 'failures']"
Availability,"Unexpectedly enabled this option in one of my build...; This class did not follow the renaming bloc to block in #2404 (#2329) . CI result is useless as the CRSMultiMatrixAccessor is not activated on it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2456:747,failure,failures,747,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2456,2,['failure'],['failures']
Availability,"Unfortunately Gaurab seems to be unreachable those days. As I want to use his good work, here is a quick cherry pick of his PR #639. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/669:389,failure,failures,389,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/669,2,['failure'],['failures']
Availability,"Uniform size type to be same type as index_type; + move index_type to sofa namespace (in sofa/config.h); (was located in defaulttype before, does not really make sense). So now : ; - index_type is defined as sofa::index_type; - size_type is defined as sofa::size_type ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1515:526,failure,failures,526,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1515,2,['failure'],['failures']
Availability,"Unit should not be specified in the GUI, nothing tell us that seconds are used.; This PR just remove the secs from the GUI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2742:668,failure,failures,668,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2742,2,['failure'],['failures']
Availability,"Unit tests for `IdentityMapping`.; `coordDifference` did not exist for `Rigid2` so it is also introduced. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5094:650,failure,failures,650,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5094,2,['failure'],['failures']
Availability,"Unix timeout command is now accessible in Windows VMs (using ""Git for Windows"" Bash). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/379:342,failure,failures,342,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/379,2,['failure'],['failures']
Availability,"Up-to-date: C:/projects/sofa-build/install/lib/SceneCreator.lib; 1>-- Up-to-date: C:/projects/sofa-build/install/bin/SceneCreator.dll; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetAssembledSizeVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetVectorVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneCreator.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneUtils.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/config.h; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets-release.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfigVersion.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfig.cmake; 1>CMake Error at applications/plugins/CImgPlugin/cmake_install.cmake:38 (file):; 1> file cannot create directory:; 1> C:/projects/sofa-build/$C:/projects/sofa-build/install/plugins/CImgPlugin/bin.; 1> Maybe need administrative privileges.; 1>Call Stack (most recent call first):; 1> applications/plugins/cmake_install.cmake:37 (include); 1> cmake_install.cmake:88 (include); 1>; 1>; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: The command ""setlocal; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: ""C:\Program Files\CMake\bin\cmake.exe"" -DBUILD_TYPE=Release -P cmake_install.cmake; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:1905,Error,Error,1905,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,1,['Error'],['Error']
Availability,"Update CONTRIBUTING.md further to 20170503 SOFA meeting. - Track the status of each pull request using labels.; - If an issue reports a bug or any abnormal behavior in SOFA, a test highlighting the issue must be written. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old (or has fast-merge label).; - [ ] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/260:451,failure,failures,451,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/260,1,['failure'],['failures']
Availability,Update ChangeLog to better guide users when facing issues with recent breaking PRs. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1562:340,failure,failures,340,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1562,2,['failure'],['failures']
Availability,Update SofaMacros.cmake by setting the policy CMP0057 NEW for supporting the IN_LIST operator of if(). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1454:359,failure,failures,359,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1454,2,['failure'],['failures']
Availability,Update further to work on the upcoming Optimus plugin:; thanks @guparan for solving the issue !. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1498:353,failure,failures,353,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1498,2,['failure'],['failures']
Availability,"Update scene to show the different methods apply on a same beam (even if I can't see the diff...) ; Move the old TetrahedronFEMForceField.scn into TetrahedronFEMForceField_Chain.scn. TetrahedronFEMForceField.scn; ![Sofa - C__projects_sofa-src_examples_Components_forcefield_TetrahedronFEMForceField scn 6_11_2021 12_12_37 PM](https://user-images.githubusercontent.com/21199245/121693178-2bfa6700-cac9-11eb-846f-6395d00a1aa0.png). TetrahedralCorotationalFEMForceField.scn; ![Sofa - C__projects_sofa-src_examples_Components_forcefield_TetrahedralCorotationalFEMForceField scn 6_10_2021 9_26_44 AM](https://user-images.githubusercontent.com/21199245/121483753-d477d080-c9ce-11eb-968a-57009c936706.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2172:1244,failure,failures,1244,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2172,2,['failure'],['failures']
Availability,"Update the guidelines so that they take into account the latest discussions and conclusion regarding the policy for:; - auto,; - epsilon,; - messaging,; - getContext(). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1135:425,failure,failures,425,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1135,2,['failure'],['failures']
Availability,"Update the list of plugins to NOT auto-load when executing runSofa from the release. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3197:629,failure,failures,629,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3197,2,['failure'],['failures']
Availability,"Updating the code so that the lifecycle of SOFA is respected. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3534:606,failure,failures,606,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3534,2,['failure'],['failures']
Availability,"Use ```= delete``` to make the deprecated function to fails at compilation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1793:620,failure,failures,620,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1793,2,['failure'],['failures']
Availability,"Use directly operator[] instead of BaseMatrix::element() (and avoid using virtual functions) which is used extensively in addConstraintDisplacement() which is called a lot through ConstraintSolvers.; I dont like the way how to detect if the vector is FullVector at run-time (using dynamic_cast) but I did not see a fast way to get this info at compile-time. Bench (3instruments_collis.scn from BeamAdapter), 5000 steps, MSVC2022:; - before: `74.5033 s ( 67.1111 FPS)`; - after: `61.728 s ( 81.0005 FPS)`. A nice 20% speedup. \+ some cleanups; - color array was too long (messing IDE); - print only in dev-mode in LCPConstraintSolver if it did not reach convergence (bothersome). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3231:1223,failure,failures,1223,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3231,2,['failure'],['failures']
Availability,"Use of the compatibility layer becomes optional now. Useful if one needs to check if their code is fully v21.06.; ON is the default value for easy-transitioning (for now). It would be nice for one build on the CI to set the option to OFF (to detect PRs still using deprecated headers). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2216:830,failure,failures,830,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2216,2,['failure'],['failures']
Availability,"Useless:. For example, the timer in `UpdateMappingVisitor::processMechanicalMapping` does not measure anything. Annoying:. I don't think it is a good practice to add timer on individual components. In particular, the ones I removed measure neglectable durations. The fact that there is one timer for every component adds a lot of pollution in the analysis of the timings, for nothing because it is neglectable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4631:955,failure,failures,955,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4631,2,['failure'],['failures']
Availability,Using #ifdef all around is really bad and ugly. If you need the feature to be back; please make a PR with a non invasive design. If you don't understand why it is so bad to have #ifdef ; used that way please ask I will explain with more details. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1075:504,failure,failures,504,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1075,2,['failure'],['failures']
Availability,"Using `getWriteOnlyAccessor` instead of `beginEdit/endEdit`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2468:605,failure,failures,605,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2468,2,['failure'],['failures']
Availability,"Using a RegularGrid in 2D, a TriangleSetTopologyContainer returns the following error:; ```; Cannot find edge 1 [12, 0] in triangle 0; ```; and the structure edges in triangles is not created. I guess this would be due to the re-ordering of elements (hexa/quads/tri). Any idea @epernod ?. Example scene:; ```python; from stlib.scene import MainHeader; import Sofa; import math; from time import sleep; from splib.animation import animate, AnimationManager. def createScene(rootNode):; rootNode.gravity = [0,0,0]; rootNode.dt = 0.001; rootNode.createObject(""VisualStyle"", displayFlags=""hideVisual showBehaviorModels showForceFields""); rootNode.createObject(""RequiredPlugin"", name=""SofaPython""); ; ; returnMembrane = Membrane(rootNode, []); return 0;. class Membrane(Sofa.PythonScriptController):; def createGraph(self, rootNode):; return;. def initGraph(self, rootNode): ; self.root = rootNode; #-----------------------------------------------------------------------------------------------------------------------------------------; # Properties of the membrane; self.MembraneLength = 1.0 # in mm; self.YoungModSI = 6000.0 # in Pascal (SI); self.StiffnessSI = 300.0 # Force per unit length; self.scale = 1 # in mm; ; # Properties of the laser; self.EXModulationFreq = 1.0 # in Hz; self.EXOmega = 2*math.pi*self.EXModulationFreq; self.forceAmpl = 10.0; self.LaserspotDiameter = 0.05. # Simulation options; self.root.findData(""gravity"").value = [0,0,0]; self.positionCenter = [0,0,0] ; self.DrivingForce = [0,0,0]; self.IterationIndices = [0,0]. # Measurement options; self.nbrOfPoints = 10.0; self.LaserSpacing = self.MembraneLength/self.nbrOfPoints; self.TotalPoints = self.nbrOfPoints*self.nbrOfPoints; #------------------------------------------------------------------------------------------------------------------------------------------; #------------------------------------------------------------------------------------------------------------------------------------------; # Define squar",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1243:80,error,error,80,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1243,1,['error'],['error']
Availability,"Using clang -ftimetrace show that BaseObject/Data/Base are taking a lot of compilation time; because of excessive inclusion and parsing time.; PCH can help to solve this issue and there is support for that in CMake.; Let's se result. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1727:778,failure,failures,778,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1727,2,['failure'],['failures']
Availability,"Using sofa::Index instead of int. \+ removing verbose types and using aggreg. contructions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4279:636,failure,failures,636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4279,2,['failure'],['failures']
Availability,"Using the newly released CMake 3.15, the configuring stage fails with:. CMake Error at SofaKernel/SofaFramework/SofaMacros.cmake:686 (message):; Missing parameter TARGETS.; Call Stack (most recent call first):; applications/plugins/SofaMiscCollision/CMakeLists.txt:82 (sofa_generate_package). ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1105:78,Error,Error,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1105,1,['Error'],['Error']
Availability,"Using this in your scene:; ```xml; <APIVersion level=""21.06"" />; ```; gave (before this PR):; ```; [WARNING] [APIVersion(APIVersion)] The provided level '21.06' is now valid.; ```; and now gives (with this PR);; ```; [WARNING] [APIVersion(APIVersion)] The provided level '21.06' is not valid. Allowed versions are [17.06, 17.12, 18.06, 18.12, 19.06, 19.12, 20.06, 20.12, 20.12.99].; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2103:932,failure,failures,932,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2103,2,['failure'],['failures']
Availability,"Validated with the following benchmark. The benchmark `BM_BTDMatrix_addBlock` uses the new implemented accumulation function and must be compared to `BM_BTDMatrix_add`. ```; -------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -------------------------------------------------------------------------------; BM_BTDMatrix_add<6, SReal>/64 6212 ns 3069 ns 224000; BM_BTDMatrix_add<6, SReal>/512 49857 ns 32087 ns 22400; BM_BTDMatrix_add<6, SReal>/1024 103536 ns 54408 ns 11200; BM_BTDMatrix_addBlock<6, SReal>/64 602 ns 391 ns 1600000; BM_BTDMatrix_addBlock<6, SReal>/512 5607 ns 3432 ns 186667; BM_BTDMatrix_addBlock<6, SReal>/1024 12176 ns 6417 ns 112000. ```. https://github.com/alxbilger/SofaBenchmark/pull/36. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4248:1316,failure,failures,1316,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4248,2,['failure'],['failures']
Availability,"Various cleanup and better checks at the init stage to make sure the topological mappings have everything they need. Only Hexa2Quad, Quad2Triangle and Tetra2Triangle for now. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1126:431,failure,failures,431,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1126,2,['failure'],['failures']
Availability,Various fix from my working branch:; - FIX: wrong msg_error instead of msg_info in PrecomputedConstraintCorrection; - FIX: warnings when drawing collision interaction using UnilateralInteractionConstraint; - FIX: OglAttribute handleTopologyChange method by using a PointData for value array.; - CLEAN: some logs in PointModel; - FIX: NearestPointROI to use rest_position instead of position. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1159:648,failure,failures,648,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1159,2,['failure'],['failures']
Availability,"Vec, Matrices and few other types have ""short name"" version. ; I added the one corresponding to fixed_array<>. I also added a BoundingBox3D so it become consistent with the other ones. . Comment for future code evolution: ; To know when to have an extern template or a short name alias it could be interesting to see if the type is used (or a consequence of a registration) in a ""factory"" (see SimpleDataWidget, TableDataWidget, ObjectFactory, ...). ; Each type used there may be extern templated and have its alias. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3298:1063,failure,failures,1063,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3298,2,['failure'],['failures']
Availability,"Vec1 and Vec2 were supported in CUDA but only in float and not in double. Also added support for Rigid2d, which was supported in the CPU version. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3688:690,failure,failures,690,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3688,2,['failure'],['failures']
Availability,"Vector negation does not make sense for unsigned types. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2589:600,failure,failures,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2589,2,['failure'],['failures']
Availability,"Very basic PR just to let you know that the CGAL plugin is not compatible with latest CGAL.; As is, it compiles with CGAL <= 4.9.1. CI build is unnecessary for this PR.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/510:426,failure,failures,426,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/510,2,['failure'],['failures']
Availability,Very simple PR to allow Windows loading MultiThreading plugin.; Will fix these errors: https://ci.inria.fr/sofa-ci/job/windows7_VS-2015_options_amd64/550/warnings2Result/category.96784904/. [ci-build][with-scene-tests]; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/507:79,error,errors,79,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/507,3,"['error', 'failure']","['errors', 'failures']"
Availability,"Very useful collection of header-only utilities : https://github.com/nothings/stb. This PR uses **stb_image** and **stb_image_write** to read/write jpeg,png,etc. images directly without any reliance on libpng or libjpeg.; Practically, This PR almost depracates the use of CImgPlugin (at least as an image loader). ; The only thing stb (compared to cimg) is that it cannot load is the TIFF format... It allows us to :; - not depend on any external library anymore (libpng, libjpeg); - not need anymore to load the CimgPlugin to get images in a scene (which was a bit weird...). **stb** licence is either MIT or even public domain (!). Some questions about this PR:; - should we fetch stb at cmake configure time ? IMO no because it would mean we really need an Internet connection to compile the core of SOFA; - should we put all the files from the stb repo ? IMO no, the other files wont be used for sure. That's why the stb dir contains only the two files we want for this PR. <img src=""https://user-images.githubusercontent.com/11028016/146752568-e4f392d5-5ecd-4f32-be92-32f48b53f5ab.PNG"" width=""400"" />. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2551:1651,failure,failures,1651,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2551,2,['failure'],['failures']
Availability,"Very useful variable to have a default `COMPONENT` value for every `install` call :+1:; Also, clean 2 missing `<build-dir>/cmake --> <build-dir>/lib/cmake` for consistency. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2037:717,failure,failures,717,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2037,2,['failure'],['failures']
Availability,"VisualModelImpl inherits from State which allows it to be mapped (with Mappings) .; This State is slightly specialized for Visual thing (contains positions, normals and rest_positions(?) ). It was previously located exclusively in VisualModelImpl.h, this PR renames it and moves it into Sofa.Core.Visual.; Follows the guideline one class -> one (set of) file. Slightly breaking because some includes have been removed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3782:963,failure,failures,963,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3782,2,['failure'],['failures']
Availability,VisualTransform moved from SofaBaseVisual to SofaGeneralVisual. ChangeLog:; - FIX: compilation LeapMotion plugin (issue since v16.12). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/296:391,failure,failures,391,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/296,2,['failure'],['failures']
Availability,"Voilà. Maybe @epernod a check on the SofaPhysicsSimulation with the various Fore/Background member variables. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5054:654,failure,failures,654,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5054,2,['failure'],['failures']
Availability,WAIT for #1283 (priority). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1339:283,failure,failures,283,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1339,2,['failure'],['failures']
Availability,"WARNING: this will break SofaPython3. I'm working on it. Before, when 2 nested packages had `RELOCATABLE ""plugins""`, the 2nd was installed in CMAKE_INSTALL_PREFIX/plugins/FirstPackage/plugins/SecondPackage. Now, the RELOCATABLE argument, if relative, will always be treated as CMAKE_INSTALL_PREFIX/<argument>. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2603:854,failure,failures,854,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2603,2,['failure'],['failures']
Availability,"WIP PR.; For now, it disables all python scenes in Flexible and Compliant. IMPORTANT: do not merge until https://github.com/sofa-framework/SofaPython3/tree/fix_or_disable_scene_tests is merged into SofaPython3 and ExternalProject tag is reset to master here. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1919:803,failure,failures,803,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1919,2,['failure'],['failures']
Availability,WIP branch fixing test failures caused by warning/error/deprecated messages issued from #213. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old.; - [ ] #213 has been merged. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/237:23,failure,failures,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/237,3,"['error', 'failure']","['error', 'failures']"
Availability,"WIP project: Add window to display Data graph using [NodeEditor](https://github.com/paceholder/nodeeditor) library. To use it, install NodeEditor.; check option in CMake: SOFA_BUILD_NODEGRAPH; and until better setup, manually set: ; - NODEEDITOR_INCLUDE_PATH to NodeEditor-install/include; - NODEEDITOR_LIBRARY_RELEASE to NodeEditor-install/lib/nodes.lib. DataGraph can be displayed in top menu: Edit->Data Graph... ![graphData_04](https://user-images.githubusercontent.com/21199245/66931696-c2e1f800-f036-11e9-91da-3f6cebcb6880.jpg); ![graphData_03](https://user-images.githubusercontent.com/21199245/66757188-e45aac80-ee9b-11e9-8065-6f379be060b4.jpg). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1187:910,failure,failures,910,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1187,2,['failure'],['failures']
Availability,"Wait for #4058 to be merged to solve the failure. [ci-depends-on https://github.com/sofa-framework/ManifoldTopologies/pull/7]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4065:41,failure,failure,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065,3,['failure'],"['failure', 'failures']"
Availability,"Waiting the final version of the release for merging it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3998:601,failure,failures,601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3998,2,['failure'],['failures']
Availability,Warning EXTERMINATOR .. or almost !; I also created a dedicated issue ( #1166 ) on deprecated to remove at v19.12 release ! Get ready for the coding sprint !. Log of important changes:; - ImageTypes: update use of constant indice; - BarycentricMapper : use of new templates on friend class; - AttachConstraint : Add delegate function instead of using twice the same name. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1167:628,failure,failures,628,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1167,2,['failure'],['failures']
Availability,"Warning specific to windows fixed for function specialization (class templated, set the specialization in cpp), fix some headers (Mapping & MultiMapping). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/738:411,failure,failures,411,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/738,2,['failure'],['failures']
Availability,Warnings flags were declared in add_definitions (instead of cxx_flags). It is messing with projects using the new CUDA language feat. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1368:390,failure,failures,390,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1368,2,['failure'],['failures']
Availability,"Warnings were added in #2076. They were not taken into account in the unit tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2132:626,failure,failures,626,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2132,2,['failure'],['failures']
Availability,Warnings were due to unused function and overwriting function (clang). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/229:301,failure,failures,301,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/229,1,['failure'],['failures']
Availability,"Warnings were triggered from the gcc flag `-Wdelete-non-abstract-non-virtual-dtor `. https://devblogs.microsoft.com/oldnewthing/20200618-00/?p=103874. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4020:695,failure,failures,695,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4020,2,['failure'],['failures']
Availability,"Warns the user when a non-symmetric matrix is produced by a non-linear mapping while a symmetric linear solver is used. The message looks like:; ```; [ERROR] [RigidMapping(RigidMapping1)] The geometric stiffness of this mapping is a non-symmetric matrix. It means a linear solver supporting non-symmetric matrices must be used, but it is not the case here. To fix your scene, you have two options: 1) Use a linear solver supporting non-symmetric matrices, 2) stabilize the geometric stiffness with the Data 'geometricStiffness' set to 'Stabilized'; ```. Note that the detection was already considered in the past through a `bool` in the `MechanicalParams`, but not used at all. Note that even if a linear system supporting non-symmetric matrices is used, the exact geometric stiffness computed in `RigidMapping` leads to large stability issues in `examples/Component/LinearSystem/MatrixLinearSystem.scn`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3838:151,ERROR,ERROR,151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3838,3,"['ERROR', 'failure']","['ERROR', 'failures']"
Availability,"Warns the user when setting the `contactStiffness` data while using a Lagrange-based constraint resolution! Because it's **useless** :godmode: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3843:689,failure,failures,689,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3843,2,['failure'],['failures']
Availability,"Was changed in https://github.com/sofa-framework/sofa/pull/637. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3622:608,failure,failures,608,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3622,2,['failure'],['failures']
Availability,"Was crashing when activating the boolean option ""showVonMisesStressPerNode"" while the data ""computeVonMisesStress"" was not set to 1 or 2. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2156:682,failure,failures,682,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2156,2,['failure'],['failures']
Availability,"We can forward extra args to the python interpreter with the option `--argv`. ; This PR allows to do: ; ```comand; runSofa myscene.py --argv arg1,arg2,arg3; ```; instead of ; ```comand; runSofa myscene.py --argv arg1 --argv arg2 --argv arg3; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4591:791,failure,failures,791,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4591,2,['failure'],['failures']
Availability,"We check the values of Young's modulus and Poisson's ratio in the base class of all elastic FEM. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4853:641,failure,failures,641,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4853,2,['failure'],['failures']
Availability,"We got this error many times in the past, and I never had the chance to dig into the issue. There was actually two issues:. 1. SOFA was unable to find some GL extensions on Intel drivers with the Qt viewer while they were supposed to be there (they were correctly found when using the qglviewer); 2. When no extensions at all were found by Glew, SOFA tried to convert a null pointer to a std::string, which created a segmentation fault. This PR fixes both of these issues. It first make sure that the pointer returned by Glew isn't null before converting it to a std::string. It also asks Qt to enable deprecated functions, which are used by SOFA. In addition, I've removed the part of the Qt viewer that was forcing the environment variable `MESA_GL_VERSION_OVERRIDE` on Linux. I've also remove the error when this environment variable wasn't set with Intel driver (which was never the case because we were forcing it...) and added a warning instead (Qt viewer works fine on Intel drivers, maybe this was an old bug?). . Will most probably fix https://github.com/sofa-framework/sofa/issues/1567. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1690:12,error,error,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1690,5,"['error', 'failure', 'fault']","['error', 'failures', 'fault']"
Availability,We had some errors while compiling sofa 17.06 on macos with Apple LLVM 9.0.; This was caused by two oddly inlined functions. So here's a PR removing the inline declaration.; We hope it'll be useful. Cheers.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/444:12,error,errors,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/444,3,"['error', 'failure']","['errors', 'failures']"
Availability,We ran into some more compile errors on windows using MSVC 2015. libQGLViewer wouldn't compile without those missing headers. Here's a quick fix but you might want to update libQGLViewer to the latest version (2.7.0). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/461:30,error,errors,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/461,3,"['error', 'failure']","['errors', 'failures']"
Availability,We would like to get an Eigen sparse matrix wrapper (e.g. the one from Caribou plugin).; SOFA already contains such wrappers: EigenMatrix and EigenVector. Existing Eigen wrapper are also available in Caribou: it could be copied in SOFA (sofa.linearalgebra) to have this unique wrapper. Would you mind @jnbrunet ?. **TODO**; - What does the existing wrapper today? and What are the differences? → issue ??,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2474:187,avail,available,187,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2474,1,['avail'],['available']
Availability,"Welcome to v22.06 development phase. ![](https://media.giphy.com/media/W9lzJDwciz6bS/giphy.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2546:641,failure,failures,641,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2546,2,['failure'],['failures']
Availability,"When I configure the source sofa/src in cmake, the error is as:; ![Cmake_error](https://user-images.githubusercontent.com/22396672/93750818-b135a700-fc2e-11ea-996d-ac6cf1acb4df.png). CMake Error at CMakeLists.txt:121 (message):; Boost (1.54.0 or higher) is mandatory. Note that Boost autodetection on Windows was removed. Please follow CMake documentation to find Boost on your system. Hint: set BOOST_ROOT to your Boost location. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1494:51,error,error,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1494,2,"['Error', 'error']","['Error', 'error']"
Availability,When I have free time but cannot be concentrated I do trivial 'cleaning' changes resulting in this kind of PR where I replaced the std::cout by msg_info. CHANGELOG for @hugtalbot :; Trivial replacement of std::cout by msg_info; - [SofaUserInteraction] ; - [SofaValidation]; - [SofaVolumetricData]; - [SofaOpenGl]; - [SofaNonUniformFem]; - [SofaPython]; - [SofaSparseSolver]; - [SofaSphFluid]; - [SofaTopology]; - [SofaUserInteraction]. I also replaced this code pattern:; ```cpp; #ifndef NDEBUG; std::cout << blahblah; #endif; ```. into this pattern:; ```cpp; dmsg_info() << ; ....; ```; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/255:818,failure,failures,818,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/255,1,['failure'],['failures']
Availability,"When I try to compile SOFA (on Windows), I observed that apparently some part of the build system (CMake? Or some pre/post-build event) tries to create output folders in the `bin` subfolder of the CMake cache for all the different MSVC build configurations created by Cmake (i.e. Debug, MinSizeRel, Release, RelWithDebInfo), **but instead of creating folders generates some obscure binary files with the same name**. This seems to be ok for the first compilation, where MSVC seems to be faster than the faulty script. E.g. when starting with Debug, I do not see any issues, however after finishing that and trying to compile in Release, MSVC compiler complains that e.g. (same for all other targets). > Error	MSB3191	Unable to create directory ""E:\work\dev\SOFA\sofa\build\bin\Release\"". Cannot create ""E:\work\dev\SOFA\sofa\build\bin\Release"" because a file or directory with the same name already exists.	. until I manually remove this useless extra **""Release"" file** (which was meant to be a folder). ______________________________________________________. Suggested labels: bug (minor)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1331:503,fault,faulty,503,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1331,2,"['Error', 'fault']","['Error', 'faulty']"
Availability,"When a display flag is unknown, the closest existing flags are printed to help the user to fix the scene. Example:. ```; [WARNING] [DisplayFlags] Unknown token 'showForceField'. The closest existing flags are:; - showForceFields (96% match); - hideForceFields (75% match); - showInteractionForceFields (69% match); Complete list is: [""hideAdvancedRendering"", ""hideAll"", ""hideBehavior"", ""hideBehaviorModels"", ""hideBoundingCollisionModels"", ""hideCollision"", ""hideCollisionModels"", ""hideForceFields"", ""hideInteractionForceFields"", ""hideMapping"", ""hid; eMappings"", ""hideMechanicalMappings"", ""hideNormals"", ""hideOptions"", ""hideRendering"", ""hideRoot"", ""hideVisual"", ""hideVisualModels"", ""hideWireframe"", ""showAdvancedRendering"", ""showAll"", ""showBehavior"", ""showBehaviorModels"", ""showBound; ingCollisionModels"", ""showCollision"", ""showCollisionModels"", ""showForceFields"", ""showInteractionForceFields"", ""showMapping"", ""showMappings"", ""showMechanicalMappings"", ""showNormals"", ""showOptions"", ""showRendering"", ""showRoot"", ""showV; isual"", ""showVisualModels"", ""showWireframe""]; ```. For some reasons, `msg_error` does not print anything. I had to use `msg_warning`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3575:1695,failure,failures,1695,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3575,2,['failure'],['failures']
Availability,When a message does not have an 'suggestion' text then sofa will; crash. Because of Index out of bound.; This PR fix that.; Fixes #491 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/479:393,failure,failures,393,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/479,2,['failure'],['failures']
Availability,"When a plugin is loaded, the ObjectFactory is populated of Components from this plugin. However, when this plugin is ""unloaded"", it was still possible to create a component from the plugin. This PR detects that the ObjectFactory tries to instantiate an object that is from an unloaded plugin.; It is particularly useful when the initialization of the plugin fails (SofaCUDA for example). When the initialization fails, the plugin is unloaded.; A unit test is provided. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4722:1013,failure,failures,1013,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4722,2,['failure'],['failures']
Availability,"When a template parameter is not found in the list of the available templates:. ```; [WARNING] [CGLinearSolver(cGLinearSolver1)] Template 'CompressedRowSparseMatrix3d' cannot be found in the list of available templates [CompressedRowSparseMatrixMat2x2d, CompressedRowSparseMatrixMat3x3d, CompressedRowSparseMatrixMat4x4d, CompressedRowSparseMatrixMat6x6d, CompressedRowSparseMatrixMat8x8d, CompressedRowSparseMatrixd, FullMatrix, GraphScattered, NewMat, NewMatBand, NewMatSymmetric, NewMatSymmetricBand, SparseMatrix].; 	'GraphScattered' is used instead; ```. instead of. `[WARNING] [CGLinearSolver(cGLinearSolver1)] Template CompressedRowSparseMatrix3d incorrect, used GraphScattered`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2207:58,avail,available,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2207,4,"['avail', 'failure']","['available', 'failures']"
Availability,"When a texture cannot be loaded the OglModel will crash. This PR fix that. ; As the image loader are now ""optional"" through CImgPlugin. . NB: I cannot prevent myself to clean a bit the commented code because I; cannot do bug tracking in the middle of the mess. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/474:517,failure,failures,517,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/474,2,['failure'],['failures']
Availability,"When addChild, removeChild, addObject, removeObject etc. are public. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1470:325,failure,failures,325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1470,2,['failure'],['failures']
Availability,"When applying a filter when copying from a matrix to another, the matrix size was not appropriately set. The introduced unit test would fail without the fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4063:702,failure,failures,702,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4063,2,['failure'],['failures']
Availability,"When building runsofa (master version 16/01/18) it crash at runtime. > [INFO] [runSofa] No plugin will be automatically loaded; > - No custom list found at C:\sofaBuild\bin/bin/plugin_list.conf; > - No default list found at C:\sofaBuild\bin/bin/plugin_list.conf.default; > The constructor with a QGLFormat is deprecated, use the regular contructor instead.; > [ERROR] [FileRepository] File icons/back.png NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [ERROR] [FileRepository] File icons/home.png NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [ERROR] [BaseViewer] Could not create file 'C:/sofa/share/textures/SOFA_logo.bmp'; > Valid extensions: dds; > ; > [ERROR] [Image] Could not load image with extension png. Valid extensions: dds; > [ERROR] [OglModel(VisualBody)] couldn't create an image from file textures/snakeColorMap.png; > [ERROR] [OglModel(VisualBody)] 1 textures couldn't be loaded; > [ERROR] [FileRepository] File docs/runsofa.html NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [INFO] [SceneChecker] The 'APIVersion' directive is missing in the current scene. Switching to the default APIVersion level '17.06'; > [INFO] [SceneChecker] Validating node ''.; > Activate checkers:; > - SceneCheckAPIChange; > - SceneCheckDuplicatedName; > - SceneCheckMissingRequiredPlugin; > ; > [ERROR] [FileSystem::listDirectory()] C:\sofaBuild\bin/bin: error 3: Le chemin dÆaccÞs spÚcifiÚ est introuvable.; > ; > [ERROR] [FileSystem::listDirectory()] C:\sofaBuild\bin/bin: error 3: Le chemin dÆaccÞs spÚcifiÚ est introuvable. Plus, I had many troubles compiling it. I have to uncheck PSL (require SofaPython), but when SofaPython is checked there is many link problems. Finally, I both unchecked them. ______________________________________________________. Suggested labels: <!--- see https://github",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/561:361,ERROR,ERROR,361,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/561,5,['ERROR'],['ERROR']
Availability,"When compiling a project/plugin with c++17, it fails due to std::binder used in Sofa and Eigen. This functionality was depreciated in c++11 and was removed in c++17 (lambda expressions are now the cool way to do this). This PR removes the use of std::binder and, as a side effect, brings us closer to be able to compile Sofa with c++ > 11 if we wish to do some modern c++ someday :-) . Small note: The version of Eigen used in Sofa is a little bit old (2015)... Might be a good idea to add this in the Sofa's to do list. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/908:777,failure,failures,777,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/908,2,['failure'],['failures']
Availability,"When compiling image, you might now have an issue when updating since DiffusionSolver has been made a separate plugin. This PR provides a warning for the users. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1067:417,failure,failures,417,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1067,2,['failure'],['failures']
Availability,"When doing `make install`, the RPATH of the libraries is set to ""../lib:$ORIGIN/../lib:$$ORIGIN/../lib"", and does not include the path to its relocated dependencies:. ```; $ ./bin/runSofa; ./runSofa: error while loading shared libraries: libSofaValidation.so.1.0: cannot open shared object file: No such file or directory; ```. ```; $ find . -name libSofaValidation.so.1.0; ./plugins/SofaValidation/lib/libSofaValidation.so.1.0; ```. Same thing happen if we link our project to some of SOFA's core library:; ```; $ lddtree my_plugin.so; my_plugin.so; libSofaMisc.so.20.06.99 => /sofa/build/install/lib/../lib/libSofaMisc.so.20.06.99; libSofaMiscEngine.so.20.06.99 => /sofa/build/install/lib/../lib/../lib/libSofaMiscEngine.so.20.06.99; libSofaNonUniformFem.so.1.0 => not found; ```; and again.; ```; $ find . -name libSofaNonUniformFem.so.1.0; ./plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so.1.0; ```. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1395:200,error,error,200,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1395,1,['error'],['error']
Availability,"When doing `make install`, the installation fails for components SofaGuiQt et QGLViewer because the Qt ""plugins"" directory is not found. A more robust way to do it would be to query the path for each needed plugin (as in http://doc.qt.io/qt-5/cmake-manual.html), but I'm not sure which plugins are needed, or if their installation is really necessary (it is not, on my system). ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/794:144,robust,robust,144,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/794,1,['robust'],['robust']
Availability,"When new messages are received or the message log is clear the componentState is changed. ; This allows the GUI (or other component) to detect that the object has changed (because its message log grew up). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2397:752,failure,failures,752,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2397,2,['failure'],['failures']
Availability,"When reading https://github.com/sofa-framework/sofa/pull/2567, I did not understand immediately how to read:. ```cpp; typedef typename VecCoord::template rebind<TriangleInfo>::other VecTriangleInfo;; ```. I did not know this technique to rebind templates, as since C++11, it is possible to template an alias. So, instead of writing. ```cpp; template<class T2> struct rebind; {; typedef vector< T2,CPUMemoryManager<T2> > other;; };; ```; I propose to write:; ```cpp; template<class T2>; using rebind_to = vector< T2, CPUMemoryManager<T2> >;; ```. To define `VecTriangleInfo`, we would write:. ```cpp; using VecTriangleInfo = typename VecCoord::template rebind_to<TriangleInfo>;; ```. IMO, it is a bit more readable. But we can do better. I introduced convenience aliases in Rebind.h. With that, I can define `VecTriangleInfo` with:; ```cpp; using VecTriangleInfo = sofa::type::rebind_to<VecCoord, TriangleInfo>;; ```. `sofa::type::rebind_to` works with types having a `rebind_to` typedef (such that the one I introduced in vector_T.h), or on types having one template parameter. Useful links:. - https://stackoverflow.com/a/58789407; - https://rvarago.github.io/2020/10/28/rebinding-template-template-parameter.html. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2570:1760,failure,failures,1760,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2570,2,['failure'],['failures']
Availability,"When removing point, mass vector was not following the vertex buffer. Which is using swap + pop_back.; This bug could create negative mass during further element deletion. The bug is easy to see with a high mass density:; ![ezgif com-gif-maker(5)](https://user-images.githubusercontent.com/21199245/121010323-917ee880-c795-11eb-9a1e-270c925d845f.gif). After fix:; ![ezgif com-gif-maker(4)](https://user-images.githubusercontent.com/21199245/121010119-4bc22000-c795-11eb-97ca-405644d13cd0.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2164:1038,failure,failures,1038,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2164,2,['failure'],['failures']
Availability,When running : ```examples/Components/visualmodel/OglShader_tessellation.scn``` the scene is crashing due to the component ``` <OglShader>``` leading to the following segfault; ```########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); Segmentation fault (core dumped); ```,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3525:278,fault,fault,278,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3525,1,['fault'],['fault']
Availability,When running ```examples/Demos/caduceusOculus.scn``` the following error occurs. ```; [ERROR] [GLSLShader] ERROR: Compilation of Fragment shader failed:; [ERROR] [GLSLShader] From File: /home/arnaud/dev/sofa/build/install/share/sofa/shaders/phong.frag; [ERROR] [GLSLShader] 0:27(6): error: could not implicitly convert operands to relational operator; 0:27(6): error: LHS of `||' must be scalar boolean; 0:28(6): error: could not implicitly convert operands to relational operator; 0:28(6): error: LHS of `||' must be scalar boolean. [ERROR] [GLSLShader] SHADER compilation failed.; ```,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3530:67,error,error,67,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3530,10,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"When running a simulation where a node as some specified / set Data, the SimpleAPI does not allow to recover the information since the `m_isSet` data flag is not properly propagated. The problem arose in https://github.com/sofa-framework/sofa/pull/4910. Still digging into it, but it's some kind of blocking",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4911:101,recover,recover,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4911,1,['recover'],['recover']
Availability,"When setting a breakpoint with `pdb` in python, Sofa objects' attributes tend to arranged in a strange way. ; For instance, in the screenshot attached, I typed `obj.` + TAB to visualize the different methods/attributes available for `obj` where `obj` is a `Sofa.Node` object, and everything get mixed up in the terminal. Note: I tested with other native python classes and numpy objects, and everything is displayed fine in my terminal in those cases. <img width=""1214"" alt=""Screenshot 2020-05-08 at 12 13 39"" src=""https://user-images.githubusercontent.com/24277749/81396283-686cce00-9125-11ea-936b-34b66e67cfb2.png"">. ______________________________________________________. Suggested labels: bug (minor)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1374:219,avail,available,219,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1374,1,['avail'],['available']
Availability,"When size mismatche. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4060:565,failure,failures,565,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4060,2,['failure'],['failures']
Availability,"When sofa is compiled in debug mode, if the positions are initialized manually in the _position data attribute_ of the MechanicalObject, the later will always output an error stating that the position state vector contains a bad size. This message is called because the `MechanicalObject::init()` method calls `MechanicalObject::write(VecCoordId::position())` before setting the `vsize` member (with .`MechanicalObject::resize()`). One solution would be to first set the size accordingly to the _position data attribute_ of the MechanicalObject in the `MechanicalObject::init()` method before the `MechanicalObject::write()` is called. To reproduce the error, first compile Sofa in debug mode, and try with the following scene:; ```; <Node>; <MechanicalObject position=""0 0 -2.5 0 0 7.5 10 0 -2.5 10 0 7.5"" />; </Node>; ```; It should output something like:; `[WARNING] [MechanicalObject(mObject1)] Writing to State vector position(V_COORD) with incorrect size : 4 != 1`",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/344:169,error,error,169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/344,2,['error'],['error']
Availability,When solving constraints using a BaseConstraintCorrection component the function ; addComplianceInConstraintSpace compute the compliance matrix and add the contribution of the compliance matrix to the constraint solver matrix. . the goal is to split the computation of the compliance matrix (local for each deformable object) and the sum of the compliance matrix to the constraint solver (global) matrix in two different functions. - BaseConstraintCorrection::computeComplianceInConstraintSpace:; should be used to compute the compliance. This computation is independent and can be easily parallelized. - BaseConstraintCorrection::addComplianceInConstraintSpace:; should be used only to add the contribution of the compliance matrix to the constraint solver matrix. . This change is propagated to the LinearSolver class hierarchy because a ConstraintCorrection component might delegate the computation of the compliance matrix to the the LinearSolver. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/869:1208,failure,failures,1208,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/869,2,['failure'],['failures']
Availability,When the Data texcoord is not set using a Mesh file or using a Data link from another component no mechanism is present in VisualModel to compute default UV texcoord leading to incompatible buffer size between vertices and texcoords. This PR add a method to compute default texcoords using a sphere projection. Not perfect but at least create texcoords for volumique mesh with surface mapping. Here are some results examples:. ![liver-tetra2triangle_00000001](https://user-images.githubusercontent.com/21199245/52704903-ed4c5480-2f81-11e9-894d-e6d2f74291eb.png); ![liver-tetra2triangle_00000002](https://user-images.githubusercontent.com/21199245/52704905-ef161800-2f81-11e9-9c5f-4eccabe53085.png). Mesh sphere projection used:; ![liver-tetra2triangle_00000003](https://user-images.githubusercontent.com/21199245/52707910-1f14e980-2f89-11e9-9de5-23d0f899f1d7.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/933:1121,failure,failures,1121,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/933,2,['failure'],['failures']
Availability,When the parent folder of the output file of an OBJExporter does not exist : ; - a message is output like this one: [INFO] [OBJExporter(ObjExporter)] Exporting OBJ as: /path/to/my/mesh.obj; - no obj file is written. I think the user either expect : . 1. either to have an error/warning message instead of a success message; 2. or to have the parent folder(s) created properly (and silently or not) and the mesh file written as expected. I am in favor of 2. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/355:272,error,error,272,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/355,1,['error'],['error']
Availability,"When the plugin manager searches for a plugin, it will loop through the prefixes defined inside the PluginRepository, and append it the plugin name. If this file exists, it will be directly returned. Else, it will go recursively through each prefixes trying to find the file, which is inefficient and does not follow symbolic links. Especially since the prefixes contain large directories such as ""/usr/lib"". This PR adds two hard coded path to each prefixes which will help the plugin manager find common plugins usually located in _""$SOFA_ROOT/plugins/PLUGIN_NAME/lib/libPLUGIN_NAME.so""_ **just before** doing the recursive search. This should improve the speed for locating common plugins, and moreover allow some symbolic links to external plugins since the recursive search do not follow these links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1824:1350,failure,failures,1350,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1824,2,['failure'],['failures']
Availability,"When the scene `GlobalSystemMatrixExporter.scn` was moved, the CI settings were not moved. Because of that, it causes a timeout on Windows on the CI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2579:694,failure,failures,694,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2579,2,['failure'],['failures']
Availability,When the source path is from the root the path is empty.; This results in returning @ instead of @/; This fix it. This fix issue #375 ; This is a reviewer friendly version of #376 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/377:438,failure,failures,438,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/377,2,['failure'],['failures']
Availability,"When this is the case, it is impossible to access data of both components. - In the first place a warning could be issued when attempting to add two components with the same name; - In the end the should be an error, but this is a breaking change. I labeled it as a bug, it is rather a *design* issue. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/362:210,error,error,210,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/362,1,['error'],['error']
Availability,"When trying to compile in Debug mode:; - (GCC/Clang) a header is missing in RigidType; - (MSVC) same header is missing in two files in SofaEulerianFluid. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2223:698,failure,failures,698,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2223,2,['failure'],['failures']
Availability,"When trying to re-enable SofaCUDA on our Linux CI, I faced some namespace errors due to NG work.; Hope my fixes are good. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2935:74,error,errors,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2935,3,"['error', 'failure']","['errors', 'failures']"
Availability,"When trying to serialize / desserialize custom binary data structures (non-native / non-scalar Sofa types) as byte arrays from C++ to Python, PyString_FromStirng is called, which stops the input stream at the first \0 it encounters.; PyString_FromStringAndSize retrieves the full stream instead, which is more likely to be what we want here.; @damienmarchal could you tell me what you think of this?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/416:657,failure,failures,657,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/416,2,['failure'],['failures']
Availability,"When using Single with/without storepath the way a link should behave is ""unclear"" and inconsitant with multlink. A multilink of size 1 can contains a nullptr while a single link containing a nullptr has size zero (which has side effect on path attributes). Now the size of a SingleLink is either 0 or 1 and a link can contain either nullptr or a path. Said differently, a SingleLink with a path set now report a size of 1. To fix the bug it was needed to change the SinglePtr signature (which is breaking but as this is an internal feature of SingleLink should be problematic). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1749:1123,failure,failures,1123,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1749,2,['failure'],['failures']
Availability,"When your SOFA PR fails on CI somewhere in an external project, it may be because your change is breaking for that external project.; In that case, the best (and preferred) solution is that you push a fix in the external project so that when your PR is merged in SOFA, it does not fail on CI.; Here is the typical workflow for that use case. 1. You open a PR in SOFA (let's call it ""SOFA PR"").; 2. SOFA CI fails to build/test your SOFA PR because some external projects are enabled and you didn't enable them in your local tests.; 3. You realize that the failure is due to your changes.; 4. You fix the issue in the external project and open a PR (let's call it ""external PR"").; 5. You reference your external PR in the description of your SOFA PR with ; `[ci-depends-on https://github.com/<org>/<repo>/pull/<id>]`; 6. SOFA CI can now build/test your PR. It will automatically replace the external project with the ""result of the merge of your external PR"".; 7. As soon as SOFA CI is green and external PR is merged, your SOFA PR is ready to merge. This way, you do not need to touch any `ExternalProject.cmake` file in your SOFA PR :+1:. The only change in this PR consists in adding `GIT_CONFIG ""remote.origin.fetch=+refs/pull/*:refs/remotes/origin/pr/*""` to all ExternalProject.cmake files.; This change permits to have access to any commit in any pull-request (including merge commits). See [this nice cheatsheet about how to fetch PRs](https://gist.github.com/piscisaureus/3342247).; All other changes have been done [in CI scripts](https://github.com/sofa-framework/ci/blob/master/scripts/pre-builds.sh#L50-L124) and are ready to use. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1961:555,failure,failure,555,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1961,1,['failure'],['failure']
Availability,"While assisting people on GH Discussions noticed this issue from OglLabel . Example scene : `examples/Demos/rigidifiedSectionsInBeam.scn` ; Before fix:; ![](https://github.com/sofa-framework/sofa/assets/17544719/d903f7ee-bb9c-4225-aa8e-21c996d8e650). After fix:; ![rigidifiedSectionsInBeam_00000001](https://github.com/sofa-framework/sofa/assets/17544719/879ef541-cf58-4051-a8d2-5ec37f8d09dd). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4142:938,failure,failures,938,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4142,2,['failure'],['failures']
Availability,"While doing #3401 , I noticed that; ```; 11512 ms: std::set<sofa::core::objectmodel::Tag>::insert (688 times, avg 16 ms); ```; insert() from Tagset does not really require to be inlined, so I moved the two inline def into the associated cpp; Then:; ```; 3256 ms: std::set<sofa::core::objectmodel::Tag>::insert (209 times, avg 15 ms); ```; not extraordinary but _ca ne mange pas de pain_. Note that TagSet directly inherits from `std::set<Tag>` which is really not recommended... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3403:1023,failure,failures,1023,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3403,2,['failure'],['failures']
Availability,"While implementing a binding factory for Data types in SofaPython3, I realised there's no DataTypeName for the BoundingBox data type in Sofa... So here we have it. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1086:420,failure,failures,420,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1086,2,['failure'],['failures']
Availability,"While investigating the error in image/examples/distanceFieldFilter.scn (raised in #3329 for example),; Eigen3 was throwing an assertion in Debug (and surely throwing unexpected errors in Release). https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=ubuntu_clang,CI_PLUGINS=options,CI_TYPE=debug/3967/testReport/SceneTests/applications_plugins_image_examples/MeshToImageMultipleRoi_scn/; for an example of the dump on the CI. The problem was that if one wants to compute matrices ThinU & ThinV for Eigen::SVD, the given matrices need to be set with a dynamic size.; -> https://gitlab.com/libeigen/eigen/-/blob/3.4/Eigen/src/SVD/JacobiSVD.h#L640. So the solution are either:; - compute full V and full U and keep fixed size matrices; - or set the matrices dynamic and resize to 3x3. It appeared that this combination EigenSVD, ThinU/V and fixed-size matrices was used in PlasticMaterial (FEM.HyperElastic), TriangularFEMForceField (FEM.Elastic) and SVDLinearSolver (LinearSolver.Direct). \+ the use of SVD in MeshToImage was a little weird (doing it on matrix filled of Zeros). It appears that the code fillling the matrix did disappear while the code was converted from NewMat to Eigen3, so I restored it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3452:24,error,error,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3452,4,"['error', 'failure']","['error', 'errors', 'failures']"
Availability,"While making out-of-tree builds with SofaGLFW, which entrypoint is a a cmakelists with two add_sofa_something(), cmake is throwing this kind of error while reading the second project:; ```cmake; CMake Error at C:/Work/sofa/install/master_fredroy/lib/cmake/Sofa.DefaultType/Sofa.DefaultTypeConfig.cmake:44 (set_target_properties):; Attempt to promote imported target ""Sofa.DefaultType"" to global scope (by; setting IMPORTED_GLOBAL) which is not built in this directory.; ```; which appears (after some headaches) to be linked with the fact that the Sofa.DefaultTypeConfig is read twice and cmake tries to set a flag (imported global) on something which has already the flag, and more generally to do twice the job of aliasing. So this PR adds a test on the four ""legacy"" SofaFramework targets to only make aliases if it was not done before.; ; And for good measure, update the date for the removal of the aliases to v22.06. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2566:144,error,error,144,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2566,4,"['Error', 'error', 'failure']","['Error', 'error', 'failures']"
Availability,"While starting the lifecycle for v24.06, found some minor fixes of warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4529:621,failure,failures,621,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4529,2,['failure'],['failures']
Availability,"While trying to understand how forcefields work... I initially noticed that there was a bad handling of cases where `stiffness.size() != indices.size()` in the RestShapeSpringsForceField and tried to improve the overall error management on this component. I ended up doing the following changes:. - Call reinit() in bwdInit; - Using componentState to set the state to invalid when necessary (no stiffness set, out of bounds indices etc & check for component state in addForce / addDForce / addKToMatrix ..); - Improvement of warning messages (IMHO); - refactor code duplication; - remove warnings by changing int -> size_t for BaseMatrix::Index (got carried away here, sorry about that). **### BREAKING because:**. - Change in behavior in specific cases:. 1. empty stiffness vector: **Before:** setting arbitrary stiffness at 100.0 for all indices ; **Now:** msg_error & invalid state. ; 2. stiffness.size() != indices.size(): **Before:** applying stiffness[0] to all indices ; **Now:** ; ```py; if len(stiffness) > len(indices): ; crop(stiffness); else if len(stiffness) == 1:; stiffness.resize(len(indices), stiffness[0]); else if len(stiffness < len(indices):; ```; Generalized to angularStiffness on Rigids. - size_t in methods signature break API compatibility. I wouldn't call this component ""clean"" after those changes though, but it's a start. As stuff still to do to improve, I see:. - Using DataTrackers to call reinit() when necessary; - get rid of bwdInit by using componentState + datatrackers to reinit component; - remove those ugly getContext to retrieve the external mstate used for rest shape, by replacing them with a data or a link. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compat",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1103:220,error,error,220,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1103,1,['error'],['error']
Availability,While working in interactive mode the scenechecker is executed each time the file is reloaded. This is ; not really convenient.. Thus this fix. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/547:400,failure,failures,400,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/547,2,['failure'],['failures']
Availability,"With SofaNG now, the mandatory libs are neither plugin nor the deprecated ""module"" notion,. So while trying to configure SOFA for a minimum build (i.e no plugin) and without the compat layer (so no module), I stumbled in this error which was trying to generate the list of plugins/modules. ; There was no check on the list itself (as the empty modules/plugins could never have been empty before). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3069:226,error,error,226,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3069,3,"['error', 'failure']","['error', 'failures']"
Availability,"With runSofa and SceneChecking, `RequiredPlugin` is calling `loadPlugin()` twice; - once at the `parse()` step; - and a second time when `SceneCheckMissingRequiredPlugin` at the `init()` step. `SceneCheckMissingRequiredPlugin` browses all `RequiredPlugin` and checks each entry on `d_loadedPlugins`.; https://github.com/sofa-framework/sofa/blob/af8f98a668dee73e21fac19da31d181baf137a99/applications/projects/SceneChecking/src/SceneChecking/SceneCheckMissingRequiredPlugin.cpp#L144-L150; But `d_loadedPlugin`s is set dirty at parse() so calling `d_loadedPlugins.getValue()` will trigger an other `loadPlugin()`, because of the callback. So this PR forcefully sets `d_loadedPlugins` to **not dirty** but maybe there is a better solution.... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4509:1283,failure,failures,1283,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4509,2,['failure'],['failures']
Availability,With the purpose to override it in a child class in a plugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1444:318,failure,failures,318,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1444,2,['failure'],['failures']
Availability,With this PR you can `find_package(CImgPlugin)` in an other cmake project. Quite useful since this plugin is indeed part of the *core*. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/544:392,failure,failures,392,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/544,2,['failure'],['failures']
Availability,"With this PR, I suggest to return barycentric coords to the detection output members. In my use case , these coordinates are used in cutting simulation to create new vertices from ancestor points when propagating a cut.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4226:765,failure,failures,765,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4226,2,['failure'],['failures']
Availability,"With this PR, `sofa::gpu::cuda::init()` can be called from outside. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4453:612,failure,failures,612,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4453,2,['failure'],['failures']
Availability,"With:; - guidelines,; - symbols export (for Windows); - example of mandatory dep and optional dep in Cmake; - cleaning (pragma/nested namespace); - updated init (with data from CMake); - installable (and usable as dep); - add test mechanism (with BaseTest); - Readme as markdown. Remove useless python files. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1356:565,failure,failures,565,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1356,2,['failure'],['failures']
Availability,Work done further to a doc update:; - example scene of Newmark solver is improved; - example scene for the PointsFromIndices engine is added; - clean Newmark c++ code. FYI doc is [here](https://www.sofa-framework.org/community/doc/components/integrationscheme/newmarkimplicitsolver/); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1398:541,failure,failures,541,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1398,2,['failure'],['failures']
Availability,Work of clean further to PR #625 on WriteState and also done for ReadState with:; - check on all data at init and remove unused data; - export with msg; - add tests. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/714:422,failure,failures,422,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/714,2,['failure'],['failures']
Availability,"Working with the changes from #4273 made me realize that we lack user insights. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4310:624,failure,failures,624,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4310,2,['failure'],['failures']
Availability,"Write access (copy-less), the data counter is updated after the 'with' block; with c.position.writeable() as w:; o = numpy.ones((len(c.position), 3))) ; w += o ; w *= 2.0; ```. Wrap around types (copy-less) to typify the data fields on demand; ```python; # syntax 1; c = o.showColor.as(RGBAColor); # syntax 2; c = RGBAColor(o.showColor); c.setFromHSC(1,2,3); c.setFromHSV(1,2,3); ```. Implement your own ForceField in python:; ```python; class MyForceField(Sofa.Core.BaseForceField):; def __init__(self, *args, **kwargs):; Sofa.Core.BaseForceField.__init__(self, *args, **kwargs); ; def init(self):; self.refx = self.position.toarray().copy(). def addForce(self, m, f, x, v):; n = numpy.ones((len(self.position),1)); f = (self.refx-x) * 2 + n; ```; ; To test the binding you need to de-activate SofaPython and activate SofaPython3. ; Then; - runSimu.py to launch a sofa simulation from the command line eg: ; python3 runSimu.py mySimulation.py; - or runSofa. . General guidelines:; - Fix existing API consistency issues; - Improve the performance of the binding by supporting supporting the different python protocols (sequence, buffer+memoryview, copy-less mechanism).; - unified data access and API.; - implementation is currently done with pybind11 and cython.; - modular design. About the tools we use: ; - pybind because it is very consistent with our code base ; - cython becaues it is much more powerful and general and so we can accelerate python code by un-warping the warped object in other part of the code base. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/771:2505,failure,failures,2505,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/771,2,['failure'],['failures']
Availability,"[""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collision.Geometry""]; [ERROR] [SofaRuntime] ValueError: Object type BackgroundSetting<> was not created; The object is not in the factory.; This component has been MOVED from SofaBaseVisual to Sofa.Component.UserInterface.ConfigurationSetting since SOFA v22.06.; To continue using this component you may need to update your scene by adding. Traceback (most recent call last):; File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 435, in; env.reset(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 380, in reset; super().reset(); File ""/home/sofa/SOFA/v22.06.0",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:5197,ERROR,ERROR,5197,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,[ALL] FIX all scenes failures 17.12,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/565:21,failure,failures,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/565,1,['failure'],['failures']
Availability,[All] FIX a bunch of static-analysis errors (cppcheck),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/782:37,error,errors,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/782,1,['error'],['errors']
Availability,[All] Fix example scenes showing warnings or errors,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3526:45,error,errors,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3526,1,['error'],['errors']
Availability,[All] Overridden 'canCreate' methods should always log an error message when they fail,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1294:58,error,error,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1294,1,['error'],['error']
Availability,[All] uniformize epsilons in Sofa framework fix issues 799 #STC7 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1049:323,failure,failures,323,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1049,2,['failure'],['failures']
Availability,"[BeamAdapter](https://github.com/sofa-framework/beamadapter/) shall now be fetchable from SOFA CMake configuration. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2890:660,failure,failures,660,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2890,2,['failure'],['failures']
Availability,[Build] FIX Sofa installation failure (tries to install non-existing files),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/470:30,failure,failure,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/470,1,['failure'],['failure']
Availability,[CGALPlugin] FIX build error with CGAL > 4.9.1,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/515:23,error,error,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/515,1,['error'],['error']
Availability,[CGAL] Fix compilation errors related to SOFA.GL and types converted to DataTypes,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2065:23,error,errors,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2065,1,['error'],['errors']
Availability,[CI] FIX wget certificate error,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/236:26,error,error,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/236,1,['error'],['error']
Availability,[CI] Replace 'make' by 'ninja' when available.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/141:36,avail,available,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/141,1,['avail'],['available']
Availability,[CMake] use ccache if available,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/692:22,avail,available,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/692,1,['avail'],['available']
Availability,[Collision] Optimization: it prevents the normals of the triangles to be recomputed everytime a topological change happens.; The normals of the triangles are computed only once after all the topology changes occur (on the topology::ENDING_EVENT). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/839:503,failure,failures,503,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/839,2,['failure'],['failures']
Availability,[Core] Convert warning to error in object factory,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3404:26,error,error,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404,1,['error'],['error']
Availability,[Core] Replace non-utf8 chars by special char with error message,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4900:51,error,error,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4900,1,['error'],['error']
Availability,[ERROR] [Node(visualNode)] Component 'Visual' of type 'OglModel' failed,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3614:1,ERROR,ERROR,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3614,1,['ERROR'],['ERROR']
Availability,[ERROR] [PluginManager] Plugin loading failed (/home/dou/Downloads/SOFA_robosoft2022_python-3.9_Linux/plugins/SofaPython3/lib/libSofaPython3.so): libpython3.9.so.1.0: cannot open shared object file: No such file or directory,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3192:1,ERROR,ERROR,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3192,2,"['Down', 'ERROR']","['Downloads', 'ERROR']"
Availability,"[ERROR] [WireRestShape(catheterRestShape)] EdgeSetController has no binding EdgeSetTopologyModifier.; import sys; import Sofa. def createScene(rootNode):. rootNode.addObject('RequiredPlugin', pluginName='BeamAdapter SofaMeshCollision SofaBoundaryCondition SofaConstraint SofaMiscCollision SofaDeformable SofaGeneralLinearSolver SofaImplicitOdeSolver'); rootNode.addObject('VisualStyle', displayFlags='hideVisualModels hideBehaviorModels showCollisionModels hideMappings showInteractionForceFields'). rootNode.addObject('FreeMotionAnimationLoop'); rootNode.addObject('DefaultVisualManagerLoop'). rootNode.addObject('LCPConstraintSolver', mu='0.1', tolerance='1e-10', maxIt='1000', build_lcp='false'); rootNode.addObject('DefaultPipeline', draw='0', depth='6', verbose='1'); rootNode.addObject('BruteForceBroadPhase', name='N2'); rootNode.addObject('BVHNarrowPhase'); rootNode.addObject('LocalMinDistance', contactDistance='1', alarmDistance='5', name='localmindistance', angleCone='0.02'); rootNode.addObject('DefaultContactManager', name='Response', response='FrictionContact'). topoLines_cath = rootNode.addChild('EdgeTopology'); topoLines_cath.addObject('WireRestShape',name='catheterRestShape',; straightLength=600.0, length=1000.0,; numEdges=200, youngModulus=12000,; spireDiameter=1000, numEdgesCollis=[50, 10],; printLog=True, template='Rigid3d', spireHeight=0.0,; densityOfBeams=[30, 10], youngModulusExtremity=12000); topoLines_cath.addObject('EdgeSetTopologyContainer', name='meshLinesCath'); topoLines_cath.addObject('EdgeSetGeometryAlgorithms', name='GeomAlgo', template='Rigid3d'); topoLines_cath.addObject('MechanicalObject', template='Rigid3d', name='dofTopo'). CatheterMechanics = rootNode.addChild('CatheterModel'); CatheterMechanics.addObject('EulerImplicitSolver', rayleighStiffness=0.2, rayleighMass=0.1, printLog='false'); CatheterMechanics.addObject('BTDLinearSolver',verification=False, subpartSolve=False, verbose=False); CatheterMechanics.addObject('RegularGridTopology', name=",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3463:1,ERROR,ERROR,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3463,2,"['ERROR', 'toler']","['ERROR', 'tolerance']"
Availability,[FEM.Elastic] Fix typo in error message,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4062:26,error,error,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4062,1,['error'],['error']
Availability,[GLSLShader] ERROR: Compilation of Fragment shader failed,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3530:13,ERROR,ERROR,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3530,1,['ERROR'],['ERROR']
Availability,[GUI.Qt] Notice user a new version is available,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4648:38,avail,available,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4648,1,['avail'],['available']
Availability,[GUI] Improve Error Handling in createPerformer,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4880:14,Error,Error,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4880,1,['Error'],['Error']
Availability,[Geomagic] FIX compilation error in Geomagic plugin with removal of SOFA_FLOAT/DOUBLE,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/898:27,error,error,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/898,1,['error'],['error']
Availability,[Geomagic] Update GeomagicDriver.cpp to fire error when hd.h is not found,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4576:45,error,error,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4576,1,['error'],['error']
Availability,[HeadlessRecorder] Handle errors in target config,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/608:26,error,errors,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/608,1,['error'],['errors']
Availability,[Helper] Deprecate error-prone resize and add emplace_back,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3373:19,error,error-prone,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3373,1,['error'],['error-prone']
Availability,"[Here](https://github.com/sofa-framework/sofa/blob/33690ee02117a875f4332996932a327736d6d7ea/applications/projects/runSofa/Main.cpp#L323). The single quote mark is LEFT SINGLE QUOTATION MARK U+2018, which causes error in my compiler(VS2015). ; It's better to use APOSTROPHE U+0027. Error:; ```; 73>sofa\sofa\v16.12\src\applications\projects\runSofa\Main.cpp(316): error C3688: invalid literal suffix '鈥for'; literal operator or literal operator template 'operator """"鈥for' not found; 73>sofa\sofa\v16.12\src\applications\projects\runSofa\Main.cpp(316): error C2146: syntax error: missing ';' before identifier '鈥'; 73>sofa\sofa\v16.12\src\applications\projects\runSofa\Main.cpp(316): error C2065: '鈥': undeclared identifier; 73>sofa\sofa\v16.12\src\applications\projects\runSofa\Main.cpp(316): error C2065: 'formatting鈥': undeclared identifier; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/323:211,error,error,211,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/323,7,"['Error', 'error']","['Error', 'error']"
Availability,[How-to] Error with SOFA_*_API,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1670:9,Error,Error,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1670,1,['Error'],['Error']
Availability,[INFO] Error while compiling AdvancedTimer with Visual Studio 2015,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/420:7,Error,Error,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/420,1,['Error'],['Error']
Availability,[IO.Mesh] More debug info in the error message in MeshSTLLoader,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3949:33,error,error,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3949,1,['error'],['error']
Availability,[LinearAlgebra] Robustify accesses to empty matrices,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4236:16,Robust,Robustify,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4236,1,['Robust'],['Robustify']
Availability,[LinearAlgebra] Trigger error on the Eigen version,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4630:24,error,error,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4630,1,['error'],['error']
Availability,[LinearSolver.Direct] More details in error message,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4060:38,error,error,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4060,1,['error'],['error']
Availability,[LinearSystem.Direct] More details in the error message,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3985:42,error,error,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3985,1,['error'],['error']
Availability,[MSVC/Windows] Generation error about exceeding path limit,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1716:26,error,error,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1716,1,['error'],['error']
Availability,[MeshGmsh]Fixed false error detection in MeshGmsh.cpp file,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3030:22,error,error,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3030,1,['error'],['error']
Availability,[Modeler] FIX link error on Windows,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1282:19,error,error,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1282,1,['error'],['error']
Availability,[MultiThreading] ParallelBruteForceBroadPhase: Fix assertion error,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3574:61,error,error,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3574,1,['error'],['error']
Availability,[MultiThreading] TaskScheduler Interface. Decompose the TaskScheduler in an abstract class and a default implementation.; DefaultTaskScheduler provides a default implementation of the TaskScheduler interface. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/774:465,failure,failures,465,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/774,2,['failure'],['failures']
Availability,[MultiThreading] TaskScheduler Interface. Decompose the TaskScheduler in an abstract class and a default implementation.; TaskSchedulerDefault class provides a default implementation of the TaskScheduler interface. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/775:471,failure,failures,471,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/775,2,['failure'],['failures']
Availability,[Multithreading] FIX compiling error on Mac,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/727:31,error,error,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/727,1,['error'],['error']
Availability,"[Plugin list](https://github.com/sofa-framework/sofa/wiki/Supported-SOFA-plugins) is now completed.; Plugins with their own repo:; - [SofaMatrix](https://github.com/sofa-framework/SofaMatrix); - [SofaCarving](https://github.com/sofa-framework/SofaCarving); - [image](https://github.com/sofa-framework/image); - [CImgPlugin](https://github.com/sofa-framework/CImgPlugin); - [DiffusionSolver](https://github.com/sofa-framework/DiffusionSolver); - [ArticulatedSystemPlugin](https://github.com/sofa-framework/ArticulatedSystemPlugin); - [BulletCollisionDetection](https://github.com/sofa-framework/BulletCollisionDetection); - [SofaAssimp](https://github.com/sofa-framework/SofaAssimp); - [SofaHAPI](https://github.com/sofa-framework/SofaHAPI); - [PersistentContact](https://github.com/sofa-framework/PersistentContact); - [SofaNewMat](https://github.com/sofa-framework/SofaNewMat); - [SofaPardisoSolver](https://github.com/sofa-framework/SofaPardisoSolver); - [SofaSimpleGui](https://github.com/sofa-framework/SofaSimpleGui); - [VolumetricRendering](https://github.com/sofa-framework/VolumetricRendering); - [SofaEulerianFluid](https://github.com/sofa-framework/SofaEulerianFluid); - [SofaImplicitField](https://github.com/sofa-framework/SofaImplicitField). Related to #1442 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4589:1818,failure,failures,1818,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4589,2,['failure'],['failures']
Availability,[S.C.Topology.Container.Dynamic] Fix assert error in QuadSetTopologyContainer,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2990:44,error,error,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2990,1,['error'],['error']
Availability,[SOFACUDA]: Generating Error,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3808:23,Error,Error,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3808,1,['Error'],['Error']
Availability,[SceneCreator] FIX build error with AppleClang 6.0.0.6000051,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/483:25,error,error,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/483,1,['error'],['error']
Availability,"[See ComponentState Diagram here](https://imgur.com/a/qylPAWX). This PR sets up a Component State Checking mechanism that allows to know if a call to init / reinit is necessary, and whether or not the component took into account any change applied to its data fields. The idea is that Each component's state can be:; - **Unspecified**: The component has just been created, init has not been called; - **Valid**: The component is ready to be used, and should behave as expected; - **Dirty**: The component is ready to be used, but requires a call to reinit() to update some of its datafields.; - **invalid**:; 1. An error happened during init, reinit or any of the methods called during the simulation step. A call to reinit might fix it; 2. A call to reinit has been made, but the method is improperly implemented, such as one or more Data field has not been updated (call to getValue / updateIfDirty etc...). Because I don't trust programmes to implement the mechanism in their own components, and because it would require all already-implemented component to perform checks in order to get a consistent idea of what's happening, I decided to (try to) embed the state setting mechanisms inside the simulation:. - **setDirtyValue()** on a data sets the dirty state on its owner; - **cleanDirty()** on a data looks at all its owner's data fields and if they're all clean, sets the Valid state on it; - **initVisitor() / init / bwdInit python binding** uses the MessageHandler API to verify that no msg_error has been triggered, and sets either the Valid or Invalid state on the component; - **reinit pythonBinding / the Qt GUI's ModifyObject** calls reinit, and that call is wrapped the same MessageHandling mechanism to set or unset the Valid / Invalid flag. _**LIMITATIONS**_; There is a weak link in this approach:; reinit() will NOT unset the Invalid flag from a component if it is called from elsewhere than the GUI's ModifyObject api. This can happen often: when calling reinit from a c++ program",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/823:615,error,error,615,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/823,1,['error'],['error']
Availability,[Sensable] Fix compilation error when using a const context node for the creation of the visual node,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/22:27,error,error,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/22,1,['error'],['error']
Availability,[Simulation.Common] Fix downstream project compilation with tinyXML2,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4506:24,down,downstream,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4506,1,['down'],['downstream']
Availability,[Simulation] Error when trying to load a non-existing file,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3677:13,Error,Error,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3677,1,['Error'],['Error']
Availability,[SofaBaseTopology] Clearer error message,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2638:27,error,error,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2638,1,['error'],['error']
Availability,[SofaBaseTopology] Fix ambiguity causing compilation error with MSVC,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1577:53,error,error,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1577,1,['error'],['error']
Availability,[SofaCUDA] Compilation error fix (CudaStandardTetrahedralFEMForceField.cu),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/991:23,error,error,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/991,1,['error'],['error']
Availability,[SofaCUDA] Fix symbol definition at run time and compilation error,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2634:61,error,error,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2634,1,['error'],['error']
Availability,[SofaCUDA] Redundant namespace,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2538:11,Redundant,Redundant,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2538,1,['Redundant'],['Redundant']
Availability,[SofaCore] Fix potential memory failure on TopologyData Add method,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2459:32,failure,failure,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2459,1,['failure'],['failure']
Availability,[SofaCuda] FIX linking error : needed the code of the destructor,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2708:23,error,error,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2708,1,['error'],['error']
Availability,[SofaDefaultType][SofaCUDA] FIX compilation errors,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1761:44,error,errors,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1761,1,['error'],['errors']
Availability,[SofaGraphComponent] FIX Fix suggested by SceneChecker contains an error,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/573:67,error,error,67,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/573,1,['error'],['error']
Availability,[SofaGuiQt] Error handling when exporting graph,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2771:12,Error,Error,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2771,1,['Error'],['Error']
Availability,[SofaGui] No GUI available on Ubuntu,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3006:17,avail,available,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3006,1,['avail'],['available']
Availability,[SofaHelper] Add the obj id to labels when available,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1256:43,avail,available,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1256,1,['avail'],['available']
Availability,[SofaHelper] Fix out of bounds error,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1868:31,error,error,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1868,1,['error'],['error']
Availability,[SofaHelper] More robust method to test end of string,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/617:18,robust,robust,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/617,1,['robust'],['robust']
Availability,[SofaHelper] Throw a compilation error if using AdvancedTimer end(Node*),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1774:33,error,error,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1774,1,['error'],['error']
Availability,[SofaKernel] Factorize some code for maintenance,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1569:37,mainten,maintenance,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1569,1,['mainten'],['maintenance']
Availability,[SofaKernel] Fix compilation errors when working with transform class,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/506:29,error,errors,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/506,1,['error'],['errors']
Availability,[SofaKernel] Fix error in MapperHexahedron and MapperQuad barycentric coef computation,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1057:17,error,error,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1057,1,['error'],['error']
Availability,[SofaKernel] Fix the Filemonitor_test random failure on MacOs,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/143:45,failure,failure,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/143,1,['failure'],['failure']
Availability,[SofaKernel] Improve File:line info in error message (for python and xml error reporting),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/314:39,error,error,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/314,2,['error'],['error']
Availability,[SofaKernel] Improve error message when a component cannot be created.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1332:21,error,error,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1332,1,['error'],['error']
Availability,[SofaKernel] Write template list in error message,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2207:36,error,error,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2207,1,['error'],['error']
Availability,[SofaKernel] re-open PR #330 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/332:287,failure,failures,287,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/332,2,['failure'],['failures']
Availability,[SofaLoader] Change error into warning in MeshVTKLoader,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1037:20,error,error,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1037,1,['error'],['error']
Availability,[SofaMiscForceField] Fix error while trying to compile a plugin depending on SofaGuiQt,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2707:25,error,error,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2707,1,['error'],['error']
Availability,[SofaPreconditioner] Introduce a scene for each available preconditioner,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2492:48,avail,available,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2492,1,['avail'],['available']
Availability,[SofaPython] FIX error in script for plotting advancedTimer output,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/519:17,error,error,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/519,1,['error'],['error']
Availability,[SofaPython] Make cython available as an plugin.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/176:25,avail,available,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/176,1,['avail'],['available']
Availability,[SofaPython] proper error handling,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/156:20,error,error,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/156,1,['error'],['error']
Availability,[SofaSparseSolver] Fix compilation error due to namespace change,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2543:35,error,error,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2543,1,['error'],['error']
Availability,[SofaTest] ADD a PrintTo method so test failure shows human readable informations.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/730:40,failure,failure,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/730,1,['failure'],['failure']
Availability,[SofaTest] repair the minor API breaks introduced by PR #213,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/269:11,repair,repair,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/269,1,['repair'],['repair']
Availability,[SofaTest] sofa errors do not generate gtest errors,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/211:16,error,errors,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/211,2,['error'],['errors']
Availability,[SolidMechanics] TetrahedronFEMForceField: adds error message for Poisson's ratio,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2908:48,error,error,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2908,1,['error'],['error']
Availability,[Topology.Container.Grid] RegularGrid: Fix rounding errors with SReal=float,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3636:52,error,errors,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3636,1,['error'],['errors']
Availability,[WIP]; - I try to figure out how to fix the issue : https://github.com/sofa-framework/sofa/issues/561. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/564:359,failure,failures,359,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/564,2,['failure'],['failures']
Availability,[all] Avoid redundant printLog check,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2102:12,redundant,redundant,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2102,1,['redundant'],['redundant']
Availability,[all] Simple robustification,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3685:13,robust,robustification,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3685,1,['robust'],['robustification']
Availability,[all] Unifying the way we report file related errors,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/197:46,error,errors,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/197,2,['error'],['errors']
Availability,[all] Various small changes in error messages & bugfix from defrost branches,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/660:31,error,error,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/660,1,['error'],['error']
Availability,[all] promote deprecation messages as error,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1643:38,error,error,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1643,1,['error'],['error']
Availability,[all] template alias sptr for downsizing the include graph,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/436:30,down,downsizing,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/436,1,['down'],['downsizing']
Availability,"[ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/106]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4651:621,failure,failures,621,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4651,2,['failure'],['failures']
Availability,"[ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/145]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5070:621,failure,failures,621,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5070,2,['failure'],['failures']
Availability,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/22]. - One existing scene is added to the list of regression tests (`Components/forcefield/TetrahedronFEMForceField_plasticity.scn`); - One scene is introduced (`Components/forcefield/TetrahedronFEMForceField_assemble.scn`) so it is also added to the regression tests. The scene is the same than `Components/forcefield/TetrahedronFEMForceField.scn` except that the data `computeGlobalMatrix` from `TetrahedronFEMForceField` is set to `true`. Only methods `large` and `small` are introduced. The others don't support `computeGlobalMatrix=true`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2540:1153,failure,failures,1153,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2540,2,['failure'],['failures']
Availability,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/26]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3035:614,failure,failures,614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3035,2,['failure'],['failures']
Availability,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/35]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3326:614,failure,failures,614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3326,2,['failure'],['failures']
Availability,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/37]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3367:614,failure,failures,614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3367,2,['failure'],['failures']
Availability,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/41]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3757:614,failure,failures,614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3757,2,['failure'],['failures']
Availability,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/43]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3756:614,failure,failures,614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3756,2,['failure'],['failures']
Availability,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/56]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/125]. This PR is based on [PR #56](https://github.com/sofa-framework/Regression/pull/56) of Regression. . This PR fixes the problem of running regression tests in plugins when their references are inside of the plugin and not Regression (e.g. BeamAdapter). The idea is to have a stand alone `*.regression.tests` file that also includes the relative path of the reference folder. This is meant to be placed at the top of the reference file in a relative manne. This allows two things : ; 1. Having a stand alone file ease the process of finding the reference folder for any new comer; 2. Having a stand alone file ease the process of automatizing the retrieval of new regression test along with their reference folder without the need of modifying anything in the CI script. . Tested on my side : only two remaining regression test failing from SofaSPH. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4420:1533,failure,failures,1533,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4420,2,['failure'],['failures']
Availability,"[ci-depends-on https://github.com/sofa-framework/ShapeMatchingPlugin/pull/1]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4106:622,failure,failures,622,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106,2,['failure'],['failures']
Availability,"[ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/309]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402:616,failure,failures,616,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402,2,['failure'],['failures']
Availability,[cmake] Remove error in Findcxxopt,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4554:15,error,error,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4554,1,['error'],['error']
Availability,[examples] Fix scenes errors and crashes,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/505:22,error,errors,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/505,1,['error'],['errors']
Availability,[runSofa] Fix CMake error if all plugins are disabled,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3069:20,error,error,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3069,1,['error'],['error']
Availability,[runSofa] OpenGL performance droped down after release 18.12,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1070:36,down,down,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1070,1,['down'],['down']
Availability,[runSofa] error in caduceus.scn sofa scene.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/571:10,error,error,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/571,1,['error'],['error']
Availability,"] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```; Which indicates tthat the same loader is loading the file multiple times. With the PR it now gives:; ```; INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```. Depends on PR #2200 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2201:2078,failure,failures,2078,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2201,2,['failure'],['failures']
Availability,"] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collision.Geometry""]; [ERROR] [SofaRuntime] ValueError: Object type BackgroundSetting<> was not created; The object is not in the factory.; This component has been MOVED from SofaBaseVisual to Sofa.Component.UserInterface.ConfigurationSetting since SOFA v22.06.; To continue using this component you may need to update your scene by adding. Traceback (most recent call last):; File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 435, in; env.reset(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 380, in reset; super().reset(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/base.py"", line 147, in reset; self._init_sim(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 216, in _init_sim; super()._init_sim()",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:5409,ERROR,ERROR,5409,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"_____________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4525:535,failure,failures,535,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4525,2,['failure'],['failures']
Availability,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3344:544,failure,failures,544,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3344,562,['failure'],['failures']
Availability,______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/340:256,failure,failures,256,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/340,86,['failure'],['failures']
Availability,______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] do generate LESS warnings.; - [x] do generate LESS unit test failures.; - [x] do generate LESS scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/548:246,failure,failures,246,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/548,2,['failure'],['failures']
Availability,______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/207:230,failure,failures,230,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/207,1,['failure'],['failures']
Availability,______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/826:256,failure,failures,256,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/826,2,['failure'],['failures']
Availability,______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/399:256,failure,failures,256,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/399,12,['failure'],['failures']
Availability,"__set_python_directory__ was writing a ""hard-coded"" _CMAKE_CURRENT_SOURCE_DIR/python_ path in _etc/sofa/python.d/_ instead of the provided path. ; So if your python code was located in, say, _<plugin_dir>/src/python_ instead of _<plugin_dir>/python_ the macro would write an invalid path. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/763:545,failure,failures,545,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/763,2,['failure'],['failures']
Availability,"_init__(self, *args, **kwargs); self.forceMagnitude = 0; self.createGraph(node); self.root = node. def createGraph(self, rootNode):; rootNode.addObject('DefaultAnimationLoop'); rootNode.addObject('DefaultVisualManagerLoop'); rootNode.addObject('VisualStyle', name=""visualStyle"", displayFlags=""showBehaviorModels showForceFields""); ; self.static = rootNode.addChild('StaticBeam', activated=True); self.static.addObject('MeshGmshLoader', name='loader', filename='circle.msh'); self.static.addObject('MeshTopology', name='TriangleTopo', src='@loader'); self.static.addObject('EdgeSetGeometryAlgorithms', name='TriangleTopo', src='@loader'); self.MO_static = self.static.addObject('MechanicalObject', name='DOFs', template='Vec3d', src='@loader'); self.static.addObject('StaticSolver', name='ODE', newton_iterations=""10"", printLog=True); self.static.addObject('SparseLDLSolver', name='LDL', template=""CompressedRowSparseMatrixMat3x3d""); # self.static.addObject('CGLinearSolver', name='linear solver', iterations=200, tolerance=1e-08, threshold=1e-08); self.static.addObject('TriangularFEMForceFieldOptim', youngModulus='200', poissonRatio='0.3'); self.static.addObject('BoxROI', name='ROI', box='-0.2 -0.2 -0.2 0.2 0.2 0.2'); self.static.addObject('FixedConstraint', indices='118 119'); self.static.addObject('BoxROI', name='ROI2', box='0.9 -0.2 -0.1 1.1 0.2 0.1'); self.CFF_static = self.static.addObject('ConstantForceField', indices=""@ROI2.indices"", force=""0 0 0"", showArrowSize=0.05). self.dynamic = rootNode.addChild('DynamicBeam', activated=True); self.dynamic.addObject('MeshGmshLoader', name='loader', filename='circle.msh'); self.dynamic.addObject('MeshTopology', name='TriangleTopo', src='@loader'); self.MO_dynamic = self.dynamic.addObject('MechanicalObject', name='DOFs', template='Vec3d', src='@loader'); self.dynamic.addObject('UniformMass', name='mass', totalMass = 0.000001); self.dynamic.addObject('EulerImplicitSolver', name='ODE'); self.dynamic.addObject('SparseLDLSolver', name='LDL',",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4051:1440,toler,tolerance,1440,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4051,1,['toler'],['tolerance']
Availability,"` EIGEN3_VERSION` needed a `find_package` on Eigen before being used.; `target_link_libraries(${PROJECT_NAME} PUBLIC OpenMP::OpenMP_CXX)` is called twice, and the first time it's too early because the target is not defined yet. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2669:772,failure,failures,772,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2669,2,['failure'],['failures']
Availability,"`#pragma once` in a cpp file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1969:574,failure,failures,574,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1969,2,['failure'],['failures']
Availability,`${CMAKE_BINARY_DIR}/bin/$<CONFIG>/` does not exist if using MSVC without Visual Studio IDE. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/451:349,failure,failures,349,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/451,2,['failure'],['failures']
Availability,"`BoxStiffSpringForceField` was a force field, deriving from `StiffSpringForceField`. Its only difference is in the `init()` step, where there is a matching of pairs of points, based on the minimal distances. This behavior could be achieved with a `StiffSpringForceField` along with components which the goal is to compute the matching of pairs of points. This is done with 2 `BoxROI` and a `NearestPointROI`.; Therefore, `BoxStiffSpringForceField` is now a simple `BaseObject` that instantiates a pack of components that mimics the previous behavior. Based on:; - https://github.com/sofa-framework/sofa/pull/2595; - https://github.com/sofa-framework/sofa/pull/2620. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2621:1210,failure,failures,1210,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2621,2,['failure'],['failures']
Availability,"`BroadPhaseDetection` and `NarrowPhaseDetection` classes did not have any source files. The class member functions were defined in the header file.; I created the associated cpp files and moved the definitions into them.; I also added the symbol exports. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041:799,failure,failures,799,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041,2,['failure'],['failures']
Availability,"`CGLinearSolver::init()` did not call `init()` of its base class. The result is that the check of the required Data, which is in `BaseObject::init()`, is never called. `CGLinearSolver` has required Data, therefore the error never triggered when one of the required Data was not set. [ci-depends-on https://github.com/sofa-framework/Compliant/pull/4]; [ci-depends-on https://github.com/sofa-framework/Flexible/pull/3]; [ci-depends-on https://github.com/sofa-framework/SofaPython/pull/2]; [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/211]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2419:218,error,error,218,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2419,3,"['error', 'failure']","['error', 'failures']"
Availability,"`CompressedRowSparseMatrix::mulTranspose` now supports scalar blocks.; It did not support scalars, because it called `multTranspose` on an object of type `TBloc`, which can be a `float` or a `double`. Unit tests are updated to compile and test the function on scalar blocks. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2331:819,failure,failures,819,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2331,2,['failure'],['failures']
Availability,"`DistanceMultiMapping` was not tested, and it's the first example of a tested non-linear multi mapping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5077:648,failure,failures,648,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5077,2,['failure'],['failures']
Availability,"`EdgeTopologyFrom2PointSets` is an edge topology built from 2 point sets. It computes pairs of points based on the nearest distance from one point to the other point set. It is very useful to be used in combination with springs and SubsetMultiMapping. This component may change depending on the work in #2554 . ![image](https://user-images.githubusercontent.com/10572752/147271052-fa2f162e-72f2-4cc9-816f-6f64a0307f87.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2562:968,failure,failures,968,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2562,2,['failure'],['failures']
Availability,"`FindEigen3.cmake` is defining the cmake variable **EIGEN3_VERSION**, whereas `SofaEigen2Solver` was using **Eigen3_VERSION** to get the version of Eigen (which was; empty). Hence, **SOFAEIGEN2SOLVER_HAVE_OPENMP** was always true (given **SOFA_OPENMP**=ON), which was making the compilation fail when using Eigen > 3.2.9. Fixes #1412 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1416:592,failure,failures,592,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1416,2,['failure'],['failures']
Availability,"`GetFileNameWithoutExtension` currently finds the first dot in the filename to deduce the plugin name from a path. However, the filename `SoftRobots.Inverse.dll` deduces to `SoftRobots`, which is another existing plugin. To fix this behavior, I propose to rely the deduction on the extension of a dynamic library, which is known. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2961:874,failure,failures,874,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2961,2,['failure'],['failures']
Availability,"`MechanicalAccumulateJacobian` is initially implemented in `MechanicalMatrixMapper.h`. This PR extract this class into its own files in Sofa.SimulationCore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2481:701,failure,failures,701,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2481,2,['failure'],['failures']
Availability,"`MechanicalState<DataTypes1>` and a second link to a `MechanicalState<DataTypes2>`.; - Components inheriting from `SingleStateAccessor` or `PairStateAccessor` fill the dynamic list contained in the `StateAccessor` implementation.; - It does not break the previous accesses, variable names etc. The goal is that all the components accessing a `BaseMechanicalState` can provide a list of them in a generic way. For example, `BaseInteractionForceField` supposed only 2 mechanical states. Since it inherits now from `StateAccessor`, it can have links to more than 2 (note that none of the interaction force field I found work with more than 2). Another example: `BaseForceField` did not have any reference to a mechanical state, but all the force fields inherits from `ForceField` which has a link to a mechanical state. Therefore, we couldn't have access to a mechanical state from a `BaseForceField`. I also cleaned the files:; - Concatenate nested namespaces; - Use `#pragma once`; - Some private and non-defined copy constructors and `operator=` are marked `delete`.; - Move methods in cpp; - Removed unnecessary `init()` implementations. They only called their base class `init()`.; - `Constraint ` has a link to the mechanical state instead of a raw pointer.; - Some constructors marked `explicit`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2438:2644,failure,failures,2644,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2438,2,['failure'],['failures']
Availability,`MessageDispatcher::clearHandlers()` can have side effects on other tests in same suite.; See #83 for error case. SofaTest API should ensure that each test starts with a clean MessageDispatcher containing always the same set of MessageHandlers.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/94:102,error,error,102,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/94,1,['error'],['error']
Availability,"`NearestPointROI` is now compatible with 3d Cuda types. It is still executed on the CPU though. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2620:640,failure,failures,640,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2620,2,['failure'],['failures']
Availability,"`NewmarkImplicitSolver` never accumulated forces in a mapped Node. This PR fixes it. What I think happened:; Initially (before 2011), the ODE solvers did not accumulated mapped forces, because ""_accumulation through mappings is disabled as it will be done by addMBKv after all factors are computed_"" (quote from a [comment](https://github.com/sofa-framework/sofa/commit/0943c8fa75490d0a1d3dc50ba3b22df4ae7d7f07)). This behavior changed in https://github.com/sofa-framework/sofa/commit/0943c8fa75490d0a1d3dc50ba3b22df4ae7d7f07, but `NewmarkImplicitSolver` was never updated. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2578:1118,failure,failures,1118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2578,2,['failure'],['failures']
Availability,"`PairInteractionConstraint` inherits multiple times from `StateAccessor`. `StateAccessor` constructor can be called multiple times. Therefore it initializes the Data multiple times. To prevent that the solution is virtual inheritance. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2488:779,failure,failures,779,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2488,2,['failure'],['failures']
Availability,"`SofaNonUniformFem` is required by `SofaMiscEngine`. This needed to be; propagated back to the `SofaMiscConfig.cmake` in order to let external; projects find the target. Also, since `SofaGui` calls `find_package(SofaMisc)`, `SofaNonUniformFemConfig.cmake.in`; needs to be configure before `SofaGui`. The problem was raised [here](https://www.sofa-framework.org/community/forum/topic/setting-up-out-of-tree-build-sofapython-3-plugin/#post-16198) by Sander. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1384:712,failure,failures,712,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1384,2,['failure'],['failures']
Availability,"`SpatialVector` and `Transform` are extracted from `SolidTypes`. Plan for a future PR: update code including `SolidTypes` just to get `Transform`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4513:691,failure,failures,691,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4513,2,['failure'],['failures']
Availability,"`SpringForceField` is updated to handle topological changes properly. It now uses callbacks.; A scene example is introduced to test topological changes on a `SpringForceField`. To make the example working, point removal was needed but not implemented. That is why I had to implement `PointSetTopologyModifier::removeItems`, and added the support of points in `TopologicalChangeProcessor`. The use of callbacks fixes the application of the topological changes in `SpringForceField`. Before the use of callbacks, the topological changes were not applied because the force field was not in the same Node than the topology. The new code also supports a change in both input topologies. Previously, changes only in the second topology were possible. Without having testing it, I think the previous code did not handle properly multiple springs connected on a single DoF. This is now fixed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2653:1429,failure,failures,1429,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2653,2,['failure'],['failures']
Availability,"`StiffSpringForceField<DataTypes>::addForce` was duplicated from `SpringForceField<DataTypes>::addForce`, its base class. Only the resize of `dfdx` differed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3594:702,failure,failures,702,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3594,2,['failure'],['failures']
Availability,"`SubsetMultiMapping` resizes the target `State` according to the provided input Data. However, it did not update the topology.; For example, a `PointSetTopologyContainer` associated to the target `State` kept a number of vertices equal to zero. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2720:789,failure,failures,789,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2720,2,['failure'],['failures']
Availability,"`TClass<T, Parents>` was instantiated on the heap and never free, causing memory leaks. An option is to instantiate the class on the stack so it is destroyed at the end of the program. But currently, the compilation fails if `TClass<T, Parents>` is instantiated on the stack with T an abstract class. That is why there are now two implementations. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3178:892,failure,failures,892,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3178,2,['failure'],['failures']
Availability,"`TopologySparseData` inherits `TopologyData`; `TopologySubsetData` inherits `TopologyData`; Both `TopologySparseData` and `TopologySubsetData` overload virtual functions defined in `TopologyData`. However, the way they were defined made clang consider this not as an overload, but as a redefinition of a new function hidding the initial virtual function.; Basically, this PR removes a compilation warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1972:950,failure,failures,950,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1972,2,['failure'],['failures']
Availability,"`TriangleFEMForceField::addToMatrix` was a copy/paste of `ForceField::addToMatrix`, which is a base class: it is unnecessary.; Note it is used in `TriangleFEMForceField::addKToMatrix`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2421:729,failure,failures,729,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2421,2,['failure'],['failures']
Availability,"`WorkerThread` class was defined in _DefaultTaskScheduler.h/.cpp_ files. I moved its definition in WorkerThread.h and its implementation in WorkerThread.cpp. I did not change anything else.; This PR is based on #1927. It must be merged after.; There will be conflicts after #1997 is merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2002:835,failure,failures,835,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2002,2,['failure'],['failures']
Availability,"`_rotatedInitialElements` is not used in the `small` method. It is not resized (size = 0), therefore it leads to a crash. This instruction has been introduced in https://github.com/sofa-framework/sofa/pull/2287. I reverted this line only by the original code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4780:804,failure,failures,804,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4780,2,['failure'],['failures']
Availability,"```; [ERROR] [DAGNode(Snake)] A linear solver is required, but has not been found. Add a linear solver to your scene to fix this issue. The list of available linear solver components is: [BTDLinearSolver, BlockJacobiPreconditioner, CGLinearSolver, CholeskySolver, JacobiPreconditioner, LULinearSolver, MinResLinearSolver, PrecomputedLinearSolver, PrecomputedWarpPreconditioner, SSORPreconditioner, SVDLinearSolver, ShewchukPCGLinearSolver, SparseCholeskySolver, SparseLDLSolver, SparseLUSolver, WarpPreconditioner].; ```. instead of. ```; [ERROR] [DAGNode(Snake)] Requires a LinearSolver.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2221:6,ERROR,ERROR,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2221,5,"['ERROR', 'avail', 'failure']","['ERROR', 'available', 'failures']"
Availability,"```; cmake_dependent_option(; name: SOFA_BUILD_WITH_PCH_ENABLED; description: ""Compile SOFA using precompiled header (to accelerate the build process)""; default value: OFF; when to show the option: ""CMAKE_VERSION VERSION_GREATER_EQUAL 3.16""; value forced when hidden: OFF; ); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1755:825,failure,failures,825,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1755,2,['failure'],['failures']
Availability,"```TriangularPressureForceField```:; - Set componentState to Invalid if topology is not found; - Fix force vectors display. ```TriangularFEMForceField```:; - Remove GetFracturableEdge deprecated method which could not work.; - Various fix in the display to avoid computation inside draw method; - Replace default display by stress value. ![image](https://user-images.githubusercontent.com/21199245/106916096-17ffbc80-6707-11eb-89e5-c5b9353487b0.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1779:995,failure,failures,995,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1779,2,['failure'],['failures']
Availability,"```cpp; /// Method to check if points stored inside the Tetrahedron, given by the tetrahedron id, are in the right order (by checking the cross products between edges).; bool checkNodeSequence(const TetraID tetraId) const;. /// Method to check if the dihedral angles of the tetrahedron have correct values (between 20 and 160 degrees).; bool checkTetrahedronDihedralAngles(const TetraID tetraId) const;. /// Method to check if Tetrahedron is elongated, meaning the longest edge > 10x min edge; bool isTetrahedronElongated(const TetraID tetraId) const;. /// Return false if one of the test method: @sa isTetrahedronElongated, @sa checkTetrahedronDihedralAngles and @sa checkNodeSequence return false for the given Tetrahedron Id.; bool checkTetrahedronValidity(const TetraID tetraId) const;. /// Will call @sa checkTetrahedronValidity for each Tetrahedron of the mesh and store the bad tetrahedron ID in @sa m_badTetraIds; const sofa::helper::vector <TetraID>& computeBadTetrahedron();; ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1160:1247,failure,failures,1247,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1160,2,['failure'],['failures']
Availability,"``cmake --install``` on a freshly built Sofa repo, the header files for libQGLViewer are not properly copied to the install/include directory.; First of all the install path is too long and has at least one ${PROJECT_NAME}, i.e. ""QGLViewer"" too much in the path. Also there are header files missing which are relevant for using the provided libQGLViewer in external projects/plugins. This is caused by the now modified ```Sofa/GUI/Qt/libQGLViewer/QGLViewer/CMakeLists.txt```:; - The last argument for the ```sofa_create_package_with_targets``` macro adds too many ```/${PROJECT_NAME}``` causing the long install path (line 118); - For some reason the ```sofa_create_package_with_targets``` macro does not copy the ```MOC_HEADER_FILES``` (line 21 ff.). ## Solution:; This PR shortens the output path and copies the contents of ```MOC_HEADER_FILES``` to the ""normal"" ```HEADER_FILES``` which causes them to be copied to the install/include directory. This does not affect the build but ensures that all headers are copied. This was tested on Windows and two different Linux installations. I am aware that simply re-mentioning the MOC_HEADERS may look redundant, but I could not find a solution to convince the ```sofa_create_package_with_targets``` macro to also consider the MOC_HEADERS for copying. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4198:1279,redundant,redundant,1279,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4198,3,"['failure', 'redundant']","['failures', 'redundant']"
Availability,"`addDForce` is now divided in 2 steps:; 1) Elements are visited in parallel: a force derivative is computed inside each element; 2) Vertices are visited in parallel: the force derivative in all adjacent hexahedra are accumulated in the vertices. This new organization allows to write the force derivative such as it maximize coalescing memory access. Benchmark (the cantilever beam in the examples):. ```; before (8x8x40); 4.62651 s ( 216.146 FPS). before (16x16x80); 73.1133 s ( 13.6774 FPS). ; after (8x8x40); 3.9425 s ( 253.646 FPS). after (16x16x80); 65.4055 s ( 15.2892 FPS). ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3572:1130,failure,failures,1130,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3572,2,['failure'],['failures']
Availability,"`canCreate` can be called several times by the object factory. It makes more sense to detect if the template parameter is empty in the `parse` method, i.e. once the object is instantiated. Header of the message depends whether the component name is empty or not. Remove hard coded string of the component class, as it does not apply to derived types. Remove hard coded template strings. ![image](https://user-images.githubusercontent.com/10572752/172868099-18fb7a50-ecb2-40e4-b8b4-11fdac2be70d.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3029:1044,failure,failures,1044,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3029,2,['failure'],['failures']
Availability,"`distanceType` is an OptionsGroup, and it is cannot be initialized using a single value. In this case, the wrong overload of `initData` was picked. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4711:692,failure,failures,692,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4711,2,['failure'],['failures']
Availability,"`getValue` has a side effect. `BaseData::typeName` allows to use only the type, without a parameter. So, by expliciting the type, we can remove the call to `getValue`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4816:712,failure,failures,712,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4816,2,['failure'],['failures']
Availability,"`index` and `ext_index` were already defined, and I think they referred to the same thing. The difference is only on the condition with `useRestMState`. ; It follows changes from https://github.com/sofa-framework/sofa/pull/3175. Strangely, we can see that the condition on `useRestMState` was implemented only for rigids. Now it is also for vecs. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3754:891,failure,failures,891,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3754,2,['failure'],['failures']
Availability,"`l_topology` already exists in `BaseLinearElasticityForceField`, and it was already initialized. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4890:641,failure,failures,641,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4890,2,['failure'],['failures']
Availability,"`m_filename` now becomes `d_filename` as simple (and breaking as that). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2095:616,failure,failures,616,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2095,2,['failure'],['failures']
Availability,"`map_ptr_stable_compare` is used in the `NarrowPhase` components. In this PR:. - The use of `map_ptr_stable_compare` is optimized in `NarrowPhase` components; - `map_ptr_stable_compare` itself is a bit optimized. The benchmark results show great performances improvements at the level of the container manipulation.; However, at the level of a simulation the performances improvements are negligible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2105:945,failure,failures,945,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2105,2,['failure'],['failures']
Availability,"`msg_info` is used instead of `std::cout`. `msg_info` is also used in `mycudaPrintf`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4430:630,failure,failures,630,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4430,2,['failure'],['failures']
Availability,"`parentData == nullptr` leads to a crash. I think it happens when the linked object could not be created for some reasons. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2211:667,failure,failures,667,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2211,2,['failure'],['failures']
Availability,"`pull_request` event prevented from using secrets value since it arises from PR author repository. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4476:643,failure,failures,643,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4476,2,['failure'],['failures']
Availability,"`sofa/helper/set.h` is not required if we just need `std::set`. `TagSet` also no longer inherits from `std::set`. Composition instead. Note that there is still a contaminating include in `Sofa/framework/DefaultType/src/sofa/defaulttype/DataTypeInfo.h`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4820:797,failure,failures,797,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4820,2,['failure'],['failures']
Availability,"`sofa` is repeated in `sofa::sofa::core::topology::PointData`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2538:607,failure,failures,607,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2538,2,['failure'],['failures']
Availability,"`transpose` and `add` are known at compile-time, so a `constexpr if` can be used to evaluate them, and discard statements. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4352:667,failure,failures,667,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4352,2,['failure'],['failures']
Availability,"`type::invertMatrix` is specialized. Only 2x2 matrices were tested (specialized). 3x3 matrices are now tested (also specialized), and 5x5 matrices (using the generic implementation). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2343:727,failure,failures,727,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2343,2,['failure'],['failures']
Availability,"`valuesIndexedInTopology` should not be initialized with `initData`: it duplicates the Data name of `d_valuesIndexedInTopology`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4843:673,failure,failures,673,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4843,2,['failure'],['failures']
Availability,"a (master version 16/01/18) it crash at runtime. > [INFO] [runSofa] No plugin will be automatically loaded; > - No custom list found at C:\sofaBuild\bin/bin/plugin_list.conf; > - No default list found at C:\sofaBuild\bin/bin/plugin_list.conf.default; > The constructor with a QGLFormat is deprecated, use the regular contructor instead.; > [ERROR] [FileRepository] File icons/back.png NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [ERROR] [FileRepository] File icons/home.png NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [ERROR] [BaseViewer] Could not create file 'C:/sofa/share/textures/SOFA_logo.bmp'; > Valid extensions: dds; > ; > [ERROR] [Image] Could not load image with extension png. Valid extensions: dds; > [ERROR] [OglModel(VisualBody)] couldn't create an image from file textures/snakeColorMap.png; > [ERROR] [OglModel(VisualBody)] 1 textures couldn't be loaded; > [ERROR] [FileRepository] File docs/runsofa.html NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [INFO] [SceneChecker] The 'APIVersion' directive is missing in the current scene. Switching to the default APIVersion level '17.06'; > [INFO] [SceneChecker] Validating node ''.; > Activate checkers:; > - SceneCheckAPIChange; > - SceneCheckDuplicatedName; > - SceneCheckMissingRequiredPlugin; > ; > [ERROR] [FileSystem::listDirectory()] C:\sofaBuild\bin/bin: error 3: Le chemin dÆaccÞs spÚcifiÚ est introuvable.; > ; > [ERROR] [FileSystem::listDirectory()] C:\sofaBuild\bin/bin: error 3: Le chemin dÆaccÞs spÚcifiÚ est introuvable. Plus, I had many troubles compiling it. I have to uncheck PSL (require SofaPython), but when SofaPython is checked there is many link problems. Finally, I both unchecked them. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/561:971,ERROR,ERROR,971,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/561,2,['ERROR'],['ERROR']
Availability,"a `StiffSpringForceField` between 2 objects in C++. Instead a utility function is provided. To maintain the backward compatibility and to facilitate the design of a simulation scene, `StiffSpringForceField` continues to accept two Data attributes ('object1' and 'object2') corresponding to two different objects. However, they don't correspond to any Data or Link in the component. Actually, during its creation, the component will instantiate other components in order to link both objects into one. In the end, the component is able to work on a single mechanical state while keeping the same physical behavior. The component now instantiates:. 1. A new Node; 2. A new mechanical state which will be the fusion of the provided objects, ; 3. A `SubsetMultiMapping` that will make the link between the two provided objects and the new mechanical state; 4. The spring force field. Since `SubsetMultiMapping` was initially in SofaMiscMapping, it has been moved into SofaBaseMechanics. A compatibility layer is available. Other components using `StiffSpringForceField` had to be adapted to create also the extra components. An example is `AttachBodyPerformer` which creates the spring between an object and the mouse (shift + clic). WARNING:; Since `StiffSpringForceField` is now necessarily located in a mapped node, its stiffness matrix is not mapped in case of a built linear system. The forces are then computed explicitly only. This issue will be addressed in the new design of the matrix assembly. TODO:. - [x] A description for this PR; - [ ] Handle topological changes in `SpringForceField` -> see https://github.com/sofa-framework/sofa/pull/2653 and https://github.com/sofa-framework/sofa/pull/2729; - [x] Deal with `BoxStiffSpringForceField` -> see https://github.com/sofa-framework/sofa/pull/2621; - [x] Compilation and tests issues on CI (CUDA); - [x] In `AttachBodyPerformer`, a Node remains in the scene when `AttachBodyPerformer` is destroyed. [ci-depends-on https://github.com/sofa-frame",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2554:1506,avail,available,1506,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2554,1,['avail'],['available']
Availability,"a broad phase, but the code is located in its base class: `BruteForceBroadPhase`.; The narrow phase code has been extracted and put in a new component: `DirectSAPNarrowPhase`. `DirectSAP` inherits from `DirectSAPNarrowPhase`.; In the narrow phase, the result of the broad phase is used to skip the boxes which have been totally ignored in the broad phase. Initially, the `DirectSAP` component did not perform any discrimination in its broad phase. Now it performs a `BruteForceBroadPhase`. It is not yet clear if it is always a good choice regarding the performances. In the case of the caduceus scene, the performances are slightly better. I guess if the broad phase takes a lot of time (many objects), it is better to avoid it. `DirectSAP` would not be the best choice. I would use a more performant broad phase, or no broad phase, when used with `DirectSAPNarrowPhase`. From now, the user can decide to design its scene with two different ways resulting to the same behavior:; ```; <DirectSAP/>; ```; or; ```; <BruteForceBroadPhase/>; <DirectSAPNarrowPhase/>; ```; In the second option, it will be possible to change the combination of broad phase/narrow phase.; Note: I kept the component `DirectSAP`, but I don't think its name is meaningful. This is the following of the work started in #2010 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2030:2317,failure,failures,2317,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2030,2,['failure'],['failures']
Availability,"a.Type -isystem $SOFA_ROOT/include/Sofa.Config -o main.o -c main.cpp; ```; ```sh; main.cpp: In function ‘int main()’:; main.cpp:6:41: error: call of overloaded ‘vector(sofa::Size, int)’ is ambiguous; 6 | vector<double> d_v (sofa::Size(5), 0);; | ^; In file included from /sofa/include/Sofa.Type/sofa/type/vector.h:24,; from main.cpp:1:; /sofa/include/Sofa.Type/sofa/type/vector_T.h:78:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(long int, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>]’; 78 | vector(long n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; /sofa/include/Sofa.Type/sofa/type/vector_T.h:76:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(int, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>]’; 76 | vector(int n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; /sofa/include/Sofa.Type/sofa/type/vector_T.h:74:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(sofa::type::vector<T, MemoryManager>::Size, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>; sofa::type::vector<T, MemoryManager>::Size = long unsigned int]’; 74 | vector(Size n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2270:2669,failure,failures,2669,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2270,2,['failure'],['failures']
Availability,"actions/github-script@v4 is output errors due to deprecation in actions/core:; ```; (node:1614) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.; (Use `node --trace-deprecation ...` to show where the warning was created); RequestError [HttpError]: Resource not accessible by integration; at /home/runner/work/_actions/actions/github-script/v4/dist/index.js:4662:21; at processTicksAndRejections (node:internal/process/task_queues:96:5) {; status: 403,; response: {; url: 'https://api.github.com/repos/sofa-framework/sofa/issues/4496/comments',; Error: Unhandled error: HttpError: Resource not accessible by integration; status: 403,; ```. This PR also :; - updates list of GHD reviewers with @rmolazem and @samuelmyoussef ; - updates with stargazer's name . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4522:35,error,errors,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4522,5,"['Error', 'error', 'failure']","['Error', 'error', 'errors', 'failures']"
Availability,"ad Sofa.Component.UserInterface.ConfigurationSetting plugin, which is causing failure of loading all the remaining plugins. check below error log. I am trying to run lapgym repo implementation , reach environment. Repo : https://github.com/ScheiklP/sofa_env; File : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/scene_description.py; scene header file where plugins are loaded : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/sofa_templates/scene_header.py. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:1044,ERROR,ERROR,1044,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,1,['ERROR'],['ERROR']
Availability,add SphereActiver class in SphereModel so that some controller inheriting from this class can compute sphere(s) de/activation during execution. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1259:400,failure,failures,400,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1259,2,['failure'],['failures']
Availability,add bounding box to hexaFemForceField. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/289:295,failure,failures,295,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/289,2,['failure'],['failures']
Availability,added deprecation message where needed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1197:296,failure,failures,296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1197,2,['failure'],['failures']
Availability,"adding instantiation with RigidType + removal of ""hard"" usage of VecTypes. In my case, it was to support grabbing a beam (BeamAdapter) with the mouse and constraints. https://github.com/sofa-framework/sofa/assets/11028016/8eeb22ff-396d-4d87-8d9e-22e2849eefec. Reminder: BilateralConstraint needs a GenericConstraintSolver (+FreeMotionAL), LCPConstraintSolver is not usable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4801:918,failure,failures,918,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4801,2,['failure'],['failures']
Availability,"ame=pluginNameList, ; printLog='0'). # Rootnode attributes; rootNode.addObject('FreeMotionAnimationLoop'); rootNode.addObject('DefaultVisualManagerLoop'); rootNode.addObject('GenericConstraintSolver', maxIterations='2000', tolerance='1e-9') ; rootNode.addObject('BackgroundSetting', color='0 0.168627 0.211765'). # Scene settings; confignode = rootNode.addChild(""Config""); confignode.addObject(""OglGrid"", nbSubdiv=10, size=1000); confignode.addObject('OglSceneFrame', style=""Arrows"", ; alignment=""TopRight""). # Collision component; rootNode.addObject('DefaultPipeline'); rootNode.addObject('BruteForceBroadPhase'); rootNode.addObject('BVHNarrowPhase'); rootNode.addObject('LocalMinDistance', name='Proximity', alarmDistance=""1"", contactDistance=""0.5""); rootNode.addObject('DefaultContactManager', name=""Response"", response=""PenalityContactForceField""). ; # Membrane; membrane=rootNode.addChild(""Membrane""). membrane.addObject(""EulerImplicitSolver""); membrane.addObject(""CGLinearSolver"", iterations='2000', tolerance='1e-9', threshold='1e-9'). membrane.addObject('MeshGmshLoader', name='membraneCoarse', ; filename='FossaOvalisV2.msh'); ; membrane.addObject('TetrahedronSetTopologyContainer', ; name='membraneTopo', src='@membraneCoarse'); membrane.addObject('TetrahedronSetTopologyModifier'); membrane.addObject('TetrahedronSetGeometryAlgorithms',; name='membraneAlgo'). membrane.addObject('MechanicalObject', name='mechMembrane',template='Vec3d', showObject='1'); membrane.addObject('TetrahedronFEMForceField', name='FEM', ; youngModulus='100000', poissonRatio='0.4'); membrane.addObject('MeshMatrixMass', massDensity=""1"", name=""density""); #membrane.addObject(""FixedConstraint"", name = ""fix"", nodes = which_node(mesh )). membrane.addObject(""LinearSolverConstraintCorrection"", name='solvConstrMemb', template='Vec3d'). # Constraints; membrane.addObject('BoxROI', template='Vec3d', box=""-10.5 9.5 -0.5 10.5 10.5 1.5"", drawBoxes=""1"", position=""@mechMembrane.rest_position"", name=""FixedROI1""); membrane.a",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3810:2659,toler,tolerance,2659,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3810,1,['toler'],['tolerance']
Availability,amples\Tutorials\OldTutorials\demo7Triangle.scn; examples\Tutorials\OldTutorials\demo8.scn; examples\Tutorials\OldTutorials\demo8Triangle.scn; examples\Tutorials\OldTutorials\demo9.scn; examples\Tutorials\OldTutorials\tutorial4.scn; examples\Tutorials\StepByStep\FullObject\0_FullObject.scn; examples\Tutorials\StepByStep\FullObject\1_FullObject.scn; examples\Tutorials\StepByStep\FullObject\2_FullObject.scn; examples\Tutorials\StepByStep\FullObject\3_FullObject.scn; examples\Tutorials\StepByStep\FullObject\4_FullObject.scn; examples\Tutorials\StepByStep\FullObject\5_FullObject.scn; examples\Tutorials\StepByStep\FullObject\6_FullObject.scn; examples\Tutorials\StepByStep\FullObject\7_FullObject.scn; examples\Tutorials\StepByStep\FullObject\8_FullObject.scn; examples\Tutorials\StepByStep\Pendulum\0_Pendulum.scn; examples\Tutorials\StepByStep\Pendulum\1_Pendulum.scn; examples\Tutorials\StepByStep\Pendulum\2_Pendulum.scn; examples\Tutorials\StepByStep\Pendulum\3_Pendulum.scn; examples\Tutorials\StepByStep\Pendulum\4_Pendulum.scn; examples\Tutorials\StepByStep\Pendulum\5_Pendulum.scn; examples\Tutorials\StepByStep\Pendulum\6_Pendulum.scn; examples\Tutorials\StepByStep\Pendulum\7_Pendulum.scn; examples\Tutorials\StepByStep\TopologicalMapping\2_TopoMapping.scn; examples\Tutorials\StepByStep\TopologicalMapping\5_TopoMapping.scn; examples\Tutorials\StepByStep\TopologicalMapping\6_TopoMapping.scn; examples\Tutorials\StepByStep\Visual\3_Visual.scn; examples\Tutorials\Topologies\TopologyDynamicSurfaceMesh.scn; examples\Tutorials\Topologies\TopologyHexa2QuadTopologicalMapping.scn; examples\Tutorials\Topologies\TopologyHexa2TetraTopologicalMapping.scn; examples\Tutorials\Topologies\TopologyQuad2TriangleTopologicalMapping.scn; examples\Tutorials\Topologies\TopologyTetra2TriangleTopologicalMapping.scn; examples\Tutorials\Topologies\TopologyTriangle2EdgeTopologicalMapping.scn. [INFO] [PluginFinder] Found 1 files with error:; examples\Benchmark\Accuracy\cylinder_PhantomSolution.scn; ```,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3352:9269,error,error,9269,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3352,1,['error'],['error']
Availability,and I also propose to update the APIChange file .. ; I did two in one (but separate commits) since it's super minor!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1414:374,failure,failures,374,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1414,2,['failure'],['failures']
Availability,"and MappingGeometricStiffnessForceField. The message goes from:; ```; Object type MechanicalMatrixMapper<Vec3d,Vec3d> was not created; The object 'MechanicalMatrixMapper' is not in the factory.; This component has been MOVED from SofaGeneralAnimationLoop to Sofa.Component.Mapping.MappedMatrix since SOFA v22.06.; To continue using this component you may need to update your scene by adding; <RequiredPlugin name='Sofa.Component.Mapping.MappedMatrix'/>; ```. to:. ```; The object 'MechanicalMatrixMapper' is not in the factory.; This component has been REMOVED since SOFA v23.06 (deprecated since v23.12).; Please consider updating your scene. If this component is crucial to you please report in a GitHub issue in order to reconsider this component for future re-integration.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4235:1327,failure,failures,1327,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4235,2,['failure'],['failures']
Availability,"and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added boolean variables named `applyFwd*` and `applyBwd*`, each corresponding to the `fwd*` and `bwd*` functions. They are all set to false by default.; For example, if `applyFwdMechanicalState` is true, then the code related to `fwdMechanicalState` is executed. Remember that previously, the boilerplate code related to `fwdMechanicalState` was executed even if `fwdMechanicalState` does nothing. To change that, the derived class must set the right variables to true, so the right code is executed. For example, if a derived class wants to execute `fwdMechanicalState`, it must set `applyFwdMechanicalState` first, usually in its constructor. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Simple to understand. ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to tune booleans according the goal of the visitor.; - Runtime check of the variables. This PR is not to merge yet. IIt is suggested as an alternative to PR #1963. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1962:3085,failure,failures,3085,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1962,2,['failure'],['failures']
Availability,"and add potential qt6 support.; But image_gui does not support qt6 at the c++ level (deprecated API & co). Fix #2542 . (remaining code using qt4 is the qtsofa application/projects but is not supported anymore and is doomed to be deleted/removed); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2663:791,failure,failures,791,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2663,2,['failure'],['failures']
Availability,"and add unit tests; The case `(this->mstate1 != this->mstate2)` is not tested. Note that this implementation is not yet useful when the force field is associated to a mapped mechanical object. However, it will become useful for #2777 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3626:780,failure,failures,780,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3626,2,['failure'],['failures']
Availability,"and also removed the attributes associated to the deprecated macros. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3265:613,failure,failures,613,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3265,2,['failure'],['failures']
Availability,"and clean the files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2271:565,failure,failures,565,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2271,2,['failure'],['failures']
Availability,"and delegate constructor. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2911:570,failure,failures,570,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2911,2,['failure'],['failures']
Availability,"and lots of cleaning. #1527. Based on master. Deprecates SofaBaseLinearSolver, SofaGeneralLinearSolver, SofaPreconditioner, SofaDenseSolver, SofaSparseSolver. Re-organise Linear Solvers into 3 categories:; - Direct; - Iterative; - Preconditioner. Move Implementations of MatrixAccessors along its API in SofaCore (could be the occasion to definitely ditch CRSMultiMatrixAccessor), as they are not components + the utility class BlocMatrixWriter; And cleaning (namespaces, pragma, explicite instanciations, symbol export for windows, SReal instead of double, etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2717:1108,failure,failures,1108,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2717,2,['failure'],['failures']
Availability,"and replace MapMapSparseMatrix. Continuation of #3515 . Breaking because one or two functions have been deleted (for perf reasons), especially the batch clear function. Some benchs, where constraints are supposedly the bottleneck. caduceus.scn; ```; before: 5000 iterations done in 48.2532 s ( 103.62 FPS).; after: 5000 iterations done in 22.042 s ( 226.839 FPS).; ```. TorusFall.scn; ```; before: 5000 iterations done in 47.5045 s ( 105.253 FPS).; after: 5000 iterations done in 37.8749 s ( 132.014 FPS).; ```. 3instruments_collis.scn; ```; before: 5000 iterations done in 63.3632 s ( 78.9101 FPS).; after: 5000 iterations done in 53.7899 s ( 92.9542 FPS).; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3894:1208,failure,failures,1208,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3894,2,['failure'],['failures']
Availability,"and some derived types. This allows to write such code:. ```cpp; const auto [r, g, b, a] = color;; ```. ```cpp; auto& [r, g, b, a] = color;; ```; ```cpp; for (const auto& [r, g, b, a] : colors); {; }; ```; See the unit test Color_test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2276:780,failure,failures,780,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2276,2,['failure'],['failures']
Availability,"and some fixes in tetra FEM. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4832:573,failure,failures,573,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4832,2,['failure'],['failures']
Availability,"arSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collision.Geometry""]; [ERROR] [SofaRuntime] ValueError: Object type BackgroundSetting<> was not created; The object is not in the factory.; This component has been MOVED from SofaBaseVisual to Sofa.Component.UserInterface.ConfigurationSetting since SOFA v22.06.; To continue using this component you may need to update your scene by adding. Traceback (most recent call last):; File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 435, in; ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:5027,ERROR,ERROR,5027,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,as discussed in meeting. So it is done. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1179:296,failure,failures,296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1179,2,['failure'],['failures']
Availability,as promised since long time ago... There is still a lot of work to do but here is a first set of tests on the topology containers.; - Do not test yet the topological changes.; - Neither more complex algo like incision.; - Nor TopologicalData... it is just the beginning !. FIX #43 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/708:539,failure,failures,539,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/708,2,['failure'],['failures']
Availability,"as said by Damien the wise in PR #407 . ""Module are systematically compiled which have a sensible impact to Sofa.; I'm moving that into plugin to allow dev to conditionnally activate/deactivate the plugin they; don't need."". This PR is about putting SofaMiscForceField in a plugin.; It implied conditional activation of some unit tests to build properly when the plugin is switched off. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/408:645,failure,failures,645,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/408,2,['failure'],['failures']
Availability,as the consortium is hosted by Inria since 2019. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1451:305,failure,failures,305,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1451,2,['failure'],['failures']
Availability,"assertion was using an undeclared variable so the debug build was failing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2989:619,failure,failures,619,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2989,2,['failure'],['failures']
Availability,"at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #2 0x00007ff67cc2aa57 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /h",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2057:1481,Down,Downloads,1481,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057,1,['Down'],['Downloads']
Availability,"ating failure on errors was lost. . The PR mix the two and: ; - restores this old behavior by default so a test that specify nothing will fail on warning and error.; - but in addition, each tests class/function/bloc can now specify how a specific bloc can react to a message. This can be done using a new syntax taken inspired mimicking the one from gtest. ; - improve the way test failures about warning and error are reported:; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5074/testReport/junit/(root)/RigidRigidMappingTest_0/test_translation/; . Example: ; ```cpp; class MyTest : public Sofa_test<>; ; /// This test will fail if a warning/error message is send because the test inherit from sofa_test; void defaultTestBehavior(); {; ....; }. /// This test should generate failure if NO warning and NO Error message is emitted; void catchingTestBehavior(); {; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;. mycomponent.load(""atotallybrokenfile.txt""); }. /// By default test failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT(Error) ;; .... ; }; }; }; ```. This PR will generate a lot of new test failure... that are either real failure that deserve investigation or ; tests that was p",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:1474,failure,failure,1474,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,1,['failure'],['failure']
Availability,"ator delete mismatch; - CatmullRomSplineMapping: fix applyJ compilation; - ConstantForceField: fix avoid crashes in draw when trying to apply a constantforcefield to a non existing point; - DistanceGrid: fix incorrect use of serr; - GeneralConstraintSolver: fix incorrect parent class in SOFA_CLASS macro; - IndicesFromValues: fix use getTemplateName to avoid problems of links with other data; - EulerImplicitSolver: fix Disable calls to solveConstraint from EulerImplicitSolver by default as it is not needed unless an very specific solver is added and it currently crashes in other cases + wrong argument order in calls to `AdvancedTimer::stepNext()`; - FixedConstraint and PartialFixedConstraint: fix ""fixed FixedConstraint & PartialFixedConstraint for size-varying mechanical objects"".; - MechanicalObject: fix crash in debug with null pointer; - Mass: fix remove error logging in Mass method that are inherited from Forcefield API and that are not relevant for Mass; - MechanicalMatrixVisitor and MechanicalOperations: fix if using a Linear Solver, projective constraints were wrongly applied when a force field is in a child node; - Mesh2PointMechanicalMapping: fix constraints ApplyJT; - Metis(gk_arch.h): fix compilation with Visual Studio 2015; - ParticlesRepulsionForceField and RepulsiveSpringForceField: fix avoid division by 0 on repulsion force fields; - PersistentContactBarycentricMapping: fix init variables in constructor; - RestShapeSpringsForceField: fix Runtime stiffness tunning was not working + optimisation and cleaning; - SkinningMapping: fix compilation of SofaRigid; - SofaViewer: fix crashes when current camera of pick-handler is NULL; - SurfacePressureForceField: fix volume computation formula; - TaitSurfacePressureForceField: fix contribution to the stiffness matrix for the second component df = P+dN in TaitSurfacePressureForceField; - TopologicalMapping: fix display error messages when a TopologicalMapping failed to be created; - TriangularFEMForceFieldOptim: ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218:1382,error,error,1382,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218,1,['error'],['error']
Availability,"ay_defaultconstruct<sofatypefixedarray3f>/32768 38.1 us 38.5 us ; ```. I dont really know why (after spending lots of time on cppreference, stackoverflow, etc) as both of them should not have any initialization on the C-array inside. It seems with the `=default`, MSVC does default-initialization or something like that.; This behavior can be seen with vec3() and vec3(NOINIT). ```; BM_FixedArray_defaultconstruct<stdarray3f>/32768 32.5 us 33.0 us ; BM_FixedArray_defaultconstruct<sofatypefixedarray3f>/32768 32.7 us 32.2 us ; BM_FixedArray_defaultconstruct<sofa::type::Vec3f>/32768 73.3 us 73.2 us ; BM_FixedArray_defaultconstruct_vec3noinit/32768 33.0 us 33.0 us ; ```; Bench on caduceus (10k steps); - before : `10000 iterations done in 23.5033 s ( 425.471 FPS)`; - after: : `10000 iterations done in 21.5335 s ( 464.393 FPS)`. Nice 10% speedup for a really trivial change. ### Ubuntu/gcc; Actually on Ubuntu/gcc, the change does nothing as std::array/fixed_array/vec as the same timing (which is good); ```; BM_FixedArray_defaultconstruct<stdarray3f>/32768 15.6 us 15.6 us ; BM_FixedArray_defaultconstruct<sofatypefixedarray3f>/32768 15.2 us 15.2 us ; BM_FixedArray_defaultconstruct<sofa::type::Vec3f>/32768 15.3 us 15.3 us ; BM_FixedArray_defaultconstruct_vec3noinit/32768 15.2 us 15.2 us ; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2764:2660,failure,failures,2660,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2764,2,['failure'],['failures']
Availability,"b/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:2600,ERROR,ERROR,2600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['ERROR'],['ERROR']
Availability,"b/python3/site-packages; --- sys.path ---; ['', '/home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Co",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:2433,ERROR,ERROR,2433,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['ERROR'],['ERROR']
Availability,"based on #2339 . Description: Matrix\Vector has been moved to Sofa.LinearAlgebra in #2339, the only remaining component is SVDLinearSolver.; This linear solver is a (very slow) dense matrix solver so it would be more logical for this component to be in SofaDenseSolver.; Moreover the sole existence of SofaEigen2Solver was the Eigen dependency. ; Now Eigen is a proven dependency in the SofaFramework so at the end SofaEigen2Solver is not useful anymore. This PR:; - moves SVDLinearSolver in SofaDenseSolver; - remove the SofaEigen2Solver dependencies from various modules; - add some deprecations warning here and there; ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2368:1168,failure,failures,1168,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2368,2,['failure'],['failures']
Availability,"based on #4028 . Add method to detect intersection between 2 edges in 2D and 3D.; Add tests with tricky cases; Will update version in EdgeSetTopologyContainer which is not really working later. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4029:738,failure,failures,738,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4029,2,['failure'],['failures']
Availability,"based on PR #3327 . - Remove option `merge` which was added as a test in 2011 and never finished. According to a quick test on example. The behavior is less stable when activating the option with the same speed. **Result of BilateralConstraint between 2 deformable models.** ; Current behavior: single constraint working fine; ![RemovingBilateralInteractionConstraint_00000001](https://user-images.githubusercontent.com/21199245/191688055-b0f0af8a-a657-4d9f-b477-6d712542a48a.png). Result when activating merge option: Some vibration and constraint is duplicated; ![RemovingBilateralInteractionConstraint_00000002](https://user-images.githubusercontent.com/21199245/191688314-22cd8674-ce2c-40d9-a6c1-f77267cbb471.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3328:1263,failure,failures,1263,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3328,2,['failure'],['failures']
Availability,"based on:; - #2813 (which is itself based on #2790 ). All OBB/Capsule code-related into its own plugin.; Has kind of the same file structure as Sofa.Component.Collision. Tests were adapted as well. [ci-depends-on https://github.com/sofa-framework/THMPGSpatialHashing/pull/1]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2820:820,failure,failures,820,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2820,2,['failure'],['failures']
Availability,"beginEdit was used without endEdit. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2778:580,failure,failures,580,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2778,2,['failure'],['failures']
Availability,"big, big fatass PR (because of moves mainly). ~~First, check if not breaking with the CI~~. Cleanup of framework's modules, in the same way as the components. What have been done in this PR (a picture better than a thousand words). ![Screenshot 2022-04-19 at 14 26 58](https://user-images.githubusercontent.com/11028016/164003830-d6ea438d-ed1f-47ac-9902-82e182544620.png). - no more Sofa.* folder; - all gathered in the same folder; - clean and tidy; - all Simulation modules in a Simulation Folder (no more weird split Sofa.SimulationCore in framework and SimulationCommon/Graph modules); - all modules names are Sofa.ModuleName (with compat or aliases) ; - not breaking (💦). # Discussions; - I put all the modules in a Framework but modules name, folders and namespaces (i.e like SofaNG) does not take into account that (and IMO I dont want). Thing is, I would find weird to put those modules directly into the root/ . But it is just an opinion.; - No Sofa.Framework nor Sofa.Simulation meta module (like SofaFramework now). I prefer this way but more opinions are welcome. ****. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2876:1626,failure,failures,1626,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2876,2,['failure'],['failures']
Availability,"bilateralinteractionconstraint was in it's own namespace: `sofa::component::constraint::lagrangian::model::bilateralinteractionconstraint`; with some using to declare it in `sofa::component::constraint::lagrangian::model`. I don't know if it was done on purpose?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3468:808,failure,failures,808,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3468,2,['failure'],['failures']
Availability,"boost::filesystem is the last dependency on a (compiled) boost library.; However, SOFA is still dependent on header-only boost libraries (for graph, stable_vector and intrusive_ptr especially); (config of the target Boost::boost is in Sofa.Type). The change is really easy. just replace boost::filesystem with std::filesystem.; The only non trivial 1-1 replacement was for managing unicode path (not sure on the change actually). This is finally possible because minimum requirement is ubuntu 20.04 (with an updated version of gcc supporting std::filesystem instead of std::experimental::filesystem) and macOS 10.15 (same with its clang version/mac SDK). [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/177]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2342:1271,failure,failures,1271,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2342,2,['failure'],['failures']
Availability,"boost::locale was only once in FileRepository ; and since we can use std::locale from the STL, this library seems not useful anymore. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1033:390,failure,failures,390,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1033,2,['failure'],['failures']
Availability,"boost::program_option was introduced in SofaHelper because of the utility class ArgumentParser. ; This class is only used from application/gui-related modules, so this file and the boost::program_option dependency are moved into SofaGuiCommon. And boost::system seems not used at all so lets remove this unused thing. SofaFramework needs now only:; - thread (for the not-so-used TimeoutWatcher) and could be replaced with the future [std::jthread](https://en.cppreference.com/w/cpp/thread/jthread) from C++20; - filesystem, which could be removed if std::filesystem could be used everywhere 😥; The other boost dependencies (stable_vector, intrusive_ptr, graph?) seems to be usable with a header-only version.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1848:1254,failure,failures,1254,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1848,2,['failure'],['failures']
Availability,"bou/discussions/139. **Description**; It is not possible to create a CMake project that depends on the latest SOFA release on MacOS. The following error happen:; ```cmake; CMake Error at /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiTargets.cmake:91 (message):; The imported target ""runSofa"" references the file. ""/Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/bin/runSofa-22.06.00"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""/Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiTargets.cmake"". but not all the files it references. Call Stack (most recent call first):; /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiConfig.cmake:55 (include); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/Bindings.SofaGuiConfig.cmake:36 (find_package); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/SofaPython3Config.cmake:86 (include); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/BindingsConfig.cmake:34 (find_package); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/SofaPython3Config.cmake:86 (include); CMakeLists.txt:5 (find_package); ```. **Steps to reproduce**; 1. Unzip the latest SOFA release for MacOS inside `$SOFA_ROOT`; 2. Create an empty c++ project with the following CMakeLists.txt:; ```cmake; cmake_minimum_required(VERSION 3.20); project(test). find_package(SofaFramework); find_package(SofaPython3). ```; 3. Call cmake using `cmake -DCMAKE_PREFIX_PATH=$SOFA_ROOT .`. **Expected behavior**; No cmake error. ---------------------------------------------. ### Environment. **Cont",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3485:1103,Down,Downloads,1103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3485,1,['Down'],['Downloads']
Availability,"build error on the master branch of SOFA. Using Eigen v3.3.7. ```; Building CXX object SofaKernel/SofaBase/SofaBaseMechanics/CMakeFiles/SofaBaseMechanics.dir/BarycentricMapping.cpp.o; In file included from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenBaseSparseMatrix.h:35,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenSparseMatrix.h:26,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaBaseMechanics/BarycentricMapping.h:26,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaBaseMechanics/BarycentricMapping.inl:25,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/modules/SofaBaseMechanics/BarycentricMapping.cpp:23:; /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenBaseSparseMatrix_MT.h:348:11: error: ‘ProductBase’ was not declared in this scope; 348 | : traits<ProductBase<SparseTimeDenseProduct_MT<Lhs,Rhs>, Lhs, Rhs> >; | ^~~~~~~~~~~; /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenBaseSparseMatrix_MT.h:348:67: error: wrong number of template arguments (3, should be 1); 348 | : traits<ProductBase<SparseTimeDenseProduct_MT<Lhs,Rhs>, Lhs, Rhs> >; | ^; In file included from /usr/include/eigen3/Eigen/Core:365,; from /usr/include/eigen3/Eigen/SparseCore:11,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MultiMatrixAccessor.h:25,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenBaseSparseMatrix.h:30,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenSparseMatrix.h:26,; f",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1412:918,error,error,918,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1412,1,['error'],['error']
Availability,"by filtering duplicates warnings/errors/crashes. This should fix JVM heap problems on small VMs when parsing scene-testing/warnings.txt, scene-testing/errors.txt and scene-testing/crashes.txt. Please don't forget the real problem is that we have 60k+ scene-test warnings... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/555:33,error,errors,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/555,4,"['error', 'failure']","['errors', 'failures']"
Availability,"c/SofaKernel/SofaBase/../modules/SofaBaseMechanics/BarycentricMapping.inl:25,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/modules/SofaBaseMechanics/BarycentricMapping.cpp:23:; /usr/include/eigen3/Eigen/src/Core/util/ForwardDeclarations.h:17:29: note: provided for ‘template<class T> struct Eigen::internal::traits’; 17 | template<typename T> struct traits;; | ^~~~~~; In file included from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenBaseSparseMatrix.h:35,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenSparseMatrix.h:26,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaBaseMechanics/BarycentricMapping.h:26,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaBaseMechanics/BarycentricMapping.inl:25,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/modules/SofaBaseMechanics/BarycentricMapping.cpp:23:; /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenBaseSparseMatrix_MT.h:348:69: error: expected ‘{’ before ‘>’ token; 348 | : traits<ProductBase<SparseTimeDenseProduct_MT<Lhs,Rhs>, Lhs, Rhs> >; | ^; /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenBaseSparseMatrix_MT.h:457:23: error: expected template-name before ‘<’ token; 457 | : public ProductBase<SparseTimeDenseProduct_MT<Lhs,Rhs>, Lhs, Rhs>; | ^; /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenBaseSparseMatrix_MT.h:457:23: error: expected ‘{’ before ‘<’ token; make[2]: *** [SofaKernel/SofaBase/SofaBaseMechanics/CMakeFiles/SofaBaseMechanics.dir/build.make:206: SofaKernel/SofaBase/SofaBaseMechanics/CMakeFiles/SofaBaseMechanics.dir/BarycentricMapping.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:1325: SofaKernel/SofaBase/SofaBaseMechanics/CMakeFiles/SofaBaseMechanics.dir/all] Error 2; make: *** [Makefile:163: all] Error 2; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1412:3272,error,error,3272,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1412,6,"['Error', 'error']","['Error', 'error']"
Availability,"change condition. Fix #1857 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1868:574,failure,failures,574,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1868,2,['failure'],['failures']
Availability,cherry-pick only the fix in TopologicalChangeProcessor submitted by @fangzhouzisb in PR #1217 ; The other fix needs further discussion. Fix #1213. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1247:403,failure,failures,403,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1247,2,['failure'],['failures']
Availability,"classid is return the ClassInfo associated for a type. ; As there is a static private field in the classid function the first call is used to initialized this static structure. ; The only usage I can see of calling that explicitely is that, because of the multi-threading the initialization was not done properly.; But since c++ 11, initialization of static member is standardize offer thread-safetiness guarantees.; Se we can probably remove that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1906:993,failure,failures,993,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1906,2,['failure'],['failures']
Availability,cmake error,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2814:6,error,error,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2814,1,['error'],['error']
Availability,"coefficient is always zero (since for no strain we have no stress). For examples the coefficients for polynomials [3,2,4] will be put as [a1,a2,a3,b1,b2,c1,c2,c3,c4].; The dedication of jacobian matrix for PolynomialSpringForceField is given below; ![Pol1](https://user-images.githubusercontent.com/28653498/79741283-45f34c00-8301-11ea-8472-778b8b4c4dc4.JPG); ![Pol2](https://user-images.githubusercontent.com/28653498/79741289-4855a600-8301-11ea-86fc-b1a2aa29b92c.JPG); ![Pol3](https://user-images.githubusercontent.com/28653498/79741294-4ab80000-8301-11ea-8ef9-ff2a29603218.JPG); ![Pol4](https://user-images.githubusercontent.com/28653498/79741295-4be92d00-8301-11ea-9ef8-a444c6d23f44.JPG); I guess the dedication has to be added as documentation, but I do not know how to add it. For RestShapeSpring I added an exponetial addition to the denominator to avoid Nan problems for cases when spring has a zero length. As a result, the stress simulation is shifted compared with polynomial values, but it keeps its nonlinearity. Here is the dedication of a derivative; ![RestPol1](https://user-images.githubusercontent.com/28653498/79741632-de89cc00-8301-11ea-95a5-72803bb1d259.JPG); ![RestPol2](https://user-images.githubusercontent.com/28653498/79741636-e0ec2600-8301-11ea-87f6-fd7ce1e8c3d1.JPG); ![RestPol3](https://user-images.githubusercontent.com/28653498/79741643-e34e8000-8301-11ea-8ce7-5e44658d802d.JPG); ![RestPol4](https://user-images.githubusercontent.com/28653498/79741646-e3e71680-8301-11ea-9d20-5c1327fb4080.JPG). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1342:2477,failure,failures,2477,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1342,2,['failure'],['failures']
Availability,"compilation passed with GCC v.7.3 (default in fedora 27). I did not checked at which GCC version between those two this starts to happen. ```; /home/vm-fedora-28/sofa/modules/SofaBoundaryCondition/FixedPlaneConstraint.cpp: In instantiation of ‘void sofa::component::projectiveconstraintset::FixedPlaneConstraint<DataTypes>::projectResponseT(const sofa::core::MechanicalParams*, DataDeriv&) [with DataDeriv = sofa::helper::vector<sofa::defaulttype::RigidDeriv<3, double>, sofa::helper::CPUMemoryManager<sofa::defaulttype::RigidDeriv<3, double> > >; DataTypes = sofa::defaulttype::StdRigidTypes<3, double>]’:; /home/vm-fedora-28/sofa/SofaGeneral/../modules/SofaBoundaryCondition/FixedPlaneConstraint.inl:173:31: required from ‘void sofa::component::projectiveconstraintset::FixedPlaneConstraint<DataTypes>::projectResponse(const sofa::core::MechanicalParams*, sofa::component::projectiveconstraintset::FixedPlaneConstraint<DataTypes>::DataVecDeriv&) [with DataTypes = sofa::defaulttype::StdRigidTypes<3, double>; sofa::component::projectiveconstraintset::FixedPlaneConstraint<DataTypes>::DataVecDeriv = sofa::core::objectmodel::Data<sofa::helper::vector<sofa::defaulttype::RigidDeriv<3, double>, sofa::helper::CPUMemoryManager<sofa::defaulttype::RigidDeriv<3, double> > > >; typename DataTypes::VecDeriv = sofa::helper::vector<sofa::defaulttype::RigidDeriv<3, double>, sofa::helper::CPUMemoryManager<sofa::defaulttype::RigidDeriv<3, double> > >]’; /home/vm-fedora-28/sofa/modules/SofaBoundaryCondition/FixedPlaneConstraint.cpp:58:44: required from here; /home/vm-fedora-28/sofa/modules/SofaBoundaryCondition/FixedPlaneConstraint.cpp:74:100: internal compiler error: in type_dependent_expression_p, at cp/pt.c:25100; ed int > ::const_iterator it = this->indices.getValue().begin(); it != this->indices.getValue().end(); ++it); ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ```. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/673:1909,error,error,1909,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/673,1,['error'],['error']
Availability,"concept. Currently, I run the checks on a slave on ci.inria.fr, and the current POC does a minimalist build / install / run tests workflow. But I think it would be worth asking ourselves what the perfect CI/CD pipeline could be for SOFA & it's plugins. In my mind, I'd like this:. SOFA:; - build / run tests (of course...); - build documentation (doxygen, sphinx...) & deploy on github pages / readthedocs / website; - build docker image & push on docker hub or equivalent (consistent build environment); - generate standalone binaries, zip & upload on github pages / website (SOFA-latest / sofa-nightly build...). PLUGINS:; - load docker image, or wget binaries generated by SOFA; - build / run tests (of course...); - build documentation (doxygen, sphinx...) & deploy on github pages / readthedocs / website; - build docker image & push on docker hub or equivalent; - generate binaries, zip & upload on github pages / website; ; ADVANTAGES of github actions vs JK2:; - ALL CI/CD config centralized in a .github folder in the git repository; - NO separate tool but Github's interface; - SUPER DUPER KICKASS interface design from github, gives direct access to all logs, checks, status badges etc. for each workflow / job / step in the Github checks processes. ![plop2](https://user-images.githubusercontent.com/13734391/69730387-3e4fc280-1128-11ea-8f91-20eeb660d233.png). DISADVANTAGES:; - Still in beta (some bugs noticed, especially when running in self-hosted slaves...); - A lot to recode given what @guparan did in JK2; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1225:1907,failure,failures,1907,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1225,2,['failure'],['failures']
Availability,"conditioner for ShewchukPCGLinearSolver; - `examples/Components/linearsolver/preconditioner/FEMBAR-ShewchukPCGLinearSolver-NoPreconditioner.scn`: ShewchukPCGLinearSolver with no preconditioner. Similar to the classical CG. Can be used for comparison.; - `examples/Components/linearsolver/preconditioner/FEMBAR-ShewchukPCGLinearSolver-WarpedAsyncSparseLDLSolver.scn`: AsyncSparseLDLSolver used as a preconditioner for ShewchukPCGLinearSolver. When the matrix has not been assembled, it is warped using a RotationFinder. This is done using an intermediate component: WarpPreconditioner. All the other scenes from the `examples/Components/linearsolver` folder have been modified so it is easy to change the resolution of the deformable beam. `totalMass` instead of `vertexMass`, and `BoxROI` instead of raw indices. In WarpPreconditioner, an additional Data is introduced to request matrix assembly at a given frequency. This is to minimize the cost of matrix assembly. Instead of assembling the matrix, the old one is used, taking into account the rotations compared to the previous time step. The same mechanism exists in ShewchukPCGLinearSolver. There are some refactoring in SparseLDLSolver to make more elegant code (without duplicated code) in AsyncSparseLDLSolver, but no changes are introduced.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2661:2462,failure,failures,2462,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2661,2,['failure'],['failures']
Availability,"config.h must be included before ObjectFactory. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4740:592,failure,failures,592,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4740,4,['failure'],['failures']
Availability,"contains #2534 . Just restore from old repository and update the files to compile with up to date master branch. ; No optimization or cleaning done yet. In term of performances, simulation of a Beam of 3645 Hexahedra:; - CPU: ~42.2 fps; - CUDA: ~180 fps. Using those scenes : ; sofa-src/applications/plugins/SofaCUDA/examples/beam10x10x46-hexafem-implicit-CPU.scn; sofa-src/applications/plugins/SofaCUDA/examples/beam10x10x46-hexafem-implicit-CUDA.scn. ![image](https://user-images.githubusercontent.com/21199245/145564675-5c399ecc-93ab-4fee-8135-b4c1b5459e2d.png). NB: simulations were performed without rendering the forcefield.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2535:1176,failure,failures,1176,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2535,2,['failure'],['failures']
Availability,"continue porting changes from old branches: https://github.com/epernod/sofa/pull/12/files. getTetrahedron(i) perform a test if i is not out of bounds.; When a function is called often and loop on the list of tetrahedra, it is best to get a ref to the array and loop on it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4639:817,failure,failures,817,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4639,2,['failure'],['failures']
Availability,"continue porting old changes from branch https://github.com/epernod/sofa/pull/13/files. Some cleaning in Qt Gui:; - Rome old options not used? like m_isEmbeddedViewer or m_createViewersOpt; - Store SofaViewer* directly to avoid multiple dynamic casts. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4641:796,failure,failures,796,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4641,2,['failure'],['failures']
Availability,"core::MechanicalParams*, SReal d);; SOFA_CORE_API SReal dt(const sofa::core::MechanicalParams*);; }; }. namespace sofa::core::visual::visualparams; {; SOFA_CORE_API VisualParams* defaultInstance();. SOFA_CORE_API ExecParams* asExecParams(sofa::core::visual::VisualParams*);; SOFA_CORE_API const ExecParams* asExecParams(const sofa::core::visual::VisualParams*);. SOFA_CORE_API sofa::core::visual::DrawTool* getDrawTool(VisualParams* params);; SOFA_CORE_API sofa::core::visual::DisplayFlags& getDisplayFlags(VisualParams* params);; SOFA_CORE_API sofa::core::visual::DrawTool* getDrawTool(const VisualParams* params);; SOFA_CORE_API const sofa::core::visual::DisplayFlags& getDisplayFlags(const VisualParams* params);; }; ```. The PR didn't changed existing simulation behavior or API and thus:; - shouldn't have any impact on sofa simulations; - shouldn't requires code refactoring. Because of the cleaning of the header dependency graph, third party code to include explicity the header files they are using.; The following ones are less visible:; ```cpp; #include<sofa/core/ExecParams.h>; #include<sofa/core/ConstraintParams.h>; #include<sofa/core/MechanicalParams.h> ; #include<sofa/core/visual/VisualParams.h>; #include<sofa/core/visual/DisplayFlags.h>; #include<sofa/core/visual/DrawTool.h>; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1794:3518,failure,failures,3518,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1794,2,['failure'],['failures']
Availability,"ction object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `BVHNarrowPhase` component, and warn the user.; - `DirectSAP` is no longer a collision detection object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `DirectSAPNarrowPhase` component, and warn the user.; - `BruteForceDetection` has been replaced with `BruteForceBroadPhase` and `BVHNarrowPhase` in all scenes (xml, python etc); - `CudaCollisionDetection` no longer inherits from `BruteForceDetection`. Instead, it inherits from `BruteForceBroadPhase` and `NarrowPhaseDetection`. In a future PR, this component can be transformed to a narrow phase only.; - Fix code where `BruteForceDetection` is used. If `BruteForceDetection` is found in the scene, the warning to the user looks like:; ```; [DEPRECATED] [BruteForceDetection(bruteForceDetection1)] BruteForceDetection component is deprecated. ; As a replacement, use a BroadPhase component, such as [BruteForceBroadPhase, IncrSAP, ParallelBruteForceBroadPhase, RayTraceDetection], ; AND a NarrowPhase component, such as [BVHNarrowPhase, DirectSAPNarrowPhase, IncrSAP, ParallelBVHNarrowPhase, RayTraceDetection]. ; BruteForceBroadPhase and BVHNarrowPhase have been automatically added to your scene for backward compatibility. ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2118:2284,failure,failures,2284,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2118,2,['failure'],['failures']
Availability,"ction. - Master branch (commit df49f3a754264489b14db69b38862a5b45d57168). ```; 100 iterations done in 12.9731 s ( 7.70827 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 15.41 1 0.01 121.72 98.03 20.57 98.03 77.48 .....Get Compliance; ```. - This PR (without parallelization). The benchmark should be similar to the master branch. ```; 100 iterations done in 13.1572 s ( 7.6004 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 16.31 1 0.01 134.76 98.34 22.21 98.34 76.54 .....Get Compliance; ```. - This PR (with parallelization). ```; 100 iterations done in 5.94345 s ( 16.8253 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 15.76 1 0.01 30.62 26.85 5.55 26.85 47.91 .....Get Compliance; ```. On my machine there is a nice speedup of x3.66 on the `Get Compliance` timer, and x2.18 in terms of global FPS. # Additional Benchmarks. I wanted to make sure that the usual solve of SparseLDLSolver did not regress in terms of performances. I benchmarked `examples/Component/LinearSolver/Direct/FEMBAR_SparseLDLSolver.scn` on 10000 steps. - Master branch (commit df49f3a754264489b14db69b38862a5b45d57168). ```; 10000 iterations done in 28.2657 s ( 353.785 FPS).; ```. - This PR. ```; 10000 iterations done in 28.3223 s ( 353.078 FPS).; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3986:2184,failure,failures,2184,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986,2,['failure'],['failures']
Availability,"ctions like invert, etc. when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace.; - vector_device now needs a new template parameter, implementing ZeroConstructor and SimpleCopy (already done in SofaCUDA and SofaOpenCL). ### Functionality:; - vector does not use the Messaging mechanism anymore; it was used in the `int` and `unsigned int` specialized version of read(). Instead, I replaced it with std::cerr AND setting a failbit to the resulting stream (which should have been done before actually).; Furthermore, I also changed Data to catch any cerr message (if any) and transpose it into the Messaging mechanism (if the stream as a failbit flag enabled) ; - vector can check bounds with the operator[], in debug mode. ; Before, it was displaying a message (with the Messaging mechanism), tried to dump the stack and quit on an assertion error.; Now it throws an exception (with the same message) which : ; - makes it crash if it is not caught (like before actually); - displays the message and carry on if caught somewhere (and can further debug with stack trace or whatever); which is a not so-bad solution in my opinion. ## Talking; - the cerr thingy; - template parameters; - access bound thing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1893:2131,error,error,2131,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1893,1,['error'],['error']
Availability,"cxxopts throws exceptions when same names are added, which obviously crashes the whole program because they are uncaught. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4947:666,failure,failures,666,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4947,2,['failure'],['failures']
Availability,"cy and suppress this warning.; Call Stack (most recent call first):; SofaKernel/modules/Sofa.Config/cmake/SofaMacrosConfigure.cmake:112 (cmake_dependent_option); SofaKernel/modules/Sofa.Config/cmake/SofaMacrosConfigure.cmake:141 (sofa_add_generic); modules/CMakeLists.txt:38 (sofa_add_plugin); This warning is for project developers. Use -Wno-dev to suppress it. Adding plugin SofaOpenglVisual; Adding plugin SofaMiscTopology; Adding plugin SofaMiscExtra; Adding plugin SofaMiscForceField; Adding plugin SofaMiscEngine; Adding plugin SofaMiscSolver; Adding plugin SofaMiscFem; Adding plugin SofaMiscMapping; Adding plugin SofaMiscCollision; SofaMiscModule: build all maintained sofa components.; Found Boost: E:/GitHub/vcpkg/installed/x64-windows/include (found version ""1.77.0"") found components: program_options ; -- SofaGuiCommon: Sofa.GL dependent features enabled.; SofaGuiQt: will use Qt5; Adding collection SofaComponentAll; J:/GitHub/sofa/src/applications/plugins/SofaHighOrder does not exist and will be ignored.; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; Python:; Version: 3.9.7; Executable: D:/11631/miniconda3/python.exe; Headers: D:/11631/miniconda3/include; Libraries: D:/11631/miniconda3/libs/python39.lib; User site: C:\Users\11631\AppData\Roaming\Python\Python39\site-packages; pybind11:; Version: 2.8.1; Config: E:/GitHub/vcpkg/installed/x64-windows/share/pybind11/pybind11Config.cmake; Adding plugin LMConstraint; SofaDistanceGrid not found: DistanceLM codes will not be compiled; Adding application runSofa; Write Plugin list at J:/GitHub/sofa/build/bin/plugin_list.conf.default; Configuring incomplete, errors occurred!; See also ""J:/GitHub/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""J:/GitHub/sofa/build/CMakeFiles/CMakeError.log"". how can i solve this problem，thank you",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2814:4939,error,errors,4939,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2814,1,['error'],['errors']
Availability,"d objects, ; 3. A `SubsetMultiMapping` that will make the link between the two provided objects and the new mechanical state; 4. The spring force field. Since `SubsetMultiMapping` was initially in SofaMiscMapping, it has been moved into SofaBaseMechanics. A compatibility layer is available. Other components using `StiffSpringForceField` had to be adapted to create also the extra components. An example is `AttachBodyPerformer` which creates the spring between an object and the mouse (shift + clic). WARNING:; Since `StiffSpringForceField` is now necessarily located in a mapped node, its stiffness matrix is not mapped in case of a built linear system. The forces are then computed explicitly only. This issue will be addressed in the new design of the matrix assembly. TODO:. - [x] A description for this PR; - [ ] Handle topological changes in `SpringForceField` -> see https://github.com/sofa-framework/sofa/pull/2653 and https://github.com/sofa-framework/sofa/pull/2729; - [x] Deal with `BoxStiffSpringForceField` -> see https://github.com/sofa-framework/sofa/pull/2621; - [x] Compilation and tests issues on CI (CUDA); - [x] In `AttachBodyPerformer`, a Node remains in the scene when `AttachBodyPerformer` is destroyed. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/224]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2554:3070,failure,failures,3070,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2554,2,['failure'],['failures']
Availability,"d paths this implicit behavior was remove and and made explicit using the ExpectMessage and MessageAsTestFailure raii's. In the process the old behavior of generating failure on errors was lost. . The PR mix the two and: ; - restores this old behavior by default so a test that specify nothing will fail on warning and error.; - but in addition, each tests class/function/bloc can now specify how a specific bloc can react to a message. This can be done using a new syntax taken inspired mimicking the one from gtest. ; - improve the way test failures about warning and error are reported:; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5074/testReport/junit/(root)/RigidRigidMappingTest_0/test_translation/; . Example: ; ```cpp; class MyTest : public Sofa_test<>; ; /// This test will fail if a warning/error message is send because the test inherit from sofa_test; void defaultTestBehavior(); {; ....; }. /// This test should generate failure if NO warning and NO Error message is emitted; void catchingTestBehavior(); {; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;. mycomponent.load(""atotallybrokenfile.txt""); }. /// By default test failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:1266,failure,failure,1266,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,3,"['Error', 'failure']","['Error', 'failure']"
Availability,"defaulttype::MatSym becomes sofa::type::MatSym. ## Breaking; Same as #1734:; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions like invert, etc. when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. ## Talking. - An other contribution I would like to spread to the sofa code base: ; Instead of throwing a text information if the function cannot do (like matrix non invertible, etc), ; this should always return a boolean value and apply the [[nodiscard]] flag to oblige the user to use the return value.; This makes the compiler generates a warning; I would even push to make it a compilation error; More generally, it would be cool to use the [[nodiscard]] flag much more for critical code.; ~~I tried to even use the [[nodiscard ""MESSAGE""]] but this feature seems only included with c++20 so I may change this PR to run successfully on the CI.~~; As expected, this is not supported by the CI 🙁. - the compatibility layer still holds the dependency on helper for the messaging, so we should discuss about that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1775:2113,failure,failures,2113,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1775,2,['failure'],['failures']
Availability,"different pre-loaded plugins.; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn):; <RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components [MeshExporter, ]-->; <RequiredPlugin pluginName='SofaGeneralSimpleFem'/> <!-- Needed to use components [HexahedralFEMForceField, ]-->. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SofaViewer] QtViewer::keyPressEvent, CONTROL pressed; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins.; Your scene may not work on a sofa environment with different pre-loaded plugins.; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn):; <RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components [MeshExporter, ]-->; <RequiredPlugin pluginName='SofaGeneralSimpleFem'/> <!-- Needed to use components [HexahedralFEMForceField, ]-->. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use w",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2451:5720,ERROR,ERROR,5720,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2451,2,['ERROR'],['ERROR']
Availability,"dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Component.AnimationLoop; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; Sofa.Component.Collision.Geometry; Sofa.Component.Collision.Response.Contact; Sofa.Component.Constraint.Lagrangian.Correction; Sofa.Component.Constraint.Lagrangian.Solver; Sofa.Component.IO.Mesh; Sofa.Component.LinearSolver.Iterative; Sofa.Component.LinearSystem; Sofa.Component.Mapping.Linear; Sofa.Component.Mass; Sofa.Component.ODESolver.Backward; Sofa.Component.SolidMechanics.FEM.Elastic; Sofa.Component.StateContainer; Sofa.Component.Topology.Container.Constant; Sofa.Component.Topology.Container.Grid; Sofa.Component.Visual; Sofa.GL.Component.Rendering3D; Sofa.GL.Component.Shader; Sofa.Simulation.Core; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:4519,failure,failures,4519,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,2,['failure'],['failures']
Availability,"dvancedTimer_deepTreeDisabled/16/2 0.016 ms 0.016 ms 40727 nbTimers=272; BM_AdvancedTimer_deepTreeDisabled/32/2 0.078 ms 0.078 ms 8960 nbTimers=1056; BM_AdvancedTimer_deepTreeDisabled/64/2 0.502 ms 0.516 ms 1000 nbTimers=4.16k; BM_AdvancedTimer_deepTreeDisabled/1/3 0.000 ms 0.000 ms 3733333 nbTimers=3; BM_AdvancedTimer_deepTreeDisabled/2/3 0.001 ms 0.001 ms 1120000 nbTimers=14; BM_AdvancedTimer_deepTreeDisabled/4/3 0.004 ms 0.004 ms 194783 nbTimers=84; BM_AdvancedTimer_deepTreeDisabled/8/3 0.029 ms 0.029 ms 24889 nbTimers=584; BM_AdvancedTimer_deepTreeDisabled/16/3 0.256 ms 0.255 ms 2635 nbTimers=4.368k; BM_AdvancedTimer_deepTreeDisabled/32/3 2.84 ms 2.85 ms 236 nbTimers=33.824k; BM_AdvancedTimer_deepTreeDisabled/64/3 63.2 ms 62.5 ms 11 nbTimers=266.304k; BM_AdvancedTimer_deepTreeDisabled/1/4 0.000 ms 0.000 ms 3200000 nbTimers=4; BM_AdvancedTimer_deepTreeDisabled/2/4 0.001 ms 0.001 ms 560000 nbTimers=30; BM_AdvancedTimer_deepTreeDisabled/4/4 0.016 ms 0.015 ms 44800 nbTimers=340; BM_AdvancedTimer_deepTreeDisabled/8/4 0.248 ms 0.246 ms 2800 nbTimers=4.68k; BM_AdvancedTimer_deepTreeDisabled/16/4 7.14 ms 7.08 ms 75 nbTimers=69.904k; BM_AdvancedTimer_deepTreeDisabled/32/4 203 ms 203 ms 3 nbTimers=1082.4k; BM_AdvancedTimer_deepTreeDisabled/64/4 4035 ms 4031 ms 1 nbTimers=17.0435M; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2645:8047,failure,failures,8047,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2645,2,['failure'],['failures']
Availability,"e anything. It's time for refactoring!. My focus was the refactoring of the unit tests. Before the PR, a unique class tested the 3 components using a series of `if`. I refactored the 3 classes in order to reduce the specific processing in the unit test, i.e. reduce the number of `if`. - The 3 classes now inherit from a common base class `BaseLinearElasticityFEMForceField`. I moved everything that was common (only regarding the unit test. More common code is remaining) in this class. It includes:; - A common `Data` for Young's modulus and Poisson's ratio. This way, they share type, the same default value, and the same description. Note that Young's modulus in `FastTetrahedralCorotationalForceField` and `TetrahedralCorotationalFEMForceField` was a scalar, and now it's a vector of scalars. This requires to add a common way to access the Young's modulus of the i-th element. This is also a breaking change. This allows to define a typed unit test for all 3 classes. The particularities of the classes are defined in a derived class of the unit test. To me, a great advantage, is that we identify clearly that there are unit tests for the 3 components, because there a file for each class. It was not obvious before. [ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/133]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4778:2094,failure,failures,2094,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4778,2,['failure'],['failures']
Availability,"e following error happen:; ```cmake; CMake Error at /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiTargets.cmake:91 (message):; The imported target ""runSofa"" references the file. ""/Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/bin/runSofa-22.06.00"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""/Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiTargets.cmake"". but not all the files it references. Call Stack (most recent call first):; /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiConfig.cmake:55 (include); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/Bindings.SofaGuiConfig.cmake:36 (find_package); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/SofaPython3Config.cmake:86 (include); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/BindingsConfig.cmake:34 (find_package); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/SofaPython3Config.cmake:86 (include); CMakeLists.txt:5 (find_package); ```. **Steps to reproduce**; 1. Unzip the latest SOFA release for MacOS inside `$SOFA_ROOT`; 2. Create an empty c++ project with the following CMakeLists.txt:; ```cmake; cmake_minimum_required(VERSION 3.20); project(test). find_package(SofaFramework); find_package(SofaPython3). ```; 3. Call cmake using `cmake -DCMAKE_PREFIX_PATH=$SOFA_ROOT .`. **Expected behavior**; No cmake error. ---------------------------------------------. ### Environment. **Context**. - System: MacOS; - Version of SOFA: release 22.06.00. [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/10013148/CM",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3485:1240,Down,Downloads,1240,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3485,1,['Down'],['Downloads']
Availability,"e name=""root"" gravity=""0 -9.81 0"" dt=""0.01"">; <DefaultAnimationLoop name=""animationLoop"" solveVelocityConstraintFirst=""true"" . <Node name=""Object1"">; <EulerImplicitSolver name=""ODE0"" rayleighMass=""0.1"" rayleighStiffness=""0.1"" />; <SparseLDLSolver template=""CompressedRowSparseMatrixMat3x3d"" name=""Linear0"" />; <TetrahedronSetTopologyContainer name=""Torus0Topo"" position=""@/Mesh/stuffing.outputPoints"" tetrahedra=""@/Mesh/stuffing.outputTetrahedra""/>; <MechanicalObject name=""Torus0State"" template=""Vec3d"" velocity=""@/Mesh/TorusVVel.output_position"" rest_position=""@/Mesh/stuffing.outputPoints"" position=""@Torus0VXForm.output_position"" />; <TetrahedronSetGeometryAlgorithms name=""Torus0Algo"" />; <MeshMatrixMass name=""MMass"" massDensity=""2.0"" />; <TetrahedronFEMForceField name=""FEM"" youngModulus=""50"" poissonRatio=""0.45"" />; </Node>. <Node name=""Object2"" >; <EulerImplicitSolver />; <CGLinearSolver iterations=""200"" tolerance=""1e-09"" threshold=""1e-09""/>; <MechanicalObject template=""Rigid3d"" name=""myParticle"" position=""0 0 0 0 0 0 1"" showObject=""1"" />; <UniformMass name=""UMass"" totalMass=""1"" />; <ConstantForceField totalForce=""1 0 0 0 0 0"" />; </Node>; </Node>; ```. #### Advantages; - easy to write a scene with a global gravity; - light nodes (no additional ForceField appearing). #### Drawbacks; - prone to error for beginners not seeing that a gravity (external force) is acting. ## Proposal; - gravity can still be defined though a data in the Nodes (but default value changed `gravity=""0 0 0""`); - using this data gravity generates a warning (not the default/advised way of designing a scene); - if this gravity data is not null, mass components automatically create a GravityForceField in the node; - GravityForceField have a link towards the mass to avoid recomputing the M matrix; - gravity contribution is added in the matrix system by a ForceField; - GravityForceField must be in the node to compute the gravity. #### Typical scene; old scene works and now you also can write:. ``` xml; ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3149:1300,toler,tolerance,1300,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3149,1,['toler'],['tolerance']
Availability,"e regular grid of hexahedras and this grid is automatically exported as the filename you precised in the .scn/.xml file; - Import/open the .obj in ANY mesh editor (Blender, Unity or whatever); - Display the vertex normals : their orientation are wrong. **Expected behavior**; The normals should have had an orientation which is perpendicular to the local surface around each vertex (should be straight perpendicular to a planar surface around the center and around 45 degrees in the borders, since the vertices touch two different faces there). ---------------------------------------------. ### Environment. **Context**. - System: Windows 10; - Version of SOFA: v20.12 branch at commit ee7664e, v20.12.00 binaries; - State: build directory. **Command called (to copy in a .scn/xml file)**. ```txt. <?xml version=""1.0"" ?>. <Node name=""root"" dt=""0.1"" gravity=""0 0 0"">. 	<VisualStyle displayFlags=""showBehavior hideVisual hideCollision"" />. 	<EulerImplicit name=""cg_odesolver"" printLog=""false"" />; 	<CGLinearSolver iterations=""25"" name=""linear solver"" tolerance=""1.0e-9"" threshold=""1.0e-9"" />; 	; 	<RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components [MeshExporter, ]-->; 	<RequiredPlugin pluginName='SofaGeneralSimpleFem'/> <!-- Needed to use components [HexahedralFEMForceField, ]-->; 	<RequiredPlugin pluginName='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver, ]-->; 	<RequiredPlugin pluginName='SofaOpenglVisual'/> <!-- Needed to use components [OglModel, ]-->; 	; 	; 	<!-- The object to export -->; 	<Node name=""MyRegularGrid"">. 		<MechanicalObject name=""mo""/> ; 		<UniformMass vertexMass=""0.2"" />; 		<RegularGrid name=""hexaGrid"" nx=""6"" ny=""6"" nz=""4"" xmin=""-10.0"" xmax=""10.0"" ymin=""-10.0"" ymax=""10.0"" zmin=""0"" zmax=""0.50""/>; 		<HexahedronSetTopologyContainer name=""Topo"" src=""@hexaGrid"" />		; 		<HexahedralFEMForceField name=""FEM"" youngModulus=""1e13"" poissonRatio=""0.3"" method=""large"" />; 		; 		<!-- Visual node to allow the exportation -->; 		<Nod",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2451:2092,toler,tolerance,2092,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2451,1,['toler'],['tolerance']
Availability,"e the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace.; - vector_device now needs a new template parameter, implementing ZeroConstructor and SimpleCopy (already done in SofaCUDA and SofaOpenCL). ### Functionality:; - vector does not use the Messaging mechanism anymore; it was used in the `int` and `unsigned int` specialized version of read(). Instead, I replaced it with std::cerr AND setting a failbit to the resulting stream (which should have been done before actually).; Furthermore, I also changed Data to catch any cerr message (if any) and transpose it into the Messaging mechanism (if the stream as a failbit flag enabled) ; - vector can check bounds with the operator[], in debug mode. ; Before, it was displaying a message (with the Messaging mechanism), tried to dump the stack and quit on an assertion error.; Now it throws an exception (with the same message) which : ; - makes it crash if it is not caught (like before actually); - displays the message and carry on if caught somewhere (and can further debug with stack trace or whatever); which is a not so-bad solution in my opinion. ## Talking; - the cerr thingy; - template parameters; - access bound thing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1893:3037,failure,failures,3037,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1893,2,['failure'],['failures']
Availability,"e the timings for the `MechanicalMatrixMapper.pyscn` scene for 1000 time steps measured on my computer:. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 74.24 112.80 77.26 2.76 77260.7 100 TOTAL; ...; 4 0.80 1 41.79 62.15 44.22 1.53 44.22 57.23 ....MBKBuild; 5 0.99 1 40.91 61.06 43.32 1.47 43.32 56.07 .....MMM-addKToMatrix; 6 0.99 1 1.69 3.69 1.89 0.17 1.89 2.45 ......jacobian; 6 2.88 1 6.29 9.88 6.85 0.34 6.85 8.86 ......stiffness; 6 9.73 1 16.17 23.13 16.55 0.50 16.55 21.42 ......compressStiffnessMatrix; 6 26.28 1 2.74 4.50 2.98 0.16 2.98 3.86 ......copyKToEigen; 6 29.26 1 0.24 0.54 0.28 0.02 0.28 0.36 ......copyJ1J2ToEigen; 7 29.48 1 0.05 0.14 0.06 0.01 0.06 0.08 .......copyJ2ToEigen; 6 29.54 1 9.06 18.67 10.47 0.75 10.47 13.55 ......Multiplication; 7 29.54 1 4.59 9.56 5.44 0.36 5.44 7.04 .......J1tKJ1; 7 34.98 1 0.76 2.15 0.88 0.11 0.88 1.14 .......J2tKJ2; 7 35.86 1 2.73 5.90 3.28 0.35 3.28 4.24 .......J1tKJ2; 7 39.14 1 0.77 1.77 0.86 0.10 0.86 1.12 .......J2tKJ1; 6 40.01 1 2.62 4.70 2.78 0.19 2.78 3.59 ......J1tKJ1-copy; 6 42.79 1 0 0 0 0 0 0 ......J2tKJ2-copy; 6 42.79 1 0.01 0.04 0.01 0 0.01 0.02 ......J1tKJ2-copy; 6 42.80 1 0.01 0.04 0.02 0 0.02 0.03 ......J2tKJ1-copy; ```. Work on the `MechanicalMatrixMapper` has been done in collaboration with @Esther-R. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2362:2157,failure,failures,2157,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2362,2,['failure'],['failures']
Availability,"e. This assumption was problematic as it favor the testing of code paths that does not generate warning or errors instead of testing all the possible paths. To favor both valid and invalid paths this implicit behavior was remove and and made explicit using the ExpectMessage and MessageAsTestFailure raii's. In the process the old behavior of generating failure on errors was lost. . The PR mix the two and: ; - restores this old behavior by default so a test that specify nothing will fail on warning and error.; - but in addition, each tests class/function/bloc can now specify how a specific bloc can react to a message. This can be done using a new syntax taken inspired mimicking the one from gtest. ; - improve the way test failures about warning and error are reported:; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5074/testReport/junit/(root)/RigidRigidMappingTest_0/test_translation/; . Example: ; ```cpp; class MyTest : public Sofa_test<>; ; /// This test will fail if a warning/error message is send because the test inherit from sofa_test; void defaultTestBehavior(); {; ....; }. /// This test should generate failure if NO warning and NO Error message is emitted; void catchingTestBehavior(); {; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;. mycomponent.load(""atotallybrokenfile.txt""); }. /// By default test failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:1133,error,error,1133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,1,['error'],['error']
Availability,e.g. Eigen among others. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/397:281,failure,failures,281,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/397,2,['failure'],['failures']
Availability,"ected beforehand. . [SofaGraphComponent] ; - `RequiredPlugin` component gives the ability to override the default suffix which is ""_d"" in debug mode. ; It also gives some more advanced options to extend the plugin search. # Remarks. I do not know which version of the GUI is still in use. However I believe that the widget that can add/remove plugins to the `PluginManager` should be removed since there is no valid reason to ; keep it. I am really not sure about the current state of SofaGTestMain. It is hidden somewhere in the folder hierarchy (inside tools directory), and its existence seems to imply that you cannot write a unit test inside sofa without relying on it to ""initialise Sofa"" which is absolutely not the case. See PR #471; Instead having a library which depends on gtest and SofaCore which ; - factorize some initialisation methods when they are actually required in the test `SetUp()` method; - provide some useful abstractions when you want to test some important concepts of a component, like what SofaTest wanted to do, but without the dependency bloat. A potential non exhaustive list of abstactions such a library could provide ; - Mapping ; - linearisation, ; - applyJ applyJT equivalence ; - ForceField; - linearisation; - addDForce addKToMatrix equivalence ; - addKToMatrix must give a SPD matrix (well actually in Sofa convention I think internal forcefields actually give a SND matrix but the idea remains... Nothing of this testing API would require the initialisation of a simulation / node. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/487:3632,failure,failures,3632,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/487,2,['failure'],['failures']
Availability,"ectmodel::Event*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaOpenglVisual.so; #1 0x00007ff67b4f2276 in sofa::simulation::PropagateEventVisitor::processNodeTopDown(sofa::simulation::Node*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #2 0x00007ff67cc2aa57 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaLis",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2057:1258,Down,Downloads,1258,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057,1,['Down'],['Downloads']
Availability,"ed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plug",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:1825,ERROR,ERROR,1825,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"ed; void catchingTestBehavior(); {; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;. mycomponent.load(""atotallybrokenfile.txt""); }. /// By default test failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT(Error) ;; .... ; }; }; }; ```. This PR will generate a lot of new test failure... that are either real failure that deserve investigation or ; tests that was previously simply previously ignoring error & warning messages; . CHANGELOG for @hugtalbot & @guparan :; - TestMessageHandler.cpp implements a new & robust way to connect msg_* message to test failure ; - TestMessageHandler_test.cpp implements test for TestMessageHandler. ; - Sofa_test is updated to use the new TestMessageHandler where msg_error generates test failures ; - All the existing tests have been changed to use the new API & removed the old one. ; - MeshSTL.cpp replace a std:cerr by a msg_error so that FIX the corresponding failing test.; - Message.cpp adds a way to convert message type to string.; - updates externs/gtest to a fresh checkout. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the C",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:2322,Error,Error,2322,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,1,['Error'],['Error']
Availability,"ene test has been added to check collision is working with a stationary object. # Fix freeze; This freeze happened before #2047.; It is due to an infinite loop here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L235; This happened because a map was not updated after some merge operations. And we relied on the value in the map, for example here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L137. # Fix crash detected in #2047. ## Before #2047; The scene freezes always at the same time. In #2067 I explain that the simulation is deterministic. Now that the freeze is fixed, we can notice a crash still occurs, but after the time step of the freeze. ## After #2047 ; A crash occurs, but not always at the same time step. This is because the simulation is no longer deterministic (because of #2047). . Conclusion: #2047 revealed this crash, but was not the cause. It means that a non-deterministic simulation is not a source of crash. ## Fix; The crash is fixed also by updating the values of the map, similarly to the freeze fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2076:3800,failure,failures,3800,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076,2,['failure'],['failures']
Availability,"eneralExplicitOdeSolver; Adding plugin SofaGeneralImplicitOdeSolver; Adding plugin SofaGeneralLinearSolver; Adding plugin SofaGeneralRigid; Adding plugin SofaGeneralObjectInteraction; Adding plugin SofaGeneralSimpleFem; Adding plugin SofaGeneralTopology; Adding plugin SofaTopologyMapping; Adding plugin SofaUserInteraction; Adding plugin SofaConstraint; Adding plugin SofaGeneralLoader; Adding plugin SofaExporter; Adding plugin SofaSparseSolver; SofaSparseSolver: using built-in metis library; Adding plugin SofaPreconditioner; Adding plugin SofaHaptics; Adding plugin SofaValidation; Adding plugin SofaDenseSolver; Adding plugin SofaNonUniformFem; Adding plugin SofaOpenglVisual; Adding plugin SofaMiscTopology; Adding plugin SofaMiscExtra; Adding plugin SofaMiscForceField; Adding plugin SofaMiscEngine; Adding plugin SofaMiscSolver; Adding plugin SofaMiscFem; Adding plugin SofaMiscMapping; Adding plugin SofaMiscCollision; SofaMiscModule: build all maintained sofa components.; CMake Error at /usr/share/cmake-3.15/Modules/FetchContent.cmake:903 (message):; CMake step for cxxopts failed: No such file or directory; Call Stack (most recent call first):; /usr/share/cmake-3.15/Modules/FetchContent.cmake:1006 (__FetchContent_directPopulate); modules/SofaGuiCommon/CMakeLists.txt:18 (FetchContent_Populate). Configuring incomplete, errors occurred!; See also ""/media/maxim/big-500/sofa/build/v21.12/CMakeFiles/CMakeOutput.log"".; See also ""/media/maxim/big-500/sofa/build/v21.12/CMakeFiles/CMakeError.log"".; ```. As I understand there is problem with cxxopts:; ```; if(NOT cxxopts_POPULATED); FetchContent_Populate(cxxopts); ```. ---------------------------------------------. ### Environment; ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.5 LTS; Release:	18.04; Codename:	bionic; ```. ```; gcc-11 --version; gcc-11 (Ubuntu 11.1.0-1ubuntu1~18.04.1) 11.1.0; Copyright (C) 2021 Free Software Foundation, Inc.; This is free software; see the so",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3184:3036,Error,Error,3036,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3184,1,['Error'],['Error']
Availability,"enforces if the given Mat is 3x3 or 4x4 (does not make sense otherwise, or could even crash); 3. add a function toHomogeneousMatrix() for Mat4x4 for RigidTypes (which will use the toHomogenous of Quat); 4. remove uses of operator= with MultiMatrix in ODESolvers; 5. HeadlessRecorder was using a deprecated feature of VisualParameters (sceneTransform); 6. Use PathResolver in MultiMapping; 7. Rename Deprecation Macro in BaseData.h, correct the fix message and remove use of setOwnerClass. Note for 7.: the GUI was displaying either ""Base"" for owner (when hovering on the Data name) or ""no owner found"". I dont really know what was supposed to be displayed.; Now with the correction, all the Data will display their owner's name, which seems a bit useless to me. Before:; ![prclean_2106_beforename](https://user-images.githubusercontent.com/11028016/123656430-35593280-d830-11eb-8f3a-bfd4283ac64f.png) ![prclean_2106_beforeflags](https://user-images.githubusercontent.com/11028016/123656436-368a5f80-d830-11eb-8a41-d772aa2f679a.png). After:; ![prclean_2106_aftername](https://user-images.githubusercontent.com/11028016/123656520-4ace5c80-d830-11eb-86ba-9a761911530b.png) ![prclean_2106_afterflags](https://user-images.githubusercontent.com/11028016/123656532-4d30b680-d830-11eb-8a6a-af7ec55843f4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2210:1963,failure,failures,1963,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2210,2,['failure'],['failures']
Availability,"eq/peq() functions defined in IdentityMapping should be moved elsewhere; no need to know IdentityMapping to use them. These functions are now located in a file core/MappingHelper.h alongside Mapping.h, as these functions would likely be used only by mappings. Some points to discuss:; - header filename ?; - eq/peq functions name themselves are not very informative... should it be assign() and add() for example ?. Fix #2122 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2137:972,failure,failures,972,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2137,2,['failure'],['failures']
Availability,"equiredPlugin name=""Sofa.Component.LinearSolver.Direct""/> <!-- Needed to use components [SparseLDLSolver] -->; <RequiredPlugin name=""Sofa.Component.Mapping.NonLinear""/> <!-- Needed to use components [RigidMapping] -->; <RequiredPlugin name=""Sofa.Component.Mass""/> <!-- Needed to use components [UniformMass] -->; <RequiredPlugin name=""Sofa.Component.MechanicalLoad""/> <!-- Needed to use components [ConstantForceField] -->; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/> <!-- Needed to use components [EulerImplicitSolver] -->; <RequiredPlugin name=""Sofa.Component.Setting""/> <!-- Needed to use components [BackgroundSetting] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Visual""/> <!-- Needed to use components [VisualStyle] -->. <VisualStyle displayFlags=""showVisualModels"" />; <BackgroundSetting color=""0.8 0.8 0.8 1"" />. <FreeMotionAnimationLoop name=""FreeMotionAnimationLoop"" />; <GenericConstraintSolver maxIterations=""10"" tolerance=""1.0e-3""/>. <Node name=""Mesh"" >; <EulerImplicitSolver firstOrder=""false"" rayleighMass=""0.1"" rayleighStiffness=""0.1"" />; <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixd"" />. <MechanicalObject name=""mstate"" position=""0 0 0 0 0 0 1"" template=""Rigid3d"" />; <UniformMass totalMass=""1""/>. <Node name=""AttachPoint"">; <MechanicalObject name=""points"" template=""Vec3"" position=""0 0 0 1 0 0 0 1 0 0 0 1"" />; <ConstantForceField indices=""1"" forces=""0.0 0.0 1.0"" showArrowSize=""0.2""/>; <RigidMapping />; </Node>; <LinearSolverConstraintCorrection linearSolver=""@precond""/>; </Node>. <Node name=""Mesh2"" >; <MechanicalObject name=""mstate"" position=""0 0 0 0 0 0 1"" template=""Rigid3d"" />; </Node>. <BilateralInteractionConstraint template=""Rigid3d""; object1=""@Mesh/mstate""; object2=""@Mesh2/mstate""; first_point=""0"" second_point=""0"" />; </Node >; ```. ______________________________________________________. By submitting this pull request, ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4234:2218,toler,tolerance,2218,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4234,1,['toler'],['tolerance']
Availability,error when trying to open a SOFA scene via command line,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/569:0,error,error,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/569,1,['error'],['error']
Availability,"error: Plugin not found:""SofaMiscForceFieldDev""",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/307:0,error,error,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/307,1,['error'],['error']
Availability,"etection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Cor",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:4252,ERROR,ERROR,4252,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"everything is in the PR title. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2816:575,failure,failures,575,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2816,2,['failure'],['failures']
Availability,everything is in the title.; This PR: ; - clean some code commented.; - remove the HAVE_NEW_HEXA macro which was hardcoded to true since 2009; - change the NDEBUG topology test into a c++if condition so the code is compiled. work duplicated with STC#5 branch. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/693:516,failure,failures,516,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/693,2,['failure'],['failures']
Availability,"f which, in its turn, is used in TetrahedronFEMForceField (the same @links). So, without initialization, during init step, the ForceField just crashes. **Steps to reproduce**; runSofa -l libSofaPython3.so test_scene.py. ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); sofa::component::forcefield::TetrahedronFEMForceField<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::init(); sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool); sofa::simulation::Simulation::initNode(sofa::simulation::Node*); sofa::simulation::Simulation::init(sofa::simulation::Node*); __libc_start_main; Segmentation fault (core dumped). **Expected behavior**; the scene has to run (When I replace dataset with dataset1 which I declared as:. diff --git a/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.cpp b/SofaKernel/modules/SofaCore/src/sof",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:2309,fault,fault,2309,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['fault'],['fault']
Availability,"fa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setti",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:3742,ERROR,ERROR,3742,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"fa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:4058,ERROR,ERROR,4058,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"fa; --- PYTHONPATH ---; /home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages; --- sys.path ---; ['', '/home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:2329,ERROR,ERROR,2329,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['ERROR'],['ERROR']
Availability,"fa_env/scenes/reach/reach_env.py. ```. **Env vars**. ```bash; #################; --- sys.version ---; 3.8.10 (default, Jul 29 2024, 17:02:10) ; [GCC 9.4.0]; --- PATH ---; /home/sofa/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin; --- SOFA_ROOT ---; /home/sofa/SOFA_v23.06.00/bin/.runSofa; --- PYTHONPATH ---; /home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages; --- sys.path ---; ['', '/home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Pl",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:2004,ERROR,ERROR,2004,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['ERROR'],['ERROR']
Availability,failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT(Error) ;; .... ; }; }; }; ```. This PR will generate a lot of new test failure... that are either real failure that deserve investigation or ; tests that was previously simply previously ignoring error & warning messages; . CHANGELOG for @hugtalbot & @guparan :; - TestMessageHandler.cpp implements a new & robust way to connect msg_* message to test failure ; - TestMessageHandler_test.cpp implements test for TestMessageHandler. ; - Sofa_test is updated to use the new TestMessageHandler where msg_error generates test failures ; - All the existing tests have been changed to use the new API & removed the old one. ; - MeshSTL.cpp replace a std:cerr by a msg_error so that FIX the corresponding failing test.; - Message.cpp adds a way to convert message type to string.; - updates externs/gtest to a fresh checkout. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures. (This PR cannot do that...read my comment about that). ; - [x] does not break existing scene,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:2425,failure,failure,2425,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,2,"['error', 'failure']","['error', 'failure']"
Availability,"ference; ```. Then anywhere (usually in the constructor body); ```; c_diff.addCallback(this,&MyComponent::myfunction1); ; c_diff.addCallback(this,&MyComponent::myfunction2); ; ```. The main difference with an existing type in sofa if the possibility to attach several functions and more importantly to specify the component on which the callback will be called. This allows to define callbacks as member functions of the component, which simplify access to parameters. Additional test are added allowing to modify the data while the callback is called (in order to avoid cyclic calls). This is usefull for linked data i.e. The callback receives a modification from the parent, the callback is then called and it is allowed to modify the data in the callback which will automatically call update of childs of the data. . The second type introduced in this PR is a wrapper allowing to easily associate a widget with a specific types of data. It can be used as follows: . in a cpp file; `sofa::helper::Creator<sofa::gui::qt::DataWidgetFactory, GenericDataWidget< Data<bool>, QtDataBoxEdit > >	DWClass_bool(""bool"",true);`. QtDataBoxEdit is a Qwidget class defined by the user that needs to define usual functions needed in sofa widgets : ; ```; void readFromData(const Data<bool>& data);; void writeToData(Data<bool>& data);; ```. And constructor must take as parameter the parent and the data as follows :; `QtDataBoxEdit(sofa::gui::qt::DataWidget* parent,const sofa::core::objectmodel::Data<bool> & data) : QCheckBox(parent);`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/911:2261,failure,failures,2261,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/911,2,['failure'],['failures']
Availability,find_package(SofaGui) was failing because of SofaGuiCommon's dependency on SofaComponentAll. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1198:349,failure,failures,349,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1198,2,['failure'],['failures']
Availability,"fix #2182 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2184:556,failure,failures,556,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2184,2,['failure'],['failures']
Availability,fix #551 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1058:267,failure,failures,267,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1058,2,['failure'],['failures']
Availability,fix #988 . tada!; ![barycentric_00000001](https://user-images.githubusercontent.com/21199245/58172989-64d50280-7c9a-11e9-87e6-472d08feb97e.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1057:401,failure,failures,401,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1057,2,['failure'],['failures']
Availability,"fix shadow variable. Fix #2431 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2435:577,failure,failures,577,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2435,2,['failure'],['failures']
Availability,"fixed typo error, from leap-frop to leap-frog. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1894:11,error,error,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1894,3,"['error', 'failure']","['error', 'failures']"
Availability,fixed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/214:237,failure,failures,237,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/214,1,['failure'],['failures']
Availability,fixes #435 RigidMapping. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/441:281,failure,failures,281,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/441,2,['failure'],['failures']
Availability,fixes #723 . - removes copy-paste comments; - fixes horrible typos in the scene's name; - restores the scene's desired behavior . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/765:386,failure,failures,386,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/765,2,['failure'],['failures']
Availability,"fixing #238 ; This fix solves the segfault at startup that intel-powered linux machines experience.; It should be a linux-specific bugfix to my understanding.; If anyone knows a clean way of probing whether or not a ""Core profile"" context would be created (something better than parsing lspci to see if we're runing an intel GPU...), I'll update this PR accordingly. Anyone to review?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/526:642,failure,failures,642,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/526,2,['failure'],['failures']
Availability,fixing Polynomial #434 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/442:281,failure,failures,281,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/442,2,['failure'],['failures']
Availability,"fo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INF",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:6995,ERROR,ERROR,6995,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['ERROR'],['ERROR']
Availability,"following-up #3550 ; (PR coming from https://github.com/sofa-framework/SofaPython3/pull/330). Among other thing, the different variables (SOFA_HAVE_BLABLA) were not set anymore (set previously by sofa_find_package() ); And it did reflect the fact that setting Sofa.GUI means setting common/component/batch/qt mandatory (contrary to the Sofa.Gui module from the former days where everything was implicit). Notable exception is HeadlessRecorder which is still optional... (but I don't even know if it still works🤔). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3595:1058,failure,failures,1058,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3595,2,['failure'],['failures']
Availability,"from SofaBaseLinearSolver to SofaMatrix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2545:585,failure,failures,585,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2545,2,['failure'],['failures']
Availability,from comment:; `The Data constraintForces is used to expose the intensities of constraint forces in the simulation. We use the constraint forces as the approximation of real contact forces. We use this Data to provide contact information for the catheter insertion. The user can easily check the constraint forces from the GenericConstraint component interface.; `. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/840:622,failure,failures,622,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/840,2,['failure'],['failures']
Availability,"function warning for user & deprecation for devs; - [x] assess again performances; - direct; - Diagonal-buildMassMatrix = 0.57%; - MeshMM-buildMassMatrix = 0.57%; - iterative; - Diagonal-addMDx = 0.45%; - MeshMM-addMDx = 0.70% -- 0.47% without the if condition for graph plotting; - TORUS Fall scene over 10 000 steps; - DiagonalMass; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 9 	 2.54	 1 	 0.01	 0.12	 0.01	 0 	 0.01	 0.19	.........DM-buildMassMatrix; - MeshMatrixMass lumped; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 9 	 2.44	 1 	 **0.0**	 **0.04**	 0.01	 0 	 0.01	 **0.18**	.........MMM-buildMassMatrix; - [ ] update all scenes ( `<DiagonalMass` :arrow_right: `<MeshMatrixMass lumping=""1""` ). **TODO (after this PR)**; - deprecate XspLoaders (see #4003). **NOTE** ; Rigid cases previously handled by the DiagonalMass are not anymore, therefore breaking.; Regarding the absence of use of xs3 formats for rigid bodies and the starting project coupling Pinocchio which should bring a more robust description/handling of rigid bodies, I would advocate to :; - deprecated associated components (XspLoader, MeshXspLoader and their impact on RigidMapping, SpringFF, VectorSpringFF) ; - take this opportunity to clean and replace OldTutorials coming with it with new ones. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3912:1705,robust,robust,1705,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3912,3,"['failure', 'robust']","['failures', 'robust']"
Availability,"fwd.h was not in the list of HEADERS.; Therefore it seems the installation process was not copying it into the install folder (leading to a failure for projects needing it). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2337:140,failure,failure,140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2337,3,['failure'],"['failure', 'failures']"
Availability,gcc 10 is showing a lot of warning for the use of visibility specifier on already defined types saying it is not needed. So I remove them...let's see if the behavior is the same on windows or if the declspec has a more general scope or if everything is fine. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1456:517,failure,failures,517,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1456,2,['failure'],['failures']
Availability,"get intersections between triangle and segment, get intersection between edge and segment. - computeEdgeSegmentIntersection; - computeIntersectionsLineTriangle. EDIT from @guparan : this PR also fixes #2107 (STC#11 coding sprint). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2131:775,failure,failures,775,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2131,2,['failure'],['failures']
Availability,"getEdge() from EdgeSetTopologyContainer does bound-checking and the compiler cannot really optimize that.; EDIT: and moreover, getNbEdges() (edges, etc) used in the getEdge is extremely non-optimized... In a nutsheel, it is much faster to do; ```; const auto& edges = topo.getEdges();; for(const auto& e : edges) ; { ; blabla(e);; }; ```; than; ```; for(auto i = 0; i < topo.getNbEdges() ; i++) ; { ; blabla(topo.getEdge(i));; }; ```. Some idea to keep the getEdge() (and others) would be either to remove the bound-check (maybe enable only in debug like std::vector), or do an unsafe version. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2516:1138,failure,failures,1138,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2516,2,['failure'],['failures']
Availability,"getHeaderFileLocation() won't probably ever be overridden, so the virtual keyword is removed from the macro (and remove literally thousands lines of warnings in logs). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1062:424,failure,failures,424,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1062,2,['failure'],['failures']
Availability,"h00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenSparseMatrix.h:26,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaBaseMechanics/BarycentricMapping.h:26,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaBaseMechanics/BarycentricMapping.inl:25,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/modules/SofaBaseMechanics/BarycentricMapping.cpp:23:; /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenBaseSparseMatrix_MT.h:348:11: error: ‘ProductBase’ was not declared in this scope; 348 | : traits<ProductBase<SparseTimeDenseProduct_MT<Lhs,Rhs>, Lhs, Rhs> >; | ^~~~~~~~~~~; /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenBaseSparseMatrix_MT.h:348:67: error: wrong number of template arguments (3, should be 1); 348 | : traits<ProductBase<SparseTimeDenseProduct_MT<Lhs,Rhs>, Lhs, Rhs> >; | ^; In file included from /usr/include/eigen3/Eigen/Core:365,; from /usr/include/eigen3/Eigen/SparseCore:11,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MultiMatrixAccessor.h:25,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenBaseSparseMatrix.h:30,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaEigen2Solver/EigenSparseMatrix.h:26,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaBaseMechanics/BarycentricMapping.h:26,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/SofaBase/../modules/SofaBaseMechanics/BarycentricMapping.inl:25,; from /home/emdash00/Apps/git-apps/sofa/src/SofaKernel/modules/SofaBaseMechanics/BarycentricMapping.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1412:1183,error,error,1183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1412,1,['error'],['error']
Availability,"hDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [ERROR] [InfoComponent(Not created (SparseGridRamificationTopology))] Object type SparseGridRamificationTopology<> was not created; The object is not in the factory.; This component has been PLUGINIZED since SOFA v20.06. To continue using this component you need to update you scene and add <RequiredPlugin name='SofaNonUniformFem'/>. [ERROR] [SceneLoaderXML] Node initialization failed. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [WARNING] [Simulation] Default Visual Manager Loop will be used. Add DefaultVisualManagerLoop to the root node of scene file to remove th",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:10235,ERROR,ERROR,10235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['ERROR'],['ERROR']
Availability,hasChanged methods were not const. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1488:291,failure,failures,291,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1488,2,['failure'],['failures']
Availability,"havior by default so a test that specify nothing will fail on warning and error.; - but in addition, each tests class/function/bloc can now specify how a specific bloc can react to a message. This can be done using a new syntax taken inspired mimicking the one from gtest. ; - improve the way test failures about warning and error are reported:; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5074/testReport/junit/(root)/RigidRigidMappingTest_0/test_translation/; . Example: ; ```cpp; class MyTest : public Sofa_test<>; ; /// This test will fail if a warning/error message is send because the test inherit from sofa_test; void defaultTestBehavior(); {; ....; }. /// This test should generate failure if NO warning and NO Error message is emitted; void catchingTestBehavior(); {; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;. mycomponent.load(""atotallybrokenfile.txt""); }. /// By default test failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT(Error) ;; .... ; }; }; }; ```. This PR will generate a lot of new test failure... that are either real failure that deserve investigation or ; tests that was previously simply previously ignoring error & warning messages; . CHANGELOG for @hugt",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:1568,failure,failure,1568,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,2,['failure'],['failure']
Availability,"he Datas and the Links. Example with:; ```py; print(dir(myMechanicalObject)); ```; Will prints:; ```; ['__class__', '__delattr__', '__dir__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'addData', 'addNewData', 'applyRotation', 'applyScale', 'applyTranslation', 'bbox', 'bwdInit', 'cleanup', 'computeBBox', 'constraint', 'context', 'derivX', 'downCast', 'drawMode', 'externalForce', 'findData', 'findLink', 'force', 'free_position', 'free_velocity', 'getAsACreateObjectParameter', 'getCategories', 'getClassName', 'getContext', 'getData', 'getDataFields', 'getLink', 'getLinkPath', 'getListOfDataFields', 'getListOfLinks', 'getMaster', 'getName', 'getPathName', 'getSize', 'getSlaves', 'getTarget', 'getTemplateName', 'init', 'isToPrint', 'listening', 'mappingJacobian', 'master', 'name', 'position', 'printLog', 'reinit', 'reserve', 'reset', 'reset_position', 'reset_velocity', 'resize', 'restScale', 'rest_position', 'rotation', 'rotation2', 'scale3d', 'setSrc', 'showColor', 'showIndices', 'showIndicesScale', 'showObject', 'showObjectScale', 'showVectors', 'showVectorsScale', 'size', 'slaves', 'storeResetState', 'tags', 'topology', 'translation', 'translation2', 'useTopology', 'velocity']; ```. NB: There is minimal test to be sure this work.; NB2: I'm not found of this big list but didn't want to change the semantics to visually separate the links, the data and the methods. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/762:1952,failure,failures,1952,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/762,2,['failure'],['failures']
Availability,"he Sofa 'DataEngine' in a scripted way. In the second example provided it is shown how a versatile ROI functionality can be implemented with the help of the PSDE. Two examples with some documentation are provided in: ; applications/plugins/SofaPython/examples/PSDEExamples/. Example of use (01-basic/PSDEBasic.pyscn):; ```python; #!/usr/bin/env python; # -*- coding: utf-8 -*-; import Sofa; import os. path = os.path.dirname(os.path.abspath(__file__))+'/../../../../../../share/mesh/'; ; def createScene(rootNode):; rootNode.createObject(""MeshVTKLoader"", name=""loader"", filename=path+'liver.vtk'); rootNode.createObject('PythonScriptDataEngine', name='PSDE', filename=""DataEngine.py"", classname=""MyDataEngine"")	 . ```; Example for DataEngine class in Python (01-basic/DataEngine.py):. ```python; class MyDataEngine(Sofa.PythonScriptDataEngine): ; ; def parse(self): ; # this is the correct place to define inputs and outputs! (linking will not work in init() for instance); self.addNewInput('Positions',datatype='p',value='@loader.position') ; self.addNewOutput('NumPoints',datatype='d', value='0') . def init(self):; 	pass. def update(self): ; self.NumPoints = len(self.Positions); ```. What it does NOT provide: A new form of parsing from Python data to Sofa data. It uses the available mechanism that uses string conversion and parsing. Also, the type of the Data has to be declared/selected with a parameter in Python, because there is no logic to automatically derive the type desired by the user (could be future work). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/583:2177,avail,available,2177,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/583,3,"['avail', 'failure']","['available', 'failures']"
Availability,"he implementation of BaseObject::init() will not change. . This kind of pattern can be replace with the ""delegate pattern"" (not sure this is its official name). Which leads to:; ```cpp; class BaseObject; {; public:; void init(); { ; checksDataFields(); ; doBaseObjectInit();; setComponentStateOnError();; }; ; void draw(); {; if(componentState != valid); return; doBaseObjectDraw(); ; }; private:; virtual void doBaseObjectInit() {}; virtual void doBaseObjectDraw() {}; };. class MyObject : public BaseObject; {; public:; void doBaseObjectInit() override final; {; /// do here the object specific initialization without bothering of what your parent is doing. ; }; ; void doBaseObjectDraw() override final; {; /// do here the object specific drawing without bothering of what your parent is doing. ; }; }; ```; The latter pattern allows to implement a general behavior in a parent class and be sure this behavior is never broken up by ; the child. . In the PR i tried it to see what would be the change have a look at.; The change in BaseObject is at commit https://github.com/sofa-framework/sofa/commit/5dd2761c7920775e81672cc9a5a12bcaf27b9ee2. Suggestion and improvement welcom :) . EDIT: yes I'm perfectly aware this is a radical refactoring if we are going to deploy it on the whole code base ;); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3317:2826,failure,failures,2826,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3317,2,['failure'],['failures']
Availability,"he project in the usual CMake way; - `nix run`, to start the software. All these commands take an optional path argument, defaulting to the current working directory, but we could also build / develop / run any commit / tag / branch / fork of the project with eg. `nix build github:sofa-framework/sofa`(for master) or `nix run github:nim65s/sofa/58ae0644d117aea880ed284f6cc0beb7e9802f96`. While here, this also setup some CI for this packaging, mostly to detect early:; - if anything new in the repo would break the nix packaging; - if any update from a dependency in upstream [nixpkgs](https://github.com/NixOS/nixpkgs/) would break sofa. But also, a nix binary cache can be set up with eg. https://www.cachix.org/, so that once a commit is build in CI, users & developers can directly use that cache instead of compiling themselves.; (it is also true in the other way: developers with write access to the cache can send their build result to it so that the CI will be instantaneous cache hit). Here is an example of CI build log: https://github.com/nim65s/sofa/actions/runs/11306279152/job/31446709649. PS: I did not test on macos yet, so this is probably a bit early to expect it work. It at least require darwin signatures I guess, I'll try to test that this week, when I can use an apple system. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059:2208,failure,failures,2208,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059,2,['failure'],['failures']
Availability,"he user, I already added a Data to consider the mapping Jacobians to be constant. For example, it is true for `ModelOrderReductionMapping`. In the future, maybe this property can be defined automatically. I benchmarked the reduced diamond robot over 1000 time steps (the previous benchmark is in https://github.com/sofa-framework/sofa/pull/4443):. Before; ```; [INFO] [BatchGUI] 1000 iterations done in 17.4661 s ( 57.2539 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.08 1 11.85 20.52 13 0.85 13 88.39 ......projectMappedMatrices; ```. After (with `areJacobiansConstant=True`); ```; [INFO] [BatchGUI] 1000 iterations done in 12.3888 s ( 80.7183 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 7.64 18.39 8.59 0.76 8.59 84.35 ......projectMappedMatrices; ```. Speed up x1.5 on the matrix mapping. Note that using a `ConstantSparsityPatternSystem` instead of a `MatrixLinearSystem` is slightly faster (but it is not in the scope of this PR):. ```; [INFO] [BatchGUI] 1000 iterations done in 11.7897 s ( 84.82 FPS).; ```. Plans for the future:. - Write a new MatrixMapping component taking advantage of the constant sparsity pattern to further improve the performances; - Write a new MatrixMapping component that would use multithreading, and maybe one using the GPU. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4490:2303,failure,failures,2303,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4490,2,['failure'],['failures']
Availability,"helper::system::atomic<int> was introduced long time ago (before std::atomic I guess).; This code is compiling only for i386 and x86_64 code with gcc/clang (and msvc); Now that std::atomic is here (and we are using c+>11), I guess it is time to use std::atomic where we can. Those modifications mostly appeared in multithreading-related code, so it would be good that @fspadoni could take a look :octocat: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1035:664,failure,failures,664,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1035,2,['failure'],['failures']
Availability,"hing if the CPU supports respectively either AVX2 or AVX or nothing (SSE2 is the fallback in msvc/x64); - deprecates SOFA_VECTORIZE , which enables the 2 previous options if checked. More lecture for the curious: https://devblogs.microsoft.com/cppblog/do-you-prefer-fast-or-precise/; fpfast enables auto-vectorisation (among other stuff), thats why they are usually enabled together. On my setup, with SOFA_ENABLE_FAST_MATH + SOFA_ENABLE_SIMD, I can get around 0 to 10% of speedup. Nothing revolutionary anyway. ; TorusFall.scn (1000steps):; - fastfp+avx2: `7.90001 s ( 126.582 FPS)`; - fastfp `8.3388 s ( 119.921 FPS)`; - avx2 `8.49847 s ( 117.668 FPS)`; - ss2 `8.56825 s ( 116.71 FPS)`; We can see that it should be either both of them enabled, or not. That's why it will not be enabled by default, except if we want fp:fast by default. SIde note, seems Eigen3 is quite optimized with SIMD (w/o vs w/):; - `BM_Matrix_eigenmat33_invert/512` : 4.45 us vs 3.40 us; - `BM_Matrix_eigenmat33_determinant/512` : 1.09 us vs 0.882 us ; - `BM_Matrix_eigenmatf_vecmult<24>/512` : 98.0 us vs 76.0 us. In a separate PR, we could do the same for gcc/clang (with `march=native` and fast_math as well). EDIT: `SOFA_ENABLE_SIMD` was originally `DSOFA_ENABLE_AVX` but change the name for the future PR for gcc/clang; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2652:2396,failure,failures,2396,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2652,2,['failure'],['failures']
Availability,"his PR includes all changes and adds of the incoming [PSL] branch that can be merged directly. It includes some Python bindings, additional tests, and various cleanings.; Hopefully, it should not break anything. in BaseContext add variants of getObjects() which ease the syntax (eg: for(auto& i : getNodeObjects()){...} + corresponding tests. . - in Node add variants of getNodeObjects() and getTreeObjects that does not force to ease the syntax+ corresponding tests. . - in BaseLink add a setFlag method and a setPersistant...this makes things more consistent with BaseData. - in Binding_Base add the methods: addNewData, addData, getData, getLink, getListOfDataFields, getListOfLinks. The function are documented with docstring and tested in test_BindingBase.py. - in Binding_Data add methods: isSet, isPersistant, setPersistant, hasParent, getParentPath, setValueString. The function are documented with docstring and tested in test_BindingData.py; ; - in Binding_Link add methods: setValueString, isPersistant, setPersistant. The function are documented with docstring and tested in test_BindingLink.py. . - in Binding_SofaModule add methods: getAliasesFor. The function are documented with docstrings & tested in test_BindingSofa.py. - in SofaPython add functions: sendMessageFromException, getSofaFormattedStringFromException. - in SofaTest/_init_.py add ASSERT_* functions that generates real gtest failure. . - in runSofa in QDataSimpleEdit & QLinkSimpleEdit correctly prevent writing when the data field is readOnly; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/410:1472,failure,failure,1472,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/410,3,['failure'],"['failure', 'failures']"
Availability,"hmark Time CPU Iterations; ---------------------------------------------------------------------------------; BM_MapMapSparseMatrix_writeLine/512 1.48 us 1.46 us 448000; BM_MapMapSparseMatrix_writeLine/1024 2.95 us 2.95 us 248889; BM_MapMapSparseMatrix_writeLine/2048 6.29 us 6.28 us 112000; BM_MapMapSparseMatrix_writeLine/4096 12.0 us 12.0 us 64000; BM_MapMapSparseMatrix_addCol/512/512 1.08 ms 1.07 ms 640; BM_MapMapSparseMatrix_addCol/1024/512 2.26 ms 2.26 ms 373; BM_MapMapSparseMatrix_addCol/2048/512 3.45 ms 3.45 ms 195; BM_MapMapSparseMatrix_addCol/4096/512 6.93 ms 6.94 ms 90; BM_MapMapSparseMatrix_addCol/512/1024 1.68 ms 1.71 ms 448; BM_MapMapSparseMatrix_addCol/1024/1024 3.43 ms 3.37 ms 213; BM_MapMapSparseMatrix_addCol/2048/1024 6.65 ms 6.70 ms 112; BM_MapMapSparseMatrix_addCol/4096/1024 13.2 ms 13.1 ms 50; BM_MapMapSparseMatrix_addCol/512/2048 3.36 ms 3.37 ms 218; BM_MapMapSparseMatrix_addCol/1024/2048 6.44 ms 6.60 ms 90; BM_MapMapSparseMatrix_addCol/2048/2048 13.5 ms 13.4 ms 50; BM_MapMapSparseMatrix_addCol/4096/2048 27.1 ms 26.9 ms 25; BM_MapMapSparseMatrix_addCol/512/4096 6.64 ms 6.70 ms 112; BM_MapMapSparseMatrix_addCol/1024/4096 12.6 ms 12.6 ms 56; BM_MapMapSparseMatrix_addCol/2048/4096 26.0 ms 26.2 ms 28; BM_MapMapSparseMatrix_addCol/4096/4096 51.2 ms 51.6 ms 10; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2641:3665,failure,failures,3665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2641,2,['failure'],['failures']
Availability,"hon3.9', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/lib-dynload', '/bd_targaryen/users/kleelakunwet/.local/lib/python3.9/site-packages', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileRepository.cpp:34:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:733: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o] Error 1; make[2]: *** Waiting for unfinished jobs....; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/PluginManager.cpp:30:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileMonitor_linux.cpp:48:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:1013: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.di",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4527:3162,error,error,3162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527,1,['error'],['error']
Availability,"https://cmake.org/cmake/help/latest/policy/CMP0144.html; and make consistent the required version of cmake in Haptics_test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4469:668,failure,failures,668,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4469,2,['failure'],['failures']
Availability,"https://en.wikipedia.org/wiki/Subtraction. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5016:587,failure,failures,587,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5016,2,['failure'],['failures']
Availability,"https://github.com/fredroy/SofaGLFW. Why?; - Bothersome to need Qt to have a 3D rendering of a scene; - The existing ""simple"" GUI SofaGLUT is not supported anymore and is based on a deprecated library (glut). This PR brings a simple GUI based on GLFW (a spiritual heir of Glut).; It only needs SofaGUICommon, SofaBaseVisual and Sofa.GL as dependencies.; Integration of GLFW is automatic (automatic fetching and integration with cmake), and linked statically (does not need a glfw.dll to be shipped with). This GUI is launchable with the standard runSofa (with the parameter ""-g glfw""), or can be used with a (provided) stand-alone executable (which needs much less dependencies than runSofa). Lastly, this GUI was designed to support multiple windows in the same time and multiple simulations. So when multiple simulations is possible is the future, it should be easy to modify the code to support this feature.; And multiple windows could be based on the fact having multiple Camera in the scene (feature not implemented yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2062:1572,failure,failures,1572,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2062,2,['failure'],['failures']
Availability,"https://github.com/sofa-framework/sofa/issues/1527. Deprecates **SofaHaptics** and **SofaValidation** (and a bit of **SofaGeneralObjectInteraction**). **SofaHaptics** was more or less renamed to Sofa.Component.Haptic; **SofaValidation** only has 2 useful components (CompareState and CompareTopology) which have been moved to S.C.Playback (along the Read and Write ones); **SofaGeneralObjectInteraction** had an interactiveEllipsoidFF which has been moved to S.C.MechanicalLoad. The remaining components in the modules/ are now either deprecated (gravity), bogus (monitor&co, collisiongroupmanager) or could be replaced with two components (boxstiffFF). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3041:1198,failure,failures,1198,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3041,2,['failure'],['failures']
Availability,"https://github.com/sofa-framework/sofa/issues/1527. based on; - #2679 . Deprecates SofaOpenglVisual; Deprecates partially SofaGeneralEngine. This PR creates an independent plugin, with all the OpenGL-related components + API (previous Sofa.GL module in SofaKernel).; So it comes with the Sofa.GL library (API, utilities, etc) and 3 loadable module:; - ~~Model~~ **Rendering3D**: components drawing stuff in the 3D world; - ~~OnScreen~~ **Rendering2D**: utility components to draw stuff on screen, usual debugging or informations; - ~~Rendering~~ **Shader** : components involves with shadering; - **Engine**: engine doing stuff with OpenGL (only one for now). As it (should?) be considered as a plugin, it put it in applications/plugins but this is a matter of discussion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2709:1317,failure,failures,1317,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2709,2,['failure'],['failures']
Availability,"https://github.com/sofa-framework/sofa/issues/1637. All in all, removes everything related to the ForceMask, which had been disabled (SOFA_ENABLE_MASK) for a long time.; It was also cauing bugs apparently to a lot of people. [ci-depends-on https://github.com/sofa-framework/Flexible/pull/1]; [ci-depends-on https://github.com/sofa-framework/Compliant/pull/1]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2316:904,failure,failures,904,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2316,2,['failure'],['failures']
Availability,"https://github.com/sofa-framework/sofa/pull/3242 removes some code related to the `getTemplateName` method. This PR adds some unit tests to make sure that #3242 won't break them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3380:723,failure,failures,723,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3380,2,['failure'],['failures']
Availability,"https://github.com/sofa-framework/sofa/pull/3266 removed `importPlugin(""SofaComponentAll"") ;` in `NodeContext_test.cpp`, but did not replace it by anything else. I don't know why the CI did not detect it, but the problem can be seen in https://github.com/sofa-framework/sofa/pull/3280. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3322:830,failure,failures,830,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3322,2,['failure'],['failures']
Availability,"https://github.com/sofa-framework/sofa/pull/4044#issuecomment-1637217987. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4044:618,failure,failures,618,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4044,2,['failure'],['failures']
Availability,i.e. to easily define bracket x[] and len(x) operators to a python type defined in c++. (a concrete usage is coming in another PR). <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old.; **Reviewers will merge only if all this checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/165:306,failure,failures,306,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/165,1,['failure'],['failures']
Availability,"ibSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofaMatrix.dylib; [INFO] [PluginManager] 68 plugins have been loaded from /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini. ########## SIG 11 - SIGSEGV: segfault ##########; [1] 21189 segmentation fault ./runSofa; `. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. < COPY-PASTE HERE THE RESULT OF THE COMMAND ABOVE >. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. < COPY-PASTE YOUR OUTPUT HERE >. ```; <img width=""686"" alt=""截屏2022-10-25 下午11 56 58"" src=""https://user-images.githubusercontent.com/56861752/197808646-732fe9ee-f7db-49b0-8aea-3de77834ed11.png"">. **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:9633,fault,fault,9633,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['fault'],['fault']
Availability,ield; - TrianglePressureForceField; - [SofaConstraint]; - DistanceLMConstraint; - DOFBlockerLMConstraint; - FixedLMConstraint; - UncoupledConstraintCorrection; - [SofaDeformable] ; - MeshSpringForceField; - [SofaExporter] ; - WriteTopology; - [SofaGeneralDeformable]; - FastTriangularBendingSprings; - QuadBendingSprings; - QuadularBendingSprings; - TriangleBendingSprings; - TriangularBendingSprings; - TriangularBiquadraticSpringsForceField; - TriangularQuadraticSpringsForceField; - TriangularTensorMassForceField; - VectorSpringForceField; - [SofaGeneralEngine] ; - SmoothMeshEngine; - [SofaGeneralLoader] ; - ReadTopology; - [SofaGeneralSimpleFem]; - BeamFEMForceField; - TetrahedralCorotationalFEMForceField; - TriangularFEMForceFieldOptim; - [SofaMeshCollision]; - LineModel; - PointModel; - TriangleModel; - TriangleLocalMinDistanceFilter; - [SofaMiscCollision] ; - TetrahedronModel; - [SofaMiscFem]; - FastTetrahedralCorotationalForceField; - StandardTetrahedralFEMForceField; - TetrahedralTensorMassForceField; - TetrahedronHyperelasticityFEMForceField; - TriangleFEMForceField; - TriangularAnisotropicFEMForceField; - TriangularFEMForceField; - [SofaMiscForceField] ; - MeshMatrixMass; - [SofaMiscMapping]; - DistanceMapping; - DistanceMapping; - [SofaMiscTopology] ; - TopologicalChangeProcessor; - [SofaNonUniformFem] ; - NonUniformHexahedronFEMForceFieldAndMass; - [SofaOpenglVisual] ; - DataDisplay; - [SofaSimpleFem]; - HexahedronFEMForceField; - TetrahedronDiffusionFEMForceField; - TetrahedronFEMForceField. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1223:3639,failure,failures,3639,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1223,2,['failure'],['failures']
Availability,"if `collisionModel1`, the `collModelPath1` is affected to `nullptr`, which leads to a crash. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4710:637,failure,failures,637,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4710,2,['failure'],['failures']
Availability,"if the attribute ""src"" is found, a link is dynamically added to the object. If the link is resolved right away, it links the Data. If the link is not resolved, it will try later in the `updateLinks` function. It allows to write:. ```xml; <OglModel name=""OglModel"" src=""@SOFA_pod"" />; <MeshOBJLoader name=""SOFA_pod"" filename=""mesh/SOFA_pod.obj"" handleSeams=""1"" />; ```. Before this PR, the src object must be declared before the `src` attribute. It was not possible to declare it after, such as in the previous example. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3151:1063,failure,failures,1063,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3151,2,['failure'],['failures']
Availability,ighten the plugin a little bit. New structure:. ```; SofaPython; ├── Binding.cpp; ├── Binding.h; ├── Bindings; │   ├── BaseContext.cpp; │   ├── BaseContext.h; │   ├── Base.cpp; │   ├── Base.cpp.orig; │   ├── Base.h; │   ├── Base.h.orig; │   ├── BaseLoader.cpp; │   ├── BaseLoader.h; │   ├── BaseMapping.cpp; │   ├── BaseMapping.h; │   ├── BaseMechanicalState.cpp; │   ├── BaseMechanicalState.h; │   ├── BaseMeshTopology.cpp; │   ├── BaseMeshTopology.h; │ └── ...; ├── CMakeLists.txt; ├── initSofaPython.cpp; ├── PythonCommon.h; ├── PythonEnvironment.cpp; ├── PythonEnvironment.h; ├── PythonFactory.cpp; ├── PythonFactory.h; ├── PythonMacros.cpp; ├── PythonMacros.h; ├── PythonToSofa.inl; ├── PythonVisitor.cpp; ├── PythonVisitor.h; ├── SceneLoaderPY.cpp; ├── SceneLoaderPY.h; ├── scn2python.py; ├── ScriptController; │   ├── PythonMainScriptController.cpp; │   ├── PythonMainScriptController.h; │   ├── PythonScriptController.cpp; │   ├── PythonScriptController.h; │   ├── PythonScriptControllerHelper.cpp; │   ├── PythonScriptControllerHelper.h; │   ├── PythonScriptDataEngine.cpp; │   ├── PythonScriptDataEngine.h; │   ├── PythonScriptEvent.cpp; │   ├── PythonScriptEvent.h; │   ├── PythonScriptFunction.cpp; │   ├── PythonScriptFunction.h; │   ├── ScriptController.cpp; │   ├── ScriptController.h; │   ├── ScriptDataEngine.cpp; │   ├── ScriptDataEngine.h; │   ├── ScriptEvent.cpp; │   ├── ScriptEvent.h; │   ├── ScriptFunction.cpp; │   └── ScriptFunction.h; ├── SofaPythonConfig.cmake.in; ├── SofaPython.txt; └── ...; ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/616:1857,failure,failures,1857,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/616,2,['failure'],['failures']
Availability,"ignored scene: DistanceGridForceField-liver.scn. This way, the scene has to remain ignored to build the plugin in default mode (we need it for SofaImplicitField, which is needed for a bunch of examples). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/594:460,failure,failures,460,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/594,2,['failure'],['failures']
Availability,"image plugin had the choice at one moment to compile just its classes with a subset of image type (Byte, etc); The macro was always activated right now, so there was no choice but to compile always ALL the image types, and the image plugin was really long to compile. This PR restores this behavior, with a third choice: to not compile any instanciations.; Some people would like to use some headers (especially CImgData.h) for other plugin, without dragging the whole compilation. Anyway this PR introduces a new cmake option called PLUGIN_IMAGE_COMPILATION_SET restrained to 3 values (a combo box in cmake-gui actually); - standard: a few selected types of image is chosen; - full: all the the instanciations will be compiled; - none: no instanciation, so you will only compile initImage.cpp effectively. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2340:1351,failure,failures,1351,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2340,2,['failure'],['failures']
Availability,"in DataExchange component, add exchanges of image data types (ImageUC, ImageUS, ImageF), requiring a depedency with the image plugin; + add a simple example passing an image from an ImageContainer (Thread 1) to an ImageViewer (Thread 2); + fix OpenGL issues in the draw() function in the Kinect component in the image plugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/769:582,failure,failures,582,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/769,2,['failure'],['failures']
Availability,"in ForceField_test, {Multi,Multi2}Mapping_test.; (+ minor cleaning). EDIT: I also added a missing automatic test for MultiMapping::getK. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/209:367,failure,failures,367,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/209,1,['failure'],['failures']
Availability,"in FreeMotionAnimationLoop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2770:572,failure,failures,572,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2770,2,['failure'],['failures']
Availability,"in TetrahedronHyperelasticityFEMForceField.inl , gl.h was included before anything, so the macros defined in build_option_opengl.h were ignored.; The inclusion of gl.h was useless anyway so it was removed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1193:462,failure,failures,462,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1193,2,['failure'],['failures']
Availability,"in case both mstates are the same. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4317:579,failure,failures,579,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4317,2,['failure'],['failures']
Availability,"in loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. Case 3; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/DIFFERENT/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. _How did I fixed this_; This is one way of doing it. If you have other ideas/suggestions, please tell me.; Since in most of the plugins we have, we define a `getModuleName` and `getModuleVersion`, we should use them to compared loaded plugin instead of plugin paths. Also, we should be able to notify the PluginManager of a plugin that we loaded without him noticing (such as calling dlopen). Here is what I did:. - `PluginManager::loadPlugin` now iterates through its list of loaded plugins and check that the the plugin we want to load does not contains the same `initExternalModule` function's pointer or plugin's name as another already loaded plugin; - A plublic `PluginManager::addPlugin` that adds a plugin to the register without loading it (it must be loaded in the memory beforehand) is now available. **Supplementary python bindings**; Since me and @vmagno used this PR extensively during the past 2 months for our simulations, we added a couple of python bindings useful to us. I think this wraps up a lot of things, let me know what you guys think. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:5994,avail,available,5994,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,3,"['avail', 'failure']","['available', 'failures']"
Availability,"in not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Comp",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:2576,ERROR,ERROR,2576,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"in order to be informed when a scene is loaded. WARNING: each SceneLoader's loading function must call ""notifyLoadingScene"". ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/204:355,failure,failures,355,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/204,1,['failure'],['failures']
Availability,"in sofa_install_libraries:. cyclic recursions when globbing for external libraries due to symlinks resolution.; I have done this fix for about a month and a half now, without noticing any side effects, but I can't tell if there are any. ______________________________________________________ ; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/766:494,failure,failures,494,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/766,2,['failure'],['failures']
Availability,"in the graph display, name and class name were inverted compared to classical objects. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2371:631,failure,failures,631,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2371,2,['failure'],['failures']
Availability,inManager.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileRepository.cpp:34:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:733: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o] Error 1; make[2]: *** Waiting for unfinished jobs....; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/PluginManager.cpp:30:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileMonitor_linux.cpp:48:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:1013: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o] Error 1; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:649: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o] Error 1; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileSyste,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4527:3737,error,error,3737,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527,1,['error'],['error']
Availability,"iner"",; ""Sofa.Component.Topology.Container.Dynamic"",; ""Sofa.Component.Visual"",; ""Sofa.Component.Engine.Select"",; ""Sofa.GL.Component.Rendering3D"",; ""Sofa.GUI.Component"",; ""Sofa.Component.Constraint.Projective"",; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ""Sofa.Component.Collision.Response.Contact"",; ""Sofa.Component.Setting"",; ""Sofa.Component.AnimationLoop"",; ""Sofa.Component.Collision.Geometry"",; ""Sofa.Component.Constraint.Lagrangian.Correction"",; ""Sofa.Component.LinearSolver.Iterative"",; ""Sofa.Component.Constraint.Lagrangian.Solver"",; ""Sofa.Component.Topology.Container.Constant""]. rootNode.findData('gravity').value=[0,0,-10];; rootNode.findData('dt').value=0.01; ; # Plugin loading; rootNode.addObject('RequiredPlugin', pluginName=pluginNameList, ; printLog='0'). # Rootnode attributes; rootNode.addObject('FreeMotionAnimationLoop'); rootNode.addObject('DefaultVisualManagerLoop'); rootNode.addObject('GenericConstraintSolver', maxIterations='2000', tolerance='1e-9') ; rootNode.addObject('BackgroundSetting', color='0 0.168627 0.211765'). # Scene settings; confignode = rootNode.addChild(""Config""); confignode.addObject(""OglGrid"", nbSubdiv=10, size=1000); confignode.addObject('OglSceneFrame', style=""Arrows"", ; alignment=""TopRight""). # Collision component; rootNode.addObject('DefaultPipeline'); rootNode.addObject('BruteForceBroadPhase'); rootNode.addObject('BVHNarrowPhase'); rootNode.addObject('LocalMinDistance', name='Proximity', alarmDistance=""1"", contactDistance=""0.5""); rootNode.addObject('DefaultContactManager', name=""Response"", response=""PenalityContactForceField""). ; # Membrane; membrane=rootNode.addChild(""Membrane""). membrane.addObject(""EulerImplicitSolver""); membrane.addObject(""CGLinearSolver"", iterations='2000', tolerance='1e-9', threshold='1e-9'). membrane.addObject('MeshGmshLoader', name='membraneCoarse', ; filename='FossaOvalisV2.msh'); ; membrane.addObject('TetrahedronSetTopologyContainer', ; name='membrane",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3810:1876,toler,tolerance,1876,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3810,1,['toler'],['tolerance']
Availability,"iner""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Comp",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:2779,ERROR,ERROR,2779,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"iner.Dynamic',; 'Sofa.Component.Visual',; 'Sofa.GL.Component.Rendering3D',; 'Sofa.Component.SolidMechanics.Spring',; 'Sofa.Component.MechanicalLoad',; 'Sofa.Component.Topology.Container.Constant'; ]). root.addObject('DefaultAnimationLoop'). root.addObject('VisualStyle', displayFlags=""showCollisionModels""); root.addObject('CollisionPipeline', name=""CollisionPipeline""); root.addObject('BruteForceBroadPhase', name=""BroadPhase""); root.addObject('BVHNarrowPhase', name=""NarrowPhase""); root.addObject('DefaultContactManager', name=""CollisionResponse"", response=""PenalityContactForceField""); root.addObject('DiscreteIntersection'). root.addObject(""MeshSTLLoader"", name=""LiverSurface"", filename = r""C:\Users\monta\Desktop\Materie\Altro\Tirocinio\Liver_Database\3D_Slicer\liver_sofa\Liver_Target_2.stl""). liver = root.addChild('Liver'); liver.addObject('EulerImplicitSolver', name=""cg_odesolver"", rayleighStiffness=""0.1"", rayleighMass=""0.1""); liver.addObject('CGLinearSolver', name=""linear_solver"", iterations=""25"", tolerance=""1e-09"", threshold=""1e-09""); liver.addObject(""MeshGmshLoader"", name=""meshLoader"", filename = r""C:\Users\monta\Desktop\Materie\Altro\Tirocinio\Liver_Database\3D_Slicer\liver_gmsh\Liver_Target_2.msh"") ; liver.addObject('TetrahedronSetTopologyContainer', name=""tetra"", src=""@meshLoader""); liver.addObject('MechanicalObject', name=""dofs"", src=""@meshLoader""); liver.addObject('TetrahedronSetGeometryAlgorithms', template=""Vec3d"", name=""TetraGeomAlgo""); liver.addObject('DiagonalMass', name=""Mass"", massDensity=""1.0""); FEM = liver.addObject('TetrahedralCorotationalFEMForceField', template=""Vec3d"", name=""TetraFEM"", method=""large"", poissonRatio=""0.48"", youngModulus=""3000"", computeGlobalMatrix=""0""); . liverCapsule = liver.addChild('GlissonCapsule'); liverCapsule.addObject('MeshSTLLoader', name='CapsuleMesh', filename = r""C:\Users\monta\Desktop\Materie\Altro\Tirocinio\Liver_Database\3D_Slicer\liver_segmentation\Liver_Target_2.stl""); liverCapsule.addObject('MechanicalObject', name=",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4861:3382,toler,tolerance,3382,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4861,1,['toler'],['tolerance']
Availability,"ing for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Check if compiler accepts -pthread; -- Check if compiler accepts -pthread - yes; -- Found Threads: TRUE ; CMake Deprecation Warning at CMakeLists.txt:225 (message):; Deprecated components are activated (SOFA_WITH_DEPRECATED_COMPONENTS; variable is ON). -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; **CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Boost (missing: system filesystem program_options) (found; version ""1.71.0"")**; Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindBoost.cmake:2179 (find_package_handle_standard_args); SofaKernel/SofaFramework/SofaMacros.cmake:526 (find_package); SofaKernel/modules/SofaHelper/CMakeLists.txt:6 (sofa_find_package). -- Configuring incomplete, errors occurred!; See also ""/home/thebigone/projects/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/thebigone/projects/sofa/build/CMakeFiles/CMakeError.log"". ``; $ sudo apt install libboost-dev; ``; Reading package lists... Done; Building dependency tree ; Reading state information... Done; **libboost-dev is already the newest version (1.71.0.0ubuntu2).**; The following packages were automatically installed and are no longer required:; libdrm2:i386 libexpat1:i386 libglapi-mesa:i386 libglvnd0:i386 libx11-xcb1:i386 libxcb-dri2-0:i386 libxcb-dri3-0:i386 libxcb-glx0:i386 libxcb-present0:i386 libxcb-sync1:i386 libxdamage1:i386 libxfixes3:i386; libxshmfence1:i386 libxxf86vm1:i386; Use 'sudo apt autoremove' to remove them.; 0 upgraded, 0 newly installed, 0 to remove and 107 not upgraded. Alban. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1462:2148,error,errors,2148,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1462,1,['error'],['errors']
Availability,"initTaskScheduler() was not called so m_sceduler was nullptr. And removes compilation warnings and some scenes warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3676:665,failure,failures,665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3676,2,['failure'],['failures']
Availability,"int.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""So",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:3211,ERROR,ERROR,3211,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"ir<const sofa::core::VecType, std::basic_string<char>>, std::allocator<std... (527 times, avg 25 ms); 9245 ms: std::__detail::_Insert_base<sofa::core::VecType, std::pair<const sofa::core::VecType, std::basic_string<char>>, std::a... (527 times, avg 17 ms); 9002 ms: std::_Hashtable<sofa::core::VecType, std::pair<const sofa::core::VecType, std::basic_string<char>>, std::allocator<std... (527 times, avg 17 ms); 8232 ms: std::_Hashtable<sofa::core::VecType, std::pair<const sofa::core::VecType, std::basic_string<char>>, std::allocator<std... (527 times, avg 15 ms); ... after; ...; 6836 ms: std::_Hashtable<int, std::pair<const int, int>, std::allocator<std::pair<const int, int>>, std::__detail::_Select1st, ... (844 times, avg 8 ms); 5064 ms: std::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, unsigned int>, std::allocator<std::p... (679 times, avg 7 ms); 4954 ms: std::unordered_map<sofa::core::VecType, std::basic_string<char>> (527 times, avg 9 ms); 4075 ms: std::_Hashtable<sofa::core::VecType, std::pair<const sofa::core::VecType, std::basic_string<char>>, std::allocator<std... (527 times, avg 7 ms). (limited output so the others are lower); ```. In practical, on the same config/setup, compilation time was shorter of about ~15sec (not that much but still). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3401:2358,failure,failures,2358,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3401,2,['failure'],['failures']
Availability,"issue sofa-framework/sofa#2 Fix compilation when option SOFA_FLOATING_POINT_TYPE in CMake selected as float. The problem arising when trying to compile with float was due to missing declaration from newmat external library.; The library has been modified for sofa to use a #define SOFA_FLOAT in include.h; However the SOFA_FLOAT was never defined for the extlib since the current procedure is to set CMake variable SOFA_FLOAT and SOFA_DOUBLE to 1. This was done anyway AFTER processing the cmake of the extlibs. Therefore, this pr moves the option for floating point type in sofa in the root CMakeLists and adds the #define for the newmat library to actually create the float type functions. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old (or has fast-merge label).; - [x] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/262:922,failure,failures,922,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/262,1,['failure'],['failures']
Availability,"it is difficult to spot quickly which plugin is externalized or not in the centralized plugin folder. So this PR gathers all of these into a same folder (namely `external_plugins`) and are added to the cmake configure process after the `plugins/` one. This implies that plugins in `plugins/` does not depend on things from `external_plugins/`, which should be normal as externalized plugins are supposed to be less a priority than the `plugins`. EXCEPT **SofaPython3** 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4505:1016,failure,failures,1016,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4505,2,['failure'],['failures']
Availability,"it was not noticed in #4270 that the two version of RGB from HSV was different on Hue value ; (one is normalized [0...1], the other in RGBAColor is not and is in degree [0...360]). for those interested : http://wiki.gis.com/wiki/index.php/HSV_Color_Space. FYI while debugging, an issue in TetraFEMForcefield has been found #4407; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4408:874,failure,failures,874,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4408,2,['failure'],['failures']
Availability,it was reported on the forum that there is problem since we switch to c++17.; https://www.sofa-framework.org/community/forum/topic/sofa-generating-error/#post-15666. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1324:147,error,error,147,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1324,1,['error'],['error']
Availability,"just for quick debugging visualization. ![NearestPointROI_00000001](https://github.com/user-attachments/assets/cce22e5c-263b-4ba5-8d39-050963967f30). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4944:694,failure,failures,694,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4944,2,['failure'],['failures']
Availability,"kefile, SofaHelper CMakefile.; Moreover, a lot of compiler options are not set by **target** (CMake notion), so those are to added EVERYTIME for each projet/plugin (see SofaPython3): c++17, MSVC special flags, etc. # Solution; This PR regroups all CMake config code and SofaFramework is no more the ""bootstrapper"" or whatever it was not.; If you linking against anything from SOFA (most likely at least SofaHelper), the configuration will spread into your project automatically.; This module will be the lowest in the depencency chain (was a bastard mix of SofaFramework/SofaHelper before). # WIP; * ~~Some CMake file to clean~~. * ~~Add no-attribute flags from #1682~~. * Some variables are still not linked to Sofa.Config like Sofa_VERSION: it was in the root CMakefile before, so all the projects know this variable.; For now, Sofa.Config set those global variables **PARENT_SCOPE** but this is ugly in my opinion, and not ""Modern CMake""; One solution is to link this variable to a property of Sofa.Config, and retrieve this property when needed. But it seems a bit bothersome.; ```; get_target_property(Sofa_VERSION ${TARGET} Sofa_VERSION_PROPERTY); ```; Any opinion ?. * I guess there will other things to do later like removing all the tests related code/config into an eventual Sofa.Test, etc; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1674:2235,failure,failures,2235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1674,2,['failure'],['failures']
Availability,"l, beamadapter scene) on Windows/msvc, linux/gcc and macos/clang. . ---; Benches: (Ubuntu, gcc); Unit:; https://ethercalc.net/jt9xe3yadxug. Mostly the same, except:; - zero-construct is faster; - mat<24> mult is slower but can be fixed easily (https://github.com/sofa-framework/sofa/blob/3fadc10492662a63eab725fa45894f2c5b3fe9bd/Sofa/framework/Type/src/sofa/type/Mat.h#L531C12-L531C12 may confuse the vectorizer).; EDIT: and apparently is mitigated by using LTO. Scenes :; caduceus:; - master: `10000 iterations done in 6.61867 s ( 1510.88 FPS)`; - pr: `10000 iterations done in 6.59469 s ( 1516.37 FPS)`; ; TorusFall: ; - master: `5000 iterations done in 15.6086 s ( 320.336 FPS)`; - pr: `5000 iterations done in 15.6149 s ( 320.207 FPS)`. 3instruments_collis; - master: `5000 iterations done in 30.5179 s ( 163.838 FPS)`; - pr: `5000 iterations done in 30.2582 s ( 165.244 FPS)`. With LTO:; caduceus:; - master: `10000 iterations done in 6.55136 s ( 1526.4 FPS)`; - pr: `10000 iterations done in 6.49977 s ( 1538.52 FPS)`; ; TorusFall: ; - master: `5000 iterations done in 15.4835 s ( 322.925 FPS)`; - pr: `5000 iterations done in 14.8696 s ( 336.256 FPS)`. 3instruments_collis; - master: `5000 iterations done in 30.0172 s ( 166.571 FPS)`; - pr: `5000 iterations done in 29.9373 s ( 167.016 FPS)`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4296:2047,failure,failures,2047,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4296,2,['failure'],['failures']
Availability,"l; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [ERROR] [InfoComponent(Not created (SparseGridRamificationTopology))] Object type SparseGridRamificationTopology<> was not created; The object is not in the factory.; This component has been PLUGINIZED since SOFA v20.06. To continue using this component you need to update you scene and add <RequiredPlugin name='SofaNonUniformFem'/>. [ERROR] [SceneLoaderXML] Node initialization failed. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [WARNING] [Simulation] Default Visual Manager Loop will be used. Add DefaultVisualManagerLoop to the root node of scene file to remove this warning; [ERROR] [HexahedronFEMForceField(FEM)] No topology component found at path: , nor in current context: Snake. Object must have a MeshTopology.; [ERROR] [BarycentricMapping(barycentricMap1)] No input topology found. Consider setting the 'input_topology' attribute.; [ERROR] [BarycentricMapping(barycentricMap2)] No input topology found. Consider setting the 'input_topology' attribute.; [ERROR] [BarycentricMapping(barycentricMap3)] No input topology found. Consider setting the 'input_topology' attribute.; [ERROR] [BarycentricMapping(barycentricMap4)] No input topology found. Consider setting the 'inp",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:10954,ERROR,ERROR,10954,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['ERROR'],['ERROR']
Availability,"lassname only causing collision when two component have the same name/template. To avoid this, the PR add the plugin name as a prefix for the Factory'key. As an exemple, a component created with *<OglModel>* in the past is now referenced as *<SofaOpenglVisual.OglModel>*. Backward compatbility is possible by adding into the factory registration an alias mapping between ; new names and old name;; Eg:; ```; ""OglModel"" => ""SofaOpenglVisual.OglModel""; ```. 2) **Importing plugin and component *à la* python**; A new component called *FromComponent* is added to handle the loading of plugin and the import of object. . Examples of use:; ```; 	 # To make only <OglModel> accessible in the scene; 	<From plugin=""SofaOpenglVisual"" import=""OglModel""/>; 	<OglModel/>. 	# To add ""custom"" name in a scene ; 	<From plugin=""SofaOpenglVisual"" import=""OglModel"" as=""RenderingModel""/>; 	<RenderingModel/>. 	# To be a super lazy man and import everything; 	<From plugin=""SofaOpenglVisual"" import=""*""/>; ```. I didn't implemented multiple object imports so currently it is necessary to do ; ```; <From plugin=""SofaOpenglVisual"" import=""OglModel""/>; <From plugin=""SofaOpenglVisual"" import=""GlslShader""/>; ```; But we could as in python with:; ```; <From plugin=""SofaOpenglVisual"" import=""OglModel, GlslShader""/>; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2512:2182,failure,failures,2182,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2512,2,['failure'],['failures']
Availability,"led to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collision.Geometry""]; [ERROR] [SofaRuntime] ValueError: Object type BackgroundSetting<> was not created; The object is not in the factory.; This",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:4690,ERROR,ERROR,4690,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"led to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collision.Geometry""]; [ERROR] [SofaRuntime] ValueError: Object type BackgroundSetting<> was not created; The object is not in the factory.; This component has been MOVED from SofaBaseVisual to Sofa.Component.UserInterface.ConfigurationSetting since SOFA v22.06.; To continue usin",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:4827,ERROR,ERROR,4827,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"lename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins.; Your scene may not work on a sofa environment with different pre-loaded plugins.; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn):; <RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components [MeshExporter, ]-->; <RequiredPlugin pluginName='SofaGeneralSimpleFem'/> <!-- Needed to use components [HexahedralFEMForceField, ]-->. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ```. **Content of build_dir/CMakeCache.txt**. [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/7425743/CMakeCache.txt)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2451:7088,ERROR,ERROR,7088,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2451,2,['ERROR'],['ERROR']
Availability,"libQGLViewer is only used by SofaGuiQt for QtGLViewer.; So this lib should be moved into it from extlibs (which is/was supposed to be used for sharing libraries across modules). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1617:722,failure,failures,722,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1617,2,['failure'],['failures']
Availability,"libSofaPython import Sofa. sim = Sofa.createSimulation(""DAG""); Sofa.setSimulation(sim). root = Sofa.loadScene(""examples/Demos/caduceus.scn""); root.init(). sofa_prefix = ""/home/jnbrunet/sources/sofa/build""; Sofa.GUIManager.setSofaPrefix(sofa_prefix); Sofa.GUIManager.setConfigDirectoryPath(sofa_prefix + ""/config""); Sofa.GUIManager.setScreenshotDirectoryPath(sofa_prefix + ""/screenshots""). Sofa.GUIManager.init(""qglviewer""); Sofa.GUIManager.createGUI(); Sofa.GUIManager.setDimension(800, 600); Sofa.GUIManager.setScene(root). Sofa.GUIManager.MainLoop(root). Sofa.GUIManager.closeGUI(); ```; ### What else this PR brings. **Plugin manager**; One of the problem arising from this feature is the duplicated loading of the python plugin: when issuing the `import Sofa` command in the python script the interpreter loads the library (SofaPython.so). If the script explicitly calls the `Sofa.loadPlugin(""SofaPython"")` command, Sofa's PluginManager will load again the same library. Example of a faulty script:; ```#!/usr/bin/python2.7; from libSofaPython import Sofa # Loads SofaPython.so in the memory; Sofa.loadPlugin(""SofaPython"") # Loads again SofaPython.so in the memory; ```; I think this brings up a wider question:. _What should happen if the same plugin/library is loaded twice or more in the memory?_. Now, most operating systems will prevent loading a library twice in the memory. On OS supporting the dlopen command, and on Windows loadLibrary command, the library will be loaded only once, but a counter is incremented each time we try to load it. This counter is decremented when we unload the plugin, and the library will be completely cleaned from the memory ONLY when this counter reach 0. On the other hand, Sofa's plugin manager WILL call the `initExternalModule` function implemented on the library each time we load it. This can produce weird behaviors as most plugin won't handled the multiple initialization calls. _How to reproduce the problem?_. In most cases, people will use the p",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:2696,fault,faulty,2696,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,1,['fault'],['faulty']
Availability,"lines, I wont share if not needed. . ```FAILED: bindings/SofaRuntime/CMakeFiles/Bindings.SofaRuntime.dir/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp.o; /usr/bin/c++ -DBOOST_ALL_NO_LIB -DBOOST_FILESYSTEM_DYN_LINK -DBOOST_PROGRAM_OPTIONS_DYN_LINK -DBOOST_SYSTEM_DYN_LINK -DBOOST_THREAD_DYN_LINK -DBindings_SofaRuntime_EXPORTS -DNDEBUG -DSOFA_HAVE_SOFAPYTHON3 -I/mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/bindings/SofaRuntime/src -I/mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/Plugin/src -I/mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/bindings/Sofa/src -isystem /usr/include/python3.8 -isystem /usr/local/include/SofaSimulation -isystem /usr/local/include/SofaFramework -isystem /usr/local/include/extlibs/json -isystem /usr/local/include/eigen3 -isystem /usr/local/include/SofaBase -fPIC -fvisibility=hidden -std=c++17 -flto -fno-fat-lto-objects -Dregister= -fvisibility=hidden -std=c++17 -MD -MT bindings/SofaRuntime/CMakeFiles/Bindings.SofaRuntime.dir/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp.o -MF bindings/SofaRuntime/CMakeFiles/Bindings.SofaRuntime.dir/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp.o.d -o bindings/SofaRuntime/CMakeFiles/Bindings.SofaRuntime.dir/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp.o -c /mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/bindings/SofaRuntime/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp; In file included from /usr/local/include/SofaFramework/sofa/simulation/Node.h:59,; from /usr/local/include/SofaFramework/sofa/simulation/Simulation.h:25,; from /usr/local/include/SofaFramework/sofa/helper/AdvancedTimer.h:25,; from /mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/bindings/SofaRuntime/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp:28:; /usr/local/include/SofaFramework/sofa/simulation/MutationListener.h:37:32: error: variable ‘sofa::simulation::SOFA_SIMULATION_CORE_API sofa::simulation::MutationListener’ has initializer but incomplete type; 37 | class SOFA_SIMULATION_CORE_API MutationListener; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1429:1946,error,error,1946,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1429,1,['error'],['error']
Availability,link to issue #1538 . to be discussed.. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1546:296,failure,failures,296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1546,2,['failure'],['failures']
Availability,"ll fail if a warning/error message is send because the test inherit from sofa_test; void defaultTestBehavior(); {; ....; }. /// This test should generate failure if NO warning and NO Error message is emitted; void catchingTestBehavior(); {; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;. mycomponent.load(""atotallybrokenfile.txt""); }. /// By default test failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT(Error) ;; .... ; }; }; }; ```. This PR will generate a lot of new test failure... that are either real failure that deserve investigation or ; tests that was previously simply previously ignoring error & warning messages; . CHANGELOG for @hugtalbot & @guparan :; - TestMessageHandler.cpp implements a new & robust way to connect msg_* message to test failure ; - TestMessageHandler_test.cpp implements test for TestMessageHandler. ; - Sofa_test is updated to use the new TestMessageHandler where msg_error generates test failures ; - All the existing tests have been changed to use the new API & removed the old one. ; - MeshSTL.cpp replace a std:cerr by a msg_error so that FIX the corresponding failing test.; - Message.cpp adds a way to convert message type to string.; - updates externs/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:2088,failure,failure,2088,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,2,"['error', 'failure']","['error', 'failure']"
Availability,"ltAnimationLoop to the root node of scene file to remove this warning; [WARNING] [Simulation] Default Visual Manager Loop will be used. Add DefaultVisualManagerLoop to the root node of scene file to remove this warning. ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); sofa::component::forcefield::TetrahedronFEMForceField<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::init(); sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool); sofa::simulation::Simulation::initNode(sofa::simulation::Node*); sofa::simulation::Simulation::init(sofa::simulation::Node*); __libc_start_main; Segmentation fault (core dumped). ```. **Content of build_dir/CMakeCache.txt**; [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/8566052/CMakeCache.txt); [test_scene.zip](https://github.com/sofa-framework/sofa/files/8566055/test_scene.zip)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:37285,fault,fault,37285,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['fault'],['fault']
Availability,"lude); 1>; 1>; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: The command ""setlocal; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: ""C:\Program Files\CMake\bin\cmake.exe"" -DBUILD_TYPE=Release -P cmake_install.cmake; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmErrorLevel; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: exit /b %1; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmDone; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :VCEnd"" exited with code 1.; 1>Done building project ""INSTALL.vcxproj"" -- FAILED.; ========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========. ```. #1114; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:3314,error,error,3314,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,6,['error'],"['error', 'errorlevel']"
Availability,"make; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets-release.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfigVersion.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfig.cmake; 1>CMake Error at applications/plugins/CImgPlugin/cmake_install.cmake:38 (file):; 1> file cannot create directory:; 1> C:/projects/sofa-build/$C:/projects/sofa-build/install/plugins/CImgPlugin/bin.; 1> Maybe need administrative privileges.; 1>Call Stack (most recent call first):; 1> applications/plugins/cmake_install.cmake:37 (include); 1> cmake_install.cmake:88 (include); 1>; 1>; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: The command ""setlocal; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: ""C:\Program Files\CMake\bin\cmake.exe"" -DBUILD_TYPE=Release -P cmake_install.cmake; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmErrorLevel; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: exit /b %1; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:2568,error,error,2568,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,1,['error'],['error']
Availability,meshconv needs miniflowVR in order to compile.; But the oblivious user is not supposed to know that.... So this fix:; - avoids building meshconv if SOFA_BUILD_MINIFLOWVR is not activated.; - warns the user he needs to activate the previous cmake option. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/358:510,failure,failures,510,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/358,2,['failure'],['failures']
Availability,"method `computePrincipalStress `and `computePrincipalStrain` where used inside loop such as this:; ```; type::vector<TriangleInformation>& triangleInf = *(triangleInfo.beginEdit());; for (unsigned int i = 0; i < nbTriangles; ++i); computePrincipalStress(i, triangleInf[i].stress);; triangleInfo.endEdit();; ```; but computePrincipalStress is accessing triangleInfo in write mode as well inside its code. (same for computePrincipalStrain); It was not blocking because writeOnlyAccessor were used and therefore no updateIfDirty was call but this design is dangerous. . Change to Use only one accessor and pass ref to one element to the method. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3412:1186,failure,failures,1186,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3412,2,['failure'],['failures']
Availability,"miniFlowVR, an extlib of Sofa, is used for ; - managing a file format for DistanceGrid (component of plugin SofaDistanceGrid); - as a dependency for meshconv, a commandline utility for meshes and used mainly to create the previous file format for DistanceGrid. So as it seems all was related to DistanceGrid:; - miniFlowVR was moved into SofaDistanceGrid (and thus depolluting the main tree of Sofa with the extlib thing); - as a small consequence, move meshconv into SofaDistanceGrid. It is deemed OK as:; - it seems not a lof of people uses meshconv as it is (I remember fixing the compilation ages ago and nobody said anything). Moreover, even its CMakefile was quite ill-formed. ; - meshconv was originally a part of FlowVR itself apparently, so it makes sense to regroup of all of these codes. Additionnally, SofaDistanceGrid was cleanup (reorganizing files like the template, cleaner CMake etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1616:1446,failure,failures,1446,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1616,2,['failure'],['failures']
Availability,"missing libs in target_link_libraries for SofaBase, SofaCommon and SofaGeneral after ""modularization"". ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1381:359,failure,failures,359,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1381,2,['failure'],['failures']
Availability,"model::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #12 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #13 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #14 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #15 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; ```. Same issue on windows with up to date version. Collapse option doesn't work neither.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2057:2616,Down,Downloads,2616,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057,5,['Down'],['Downloads']
Availability,"move all tests related to BaseMatrix into Sofa.LinearAlgebra.test, ; and create Sofa.LinearAlgera.Testing (testing toolkit related to Sofa.LinearAlgebra). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2383:699,failure,failures,699,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2383,2,['failure'],['failures']
Availability,"mpy\__init__.py"", line 144, in <module>; from numpy.__config__ import show as show_config; File ""C:\SOFA\Lib\site-packages\numpy\__config__.py"", line 4, in <module>; from numpy.core._multiarray_umath import (; File ""C:\SOFA\Lib\site-packages\numpy\core\__init__.py"", line 50, in <module>; raise ImportError(msg); ImportError:. IMPORTANT: PLEASE READ THIS FOR ADVICE ON HOW TO SOLVE THIS ISSUE!. Importing the numpy C-extensions failed. This error can happen for; many reasons, often due to issues with your setup or how NumPy was; installed. We have compiled some common reasons and troubleshooting tips at:. https://numpy.org/devdocs/user/troubleshooting-importerror.html. Please note and check the following:. * The Python version is: Python3.10 from ""C:\Users\JetsLab\.pyenv\pyenv-win\versions\3.10.11\python3.exe""; * The NumPy version is: ""1.26.4"". and make sure that they are the versions you expect.; Please carefully study the documentation linked above for further help. Original error was: No module named 'numpy.core._multiarray_umath'. The above exception was the direct cause of the following exception:. Traceback (most recent call last):; File ""C:\sofa_env\sofa_env\scenes\controllable_object_example\controllable_env.py"", line 1, in <module>; import gymnasium.spaces as spaces; File ""C:\SOFA\Lib\site-packages\gymnasium\__init__.py"", line 5, in <module>; from gymnasium.core import (; File ""C:\SOFA\Lib\site-packages\gymnasium\core.py"", line 8, in <module>; import numpy as np; File ""C:\SOFA\Lib\site-packages\numpy\__init__.py"", line 149, in <module>; raise ImportError(msg) from e; ImportError: Error importing numpy: you should not try to import numpy from; its source directory; please exit the numpy source tree, and relaunch; your python interpreter from there. I already checked the suggested troubleshooting, but I couldn't fix the error.; Can you help me?; Thank you!. **Steps to reproduce**; `py -3.11 -m venv C:/SOFA`; `SOFA\Scripts\Activate`; `git clone https://github.com/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5088:1766,error,error,1766,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5088,1,['error'],['error']
Availability,"n 16/01/18) it crash at runtime. > [INFO] [runSofa] No plugin will be automatically loaded; > - No custom list found at C:\sofaBuild\bin/bin/plugin_list.conf; > - No default list found at C:\sofaBuild\bin/bin/plugin_list.conf.default; > The constructor with a QGLFormat is deprecated, use the regular contructor instead.; > [ERROR] [FileRepository] File icons/back.png NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [ERROR] [FileRepository] File icons/home.png NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [ERROR] [BaseViewer] Could not create file 'C:/sofa/share/textures/SOFA_logo.bmp'; > Valid extensions: dds; > ; > [ERROR] [Image] Could not load image with extension png. Valid extensions: dds; > [ERROR] [OglModel(VisualBody)] couldn't create an image from file textures/snakeColorMap.png; > [ERROR] [OglModel(VisualBody)] 1 textures couldn't be loaded; > [ERROR] [FileRepository] File docs/runsofa.html NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [INFO] [SceneChecker] The 'APIVersion' directive is missing in the current scene. Switching to the default APIVersion level '17.06'; > [INFO] [SceneChecker] Validating node ''.; > Activate checkers:; > - SceneCheckAPIChange; > - SceneCheckDuplicatedName; > - SceneCheckMissingRequiredPlugin; > ; > [ERROR] [FileSystem::listDirectory()] C:\sofaBuild\bin/bin: error 3: Le chemin dÆaccÞs spÚcifiÚ est introuvable.; > ; > [ERROR] [FileSystem::listDirectory()] C:\sofaBuild\bin/bin: error 3: Le chemin dÆaccÞs spÚcifiÚ est introuvable. Plus, I had many troubles compiling it. I have to uncheck PSL (require SofaPython), but when SofaPython is checked there is many link problems. Finally, I both unchecked them. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/561:1495,ERROR,ERROR,1495,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/561,4,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"n, Sep 11 2023, 13:41:44) ; [GCC 11.2.0]; --- PATH ---; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/snap/bin; --- SOFA_ROOT ---; /bd_targaryen/users/kleelakunwet/sofa/build/install; --- PYTHONPATH ---; --- sys.path ---; ['', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python39.zip', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/lib-dynload', '/bd_targaryen/users/kleelakunwet/.local/lib/python3.9/site-packages', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt; ...; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/include/Sofa.Component.LinearSolver.Direct/sofa/component/linearsolver/direct/SparseQRTraits.h; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/include/Sofa.Component.LinearSolver.Direct/sofa/component/linearsolver/direct/TypedMatrixLinearSystem[BTDMatrix].h; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/lib/libmetis.so; CMake Error at _deps/metis-build/cmake_install.cmake:93 (file):; file cannot create directory: /cmake/metis. Maybe need administrative; privileges.; Call Stack (most recent call first):; Sofa/Component/LinearSolver/Direct/cmake_install.cmake:246 (include); Sofa/Component/LinearSolver/cmake_install.cmake:127 (include); Sofa/Component/cmake_install.cmake:133 (include); Sofa/cmake_install.cmake:48 (include); cmake_install.cmake:150 (include). gmake: *** [Makefile:120: install] Error 1. ```. **Content of build_dir/CMakeCache.txt**. [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/14815053/CMakeCache.txt). ---------------------------------------------",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4622:2590,Error,Error,2590,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4622,2,['Error'],['Error']
Availability,"n, the problem is that by default access to the static version (so the one that need the full inclusion of involved data types) to generate the dynamic one in the VirtualTypeInfo::get() method. As this function is needed to implement Data<T>::getAbstractTypeInfo it means that the complete static version is needed everytime and everywhere we manipulate a Data<>. To be sure the code does not fall back to DefaultTypeInfo... most of the specilization are made visible in DataTypeInfo.h where a lot of data types ""vector, rigid, map, vec, quat"". All these includes are just there to insure that in Sofa no-one will never fallback on the default dehavior. But static type info is kind of ""expert"" feature that is only usefull in few rare use cases. So polluting the complete dependency tree (and compilation unit) for a rarely use case is problematic. . So I tried to reverse all to implement an opt-in solution ... by default and for most of our code base, dynamic typeinfo (aka the one following the AbstractTypeInfo interface) are available because they only requires opaque data types. And it is only on purpose that developper can include (most of the time in a .cpp) the static typeinfos. So in short...it is abstract by default and static after a specific include. Bying abstract by default ...make that the dependencies is reduced a lot. . This PR:; - add DataTypeId<xxxx> so we can have an unique id per data type. This unique id is statically allocated and is used a way to access the DataTypeInfoRegistry in an efficiant way. ; - add a unique storage repository (DataTypeInfoRegistry). This storage is holding all the typeinfo use in Sofa. There is two way ; to be registered in the repository, the first one consist consist in explcitly adding a typeinfo instance in the storage. This is what to do when we want to be sure the fully defined data type is registered. ; - the other was implemented to mimick at best the the existing behavior in Sofa while fixing some of its error. It works t",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1552:2151,avail,available,2151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1552,1,['avail'],['available']
Availability,"n/vendor_perl:/usr/bin/core_perl; --- SOFA_ROOT ---; /home/sergei/Source_code/Sofa_development/sofa/build_release/install; --- PYTHONPATH ---; /home/sergei/Source_code/Sofa_development/SofaPyhton3/build_release/lib/pyhton3/site-packages; --- sys.path ---; ['', '/home/sergei/Source_code/Sofa_development/SofaPyhton3/build_release/lib/pyhton3/site-packages', '/usr/lib/python310.zip', '/usr/lib/python3.10', '/usr/lib/python3.10/lib-dynload', '/home/sergei/.local/lib/python3.10/site-packages', '/usr/lib/python3.10/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [sergei@sergei-20hd0000fr sofa]$ /home/sergei/Source_code/Sofa_development/sofa/build_release/bin/runSofa -l /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/libSofaPython3.so /home/sergei/Optimus_test/test_scene.py ; [ERROR] [FileSystem::isDirectory()] /home/sergei/Source_code/Sofa_development/sofa/build_release/share/sofa/gui/runSofa: No such file or directory; [WARNING] [SofaEigen2Solver] SofaEigen2Solver is deprecated; Eigen classes are now located in Sofa.LinearAlgebra and SVDLinearSolver in SofaDenseSolver.You can remove SofaEigen2Solver from your scene, and if using SVDLinearSolver, please load SofaDenseSolver instead.; [INFO] [runSofa] PluginRepository paths = /home/sergei/Source_code/Sofa_development/Optimus/build_release:/home/sergei/Source_code/Sofa_development/SofaAuxiliaryComponents/build_release:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib; [INFO] [runSofa] DataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/examples; [INFO] [runSofa] GuiDataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt; [INFO] [SofaPython3] Initi",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:7323,ERROR,ERROR,7323,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['ERROR'],['ERROR']
Availability,"n: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning:",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:8922,ERROR,ERROR,8922,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['ERROR'],['ERROR']
Availability,"ne is used for the benchmarks on 1000 time steps. The timer to focus on is `buildStiffness`. But be aware that this timer also includes the computation of the contributions in addition to the assembly itself. 1. The scene without modification, i.e. with `<ConstantSparsityPatternSystem template=""CompressedRowSparseMatrixd"" name=""A"" printLog=""true""/>`. ```; [INFO] [BatchGUI] 1000 iterations done in 12.3859 s ( 80.7368 FPS). LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 7 0.82 1 1.57 8.67 1.81 0.34 1.81 14.74 .......buildStiffness; ```. 2. The scene with a regular matrix assembly, i.e. with `<MatrixLinearSystem template=""CompressedRowSparseMatrixd"" name=""A"" printLog=""true""/>`. ```; [INFO] [BatchGUI] 1000 iterations done in 15.0063 s ( 66.6387 FPS). LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 7 0.69 1 4.69 6.45 4.95 0.18 4.95 33.30 .......buildStiffness; ```. 3. The scene with a regular matrix assembly, i.e. with `<MatrixLinearSystem template=""CompressedRowSparseMatrixMat3x3d"" name=""A"" printLog=""true""/>` (blocks of 3x3). ```; [INFO] [BatchGUI] 1000 iterations done in 16.765 s ( 59.648 FPS). LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 7 0.84 1 4.71 13.93 5.51 1.11 5.51 33.16 .......buildStiffness; ```. In benchmark 1, we have a x2.7 speed-up compared to benchmark 2. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4158:3450,failure,failures,3450,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4158,2,['failure'],['failures']
Availability,"nent.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collision.Geometry""]; [ERROR] [SofaRuntime] ValueError: Object type BackgroundSetting<> was not created; The object is not in the factory.; This component has been MOVED from SofaBaseVisual to Sofa.Component.UserInterface.ConfigurationSetting since SOFA v22.06.; To continue using this component you may need to update your scene by adding. Traceback (most recent call last):; File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 435, in; env.reset(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 380, in reset; super().reset(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/base.py"", line 147, in reset; self._init_sim(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 216, in _init_sim; super()._init_sim(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/base.py"", line 230, in _init_sim; self.scene_creation_result = getattr(self._scene_description_module, ""createScene"")(self._sofa_root_node, **self.crea",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:5579,ERROR,ERROR,5579,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"nent.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:3423,ERROR,ERROR,3423,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"nique id per data type. This unique id is statically allocated and is used a way to access the DataTypeInfoRegistry in an efficiant way. ; - add a unique storage repository (DataTypeInfoRegistry). This storage is holding all the typeinfo use in Sofa. There is two way ; to be registered in the repository, the first one consist consist in explcitly adding a typeinfo instance in the storage. This is what to do when we want to be sure the fully defined data type is registered. ; - the other was implemented to mimick at best the the existing behavior in Sofa while fixing some of its error. It works the following way... when a Data<Type> is used this automatically trigs the setting of the typeinfo in the repository. If no DataTypeInfo<> is available this fallback to the default one but the data info cannot be used... if in a subsequent compilation unit (.cpp) the same Data<Type> is used with the complete type, the registring is done again...and if the type is more complete...then the old (partial) type is replaced with the new one. ; - the common data type info are now in their own file in sofa/defaulttype/typeinfo/TypeInfo_XXXX.h/cpp; - the templated code shared between multiple data type info are now in the sofa/defaulttype/typeinfo/models/XXXXX.h; - there is no more dependency to some specific contained data type (eg: RGBAcolor, Vec, Matrice, Set,) in AbstractDataTypeInfo or DataTypeInfo.; - there is a mechanism to get the list of registered typeinfo and wheter the are fully defined or only partially. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1552:4299,failure,failures,4299,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1552,2,['failure'],['failures']
Availability,"nk inherits DDGNode.; A DDGLink thus benefits from the whole dirty flag propagation thingy, and implements the update() function to clean its dirty flag, and update from its inputs.; Just like Datas, a DDGLink also possesses a counter, that is incremented when the link value changes. Just like BaseLinks, and SPtrs, to retrieve the object linked with a DDGLink, you need to call the get() method. The set() method will set the link. When a link is set within a DDGLink, the componentState of the linked object is set as input to that DDGLink. It's up to you to connect your DDGLink to some datas to connect your dependency graph. Contrary to the current link implementation in SOFA, these links, can be very easily manipulated as their base class (BaseDDGLink), or as DDGNodes even. DDGLinks are parsed in Base::parseField just like BaseLinks and BaseDatas, which makes them usable with the BaseObjectDescriptions. (they really mirror the behavior of all other field types.). A very simple test case is present in this PR to show you how it's used. You can reference your links with their pathnames, just like normal datas or links, by calling the getPathName() method. There's not bi-directionality implemented in this PR, (because I didn't have time in the end...) but it's not rocket science:; - all there is to do is add a vector of Base* in Base with helper methods to add, remove retrieve the list of link owners. Then in DDGLink::set(), call the add() method of your link to register`this`. (maybe in another PR...) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1226:1958,failure,failures,1958,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1226,2,['failure'],['failures']
Availability,"nment commits. ## issofa_python. ### New features; Add binding python to get slaves and names on baseObjects.; Add Python bindings for triangle and point topology modifiers. Example scene which show triangle refining.; Creation of Binding_BaseTopologyObject common to PointSetTopologyModifier and TriangleSetTopologyModifier.; Add a getObjects() method to python BaseContext interface. Allow selection of objects based on type and name. May be extended to include more search options later. ### Improvements; SendScriptEvent should only be applied on a specified node, not on root !; WARNING: may affect python script behavior.; Allow to get the value of a data as a string when its type is not handle by the binding.; Object and type names are now both optional when calling BaseContext_getObjects(). Moreover the search direction can now optionally be passed to BaseContext_getObjects() (default is 'Local').; Binding_Data expose fullPath read only parameter for BaseData that derive from DataFileName, which as the name suggests, returns the fullPath to the file pointed by that data. Returns None otherwise. ### Bugfixes; If the data to be gotten using the bind is a vector of type 'unknown' then the text of the data is returned as a whole.; Fix compilation and warnings with gcc.; Fix SofaPython build on linux.; Fix undefined behaviour and potential crash in Python BaseContext.getObjects() due to PyList accessed out of bounds. ; Fix a memory leak which happens whenever an object is transferred from C++ to Python. _______________________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/171:2004,failure,failures,2004,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/171,1,['failure'],['failures']
Availability,"node_1 = articulation_center_node_1.addChild(""articulation_1""); articulation_node_1.addObject(; ""Articulation"",; translation=False,; rotation=True,; rotationAxis=[0, 0, 1],; articulationIndex=0,; ). articulation_center_node_2 = articulation_hierarchy_node.addChild(""center_2""); articulation_center_node_2.addObject(; ""ArticulationCenter"",; parentIndex=0,; childIndex=2,; posOnParent=[0, 0, 0],; posOnChild=[0, 0, 0],; ). articulation_node_2 = articulation_center_node_2.addChild(""articulation_2""); articulation_node_2.addObject(; ""Articulation"",; translation=False,; rotation=True,; rotationAxis=[0, 0, 1],; articulationIndex=1,; ). # place light and a camera; root.addObject(""LightManager""); root.addObject(""DirectionalLight"", direction=[0, 1, 0]); root.addObject(""InteractiveCamera"", name=""camera"", position=[0, 0, 5], lookAt=[0, 0, 0], distance=37, fieldOfView=45, zNear=0.63, zFar=55.69). if __name__ == ""__main__"":; root = Sofa.Core.Node(""myroot""); createScene(root); Sofa.Simulation.init(root); init_display(root); try:; while True:; Sofa.Simulation.animate(root, root.getDt()); Sofa.Simulation.updateVisual(root); simple_render(root); time.sleep(root.getDt()); except KeyboardInterrupt:; pass; ```. To reproduce the issue, run `python3 test_articulation.py` and `runSofa test_articulation.py`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3095:6080,failure,failures,6080,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3095,2,['failure'],['failures']
Availability,non-ASCII chars caused problems in some platform when compiling; Discussed in [Issue323](https://github.com/sofa-framework/sofa/issues/323). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/327:397,failure,failures,397,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/327,2,['failure'],['failures']
Availability,normals and vectors to Legacy vtk import. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/536:298,failure,failures,298,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/536,2,['failure'],['failures']
Availability,"nsition, so it should be as least breaking as possible. - sofa::defaulttype::Mat becomes sofa::type::Mat; - sofa::defaulttype::MatSym becomes sofa::type::MatSym. ## Breaking; Same as #1734:; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions like invert, etc. when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. ## Talking. - An other contribution I would like to spread to the sofa code base: ; Instead of throwing a text information if the function cannot do (like matrix non invertible, etc), ; this should always return a boolean value and apply the [[nodiscard]] flag to oblige the user to use the return value.; This makes the compiler generates a warning; I would even push to make it a compilation error; More generally, it would be cool to use the [[nodiscard]] flag much more for critical code.; ~~I tried to even use the [[nodiscard ""MESSAGE""]] but this feature seems only included with c++20 so I may change this PR to run successfully on the CI.~~; As expected, this is not supported by the CI 🙁. - the compatibility layer still holds the dependency on helper for the messaging, so we should discuss about that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new sce",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1775:1150,error,error,1150,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1775,1,['error'],['error']
Availability,"nt code which impact maintainability of our code base. The second problem is the lack of consistency in the way warning and errors are reported. In sofa some component rise en exception while others prints a message and return None which is very problematic to users. . In this PR we addressed these two issues through a major cleaning set of changes:; - [SofaPython]: ; * refactor the way to get get Sofa object from their PyObject equivalent (hundred of changes). ; * add dedicated easing function (unwrap, get, get_baseobject) ; * replace wherever possible copy-pasted code with these function. ; * refactor the way we report error from binding (hundred of changes) (API BREAK). ; * returning NULL with a correctly set exception type as it is the way of handling error in python. ; * when returning NULL it is mandatory to preceed the return with an exception type & message specification. This can be done either with PyExc_SetString() or Py_BaddArgument(), ; * when returning after a failing Py_ParseTuple is an exception, as the function sets itself a very ; descriptive and standardized error message.; * add macros (SP_PYERR_SETSTRING_INVALIDTYPE and SP_PYERR_SETSTRING_OUTOFBOUND) to report consistant message with PyErr_SetString ; * add SP_CLASS_METHOD_DOC() and SP_CLASS_METHOD_KW_DOC() to declare method with their docstring (if you don't know what are docstring read: http://sametmax.com/les-docstrings/); * add new bindings:; * BaseState::getSize ; * BaseMapping::applyJT; * BaseMapping::applyDJT; * Data::getCounter ; * Data::isDirty; * Node::getMass; * Node::getForceField; * STLExporter; * Sofa.unload; * Sofa.path; * Sofa.getAvailableComponents; * VisualModel::updateVisual; * VisualModel::initVisual; * add in PythonEnvironment::getPythonCallingPointAsFileInfo() a function that return a string with the ; python file/line info to add report them in msg_* ; * adds 'override' keyword when needed (more info => http://en.cppreference.com/w/cpp/language/override); * adds tests on P",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/304:1283,error,error,1283,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/304,1,['error'],['error']
Availability,"nt.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:2284,ERROR,ERROR,2284,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"o 2019 SOFA v23.06 C++17 Windows10]; ```console; [ERROR] [Node(visualNode)] Component 'Visual' of type 'OglModel' failed:; Object type OglModel<> was not created; The object 'OglModel' is not in the factory.; This component has been MOVED from SofaOpenglVisual to Sofa.GL.Component.Rendering3D since SOFA v22.06.; To continue using this component you may need to update your scene by adding; <RequiredPlugin name='Sofa.GL.Component.Rendering3D'/>. [ERROR] [Node(visualNode)] Component 'Visual' of type 'BarycentricMapping' failed:; Object type BarycentricMapping<Vec3d,Vec3d> was not created; The object is in the factory but cannot be created.; Requested template : Vec3d,Vec3d; Used template : Vec3d,Vec3d (default); Reason(s) : Data attribute 'output' does not point to a mechanical state of data type 'Vec3d' and none can be found in the parent node context.; Also tried to create the object with the template 'Vec3d,Rigid3d' but failed for the following reason(s):; 1. Data attribute 'output' does not point to a mechanical state of data type 'Rigid3d' and none can be found in the parent node context.; ; [ERROR] [Node(Visu)] Component 'Mapping Visual' of type 'RigidMapping' failed:; Object type RigidMapping<> was not created; The object is in the factory but cannot be created.; Requested template : None; Used template : None; Also tried to create the object with the template 'Rigid2d,Vec2d' but failed for the following reason(s):; 1. Data attribute 'input' does not point to a mechanical state of data type 'Rigid2d' and none can be found in the parent node context.; Also tried to create the object with the template 'Rigid3d,Vec3d' but failed for the following reason(s):; 1. Data attribute 'output' does not point to a mechanical state of data type 'Vec3d' and none can be found in the parent node context. [ERROR] [ObjectFactory::addAlias()] Target class for alias 'OglModel' not found: VisualModel; [14196:3124:0202/172118.106:ERROR:broker_win.cc(59)] Error reading broker pipe; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3614:1355,ERROR,ERROR,1355,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3614,4,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"o that the un-catched exceptions are sended as msg_error instead of being printed on the console. ; * cosmetic changes like replacing 'using namespace a;' with the precise 'using a:TheClass', removing in-consistant line spacing. ; * replace ""extern C"" with static. - [Flexible/python] Fix the examples & the tests to take into account the changes in SofaPython; - [Compliant/python] Fix the examples & the tests to take into account the changes in SofaPython. To simplify the submitter's life (and don't waste their time) some extras (read not really relevant) changes are also added to the PR:; - remove a virtual in-heritance on BaseController and plugin/optitracknet. ; - adds a << operator to Message.h to handle file:line information (now in PR: #314 ) ; - made some changes in STLExporter to stay consistant with Sofa guidelines. . There is still some work todo (if you have free time to offer):; Eg: ; in Compliant there is still patterns like:; ```cpp; SP_MESSAGE_ERROR( ""_Compliant_getAssembledImplicitMatrix: wrong arguments"" );; return NULL;; ```; The SP_MESSAGE_ERROR is probably not needed as it duplicate the one provided by the python exception. . While in ; ```cpp; SP_MESSAGE_ERROR( ""_Compliant_getAssembledImplicitMatrix: first argument is not a BaseNode"" );; PyErr_BadArgument();; return NULL;; ```; PyExc_SetString() should replace the message error & the bad argument. . More generally there is still a lot of SP_MESSAGE_*() instead of msg_* and there is a lot of method that haven't their docstring. ; ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/304:3642,error,error,3642,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/304,3,"['error', 'failure']","['error', 'failures']"
Availability,"ocal/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin; --- SOFA_ROOT ---; --- PYTHONPATH ---; --- sys.path ---; ['', '/usr/lib/python310.zip', '/usr/lib/python3.10', '/usr/lib/python3.10/lib-dynload', '/home/create/.local/lib/python3.10/site-packages', '/usr/local/lib/python3.10/dist-packages', '/usr/lib/python3/dist-packages']; #################; create@create-AMX-X57. ```. ---------------------------------------------. ### Logs. **Output from make**. ```; ...; [ 89%] Linking CXX shared library ../../../lib/libSofaCUDA.so; /usr/bin/ld: CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/CudaHexahedronFEMForceField.cpp.o: in function `sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField<sofa::gpu::cuda::CudaVectorTypes<sofa::gpu::cuda::Vec3r1<float>, sofa::gpu::cuda::Vec3r1<float>, float> >::HexahedronFEMForceField()':; CudaHexahedronFEMForceField.cpp:(.text._ZN4sofa9component14solidmechanics3fem7elastic23HexahedronFEMForceFieldINS_3gpu4cuda15CudaVectorTypesINS6_6Vec3r1IfEES9_fEEEC1Ev[_ZN4sofa9component14solidmechanics3fem7elastic23HexahedronFEMForceFieldINS_3gpu4cuda15CudaVectorTypesINS6_6Vec3r1IfEES9_fEEEC1Ev]+0x269): undefined reference to `sofa::core::behavior::ForceField<sofa::gpu::cuda::CudaVectorTypes<sofa::gpu::cuda::Vec3r1<float>, sofa::gpu::cuda::Vec3r1<float>, float> >::ForceField(sofa::core::behavior::MechanicalState<sofa::gpu::cuda::CudaVectorTypes<sofa::gpu::cuda::Vec3r1<float>, sofa::gpu::cuda::Vec3r1<float>, float> >*)'; collect2: error: ld returned 1 exit status; make[2]: *** [applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/build.make:9130: lib/libSofaCUDA.so.0.1] Error 1; make[1]: *** [CMakeFiles/Makefile2:18762: applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/all] Error 2; make: *** [Makefile:156: all] Error 2. ```. **Content of build_dir/CMakeCache.txt**; ------------; [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/10970149/CMakeCache.txt); ------------",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3726:2243,error,error,2243,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3726,4,"['Error', 'error']","['Error', 'error']"
Availability,"ocations at every step of the loops. Same benchs as ; - https://github.com/sofa-framework/sofa/pull/4132. ```; (mu=0.1); LCP : 5000 iterations done in 58.1724 s ( 85.9514 FPS); GCS before: 5000 iterations done in 83.4733 s ( 59.8994 FPS); GCS after: 5000 iterations done in 69.2669 s ( 72.1846 FPS); ```; ```; (mu=0.0); LCP : 5000 iterations done in 44.0637 s ( 113.472 FPS); GCS before: 5000 iterations done in 69.1173 s ( 72.3408 FPS); GCS after: 5000 iterations done in 53.8957 s ( 92.7719 FPS); ```. Speedup of ~20-30% but still slower than LCP (but much less though ).; But this improvement should be felt whenever the GCS is using the unbuilt method (contrary to #4132 which was specialized for LinearConstraintCorrection with wire optimization). Other bench on caduceus (5000 steps); ```; LCP; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 4 1.11 1 0 0.69 0.14 0.04 0.14 9.10 ....SolveConstraint: POSITION AND VELOCITY - SolveSystem; ```; ```; GCSunbuilt before; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 4 1.28 1 0 33.01 0.24 1.45 0.24 13.24 ....SolveConstraint: POSITION AND VELOCITY - SolveSystem; ```; ```; GCSunbuilt after; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 4 1.28 1 0 19.89 0.16 0.98 0.16 9.38 ....SolveConstraint: POSITION AND VELOCITY - SolveSystem; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4195:1908,failure,failures,1908,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4195,2,['failure'],['failures']
Availability,"oduces a new API for targets and packages management, following this scheme:. ```cmake; sofa_create_package_with_targets() # replacing sofa_generate_package. sofa_create_package() # replacing sofa_write_package_config_files. sofa_add_targets_to_package() # replacing sofa_install_targets; if(AUTO_SET_TARGET_PROPERTIES); sofa_auto_set_target_properties() # from a part of sofa_install_targets; endif(); sofa_install_targets_in_package() # from a part of sofa_install_targets; ; if(RELOCATABLE); sofa_set_target_install_relocatable() # replacing sofa_set_install_relocatable; endif(); ```. You can now use only what you need. ; The mega-master-calling-all-the-others macro is sofa_create_package_with_targets (replacing sofa_generate_package). ## Usual examples. To create a ""plugin"" package like SofaExporter:; ```cmake; sofa_create_package_with_targets(; PACKAGE_NAME SofaExporter; PACKAGE_VERSION ${SofaExporter_VERSION}; TARGETS SofaExporter AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""SofaExporter""; RELOCATABLE ""plugins""; ); ```. To create a ""legacy meta-module"" package like SofaGeneral:; ```cmake; sofa_create_package_with_targets(; PACKAGE_NAME SofaGui; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS SofaGui AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""SofaGui""; ); ```. To register a ""legacy module"" target like SofaGeneralEngine:; ```cmake; sofa_add_targets_to_package(; PACKAGE_NAME SofaGeneral; TARGETS SofaGeneralEngine AUTO_SET_TARGET_PROPERTIES; ); ``` . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1433:2090,failure,failures,2090,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1433,2,['failure'],['failures']
Availability,ofa/framework/Helper/src/sofa/helper/system/PluginManager.cpp:30:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileMonitor_linux.cpp:48:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:1013: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o] Error 1; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:649: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o] Error 1; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileSystem.cpp:26:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:607: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o] Error 1; CMakeFiles/Makefile2:3837: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/all' failed; make[1]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/all] Error 2; Makefile:135: recipe for target 'all' failed; make: *** [all] Error 2. ```. **Content of build_dir/CMakeCache.txt**. [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/14392233/CMakeCache.txt). ---------------------------------------------; Thank you in advance!,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4527:4677,Error,Error,4677,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527,5,"['Error', 'error']","['Error', 'error']"
Availability,"ofa::helper::io::Mesh*, boost::intrusive_ptr<sofa::component::topology::RegularGridTopology>, sofa::helper::vector<sofa::component::topology::SparseGridTopology::Type, sofa::helper::CPUMemoryManager<sofa::component::topology::SparseGridTopology::Type> >&) const+0x1f2) [0x7f67a0b49082]; -> /opt/sofa/lib/libSofaBaseTopology.so.20.12.00(sofa::component::topology::SparseGridTopology::buildFromTriangleMesh(sofa::helper::io::Mesh*)+0x2c8) [0x7f67a0b4a3d8]; -> /opt/sofa/lib/libSofaBaseTopology.so.20.12.00(sofa::component::topology::SparseGridTopology::buildAsFinest()+0x2d8) [0x7f67a0b4ac58]; -> /opt/sofa/lib/libSofaBaseTopology.so.20.12.00(+0x2d2a2b) [0x7f67a0b3fa2b]; -> /opt/sofa/lib/libSofaSimulationCore.so.20.12.00(sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*)+0x1a3) [0x7f67a054e5b3]; -> /opt/sofa/lib/libSofaSimulationGraph.so.20.12.00(sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*)+0x3a5) [0x7f67a5421455]; -> /opt/sofa/lib/libSofaSimulationGraph.so.20.12.00(sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool)+0x15f) [0x7f67a542187f]; -> /opt/sofa/lib/libSofaSimulationCore.so.20.12.00(sofa::simulation::Simulation::initNode(sofa::simulation::Node*)+0xaa) [0x7f67a05b8b4a]; -> /opt/sofa/lib/libSofaSimulationCore.so.20.12.00(sofa::simulation::Simulation::init(sofa::simulation::Node*)+0xb0) [0x7f67a05b8620]; -> runSofa() [0x40f3a3]; -> /lib64/libc.so.6(__libc_start_main+0xf2) [0x7f679ef201e2]; -> runSofa() [0x4105de]; [1] 36378 segmentation fault (core dumped) runSofa /tmp/test.scn; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1748:2724,fault,fault,2724,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1748,1,['fault'],['fault']
Availability,"ofaKernel/SofaSimulation/../modules -I../SofaKernel/framework/sofa/core/../.. -I../SofaKernel/framework/sofa/helper/../.. -F/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/System/Library/Frameworks -I../SofaKernel/extlibs/eigen-3.2.7 -ISofaKernel/SofaFramework -I../SofaKernel/extlibs/tinyxml -I../SofaKernel/framework/sofa/defaulttype/../.. -I../SofaMisc/../modules -I../SofaKernel/SofaCommon/../modules -isystem=/opt/local/include/Qt -Wall -W -O3 -DNDEBUG -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk -mmacosx-version-min=10.11 -fPIC -DSOFA_MULTITHREADING_PLUGIN -std=gnu++11 -MD -MT applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o -MF applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o.d -o applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o -c ../applications/plugins/MultiThreading/src/TaskSchedulerBoost.cpp; ../applications/plugins/MultiThreading/src/TaskSchedulerBoost.cpp:192:18: error: overload resolution selected deleted operator '='; mTaskMutex.v_ = 0L;; ~~~~~~~~~~~~~ ^ ~~; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/atomic:1654:18: note: candidate function has been explicitly deleted; atomic_flag& operator=(const atomic_flag&) = delete;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/atomic:1655:18: note: candidate function has been explicitly deleted; atomic_flag& operator=(const atomic_flag&) volatile = delete;; ^; 1 error generated.; ```. This plugin should either be updated with the new boost API, or get rid of boost dependency.; I don't know this plugin enough... ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/316:1566,error,error,1566,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/316,2,['error'],['error']
Availability,"ofa_env; File : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/scene_description.py; scene header file where plugins are loaded : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/sofa_templates/scene_header.py. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:1315,ERROR,ERROR,1315,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,1,['ERROR'],['ERROR']
Availability,"ojects/sofa-build/$C:/projects/sofa-build/install/plugins/CImgPlugin/bin.; 1> Maybe need administrative privileges.; 1>Call Stack (most recent call first):; 1> applications/plugins/cmake_install.cmake:37 (include); 1> cmake_install.cmake:88 (include); 1>; 1>; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: The command ""setlocal; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: ""C:\Program Files\CMake\bin\cmake.exe"" -DBUILD_TYPE=Release -P cmake_install.cmake; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmErrorLevel; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: exit /b %1; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmDone; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :VCEnd"" exited with code 1.; 1>Done building project ""INSTAL",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:2967,error,error,2967,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,1,['error'],['error']
Availability,"olver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [ERROR] [InfoComponent(Not created (SparseGridRamificationTopology))] Object type SparseGridRamificationTopology<> was not created; T",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:9412,ERROR,ERROR,9412,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['ERROR'],['ERROR']
Availability,"om/56633656/234046608-193dee0f-9771-4526-be96-6987aa0b87d1.png). However, my desired color map of the stress is like the following image (using node stress data):; ![VisualStress04](https://user-images.githubusercontent.com/56633656/234047053-0d382e09-243c-470b-8f49-ebbc6b756482.png); Compared to the visualization with ""_showVonMisesStressPerElement_"", this color map accords more with my intuition of the stress forces (while the feet are pressed).; Therefore, I would like to add a new option ""_showVonMisesStressPerNodeColorMap_"" to show this color map. 2) I would like to add an option ""_showGapBetweenElements_"" to activate/deactivate drawing the gap between the elements, in order to show a smooth color map:; ![VisualStress07](https://user-images.githubusercontent.com/56633656/234049502-781340eb-e323-402d-8aeb-fc4f14c0e722.png). 3) I would like to add an option ""_showForceField_"" to decide if we draw the forcefield of the current object or not. This will be useful when we have several soft tissues and we want to focus on one of the objects:; ![VisualStress08](https://user-images.githubusercontent.com/56633656/234050359-c2c27e3b-ba45-48b9-98dc-337757e25b6d.png); ![VisualStress09](https://user-images.githubusercontent.com/56633656/234050426-38c84e34-49f8-4c2c-bcea-b8d4e2acef59.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3820:2332,failure,failures,2332,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3820,2,['failure'],['failures']
Availability,"ompile-time, and it is not possible to use runtime polymorphism. Therefore, it was not possible to uncouple the solver itself from the ordering method. To comply with the new design, I introduced a factory that can be enriched in the new Metis plugin. This factory is able to register types and use runtime polymorphism using a few C++ tricks. The only concern is that the solvers in the factory will not use the algorithms from the `BaseOrderingMethod`. Instead, they use a simple string (defined in a `BaseOrderingMethod`), and its mapping to a type. This has to be registered in the initialization of the module. I tried hard to use the intelligence of the component instead of relying on a string and a factory, but the design of Eigen is not compatible. In order to not force the users to add an ordering method in their scenes, a default one is created automatically by the linear solver. It instantiates `MetisOrderingMethod` if it can find it, otherwise it's `AMDOrderingMethod`. Here are the tasks in a future PR:. 1. Create a plugin for Metis; 2. Move `MetisOrderingMethod` into this plugin; 3. Move some unit tests in this plugin; 4. Update the regression references; 5. Update `FillReducingOrdering`; 6. Remove METIS dependency in `LinearSolver.Direct`; 7. Create a new plugin for Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4477:2615,failure,failures,2615,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4477,2,['failure'],['failures']
Availability,"ompiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Install prefix: /home/thebigone/projects/sofa/build/install; -- Found PythonInterp: /usr/bin/python3.8 (found version ""3.8.2"") ; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Check if compiler accepts -pthread; -- Check if compiler accepts -pthread - yes; -- Found Threads: TRUE ; CMake Deprecation Warning at CMakeLists.txt:225 (message):; Deprecated components are activated (SOFA_WITH_DEPRECATED_COMPONENTS; variable is ON). -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; **CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Boost (missing: system filesystem program_options) (found; version ""1.71.0"")**; Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindBoost.cmake:2179 (find_package_handle_standard_args); SofaKernel/SofaFramework/SofaMacros.cmake:526 (find_package); SofaKernel/modules/SofaHelper/CMakeLists.txt:6 (sofa_find_package). -- Configuring incomplete, errors occurred!; See also ""/home/thebigone/projects/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/thebigone/projects/sofa/build/CMakeFiles/CMakeError.log"". ``; $ sudo apt install libboost-dev; ``; Reading package lists... Done; Building dependency tree ; Reading state information... Done; **libboost-dev is already the newest version (1.71.0.0ubuntu2).**; The following packages were automatically installed and are no longer req",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1462:1583,Error,Error,1583,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1462,1,['Error'],['Error']
Availability,"on""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:4410,ERROR,ERROR,4410,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"on::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::gr; aph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std; ::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::gr; aph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std; ::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool); sofa::simulation::DefaultAnimationLoop::step(sofa::core::ExecParams const*, double); sofa::simulation::Simulation::animate(sofa::simulation::Node*, double); sofa::gui::qt::RealGUI::step(); QMetaObject::activate(QObject*, int, int, void**); QTimer::timeout(QTimer::QPrivateSignal); QObject::event(QEvent*); QApplicationPrivate::notify_helper(QObject*, QEvent*); QApplication::notify(QObject*, QEvent*); QCoreApplication::notifyInternal2(QObject*, QEvent*); QTimerInfoList::activateTimers(); g_main_context_dispatch; g_main_context_iteration; QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>); QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>); QCoreApplication::exec(); sofa::gui::qt::RealGUI::mainLoop(); sofa::gui::common::GUIManager::MainLoop(boost::intrusive_ptr<sofa::simulation::Node>, char const*); __libc_start_main; zsh: segmentation fault (core dumped) ~/repos/sofa/build/master/bin/runSofa ; ```; </details>",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3202:9682,fault,fault,9682,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3202,1,['fault'],['fault']
Availability,"onent.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not f",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:3110,ERROR,ERROR,3110,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"onstraintCorrection<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: UncoupledConstraintCorrection<Vec1d>; [WARNING] [ObjectFactory] Class already registered: UncoupledConstraintCorrection<Vec2d>; [WARNING] [ObjectFactory] Class already registered: UncoupledConstraintCorrection<Vec3d>; [WARNING] [ObjectFactory] Class already registered: UniformConstraint<Vec1d>; [WARNING] [ObjectFactory] Class already registered: UnilateralInteractionConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: DOFBlockerLMConstraint<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: DOFBlockerLMConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: FixedLMConstraint<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: FixedLMConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: DistanceLMContactConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: DistanceLMConstraint<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: DistanceLMConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: LMConstraintSolver; [WARNING] [ObjectFactory] Class already registered: LMConstraintDirectSolver; [INFO] [PluginManager] Loaded plugin: /home/jnbrunet/sources/sofa/build/lib/libSofaConstraint.so; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1652:6585,failure,failures,6585,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1652,2,['failure'],['failures']
Availability,"ontainer name=""Torus0Topo"" position=""@/Mesh/stuffing.outputPoints"" tetrahedra=""@/Mesh/stuffing.outputTetrahedra""/>; <MechanicalObject name=""Torus0State"" template=""Vec3d"" velocity=""@/Mesh/TorusVVel.output_position"" rest_position=""@/Mesh/stuffing.outputPoints"" position=""@Torus0VXForm.output_position"" />; <TetrahedronSetGeometryAlgorithms name=""Torus0Algo"" />; <MeshMatrixMass name=""MMass"" massDensity=""2.0"" />; <TetrahedronFEMForceField name=""FEM"" youngModulus=""50"" poissonRatio=""0.45"" />; </Node>. <Node name=""Object2"" >; <EulerImplicitSolver />; <CGLinearSolver iterations=""200"" tolerance=""1e-09"" threshold=""1e-09""/>; <MechanicalObject template=""Rigid3d"" name=""myParticle"" position=""0 0 0 0 0 0 1"" showObject=""1"" />; <UniformMass name=""UMass"" totalMass=""1"" />; <ConstantForceField totalForce=""1 0 0 0 0 0"" />; </Node>; </Node>; ```. #### Advantages; - easy to write a scene with a global gravity; - light nodes (no additional ForceField appearing). #### Drawbacks; - prone to error for beginners not seeing that a gravity (external force) is acting. ## Proposal; - gravity can still be defined though a data in the Nodes (but default value changed `gravity=""0 0 0""`); - using this data gravity generates a warning (not the default/advised way of designing a scene); - if this gravity data is not null, mass components automatically create a GravityForceField in the node; - GravityForceField have a link towards the mass to avoid recomputing the M matrix; - gravity contribution is added in the matrix system by a ForceField; - GravityForceField must be in the node to compute the gravity. #### Typical scene; old scene works and now you also can write:. ``` xml; <Node name=""root"" dt=""0.01"">; <DefaultAnimationLoop name=""animationLoop"" solveVelocityConstraintFirst=""true"" . <Node name=""Object1"">; <EulerImplicitSolver name=""ODE0"" rayleighMass=""0.1"" rayleighStiffness=""0.1"" />; <SparseLDLSolver template=""CompressedRowSparseMatrixMat3x3d"" name=""Linear0"" />; <TetrahedronSetTopologyContainer name=""To",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3149:1697,error,error,1697,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3149,1,['error'],['error']
Availability,"ontainers have been changed so we do constant operations only; - Debug visualization has been added. Results:; Tests have been performed on the caduceus scene where BruteForceDetection has been changed to DirectSAP, running 1000 iterations:. BEFORE:; 1000 iterations done in 19.7895 s ( 50.532 FPS). ; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.30	 1 	 15.30	 29.27	 17.51	 2.06	 17.51	 88.55	.....NarrowPhase; 6 	 1.37	 1 	 0.19	 0.59	 0.22	 0.03	 0.22	 1.11	......Direct SAP std::sort; 6 	 1.59	 1 	 14.98	 28.90	 17.21	 2.04	 17.21	 87.05	......Direct SAP intersection. AFTER:; 1000 iterations done in 7.53045 s ( 132.794 FPS).; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.25	 1 	 3.66	 9.56	 5.37	 0.88	 5.37	 71.52	.....NarrowPhase; 6 	 1.31	 1 	 0.05	 0.11	 0.05	 0 	 0.05	 0.72	......Direct SAP cache; 6 	 1.37	 1 	 0.21	 0.61	 0.23	 0.03	 0.23	 3.08	......Direct SAP sort; 6 	 1.60	 1 	 3.24	 9.10	 5.02	 0.86	 5.02	 66.80	......Direct SAP intersection. Gain of the narrow phase: x3.3 faster. Note: BruteForceDetection is still a lot faster:; 1000 iterations done in 2.62201 s ( 381.386 FPS). Debug view:; ![Capture d’écran du 2021-03-15 10-04-20](https://user-images.githubusercontent.com/10572752/111137537-32874a00-857f-11eb-9f39-0eaceb0fa0be.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1917:2173,failure,failures,2173,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1917,2,['failure'],['failures']
Availability,"ontext manager is provided to commit modifications back, should the sparsity pattern change, as shown in the example below. The binding is somewhat unconventional as it uses `ctypes` for simplicity. Perhaps a cleaner version could be made using regular bindings + passing Eigen matrix pointers through python capsules if someone is motivated. # Example; ```python; from SofaPython import sparse; import numpy as np. import Sofa; Sofa.loadPlugin('Flexible'). def createScene(node):; template = 'Affine'. dofs = node.createObject('MechanicalObject', template = template, size = 1); dofs.init(); ; mass = node.createObject('AffineMass', template = template); mass.init(); mass.bwdInit(). ref = np.identity(12); ; with sparse.data_view(mass, 'massMatrix') as m:; assert (m == ref).all(). m[10, 10] = 14; ref[10, 10] = 14. # assert our in-place modifications are reflected; with sparse.data_view(mass, 'massMatrix') as mm:; assert (mm == ref).all(). m[0, 10] = 14; ref[0, 10] = 14. # sparsity change: scipy matrix reallocates, no longer aliases ; with sparse.data_view(mass, 'massMatrix') as mm:; assert not (mm == ref).all(); ; # modification commit happens here. with sparse.data_view(mass, 'massMatrix') as m:; assert (m == ref).all(); ```. # Changelog. - Added `DataTypeInfo` for `EigenBaseSparseMatrix` derived classes; - Added a bunch of C functions in `SofaPython/ctypes.cpp` for aliasing logic; - Added a ctypes binding for aliasing + contexts in `SofaPython.sparse`; - Added an example in `SofaPython/examples/sparse.py`; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/411:2091,failure,failures,2091,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/411,2,['failure'],['failures']
Availability,"ood as it is misleading on the purpose of the function.; In the following example ; ```cpp; MyObject* ptr;; Base::className(ptr); ; ```; You don't see this is a templated method and you have no idea what 'ptr' is for, and you don't even know if putting a nullptr will work or not. ; Using the templated only syntax is more clear on the role of the function; ```cpp; Base::className<MyObject>(); ; ```; Or if you have an object instance; ```cpp; Base::className<declspec(obj)>(); ; ```. Most common code update pattern; ============================; The most common compilation problem you will encounter with non updated external plugin is related to the overriding of getTemplateName or templateName() method. This method is now now considered as final and thus it is not possible to override it anymore. ; To update old code like this: ; ```cpp; MyClass : public BaseObject; virtual std::string getTemplateName() const { return templateName(); } ; static std::string templateName(const CapsuleCollisionModel<DataTypes>* = nullptr); {; return DataTypes::Name();; }; ```; You can remove the code as the default name generation mecanisme can handle that for you automatically using the ""Name"" . . In the case if your DataTypes does not have a Name() function or if some of the class template parameters should not be exposed as runtime template then you need to implement your custom naming scheem by implementing the following function; ```cpp; static const std::string CustomTemplateName(); { ; return ""CustomName"";; }; ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1283:4498,failure,failures,4498,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1283,2,['failure'],['failures']
Availability,"otations=""true""` now **requires** to have a RotationFinder. PrecomputedConstraintCorrection has a hard dependency on TetrahedronFEMForceField, to get rotations.; (hence calling a a function of TetraFEM); It can also get rotations if it detects a component implemented RotationFinder<T>.; But TetrahedronFEMForceField is already implementing BaseRotationFinder taking a BaseMatrix*.; RotationFinder<T> inherits BaseRotationFinder, so I made TetrahedronFEMForceField implementing RotationFinder<T> instead. (which adds an other method to implement); Finally, PrecomputedConstraintCorrection only needs RotationFinder<T> now. IMO, ; - BaseRotationFinder implemented in TetrahedronFEM & HexahedronFEM only and used in WarpPreconditioner;; - RotationFinder<T> (implemented by nobody in the sofacode base but apparently by one external plugin @pedroperrusi) and used by PrecomputedConstraintCorrection, WarpPreconditioner and PrecomputedWarpPreconditioner;. would really need a refactoring or some re-working.; Those two were defined more or less in the same time, in 2006 (!) in the early days of SOFA. Some cleaning in PrecomputedConstraintCorrection as well; and this PR made me wonder the never-defined preprocessor definition NEW_METHOD_UNBUILT in PrecomputedConstraintCorrection (@ChristianDuriez ?). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2250:2030,failure,failures,2030,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2250,2,['failure'],['failures']
Availability,"parseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 46.8709 s ( 21.3352 FPS). <EigenSimplicialLDLT name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 95.1848 s ( 10.5059 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 146.778 s ( 6.813 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 68.7089 s ( 14.5542 FPS). . <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 100 iterations done in 35.9595 s ( 2.7809 FPS). <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 100 iterations done in 51.4465 s ( 1.94377 FPS).; ```. It indicates that `EigenSimplicialLDLT ` is faster than `SparseLDLSolver`. At least in this scene. It's not the case in `TorusFall.scn`. Two reasons to avoid the parallelization in the matrix-free CG:; 1. `GraphScatteredVector` is not default constructible; 2. Would not be thread-safe. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4255:2310,failure,failures,2310,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4255,2,['failure'],['failures']
Availability,"penglVisual'/> <!-- Needed to use components [OglModel, ]-->; 	; 	; 	<!-- The object to export -->; 	<Node name=""MyRegularGrid"">. 		<MechanicalObject name=""mo""/> ; 		<UniformMass vertexMass=""0.2"" />; 		<RegularGrid name=""hexaGrid"" nx=""6"" ny=""6"" nz=""4"" xmin=""-10.0"" xmax=""10.0"" ymin=""-10.0"" ymax=""10.0"" zmin=""0"" zmax=""0.50""/>; 		<HexahedronSetTopologyContainer name=""Topo"" src=""@hexaGrid"" />		; 		<HexahedralFEMForceField name=""FEM"" youngModulus=""1e13"" poissonRatio=""0.3"" method=""large"" />; 		; 		<!-- Visual node to allow the exportation -->; 		<Node name=""VisualNode"" >; 			<OglModel name=""Visual"" color=""green"" />; 			<IdentityMapping input=""@.."" output=""@Visual"" /> ; 		</Node>; 		; 		<OBJExporter name=""export_OBJ"" filename=""C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/regularGrid5x5"" exportAtBegin=""true"" exportEveryNumberOfSteps=""0"" />; 		; 	</Node>; 	. </Node>. ```. **Env vars**. ```bash; echo ""SOFA_ROOT = C:\Users\jducr\Documents\Librairies\sofa\build\bin\Release""; echo ""PYTHONPATH = C:\Users\jducr\Documents\Librairies\Python\Python37""; echo ""python3 -V = Python 3.7.7""; ```. ```txt; The scene is working fine, just the normals are exported wrong. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SofaViewer] QtViewer::keyPressEvent, CONTROL pressed; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpem",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2451:3409,echo,echo,3409,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2451,3,['echo'],['echo']
Availability,"plugins/cmake_install.cmake:37 (include); 1> cmake_install.cmake:88 (include); 1>; 1>; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: The command ""setlocal; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: ""C:\Program Files\CMake\bin\cmake.exe"" -DBUILD_TYPE=Release -P cmake_install.cmake; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmErrorLevel; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: exit /b %1; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmDone; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :VCEnd"" exited with code 1.; 1>Done building project ""INSTALL.vcxproj"" -- FAILED.; ========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========. ```. #1114; ______________________________________________________. Sugges",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:3115,error,error,3115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,2,['error'],"['error', 'errorlevel']"
Availability,"pological changes for compliance vector; - Container : add accessor to the topology type; - SubsetMapping : add resizeToModel flag in SubsetMapping to enable resizing of the destination MechanicalState to the size of indices; - BaseContext : add new method getActiveMeshTopology to get relevant topology, taking `BaseMaping::sameTopology()` into account; - PointSetTopology : add some unit tests. ### Improvements; - each time a topological change sequence is detected in BarycentricMapperTriangleSetTopology the mapping is initialized; - PointSetTopologyContainer maintains a list of point indices, accessible through the data points; - Topology : Factorize the last method specific to each topological elements in data containers. ### Cleans; - MechanicalObject size and link to topology is now exposed as Data and Link, using the new getActiveMeshTopology() method. Set the link manually and/or set useTopology=""false"" to override. ### Bugfixes; - apply data container updates before mapping updates; - use existing parameter handleTopologyChange in SubsetMapping; - slightly cleanup topology change handling method for triangle mappers; - check of upper topology based on the emptiness of the upper container; - crash in `MeshTopology::init()` for non manifold meshes; - re-enable Propagate of topological changes inbetween triangle creation and removal in `TriangleSetTopologyModifier::addRemoveTriangles(),` as it is required in cases involving chains of topology mapping and topology data containers depending on each other . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/217:1919,failure,failures,1919,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/217,1,['failure'],['failures']
Availability,"polygon cube intersection is a utility file only used with SparseGridTopology.; Even more confusing as it has a ""vec.h"" file with lots of macro defined inside. I did not put any stub files with the usual ""this file move there"" because I did not see the priority for it.; But I can do it if requested. Breaking flag to be ""consistent"" but I guess 99(.99)% of users wont even flinch at it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1772:932,failure,failures,932,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1772,2,['failure'],['failures']
Availability,"ponent.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Con",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:1953,ERROR,ERROR,1953,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"ponents [BackgroundSetting] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Visual""/> <!-- Needed to use components [VisualStyle] -->. <VisualStyle displayFlags=""showVisualModels"" />; <BackgroundSetting color=""0.8 0.8 0.8 1"" />. <FreeMotionAnimationLoop name=""FreeMotionAnimationLoop"" />; <GenericConstraintSolver maxIterations=""10"" tolerance=""1.0e-3""/>. <Node name=""Mesh"" >; <EulerImplicitSolver firstOrder=""false"" rayleighMass=""0.1"" rayleighStiffness=""0.1"" />; <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixd"" />. <MechanicalObject name=""mstate"" position=""0 0 0 0 0 0 1"" template=""Rigid3d"" />; <UniformMass totalMass=""1""/>. <Node name=""AttachPoint"">; <MechanicalObject name=""points"" template=""Vec3"" position=""0 0 0 1 0 0 0 1 0 0 0 1"" />; <ConstantForceField indices=""1"" forces=""0.0 0.0 1.0"" showArrowSize=""0.2""/>; <RigidMapping />; </Node>; <LinearSolverConstraintCorrection linearSolver=""@precond""/>; </Node>. <Node name=""Mesh2"" >; <MechanicalObject name=""mstate"" position=""0 0 0 0 0 0 1"" template=""Rigid3d"" />; </Node>. <BilateralInteractionConstraint template=""Rigid3d""; object1=""@Mesh/mstate""; object2=""@Mesh2/mstate""; first_point=""0"" second_point=""0"" />; </Node >; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4234:3627,failure,failures,3627,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4234,2,['failure'],['failures']
Availability,"ported:; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5074/testReport/junit/(root)/RigidRigidMappingTest_0/test_translation/; . Example: ; ```cpp; class MyTest : public Sofa_test<>; ; /// This test will fail if a warning/error message is send because the test inherit from sofa_test; void defaultTestBehavior(); {; ....; }. /// This test should generate failure if NO warning and NO Error message is emitted; void catchingTestBehavior(); {; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;. mycomponent.load(""atotallybrokenfile.txt""); }. /// By default test failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT(Error) ;; .... ; }; }; }; ```. This PR will generate a lot of new test failure... that are either real failure that deserve investigation or ; tests that was previously simply previously ignoring error & warning messages; . CHANGELOG for @hugtalbot & @guparan :; - TestMessageHandler.cpp implements a new & robust way to connect msg_* message to test failure ; - TestMessageHandler_test.cpp implements test for TestMessageHandler. ; - Sofa_test is updated to use the new TestMessageHandler where msg_error generates test failures ; - All the existing tests have been changed to us",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:1894,Error,Error,1894,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,1,['Error'],['Error']
Availability,"pp) the static typeinfos. So in short...it is abstract by default and static after a specific include. Bying abstract by default ...make that the dependencies is reduced a lot. . This PR:; - add DataTypeId<xxxx> so we can have an unique id per data type. This unique id is statically allocated and is used a way to access the DataTypeInfoRegistry in an efficiant way. ; - add a unique storage repository (DataTypeInfoRegistry). This storage is holding all the typeinfo use in Sofa. There is two way ; to be registered in the repository, the first one consist consist in explcitly adding a typeinfo instance in the storage. This is what to do when we want to be sure the fully defined data type is registered. ; - the other was implemented to mimick at best the the existing behavior in Sofa while fixing some of its error. It works the following way... when a Data<Type> is used this automatically trigs the setting of the typeinfo in the repository. If no DataTypeInfo<> is available this fallback to the default one but the data info cannot be used... if in a subsequent compilation unit (.cpp) the same Data<Type> is used with the complete type, the registring is done again...and if the type is more complete...then the old (partial) type is replaced with the new one. ; - the common data type info are now in their own file in sofa/defaulttype/typeinfo/TypeInfo_XXXX.h/cpp; - the templated code shared between multiple data type info are now in the sofa/defaulttype/typeinfo/models/XXXXX.h; - there is no more dependency to some specific contained data type (eg: RGBAcolor, Vec, Matrice, Set,) in AbstractDataTypeInfo or DataTypeInfo.; - there is a mechanism to get the list of registered typeinfo and wheter the are fully defined or only partially. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate ne",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1552:3261,avail,available,3261,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1552,1,['avail'],['available']
Availability,"quadsInHexahedronArray was not really used. ; QuadsOrientationInHexahedronArray is the good one. Quick way to fix #2003. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2995:665,failure,failures,665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2995,2,['failure'],['failures']
Availability,"quick PR from the pool regarding discussion #4561. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4576:595,failure,failures,595,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4576,2,['failure'],['failures']
Availability,"r, there was no explanation what attributes can be used for position and orientation. There was even no explanation which order Euler rotation is using. Finally, I figured out them by trial and error, not by documentation. What I want to know is as follow:; 1. What components does SOFA have?; For example, in the code below, there are components: `DefaultAnimationLoop`, `MeshGmshLoader`, `EulerImplicitSolver`, `CGLinearSolver`, `PointSetTopologyContainer`, `MechanicalObject`, `UniformMass`, and `ConstantForceField`.; 2. Which attributes are usable in each component?; For example, in the code below, the component `MechanicalObject` has three attributes: `template`, `name`, and `showObject`.; 3. What data should each attribute have?; For example, in the code below, the attribute `totalForce` of the component `ConstantForceField` has six floats: `""1 0 0 0 0 0""`. ```; <?xml version=""1.0"" ?>. <!-- Loader and topology -->; <Node name=""root"" dt=""0.01"" gravity=""0 0 0"">. <RequiredPlugin name=""Sofa.Component.Mass""/>; <RequiredPlugin name=""Sofa.Component.MechanicalLoad""/>; <RequiredPlugin name=""Sofa.Component.StateContainer""/>; <RequiredPlugin name=""Sofa.Component.LinearSolver.Iterative""/>; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/>; <RequiredPlugin name=""Sofa.Component.IO.Mesh""/>; <RequiredPlugin name=""Sofa.Component.Topology.Container.Dynamic""/>; ; <DefaultAnimationLoop computeBoundingBox=""false""/>. <MeshGmshLoader name=""meshLoaderCoarse"" filename=""mesh/liver.msh"" />. <Node name=""Liver"">. <EulerImplicitSolver />; <CGLinearSolver iterations=""200"" tolerance=""1e-09"" threshold=""1e-09""/>. <PointSetTopologyContainer name=""topo"" src=""@../meshLoaderCoarse"" />. <MechanicalObject template=""Rigid3d"" name=""MechanicalModel"" showObject=""1""/>. <UniformMass totalMass=""1"" />; <ConstantForceField totalForce=""1 0 0 0 0 0"" />. </Node>; </Node>. ```. Is there any documentation available for reference to find all information about components, attributes, and data in the simulation?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4647:2357,toler,tolerance,2357,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4647,2,"['avail', 'toler']","['available', 'tolerance']"
Availability,"r/MechanicalState.h>	; #include <sofa/core/ConstraintParams.h>; #include <sofa/core/CollisionModel.h>	; #include <sofa/core/ExecParams.h>	; #include <SofaMeshCollision/TriangleModel.h>	; #include <SofaBaseCollision/SphereModel.h>; ```. To cut into the dependency tree I introduce opaque function for the most commonly used in .h; The choosen convention was to use a namespace that is symetric to the class name. ; So the opaque version of ```sofa::core::BaseContext::getDt()``` is ```sofa::core::objectmodel::basecontext::getDt(BaseContext*);``` . For the moment, all the opaque function are added in the per namespace fwd.h.; The following ones has been introduced.; In sofa/simulation/fwd.h; ```cpp; Node* sofa::simulation::node::getNodeFrom(BaseContext*);; Node* sofa::simulation::node::getNodeFrom(Base*);; Base* sofa::simulation::node::toBase(Node*);; BaseContext* sofa::simulation::node::toBaseContext(Node*);; ```. In sofa/core/fwd.h; ```; sofa::core::objectmodel::basecontext::getDt(BaseContext*); ; sofa::core::objectmodel::basecontext::getTime(BaseContext*); ; ```. NB: it is possible if the use of these opaque function generalize to move the definition of these ones into more narrow file eg:; sofa/core/objectmodel/node-c-api.h. Finally, if you observe strange consequence please report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1764:2614,failure,failures,2614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1764,2,['failure'],['failures']
Availability,"rane.addObject('MeshTopology', src='@../membraneCoarse'); collisionMembrane.addObject('MechanicalObject', name='collMembrane'); collisionMembrane.addObject('TriangleCollisionModel'); collisionMembrane.addObject('LineCollisionModel'); collisionMembrane.addObject('PointCollisionModel'); #collisionMembrane.addObject('SubsetMapping'); collisionMembrane.addObject('IdentityMapping', name=""collMapping"", input='@collMembrane', output='@../mechMembrane'); ; # Visual model; visualMembrane=membrane.addChild(""VisualMembrane""); visualMembrane.addObject('MeshObjLoader', name='membraneFine', ; filename='FossaOvalisV1.obj', translation=[-10., -10., 0.]); visualMembrane.addObject('OglModel', name='visuMembrane', src='@../membraneCoarse', color='1 0 0'); visualMembrane.addObject('BarycentricMapping', name=""visuMapping"", input='@../mechMembrane', output='@visuMembrane'). # Needle; needle=rootNode.addChild(""needle""). needle.addObject(""EulerImplicitSolver""); needle.addObject(""CGLinearSolver"", iterations='2000', tolerance='1e-9', threshold='1e-9'). needle.addObject('MeshGmshLoader', name='needleCoarse', ; filename='NeedleV2.msh'); ; needle.addObject('TetrahedronSetTopologyContainer', ; name='needleTopo', src='@needleCoarse'); needle.addObject('TetrahedronSetTopologyModifier'); needle.addObject('TetrahedronSetGeometryAlgorithms',; name='needleAlgo'). needle.addObject('MechanicalObject', name='mechNeedle',template='Vec3d', showObject='1'); needle.addObject('StiffSpringForceField', name=""Springs"", stiffness=""1000"", damping=""10""); needle.addObject('TetrahedronFEMForceField', name='FEMNeedle', ; youngModulus='1000', poissonRatio='0.4'); needle.addObject('MeshMatrixMass', massDensity=""1"", name=""densityNeedle""). needle.addObject(""LinearSolverConstraintCorrection"", name='solvConstrNeed', template='Vec3d'). # Collider; collisionNeedle=needle.addChild(""CollisionNeedle""); collisionNeedle.addObject('MeshSTLLoader', name='needleFineSTL', ; filename='NeedleV2.stl'); collisionNeedle.addObject('MeshTopol",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3810:5209,toler,tolerance,5209,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3810,1,['toler'],['tolerance']
Availability,rapid fix. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/343:267,failure,failures,267,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/343,2,['failure'],['failures']
Availability,raries were hiding the system's ones. Example of CMake warnings from the out-of-tree plugins:. ```cmake; Cannot generate a safe runtime search path for target MyProject; because files in some directories may conflict with libraries in implicit; directories:. runtime library [libGLEW.so.2.1] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_filesystem.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_program_options.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_thread.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_date_time.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_chrono.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_system.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_atomic.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; ```. See https://github.com/sofa-framework/sofa/issues/1153 for more details. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1387:1998,failure,failures,1998,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1387,2,['failure'],['failures']
Availability,"rc/sofa/core/objectmodel/Link.h:302: warning: bitwise operation between different enumeration types ‘sofa::core::objectmodel::TLink<sofa::core::objectmodel::BaseObject, sofa::core::objectmodel::BaseObject, 7>::<unnamed enum>’ and ‘sofa::core::objectmodel::BaseLink::LinkFlagsEnum’ is deprecated [-Wdeprecated-enum-enum-conversion]; /linuxdata/sofa/src/current/Sofa/framework/Core/src/sofa/core/objectmodel/Link.h:302:37: warning: bitwise operation between different enumeration types ‘sofa::core::objectmodel::TLink<sofa::core::objectmodel::BaseObject, sofa::core::objectmodel::BaseObject, 7>::<unnamed enum>’ and ‘sofa::core::objectmodel::BaseLink::LinkFlagsEnum’ is deprecated [-Wdeprecated-enum-enum-conversion]; 302 | #define ACTIVEFLAG(f) ((ActiveFlags & (f)) != 0); | ~~~~~~~~~~~~~^~~~~~; /linuxdata/sofa/src/current/Sofa/framework/Core/src/sofa/core/objectmodel/Link.h:305:81: note: in expansion of macro ‘ACTIVEFLAG’; 305 | typedef LinkTraitsValueType<DestType, DestPtr, ACTIVEFLAG(FLAG_STRONGLINK), ACTIVEFLAG(FLAG_STOREPATH)> TraitsValueType;; | ^~~~~~~~~~; ```; (I dont know why it was only appearing only for the plugin compilation, maybe some warnings flags are added by an external cmake target); Anyway the macro to enable flags was quite dirty to me so I have changed it a little bit. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3714:2057,failure,failures,2057,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3714,2,['failure'],['failures']
Availability,"regression was Introduced in; - #4601 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4643:584,failure,failures,584,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4643,2,['failure'],['failures']
Availability,"related to https://github.com/SofaDefrost/SoftRobots/pull/283. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4763:607,failure,failures,607,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4763,2,['failure'],['failures']
Availability,"remove [ ] operator and some constructors. Warning as discussed, this will not be merged directly in master but in a PoC topology branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2082:682,failure,failures,682,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2082,2,['failure'],['failures']
Availability,remove all unnecessary warnings in CUDA files; The extern declaration o template was necessary for old gcc but it raise warnings with newer version.; I don't know the behavior on windows. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1548:444,failure,failures,444,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1548,2,['failure'],['failures']
Availability,"remove call to setValue using execParams which has been depreciate. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2033:612,failure,failures,612,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2033,2,['failure'],['failures']
Availability,remove deprecated macro:; - SOFA_TRANGLEFEM; - SOFA_TRANGLEFEM_MSG. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1233:324,failure,failures,324,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1233,2,['failure'],['failures']
Availability,"remove shadow varaible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5085:568,failure,failures,568,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5085,2,['failure'],['failures']
Availability,"remove shadow variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2091:568,failure,failures,568,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2091,2,['failure'],['failures']
Availability,"rename variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1874:561,failure,failures,561,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1874,4,['failure'],['failures']
Availability,"replace all beginEdit by WriteOnlyAccessor to avoid updateIfDirty while modifying the data. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2414:636,failure,failures,636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2414,2,['failure'],['failures']
Availability,"resize(Size s, bool) is error-prone because of a similar function in std::vector but with different behavior: resize(size_type count, const value_type& value). See https://en.cppreference.com/w/cpp/container/vector/resize. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3373:24,error,error-prone,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3373,3,"['error', 'failure']","['error-prone', 'failures']"
Availability,"revert PR #1268. And Fix #1277 (👍 @epernod ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1803:590,failure,failures,590,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1803,2,['failure'],['failures']
Availability,"roduces more optimized binaries.; Results are not always good, and really depends on the situation/scene. Few cases where cl is slightly faster than clang-cl; Some bench:; - `caduceus.scn -g batch -n 10000`; - cl: `21.2541 s ( 470.498 FPS)`; - clang-cl: `19.6914 s ( 507.836 FPS)`; - MeshMatrixMass.scn with 4096 steps (from SofaBenchmark); - cl: `25504 ms`; - clang-cl: `18161 ms`; - `examples/Benchmark/Performance/benchmark_cubes.scn -g batch -n 1000`; - cl: `36.7404 s ( 27.218 FPS`; - clang-cl: ` 37.8146 s ( 26.4448 FPS)`; - `examples/Benchmark/Performance/TorusFall.scn -g batch -n 1000`; - cl: `8.63699 s ( 115.781 FPS)`; - clang-cl: ` 7.72771 s ( 129.404 FPS)`; - `applications/plugins/SofaCUDA/examples/beam16x16x76-fem-implicit-CPU.scn -g batch -n 1000`; - cl: ` 113.022 s ( 8.8478 FPS))`; - clang-cl: ` 100.645 s ( 9.93587 FPS)`; - SofaBenchmark, a lot shows only improvement around 10-15% but some are interesting:; - `BM_FixedArray_construct<sofa::type::Vec3f>/8192`; - cl: ` 10.5 us`; - clang-cl: ` 6.42 us`; - `BM_Matrix_typemat3x3f_assign/512` this one is weird (the same bench with eigenmat is much closer); - cl: ` 3.44 us`; - clang-cl: ` 1.18 us`. ## Warning; pybind is not compatible with clang-cl (and I am sure a lot of other libraries), even gtest as it is was not compatible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2563:2465,failure,failures,2465,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2563,2,['failure'],['failures']
Availability,rojectToPointConstraint; - QuadPressureForceField ; - SurfacePressureForceField; - TaitSurfacePressureForceField ; - TrianglePressureForceField; - ParabolicConstraint; - ConstantForceField ; - LinearForceField; - EdgePressureForceField ; - OscillatingTorsionPressureForceField; - HermiteSplineConstraint ; - LinearVelocityConstraint; - [SofaConstraint] ; - DOFBlockerLMConstraint ; - FixedLMConstraint; - UncoupledConstraintCorrection; - [SofaMiscFem] ; - TriangleFEMForceField; - TriangularAnisotropicFENForceField; - TriangularFEMForceField; - [SofaMiscFem]; - FastTetrahedralCorotationalForceField; - StandardTetrahedralFEMForceField; - TetrahedralTensorMassForceField; - TetrahedronHyperelasticityFEMForceField; - [SofaMiscForceField] ; - MeshMatrixMass; - [SofaExporter] ; - WriteTopology; - [SofaMiscTopology] ; - TopologyChangeProcessor; - [SofaGeneralEngine] ; - SmoothMeshEngine; - [SofaDeformable] ; - MeshSpringForceField. Component previously upgraded in #1183 : ; - DiagonalMass; - [SofaGeneralSimpleFEM]; - BeamFEMForceField; - TetrahedralCorotationalFEMForceField; - TriangularFEMForceFieldOptim; - [SofaSimpleFEM]; - HexahedronFEMForceField; - TetrahedronFEMForceField; - TetrahedronDiffusionFEMForceField; - NonUniformHexahedronFEMForceField; - [SofaGeneralDeformable] ; - QuadBendingSpring; - QuadularBendingSprings; - VectorSpringFF; - FastTriangularBendingSpring; - TriangleBendingSpring; - TriangularBendingSpring; - TriangularBiquadraticSpringFF; - TriangularQuadraticSpringFF; - TriangularTensorMassFF; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1199:2156,failure,failures,2156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1199,2,['failure'],['failures']
Availability,"rror happen:; ```cmake; CMake Error at /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiTargets.cmake:91 (message):; The imported target ""runSofa"" references the file. ""/Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/bin/runSofa-22.06.00"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""/Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiTargets.cmake"". but not all the files it references. Call Stack (most recent call first):; /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiConfig.cmake:55 (include); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/Bindings.SofaGuiConfig.cmake:36 (find_package); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/SofaPython3Config.cmake:86 (include); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/BindingsConfig.cmake:34 (find_package); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/SofaPython3Config.cmake:86 (include); CMakeLists.txt:5 (find_package); ```. **Steps to reproduce**; 1. Unzip the latest SOFA release for MacOS inside `$SOFA_ROOT`; 2. Create an empty c++ project with the following CMakeLists.txt:; ```cmake; cmake_minimum_required(VERSION 3.20); project(test). find_package(SofaFramework); find_package(SofaPython3). ```; 3. Call cmake using `cmake -DCMAKE_PREFIX_PATH=$SOFA_ROOT .`. **Expected behavior**; No cmake error. ---------------------------------------------. ### Environment. **Context**. - System: MacOS; - Version of SOFA: release 22.06.00. [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/10013148/CMakeCache.txt)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3485:1367,Down,Downloads,1367,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3485,3,"['Down', 'error']","['Downloads', 'error']"
Availability,"rt (; ModuleNotFoundError: No module named 'numpy.core._multiarray_umath'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\SOFA\Lib\site-packages\numpy\__init__.py"", line 144, in <module>; from numpy.__config__ import show as show_config; File ""C:\SOFA\Lib\site-packages\numpy\__config__.py"", line 4, in <module>; from numpy.core._multiarray_umath import (; File ""C:\SOFA\Lib\site-packages\numpy\core\__init__.py"", line 50, in <module>; raise ImportError(msg); ImportError:. IMPORTANT: PLEASE READ THIS FOR ADVICE ON HOW TO SOLVE THIS ISSUE!. Importing the numpy C-extensions failed. This error can happen for; many reasons, often due to issues with your setup or how NumPy was; installed. We have compiled some common reasons and troubleshooting tips at:. https://numpy.org/devdocs/user/troubleshooting-importerror.html. Please note and check the following:. * The Python version is: Python3.10 from ""C:\Users\JetsLab\.pyenv\pyenv-win\versions\3.10.11\python3.exe""; * The NumPy version is: ""1.26.4"". and make sure that they are the versions you expect.; Please carefully study the documentation linked above for further help. Original error was: No module named 'numpy.core._multiarray_umath'. The above exception was the direct cause of the following exception:. Traceback (most recent call last):; File ""C:\sofa_env\sofa_env\scenes\controllable_object_example\controllable_env.py"", line 1, in <module>; import gymnasium.spaces as spaces; File ""C:\SOFA\Lib\site-packages\gymnasium\__init__.py"", line 5, in <module>; from gymnasium.core import (; File ""C:\SOFA\Lib\site-packages\gymnasium\core.py"", line 8, in <module>; import numpy as np; File ""C:\SOFA\Lib\site-packages\numpy\__init__.py"", line 149, in <module>; raise ImportError(msg) from e; ImportError: Error importing numpy: you should not try to import numpy from; its source directory; please exit the numpy source tree, and relaunch; your python interpreter from there. ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5088:5541,error,error,5541,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5088,2,"['Error', 'error']","['Error', 'error']"
Availability,"runSofa is now using a two column view to separate type and name in the graph view. ; by default the size is to short to visualize the types. ; In this PR i increase it. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2416:716,failure,failures,716,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2416,2,['failure'],['failures']
Availability,"runSofa's QtViewer and the new SofaQtQuick interface create a ""Core Profile"" OpenGL context on Linux, with Intel GPUs, with the following error messages:. > QtViewer: OpenGL 4.5 (Core Profile) Mesa 17.0.2 context created.; > Error: GL_ARB_multitexture not supported; > ########## SIG 11 - SIGSEGV: segfault ##########. A core profile context isn't likely to support the ARB_multitexture extension because that extension is specific to the fixed-function pipeline. (For more information: [Check this thread on OpenGL's forum](https://www.opengl.org/discussion_boards/showthread.php/199472-GL_ARB_multitexture-not-supported?p=1286582). Bug reproduced on 3 laptops with intel graphics, with Intel's drivers installed, on Ubuntu 16.04 and Arch linux.; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/238:138,error,error,138,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/238,2,"['Error', 'error']","['Error', 'error']"
Availability,runSofa.exe system error :; - python27.dll is missing,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/879:19,error,error,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/879,1,['error'],['error']
Availability,"s afterwards. It is a reopening of #429 (sort of).; I started from https://github.com/SofaDefrost/sofa/commits/deprecating_components beheaded until 456d88343e210ce89d9f7436c290be92fe438313 and merged it with master.; ________________________________________________________________. It does:; - split the CMakeFile.txt in three sets to allow component deprecation/stabilization.; - implement a light C++ api in sofa::simpleapi::* to create component with a pythonic look & feel; - use the simpleapi to change the code of SceneCreator to cut the dependencies and to simplify the plugizniation of modules. ; - in SceneCreator, create SceneUtil.h where some function from SceneCreator are now. ; - remove the module/sofa/component/typedef/* (which seems to cause no real problem); - mute the SOFA_DECL_CLASS/SOFA_LINK_CLASS so maybe...as everything works in the CI we ca n probably remove those lines and stop using them in .cpp ; - remove c++ tutorials from CMakeList before real removal they are slow to compile, and induce big dependencies so it will slow down the deprecation. ; - add an InfoComponent in the loaded scene to indicate when an object failed to be created. . To avoid post-cleaning workload I merged:; - PR#422 Fix for SofaImplicitField and SofaVolumetricData plugin; - PR#407 [SofaSphFluid & SofaMiscCollision] Pluginizing the two modules; For the same reasons we may also merge #414 #424 and #425. Notes: ; - the SceneCreator refactoring is not fully working and generates few test failures but this can be fix easily. ; - removing the typedef & SOFA_DECl/SOFA_LINK seems to ok. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-m",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/453:1198,down,down,1198,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/453,1,['down'],['down']
Availability,"s. ### [[All] CLEAN extlibs integration and install](https://github.com/sofa-framework/sofa/commit/40669c610100a67f46b1405a972b39fe13291eba); - extlib headers are now installed in include/extlibs; - Windows dependency pack headers are now installed in include/WinDepPack; - SOFA now always tries to `find_package` an extlib before using the embedded one; - header-only extlibs too are now easier to override (see extlibs/CMakelists.txt); - **One question remains**: is extlibs/SuiteSparse needed?. ### [[CMake] Install includes in package subdirs](https://github.com/sofa-framework/sofa/commit/68bef4fec16a410007163c5720a5b2ce003ac478); Install module headers in a subdirectory named after their package (SofaGeneral, SofaMisc, SofaFramework, ...). This permits to have clean include directories and thus prevents `find_package` from giving access to unwanted foreign headers.; e.g. doing `find_package(SofaFramework)` will NOT be sufficient to `#include <SofaSomething/anything.h>` (you will get a file not found error).; I think it is way easier to understand that a `find_package` is missing when `#include` fails with ""file not found"" error (at write time if you have a good IDE, at build time otherwise) than with link error (at build time).; Moreover, it will be easier to understand what package is needed for a module by navigating in the include directory.; More details in commit message. ### [[CMake] Make plugins relocatable](https://github.com/sofa-framework/sofa/commit/5b0585f9ad2884cb5462884dffd711ae4d6f2266); **THIS FEATURE IS OPTIONAL**. See the RELOCATABLE parameter of sofa_generate_package.; When building and installing SOFA with plugins - internal (in applications/plugins) or external (included with SOFA_EXTERNAL_DIRECTORIES) - the plugins will not be mixed with SOFA anymore.; Instead, they will be installed in their own directory under `<install_prefix>/plugins`.; More importantly, they will be relocatable which means they will behave like if they were built out-of-SOF",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:1460,error,error,1460,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,1,['error'],['error']
Availability,"s\numpy\core\__init__.py"", line 24, in <module>; from . import multiarray; File ""C:\SOFA\Lib\site-packages\numpy\core\multiarray.py"", line 10, in <module>; from . import overrides; File ""C:\SOFA\Lib\site-packages\numpy\core\overrides.py"", line 8, in <module>; from numpy.core._multiarray_umath import (; ModuleNotFoundError: No module named 'numpy.core._multiarray_umath'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\SOFA\Lib\site-packages\numpy\__init__.py"", line 144, in <module>; from numpy.__config__ import show as show_config; File ""C:\SOFA\Lib\site-packages\numpy\__config__.py"", line 4, in <module>; from numpy.core._multiarray_umath import (; File ""C:\SOFA\Lib\site-packages\numpy\core\__init__.py"", line 50, in <module>; raise ImportError(msg); ImportError:. IMPORTANT: PLEASE READ THIS FOR ADVICE ON HOW TO SOLVE THIS ISSUE!. Importing the numpy C-extensions failed. This error can happen for; many reasons, often due to issues with your setup or how NumPy was; installed. We have compiled some common reasons and troubleshooting tips at:. https://numpy.org/devdocs/user/troubleshooting-importerror.html. Please note and check the following:. * The Python version is: Python3.10 from ""C:\Users\JetsLab\.pyenv\pyenv-win\versions\3.10.11\python3.exe""; * The NumPy version is: ""1.26.4"". and make sure that they are the versions you expect.; Please carefully study the documentation linked above for further help. Original error was: No module named 'numpy.core._multiarray_umath'. The above exception was the direct cause of the following exception:. Traceback (most recent call last):; File ""C:\sofa_env\sofa_env\scenes\controllable_object_example\controllable_env.py"", line 1, in <module>; import gymnasium.spaces as spaces; File ""C:\SOFA\Lib\site-packages\gymnasium\__init__.py"", line 5, in <module>; from gymnasium.core import (; File ""C:\SOFA\Lib\site-packages\gymnasium\core.py"", line 8, in <module>; import numpy as",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5088:1219,error,error,1219,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5088,2,['error'],['error']
Availability,"sceneTransform() in VisualParams has been deleted for v21.12 (and while deprecated was doing nothing anyway). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2539:654,failure,failures,654,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2539,2,['failure'],['failures']
Availability,serialisation work on color datatype. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/472:294,failure,failures,294,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/472,2,['failure'],['failures']
Availability,"setMechanical() and isMechanical() use the boolean states of forces, masses and constraints.; But the ""meta-alias""(?) `isMechanical` only link forces and masses. So it would make sense to add constraints 🤔. Avoid cases like https://github.com/fredroy/BeamAdapter/commit/58b3db1eb11dab501eec7d6a50b6cce3fcaf9a51. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4360:856,failure,failures,856,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4360,2,['failure'],['failures']
Availability,"setParent is called on Datas when parsing BaseObjectDescriptions on BaseObjects.; The default behavior is incompatible with the Data-based API we want to substitute to the current Link system between components. I thus want to be able to override the default setParent() behavior in my ObjectLink POC (see [here](https://github.com/SofaDefrost/ComponentData_POC/pull/1) for draft implementation). Please, don't hesitate to comment on the PR on the POC repository's pull request mentioned above. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1224:751,failure,failures,751,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1224,2,['failure'],['failures']
Availability,"since PR #1268 ; setting the data bbox manually in root node is not working anymore:. For example: in SPHParticleSing.scn; ```<Node dt=""0.01"" gravity=""0 -10 0"" bbox=""-4 -4 -4 4 4 4"">```. style gives the error:; ```[WARNING] [RealGUI] Global Bounding Box seems very small; Your viewer settings (based on the bbox) are likely invalid, switching to default value of [-1,-1,-1,1,1,1].This is caused by using component which does not implement properly the updateBBox function.You can remove this warning by manually forcing a value in the parameter bbox=""minX minY minZ maxX maxY maxZ"" in your root node```. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1277:203,error,error,203,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1277,1,['error'],['error']
Availability,"sity? Its reference is commented in the CMakeLists. I did not touch it. - SofaKernel/modules/SofaCore/src/sofa/core/behavior/InertiaForce.h -> removed because not used and not referenced in CMakeLists. - SofaKernel/modules/SofaCore/src/sofa/core/collision/ParallelPipeline.h and .cpp -> removed because empty class, not used and not referenced in CMakeLists. - DevBaseMonitor: appears to be used but not referenced in CMakeLists -> added. - SofaKernel/modules/SofaHelper/src/sofa/helper/io/MassSpringLoader.h -> removed; - SofaKernel/modules/SofaHelper/src/sofa/helper/io/bvh -> removed. - SofaKernel/modules/SofaHelper/src/sofa/helper/logging/LoggerMessageHandler.h and .cpp -> removed because not used and not referenced in CMakeLists. - SofaKernel/modules/SofaHelper/src/sofa/helper/FnDispatcher.cpp -> removed because empty, and not referenced in CMakeLists. - SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/ChangeListener.h and .cpp -> removed because not used, and not referenced in CMakeLists. - SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/MechanicalMatrixVisitor.h -> removed because empty, and not referenced in CMakeLists. - SofaKernel/modules/Sofa.Type/src/sofa/type/Color.cpp -> removed because not referenced in CMakeLists. The code in this file is not required. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2333:2357,failure,failures,2357,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2333,2,['failure'],['failures']
Availability,"size() != indices.size()` in the RestShapeSpringsForceField and tried to improve the overall error management on this component. I ended up doing the following changes:. - Call reinit() in bwdInit; - Using componentState to set the state to invalid when necessary (no stiffness set, out of bounds indices etc & check for component state in addForce / addDForce / addKToMatrix ..); - Improvement of warning messages (IMHO); - refactor code duplication; - remove warnings by changing int -> size_t for BaseMatrix::Index (got carried away here, sorry about that). **### BREAKING because:**. - Change in behavior in specific cases:. 1. empty stiffness vector: **Before:** setting arbitrary stiffness at 100.0 for all indices ; **Now:** msg_error & invalid state. ; 2. stiffness.size() != indices.size(): **Before:** applying stiffness[0] to all indices ; **Now:** ; ```py; if len(stiffness) > len(indices): ; crop(stiffness); else if len(stiffness) == 1:; stiffness.resize(len(indices), stiffness[0]); else if len(stiffness < len(indices):; ```; Generalized to angularStiffness on Rigids. - size_t in methods signature break API compatibility. I wouldn't call this component ""clean"" after those changes though, but it's a start. As stuff still to do to improve, I see:. - Using DataTrackers to call reinit() when necessary; - get rid of bwdInit by using componentState + datatrackers to reinit component; - remove those ugly getContext to retrieve the external mstate used for rest shape, by replacing them with a data or a link. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1103:1909,failure,failures,1909,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1103,2,['failure'],['failures']
Availability,"small PR to remove function handleTopologyChange() from BaseMaterial component, where it is implemented but empty.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/817:372,failure,failures,372,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/817,2,['failure'],['failures']
Availability,"so they can be used by Tracy profiler as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4203:591,failure,failures,591,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4203,2,['failure'],['failures']
Availability,sofa.helper compiler error(SOFA 22.12),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4329:21,error,error,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4329,1,['error'],['error']
Availability,"sofa::core can be confused with sofa::simulation::core, so I added sofa:: in front of core namespace. This confusion arose when compiling using a jumbo build. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1959:703,failure,failures,703,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1959,2,['failure'],['failures']
Availability,"sofa::helper::afficheResult definition no longer exists, resulting in unresolved external link error with msvc during debug compilation. I stumbled upon an unresolved external which apparently was introduced by a42dcec ; I guess the initial intent was to replace this method by a new method called `resultToString`, but its declaration did not make it through the header file. I suspect the unresolved external should have been caught by other compilers, but am I the only one; to compile in debug mode sometimes ?; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/473:95,error,error,95,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/473,3,"['error', 'failure']","['error', 'failures']"
Availability,sofa\applications\plugins\SofaHAPI\CMakeList.txt; Line 81: endif(); Error: ; endif An ENDIF command was found outside of a proper IF ENDIF structure.; Or its arguments did not match the opening IF command. I believe we should remore this line. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1074:68,Error,Error,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1074,3,"['Error', 'failure']","['Error', 'failures']"
Availability,"sofa_add_plugin required the ""name"" argument to be the same as the target; We can now handle non-target names, aliases and custom OUTPUT_NAME. Related to this forum topic: https://www.sofa-framework.org/community/forum/topic/problem-compiling-sofa-with-python3-2/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1584:809,failure,failures,809,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1584,2,['failure'],['failures']
Availability,"sofa_env/sofa_templates/scene_header.py. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""Sof",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:1512,ERROR,ERROR,1512,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,1,['ERROR'],['ERROR']
Availability,"sofa_env\scenes\controllable_object_example\controllable_env.py"", line 1, in <module>; import gymnasium.spaces as spaces; File ""C:\SOFA\Lib\site-packages\gymnasium\__init__.py"", line 5, in <module>; from gymnasium.core import (; File ""C:\SOFA\Lib\site-packages\gymnasium\core.py"", line 8, in <module>; import numpy as np; File ""C:\SOFA\Lib\site-packages\numpy\__init__.py"", line 149, in <module>; raise ImportError(msg) from e; ImportError: Error importing numpy: you should not try to import numpy from; its source directory; please exit the numpy source tree, and relaunch; your python interpreter from there. I already checked the suggested troubleshooting, but I couldn't fix the error.; Can you help me?; Thank you!. **Steps to reproduce**; `py -3.11 -m venv C:/SOFA`; `SOFA\Scripts\Activate`; `git clone https://github.com/ScheiklP/sofa_env.git `; `cd sofa_env`; `pip install -e .`; `python3 sofa_env/scenes/controllable_object_example/controllable_env.py`. **Expected behavior**; I would have expected that no errors would appear. ---------------------------------------------. ### Environment. **Context**. - System: OS Name	Microsoft Windows 11 Home; - Version of SOFA: I compiled SOFA with Cmake to be able to use with Geomagic Touch; - State: Install directory: C:\sofa. **Command called**. ```txt. python3 sofa_env/scenes/controllable_object_example/controllable_env.py. ```. **Env vars**. ```txt. import sys; print(sys.path); ['', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\idlelib', 'C:\\SOFA\\Lib\\site-packages', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\\Python\\Python311\\python311.zip', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\\Python\\Python311\\Lib', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\\Python\\Python311\\DLLs', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\\Python\\Python311', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages']. ```. ---------------------------------------------. ### Logs.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5088:2966,error,errors,2966,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5088,1,['error'],['errors']
Availability,"some day a warning-free SOFA!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3227:575,failure,failures,575,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3227,2,['failure'],['failures']
Availability,"sout/serr (and sendl) were wrappers for std::cout & std::cerr to get access to the streams for the GUIs initially. After the introduction of the Messaging system, it was deemed deprecated (there is even a compat layer, redirecting sout/serr to msg_info(), msg_warning(), etc), but never enforced and never publicized actually. This PR officially deprecates it by still being able to use it but will warn at compilation time if anybody uses the stream operators with serr/sendl. (you can see that on the CI log for the soon-to-be-dropped plugin like Flexible or Compliant). This PR also (should) remove all those serr/sout/sendl in SOFA itself and the supported plugins. EDIT: Adding ""breaking"" label because serr was throwing ""WARNING"" before (yeah makes sense), so it cannot be replaced 1-on-1 with msg_error( could be msg_warning as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2292:1386,failure,failures,1386,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2292,2,['failure'],['failures']
Availability,speaks for itself. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1511:275,failure,failures,275,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1511,2,['failure'],['failures']
Availability,"ss has three ambiguous constructors:. ```c++; vector(Size n, const T& value): std::vector<T,Alloc>(n,value) {}; vector(int n, const T& value): std::vector<T,Alloc>(n,value) {}; vector(long n, const T& value): std::vector<T,Alloc>(n,value) {}; ```; effectively making the constructor taking a `sofa::Size` useless: using it will result in an ambiguous call since it can be implicitly converted to both `int` and `long`. This PR remove two of them and keep only the `vector(Size n, const T& value)` one. Steps to reproduce; 1. **main.cpp**; ```c++; #include <sofa/type/vector.h>; #include <iostream>. int main() {; using namespace sofa::type;; vector<double> d_v (sofa::Size(5), 0);; std::cout << d_v << std::endl;; return 0;; }; ```; 2. **Compile**; ```sh; $ gcc -isystem $SOFA_ROOT/include/Sofa.Type -isystem $SOFA_ROOT/include/Sofa.Config -o main.o -c main.cpp; ```; ```sh; main.cpp: In function ‘int main()’:; main.cpp:6:41: error: call of overloaded ‘vector(sofa::Size, int)’ is ambiguous; 6 | vector<double> d_v (sofa::Size(5), 0);; | ^; In file included from /sofa/include/Sofa.Type/sofa/type/vector.h:24,; from main.cpp:1:; /sofa/include/Sofa.Type/sofa/type/vector_T.h:78:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(long int, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>]’; 78 | vector(long n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; /sofa/include/Sofa.Type/sofa/type/vector_T.h:76:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(int, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>]’; 76 | vector(int n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; /sofa/include/Sofa.Type/sofa/type/vector_T.h:74:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(sofa::type::vector<T, MemoryManager>::Size, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>; sofa::type::vector<T, MemoryManager>::Size = long unsigned",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2270:958,error,error,958,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2270,1,['error'],['error']
Availability,"st; void defaultTestBehavior(); {; ....; }. /// This test should generate failure if NO warning and NO Error message is emitted; void catchingTestBehavior(); {; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;. mycomponent.load(""atotallybrokenfile.txt""); }. /// By default test failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT(Error) ;; .... ; }; }; }; ```. This PR will generate a lot of new test failure... that are either real failure that deserve investigation or ; tests that was previously simply previously ignoring error & warning messages; . CHANGELOG for @hugtalbot & @guparan :; - TestMessageHandler.cpp implements a new & robust way to connect msg_* message to test failure ; - TestMessageHandler_test.cpp implements test for TestMessageHandler. ; - Sofa_test is updated to use the new TestMessageHandler where msg_error generates test failures ; - All the existing tests have been changed to use the new API & removed the old one. ; - MeshSTL.cpp replace a std:cerr by a msg_error so that FIX the corresponding failing test.; - Message.cpp adds a way to convert message type to string.; - updates externs/gtest to a fresh checkout. ; __________________________________________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:2210,Error,Error,2210,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,1,['Error'],['Error']
Availability,"steps, which makes the code more consistent. Note also the introduction of `ComputeIsolatedForceVisitor` (see the comments in the code to understand its purpose). # Multithreading. Since `AnimateVisitor` is no longer used, `SolveVisitor` is used instead, providing optional multithreading, i.e. solving each ODE in parallel. Similar to what was done in the `FreeMotionAnimationLoop`. ## Benchmark. Measured on `examples/Component/SolidMechanics/FEM/TetrahedronFEMForceField.scn`. Without parallelism; ```; [INFO] [BatchGUI] 1000 iterations done in 14.7031 s ( 68.0128 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 2 0.03 1 10.57 27.32 11.94 2.11 11.94 82.14 ..solve; ```. With parallelism; ```; [INFO] [BatchGUI] 1000 iterations done in 7.13825 s ( 140.09 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 2 0.03 1 3.53 6.85 4.45 0.81 4.45 63.60 ..solve; ```. The simulation is 2x faster. But there are 4 different objects, so we expected a speed-up of 4x. However, the speed-up is only about the `solve` function. Another time consuming function is the `end event` when computing the von Misses stresses. Still, the solve function only shows a speedup of 2.68x, instead of 4x. I cannot explain it for now... [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/362]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3959:3515,failure,failures,3515,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959,2,['failure'],['failures']
Availability,"struction of triplets, needed to construct an Eigen matrix, is avoided using a custom proxy on the `CompressedRowSparseMatrix` uncompressed data. Here are the new timings (to compare to #2362):. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 63 99.14 66.64 2.64 66643 100 TOTAL; ...; 4 0.87 1 27.68 58.27 30.91 2.28 30.91 46.38 ....MBKBuild; 5 1.08 1 26.76 57.31 29.90 2.23 29.90 44.86 .....MMM-addKToMatrix; 6 1.08 1 1.73 2.94 1.98 0.18 1.98 2.98 ......jacobian; 6 3.07 1 6.94 35.47 8.01 1.25 8.01 12.02 ......stiffness; 6 11.08 1 2.68 17.13 3.43 0.81 3.43 5.15 ......copyKToEigen; 7 11.08 1 2.67 17.12 3.42 0.81 3.42 5.14 .......KfromTriplets; 6 14.51 1 0.25 0.92 0.30 0.06 0.30 0.45 ......copyJ1J2ToEigen; 7 14.74 1 0.06 0.29 0.07 0.02 0.07 0.10 .......copyJ2ToEigen; 6 14.81 1 9.50 25.79 11.23 1.54 11.23 16.85 ......Multiplication; 7 14.81 1 4.88 18.44 5.80 0.96 5.80 8.71 .......J1tKJ1; 7 20.62 1 0.76 4.52 0.99 0.23 0.99 1.49 .......J2tKJ2; 7 21.62 1 2.71 16.34 3.46 0.92 3.46 5.19 .......J1tKJ2; 7 25.07 1 0.77 12.89 0.97 0.41 0.97 1.46 .......J2tKJ1; 6 26.05 1 2.71 7.73 3.04 0.24 3.04 4.56 ......J1tKJ1-copy; 6 29.09 1 0 0.02 0 0 0 0 ......J2tKJ2-copy; 6 29.09 1 0.01 0.06 0.02 0 0.02 0.02 ......J1tKJ2-copy; 6 29.11 1 0.01 0.08 0.03 0.01 0.03 0.04 ......J2tKJ1-copy. ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2367:2031,failure,failures,2031,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2367,2,['failure'],['failures']
Availability,system/FileMonitor_linux.cpp.o; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileRepository.cpp:34:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:733: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o] Error 1; make[2]: *** Waiting for unfinished jobs....; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/PluginManager.cpp:30:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileMonitor_linux.cpp:48:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:1013: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o] Error 1; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:649: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o] Error 1; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileSystem.cpp:26:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:607: recipe for target 'Sofa/framework/Help,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4527:3967,error,error,3967,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527,1,['error'],['error']
Availability,"t otherwise Controllers now act as any other python object. The old behavior still works, should you need it. ```python; ; import Sofa ; class Script(Sofa.PythonScriptController):. def __init__(self, node, *args, **kwargs):; self.bacon = kwargs.pop('egg', 'spam'). def onBeginAnimationStep(self, dt):; print(self.bacon). ; def createScene(node):; script = Script(node, egg = 'spam'); . ```. Creating instances directly no longer calls `onLoaded` nor `createGraph`:. - nothing is actually loaded; - code in `createGraph` really belongs to `__init__` anyways. This behavior can be changed of course, maybe a warning can/should be emitted if the instance creation detects a derived implementation. Comments welcome :). The PR also removes heavy copypasta in some files, removes unneeded `extern ""C""` linkage and a few other cosmetic changes. # Changelog. - `PythonScriptController` and derived classes are now instantiable directly in python. The constructor requires a `Node` as first parameter.; - `onLoaded` and `createGraph` entry points are no longer called when classes are instantiated directly from python. Corresponding code belongs to the derived class constructor.; - creating instances ""the old way"" through `node.createGraph` has unchanged behavior; - the workaround module `SofaPython.script` now features a deprecation message, together with a derived class easing transition (calls `createGraph` on construction, warns if `onLoaded` is defined); - updated `ControllerVariable.py` example ; - some minor cleanups; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/283:3649,failure,failures,3649,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/283,2,['failure'],['failures']
Availability,"t: updated `cmake-log.txt`. Last one was the wrong configuration by accident. I tried remaking the config, though it might not be 100% accurate. I used cmake-gui for the options, so here's the [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/4777146/CMakeCache.txt).; Here's the configuration process log of the `cmake [options] ..` command: [cmake-log.txt](https://github.com/sofa-framework/sofa/files/4777183/cmake-log.txt). Output is very long so I've attached it in this text file [log.txt](https://github.com/sofa-framework/sofa/files/4777142/log.txt). Probably the most notably part is on log.txt:385, which I'll post here. Note: I spaced it to make it visually easier to read. The original is all on a single line of course.; ```; /home/emdash00/Apps/git-apps/sofa/src/applications/plugins/SofaOpenCL/OpenCLIdentityMapping.cpp:71:16: error: duplicate explicit instantiation of; ‘class sofa::component::mapping::IdentityMapping<sofa::gpu::opencl::OpenCLVectorTypes<sofa::defaulttype::Vec<3, float>, ; 													 	 sofa::defaulttype::Vec<3, float>, float>,; 									 				 sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, ; 													 	 sofa::defaulttype::Vec<3, float>, float> >’ [-fpermissive]; ```. I'm unsure of where the original instantiation is. I'm just trying to use the library since Ubuntu 19.10 doesn't have prebuilt packages yet. I don't think this is part of the issue; however, I'm using OpenCL for an Intel GPU. I wasn't sure how computationally intensive this library would be, but I thought might as well try to utilize my Intel HD Graphics Unit. . Here's an attachment of all relevant system specs using linux commands: [sysinfo.txt](https://github.com/sofa-framework/sofa/files/4777150/sysinfo.txt); In case of any discrepancy, here's a link to my CPU's spec page as listed by Intel: [Intel® Core™ i7-8550U Processor](https://ark.intel.com/content/www/us/en/ark/products/122589/intel-core-i7-8550u-processor-8m-cache-up-to-4-00-ghz.html)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1419:1141,error,error,1141,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1419,1,['error'],['error']
Availability,"tSolver]; root.addObject(""RequiredPlugin"", name=""Sofa.Component.StateContainer"") # <- [MechanicalObject]; root.addObject(""RequiredPlugin"", name=""Sofa.GL.Component.Shader"") # <- [LightManager]; root.addObject(""RequiredPlugin"", name=""Sofa.Component.Visual"") # <- [InteractiveCamera]. neutral_pose = [0, 0, 0, 0, 0, 0, 1]; instrument_node = root.addChild(""instrument""). instrument_node.addObject(""EulerImplicitSolver""); instrument_node.addObject(""CGLinearSolver""). angle_mo = instrument_node.addObject(""MechanicalObject"", template=""Vec1d"", position=[-0.4, 0.4]). body_node = instrument_node.addChild(""body""). body_mo = body_node.addObject(; ""MechanicalObject"",; template=""Rigid3d"",; position=neutral_pose * 3,; showObject=True,; showObjectScale=0.1,; ). body_node.addObject(""UniformMass"", totalMass=0.05). body_node.addObject(; ""ArticulatedSystemMapping"",; input1=angle_mo.getLinkPath(),; output=body_mo.getLinkPath(),; ); # [ERROR] [PythonScript] GLError: GLError(; # err = 1283,; # description = b'stack overflow',; # baseOperation = glClear,; # cArguments = (16640,); # ); # File ""test_articulation.py"", line 146, in <module>; # simple_render(root); # File ""test_articulation.py"", line 39, in simple_render; # glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); # File ""src/errorchecker.pyx"", line 58, in OpenGL_accelerate.errorchecker._ErrorChecker.glCheckError. instrument_node.addObject(""ArticulatedHierarchyContainer""). articulation_hierarchy_node = instrument_node.addChild(""articulation_hierarchy""). articulation_center_node_1 = articulation_hierarchy_node.addChild(""center_1""); articulation_center_node_1.addObject(; ""ArticulationCenter"",; parentIndex=0,; childIndex=1,; posOnParent=[0, 0, 0],; posOnChild=[0, 0, 0],; ). articulation_node_1 = articulation_center_node_1.addChild(""articulation_1""); articulation_node_1.addObject(; ""Articulation"",; translation=False,; rotation=True,; rotationAxis=[0, 0, 1],; articulationIndex=0,; ). articulation_center_node_2 = articulation_hierarchy_node.add",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3095:3417,ERROR,ERROR,3417,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3095,1,['ERROR'],['ERROR']
Availability,"tView, in applications/sofa/gui/qt. The current implementation stores a pointer to every registered listeners in every node in the scene graph. Instead, the implementation proposed in this PR registers the listeners in the root node and child nodes forward the notifications to it. Also, the overloads are currently relying on the call super (the child class reimplements the method, then calls its base class implementation) This approach is [known to be error prone](https://en.wikipedia.org/wiki/Call_super) and can be reimplemented using delegates instead. Finally, this PR also adds extra delegates in the Nodes listeners notifications system and in the MutationListener, called *AFTER* the graph's edition. those are used in SofaQtQuick to be notified that the graph has indeed been updated. . Here are 2 quick UML diagrams showing the 2 architecture's differences. This one is the current implementation in sofa:; ![code_smell](https://user-images.githubusercontent.com/13734391/52288894-5245f000-296d-11e9-83b6-12f6ce1385f9.png). And this one is what this PR does:; ![code_clean](https://user-images.githubusercontent.com/13734391/52288978-730e4580-296d-11e9-9057-451922e971c8.png). Also, if someone could tell me what the master / slave relationship between BaseObjects are, I'd be curious to know if it is still in use in SOFA. It doesn't seem to be used in Listeners.. maybe added for Compliant / Flexible?. __This PR could potentially be breaking for plugins & projects implementing their own MutationListeners__. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/917:2127,failure,failures,2127,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/917,2,['failure'],['failures']
Availability,"t_node = root.addChild(""instrument""). instrument_node.addObject(""EulerImplicitSolver""); instrument_node.addObject(""CGLinearSolver""). angle_mo = instrument_node.addObject(""MechanicalObject"", template=""Vec1d"", position=[-0.4, 0.4]). body_node = instrument_node.addChild(""body""). body_mo = body_node.addObject(; ""MechanicalObject"",; template=""Rigid3d"",; position=neutral_pose * 3,; showObject=True,; showObjectScale=0.1,; ). body_node.addObject(""UniformMass"", totalMass=0.05). body_node.addObject(; ""ArticulatedSystemMapping"",; input1=angle_mo.getLinkPath(),; output=body_mo.getLinkPath(),; ); # [ERROR] [PythonScript] GLError: GLError(; # err = 1283,; # description = b'stack overflow',; # baseOperation = glClear,; # cArguments = (16640,); # ); # File ""test_articulation.py"", line 146, in <module>; # simple_render(root); # File ""test_articulation.py"", line 39, in simple_render; # glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); # File ""src/errorchecker.pyx"", line 58, in OpenGL_accelerate.errorchecker._ErrorChecker.glCheckError. instrument_node.addObject(""ArticulatedHierarchyContainer""). articulation_hierarchy_node = instrument_node.addChild(""articulation_hierarchy""). articulation_center_node_1 = articulation_hierarchy_node.addChild(""center_1""); articulation_center_node_1.addObject(; ""ArticulationCenter"",; parentIndex=0,; childIndex=1,; posOnParent=[0, 0, 0],; posOnChild=[0, 0, 0],; ). articulation_node_1 = articulation_center_node_1.addChild(""articulation_1""); articulation_node_1.addObject(; ""Articulation"",; translation=False,; rotation=True,; rotationAxis=[0, 0, 1],; articulationIndex=0,; ). articulation_center_node_2 = articulation_hierarchy_node.addChild(""center_2""); articulation_center_node_2.addObject(; ""ArticulationCenter"",; parentIndex=0,; childIndex=2,; posOnParent=[0, 0, 0],; posOnChild=[0, 0, 0],; ). articulation_node_2 = articulation_center_node_2.addChild(""articulation_2""); articulation_node_2.addObject(; ""Articulation"",; translation=False,; rotation=True,; rotati",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3095:3817,error,errorchecker,3817,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3095,1,['error'],['errorchecker']
Availability,"ted with each of the mapping parent dofs. - ContactMappers : It is (very) questionable to let contact mappers propagate the unconstrained dynamics solution vector towards contact dofs by calling `updateXfree()` since it will induce inconsistencies in mapping linearisation if the contact mappers are non linear, since contact mappings will therefore be linearised around the free motion configuration, and the rest being linearised around the configuration at the beginning of the time step. This PR does not address this problem which is left for future work. It arises only with non linear contact mappers (like the `RigidContactMapper` for instance), but this should be kept in mind. - LinearSolver API : As a general note, I believe the LinearSolver API is a bloated with virtual methods which are difficult to understand since they are not directly related to the computation / factorisation of a positive definite matrix, and are mostly optional especially for non assembled solver like CG. Most of the methods should reside in the ConstraintCorrection API, and concrete instance of ConstraintCorrection should be templated on the type of LinearSolver in my opinion, since it is the only objects that actually make use of these methods, and really what you want is to have access to the concrete type of Matrix and Vector used by the solver. Also from my understanding only `LinearSolver` instances that derive from `MatrixLinearSolver` implement these kind of methods, so maybe a first step would be to move them here. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459:8814,failure,failures,8814,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459,2,['failure'],['failures']
Availability,"terror.html. Please note and check the following:. * The Python version is: Python3.10 from ""C:\Users\JetsLab\.pyenv\pyenv-win\versions\3.10.11\python3.exe""; * The NumPy version is: ""1.26.4"". and make sure that they are the versions you expect.; Please carefully study the documentation linked above for further help. Original error was: No module named 'numpy.core._multiarray_umath'. The above exception was the direct cause of the following exception:. Traceback (most recent call last):; File ""C:\sofa_env\sofa_env\scenes\controllable_object_example\controllable_env.py"", line 1, in <module>; import gymnasium.spaces as spaces; File ""C:\SOFA\Lib\site-packages\gymnasium\__init__.py"", line 5, in <module>; from gymnasium.core import (; File ""C:\SOFA\Lib\site-packages\gymnasium\core.py"", line 8, in <module>; import numpy as np; File ""C:\SOFA\Lib\site-packages\numpy\__init__.py"", line 149, in <module>; raise ImportError(msg) from e; ImportError: Error importing numpy: you should not try to import numpy from; its source directory; please exit the numpy source tree, and relaunch; your python interpreter from there. I already checked the suggested troubleshooting, but I couldn't fix the error.; Can you help me?; Thank you!. **Steps to reproduce**; `py -3.11 -m venv C:/SOFA`; `SOFA\Scripts\Activate`; `git clone https://github.com/ScheiklP/sofa_env.git `; `cd sofa_env`; `pip install -e .`; `python3 sofa_env/scenes/controllable_object_example/controllable_env.py`. **Expected behavior**; I would have expected that no errors would appear. ---------------------------------------------. ### Environment. **Context**. - System: OS Name	Microsoft Windows 11 Home; - Version of SOFA: I compiled SOFA with Cmake to be able to use with Geomagic Touch; - State: Install directory: C:\sofa. **Command called**. ```txt. python3 sofa_env/scenes/controllable_object_example/controllable_env.py. ```. **Env vars**. ```txt. import sys; print(sys.path); ['', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5088:2390,Error,Error,2390,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5088,1,['Error'],['Error']
Availability,"test concurrent access to LCPForceFeedback computeforce from another thread. This PR depends on #1576 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1581:648,failure,failures,648,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1581,2,['failure'],['failures']
Availability,"thanks to #2989 and debug mode, a bug could be detected when the topology handler registers data for quad.; (I suppose this should fix data updates when a quad container has topological changes). Based on : ; - #2989 (to fix compilation). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2990:783,failure,failures,783,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2990,2,['failure'],['failures']
Availability,"the POINTREMOVED event to all topologyHandler registered. Including the deleted one from the mouse attached constraint. The pointer to the topologyHandler is not null but pointed to a deleted object. ### PR changes description; This PR and the PR #3271 (included in this on) are introducing a mechanism to better register and unregister a TopologyHandler from the TopologyContainer.; 1. register is done at creation of the TopologyHandler; 2. If TopologyHandler has well been added to the list manged by the Container, a internal bool m_isRegisterd is set to true.; 3. When the TopologyHandler is deleted (meaning its component owner is deleted). If m_isRegisterd == true, the TopologyHandler will unregister itself.; 4. When the TopologyContainer is deleted, it will go through each TopologyHandler it is managing and turn m_isRegisted to false. And then clear the list without deleting the Handler. The bool m_isRegisterd is used because to unregister itself, the handler need to access the topologyContainer which could have already been destroyed (depending on the graph order). But the TopologyHandler doesn't now the container is null. That's why if the TopologyContainer is deleted first it sets all its topologyHander as unregistered. ### Linked issues; Based on PR #3271 ; Fixes #3370 #3202. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3369:3067,failure,failures,3067,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3369,2,['failure'],['failures']
Availability,"the cmake process with a already populated CMakeCache). - CPack analysis at the end; - All modules does a awful lot of find_package() even if it is packages already found before; - (On windows only?) the sofa_install_lib at the beginning. # (Proposal of) Solution. Not an expert of CMake at all but this PR:; - Set an option if you really want to use CPack (this is only used when packing) -> **harmless**; - Modify sofa_find_package to test if the desired packages/target is already imported/loaded , use it everywhere -> **I may have missed something here**; - remove the recursiveness in sofa_install_package -> **seems OK on Windows but I suspect it was made for Linux actually**. Here is the trace after applying the modifications:; ![cmake1](https://user-images.githubusercontent.com/11028016/108480054-c292e600-7296-11eb-913c-7f3ad5a85adf.PNG). It takes only around 8sec instead of around 38 sec initially, on Windows (without counting generating apparently); In my Ubuntu VM, it takes around 2 sec for the whole process ! (configure + generating); But I have no doubt I may have introduce bugs etc. 🤨 so feel free to react. Unfortunately, I dont know for now how to reduce the generating step time 😥. # Nota Bene; For those interested on how to trace/profile the cmake processing time: #1838. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1837:2177,failure,failures,2177,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1837,2,['failure'],['failures']
Availability,this PR depends on #1351 where Data d_checkTopology has been introduced. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1353:329,failure,failures,329,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1353,2,['failure'],['failures']
Availability,"this PR is based on #2869 . Sevral fixes in `TopologyData `/ `TopologySubsetData `/ `TopologySubsetIndices`. - Fix: `TopologyData::m_lastElementIndex` was set to invalid when passing empty buffer size. keep value to 0 in this case.; - Rename: `TopologySubSetData `option **isConcerned** by **addNewelements**. This method is used to allow TopologySubsetData to growth following topological changes; - Fix: TopologySubSetData **add** methods. Value where not really set but using default constructor instead of value in callback.; - Clean: TopologySubSetData **remove** method from unecessary checks/loop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2870:1149,failure,failures,1149,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2870,2,['failure'],['failures']
Availability,"thub.com/sofa-framework/sofa/pull/2394):. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 48.83 558.52 52.87 16.28 52873.1 100 TOTAL; ...; 4 0.97 1 16.13 510.42 18.89 15.73 18.89 35.72 ....MBKBuild; 5 1.16 1 15.20 501.11 17.93 15.46 17.93 33.91 .....MMM-addKToMatrix; 6 1.18 1 5.92 26.88 7.26 1.67 7.26 13.74 ......stiffness; 6 8.44 1 2.84 7.27 3.59 0.62 3.59 6.78 ......copyKToEigen; 6 12.03 1 0 0 0 0 0 0 ......waitJacobian; 6 12.03 1 3.07 487.77 3.76 15.32 3.76 7.11 ......Multiplication; 7 12.03 1 2.62 479.92 3.28 15.08 3.28 6.21 .......J1tKJ1; 7 15.32 1 0.34 4.83 0.36 0.15 0.36 0.68 .......J2tKJ2; 7 15.68 1 0.09 2.57 0.09 0.08 0.09 0.18 .......J1tKJ2; 7 15.77 1 0.01 0.43 0.02 0.01 0.02 0.03 .......J2tKJ1; 6 15.79 1 2.54 5.45 2.72 0.18 2.72 5.15 ......copy; 7 15.79 1 2.50 5.38 2.68 0.18 2.68 5.07 .......J1tKJ1-copy; 7 18.47 1 0 0.01 0 0 0 0 .......J2tKJ2-copy; 7 18.48 1 0.01 0.04 0.01 0 0.01 0.03 .......J1tKJ2-copy; 7 18.49 1 0.01 0.06 0.02 0 0.02 0.04 .......J2tKJ1-copy. ```. It is still possible to go further with parallel tasks between the multiplications and the copies, but:; 1) A clean implementation would require a local thread pool (and the current implementation of thread pools does not allow that); 2) The speed up in the example scene would be negligible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2411:2282,failure,failures,2282,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2411,2,['failure'],['failures']
Availability,"tial guess was writing a 0.0 outside bounds (but I dont know why this line was here). :warning: WARNING :warning:; one needs to set the responseParams to mu=0.0 also. This is really confusing and would need to refactor somewhere.; If the LCP defines mu to 0.0 but not responseParams, funny things happen (one component expects 1contact = 1 constraint and the other 1contact = 3 constraints). Moreover:; - remove (deprecate) usage of the member `_mu` which was confusing with the data `mu`; - adds two scenes to demonstrate with and without friction, and their regression tests. [ci-depends-on https://github.com/sofa-framework/Regression/pull/47]. ![lcp_friction](https://github.com/sofa-framework/sofa/assets/11028016/eba86b90-3cfc-40f6-850f-6aba720d291d); ![lcp_nofriction](https://github.com/sofa-framework/sofa/assets/11028016/fb015cd7-54c6-4347-a07e-e5c960dc609c). Benchmarks:; As friction adds two additional constraints in the matrix, then frictionless scenes are faster:; ```; caduceus:; w/: 5000 iterations done in 52.071 s ( 96.0227 FPS); w/o: 5000 iterations done in 44.6895 s ( 111.883 FPS); ```; ```; 3instruments_collis:; w: 5000 iterations done in 69.8352 s ( 71.5971 FPS); w/o: 5000 iterations done in 43.0997 s ( 116.01 FPS); ```; Obviously, this change the behavior of the scene...; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3905:1946,failure,failures,1946,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3905,2,['failure'],['failures']
Availability,"ting from `BruteForceBroadPhase` instead of `BroadPhaseDetection`. This is what I did in `RayTraceDetection`. Doing that, I could remove all the broad phase code from `RayTraceDetection`. # What comes next. It is also my intention to inherit from `BruteForceBroadPhase` in `BruteForceDetection`, and remove all the broad phase code from `BruteForceDetection`. The broad phase code from `BruteForceDetection` and `RayTraceDetection` would be shared from `BruteForceBroadPhase`. However, I expect complex conflicts because of #1999. I'll do that if #1999 is accepted and merged. It is also my intention to extract the narrow phase from `BruteForceDetection` and put it in another component which would inherit from `NarrowPhaseDetection`. The narrow phase in `BruteForceDetection` is not brute force, and should be named with a clearer and more meaningful name. It will be the case with the new component. I also believe SAP can be implemented as a broad phase only component. We would have the choice between `BruteForceBroadPhase` and `SAPBroadPhase`. Any narrow phase would work with both broad phases (`BruteForceBroadPhase` and `SAPBroadPhase`). Finally, with all those changes, we can consider more modularity on the collision detection and choose any combination of broad phase and narrow phase. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2010:2713,failure,failures,2713,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2010,2,['failure'],['failures']
Availability,"title says all. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2443:560,failure,failures,560,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2443,2,['failure'],['failures']
Availability,"tly with python3 interpreter, `<sofa-path>/bin/qt.conf` is not found because Qt looks next to the executable (python3).; With this new qt.conf.h and its function sofa::gui::qt::loadQtConfWithCustomPrefix(), it is possible to force Qt to load the qt.conf we want. qt.conf.h is based on the output of `<qt-path>/bin/rcc qt.conf.qrc -o qt.conf.h` with; - `<qt-path>/bin/rcc`: Qt RCC executable; - `qt.conf.qrc`: file to create next to `<sofa-path>/bin/qt.conf` to overload Qt default search path "":/qt/etc/qt.conf"" ; ```xml; <!DOCTYPE RCC><RCC version=""1.0"">; <qresource prefix=""/qt/etc/"">; <file>qt.conf</file>; </qresource>; </RCC>; ```; - `<sofa-path>/bin/qt.conf`: this file is not in the command but is needed because referenced by qt.conf.qrc. Usage example:; ```cpp; #include <sofa/gui/qt/qt.conf.h>. std::string sofaPrefixAbsolute = sofa::helper::Utils::getSofaPathPrefix();; std::string inputFilepath = FileSystem::cleanPath(sofaPrefixAbsolute + ""/bin/qt.conf"");; bool success = loadQtConfWithCustomPrefix(inputFilepath, sofaPrefixAbsolute);; if(success); {; msg_info(""Sofa.Gui"") << ""Loaded qt.conf from "" << inputFilepath << "" customized with Prefix = "" << sofaPrefixAbsolute;; }; else; {; msg_warning(""Sofa.Gui"") << ""Failed loading and/or customizing qt.conf from "" << inputFilepath;; }; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1820:1923,failure,failures,1923,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1820,2,['failure'],['failures']
Availability,"to access the data without abstraction cost, ie. accessing the object with its true type (eg: Data<T>) instead of its parent type (BaseData) and at the same time having an abstraction to manipulate BaseData. . Duplicating the same obect/point is in general a code smell indicating that something is wrong in the implementation. In general duplication complexify the implementation and error prone (because you have to garantee that the different copies are kept synchronized and interact together in a seamlessness way. . So, in this PR I addresse this duplication problem by removing the lowest type and relying on a dynamic_cast when it is needed. There is an abstraction cost...but it is on a on a very rarerly used method (actually only used for fast copy of data field...and in that context...the cost of the dynamic cast against one of copying millions of Dofs is totally neglectible). . A different pattern was initially used with a child-delegation to expose the abstraction to its parent but it appears it would have made the PR breaking. The difference is that the selected pattern allows one data to be parented to a data of different type while the pattern with child-delegation restrict the parenting to be of exactly the same time. . I personally prefer to have parent only on same type (so that data conversion must be added manually and becomes explicit) but this was not done previously in Sofa and thus breaks some scenes (somes of them are actually really funny....and probably work only by side effect). . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1490:2033,failure,failures,2033,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1490,2,['failure'],['failures']
Availability,to avoid breaking external plugins. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/870:292,failure,failures,292,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/870,2,['failure'],['failures']
Availability,"to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Compon",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:1667,ERROR,ERROR,1667,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"tory) and allows the user to choose the type of ImplicitShape he wants to mesh, and to change the values relating to the mesh (**facet_size**, **approximation** and **cell_size**). - Fill the scene with a shape :. `<DistanceGridComponent` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`name=""grid_cmp""`; > .tmg is our extention file which is actually a simple list of values corresponding to the function evaluated at each point : see PR #353 ; `filename=""/path/file.tmg""` . &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`nx=""243""` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`ny=""243"" ` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`nz=""243""` ; `/>` . or ; `<ImplicitSphere name=""sphere"" />`. or any class inhereting from ImplicitShape. - Modify the mesh component value's and use the correct component in the link. ` <MeshGenerationFromDG` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`name=""mesh"" `; > The 3 following parameters can change the execution time (from a few seconds to much more) ; `facet_size=""0.7"" ` ; `approximation=""0.5""` ; `cell_size=""0.4"" ` . &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`drawTetras=""false""` . > Then the link ; `function=""@sphere""` which is actually a torus ; or	 ; `grid=""@grid_cmp""`; ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`xmin_box=""0.0"" ` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`ymin_box=""0.0"" ` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`zmin_box=""-5.0"" ` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`xmax_box=""27.0"" ` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`ymax_box=""27.0"" ` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`zmax_box=""5.0"" ` ; `/>`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/354:2288,failure,failures,2288,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/354,2,['failure'],['failures']
Availability,"transpose method was missing for matrix3 on device.; Not sure it is the best implementation but it does the job. Will fix PR #2585 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2675:677,failure,failures,677,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2675,2,['failure'],['failures']
Availability,"typo, copy-paste is bad m'kay?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2530:576,failure,failures,576,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2530,2,['failure'],['failures']
Availability,"u can always load a library that is in your working directory ), also this change had some **interesting** side effects when basically you write a unit test which relies on; a scene file that uses a `RequiredPlugin`... that shortcoming was somewhat hidden by having all tests relying on `SofaGTest`, whose sole reason of being is to actually amend c5a19fe by populating the PluginRepository with the current working dir. Some additional functionalities are added to `RequiredPlugin` by this PR, namely the ability to specify other suffixes ( or no suffix at all ) to prepend when attemtping to load a plugin with a name hint. . # CHANGELOG ; FIX; [SofaHelper]; - Restore the `SOFA_LIBSUFFIX` behavior with msvc; - `PluginRepository` is initialized to contain the current working directory. CHANGE; [SofaHelper] ; - `PluginManager` : keep only a single version of the `loadPlugin` method. Also the method returns true; even if the plugin is already loaded. Returning false is kept only for real failures, whereby the library could ; not be loaded. If it is important to check wether or not a plugin is already loaded, the result of the `pluginIsLoaded` method can be inspected beforehand. . [SofaGraphComponent] ; - `RequiredPlugin` component gives the ability to override the default suffix which is ""_d"" in debug mode. ; It also gives some more advanced options to extend the plugin search. # Remarks. I do not know which version of the GUI is still in use. However I believe that the widget that can add/remove plugins to the `PluginManager` should be removed since there is no valid reason to ; keep it. I am really not sure about the current state of SofaGTestMain. It is hidden somewhere in the folder hierarchy (inside tools directory), and its existence seems to imply that you cannot write a unit test inside sofa without relying on it to ""initialise Sofa"" which is absolutely not the case. See PR #471; Instead having a library which depends on gtest and SofaCore which ; - factorize some ini",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/487:1674,failure,failures,1674,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/487,1,['failure'],['failures']
Availability,"uOgl.addObject('IdentityMapping', input='@../Quads', output='@Visual'); ; ; scale=1.5; rotation=[-40.0, 0.0, 0.0]; stl = 'carotids.stl'; VISUAL = True; vessels = root.addChild('Vessels'); vessels.addObject('MeshSTLLoader', filename=stl, flipNormals=False, triangulate=True, name='meshLoader', scale=scale, rotation=rotation); vessels.addObject('MeshTopology', position='@meshLoader.position', triangles='@meshLoader.triangles'); vessels.addObject('MechanicalObject', name='DOFs1', scale=1, rotation=rotation); vessels.addObject('TriangleCollisionModel', moving=False, simulated=False); vessels.addObject('LineCollisionModel', moving=False, simulated=False); vessels.addObject('PointCollisionModel', moving=False, simulated=False); vessels.addObject('OglModel', color=[1, 0, 0, 0.3], src='@meshLoader', name='Visual', rotation=rotation). # Add a sphere.; newSphere = root.addChild('FixedSphere'); newSphere.addObject('EulerImplicitSolver'); newSphere.addObject('CGLinearSolver', threshold='1e-09', tolerance='1e-09', iterations='200'); MO = newSphere.addObject('MechanicalObject', showObject=True, position=[0, 200, 200, 0, 0, 0, 0], name='Particle', template='Rigid3d'); Mass = newSphere.addObject('UniformMass', totalMass=1); Force = newSphere.addObject('ConstantForceField', name=""CFF"", totalForce=[0, 0, 0, 0, 0, 0] ); Sphere = newSphere.addObject('SphereCollisionModel', name=""SCM"", radius=30.0 ); newSphere.addObject('FixedConstraint', name='FixedConstraint', indices=0); newSphere.addObject('OglModel', color=[1, 0, 0, 0.3], name='Visual'); ; ; ; # visualizing; source = [-600,0,300]; lookAt = source+np.array([1,0,0]); orientation = [ 0, -0.70710678, 0, 0.70710678]; root.addObject(""LightManager""); root.addObject(""DirectionalLight"", direction=[-1,0,0]); root.addObject('InteractiveCamera', name='camera', position=source,; lookAt=lookAt, orientation=orientation); ; if __name__ == ""__main__"":; # Read real information from real world.; pass. # One simulation for one root. Maybe.; # Create sc",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4636:18751,toler,tolerance,18751,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4636,1,['toler'],['tolerance']
Availability,"ude/SceneCreator/config.h; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets-release.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfigVersion.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfig.cmake; 1>CMake Error at applications/plugins/CImgPlugin/cmake_install.cmake:38 (file):; 1> file cannot create directory:; 1> C:/projects/sofa-build/$C:/projects/sofa-build/install/plugins/CImgPlugin/bin.; 1> Maybe need administrative privileges.; 1>Call Stack (most recent call first):; 1> applications/plugins/cmake_install.cmake:37 (include); 1> cmake_install.cmake:88 (include); 1>; 1>; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: The command ""setlocal; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: ""C:\Program Files\CMake\bin\cmake.exe"" -DBUILD_TYPE=Release -P cmake_install.cmake; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmErrorLevel; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:2405,error,error,2405,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,1,['error'],['error']
Availability,"uginManager from the GUI:; ```; [INFO] [PluginManager] Plugin not found in loaded plugins: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; [ERROR] [SofaPluginManager] plugin should be loaded: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; ```. Now, if you try to load twice the plugins (from differents paths then), it will print:; (one dll is in `build/bin/Release/` and the other one directly in `build/`; ```; [WARNING] [PluginManager] This plugin SofaNonUniformFem has been loaded from a different path, it will certainly lead to bugs or crashes...; You tried to load: ....build/bin/Release/SofaNonUniformFem.dll; Already loaded: ....\build\SofaNonUniformFem.dll; [WARNING] [PluginManager] Plugin SofaNonUniformFem is already loaded from a different path, check you configuration.; ```; The ""double information"" comes from the fact that in the end we consider the plugin as loaded ; the code afterwards will try to load the plugin nevertheless (hence having to detect twice the duplication); In the GUI code for example: https://github.com/sofa-framework/sofa/blob/71691309251177322967f53bc7a024e89c19bcbc/modules/SofaGuiQt/src/sofa/gui/qt/SofaPluginManager.cpp#L120. Obviously it is really not advised to continue to use Sofa if this case occurs but at least the user will know what is going on.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2352:2456,failure,failures,2456,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2352,2,['failure'],['failures']
Availability,"ulation scale. For example, setting an absolute displacement norm of 1e-5 might seem enough for a liver mesh set in millimetres, but is definitely not adequate for the same liver using this time a mesh scaled in metres. This is a source of user error, and is probably why many FEM software will use relative convergence criteria. The two additional criteria are:. 1. The relative residual norm |R|/|R0| where |R| is the norm of the force vector after the last Newton iteration, and |R0| is the norm of the force vector after the first Newton iteration.; 2. The relative displacement norm |dx|/|U| where |dx| is the norm of the latest solution vector, and |U| is the norm of the sum over all previous solution vectors of the current time step. To remove any confusion between absolute and relative criteria, the convergence data field ""correction_tolerance_threshold"" and ""residual_tolerance_threshold"" were renamed for ""absolute_correction_tolerance_threshold"" and ""absolute_residual_tolerance_threshold"", respectively. Note that to keep a compatibility layer with older scene files, these old data field names are still available, but a deprecated warning is shown to the user, inviting him to update its scene. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/147]. EDIT: Fix #224. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2050:1637,avail,available,1637,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050,3,"['avail', 'failure']","['available', 'failures']"
Availability,"ulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #12 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2057:1836,Down,Downloads,1836,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057,1,['Down'],['Downloads']
Availability,"uldn't be too disturbing. The biggest is probably the fixing done in sofa::helper::vector (have a look at the allowed syntax in the _test""). . CHANGELOG:; - ADD sofa::helper::vector<int> tests validating the different possible syntax ; - ADD sofa::helper::vector<unsigned int> tests validating the different possible syntax ; - FIX sofa::helper::vector<int>::read() so that it reports errors message in case of problem ; - FIX sofa::helper::vector<int>::read() so that there is no more endless loop for some input; - FIX sofa::helper::vector<unsigned int>::read() so that it reports errors message in case of problem ; - FIX sofa::helper::vector<unsigned int>::read() so that there is no more endless loop for some input; - FIX in all tests the ""_OpenIssue"" suffix that I forgot to remove when I fix the tests; - FIX MassSpringLoader to refuse to load a Xsp containing a rigid object and send warning messages. ; - FIX DefaultPipeline that was allowing negative depth attribute. Now it warns the user and set it default value (6).; - FIX DiagonalMass_test that was not checking that some pointer were valid before using them. ; - CHG GenerateRigiMass.inl now sends a warning message instead of an error. ; - FIX DistanceGrid add basic validation of dimensions given to the constructors. Sends a dmsg_warning if they are invalid and returns 0. ; - FIX DistanceGrid rename the attributes' names to match the sofa guidelines. . That's all, ; if merged with #267, #264 and #257 we should have a nearly green dashboard . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label).; - [x] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/271:1340,error,error,1340,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/271,2,"['error', 'failure']","['error', 'failures']"
Availability,"unit Test for FixConstraint class to test topologicalChanges. Fix #1589. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2136:617,failure,failures,617,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2136,2,['failure'],['failures']
Availability,"unload() function of PluginManager was just removing the entry of the plugin in its map, but this one was effectively still loaded in the process memory. (on Windows, you could still see it using ProcessExplorer) ; This PR fixes it (i.e really unloads from memory). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1274:522,failure,failures,522,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1274,2,['failure'],['failures']
Availability,update Regression_test repository sha and add 2 more scenes to test collisionGroup. - [References] Update references of collisionMultiple scene due to fix modification in sofa master inside collisionGroup.; - [References] Add more scene references to check collision with and without collisionGroup. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1102:556,failure,failures,556,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1102,2,['failure'],['failures']
Availability,"updating my branch with most recent sofa branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1877:593,failure,failures,593,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1877,2,['failure'],['failures']
Availability,"using failure of loading all the remaining plugins. check below error log. I am trying to run lapgym repo implementation , reach environment. Repo : https://github.com/ScheiklP/sofa_env; File : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/scene_description.py; scene header file where plugins are loaded : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/sofa_templates/scene_header.py. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Co",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:1148,ERROR,ERROR,1148,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,1,['ERROR'],['ERROR']
Availability,"ut=""@.."" output=""@Visual"" /> ; 		</Node>; 		; 		<OBJExporter name=""export_OBJ"" filename=""C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/regularGrid5x5"" exportAtBegin=""true"" exportEveryNumberOfSteps=""0"" />; 		; 	</Node>; 	. </Node>. ```. **Env vars**. ```bash; echo ""SOFA_ROOT = C:\Users\jducr\Documents\Librairies\sofa\build\bin\Release""; echo ""PYTHONPATH = C:\Users\jducr\Documents\Librairies\Python\Python37""; echo ""python3 -V = Python 3.7.7""; ```. ```txt; The scene is working fine, just the normals are exported wrong. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SofaViewer] QtViewer::keyPressEvent, CONTROL pressed; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins.; Your scene may not work on a sofa environment with different pre-loaded plugins.; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn):; <RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2451:4066,ERROR,ERROR,4066,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2451,1,['ERROR'],['ERROR']
Availability,"w():; s = SofaEditor.getSelection(); drawSomethingSpecialForSelectedObject(s); ```. The python binding is different to the one we have yet into Sofa s it is made totally independently to SofaPython and is done using cython (http://cython.org/) ; (for which I'm curious to see how this will survive our CI). . Other notable things are that there is unittest either on the c++ side & python side and that the CMakeLists.txt are installing everything into a single the install location with the following structure: ; module/SofaEditor/SofaEditor.so; module/SofaEditor/python/SofaEditor/__init__.py; module/SofaEditor/python/SofaEditor/SofaEditor.so ; module/SofaEditor/examples; (I'm not sure it is a good idea but this is a kind of ""package"" but I think it is an interesting way to ship plugins). . I will open other PR to integrate this feature into runSofa and runSofa2. . For the records, I was hesitating between three designs. The first one consists in using the ""context/ExecParams"" to hold the editor state. As this context is passed to the components during the scenegraph traversal this would allows them to know the status of the editor. The second approach was using flexible messages/event transmitted through the scene graph. The third design was much simpler and simply consist of using a singleton so that it can be used everywhere there is a need to know the editor status. Between the three I made the decision to use the simplest approach (simpler to implement & simpler to use) despite he is more limited. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/735:2717,failure,failures,2717,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/735,2,['failure'],['failures']
Availability,ways better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT(Error) ;; .... ; }; }; }; ```. This PR will generate a lot of new test failure... that are either real failure that deserve investigation or ; tests that was previously simply previously ignoring error & warning messages; . CHANGELOG for @hugtalbot & @guparan :; - TestMessageHandler.cpp implements a new & robust way to connect msg_* message to test failure ; - TestMessageHandler_test.cpp implements test for TestMessageHandler. ; - Sofa_test is updated to use the new TestMessageHandler where msg_error generates test failures ; - All the existing tests have been changed to use the new API & removed the old one. ; - MeshSTL.cpp replace a std:cerr by a msg_error so that FIX the corresponding failing test.; - Message.cpp adds a way to convert message type to string.; - updates externs/gtest to a fresh checkout. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures. (This PR cannot do that...read my comment about that). ; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old.; - [ ] #237 should fix most of the newly failing tes,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:2629,robust,robust,2629,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,2,"['failure', 'robust']","['failure', 'robust']"
Availability,"what I wanted from the start, which was lettingLMDNewProximityIntersection managing the filters, and not the CollisionModel themselves. ; Bonus point, it checks if there is a filter for each collision model and is set to Invalid if not (should not crash then)~~. ~~I really wondered whether or not simply deleting this Intersection (and the associated LMDFilter) as the latest meaningful commits were clearly stating it was a work in progress. But it seems to work so thats why I kept it (and by pity as well).~~. ~~@ChristianDuriez whats your opinion on this component ?~~. EDIT: After a meeting with other sofa-dev guys, it has been decided to totally remove this component from the code base, as there was no example, no test and it was even not working before this PR.; As such, I removed:; - LMDNewProximityIntersection ; - Point/Line/TriangleLocalMinDistanceFilter; - and the newly created example.; I let the headers to inform the eventual unfortunate user that these headers must not been used anymore, and update the ComponentChange list. I have squashed the first commit, so IF ONE DAY, people wants to resurrect this code (which was working in the end), one can just come back to the commit https://github.com/sofa-framework/sofa/pull/2272/commits/0d9a1af8d14b1fa508400b05b83588a9d704e34c. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2272:2551,failure,failures,2551,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2272,2,['failure'],['failures']
Availability,"when passing ""this"" as argument, forcing object copy to avoid unexpected results; Fixes #280 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/317:351,failure,failures,351,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/317,2,['failure'],['failures']
Availability,whispered to me by @fredroy :+1: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1042:291,failure,failures,291,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1042,2,['failure'],['failures']
Availability,"wing image (using node stress data):; ![VisualStress04](https://user-images.githubusercontent.com/56633656/234069253-030154aa-f3c1-4bff-9d92-eccffd3dbc45.png); Compared to the visualization with ""_showVonMisesStressPerElement_"", this color map accords more with my intuition of the stress forces (while the feet are pressed).; Therefore, I would like to add a new option ""_showVonMisesStressPerNodeColorMap_"" to show this color map. 2) I would like to add an option ""_showGapBetweenElements_"" to activate/deactivate drawing the gap between the elements, in order to show a smooth color map:; ![VisualStress07](https://user-images.githubusercontent.com/56633656/234069288-96543e38-47f5-44c7-8c3d-f813fe7557cd.png). 3) I would like to add an option ""_showForceField_"" to decide if we draw the forcefield of the current object or not. This will be useful when we have several soft tissues and we want to focus on one of the objects:; ![VisualStress08](https://user-images.githubusercontent.com/56633656/234069316-194be9c0-1abb-4380-a7e0-cad443d74206.png); ![VisualStress09](https://user-images.githubusercontent.com/56633656/234069330-5e07339a-de8b-4ee0-ae73-df787b64ccbc.png). Finally I would like to note that the addition of the new functions does not change the visualization with previous settings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3821:2446,failure,failures,2446,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3821,2,['failure'],['failures']
Availability,"with compatibility layer, s'il vous plait!. Fix #3378. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3891:599,failure,failures,599,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3891,2,['failure'],['failures']
Availability,"xml header, solver iterations, etc... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/310:294,failure,failures,294,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/310,2,['failure'],['failures']
Availability,"xml2/tree/master, under Z-lib license) which looks to be its successor and best candidate, as it is maintened, well packaged with cmake and available on conda-forge. ; Also, it is compatible for a future ""find package or fetch content"" mechanism in cmake. I don't know if we want to split the implementation of this additional feature for this package in another PR because if we do so, current code would need an additional required dependency to tinyxml2. ; The ""find or fetch"" cmake mechanism for this package, avoiding the requirement for this dependency to be installed, can be implemented as it:. ```; # find or fetch TinyXML2; include(FetchContent); FetchContent_Declare(; tinyxml2; URL https://github.com/leethomason/tinyxml2/archive/refs/tags/9.0.0.tar.gz; FIND_PACKAGE_ARGS NAMES TinyXML2; ); FetchContent_GetProperties(tinyxml2); if(NOT tinyxml2_POPULATED); FetchContent_Populate(tinyxml2). set(tinyxml2_SHARED_LIBS ON CACHE INTERNAL """"). add_subdirectory(${tinyxml2_SOURCE_DIR} ${tinyxml2_BINARY_DIR}); endif(); ```; However, this would required cmake >=3.24 and this call to be at a toplevel cmake (duplicating this code to replace all current calls to `find_package(TinyXML2)` does not seem desirable neither, so we might think also about how we can implement that in the cmake chain).; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4240:2128,failure,failures,2128,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240,2,['failure'],['failures']
Availability,"y msg_warn() ""does not support partial_solve"" only at run-time, which means there is no way to know at compile-time that a linear solver does not support partial solving. So I set the partial solving API in an interface (crudely called PartialLinearSolver, name can be gladly changed), and is implemented only by BTDLinearSolver.; As for LinearSolverConstraintCorrection, it will check at construction if the given linearsolver is able to handle partialsolving (by dynamic_cast sadly) and if not, can warn the user that the linear solver is not usable and will be in ""incorrect"" state afterwards, instead of printing ""partial_solve not implemented"" while simulating.... A nice side-effect is that linear solvers libs will be slightly smaller, as all instanciations of all linear solvers (except btd then) do not contain init_partial_solve() and partial_solve() functions anymore. EDIT: it is even worse, linear solvers not implementing partial_solve does a ""msg_info()"" so w/o printLog off, users wont even know why the ConstraintSolver/ConstraintCorrections is not doing its job....; See unit tests on LCPForceFieldback, it is using SparseLDLSolver (not implementing partial_solve) and the tests do not throw any warning, even if it is using LCPConstraintSolver and LinearSolverConstraintCorrection. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3241:2307,failure,failures,2307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3241,2,['failure'],['failures']
Availability,"zeToModel flag in SubsetMapping to enable resizing of the destination MechanicalState to the size of indices; - BaseContext : add new method getActiveMeshTopology to get relevant topology, taking `BaseMaping::sameTopology()` into account; - PointSetTopology : add some unit tests. ### Improvements; - each time a topological change sequence is detected in BarycentricMapperTriangleSetTopology the mapping is initialized; - PointSetTopologyContainer maintains a list of point indices, accessible through the data points; - Topology : Factorize the last method specific to each topological elements in data containers. ### Cleans; - MechanicalObject size and link to topology is now exposed as Data and Link, using the new getActiveMeshTopology() method. Set the link manually and/or set useTopology=""false"" to override. ### Bugfixes; - apply data container updates before mapping updates; - use existing parameter handleTopologyChange in SubsetMapping; - slightly cleanup topology change handling method for triangle mappers; - check of upper topology based on the emptiness of the upper container; - crash in `MeshTopology::init()` for non manifold meshes; - re-enable Propagate of topological changes inbetween triangle creation and removal in `TriangleSetTopologyModifier::addRemoveTriangles(),` as it is required in cases involving chains of topology mapping and topology data containers depending on each other . This is the re-opening of [previous issofa_topology pull-request](https://github.com/sofa-framework/sofa/pull/217). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/243:1967,failure,failures,1967,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/243,1,['failure'],['failures']
Availability,"~~Last one (?) 🤔~~. #1527 . based on:; - #2813 . Deprecates _**SofaBaseVisual**_, ; Deprecates partially **SofaUserInteraction** and **_SofaGraphComponent_**. Gathers ""general"" configuration settings component in **Sofa.Component.Setting**; and Controller related things in **Sofa.Component.Controller**. The rest of configuration setting was originally present as well, plus the ""performer"" (inciseperformer, addcameraperformer...) but those will be added in a separate Sofa.GUI family modules). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2843:1041,failure,failures,1041,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2843,2,['failure'],['failures']
Availability,~~The PR is based on #1003 (merged)~~ . CHANGELOG:; - [SofaPython] Add vector<Rigid3> to the addNewData in Binding_Base.cpp; - [SofaPython] Base.addNewData returns the created data or set an exception in case of failure. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1004:212,failure,failure,212,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1004,3,['failure'],"['failure', 'failures']"
Availability,"~~To push immediately after merging #1734~~. Remove all references to defaulttype::Vec (and helper::fixed_array) and remove all ""deprecation"" messages. Breaking for the same reason with #1730 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1740:738,failure,failures,738,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1740,2,['failure'],['failures']
Availability,"~~[DEMO]~~. First step for an unified testing system. This module gathers:; - helper/testing files: utilitary to write new tests; - gtest: API Google test (all tests are based on it); - SofaGTestMain (force-load SofaSimulationGraph): template of Main to centralize test-related things. This module needs to be compiled AFTER SofaSimulation, as SofaGTestMain needs SofaSimulationGraph. Unfortunately, there is still the mess with the plugin SofaTest, which needs to be solved as well.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1834:1029,failure,failures,1029,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1834,2,['failure'],['failures']
Availability,"~~for thread-safety, and each thread/simu would have its own pool of contact id~~. ~~An other solution would be to put a guard_lock/mutex each time the ids are accessed but it would share the same pool of contact id to the whole set of thread/simu~~. Make the counter of ContactId atomic.; A side effect is to remove the ability to restore previous contactid which was destroyed and set in a side container. I dont think we really need to save some ""ids"" because we will never overrun the 64 bit integer IMO (18446744073709551615 is quite big 🙃); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4582:1091,failure,failures,1091,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4582,2,['failure'],['failures']
Availability,"… into a dedicated plugin. Replaces https://github.com/sofa-framework/sofa/pull/4395. The new PR now complies with the conclusion on the architecture of a plugin, described [in the doc](https://www.sofa-framework.org/community/doc/programming-with-sofa/create-your-plugin/#plugin-architecture). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4487:839,failure,failures,839,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4487,2,['failure'],['failures']
Availability,"… into a dedicated plugin. The plugin VolumetricRendering needed a bit of cleaning too. The new folder hierarchy is the following:. - SofaCUDA; - VolumetricRendering; - VolumetricRendering; - VolumetricRendering.CUDA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4395:762,failure,failures,762,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4395,2,['failure'],['failures']
Availability,"…Sofa_Test. #1885 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2144:564,failure,failures,564,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2144,2,['failure'],['failures']
Availability,"…ion warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1726:558,failure,failures,558,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1726,2,['failure'],['failures']
Availability,"⚠! Uber PR incoming! ⚠; (Will basically conflict every time a branch is merged 🤪) . This PR generalizes the use of the Sofa.Type module (with things formerly in SofaHelper, SofaDefaulttype and SofaCore).; E.g:; - helper::fixed_array becomes type::fixed_array; - defaulttype::Vec becomes type::Vec; - defaulttype::Quat and helper::Quater becomes type::Quat (and typedef *Quaternion* is removed); - helper::types::RGBAColor becomes type::RGBAColor; - and many more; More info in #1521 . These renames was handled in Sofa.Compat to be the less problematic possible while converting.; Now for the release of v21.06, it is logical to use the correct namespaces/headers. Big Warning though: the Sofa.Compat is still here for the external plugins, but as the headers/file inclusions changes, it is highly probable that they will break at compilation: a lot of people does not ""include what they use"" and what relying on the previous inclusions. Later TODO: add a cmake option to make the use of Sofa.Compat optional. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2179:1554,failure,failures,1554,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2179,2,['failure'],['failures']
Availability,"⚠-For MSVC only; ⚠-in Release mode only; ⚠-with CMake flag SOFA_ENABLE_LINK_TIME_OPTIMIZATION. Enable Link-time optimization to whole SOFA project.; (with caduceus.scn : w/o: 170fps, w/: 190fps). WARNING: typical SOFA compilation takes 20GB!🥴. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1468:500,failure,failures,500,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1468,2,['failure'],['failures']
Availability,"⚠️ DO NOT MERGE ! ⚠️ . The CI only compiles in debug for one configuration and only when a commit is done on the master.; AND a lot of failures just happen because of timeouts. So the readings are uncomfortable, to say the least. So This PR simply enable assertions in release mode (overriding the flags) and should show where the assertions happen,. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4496:135,failure,failures,135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4496,3,['failure'],['failures']
Deployability,	 2.29	 0.27	 0.08	 0.27	 5.59	....CollisionResponse; 4 	 3.06	 1 	 0.01	 0.06	 0.01	 0 	 0.01	 0.20	....end collision; 3 	 3.07	 9 	 0 	 0.03	 0 	 0 	 0.01	 0.13	...InteractionFF; 3 	 3.08	 2 	 0.19	 1.48	 0.76	 0.18	 1.51	 31.59	...Mechanical; 4 	 3.11	 2 	 0.05	 0.14	 0.06	 0.01	 0.12	 2.53	....ComputeForce; 4 	 3.17	 2 	 0.03	 0.11	 0.04	 0.01	 0.08	 1.68	....ComputeRHTerm; 4 	 3.22	 2 	 0 	 0.02	 0 	 0 	 0 	 0.09	....MBKBuild; 5 	 3.22	 2 	 0 	 0.02	 0 	 0 	 0 	 0.03	.....CG-setSystemMBKMatrix; 4 	 3.22	 2 	 0.06	 1.24	 0.60	 0.16	 1.21	 25.25	....MBKSolve; 5 	 3.25	 2 	 0.04	 1.20	 0.57	 0.16	 1.14	 23.86	.....CG-Solve; 4 	 3.94	 2 	 0 	 0.02	 0 	 0 	 0.01	 0.15	....UpdateVAndX; 2 	 4.60	 1 	 0.01	 0.03	 0.01	 0 	 0.01	 0.23	..UpdateSimulationContextVisitor; 2 	 4.62	 1 	 0.02	 0.07	 0.02	 0.01	 0.02	 0.46	..UpdateMapping; 3 	 4.62	 26.67	 0 	 0.02	 0 	 0 	 0 	 0.05	...MappingVisitor - processMechanicalMapping: unnamed; 2 	 4.64	 1 	 0.12	 0.44	 0.14	 0.03	 0.14	 3.02	..UpdateBBox; 3 	 4.64	 1 	 0.01	 0.07	 0.02	 0 	 0.02	 0.35	...BoundingBoxVisitor - ProcessTopDown: root; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaGeneralDeformable; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMiscCollision; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaImplicitOdeSolver; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMeshCollision; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaTopologyMapping; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaLoader; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: visualStyle1; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: defaultPipeline1; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bruteForceBroadPhase1; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bVHNarrowPhase1; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: Proximity; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: Response; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....Compu,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089:3555,Update,UpdateBBox,3555,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089,1,['Update'],['UpdateBBox']
Deployability, 	 0.04	......Compute BoundingTree: lineCollisionModel3; 6 	 0.15	 1 	 0 	 0.09	 0 	 0 	 0 	 0.03	......Compute BoundingTree: pointCollisionModel3; 5 	 0.23	 1 	 0.01	 0.04	 0.01	 0 	 0.01	 0.17	.....BroadPhase; 5 	 0.25	 1 	 1.88	 5.32	 2.58	 0.36	 2.58	 31.60	.....NarrowPhase; 4 	 2.83	 1 	 0.70	 4.50	 1.95	 0.89	 1.95	 23.87	....CollisionResponse; 4 	 4.79	 1 	 0.01	 0.03	 0.01	 0 	 0.01	 0.15	....end collision; 3 	 4.81	 1 	 1.75	 5.13	 3.12	 0.54	 3.12	 38.16	...Mechanical; 4 	 5.02	 1 	 0.12	 0.24	 0.14	 0.02	 0.14	 1.70	....ComputeForce; 4 	 5.16	 1 	 0.08	 0.27	 0.10	 0.01	 0.10	 1.17	....ComputeRHTerm; 4 	 5.26	 1 	 0 	 0.02	 0 	 0 	 0 	 0.04	....MBKBuild; 5 	 5.26	 1 	 0 	 0.01	 0 	 0 	 0 	 0.02	.....CG-setSystemMBKMatrix; 4 	 5.26	 1 	 1.38	 4.15	 2.11	 0.34	 2.11	 25.84	....MBKSolve; 5 	 5.35	 1 	 1.29	 3.98	 2 	 0.34	 2 	 24.46	.....CG-Solve; 4 	 7.37	 1 	 0.01	 0.04	 0.01	 0 	 0.01	 0.09	....UpdateVAndX; 2 	 7.93	 1 	 0.01	 0.05	 0.02	 0 	 0.02	 0.19	..UpdateSimulationContextVisitor; 2 	 7.96	 1 	 0.02	 0.23	 0.03	 0.01	 0.03	 0.32	..UpdateMapping; 3 	 7.96	 26.51	 0 	 0.01	 0 	 0 	 0 	 0.03	...MappingVisitor - processMechanicalMapping: unnamed; 2 	 7.99	 1 	 0.13	 0.51	 0.18	 0.04	 0.18	 2.26	..UpdateBBox; 3 	 7.99	 1 	 0.01	 0.05	 0.01	 0 	 0.01	 0.17	...BoundingBoxVisitor - ProcessTopDown: root; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaGeneralDeformable; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMiscCollision; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaImplicitOdeSolver; 4 	 8 	 1 	 0 	 0.01	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMeshCollision; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaTopologyMapping; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaLoader; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: visualStyle1; 4 	 8 	 1 	 0 	 0.02	 0 	 0 	 0 	 0 	....ComputeBBox: defaultPipeline1; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bruteForceBroadPhase1; 4 	 8 	 1 	 0 	 ,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089:19123,Update,UpdateSimulationContextVisitor,19123,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089,1,['Update'],['UpdateSimulationContextVisitor']
Deployability," (since they cannot be stationary). Actually, the collision pipeline check if an object is stationary based on the value of `isSimulated()`. It means it's up to the user to set this Data. If it not done, the object is considered moving and goes to the group manager. The ODE solver is not found, so it is skipped:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L91; And collision response is not created.; In this PR, this case is not skipped and a collision response is created. A scene test has been added to check collision is working with a stationary object. # Fix freeze; This freeze happened before #2047.; It is due to an infinite loop here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L235; This happened because a map was not updated after some merge operations. And we relied on the value in the map, for example here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L137. # Fix crash detected in #2047. ## Before #2047; The scene freezes always at the same time. In #2067 I explain that the simulation is deterministic. Now that the freeze is fixed, we can notice a crash still occurs, but after the time step of the freeze. ## After #2047 ; A crash occurs, but not always at the same time step. This is because the simulation is no longer deterministic (because of #2047). . Conclusion: #2047 revealed this crash, but was not the cause. It means that a non-deterministic simulation is not a source of crash. ## Fix; The crash is fixed also by updating the values of the map, similarly to the freeze fix. ______________________________________________________. By submitting this pull re",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2076:2343,update,updated,2343,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076,1,['update'],['updated']
Deployability, **Full list update: in the 3 PR**; - [SofaBaseCollision] ; - CapsuleModel; - [SofaBaseMechanics]; - DiagonalMass; - MechanicalObject; - SubsetMapping; - UniformMass; - [SofaBaseTopology] ; - PointSetGeometryAlgorithms; - [SofaBaseVisual] ; - VisualModelImpl; - [SofaBoundaryCondition]; - AffineMovementConstraint; - ConstantForceField; - EdgePressureForceField; - FixedConstraint; - FixedPlaneConstraint; - FixedTranslationConstraint; - HermiteSplineConstraint; - LinearForceField; - LinearMovementConstraint; - LinearVelocityConstraint; - OscillatingTorsionPressureForceField; - ParabolicConstraint; - PartialLinearMovementConstraint; - PatchTestMovementConstraint; - ProjectDirectionConstraint; - ProjectToLineConstraint; - ProjectToPlaneConstraint; - ProjectToPointConstraint; - QuadPressureForceField; - SurfacePressureForceField; - TaitSurfacePressureForceField; - TrianglePressureForceField; - [SofaConstraint]; - DistanceLMConstraint; - DOFBlockerLMConstraint; - FixedLMConstraint; - UncoupledConstr,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1223:1007,update,update,1007,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1223,2,"['Patch', 'update']","['PatchTestMovementConstraint', 'update']"
Deployability," , dt);; gnode->execute ( beh );; sofa::helper::AdvancedTimer::stepEnd(""BehaviorUpdatePositionVisitor"");; ```; is now in a function:; ```cpp; void DefaultAnimationLoop::behaviorUpdatePosition(const core::ExecParams* params, const SReal dt) const; {; sofa::helper::ScopedAdvancedTimer timer(""BehaviorUpdatePositionVisitor"");; BehaviorUpdatePositionVisitor beh(params, dt);; gnode->execute(beh);; }; ```; In the end, the pipeline is easier to read:; ```cpp; sofa::core::MechanicalParams mparams(*params);; mparams.setDt(dt);. behaviorUpdatePosition(params, dt);; updateInternalData(params);. resetConstraint(params);. beginIntegration(params, dt);; {; collisionDetection(params);. const core::ConstraintParams cparams;; buildConstraintMatrix(cparams);; accumulateMatrixDeriv(cparams);. solve(params, dt);. projectPositionAndVelocity(nextTime, mparams);; propagateOnlyPositionAndVelocity(nextTime, mparams);; }; endIntegration(params, dt);; computeIsolatedForces(params, dt);. updateSimulationContext(params, dt, startTime);; ```. # AnimateVisitor. `AnimateVisitor` is no longer used. It was difficult to read its logic (the visitor called other visitors, it relies heavily on pruning which is easy to miss). Instead, I suggest to explicit all the steps from the `AnimateVisitor` into the `DefaultAnimationLoop`. This is closer to what is done in the `FreeMotionAnimationLoop`. Plus, we can find common steps, which makes the code more consistent. Note also the introduction of `ComputeIsolatedForceVisitor` (see the comments in the code to understand its purpose). # Multithreading. Since `AnimateVisitor` is no longer used, `SolveVisitor` is used instead, providing optional multithreading, i.e. solving each ODE in parallel. Similar to what was done in the `FreeMotionAnimationLoop`. ## Benchmark. Measured on `examples/Component/SolidMechanics/FEM/TetrahedronFEMForceField.scn`. Without parallelism; ```; [INFO] [BatchGUI] 1000 iterations done in 14.7031 s ( 68.0128 FPS).; LEVEL START NUM MIN MAX M",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3959:1244,update,updateSimulationContext,1244,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959,1,['update'],['updateSimulationContext']
Deployability, - 0x7fff29ee1fff com.apple.CoreUtils (6.5 - 650.6) <184C48A4-7F66-395B-81DB-DAA1641383CF> /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils; 0x7fff29ee2000 - 0x7fff29f04fff com.apple.MobileKeyBag (2.0 - 1.0) <0F83FED4-709A-37A0-9E04-EFFD71CB1272> /System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag; 0x7fff29f05000 - 0x7fff29f15fff com.apple.AssertionServices (1.0 - 505.80.1) <A00B802D-7BB8-3F6B-A79D-E9697F7D0ABB> /System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices; 0x7fff29f16000 - 0x7fff29fa2fff com.apple.securityfoundation (6.0 - 55240.40.4) <72AC63B1-0B72-394F-97E8-BA9B114DD0A9> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation; 0x7fff29fa3000 - 0x7fff29facfff com.apple.coreservices.BackgroundTaskManagement (1.0 - 104) <EC15118E-62BD-3C24-A880-3B9B74318B0B> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement; 0x7fff29fad000 - 0x7fff29fb1fff com.apple.xpc.ServiceManagement (1.0 - 1) <FD031028-B702-3909-B2AF-3916404DD4A8> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement; 0x7fff29fb2000 - 0x7fff29fb4fff libquarantine.dylib (119.40.2) <40D35D75-524B-3DA6-8159-E7E0FA66F5BC> /usr/lib/system/libquarantine.dylib; 0x7fff29fb5000 - 0x7fff29fc0fff libCheckFix.dylib (31) <74E17BB2-1A3C-3574-92DD-63ABE39E3FF9> /usr/lib/libCheckFix.dylib; 0x7fff29fc1000 - 0x7fff29fd8fff libcoretls.dylib (169) <B33BEF87-3275-356D-9815-D0E94122D2EB> /usr/lib/libcoretls.dylib; 0x7fff29fd9000 - 0x7fff29fe9fff libbsm.0.dylib (68.40.1) <D71EF121-D4B0-306E-9843-9FAFD558E3A4> /usr/lib/libbsm.0.dylib; 0x7fff29fea000 - 0x7fff2a033fff libmecab.dylib (929.1.1) <1F424683-4213-3594-9BF5-EFCCCDAA83A5> /usr/lib/libmecab.dylib; 0x7fff2a034000 - 0x7fff2a039fff libgermantok.dylib (24) <E40EFA11-E95C-36D1-A8BE-8CA5B1DD179D> /usr/lib/libgermantok.dylib; 0x7fff2a03a000 - 0x7fff2a04ffff libLinearAlgebra.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:37750,A/B,A/BackgroundTaskManagement,37750,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['A/B'],['A/BackgroundTaskManagement']
Deployability," - Handling the case of python script loading a python scene (the current GIL handling implementation will prevent the main python script to get back the interpreter after a python scene runs). ### What this PR brings. Right now, in order to use the SofaPython plugin, you need to create a python scene and run it through a C++ executable (such as runSofa). What I'm proposing here is to simply load the Sofa plugin inside a python script, that's it. A python script could then look like : . ```#!/usr/bin/python2.7; from libSofaPython import Sofa; import argparse. # Parse the arguments; parser = argparse.ArgumentParser(); parser.add_argument(""-n"", ""--number_of_steps"", type=int, help=""Number of steps until the final forces are reach"", default=10); o = parser.parse_args(). sim = Sofa.createSimulation(""DAG""); Sofa.setSimulation(sim); root = Sofa.createNode(""root""). # ...; # some code that creates the scene tree; # ... root.init(). for i in range(number_of_steps):; root.simulationStep(dt); updateConvergencePlot(root). analysis = complexCalculsOnMatrices(root); saveResults(root, analysis); ```. You could even make your own runSofa.py that launches the runSofa GUI (a more complete python runSofa script can be found in an example file provided by this PR) :. ```#!/usr/bin/python2.7. from libSofaPython import Sofa. sim = Sofa.createSimulation(""DAG""); Sofa.setSimulation(sim). root = Sofa.loadScene(""examples/Demos/caduceus.scn""); root.init(). sofa_prefix = ""/home/jnbrunet/sources/sofa/build""; Sofa.GUIManager.setSofaPrefix(sofa_prefix); Sofa.GUIManager.setConfigDirectoryPath(sofa_prefix + ""/config""); Sofa.GUIManager.setScreenshotDirectoryPath(sofa_prefix + ""/screenshots""). Sofa.GUIManager.init(""qglviewer""); Sofa.GUIManager.createGUI(); Sofa.GUIManager.setDimension(800, 600); Sofa.GUIManager.setScene(root). Sofa.GUIManager.MainLoop(root). Sofa.GUIManager.closeGUI(); ```; ### What else this PR brings. **Plugin manager**; One of the problem arising from this feature is the duplicated ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:1407,update,updateConvergencePlot,1407,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,1,['update'],['updateConvergencePlot']
Deployability," /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [WARNING] [ObjectFactory] Class already registered: GearSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec1d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec2d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec3d,double>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [WARNING] [SparseLDLSolver(SparseLDLSolver)] Template is em",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:33803,install,install,33803,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability, 0.09	 0 	 0 	 0 	 0.03	......Compute BoundingTree: pointCollisionModel3; 5 	 0.23	 1 	 0.01	 0.04	 0.01	 0 	 0.01	 0.17	.....BroadPhase; 5 	 0.25	 1 	 1.88	 5.32	 2.58	 0.36	 2.58	 31.60	.....NarrowPhase; 4 	 2.83	 1 	 0.70	 4.50	 1.95	 0.89	 1.95	 23.87	....CollisionResponse; 4 	 4.79	 1 	 0.01	 0.03	 0.01	 0 	 0.01	 0.15	....end collision; 3 	 4.81	 1 	 1.75	 5.13	 3.12	 0.54	 3.12	 38.16	...Mechanical; 4 	 5.02	 1 	 0.12	 0.24	 0.14	 0.02	 0.14	 1.70	....ComputeForce; 4 	 5.16	 1 	 0.08	 0.27	 0.10	 0.01	 0.10	 1.17	....ComputeRHTerm; 4 	 5.26	 1 	 0 	 0.02	 0 	 0 	 0 	 0.04	....MBKBuild; 5 	 5.26	 1 	 0 	 0.01	 0 	 0 	 0 	 0.02	.....CG-setSystemMBKMatrix; 4 	 5.26	 1 	 1.38	 4.15	 2.11	 0.34	 2.11	 25.84	....MBKSolve; 5 	 5.35	 1 	 1.29	 3.98	 2 	 0.34	 2 	 24.46	.....CG-Solve; 4 	 7.37	 1 	 0.01	 0.04	 0.01	 0 	 0.01	 0.09	....UpdateVAndX; 2 	 7.93	 1 	 0.01	 0.05	 0.02	 0 	 0.02	 0.19	..UpdateSimulationContextVisitor; 2 	 7.96	 1 	 0.02	 0.23	 0.03	 0.01	 0.03	 0.32	..UpdateMapping; 3 	 7.96	 26.51	 0 	 0.01	 0 	 0 	 0 	 0.03	...MappingVisitor - processMechanicalMapping: unnamed; 2 	 7.99	 1 	 0.13	 0.51	 0.18	 0.04	 0.18	 2.26	..UpdateBBox; 3 	 7.99	 1 	 0.01	 0.05	 0.01	 0 	 0.01	 0.17	...BoundingBoxVisitor - ProcessTopDown: root; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaGeneralDeformable; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMiscCollision; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaImplicitOdeSolver; 4 	 8 	 1 	 0 	 0.01	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMeshCollision; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaTopologyMapping; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaLoader; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: visualStyle1; 4 	 8 	 1 	 0 	 0.02	 0 	 0 	 0 	 0 	....ComputeBBox: defaultPipeline1; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bruteForceBroadPhase1; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bVHNarrowPhase1; 4 	 8 	 1 	 0 	 0 	 0 ,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089:19206,Update,UpdateMapping,19206,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089,1,['Update'],['UpdateMapping']
Deployability, 0.16	 1 	 0 	 0.10	 0 	 0 	 0 	 0.03	......Compute BoundingTree: pointCollisionModel3; 5 	 0.16	 1 	 0.01	 0.03	 0.01	 0 	 0.01	 0.19	.....BroadPhase; 5 	 0.17	 1 	 1.98	 3.67	 2.62	 0.30	 2.62	 54.67	.....NarrowPhase; 4 	 2.78	 1 	 0.17	 2.29	 0.27	 0.08	 0.27	 5.59	....CollisionResponse; 4 	 3.06	 1 	 0.01	 0.06	 0.01	 0 	 0.01	 0.20	....end collision; 3 	 3.07	 9 	 0 	 0.03	 0 	 0 	 0.01	 0.13	...InteractionFF; 3 	 3.08	 2 	 0.19	 1.48	 0.76	 0.18	 1.51	 31.59	...Mechanical; 4 	 3.11	 2 	 0.05	 0.14	 0.06	 0.01	 0.12	 2.53	....ComputeForce; 4 	 3.17	 2 	 0.03	 0.11	 0.04	 0.01	 0.08	 1.68	....ComputeRHTerm; 4 	 3.22	 2 	 0 	 0.02	 0 	 0 	 0 	 0.09	....MBKBuild; 5 	 3.22	 2 	 0 	 0.02	 0 	 0 	 0 	 0.03	.....CG-setSystemMBKMatrix; 4 	 3.22	 2 	 0.06	 1.24	 0.60	 0.16	 1.21	 25.25	....MBKSolve; 5 	 3.25	 2 	 0.04	 1.20	 0.57	 0.16	 1.14	 23.86	.....CG-Solve; 4 	 3.94	 2 	 0 	 0.02	 0 	 0 	 0.01	 0.15	....UpdateVAndX; 2 	 4.60	 1 	 0.01	 0.03	 0.01	 0 	 0.01	 0.23	..UpdateSimulationContextVisitor; 2 	 4.62	 1 	 0.02	 0.07	 0.02	 0.01	 0.02	 0.46	..UpdateMapping; 3 	 4.62	 26.67	 0 	 0.02	 0 	 0 	 0 	 0.05	...MappingVisitor - processMechanicalMapping: unnamed; 2 	 4.64	 1 	 0.12	 0.44	 0.14	 0.03	 0.14	 3.02	..UpdateBBox; 3 	 4.64	 1 	 0.01	 0.07	 0.02	 0 	 0.02	 0.35	...BoundingBoxVisitor - ProcessTopDown: root; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaGeneralDeformable; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMiscCollision; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaImplicitOdeSolver; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMeshCollision; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaTopologyMapping; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaLoader; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: visualStyle1; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: defaultPipeline1; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bruteForceBroadPhase1; 4 	 4.65,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089:3307,Update,UpdateSimulationContextVisitor,3307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089,1,['Update'],['UpdateSimulationContextVisitor']
Deployability," 8.41 4.16 0.27 4159.02 100 TOTAL; 1 0 1 3.74 8.40 4.16 0.27 4.16 99.98 .Simulation::animate; 2 0 1 0 0 0 0 0 0.02 ..BehaviorUpdatePositionVisitor; 2 0 1 0 0 0 0 0 0.03 ..UpdateInternalDataVisitor; 2 0 1 3.72 8.36 4.13 0.27 4.13 99.39 ..AnimateVisitor; 3 0.01 1 3.72 8.35 4.13 0.27 4.13 99.33 ...Mechanical; 4 0.01 1 0.06 0.18 0.07 0.01 0.07 1.59 ....ComputeForce; 4 0.08 1 0.05 0.14 0.05 0 0.05 1.21 ....ComputeRHTerm; 4 0.13 1 1.66 5.86 1.72 0.14 1.72 41.42 ....MBKBuild; 5 0.13 1 1.65 5.85 1.72 0.14 1.72 41.36 .....CG-setSystemMBKMatrix; 4 1.85 1 1.87 4.79 2.28 0.23 2.28 54.71 ....MBKSolve; 5 1.86 1 1.85 4.74 2.26 0.23 2.26 54.29 .....CG-Solve; ```. **EigenSparseMatrixd**; [INFO] [BatchGUI] 1000 iterations done in 3.76367 s ( 265.698 FPS).; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 3 8.05 3.73 0.49 3726.98 100 TOTAL; 1 0 1 3 8.05 3.73 0.49 3.73 99.98 .Simulation::animate; 2 0 1 0 0 0 0 0 0.02 ..BehaviorUpdatePositionVisitor; 2 0 1 0 0 0 0 0 0.03 ..UpdateInternalDataVisitor; 2 0 1 2.98 8 3.70 0.49 3.70 99.29 ..AnimateVisitor; 3 0.01 1 2.98 8 3.70 0.49 3.70 99.22 ...Mechanical; 4 0.01 1 0.06 0.41 0.07 0.01 0.07 1.83 ....ComputeForce; 4 0.08 1 0.05 0.17 0.05 0.01 0.05 1.36 ....ComputeRHTerm; 4 0.13 1 1.05 4.28 1.37 0.28 1.37 36.71 ....MBKBuild; 5 0.13 1 1.05 4.28 1.37 0.28 1.37 36.64 .....CG-setSystemMBKMatrix; 4 1.50 1 1.78 5.49 2.19 0.29 2.19 58.87 ....MBKSolve; 5 1.51 1 1.77 5.44 2.18 0.29 2.18 58.39 .....CG-Solve; ```. CompressedRowSparseMatrixMat3x3d is faster because it manipulates blocks of 3x3, which is the best strategy in this case. Unfortunately, Eigen manipulates scalars only.; To be fair, EigenSparseMatrixd must be compared to CompressedRowSparseMatrixd. We notice a slight speed up with EigenSparseMatrixd . I wanted to use Eigen::BlockSparseMatrix to have blocks of 3x3, but as an unsupported module, it does not compile with Eigen 3.4. I increased the resolution of the grid: MBKBuild becomes slower than CompressedRowSparseMatrixd, and MB",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2794:2520,Update,UpdateInternalDataVisitor,2520,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2794,1,['Update'],['UpdateInternalDataVisitor']
Deployability," << pair.second << std::endl;; }; ```; As you can notice, it browses the map to display its entries. The keys are pointers to BaseState instances and the values correspond to vector state IDs. Console output BEFORE GenericConstraintSolver::prepareStates execution:; ```; lambda's idMap of constraint params: ; 0xf6297e0->9(V_DERIV); 0xf70af50->9(V_DERIV); 0xf810910->9(V_DERIV); lambda's idMap of constraint solver: ; 0xf6297e0->9(V_DERIV); 0xf70af50->9(V_DERIV); 0xf810910->9(V_DERIV); ```. Console output AFTER GenericConstraintSolver::prepareStates execution:; ```; lambda's idMap of constraint params: ; 0xf6297e0->9(V_DERIV); 0xf70af50->9(V_DERIV); 0xf810910->9(V_DERIV); lambda's idMap of constraint solver: ; 0xf6297e0->9(V_DERIV); 0xf70af50->9(V_DERIV); 0xf810910->9(V_DERIV); 0x108242e0->9(V_DERIV); 0x1086ae50->9(V_DERIV); ```. At least one of the consequence is the following: Knowing that GenericConstraintSolver::applyCorrection propages a ConstraintStoreLambdaVisitor which uses the eventually out-of-date ConstraintParams::m_lambda attribute, a crash can occurs at this moment because a component could tries to access to a lambda state vector which is not registered into ConstraintParams::m_lambda. For instance, it happens in Mapping<In,Out>::applyJ method. I see two solutions to remedy to this issue:; The quick & dirty solution I use for now: force the update of ConstraintParams::m_lambda attribute at the end of GenericConstraintSolver::prepareStates method call, like so:; ```; auto* cParams_no_const = const_cast<core::ConstraintParams*>(cParams); // erk...; cParams_no_const->setLambda(this->getLambda());; ```; A better solution I see would be to transform ConstraintParams::m_lambda into a pointer to GenericConstraintSolver::m_lambdaId. Note: My version of SOFA is commit 5037d556893a78cf5f50efdf09b24539a950bbe4 (December 2019, the 13th). ____________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1270:2784,update,update,2784,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1270,1,['update'],['update']
Deployability," C:/projects/sofa-build/install/include/extlibs/WinDepPack/iconv.h; ....; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SofaOpenglVisual/SofaOpenglVisualConfig.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/SceneCreator.lib; 1>-- Up-to-date: C:/projects/sofa-build/install/bin/SceneCreator.dll; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetAssembledSizeVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetVectorVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneCreator.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneUtils.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/config.h; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets-release.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfigVersion.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfig.cmake; 1>CMake Error at applications/plugins/CImgPlugin/cmake_install.cmake:38 (file):; 1> file cannot create directory:; 1> C:/projects/sofa-build/$C:/projects/sofa-build/install/plugins/CImgPlugin/bin.; 1> Maybe need administrative privileges.; 1>Call Stack (most recent call first):; 1> applications/plugins/cmake_install.cmake:37 (include); 1> cmake_install.cmake:88 (include); 1>; 1>; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: The command ""setlocal; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: ""C:\Program Files\CMake\bin\cmake.exe"" -DBUILD_TYPE=Release -P cmake_install.cmake; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\ID",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:1736,install,install,1736,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,1,['install'],['install']
Deployability," Class already registered: MeshMatrixMass<Vec2d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec3d,double>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [WARNING] [SparseLDLSolver(SparseLDLSolver)] Template is empty; By default SparseLDLSolver uses blocks with a single double (to handle all cases of simulations).; If you are using only 3D DOFs, you may consider using blocks of Matrix3 to speedup the calculations.; If it is the case, add template=""CompressedRowSparseMatrixMat3x3d"" to this object in your scene; Otherwise, if you want to disable this message, add template=""CompressedRowSparseMatrixd"" .; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [Scene",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:34267,install,install,34267,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability, Class already registered: ProjectToPointConstraint<Vec6d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [WARNING] [ObjectFactory] Class al,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:24844,install,install,24844,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability," CompressedRowSparseMatrix . I renamed all the **bloc** words to **block** as well. The previous CRSMatrix could be used as a BaseMatrix (solvers), ConstraintMatrix (iterations) and as a pure CRS itself.; This new CRSMatrix is decomposed in several types:; - CRSGeneric (name to be changed maybe): the pure CRS structure; - CRSMechanical: inheriting/implementing BaseMatrix; - (in a next PR) CRSConstraintMatrix, with the same API as the old CRSMatrix used for ConstraintMatrices (for iterating). Different purposes need different traits (some case would prefer autocompression, etc), so a lot of compile-time options are present. They are called policy.; I needed to change some flags from the Insimo's version to have the same behavior for the tests. So in the future, it could be interesting to see if those changes should be integrated later for more performance (but the tests would need to be changed). For compatibility reasons, the old ""CRSMatrix"" type is an alias on CRSMechanical. In this PR, no change of performance is noted (neither regression or upgrade). Tested on caduceus, TorusFall, solvers scenes and BeamAdapter's 3instruments_collis.scn. Ref:; - https://github.com/InSimo/ISSofa/blob/issofa/framework/sofa/defaulttype/CompressedRowSparseMatrix.h. Courtesy of Insimo (@fjourdes ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3515:1521,upgrade,upgrade,1521,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515,1,['upgrade'],['upgrade']
Deployability," DEV TOTAL PERCENT ID; 3 0.01 1 19.42 28.17 20.23 0.83 20.23 95.51 ...Mechanical; 4 0.02 1 0.86 1.54 0.90 0.06 0.90 4.23 ....ComputeForce; 4 0.91 1 0.70 1.38 0.74 0.05 0.74 3.51 ....ComputeRHTerm; 4 1.66 1 0 0.03 0 0 0 0.02 ....MBKBuild; 5 1.66 1 0 0.02 0 0 0 0.01 .....CG-setSystemMBKMatrix; 4 1.66 1 17.79 26.51 18.56 0.78 18.56 87.62 ....MBKSolve; 5 1.68 1 17.76 26.48 18.53 0.77 18.53 87.49 .....CG-Solve; 4 20.22 1 0.01 0.04 0.01 0 0.01 0.05 ....UpdateVAndX. ```; ## Multi threaded; ```; 8.40483 s ( 118.979 FPS); LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.01 1 5.32 26.82 7.42 1.31 7.42 88.31 ...Mechanical; 4 0.02 1 0.22 0.88 0.32 0.07 0.32 3.80 ....ComputeForce; 4 0.34 1 0.19 0.70 0.28 0.06 0.28 3.29 ....ComputeRHTerm; 4 0.61 1 0 0.07 0.01 0 0.01 0.06 ....MBKBuild; 5 0.61 1 0 0.07 0 0 0 0.03 .....CG-setSystemMBKMatrix; 4 0.62 1 4.87 25.85 6.80 1.22 6.80 80.84 ....MBKSolve; 5 0.64 1 4.84 25.82 6.77 1.22 6.77 80.51 .....CG-Solve; 4 7.42 1 0.01 0.02 0.01 0 0.01 0.13 ....UpdateVAndX. ```. # Comments. - Code is in plugin MultiThreading because of the large amount of boilerplate code for the multi threading management, that would pollute the initial implementation in `HexahedronFemForceField`. I have some ideas to reduce this code, but it requires work on the task scheduler.; - A small part of the code is duplicated from `HexahedronFemForceField`.; - Initially, I wanted to accelerate the execution of the Conjugate Gradient for `GraphScattered` types. It is not possible to propose a generic multi-threaded acceleration for all force fields: for FEM, the most time consuming step in the CG is `ForceField::addDForce`. This is the method to accelerate. The downside is that it has to be done for every force field... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2177:1362,Update,UpdateVAndX,1362,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2177,1,['Update'],['UpdateVAndX']
Deployability," Sofa. I followed the page here: https://www.sofa-framework.org/community/doc/plugins/usual-plugins/cgal-library/. Although it does not tell what version of CGAL to use, or boost as well. Finally, I have been successful to build with the following versions of dependencies.; **Environment:**; Visual Studio 2017 vc 14.1; Sofa Master: commit 9d9100aa1b0acb9363c8ec7c9b5e4b470821bfc1; Boost: 1.71.0; CGAL: CGAL-4.13.2; QT: 5.12.0. ```; INFO] [runSofa] PluginRepository paths = C:/open_prj/sofa/build/mmaster/plugins;C:/open_prj/sofa/build/mmaster/bin/Release; [INFO] [runSofa] DataRepository paths = C:/open_prj/sofa/src/share;C:/open_prj/sofa/src/examples; [INFO] [runSofa] GuiDataRepository paths = C:/open_prj/sofa/src/applications/projects/runSofa/resources;C:/open_prj/sofa/src/applications/sofa/gui/qt/resources; [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:1204,Release,Release,1204,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,1,['Release'],['Release']
Deployability," Visual Studio; 4. I push configurate and first I have a problem with Eigen, but fortunately I could solve it.; 5. I push configurate again and there are two errors, one says: metis_DIR-NOTFOUND and second: GLEW_DIR-NOTFOUND>. **Expected behavior**; < I search for Metis and I found something called metis 5.10.0 but nothing happens, the error can not be solved, in the other hand I don't know nothing about GLEW. Hope you can help me, I attached some pictures, Thanks. >. --------------; ![metis](https://user-images.githubusercontent.com/111095273/184257908-0df394b7-5c8e-4d3a-acf1-bd1ecce53c3a.png); -------------------------------. ### Environment; ![metis1](https://user-images.githubusercontent.com/111095273/184257942-11b4e619-c723-4ab2-b53d-ccdb737e674c.png). **Context**. - System: < NAME AND VERSION - e.g: ""Windows 10"", ""Ubuntu 20.04"", ... >; - Version of SOFA: < INFOS ABOUT THE BRANCH OR BINARIES - e.g: ""master branch at commit 70bb123"", ""v21.06.00 binaries"", ... >; - State: < BUILD OR INSTALL DIRECTORY - e.g: ""Build directory"", ""Install directory"" >. **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. < COPY-PASTE HERE THE RESULT OF THE COMMAND ABOVE >. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. < COPY-PASTE YOUR OUTPUT HERE >. ```. **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE.TXT HERE >. ---------------------------------------------. Thank you for your r",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3213:1402,INSTALL,INSTALL,1402,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3213,1,['INSTALL'],['INSTALL']
Deployability," [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module could not be found. Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ```. This dll is actually present. Please see the snapshot below.; Directory view:; ![image](https://user-images.githubusercontent.com/5296582/83347021-63272b80-a33f-11ea-9cda-e2c209b1be80.png). I am not able to understand what is the issue? Pl",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:2019,Release,Release,2019,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,1,['Release'],['Release']
Deployability," [WARNING] [ObjectFactory] Class already registered: SimpleTesselatedTetraMechanicalMapping<Vec3d,Vec3d>; [WARNING] [ObjectFactory] Class already registered: SimpleTesselatedTetraTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: SubsetTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Tetra2TriangleTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Triangle2EdgeTopologicalMapping; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [WARNING] [ObjectFactory] Class already registered: MouseInteractor<Vec2d>; [WARNING] [ObjectFactory] Class already registered: MouseInteractor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: MouseInteractor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MechanicalStateController<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MechanicalStateController<Vec1d>; [WARNING] [ObjectFactory] Class already registered: RayCollisionModel; [WARNING] [ObjectFactory] Class already registered: RayTraceDetection; [WARNING] [ObjectFactory] Class already registered: SleepController; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [WARNING] [ObjectFactory] Class already registered: ReadState; [WARNING] [ObjectFactory] Class already registered: ReadTopology; [WARNING] [ObjectFactory] Class already registered: GIDMeshLoader; [WARNING] [ObjectFactory] Class already registered: GridMeshCreator; [WARNING] [ObjectFactory] Class already registered: InputEventReader; [WARNING] [ObjectFactory] Class already registered: MeshGmshLoader; [WARNING] [ObjectFactory] Class already registe",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:28336,install,install,28336,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability," ```; ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); sofa::component::constraint::lagrangian::model::UnilateralInteractionConstraint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::addContact(double, sofa::type::Vec<3u, double>, double, int, int, long, long long); sofa::component::collision::response::contact::FrictionContact<sofa::component::collision::RigidDistanceGridCollisionModel, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::createResponse(sofa::core::objectmodel::BaseContext*); sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionResponse(); sofa::simulation::PipelineImpl::computeCollisionResponse(); sofa::simulation::CollisionVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::grap",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3533:1406,Pipeline,PipelineImpl,1406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3533,1,['Pipeline'],['PipelineImpl']
Deployability," `applications/plugins/SofaNewmat/extlibs` | type inconnu | Not built by default. TODO: plugin to be externalized (#1442 ) |; | CImg | header-only | `applications/plugins/CImgPlugin/extlibs` | CeCILL-C / CeCILL | OK |; | csparse | static | `Sofa/Component/LinearSolver/Direct/extlibs` | **no license file** | Plugin to be externalized. WIP : #4258 |; | metis | static | `Sofa/Component/LinearSolver/Direct/extlibs` | Apache v2 | Externalize metis dependency : #4266 (waiting for merge) |; | gtest | shared | `Sofa/framework/Testing/extlibs` | BSD-3-Clause | Externalize ? |; | cxxopts | header-only | `Sofa/GUI/Common (fetched from GitHub)` | MIT | Add to possibility to use external dependency and prevent from fetching: Fixed in #4273 |; | libQGLViewer | shared | `Sofa/GUI/Qt` | GPL | Find or use embedded code (find module being fixed in #4290) |. The actions we should take to make our code compatible for the conda package on conda-forge are:; 1. Fix the missing licenses files (points in bold); 2. Avoid all static libraries. For point 2, we are not concerned by miniFlowVR and newmat, as we do not compile the corresponding plugins for the conda package, at least for now. Before considering any action on these two, do the SofaDistanceGrid and SofaNewmat plugins are still used and planned to be maintained in future releases ?. Regarding other static libs (TinyXML, csparse and metis), could we consider to switch to an external dependency instead ? For TinyXML, the current behavior is to first look for an external package, and fallback to embedded version if unavailable. This looks reasonable at first, but shouldn't we switch to fully externalized versions for maintainability ?. Last point, we were also advised to use external dependency for some header-only libraries, especially when they are already packaged in conda-forge. Could we consider also to use externalized versions for some of these (the ones easily available as external packages), such as json nlohmann and cxxopts ?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4221:2257,release,releases,2257,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4221,1,['release'],['releases']
Deployability," `make install`). Nothing is breaking BUT dependency problems may arise.; Using package subdirs and relocatable plugins will force us to define dependencies correctly because there will be no more magically accessible parts of SOFA. You will no longer be able to `#include` a file from a package not loaded with `find_package`. ## Important changes. ### [[All] CLEAN extlibs integration and install](https://github.com/sofa-framework/sofa/commit/40669c610100a67f46b1405a972b39fe13291eba); - extlib headers are now installed in include/extlibs; - Windows dependency pack headers are now installed in include/WinDepPack; - SOFA now always tries to `find_package` an extlib before using the embedded one; - header-only extlibs too are now easier to override (see extlibs/CMakelists.txt); - **One question remains**: is extlibs/SuiteSparse needed?. ### [[CMake] Install includes in package subdirs](https://github.com/sofa-framework/sofa/commit/68bef4fec16a410007163c5720a5b2ce003ac478); Install module headers in a subdirectory named after their package (SofaGeneral, SofaMisc, SofaFramework, ...). This permits to have clean include directories and thus prevents `find_package` from giving access to unwanted foreign headers.; e.g. doing `find_package(SofaFramework)` will NOT be sufficient to `#include <SofaSomething/anything.h>` (you will get a file not found error).; I think it is way easier to understand that a `find_package` is missing when `#include` fails with ""file not found"" error (at write time if you have a good IDE, at build time otherwise) than with link error (at build time).; Moreover, it will be easier to understand what package is needed for a module by navigating in the include directory.; More details in commit message. ### [[CMake] Make plugins relocatable](https://github.com/sofa-framework/sofa/commit/5b0585f9ad2884cb5462884dffd711ae4d6f2266); **THIS FEATURE IS OPTIONAL**. See the RELOCATABLE parameter of sofa_generate_package.; When building and installing SOFA with p",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:1083,Install,Install,1083,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,1,['Install'],['Install']
Deployability," already registered: ExtraMonitor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ExtraMonitor<Vec6d>; [WARNING] [ObjectFactory] Default template for class Monitor already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: Monitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: Monitor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: Monitor<Vec6d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [WARNING] [ObjectFactory] Class already registered: TopologicalChangeProcessor; [WARNING] [ObjectFactory] Class already registered: TopologyChecker; [WARNING] [ObjectFactory] Default template for class TopologyBoundingTrasher already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: TopologyBoundingTrasher<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [WARNING] [ObjectFactory] Class already registered: GearSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec1d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatri",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:32304,install,install,32304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability," an existing ""Intersection"", e.g MinProximityIntersection and MeshMinProximityIntersection, which add triangles, etc methods to MinProximityIntersection. Note that even if it is called ""Intersection"" it is not a ""Intersection"" 🤪; There is kind of mechanism with a IntersectorCreator/IntersectorFactory which does the ""plugin"" automatically.; The problem is that the intersector gets a pointer to its intersection at the load-time (when the dll is loaded).; The intersector needs the intersection to get alarm/contact distance (defined for all Intersection) or custom parameters (useSurfaceNormal for MinProximityIntersection). **Consequence:** if there are multiple simulation (in multiple thread) in the same time, a different thread will get a pointer to an other Intersection while doing its intersect code. In the end, this PR modifies all the intersect/canIntersect functions to get the intersection method (as if they were static functions in reality) and avoid race conditions. The pipeline needs also to be modified. [The first version of this branch was using a IntersectionParameters storing alarm, contact distance and given as const ref, but it could not handle custom parameters]. Still need to be done:; - ~~compat/warnings, etc~~; - all broad/narrow phases to be modified (further PR). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4583:1321,pipeline,pipeline,1321,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4583,1,['pipeline'],['pipeline']
Deployability," configuration: ""Release""; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/glew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/glut.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/glxew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/wglew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/iconv.h; ....; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SofaOpenglVisual/SofaOpenglVisualConfig.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/SceneCreator.lib; 1>-- Up-to-date: C:/projects/sofa-build/install/bin/SceneCreator.dll; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetAssembledSizeVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetVectorVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneCreator.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneUtils.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/config.h; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets-release.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfigVersion.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfig.cmake; 1>CMake Error at applications/plugins/CImgPlugin/cmake_install.cmake:38 (file):; 1> file cannot create directory:; 1> C:/projects/sofa-build/$C:/projects/sofa-build/install/plugins/CImgPlugin/bin.; 1> Maybe need administrative privileges.; 1>Call Stack (most recent call first):; 1> applications/plugi",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:1196,install,install,1196,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,1,['install'],['install']
Deployability," const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #12 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #13 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #14 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #15 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; ```. Same issue on windows with up to date version. Collapse o",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2057:2473,Release,Release,2473,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057,1,['Release'],['Release']
Deployability," double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ""_readImage(char const*)"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ""ImageIO_alloc(unsigned long)"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ""CGAL::Image_3::private_read(point_image*)"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ld: symbol(s) not found for architecture x86_64; ```. This file is only included if the image plugin is activate",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/352:1361,update,update,1361,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/352,1,['update'],['update']
Deployability, report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT(Error) ;; .... ; }; }; }; ```. This PR will generate a lot of new test failure... that are either real failure that deserve investigation or ; tests that was previously simply previously ignoring error & warning messages; . CHANGELOG for @hugtalbot & @guparan :; - TestMessageHandler.cpp implements a new & robust way to connect msg_* message to test failure ; - TestMessageHandler_test.cpp implements test for TestMessageHandler. ; - Sofa_test is updated to use the new TestMessageHandler where msg_error generates test failures ; - All the existing tests have been changed to use the new API & removed the old one. ; - MeshSTL.cpp replace a std:cerr by a msg_error so that FIX the corresponding failing test.; - Message.cpp adds a way to convert message type to string.; - updates externs/gtest to a fresh checkout. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures. (This PR cannot do that...read my comment about that). ; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old.; - [ ] #237 should fix most of the newly failing tests. #237 should be merged right after this PR. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:2770,update,updated,2770,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,2,['update'],"['updated', 'updates']"
Deployability," sofa libraries directory (e.g. the build/install directory). This in turn will be hiding the system binaries when we try to link our project to Sofa, generating the following CMake warnings for every targets that depends on Sofa:. ```; Cannot generate a safe runtime search path for target MyProject; because files in some directories may conflict with libraries in implicit; directories:. runtime library [libGLEW.so.2.1] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_filesystem.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_program_options.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_thread.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_date_time.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_chrono.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_system.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_atomic.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; ```. Any good reason why we are doing this? Maybe @guparan has an idea?. I understand the use of copying dependencies when **packaging** Sofa, but not for the install command which already has the dependency installed on the system. This is polluting my projects compilation output :-). ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1153:1236,install,install,1236,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1153,6,['install'],"['install', 'installed']"
Deployability," to unwanted foreign headers.; e.g. doing `find_package(SofaFramework)` will NOT be sufficient to `#include <SofaSomething/anything.h>` (you will get a file not found error).; I think it is way easier to understand that a `find_package` is missing when `#include` fails with ""file not found"" error (at write time if you have a good IDE, at build time otherwise) than with link error (at build time).; Moreover, it will be easier to understand what package is needed for a module by navigating in the include directory.; More details in commit message. ### [[CMake] Make plugins relocatable](https://github.com/sofa-framework/sofa/commit/5b0585f9ad2884cb5462884dffd711ae4d6f2266); **THIS FEATURE IS OPTIONAL**. See the RELOCATABLE parameter of sofa_generate_package.; When building and installing SOFA with plugins - internal (in applications/plugins) or external (included with SOFA_EXTERNAL_DIRECTORIES) - the plugins will not be mixed with SOFA anymore.; Instead, they will be installed in their own directory under `<install_prefix>/plugins`.; More importantly, they will be relocatable which means they will behave like if they were built out-of-SOFA.; Principal advantage: we will be able to get redistributable plugin binaries through a classic SOFA build. . ### [Defrost binaries changes for a better install, specifically on MacOS](https://github.com/sofa-framework/sofa/commit/22f3c14a25bf879143fb58403a34d569e8ab727f); - [CMake] FIX install: SofaMiscCollision, SofaDistanceGrid, SofaImplicitField; - [CMake] FIX install on MacOS: differentiate SOFA_BUILD_RELEASE_PACKAGE and SOFA_BUILD_APP_BUNDLE; - [SofaMacros] ADD backward compatibility for INCLUDE_INSTALL_DIR; - [SofaMacros] ADD EXAMPLE_INSTALL_DIR to sofa_create_package; - [SofaMacros] Improve sofa_set_python_directory macro; - [SofaPython] Wider dir search for env loading; - [SofaGuiQt] Remove VSync message; - [package.cmake] Do not force CMAKE_BUILD_TYPE + Enable more plugins. ### [[DiffusionSolver] MOVE from image/extlibs to ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:2272,install,installed,2272,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,1,['install'],['installed']
Deployability," { ; return ""CustomName;; }; ```. Removal of nullptr in className, templateName, typeName; ----------------------------------------------------------------------------; In Base.h the className, templateName, typeName are static templated function with the templated type also provided as a parameter (and nullptr if not provided). If think that having the parameter duplicating the template one is not good as it is misleading on the purpose of the function.; In the following example ; ```cpp; MyObject* ptr;; Base::className(ptr); ; ```; You don't see this is a templated method and you have no idea what 'ptr' is for, and you don't even know if putting a nullptr will work or not. ; Using the templated only syntax is more clear on the role of the function; ```cpp; Base::className<MyObject>(); ; ```; Or if you have an object instance; ```cpp; Base::className<declspec(obj)>(); ; ```. Most common code update pattern; ============================; The most common compilation problem you will encounter with non updated external plugin is related to the overriding of getTemplateName or templateName() method. This method is now now considered as final and thus it is not possible to override it anymore. ; To update old code like this: ; ```cpp; MyClass : public BaseObject; virtual std::string getTemplateName() const { return templateName(); } ; static std::string templateName(const CapsuleCollisionModel<DataTypes>* = nullptr); {; return DataTypes::Name();; }; ```; You can remove the code as the default name generation mecanisme can handle that for you automatically using the ""Name"" . . In the case if your DataTypes does not have a Name() function or if some of the class template parameters should not be exposed as runtime template then you need to implement your custom naming scheem by implementing the following function; ```cpp; static const std::string CustomTemplateName(); { ; return ""CustomName"";; }; ```. ______________________________________________________; <!--- Please lea",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1283:3219,update,update,3219,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1283,2,['update'],"['update', 'updated']"
Deployability,"""); root.addObject(""BruteForceBroadPhase""); root.addObject(""BVHNarrowPhase""); root.addObject(""DefaultContactManager""); root.addObject(; ""LocalMinDistance"",; alarmDistance=5.0,; contactDistance=0.5,; ). node_1 = root.addChild(""child_1""); node_1.addObject(""MechanicalObject"", position=[0, 0, 0] * 5). node_2 = root.addChild(""child_2""); node_2.addObject(""MechanicalObject"", position=[1, 1, 1] * 5). if case == TestCase.ONE_MODEL:; node_1.addObject(""PointCollisionModel""); elif case == TestCase.TWO_MODELS:; node_1.addObject(""PointCollisionModel""); node_2.addObject(""PointCollisionModel""); elif case == TestCase.NONE:; pass. return node_1, node_2. if __name__ == ""__main__"":; simulation = SimulationHandler(). for i in range(5000):; simulation.step(); simulation.reload(case=TestCase.NONE). for i in range(5000):; simulation.step(); simulation.reload(case=TestCase.ONE_MODEL). for i in range(5000):; simulation.step(); simulation.reload(case=TestCase.TWO_MODELS); ```. No components of the collision pipeline:; ![image](https://user-images.githubusercontent.com/29635054/191464004-4a820fde-efa7-4e3f-b448-a3f734daf367.png); -> No memory increase, even with two collision models. NewProximity; ![image](https://user-images.githubusercontent.com/29635054/191463963-c581e5ce-e315-401c-b9ed-1786c27b66c1.png); -> Some memory increase with one and no collision models, STRONG increase with two collision models. LocalMinDistance; ![image](https://user-images.githubusercontent.com/29635054/191464146-0e656a0d-8850-4b43-bdd3-b1a478fd4f14.png); -> Some memory increase with one and no collision models, STRONG increase with two collision models. As you can see, there is a memory increase with no collision models and one collision model,; but with two collision models, the increase is much stronger. This is why I suspect the leak is somewhere in the pipeline, not the; collision models themselves. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 20.04; - Version",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318:2307,pipeline,pipeline,2307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318,1,['pipeline'],['pipeline']
Deployability,"""If you have a version older than 2.7.4, it is highly advisable to upgrade.""; See https://github.com/git-for-windows/git/wiki/FAQ. Plus: it adds **unzip** which is needed for Windows dependency pack.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/234:67,upgrade,upgrade,67,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/234,1,['upgrade'],['upgrade']
Deployability,"# Problem; After updating Sofa source code, you got; `; error: variable has incomplete type 'void'; void SOFA_SOFAEIGEN2SOLVER_API initSofaEigen2Solver();""; `; (or something similar e.g with SOFA_SOFASIMULATIONCOMMON_API , etc). # Why?; While processing the pluginization, macro and config.h files are being rewritten/cleaned to follow the guidelines on Sofa's packaging. So old generated files from cmake's configuration step can mess up with the new ones (compiler does not know which config.h to include and so on). # Solution; Delete the include directory located at the root of your build directory, and configure cmake again. Deletion will clean up everything, and cmake will generate the new config.h.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1670:408,configurat,configuration,408,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1670,1,['configurat'],['configuration']
Deployability,"# Split all pipeline steps into smaller functions. Each step of the animation loop now corresponds to a function. For example, the following code:; ```cpp; sofa::helper::AdvancedTimer::stepBegin(""BehaviorUpdatePositionVisitor"");; BehaviorUpdatePositionVisitor beh(params , dt);; gnode->execute ( beh );; sofa::helper::AdvancedTimer::stepEnd(""BehaviorUpdatePositionVisitor"");; ```; is now in a function:; ```cpp; void DefaultAnimationLoop::behaviorUpdatePosition(const core::ExecParams* params, const SReal dt) const; {; sofa::helper::ScopedAdvancedTimer timer(""BehaviorUpdatePositionVisitor"");; BehaviorUpdatePositionVisitor beh(params, dt);; gnode->execute(beh);; }; ```; In the end, the pipeline is easier to read:; ```cpp; sofa::core::MechanicalParams mparams(*params);; mparams.setDt(dt);. behaviorUpdatePosition(params, dt);; updateInternalData(params);. resetConstraint(params);. beginIntegration(params, dt);; {; collisionDetection(params);. const core::ConstraintParams cparams;; buildConstraintMatrix(cparams);; accumulateMatrixDeriv(cparams);. solve(params, dt);. projectPositionAndVelocity(nextTime, mparams);; propagateOnlyPositionAndVelocity(nextTime, mparams);; }; endIntegration(params, dt);; computeIsolatedForces(params, dt);. updateSimulationContext(params, dt, startTime);; ```. # AnimateVisitor. `AnimateVisitor` is no longer used. It was difficult to read its logic (the visitor called other visitors, it relies heavily on pruning which is easy to miss). Instead, I suggest to explicit all the steps from the `AnimateVisitor` into the `DefaultAnimationLoop`. This is closer to what is done in the `FreeMotionAnimationLoop`. Plus, we can find common steps, which makes the code more consistent. Note also the introduction of `ComputeIsolatedForceVisitor` (see the comments in the code to understand its purpose). # Multithreading. Since `AnimateVisitor` is no longer used, `SolveVisitor` is used instead, providing optional multithreading, i.e. solving each ODE in parallel. Simila",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3959:12,pipeline,pipeline,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959,3,"['pipeline', 'update']","['pipeline', 'updateInternalData']"
Deployability,"## Main discussions. Stéphane: building matrices, vectors, to work with SciPy; Matthieu: Numpy is able to access the memory directly (there are examples). There are some Python modules in Compliant with examples to assemble matrices, etc. Components in Python (Stéphane); ""Trash"" code, not clean, way to go to C++. Forcefield. Need to put breakpoints to interact with the scene from Python console. Our Python needs:; - Create scene easily; - Prototype components; - Matlab aspect. Matthieu: 90% of Datas are binded in Python, special cases need a binding. To sum up, we already have what we need, we just don't know how to work with everything. Besides technical aspects, what we need is a step to step tutorial and more examples. . --> Update online documentation to add Numpy; --> Add a doc for newcomers: right now it is very hard to enter in SOFA with Python (no doc). Start with step by step tutorials and create a Python version of each step. ## Other discussions: performances. ### Pypy. x100 perf but big big cost (recode everything: plugin, bindings, ...). ### Cython. ability to code in Python and get C++ code generation; we can keep the current plugin but we wont gain perf; optimizes some small algos; ability to manually release the GIL (lock); ability to connect to the current VM; adds a step of compilation using ""CIMPORT"" but it must have compilo + headers and libs Sofa. ### Problem of version 2.7 vs 3. Current plugin renamed SofaPython27; SofaPython passes python 3.0. ### How do you get to use Python?. Stéphane: Making XML optional?; Matthieu: python is not just a loader, there is a binding too; As said before, we have to use more Python in the tutorials (doc, website ...). ____________________________________. Referee:; @bcarrez . Interested people:; @matthieu-nesme ; @damienmarchal ; @etienneschmitt ; @bruno-marques ; @chpaulus . If you are interested please tell it.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/23:738,Update,Update,738,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/23,2,"['Update', 'release']","['Update', 'release']"
Deployability,"## issofa attachconstraint. ### New features. ### Improvements; - AttachConstraint: add a position, velocity and response factor in order to correct the constraint. ; - AttachConstraint: Add constraint factor per pair of constraint points to release progressively the attach.; - AttachConstraint: needs an initialization of the data constraintFactor, size of this factor should be at least as important as the minimum of the indices. ; - Scenes: parameter constraintFactor is needed for the component in the scene. ### Cleans. ### Bugfixes. ### Moved files. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/501:242,release,release,242,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/501,1,['release'],['release']
Deployability,"### ALL THIS CHANGES MAINLY AFFECT SOFA INSTALL; (basically nothing changes for you if you never do `make install`). Nothing is breaking BUT dependency problems may arise.; Using package subdirs and relocatable plugins will force us to define dependencies correctly because there will be no more magically accessible parts of SOFA. You will no longer be able to `#include` a file from a package not loaded with `find_package`. ## Important changes. ### [[All] CLEAN extlibs integration and install](https://github.com/sofa-framework/sofa/commit/40669c610100a67f46b1405a972b39fe13291eba); - extlib headers are now installed in include/extlibs; - Windows dependency pack headers are now installed in include/WinDepPack; - SOFA now always tries to `find_package` an extlib before using the embedded one; - header-only extlibs too are now easier to override (see extlibs/CMakelists.txt); - **One question remains**: is extlibs/SuiteSparse needed?. ### [[CMake] Install includes in package subdirs](https://github.com/sofa-framework/sofa/commit/68bef4fec16a410007163c5720a5b2ce003ac478); Install module headers in a subdirectory named after their package (SofaGeneral, SofaMisc, SofaFramework, ...). This permits to have clean include directories and thus prevents `find_package` from giving access to unwanted foreign headers.; e.g. doing `find_package(SofaFramework)` will NOT be sufficient to `#include <SofaSomething/anything.h>` (you will get a file not found error).; I think it is way easier to understand that a `find_package` is missing when `#include` fails with ""file not found"" error (at write time if you have a good IDE, at build time otherwise) than with link error (at build time).; Moreover, it will be easier to understand what package is needed for a module by navigating in the include directory.; More details in commit message. ### [[CMake] Make plugins relocatable](https://github.com/sofa-framework/sofa/commit/5b0585f9ad2884cb5462884dffd711ae4d6f2266); **THIS FEATURE IS OPTIONAL**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:40,INSTALL,INSTALL,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,7,"['INSTALL', 'Install', 'install', 'integrat']","['INSTALL', 'Install', 'install', 'installed', 'integration']"
Deployability,"### Description; This PR removes option to apply projective constraints during velocity and/or position propagation visitors, as it makes it unreliable to put projective constraints in child nodes (required when they apply on the DOFs but with a different/subset topology). All codes (solvers and animationloop) must now explicitly call projection operations/visitors before propagations when required (mostly after `OdeSolver::solve())`. This PR is changing the behavior as projective constraints because they are no longer applied at the end of Simulation::init(). To clearly make that visible to calling's code the propagate visitor was renamed to make sure existing codes fail at compilation time. ; To fix that in private/external repos should be easy:; - if projective constraints should not be applied, simply apply the rename to the visitor class; - if projective constraints should be applied, add a MechanicalProject???Visitor first, then rename the existing one. CHANGELOG for @guparan and @hugtalbot ; - [SofaKernel] Change the way all MechanicaVisitor apply projective constraints. This change is breaking the API aand external solver's code need to be updated (see #PR26). ; - ...to finish ....; ___________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [ ] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/216:1166,update,updated,1166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/216,1,['update'],['updated']
Deployability,"### Discussed in https://github.com/sofa-framework/sofa/discussions/2657. <div type='discussions-op-text'>. <sup>Originally posted by **longhathuc** February 2, 2022</sup>; Hi, I'm Long from mimesis. I have tried to build the plugins with recent commit of sofa at https://github.com/mimesis-inria/sofa/ But failed. Sofa build successfully, but for the plugins, this is the error when doing cmake. ```; CMake Error at /home/long/work/install/sofaInstall/lib/cmake/SofaGeneral/SofaGeneralConfig.cmake:40 (find_package):; Found package configuration file:. 1 /home/long/work/install/sofaInstall/plugins/SofaGeneralObjectInteraction/lib/cmake/SofaGeneralObjectInteraction/SofaGeneralObjectInteractionConfig.cmake. but it set SofaGeneralObjectInteraction_FOUND to FALSE so package; ""SofaGeneralObjectInteraction"" is considered to be NOT FOUND. Reason given; by package:. The following imported targets are referenced, but are missing: SofaEngine. Call Stack (most recent call first):; /home/long/work/sperry/CMakeLists.txt:56 (find_package); ```. Do you have any clue which might cause the error?. Thanks </div>. #2621 adds two new dependencies on SofaGeneralEngine and SofaEngine for SofaGeneralObjectInteraction, but its associated cmake.in did not reflect the change.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2658:433,install,install,433,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2658,3,"['configurat', 'install']","['configuration', 'install']"
Deployability,"### Discussed in https://github.com/sofa-framework/sofa/discussions/3438. <div type='discussions-op-text'>. <sup>Originally posted by **younes1010** October 28, 2022</sup>; I want to use this plug-in that integrates OpenCV with SOFA : https://github.com/rouge1616/SofaOpenCVPlugin; When I define the plug-in's directory in EXTERNAL_DIRECTORIES and configure it, it works. But when I tick the name of the plug-in (figure 1) as the second step, and configure it again, Cmake returns this error : (figure 2). Figure (1):. ![Capture2](https://user-images.githubusercontent.com/116725962/198552700-460b7ae4-61d8-45d7-bca9-b2435f11092c.PNG). Figure (2):; ![Capture1](https://user-images.githubusercontent.com/116725962/198552722-81ccbb03-f8c1-43dc-a11f-aecac5035786.PNG). </div>",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3440:205,integrat,integrates,205,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3440,1,['integrat'],['integrates']
Deployability,"### Discussed in https://github.com/sofa-framework/sofa/discussions/3715. <div type='discussions-op-text'>. <sup>Originally posted by **benny2581** March 11, 2023</sup>; Hey,; I am pretty new to sofa and all of coding, programming and basically computer stuff. I have no idea what to do to build sofa on my computer. I downloaded and installed all the programms they recommended on the website right here https://www.sofa-framework.org/community/doc/getting-started/build/windows/; But I honestly don't know what I'm supposed to do next. How to use CMake to add all that stuff? I constantly get errors saying something is invalid.; I looked at the video where a guy shows it all but the main problem appears at the very beginning - he has some folders in his path called src or sofabuild32 but on my device they are nowhere to be found so this is where I get confused. . If anyone could write a step-by-step what to do, or even let me talk to them about how to end my computer suffering, I would be very grateful. Have a wonderful day, ; B.</div>",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3716:334,install,installed,334,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3716,1,['install'],['installed']
Deployability,"### Discussed in https://github.com/sofa-framework/sofa/discussions/5069. <div type='discussions-op-text'>. <sup>Originally posted by **rickysaettone** October 17, 2024</sup>; # The issue:; I can't visualize two of the .stl objects at the same time but I can see them separately.; Not only does the plane disappear while trying to show both, but also the position of the actuator seems transformed and a two vertices appear in a weird position too.; Can anyone help me please? I am starting to learn SOFA and python in general. Location of the objects: [STL.zip](https://github.com/user-attachments/files/17420653/STL.zip). - actuator located in STL/actuador.stl; - plane located in STL/plane.stl. # Version:; - OS: Windows 11 version: 10.0.22631; - SOFA v23.06.00 via the installer; - Python 3.8.10. # The code:; ```python; #-*- coding: utf-8 -*-; import Sofa; #import contoller.py. def createScene(rootNode):; ; # Required plugins; rootNode.addObject('RequiredPlugin', name='Sofa.Component.IO.Mesh') # Needed to use components [MeshSTLLoader]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Mapping.Linear') # Needed to use components [IdentityMapping]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Mass') # Needed to use components [UniformMass]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.StateContainer') # Needed to use components [MechanicalObject]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Visual') # Needed to use components [VisualStyle]; rootNode.addObject('RequiredPlugin', name='Sofa.GL.Component.Rendering3D') # Needed to use components [OglModel]; rootNode.addObject('VisualStyle', displayFlags='showForceFields showBehaviorModels'); ; rootNode.addObject('DefaultAnimationLoop'); rootNode.addObject('DefaultVisualManagerLoop'). # Setting the timestep in seconds; rootNode.dt = 0.01; rootNode.addObject('RequiredPlugin',; pluginName='SoftRobots SofaPython3'); ; # Load the mesh file of the actuator and the plane.; rootNode.addObje",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5084:773,install,installer,773,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5084,1,['install'],['installer']
Deployability,"### Problem. **Description**; < Hi everyone, I followed the instructions to install SOFA software and when Im Generating a VS project (.sln) or a Makefile with CMake I have some troubles because there are some errors just like metis_DIR-NOTFOUND and also GLEW_DIR-NOTFOUND>. **Steps to reproduce**; < 1. I add where my source code is going to be.; 2. I add where my binaries are going to be.; 3. I use Visual Studio; 4. I push configurate and first I have a problem with Eigen, but fortunately I could solve it.; 5. I push configurate again and there are two errors, one says: metis_DIR-NOTFOUND and second: GLEW_DIR-NOTFOUND>. **Expected behavior**; < I search for Metis and I found something called metis 5.10.0 but nothing happens, the error can not be solved, in the other hand I don't know nothing about GLEW. Hope you can help me, I attached some pictures, Thanks. >. --------------; ![metis](https://user-images.githubusercontent.com/111095273/184257908-0df394b7-5c8e-4d3a-acf1-bd1ecce53c3a.png); -------------------------------. ### Environment; ![metis1](https://user-images.githubusercontent.com/111095273/184257942-11b4e619-c723-4ab2-b53d-ccdb737e674c.png). **Context**. - System: < NAME AND VERSION - e.g: ""Windows 10"", ""Ubuntu 20.04"", ... >; - Version of SOFA: < INFOS ABOUT THE BRANCH OR BINARIES - e.g: ""master branch at commit 70bb123"", ""v21.06.00 binaries"", ... >; - State: < BUILD OR INSTALL DIRECTORY - e.g: ""Build directory"", ""Install directory"" >. **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nex",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3213:76,install,install,76,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3213,3,"['configurat', 'install']","['configurate', 'install']"
Deployability,"### Problem. **Description**; After building Sofa from source and running ```cmake --install build/``` there are headers missing for QGLViewer.; The installation also adds some redundant QGLViewer directories to the install path. **Steps to reproduce**; - clone the current Sofa repo; - cd into the cloned folder; - run ```cmake -B build/``` ; - run ```cmake --build build/```; - run ```cmake --install build/```. The last line installs everything into $sofa_dir/build/install/.; For QGLViewer this results in ; 1. an overly long install path:; - ```$sofa_dir/build/install/include/extlibs/QGLViewer/QGLViewer/QGLViewer```; 2. missing headers from libQGLViewer, only the following ones are available, most notably qglviewer.h is missing here:; - ```config.h constraint.h domUtils.h mouseGrabber.h quaternion.h ui_ImageInterface.h ui_VRenderInterface.h vec.h```; ; **Expected behavior**; - All headers for libQGLViewer should be copied to the install directory; - The path for the headers should be something like ```$sofa_dir/build/install/include/extlibs/QGLViewer/include/QGLViewer/*.h``` or ```$sofa_dir/build/install/include/extlibs/QGLViewer/*.h```. ---------------------------------------------. ### Environment. **Context**; This happens on both Linux and Windows but only became critical on Windows when I had tried to use the Sofa provided libQGLViewer in my own project. This could temporarily be fixed by changing my own CMake include path to ```{SOFA_INSTALL_DIR}/../../Sofa/GUI/Qt/libQGLViewer```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4196:85,install,install,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4196,11,['install'],"['install', 'installation', 'installs']"
Deployability,"### Problem. **Description**; BilateralInteractionConstraint doesn't work for me anymore when I upgraded to sofa v21.06. **Steps to reproduce**; v21.06 builds well on my pc.; In the demo/caduceus.scn I set the Mouse left button to “attach object using Bilateral constraint” but I can not grasp the snake using the mouse. (see screenshot attached); ![bilateral_notworking_snake](https://user-images.githubusercontent.com/14253725/142281753-285ebe01-e481-4f43-87d7-51e181d3368e.png). Another example is in my scene i attached the gallbladder model to the fatty tissue behind it using Bilateral constraint, i checked the rendering interactions, which visualize the Bilateral constraint contact pairs using Pink dots. Based on the screenshot, the contact points are correctly visualized but they can still move apart as if no constraints at all. (see screenshot attached). ![bilateral_notworking](https://user-images.githubusercontent.com/14253725/142281781-13222f7d-7843-4a38-b7c2-9e93a40dc6a9.png). **Expected behavior**; In our plugins we have used the following to establish the bilaterial constraints.; _sofa::component::constraintset::BilateralInteractionConstraint<DataTypes>::SPtr ; toolState.m_constraints->addContact(c.normal, c.point[0], c.point[1], distance, index1, index2, c.point[0], c.point[1], 1, c.id);_. The same codes and scene files worked well in sofa **v19.12**, where the bilateral constraints worked as constraining the distances between the contact pairs. ---------------------------------------------. ### Environment. **Context**. - System: Windows 10; - Version of SOFA: branch v21.06.00; - State: Build directory. **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept E",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486:96,upgrade,upgraded,96,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486,1,['upgrade'],['upgraded']
Deployability,"### Problem. **Description**; Hello, thank you for your work. I want to compile Sofa. **Steps to reproduce**; I did all installation steps https://www.sofa-framework.org/community/doc/getting-started/build/linux/ make the same structure as described & clone `git clone -b v21.12 https://github.com/sofa-framework/sofa.git sofa/src`.; After configure cmake gui I got error:. ```; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /media/maxim/big-500/sofa/build/v21.12/install; CMake Deprecation Warning at SofaKernel/modules/Sofa.Config/CMakeLists.txt:80 (message):; Deprecated components are activated (SOFA_WITH_DEPRECATED_COMPONENTS; variable is ON). Using legacy headers is enabled.; Headers from v21.06 are usable, but it is advised to change your code to use the new headers introduced in v21.12.; Adding module Sofa.GL; Adding plugin SofaSimpleFem; Adding plugin SofaRigid; Adding plugin SofaDeformable; Adding plugin SofaObjectInteraction; Adding plugin SofaMeshCollision; Adding plugin SofaEngine; Adding plugin SofaExplicitOdeSolver; Adding plugin SofaImplicitOdeSolver; Adding plugin SofaLoader; Adding plugin SofaGeneralVisual; Adding plugin SofaGraphComponent; Adding plugin SofaGeneralMeshCollision; Adding plugin SofaBoundaryCondition; Adding plugin SofaGeneralAnimationLoop; Adding plugin SofaGeneralDeformable; CMake Warning at /media/maxim/big-500/sofa/build/v21.12/lib/cmake/SofaEigen2SolverConfig.cmake:36 (message):; SofaEigen2Solver has been removed. The package still exists for; compatibility but is empty. Eigen classes were moved to Sofa.LinearAlgebra; and SVDLinearSolver to SofaDenseSolver.; Call Stack (most recent call first):; /media/maxim/big-500/sofa/build/v21.12/lib/cmake/SofaBaseConfig.cmake:35 (find_package); /media/maxim/big-500/sofa/build/v21.12/lib/cmake/SofaGeneralDeformableConfig.cmake:34 (find_package); modules/SofaGeneralDeformable/SofaGeneralDeformable_test/CMakeLists.txt:12 (find_package). Adding ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3184:120,install,installation,120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3184,3,"['Install', 'install']","['Install', 'install', 'installation']"
Deployability,"### Problem. **Description**; I get difficulties to compile SOFA, due to some incompatibilities. **Steps to reproduce**; Compile SOFA with CMake GUI, and run compilation with ninja. ---------------------------------------------. ### Environment. I tried to compile SOFA again , and I get some trouble that was'nt trivial for me. - System: Ubuntu 22.04.1 LTS; - Version of SOFA: SOFA v23.12.99. ###. I get two different troubles :. - First of all, by mistake, I once checked the SOFA_FETCH_SOFAPYTHON3 value in the cmake-gui (I was thinking it was necessary to link SofaPython3 in the good way), and it download the plugin directly in the source code. But, as I already download the SofaPython3 source myself as an external plugins, it create a conflict between the two versions at configuration. . - Also, I get an error during the compilation, because I did'nt disable the SOFA_GUI_QT_ENABLE_QDOCBROWSER value in cmake-gui. What is this feature for ? Maybe it could be better to disable it by default ?. Now everything is working well on my side. Thanks a lot.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4343:781,configurat,configuration,781,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4343,1,['configurat'],['configuration']
Deployability,"### Problem. **Description**; I used to use the following node in my xml file but could not feel any forcefeedback on the haptic device when upgraded to sofa v21.06. The collision detection and collision response still works when haptic devices tools collide with other models in the scene.; And the same xml file worked well in sofa v19.12. _""LCPForceFeedback activate=""1"" forceCoef=""0.25"" tags=""PHANToM 2__omni""_. **Steps to reproduce**; An example scene file can be found here:. [TIPS_haptictool_gallbladder_v2106.txt](https://github.com/sofa-framework/sofa/files/7558079/TIPS_haptictool_gallbladder_v2106.txt). **Expected behavior**; The forcefeedback used to work well in sofa v19.12. ---------------------------------------------. ### Environment. **Context**. - System: Windows 10; - Version of SOFA: v21.06.00 binaries; - State: Build directory. **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. < COPY-PASTE HERE THE RESULT OF THE COMMAND ABOVE >. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. No Error outputs or suspicious outputs has been found. ```. **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE.TXT HERE >. ---------------------------------------------. Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2487:141,upgrade,upgraded,141,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2487,1,['upgrade'],['upgraded']
Deployability,### Problem. **Description**; I've just tried to install last SOFA version with binaries. **Steps to reproduce**; Install SOFA with the .run files and add SofaPython3 plugin. **Expected behavior**; There is an error when I tried to add the plugin. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 22.04.1 LTS; - Version of SOFA: 23.06.00. ### Logs. ```txt. Plugin loading failed (/home/pchaillo/SOFA/v23.06.00/plugins/SofaPython3/lib/libSofaPython3.so): libpython3.8.so.1.0: cannot open shared object file: No such file or directory. ```; **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE.TXT HERE >. ---------------------------------------------. Thank you for your report.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4159:49,install,install,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4159,2,"['Install', 'install']","['Install', 'install']"
Deployability,"### Problem. **Description**; In [TriangularFEMForceField.inl](https://github.com/sofa-framework/sofa/blob/v21.12/modules/SofaMiscFem/src/SofaMiscFem/TriangularFEMForceField.inl#L1022), in `computeForce()`, the `strainDisplacementMatrix` is only updated for the new displacement when the flag `_anisotropicMaterial` is true. Otherwise, the strainDisplacementMatrix that was computed during the initialization in the initLarge() is taken.; That leads to the issue that the following computations of strain and stress use an old version of the strainDisplacementMatrix that does not correspond to the current displacements; I think that in the computeForce-method, the method `computeStrainDisplacement(J, elementIndex, A, B, C)` should be called, no matter if the material is anisotropic or not. **Steps to reproduce**; The `_anisotropicMaterial` flag must be set to false (which is the default). Then, if I print the strainDisplacementMatrix `J` in the computeForce-method, afterwards call `computeStrainDisplacement(J, elementIndex, A, B, C)` and print `J` again, the two outputs differ. That shows that an old, not updated version of the strainDisplacementMatrix is used in the following computations. **Expected behavior**; The strainDisplacementMatrix should always be updated. ---------------------------------------------. ### Environment. **Context**. - System: Windows 10; - Version of SOFA: v21.12 branch at commit [baa0c04] (latest commit)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2704:246,update,updated,246,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2704,3,['update'],['updated']
Deployability,"### Problem. **Description**; In the archive downloaded from https://www.sofa-framework.org/download/, the file metis.h cannot be found. Therefore, it is not possible to include it in a plugin compiled based on the SOFA binaries.; Note that metis.h is found in the latest nightly builds. The difference may come from the move in https://github.com/sofa-framework/sofa/pull/2717. **Expected behavior**; metis.h can be included based on a SOFA v21.12. ---------------------------------------------. ### Environment. **Context**. - System: Windows (but probably all systems); - Version of SOFA: v21.12.00 binaries; - State: ""Install directory""",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2866:622,Install,Install,622,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2866,1,['Install'],['Install']
Deployability,"### Problem. **Description**; RunSofa crash when opening the inspector for any object with a Data<Material> . **Steps to reproduce**; compile sofa, run the default example, double click on visual_snake_body (a MeshOBJLoader). And you got the following traceback:; ```console; sofa::type::Material::operator=(sofa::type::Material const&); sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget::changeMaterial(int); QComboBox::currentIndexChanged(int); QAbstractItemModel::rowsRemoved(QModelIndex const&, int, int, QAbstractItemModel::QPrivateSignal); QAbstractItemModel::endRemoveRows(); QStandardItem::removeRows(int, int); QStandardItemModel::removeRows(int, int, QModelIndex const&); QComboBox::clear(); sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget::readFromData(); sofa::gui::qt::DataWidget::updateWidgetValue(); sofa::gui::qt::ModifyObject::updateTables(); QTabWidget::currentChanged(int); .... ; ```. **Expected behavior**; Not crashing",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3017:820,update,updateWidgetValue,820,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3017,2,['update'],"['updateTables', 'updateWidgetValue']"
Deployability,### Problem. **Description**; Since Glew has been set to mandatory by PR: https://github.com/sofa-framework/sofa/pull/2358 ; some external plugin are not compiling anymore on the CI because Glew is not find. **Steps to reproduce**; Just check this link: https://github.com/sofa-framework/SofaHapticAvatar/runs/7087373200?check_suite_focus=true. **Expected behavior**; Either something is missing in Sofa.Gl install step to package glew or should each pacakge linking to Sofa.Gl also find Glew ?,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3079:407,install,install,407,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3079,1,['install'],['install']
Deployability,"### Problem. **Description**; The console didn't show an error message when there was null distance between two components. **Steps to reproduce**; I used a four-legged robotic model, with each of the legs having two components, a pad at the bottom and the part above (referred to as the extension). The pad and extension were in contact, and gravity was applied. **Expected behavior**; The console should have shown an error message stating, ""Null distance between contact detected"". ---------------------------------------------. ### Environment. **Context**. - System: Windows 10; - Version of SOFA: Version 21.12 binary; - State: Install directory: User home directory. **Command called**. ```txt. runSofa <filename>. ```. **Env vars**; --Unchanged--; ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. Result of the command above is unapplicable, since it is a Windows system. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SofaNonUniformFem.dll; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [WARNING] [Simulation] Default Visual Manager Loop will be used. Add DefaultVisualManagerLoop to the root node of scene file to remove this warning; [INFO] [PluginManager] Loaded plugin: C:/User",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2651:634,Install,Install,634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2651,1,['Install'],['Install']
Deployability,### Problem. **Description**; The scene graph view is not updated when nodes/object are added are simulation time (not responding to add/removal of simulationGraphEvent). . **Expected behavior**; The graph should be always be valid. And even when freezed it should be resynchronized when unfreezed.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2920:58,update,updated,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2920,1,['update'],['updated']
Deployability,"### Problem. **Description**; We have a Sofa Scene with an integrated python script controller. In this python controller we alter the rest position of a mechanical object with template 'CudaVec3f'. In the online documentation of SofaCUDA [https://www.sofa-framework.org/community/doc/plugins/usual-plugins/using-cuda/](url) there is an example C++ code to access and change parameters of a mechanical object when using SofaCUDA, but there is no corresponding python code snippet. When retrieving the rest position value, the python type is a numpy array in contrast to c++, which has no deviceRead and deviceWrite properties. As there is no direct access to cuda in the SofaPython3 wrapper, our question is how reading/writing can be done in SofaPython3. . When using SofaCUDA without the deviceRead and deviceWrite functions, the object in question randomly diverges, when a translation to `rest_position` is applied. ---------------------------------------------. ### Environment. **Context**. - System: ""Ubuntu 20.04""; - Version of SOFA: 23.06 binary version; - State: binary version",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4285:59,integrat,integrated,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4285,1,['integrat'],['integrated']
Deployability,"### Problem. **Description**; When I ran Cmake to build sofa, this error occurred.; <img width=""823"" alt=""image"" src=""https://github.com/sofa-framework/sofa/assets/140193594/80e7f3d2-8061-4dd3-a4ae-4d968ceffad9"">. **Steps to reproduce**; I'm installing SOFA according the link below.; https://github.com/ScheiklP/sofa_env/blob/main/docs/source/setting_up_sofa.rst. **Expected behavior**; I expected my build to be successful. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 22.04.2 LTS; - Version of SOFA: v23.12; - State: Build directory. **Command called**. ```txt. cmake --build sofa/build -j --target install. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.9.18 (main, Sep 11 2023, 13:41:44) ; [GCC 11.2.0]; --- PATH ---; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/snap/bin; --- SOFA_ROOT ---; /bd_targaryen/users/kleelakunwet/sofa/build/install; --- PYTHONPATH ---; --- sys.path ---; ['', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python39.zip', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/lib-dynload', '/bd_targaryen/users/kleelakunwet/.local/lib/python3.9/site-packages', '/bd_targaryen/users/kleelakunwet/miniconda3",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4622:242,install,installing,242,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4622,2,['install'],"['install', 'installing']"
Deployability,"### Problem. **Description**; When I run `cmake --build $FOLDER_TARGET -j --target install`, it failed due to compiler is unable to find `filesystem`. **Steps to reproduce**; I was installing SOFA following instruction from here https://github.com/ScheiklP/sofa_env/blob/main/docs/source/setting_up_sofa.rst; Follow everything from top to ""Compile SOFA"" part at `cmake --build $FOLDER_TARGET -j --target install`. **Expected behavior**; No idea, as it is my first time trying to install it. ---------------------------------------------. ### Environment. **Context**. - System: < Ubuntu 18.04.5 LTS >; - Version of SOFA: I don't really know but below is the code I used for SOFA installation.; ```; git clone https://github.com/sofa-framework/sofa.git $FOLDER_SRC; cd $FOLDER_SRC; git checkout v23.06; cd $FOLDER_SP3; git init; git remote add origin https://github.com/sofa-framework/SofaPython3.git; git pull origin master; git checkout 5a7371616fe8914530d44bf25ea6b724a6b1a08e; ```; - State: < Build directory >. **Command called**. ```txt; FOLDER_TARGET=$HOME/sofa/build; cmake --build $FOLDER_TARGET -j --target install; ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.9.18 (main, Sep 11 2023, 13:41:44) ; [GCC 11.2.0]; --- PATH ---; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/sna",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4527:83,install,install,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527,5,['install'],"['install', 'installation', 'installing']"
Deployability,"### Problem. **Description**; hello, I wanted to use Sofa 23.06.00 in M1 Mac Book Pro ; But I can not use Sofa. This error message indicates:; (have 'x86_64', need 'arm64e' or 'arm64')); I'd like to know the solution.; I want to use Sofa 23.06.00. **Steps to reproduce**; < LIST THE STEPS TO REPRODUCE YOUR PROBLEM HERE >; 1. install anaconda and make virtual environment ; 2. install sofa framework ; 3. define the environment variables ; 4. import Sofa in python. **Expected behavior**; < DESCRIBE WHAT YOU THINK SHOULD HAVE HAPPEN INSTEAD >. Success importing Sofa in python without any error. ---------------------------------------------. ### Environment. **Context**. - System: Mac OS X 14.4.1 (23E224) ; - Version of SOFA:[SOFA_v23.06.00_MacOS.zip](https://github.com/sofa-framework/sofa/releases/download/v23.06.00/SOFA_v23.06.00_MacOS.zip); - State: < BUILD OR INSTALL DIRECTORY - e.g: ""Build directory"", ""Install directory"" >. **Command called**. ```txt. (sofarl) bemore@BeMores-MacBook-Pro site-packages % python ; Python 3.8.19 (default, Mar 20 2024, 15:27:52) ; [Clang 14.0.6 ] :: Anaconda, Inc. on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import Sofa; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; ---------------------------------------; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/__init__.py"", line 140, in <module>; import Sofa.Helper; ImportError: dlopen(/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so, 0x0002): tried: '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SO",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690:326,install,install,326,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690,5,"['INSTALL', 'Install', 'install', 'release']","['INSTALL', 'Install', 'install', 'releases']"
Deployability,"### Problem. **Description**; runSofa does not propagate correctly the key pressed & release event because of the weird use of the the CTRL combination. . **Steps to reproduce**; ```python; import Sofa. class Test(Sofa.Core.Controller):; 	def __init__(self, *args, **kwargs):; 		Sofa.Core.Controller.__init__(self,*args, **kwargs). 	def onKeypressedEvent(self, event):; 		print(""KEY PRESSED"", event). 	def onKeyreleasedEvent(self, event):; 		print(""KEY RELEASED"", event). def createScene(root):; 	root.addObject(Test(name=""Hello"")); ```; Start a simulation and keep pressing CTRL+A key. It will print!; ```console; KEY PRESSED: {...}; KEY RELEASED: {...}; ... /// lot of repetition; KEY PRESSED: {...}; KEY RELEASED: {...}; ```. **Expected behavior**; It should print a single KEY PRESSED & KEY RELEASED.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3384:85,release,release,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3384,5,"['RELEASE', 'release']","['RELEASED', 'release']"
Deployability,"### Problem. Hi all,; First of all i want to thank you for your work, and yours great framework!; Thanks!. **Description**; I want to try run latest version of Sofa-framework, but I got problem with different gcc verions. **Steps to reproduce**; First of all I had installed SOFA by using your precompiled binary file:; `./SOFA_v21.12.00_Linux.run`; after that I run:; `./runSofa-21.12.00`; And I got the errors; ```; ./runSofa-21.12.00 ; ./runSofa-21.12.00: /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by /home/maxim/SOFA/v21.12.00/bin/../lib/libSofa.Helper.so.21.12.00); ./runSofa-21.12.00: /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by /home/maxim/SOFA/v21.12.00/bin/../lib/libSofa.SimulationCore.so.21.12.00); ./runSofa-21.12.00: /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by /home/maxim/SOFA/v21.12.00/bin/../plugins/SofaValidation/lib/../../../lib/libSofa.Type.so.21.12.00); ./runSofa-21.12.00: /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by /home/maxim/SOFA/v21.12.00/bin/../lib/../lib/libSofaBaseMechanics.so.21.12.00); ./runSofa-21.12.00: /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by /home/maxim/SOFA/v21.12.00/bin/../lib/../plugins/SofaUserInteraction/lib/../../../plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so.21.12.00); ./runSofa-21.12.00: /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by /home/maxim/SOFA/v21.12.00/bin/../lib/../plugins/SofaUserInteraction/lib/../../../plugins/SofaDeformable/lib/libSofaDeformable.so.21.12.00); ```; **Expected behavior**; I think It should work, at least. ---------------------------------------------. ### Environment. **Context**. - System: ""Ubuntu 18.04""; - Version of SOFA: SOFA_v21.12.00. **Command called**. ```; gcc --version; gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see th",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3169:265,install,installed,265,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3169,1,['install'],['installed']
Deployability,"### Problem. Hi, ; I added a `MeshROI` to an object, and used mouse interaction to move the object into and out of the ROI.; However, the DataWidget (for example the index values) of `MeshROI` does not update.; Also not on clicking refresh.; Closing the widget and opening it again works as expected.; Reading from the component through SofaPython3 also works as expected. ![image](https://user-images.githubusercontent.com/29635054/201968358-d3133819-46af-4af1-9b72-98c63ea37226.png). ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 20.04; - Version of SOFA: d152f8374bf6faf65d2e385afa78dbd57f365f6c; - State: Install directory. Cheers,; Paul",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3487:202,update,update,202,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3487,2,"['Install', 'update']","['Install', 'update']"
Deployability,"### Problem. I compiled chainHybrid in the sofa tutorial, but an error occurred.; I try to add Rendering3D in CMakeLists for using Rendering3D in chainHybrid.cpp; BUI THE ERROR DIDN'T GO AWAY!. How to import OglModel in SOFA v23. [Visual Studio 2019 SOFA v23.06 C++17 Windows10]; ```console; [ERROR] [Node(visualNode)] Component 'Visual' of type 'OglModel' failed:; Object type OglModel<> was not created; The object 'OglModel' is not in the factory.; This component has been MOVED from SofaOpenglVisual to Sofa.GL.Component.Rendering3D since SOFA v22.06.; To continue using this component you may need to update your scene by adding; <RequiredPlugin name='Sofa.GL.Component.Rendering3D'/>. [ERROR] [Node(visualNode)] Component 'Visual' of type 'BarycentricMapping' failed:; Object type BarycentricMapping<Vec3d,Vec3d> was not created; The object is in the factory but cannot be created.; Requested template : Vec3d,Vec3d; Used template : Vec3d,Vec3d (default); Reason(s) : Data attribute 'output' does not point to a mechanical state of data type 'Vec3d' and none can be found in the parent node context.; Also tried to create the object with the template 'Vec3d,Rigid3d' but failed for the following reason(s):; 1. Data attribute 'output' does not point to a mechanical state of data type 'Rigid3d' and none can be found in the parent node context.; ; [ERROR] [Node(Visu)] Component 'Mapping Visual' of type 'RigidMapping' failed:; Object type RigidMapping<> was not created; The object is in the factory but cannot be created.; Requested template : None; Used template : None; Also tried to create the object with the template 'Rigid2d,Vec2d' but failed for the following reason(s):; 1. Data attribute 'input' does not point to a mechanical state of data type 'Rigid2d' and none can be found in the parent node context.; Also tried to create the object with the template 'Rigid3d,Vec3d' but failed for the following reason(s):; 1. Data attribute 'output' does not point to a mechanical state of dat",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3614:606,update,update,606,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3614,1,['update'],['update']
Deployability,"### Problem. I played around with a pythonized version of the [BeamFEMForceField Example](https://github.com/sofa-framework/sofa/blob/4a5d3322e4155798799fc2c3c68b00ac2f00b154/examples/Components/forcefield/BeamFEMForceField.scn). ```python; node.addObject(; ""CubeTopology"",; nx=num_points,; ny=2,; nz=2,; min=[0, -0.1, -0.1],; max=[length, 0.1, 0.1],; ); node.addObject(""MechanicalObject""); node.addObject(""TriangleCollisionModel""); node.addObject(""BeamLinearMapping"", isMechanical=True); ```. And I observed, that the x-coordinates in the `MechanicalObject` are limited in x, to the absolute value of `nx`.; So for ; ```python; num_points = 100; length = 20; ```; the topology is created correctly (at least the points in the instance look valid), but the `MechanicalObject`'s points in x are in [0, 20], even though the number of points is correct. The same is true for the reverse case; ```python; num_points = 20; length = 100; ```; -> `MechanicalObject`'s points in x are in [0, 100]. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 20.04; - Version of SOFA: 22.06; - State: Install directory",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3047:1126,Install,Install,1126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3047,1,['Install'],['Install']
Deployability,"### Problem. Running `runSofa` in `RelWithDebInfo` configuration in VS 2022 loads the scene properly but leads to nullptr access in `HexahedronFEMForceField::getIndexedElements`. Running `.\runSofa -a` in powershell gives the same crash. ![image](https://user-images.githubusercontent.com/43549821/177644004-c4a691f5-c890-4f66-bf17-5881922af648.png). The scene loads fine and only crashes when one of these 2 buttons are pressed. ![image](https://user-images.githubusercontent.com/43549821/177643932-820290b2-8caa-4b64-b171-8bf1fdeff4ef.png). **Steps to reproduce**; Running the command below.; Everything is configured exactly as shown in the windows building tutorial, except I'm using msvc2019 libraries for qt 5.15.2as msvc2022 libraries are not available. **Expected behavior**; Should not crash. ---------------------------------------------. ### Environment. **Context**. - System: Windows 10 build 21390.2025; - Version of SOFA: commit d300cc9af550afbd5c2167470676a5a7d47381a1 (HEAD -> v21.12, tag: v21.12.00, origin/v21.12_beta, origin/v21.12); - State: Build directory. **Command called**. ```txt. PS D:\github-clones\sofa\build\bin\RelWithDebInfo> .\runSofa.exe -a. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.10.0 (tags/v3.10.0:b494f59, Oct 4 2021, 19:00:18) [MSC v.1929 64 bit (AMD64)]; --- PATH ---; D:\Program Files\OpenSSH;C:\ProgramData\Oracle\Java\javapath;C:\Python310\Scripts\;C:\Python310\;D:\Python27\;D:\Python27\Scripts;D:\Program Files\Oc",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:51,configurat,configuration,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['configurat'],['configuration']
Deployability,"### Problem; Hi,; I discovered a memory leak that seems to be connected to the collision detection pipeline / models. The scene contains 2 nodes with `MechanicalObject` and `PointCollisionModel`.; I repeatedly load and unload the scene, first with no collision models, then one collision model, and then two collision models.; -> each graph has 3 segments. ```python; import Sofa; import Sofa.Core; import Sofa.Simulation; from enum import Enum. class TestCase(Enum):; ONE_MODEL = 0; TWO_MODELS = 1; NONE = 2. class SimulationHandler:; def __init__(self):. self.root_node = Sofa.Core.Node(""root""); self.nodes = createScene(self.root_node, TestCase.NONE); Sofa.Simulation.init(self.root_node). def step(self):; Sofa.Simulation.animate(self.root_node, self.root_node.getDt()). def reload(self, case: TestCase = TestCase.NONE):. Sofa.Simulation.unload(self.root_node); self.root_node = Sofa.Core.Node(""root""); self.nodes = createScene(self.root_node, case); Sofa.Simulation.init(self.root_node). def createScene(root, case: TestCase):; plugins = [; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ]; for plugin in plugins:; root.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root.addObject(""DefaultAnimationLoop""); root.addObject(""DefaultPipeline""); root.addObject(""BruteForceBroadPhase""); root.addObject(""BVHNarrowPhase""); root.addObject(""DefaultContactManager""); root.addObject(; ""LocalMinDistance"",; alarmDistance=5.0,; contactDistance=0.5,; ). node_1 = root.addChild(""child_1""); node_1.addObject(""MechanicalObject"", position=[0, 0, 0] * 5). node_2 = root.addChild(""child_2""); node_2.addObject(""MechanicalObject"", position=[1, 1, 1] * 5). if case == TestCase.ONE_MODEL:; node_1.addObject(""PointCollisionModel""); elif case == TestCase.TWO_MODELS:; node_1.addObject(""PointCollisionModel""); node_2.addObject(""PointCollisionModel""); elif case == TestCase.NONE:; pass. return node_1, node_2. if __name__ == ""__main__"":; simulation = Simul",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318:99,pipeline,pipeline,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318,1,['pipeline'],['pipeline']
Deployability,"### Problem; Hi,; in some previous version of SOFA, the method `doUpdate` of `MeshROI` was triggered in each simulation step, if the `doUpdate` value was set to true. ; Now, it is just a check inside the method, but the method itself is never called. Should the method be registered to some event, or should it actually be called manually on demand?. https://github.com/sofa-framework/sofa/blob/18149f4407fd78359eead7b64ae23470687c40c4/Sofa/Component/Engine/Select/src/sofa/component/engine/select/MeshROI.inl#L582-L587. **EDIT**: The data inside the component is updated, but it does not show in the GUI. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 20.04; - Version of SOFA: d152f8374bf6faf65d2e385afa78dbd57f365f6c; - State: Install directory. Cheers,; Paul",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3484:564,update,updated,564,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3484,2,"['Install', 'update']","['Install', 'updated']"
Deployability,"### Problem; I want to use SofaPython3, and refer to the [page](https://sofapython3.readthedocs.io/en/latest/content/Installation.html) to install. However, I have met some problems: /ERROR] H� Win32 �(nager] Plugin loading failed (D:/SOFA/v23.06.00/bin/SofaPython3.dll): %1; I can't load the .ddl via PluginManager (in the GUI). Please help me...; **Description**; < DESCRIBE YOUR PROBLEM HERE >; ![image](https://github.com/user-attachments/assets/2e24c376-cd2e-4c64-b3f1-a83b2709132e); The system path is shown below:; ![image](https://github.com/user-attachments/assets/54a24f35-3752-47cd-8ae1-8c7c4b5f9997). ---------------------------------------------. ### Environment. **Context**. - System: ""Windows 11""; - CPU: 13th Gen Intel(R) Core(TM) i7-13700; - Version of SOFA: ""v23.06.00 binaries""; - Pybind11 2.9.1; - Python 3.8.19. **Command called**. ```; runSofa -l SofaPython3 . ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4914:117,Install,Installation,117,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4914,2,"['Install', 'install']","['Installation', 'install']"
Deployability,"### Problem; I want to use SofaPython3, and refer to the [page](https://sofapython3.readthedocs.io/en/latest/content/Installation.html) to install. However, I have met some problems:; **Description**; < DESCRIBE YOUR PROBLEM HERE >. **Steps to reproduce**; < LIST THE STEPS TO REPRODUCE YOUR PROBLEM HERE >. **Expected behavior**; < DESCRIBE WHAT YOU THINK SHOULD HAVE HAPPEN INSTEAD >. ---------------------------------------------. ### Environment. **Context**. - System: < NAME AND VERSION - e.g: ""Windows 10"", ""Ubuntu 20.04"", ... >; - Version of SOFA: < INFOS ABOUT THE BRANCH OR BINARIES - e.g: ""master branch at commit 70bb123"", ""v21.06.00 binaries"", ... >; - State: < BUILD OR INSTALL DIRECTORY - e.g: ""Build directory"", ""Install directory"" >. **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. < COPY-PASTE HERE THE RESULT OF THE COMMAND ABOVE >. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. < COPY-PASTE YOUR OUTPUT HERE >. ```. **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE.TXT HERE >. ---------------------------------------------. Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4913:117,Install,Installation,117,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4913,4,"['INSTALL', 'Install', 'install']","['INSTALL', 'Install', 'Installation', 'install']"
Deployability,"### Problem; If points are removed through a `TopologyModifier`, the changes are also propagated to the `reset_position` data in `MechanicalObject`.; Example:; 1. the initial size of the `MechanicalObject` is 20; 2. 2 points are removed e.g. through mouse interaction or a `CarvingManager`.; 3. `reset_position` also decreases to size 18; 4. `simulation.reset()` -> `reset_position` still of size 18 -> the missing points are not added to the `MechanicalObject` to gain its initial size of 20. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 20.04; - Version of SOFA: commit 63214f83051bc8cfe82e49198ac9f711d19fd302; - State: Install directory",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3310:672,Install,Install,672,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3310,1,['Install'],['Install']
Deployability,"### Problem; If there is an `OglShadowShader`, the texture of an `OglModel` is not rendered.; Bonus problem: The direction of a `DirectionalLight` is also flipped. If I take the [OglShadowShader_Directional example](https://github.com/sofa-framework/sofa/blob/master/examples/Components/visualmodel/OglShadowShader_Directional.scn); and set a texture to the OglModel (`<OglModel template=""Vec3d"" name=""VisualModel"" src=""@meshLoader_0"" texturename=""/home/paul/repos/sofa/src/share/textures/seaMonster.png""/>`) shadows are rendered, but the texture is not there. ![image](https://user-images.githubusercontent.com/29635054/182649185-47ef03d8-9f5b-428f-b471-38cdde4cc613.png). ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 20.04; - Version of SOFA: commit f1d96c30de75c586d05ced9ca304fc53eababc7d from Wed Jul 27 13:43:50 2022 +0200; - State: ""Install directory"". **Command called**. ```txt. runSofa examples/Components/visualmodel/OglShadowShader_Directional.scn; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3194:889,Install,Install,889,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3194,1,['Install'],['Install']
Deployability,"### Problem; Issue initially reported by @veruozzi here: https://github.com/mimesis-inria/caribou/discussions/139. **Description**; It is not possible to create a CMake project that depends on the latest SOFA release on MacOS. The following error happen:; ```cmake; CMake Error at /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiTargets.cmake:91 (message):; The imported target ""runSofa"" references the file. ""/Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/bin/runSofa-22.06.00"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""/Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiTargets.cmake"". but not all the files it references. Call Stack (most recent call first):; /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiConfig.cmake:55 (include); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/Bindings.SofaGuiConfig.cmake:36 (find_package); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/SofaPython3Config.cmake:86 (include); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/BindingsConfig.cmake:34 (find_package); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/SofaPython3Config.cmake:86 (include); CMakeLists.txt:5 (find_package); ```. **Steps to reproduce**; 1. Unzip the latest SOFA release for MacOS inside `$SOFA_ROOT`; 2. Create an empty c++ project with the following CMakeLists.txt:; ```cmake; cmake_minimum_required(VERSION 3.20); project(test). find_package(SofaFramework); find_package(SofaPython3). ```; 3. Call cmake using `cmake -DCMAKE_PREFIX_PATH=$SOFA_ROOT .`. **Expected beha",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3485:209,release,release,209,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3485,3,"['install', 'release']","['install', 'installation', 'release']"
Deployability,"### Problem; When passing an `.obj` file and texture `.png` to `OglModel`, they are correctly loaded and mapped. ```; visual_node.addObject(; ""OglModel"",; filename=""mesh.obj"",; texturename=""texture.png"",; ); ```; ![image](https://user-images.githubusercontent.com/29635054/172361782-e1d53384-a84e-4d83-bed1-8fe5eb5d3aa5.png). For the MeshOBJLoader the UV coordinates are ignored. ```. loader = visual_node.addObject(; ""MeshOBJLoader"",; filename=""mesh.obj"",; handleSeams=True,; ). visual_node.addObject(; ""OglModel"",; texcoords=loader.texcoords,; texturename=""texture.png"",; ); ```. ![image](https://user-images.githubusercontent.com/29635054/172362364-2533e6fc-7226-452e-88f0-a6bdcf93dbf7.png). ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 20.04; - Version of SOFA: master branch at commit 06899d457fb46db82313fe3f136664d7b22e7bc9; - State: Install directory",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3012:890,Install,Install,890,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3012,1,['Install'],['Install']
Deployability,"### Problem; With the same exact parameters, `FastTetrahedralCorotationalForceField` shows unstable behavior, compared to `TetrahedralCorotationalFEMForceField`. **Expected behavior**; I would expect both components to show the same behavior, or at least to be stable. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 23.10; - Version of SOFA: v23.12; - State: Release. `TetrahedralCorotationalFEMForceField`; <video src=""https://github.com/sofa-framework/sofa/assets/29635054/11a2b178-fefc-4f42-8db7-34e24b6aa732"" width=""200"" height=""auto"">. `FastTetrahedralCorotationalForceField`; <video src=""https://github.com/sofa-framework/sofa/assets/29635054/48ea4a38-ac0a-47a8-b562-06c28c9645d3"" width=""200"" height=""auto"">. Object code: https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/ligating_loop/sofa_objects/cavity.py#L197. Cheers,; Paul",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4594:406,Release,Release,406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4594,1,['Release'],['Release']
Deployability,"### Problem; running failing due to loading of plugins ; **Description**; Hi, tried both SOFA v22.06.00 and v23.06.00 versions, but not able to load Sofa.Component.UserInterface.ConfigurationSetting plugin, which is causing failure of loading all the remaining plugins. check below error log. I am trying to run lapgym repo implementation , reach environment. Can also track the conversation in original repo : https://github.com/ScheiklP/sofa_env/issues/31; **Steps to reproduce**; Repo : https://github.com/ScheiklP/sofa_env; File : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/scene_description.py; scene header file where plugins are loaded : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/sofa_templates/scene_header.py. **Expected behavior**. ---------------------------------------------. ### Environment. **Context**. - System: ""Ubuntu 20.04""; - Version of SOFA: v23.06.00 binaries"". **Command called**. ```txt; python3 /home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py. ```. **Env vars**. ```bash; #################; --- sys.version ---; 3.8.10 (default, Jul 29 2024, 17:02:10) ; [GCC 9.4.0]; --- PATH ---; /home/sofa/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin; --- SOFA_ROOT ---; /home/sofa/SOFA_v23.06.00/bin/.runSofa; --- PYTHONPATH ---; /home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages; --- sys.path ---; ['', '/home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:178,Configurat,ConfigurationSetting,178,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['Configurat'],['ConfigurationSetting']
Deployability,"### runSofa crash . **Description**; runSofa crash when a texture file is not found by OglModel. **Steps to reproduce**; put a wrong filename or path into a textureName:; `<OglModel name=""VisualBody"" src=""@loader"" texturename=""../Material/textures/colorTest.jpg"" />`. **Expected behavior**; Error message and do not use the texture but normal default material rendering. ---------------------------------------------. ### Environment. **Context**. - System: Windows 10; - Version of SOFA: master; - State: build version. ### Logs. ```; [ERROR] [OglModel(VisualBody)] Texture ""C:\projects\UnrealEngine\SOFA_test2\Plugins\SofaUE5\Content/Material/textures/colorTest.jpg"" not found; [ERROR] [Image] File C:\projects\UnrealEngine\SOFA_test2\Plugins\SofaUE5\Content/Material/textures/colorTest.jpg not found. ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::dump; sofa::helper::BackTrace::sig; seh_filter_exe; seh_filter_exe; _C_specific_handler; _chkstk; RtlRaiseException; KiUserExceptionDispatcher; sofa::gl::Texture::update; sofa::gl::Texture::init; sofa::gl::component::rendering3d::OglModel::initVisual; sofa::component::visual::VisualModelImpl::drawVisual; sofa::simulation::VisualDrawVisitor::processVisualModel; sofa::simulation::VisualVisitor::processNodeTopDown; sofa::simulation::VisualDrawVisitor::processNodeTopDown; sofa::simulation::graph::DAGNode::executeVisitorTreeTraversal; sofa::simulation::graph::DAGNode::executeVisitorTreeTraversal; sofa::simulation::graph::DAGNode::executeVisitorTreeTraversal; sofa::simulation::graph::DAGNode::doExecuteVisitor; sofa::simulation::DefaultVisualManagerLoop::drawStep; sofa::simulation::Simulation::draw; sofa::gui::qt::viewer::qgl::QtGLViewer::DisplayOBJs; sofa::gui::qt::viewer::qgl::QtGLViewer::drawScene; sofa::gui::qt::viewer::qgl::QtGLViewer::draw. ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3567:1042,update,update,1042,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3567,1,['update'],['update']
Deployability,"#1527; Based on ; - #2571 . Creating the module **Sofa.Component.IO**, where all the components linked to loading or exporting a mesh(.Mesh)~~/stuff(.Misc)~~ are contained.; Read/Writing stuff to repeat identical simulations (ReadState/Topology,etc) has been moved to a new category, namely **Sofa.Component.Playback**; Deprecates **SofaLoader**, **SofaGeneralLoader** and **SofaExporter**. Good module to test the compatibility of installation process, as the plugin Python3 has a dependency on the former SofaExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2582:432,install,installation,432,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2582,1,['install'],['installation']
Deployability,"#1626 generalized the use of RGBAColor instead of Vec4f to select a color.; And all the functions were deprecated (but still usable) until the v21.06. For the upcoming release of v21.06, those functions have been deleted, but their definitions are still there, to inform the user how to fix the compilation error. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2197:168,release,release,168,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2197,1,['release'],['release']
Deployability,"'--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. Result of the command above is unapplicable, since it is a Windows system. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SofaNonUniformFem.dll; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [WARNING] [Simulation] Default Visual Manager Loop will be used. Add DefaultVisualManagerLoop to the root node of scene file to remove this warning; [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SofaMiscForceField.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/STLIB.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SoftRobots.dll; [WARNING] [UniformMass(uniformMass1)] Unused Attribute: ""massDensity"" with value: ""0.1""; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - MeshOBJLoader: 6 created with alias ""MeshObjLoader""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ```. **Content of build_dir/CMakeCache.txt**. Installed with the binary, so CMake wasn't used. ---------------------------------------------. PS: Please do inform me if any other information is required.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2651:2810,Install,Installed,2810,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2651,1,['Install'],['Installed']
Deployability,"('OglModel', color=[1, 0, 0, 0.3], src='@meshLoader', name='Visual', rotation=rotation). # Add a sphere.; newSphere = root.addChild('FixedSphere'); newSphere.addObject('EulerImplicitSolver'); newSphere.addObject('CGLinearSolver', threshold='1e-09', tolerance='1e-09', iterations='200'); MO = newSphere.addObject('MechanicalObject', showObject=True, position=[0, 200, 200, 0, 0, 0, 0], name='Particle', template='Rigid3d'); Mass = newSphere.addObject('UniformMass', totalMass=1); Force = newSphere.addObject('ConstantForceField', name=""CFF"", totalForce=[0, 0, 0, 0, 0, 0] ); Sphere = newSphere.addObject('SphereCollisionModel', name=""SCM"", radius=30.0 ); newSphere.addObject('FixedConstraint', name='FixedConstraint', indices=0); newSphere.addObject('OglModel', color=[1, 0, 0, 0.3], name='Visual'); ; ; ; # visualizing; source = [-600,0,300]; lookAt = source+np.array([1,0,0]); orientation = [ 0, -0.70710678, 0, 0.70710678]; root.addObject(""LightManager""); root.addObject(""DirectionalLight"", direction=[-1,0,0]); root.addObject('InteractiveCamera', name='camera', position=source,; lookAt=lookAt, orientation=orientation); ; if __name__ == ""__main__"":; # Read real information from real world.; pass. # One simulation for one root. Maybe.; # Create scene and initialize simulation.; root = Sofa.Core.Node(""root""); createScene(root); Sofa.Simulation.init(root). # Initialize pygame.; init_display(root); ; try:; for i in range(10000):; root.InstrumentCombined.m_ircontroller.findData('xtip').value =\; root.InstrumentCombined.m_ircontroller.findData('xtip').value \; + np.array([2,110,2], dtype=float); ; # Calculate simulator one step.; Sofa.Simulation.animate(root, root.dt.value); Sofa.Simulation.updateVisual(root); time.sleep(root.dt.value); ; # Visualize in pygame.; simple_render(root); ; ; # Save image of pygame.; image = GetFrame(); SaveImage(image, f""screen.jpeg""); ; ; print(i); ; ; except KeyboardInterrupt:; pass; ; ```. How can I ensure interaction between the catheter and the sphere?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4636:20202,update,updateVisual,20202,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4636,1,['update'],['updateVisual']
Deployability,(brutal) Rename TModels into CollisionModels and update all scenes:. - TPointModel becomes PointCollisionModel; - TLineModel becomes LineCollisionModel; - TTriangleModel becomes TriangleCollisionModel; - TSphereModel becomes SphereCollisionModel. and all examples are updated. Let's see the CI. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1034:49,update,update,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1034,2,['update'],"['update', 'updated']"
Deployability,"(just randomly enabled SOFA_GPU_CUBLAS 😅). Starting from CUDA12, you cannot include both cublas.h and cublas_v2.h (throw a compilation error). There is apparently no code using the functions enabled by SOFA_GPU_CUBLAS so nothing to test against... Reference:; https://docs.nvidia.com/cuda/cublas/index.html; ```; Starting with version 4.0, the cuBLAS Library provides a new API, in addition to the existing legacy API. This section discusses why a new API is provided, the advantages of using it, and the differences with the existing legacy API.; Warning; The legacy cuBLAS API is deprecated and will be removed in future release.; ```. and CUDA4 was released in early 2011, so I may think we could throw the legacy support away...; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4274:623,release,release,623,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4274,2,['release'],"['release', 'released']"
Deployability,"(should) Fix issue #2066. The GraphListener for the visual Graph is frozen when runSOFA is started (and never unfrozen); The temp fix to swap tabs was unfreezing it actually.; But I think letting it unfrozen is also a not-so-good idea as the listener will update a lot (how many? I dont know) the graph for nothing. Now this PR unfreeze/freeze the visual graph at each timestep of the simulation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2458:256,update,update,256,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2458,1,['update'],['update']
Deployability,"**[Only Windows/MSVC]**. I cannot explain at all 👺. On MSVC2022(17.7.4) and Release mode, a crash happens with `examples/Demos/fallingBeamLagrangianCollision.scn` when a collision occurs. It crashes when trying to insert values in the triplets vector (suspecting a memory error somewhere). Weirdly, it does not crash in RelWithDebug mode 🤐. ; *And* it does not crash as well on MSVC2019, as the CI (jenkins) uses it in release mode while testing the scene. At the code generation time (compiler?optimizer?) it does throw a warning like:; `1>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector(398): warning C4789: buffer 'triplets' of size 16 bytes will be overrun; 8 bytes will be written starting at offset 16`; only in Release mode. --. Two fixes possible (found by trial-and-error 🤡); - using std::vector instead of sofa::type::vector; - using a struct instead of the tuple; ; I used the std::vector one as it was the simplest. I suspect there is a bug(???)/issue with the optimizer/vectorizer of MSVC , or the allocator but i cannot prove anything 🙊. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4180:76,Release,Release,76,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4180,3,"['Release', 'release']","['Release', 'release']"
Deployability,"- **Rename** compute2PointsBarycoefs -> computeEdgeBarycentricCoordinates; - **Rename** computeRest2PointsBarycoefs -> computeEdgeBarycentricCoordinates with parameter useRestPosition to set at true; - **Add** deprecation mechanism and backward compatibility; - **Update** all methods to use sofa::geometry::Edge::getBarycentricCoordinates instead of their own wrong version. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4190:264,Update,Update,264,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4190,1,['Update'],['Update']
Deployability,- Add demo scene done for PR1000; - [share] Update square_2594_triangles mesh to have material and texcoords. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1112:44,Update,Update,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1112,1,['Update'],['Update']
Deployability,"- Add getter; - Add tests; - Update init mechanism to match Triangular and Triangle FEM. Add a lot of comment to describe the optimization of this component and try to solve the small difference comprare to TriangleFEM but changing the code slow down its convergence for unknown reason... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2284:29,Update,Update,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2284,1,['Update'],['Update']
Deployability,"- Add tests on add/remove edges/vertices using EdgeSetTopologyModifier methods; - Update FakeTopology_Scene to add mechanical Components with TopologyData; - Add test to check TopologyData and TopologyHandler registration; - Some cleaning, factorization and documentation in EdgeSetTopology_test code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3245:82,Update,Update,82,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3245,1,['Update'],['Update']
Deployability,"- Add: Display border of tetrahedra, ; - Update: draw methods to check the number of elements and reduce the number of indent in code.; - Add: handle wireframe for triangles and quads; - Fix: Bad lighting disable without corresponding enable in drawTools. ![simpletesselatedtetratopologicalmapping_00000001](https://user-images.githubusercontent.com/21199245/53704580-155f0300-3e1e-11e9-9e55-edd39145af29.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/952:41,Update,Update,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/952,1,['Update'],['Update']
Deployability,- Add: script event listener; - Add: scene coupling Geomagic and SofaCarving ; - Update carving detection collision to use the existing pipeline instead of relaunching a narrowphase intersection computation. - Add method to remove topological element from PointModel collision.; - Fix sofaCarving tests. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/787:81,Update,Update,81,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/787,2,"['Update', 'pipeline']","['Update', 'pipeline']"
Deployability,- BeamAdapter has objects that inherit from ConstraintResolution. ; The constructor now impose to have at least one parameter. You can update your code easily by using the new constructor. ; - The example scene in SofaPython keyboardController does not seems to work anymore. ; - ... Please share what you have seen with others so we can fix everything quickly; . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/683:135,update,update,135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/683,1,['update'],['update']
Deployability,"- Changelog update; - CMake fix for Windows Dependency Pack; - CMake fixes for packaging (SofaMacros, GLU target missing); - New script + CMake rules to add MacOS post-install custom steps (for packaging); - CMake fixes for modularized projects (SofaExporter, SofaHaptics, SofaOpenglVisual, SofaPreconditioner, SofaSparseSolver); - CMake clean tests dispatch in build tree, e.g now SofaConstraint_test build files go to `<build-dir>/SofaGeneral/SofaConstraint/SofaConstraint_test`. These changes also permit to generate binaries for all platforms with our CI. Continuous Deployment is not far!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1088:12,update,update,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1088,4,"['Continuous', 'Deploy', 'install', 'update']","['Continuous', 'Deployment', 'install', 'update']"
Deployability,"- Check that device ID is valid before making it current in destruction method.; - Small updates on warning messages. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3698:89,update,updates,89,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3698,1,['update'],['updates']
Deployability,- Documentation should be updated; - User (scene) API could be simplified/clarified (one broad and one narrow phase component in the scene),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2048:26,update,updated,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2048,1,['update'],['updated']
Deployability,"- Fix CMake to use new headers.; - Update namespace; - Fix some warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3076:35,Update,Update,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3076,1,['Update'],['Update']
Deployability,"- Fix cmake when building on a system with Qt6 and Qt5 are detected in the same time (qt5 is prioritized); - Fix cmake var for QGLViewer (not supported with Qt6); - Fix for Qt6 where its windeployqt utility does not support the parameter ""--no-angle"" anymore (leads to a build error); - Fix for Qt6.2 while doing the cmake configuration (I suppose the latest Qt6.2 did some changes for its cmake packages), ; tested on Windows 11 and Qt6.2 (and VS2022). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2490:323,configurat,configuration,323,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2490,1,['configurat'],['configuration']
Deployability,"- IncompleteTypeInfo was defined with SOFA_DEFAULTTYPE_API but this is incorrect as IncompleteTypeInfo is inline only. It was apparently harmless in Release/RelWithDebug but was complaining in Debug config with an undefined reference in SofaBaseMechanics 🧙‍♂️; - Since a few version of MSVC2019, SofaCUDA could not compile and was complaining on a missing pow() function. Apparently, one has to use powf() instead. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1761:149,Release,Release,149,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1761,1,['Release'],['Release']
Deployability,"- Lots of comments; - Split into multiple functions (`solve` function easier to read). Next steps:. - Create a visitor to detect automatically if the mass matrix is trivially invertible (diagonal matrix), in order to replace `d_optimizedForDiagonalMatrix`.; - Benchmark with/without `SOFA_NO_VMULTIOP`; - More tests, in particular for the standard Euler method (not symplectic); - Update the doc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2163:381,Update,Update,381,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2163,1,['Update'],['Update']
Deployability,- QDocBrowser will be build by default if Qt5WebEngine is found.; - Add option in cmake to enable the QDocBrowser (If I did it well) that will set Qt5WebEngine as required to warn user to install it if they want the browser. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1315:188,install,install,188,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1315,1,['install'],['install']
Deployability,"- Remove all Data and method related to triangle selection on a plan.; - Data: normal, dmin, dmax; - Methods: void selectTrianglesAlongPlane(), bool isPointInPlane(Coord p);; - Merge method selectTrianglesFromString() into initTriangleInformation(); - Add callback for Data pressure and triangleList; - Update the example scene to use a BoxROI instead of plan definition on a big yellow beam 😆 . ![image](https://github.com/sofa-framework/sofa/assets/21199245/d9ecff19-44df-4229-91e2-a2c30b267b81). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4743:303,Update,Update,303,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4743,1,['Update'],['Update']
Deployability,"- Rename ```TopologyObjectType``` into ```TopologyElementType``` (this enum is used to define the type of upper element contain in the current topology); - Factorize methods and member storing this information into ```BaseMeshTopology::m_upperElementType``` ; - Update ```DiagonalMass``` and ```MeshMatrixMass``` which were using their own enum to store the type of topology. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1593:262,Update,Update,262,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1593,1,['Update'],['Update']
Deployability,"- Rename variable ```lastElementIndex``` into ```m_lastElementIndex```; - Add accessor; - Update this counter during add/remove operation. This counter is mandatory when multiple remove events are queued. ; - Init the counter during topologyData connection with its topology buffer. api is converging but this PR might have some side effects... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2359:90,Update,Update,90,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2359,1,['Update'],['Update']
Deployability,"- Split init method in 3 depending if mesh, data or topology is used. also Avoid recomputing topology at updateVisual; - also remove not working topologyHandler. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2299:105,update,updateVisual,105,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2299,1,['update'],['updateVisual']
Deployability,- Tetra2TriangleTopologicalMapping: Fix addTetrahedron case in tetra2TriangleTopologicalMapping for a tricky add + remove border triangles case.; - Update scene tests; - TriangleSetTopologyModifier: Add more check in AddTriangle methods. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/998:148,Update,Update,148,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/998,1,['Update'],['Update']
Deployability,"- The variables `SOFAGUI_HAVE_SOFAGUIQT` and `SOFAGUI_HAVE_SOFAHEADLESSRECORDER` were not defined whereas they are used in `SofaGui/SofaGuiConfig.cmake.in`.; - Modules in `SofaGui/SofaGuiConfig.cmake.in` have been updated. . I expect it will also fix the SofaPython3 GitHub actions (see for example https://github.com/sofa-framework/SofaPython3/runs/6592539251?check_suite_focus=true). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3011:214,update,updated,214,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3011,1,['update'],['updated']
Deployability,"- Update CarvingManager to use SingleLink instead of string path.; - Clean warnings in scenes; - Clean warnings in tests; - remove reset method; - use componentState value instead of bool m_carvingReady. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3332:2,Update,Update,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3332,1,['Update'],['Update']
Deployability,"- Update EdgeSetTopologyContainer to use this new version. The old code was not working in several tricky cases.; - Add unit tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4028:2,Update,Update,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4028,1,['Update'],['Update']
Deployability,"- Update TopologyData to use rebind for vector_device; - Remove begin/endEdit; - Add extra Data for template specialisation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2569:2,Update,Update,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2569,1,['Update'],['Update']
Deployability,- Update some demo scenes to have a better physics approach direct solvers.; - Add an example with several deformable cubes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1533:2,Update,Update,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1533,1,['Update'],['Update']
Deployability,"- Update topology access to use full array; - move computation of min max mean stress value out from `draw `method and move them in `addForce` instead (only if show option is true). Quick test on the classic tissue scene give: ; - Visual model only: 260 fps ; - FEM before: 190 fps; - FEM with this PR: 220 fps. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3413:2,Update,Update,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3413,1,['Update'],['Update']
Deployability,- Update: Set drawColor as Data<RGBAColor> for topology debug drawing.; - Update: triangle and Quad drawing to display them a little smaller to better see the geometry structure.; - Fix: drawing scale indices could be Inf.; - Fix: normal color drawing and check buffer sizes in DrawTool; - Update: replace word colour by color to match openGL spelling in DrawTool. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/877:2,Update,Update,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/877,3,['Update'],['Update']
Deployability,"- Use std::set instead of std::list in TopologyContainer to store TopologyHandler; - Use bool m_isRegistered to tack info if the topologyHandler is registed inside the TopologyContainer list. Catch return of std::insert to update this bool.; - Factorize method to link topologyHandler using sofa::geometry::ElementType. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3271:223,update,update,223,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3271,1,['update'],['update']
Deployability,- Using Sofa (maybe it is only runSofa) in release with some plugins.; - Switching to Debug; - launch runSofa_d. ```; [INFO] [runSofa] Loading automatically plugin list in C:/projects/sofa-build/bin/Debug/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/projects/sofa-build/bin/Debug/SofaMiscCollision_d.dll; [INFO] [PluginManager] Loaded plugin: C:/projects/sofa-build/bin/Debug/SofaCarving_d.dll; [INFO] [PluginManager] Loaded plugin: C:/projects/sofa-build/bin/Debug/Geomagic_d.dll; [ERROR] [PluginManager] Plugin loading failed (C:/projects/sofa-build/bin/Release/Geomagic.dll): Le module sp▒cifi▒ est introuvable.; [ERROR] [PluginManager] Plugin loading failed (C:/projects/sofa-build/bin/Release/SofaCarving.dll): Le module sp▒cifi▒ est introuvable.; [ERROR] [PluginManager] Plugin loading failed (C:/projects/sofa-build/bin/Release/SofaMiscCollision.dll): Le module sp▒cifi▒ est introuvable.; ```. But this doesn't seems to be blocking.; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/713:43,release,release,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/713,4,"['Release', 'release']","['Release', 'release']"
Deployability,"- Various cleaning to remove SceneChecker warnings; - Fix some examples which should use `vertexMass ` and not `totalMass ` in `uniformMass ` as the number of particles evolve. ; - Fix SpatialGridPointModel scene which was timing out on CI. There was a problem of init with too many particles created compare to the collision and sphFF distances. ; - Update SPHParticleSink_obstacle.scn to wash the dragon; . **SpatialGridPointModel new behavior** ; <img src=""https://github.com/sofa-framework/sofa/assets/21199245/305fd2a4-c15b-4315-8278-509c3fef6204"" width=""75%"">. And working collisions:; <img src=""https://github.com/sofa-framework/sofa/assets/21199245/8a117063-4714-4e0c-8156-401dcba3fde0"" width=""75%"">. **New version of SPHParticleSink_obstacle**; <img src=""https://github.com/sofa-framework/sofa/assets/21199245/184dad41-bb91-45f1-9d38-b913610aec78"" width=""75%"">. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4149:351,Update,Update,351,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4149,1,['Update'],['Update']
Deployability,"- [Geometry] Update method signature of intersectionWithEdge to pass barycentric coordinates instead of 3D coord.; - [Topology.Container] Update all method compute2EdgesIntersection to use the generic method in Edge class. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4194:13,Update,Update,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4194,2,['Update'],['Update']
Deployability,- [SofaKernel] Update several AdvanceTimer msg and add more steps.; - [SofaKernel] Fix advancedTimer in BruteForceDetection pipeline. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1094:15,Update,Update,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1094,2,"['Update', 'pipeline']","['Update', 'pipeline']"
Deployability,"- `TetrahedronFEMForceField` Add getter per tetrahedron for:; - Rotation matrix; - Initial rotation matrix; - Material stiffness matrix; - Strain Displacement; - Local coordinates (in rotated frame); ; - `TetrahedralCorotationalFEMForceField`; - Add warning at init if topology is empty; ; - `FastTetrahedralCorotationalForceField`; - Move Data scope as public; - Set poisson and young modulus as required Data. This PR integrate changes in component needed for tests introduced in #2842. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2845:420,integrat,integrate,420,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2845,1,['integrat'],['integrate']
Deployability,"- add CMakeLists.txt for anatomyModelling tutorial example (which was missing); - update anatomyModelling.cpp in order to build the anatomy example (in bin directory); The example compiles and runs fine on linux ubuntu, but I'm not sure that behaviour is as it should be! Please examine it before merging. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/287:82,update,update,82,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/287,1,['update'],['update']
Deployability,- use some size_t instead of int in the topology_test; - Change the update method from the mass to return the bool update as result.; - some small warning fix in other classes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/726:68,update,update,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/726,2,['update'],['update']
Deployability,"-----. ### Environment. **Context**. - System: Ubuntu 22.04.2 LTS; - Version of SOFA: v23.12; - State: Build directory. **Command called**. ```txt. cmake --build sofa/build -j --target install. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.9.18 (main, Sep 11 2023, 13:41:44) ; [GCC 11.2.0]; --- PATH ---; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/snap/bin; --- SOFA_ROOT ---; /bd_targaryen/users/kleelakunwet/sofa/build/install; --- PYTHONPATH ---; --- sys.path ---; ['', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python39.zip', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/lib-dynload', '/bd_targaryen/users/kleelakunwet/.local/lib/python3.9/site-packages', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt; ...; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/include/Sofa.Component.LinearSolver.Direct/sofa/component/linearsolver/direct/SparseQRTraits.h; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/include/Sofa.Component.LinearSolver.Direct/sofa/component/linearsolver/direct/Type",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4622:1606,install,install,1606,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4622,1,['install'],['install']
Deployability,"-4.13.2; QT: 5.12.0. ```; INFO] [runSofa] PluginRepository paths = C:/open_prj/sofa/build/mmaster/plugins;C:/open_prj/sofa/build/mmaster/bin/Release; [INFO] [runSofa] DataRepository paths = C:/open_prj/sofa/src/share;C:/open_prj/sofa/src/examples; [INFO] [runSofa] GuiDataRepository paths = C:/open_prj/sofa/src/applications/projects/runSofa/resources;C:/open_prj/sofa/src/applications/sofa/gui/qt/resources; [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module could not be found. Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node """,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:1609,Release,Release,1609,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,1,['Release'],['Release']
Deployability,"... And fix various crashes of unit tests when they quit. Some unit tests are crashing when quitting (maybe random) since #1883 , with a call to an invalid MessageDispatcher (GtestMessageDispatcher) .; After some investigations, it appears that some init()/cleanup() in simulation do not respect the chain of dependency : ; - SofaSimulationGraph was calling the ones fromSofaSimulationCore instead of the one of SofaSimulationCommon; ; - SofaSimulationCommon was init/cleanup of SofaCore instead of SofaSimulationCore. I suppose #1883 exposed the problem by removing **seemingly** useless init().; But it seems they were patching the issue raised in this PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1987:621,patch,patching,621,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1987,1,['patch'],['patching']
Deployability,"... and add VisualParameters as a parameter to their signature. Based on ; - #4822 . Continue on what has been introduced by:; - #3931 . Little difference, this PR does not only do the NVI thing but it adds the visualparameters as input.; This seems consistent (to me) with the fact that init/update visual as supposed to be called when there is a draw context (like drawVisual). ; The nice side effect (and it was the intent at the beginning) is that updatevisual wont be called anymore if the component state is wrong, showVisualModels flag is not set or not enabled. \+ cleanings here and there in the visual/gl components. Unfortunately, breaking ⚠️. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/423]; [ci-depends-on https://github.com/sofa-framework/SofaSphFluid/pull/1]. TEMP: ; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/153]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4827:293,update,update,293,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4827,2,['update'],"['update', 'updatevisual']"
Deployability,"... because this is not relevant anymore as we compile SReal either with float XOR double.; And ""dual"" templates have been removed some releases ago. Effectively, `both` was equivalent as ` double` , hence the removal. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3436:136,release,releases,136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3436,1,['release'],['releases']
Deployability,"... before putting it out on an external repo. - Update file structure; - Refresh cmake; - fix dependencies; - fix bullet dep; - compilation; - full xml examples (seems) to work. I did not really clean the code itself, I dont know if this plugin is viable or not. Some files depends on removed plugins (LMConstraints and Compliant) so it has not been tested. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3800:49,Update,Update,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3800,1,['Update'],['Update']
Deployability,"... or so it seems. There is not CI process for the install process and I could compile BeamAdapter_test target out of tree, but I would prefer if other people could test it 🧐. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4489:52,install,install,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4489,1,['install'],['install']
Deployability,.... with Qt and Win system's dlls. (for each config); Obviously those dlls should in the bin/ directory directly (OR find a way to manage different config for installation but not the point for now). A picture is worth a thousand words:; ![issue1](https://user-images.githubusercontent.com/11028016/134341229-d0223102-7493-475d-bfa6-3977170d7f0f.png). Then in RelWithDebInfo for example:; ![issue2](https://user-images.githubusercontent.com/11028016/134341269-6d662b30-9468-4dbc-8351-1b711276be3d.PNG),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2355:160,install,installation,160,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2355,1,['install'],['installation']
Deployability,.89 100 TOTAL; 1 0 1 2.23 5.31 2.59 0.21 2.59 99.97 .Simulation::animate; 2 0 1 0 0.02 0 0 0 0.04 ..BehaviorUpdatePositionVisitor; 2 0 1 0 0.01 0 0 0 0.05 ..UpdateInternalDataVisitor; 2 0 1 2.21 5.24 2.56 0.21 2.56 99.03 ..AnimateVisitor; 3 0.01 1 2.20 5.24 2.56 0.21 2.56 98.94 ...Mechanical; 4 0.01 1 0.06 0.21 0.07 0.01 0.07 2.60 ....ComputeForce; 4 0.08 1 0.05 0.14 0.05 0 0.05 1.98 ....ComputeRHTerm; 4 0.13 1 0.49 1.58 0.52 0.04 0.52 20.27 ....MBKBuild; 5 0.13 1 0.49 1.56 0.52 0.04 0.52 20.19 .....CG-setSystemMBKMatrix; 4 0.66 1 1.58 4.57 1.90 0.20 1.90 73.45 ....MBKSolve; 5 0.67 1 1.56 4.54 1.88 0.20 1.88 72.80 .....CG-Solve; ```. **CompressedRowSparseMatrixd**; [INFO] [BatchGUI] 1000 iterations done in 4.19299 s ( 238.493 FPS).; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 3.74 8.41 4.16 0.27 4159.02 100 TOTAL; 1 0 1 3.74 8.40 4.16 0.27 4.16 99.98 .Simulation::animate; 2 0 1 0 0 0 0 0 0.02 ..BehaviorUpdatePositionVisitor; 2 0 1 0 0 0 0 0 0.03 ..UpdateInternalDataVisitor; 2 0 1 3.72 8.36 4.13 0.27 4.13 99.39 ..AnimateVisitor; 3 0.01 1 3.72 8.35 4.13 0.27 4.13 99.33 ...Mechanical; 4 0.01 1 0.06 0.18 0.07 0.01 0.07 1.59 ....ComputeForce; 4 0.08 1 0.05 0.14 0.05 0 0.05 1.21 ....ComputeRHTerm; 4 0.13 1 1.66 5.86 1.72 0.14 1.72 41.42 ....MBKBuild; 5 0.13 1 1.65 5.85 1.72 0.14 1.72 41.36 .....CG-setSystemMBKMatrix; 4 1.85 1 1.87 4.79 2.28 0.23 2.28 54.71 ....MBKSolve; 5 1.86 1 1.85 4.74 2.26 0.23 2.26 54.29 .....CG-Solve; ```. **EigenSparseMatrixd**; [INFO] [BatchGUI] 1000 iterations done in 3.76367 s ( 265.698 FPS).; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 3 8.05 3.73 0.49 3726.98 100 TOTAL; 1 0 1 3 8.05 3.73 0.49 3.73 99.98 .Simulation::animate; 2 0 1 0 0 0 0 0 0.02 ..BehaviorUpdatePositionVisitor; 2 0 1 0 0 0 0 0 0.03 ..UpdateInternalDataVisitor; 2 0 1 2.98 8 3.70 0.49 3.70 99.29 ..AnimateVisitor; 3 0.01 1 2.98 8 3.70 0.49 3.70 99.22 ...Mechanical; 4 0.01 1 0.06 0.41 0.07 0.01 0.07 1.83 ....ComputeForce; 4 0.08 1 0.05 0.17,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2794:1708,Update,UpdateInternalDataVisitor,1708,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2794,1,['Update'],['UpdateInternalDataVisitor']
Deployability,".com/sofa-framework/sofa/commit/54f49d039aadaffd57a1d7f8ebab3af82e407674); I see no reason not to do that. Dependencies to DiffusionSolver are simpler this way. ### [[CImgPlugin] CLEAN include directory](https://github.com/sofa-framework/sofa/commit/1a617d5350f74ac4a816255960d92638a26cba1b); Sources moved to `src`. No more `../` horror in CImgPlugin include directories. ## Other changes. - [SofaHelper] FIX DynamicLibrary altered search path (Windows only) ; Needed to prefer `bin` libraries over neighboor libraries; - [SofaFramework] FIX typo in config.h.in; - [runSofa] Check if plugins dir exists before adding to PluginRepository; - [SofaTest] FIX SofaPython finding in *Config.cmake.in; - [plugins] ADD missing *Config.cmake.in files; Needed to use them as real plugins; - [All] Improve sofa_copy_libraries and sofa_install_libraries macros; Make them easier to use; - [CMake] Rename sofa_set_python_directory into sofa_install_pythonscripts; Clearer name in my opinion + using CMake multiValueArgs; - [CMake] Update package.cmake to enable plugins; Prepare package.cmake to produce binaries with all plugins from ""options"" configuration.; - [SofaImplicitField] FIX tests enabling; - [CMake] CLEAN package.cmake; - [SofaSimulationCore] Handle reload differently in SceneLoader::Listener; Needed to disable scene checks on reload.; - [SofaGraphComponent] Disable scene checks on reload; Needed by live editor (which reloads the scene every time the file is changed).; - [plugins] Remove commented lines in CMakeFiles. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:4455,configurat,configuration,4455,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,1,['configurat'],['configuration']
Deployability,.cs:65). NullReferenceException: Object reference not set to an instance of an object; SofaVisualModel.UpdateMesh () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:129); SofaVisualModel.Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:99). Start: 'VisualCornea'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). NullReferenceException: Object reference not set to an instance of an object; SofaVisualModel.UpdateMesh () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:129); SofaVisualModel.Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:99). Start: 'VisualBody'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). NullReferenceException: Object reference not set to an instance of an object; SofaVisualModel.UpdateMesh () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:129); SofaVisualModel.Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:99). Start: 'OglModel'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). NullReferenceException: Object reference not set to an instance of an object; SofaVisualModel.UpdateMesh () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:129); SofaVisualModel.Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:99). ReconnectSofaScene; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:480); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4156:2935,Update,UpdateMesh,2935,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4156,1,['Update'],['UpdateMesh']
Deployability,"/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #12 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #13 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #14 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #15 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandN",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2057:2304,Release,Release,2304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057,1,['Release'],['Release']
Deployability,"/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #12 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #13 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #14 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeW",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2057:2136,Release,Release,2136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057,1,['Release'],['Release']
Deployability,"0). deformable_node.addObject(""PointCollisionModel"", group=0); deformable_node.addObject(""LineCollisionModel"", group=0); deformable_node.addObject(""TriangleCollisionModel"", group=0); deformable_node.addObject(""FastTetrahedralCorotationalForceField"", youngModulus=60, poissonRatio=0.0). deformable_node.addObject(; ""PlaneForceField"",; normal=[0, 0, 1],; d=0.0,; stiffness=3000,; damping=1,; showPlane=False,; showPlaneSize=100,; ). deformable_node.addObject(""UniformMass"", totalMass=0.2); deformable_visual_node = deformable_node.addChild(""visual""); deformable_visual_node.addObject(""OglModel"", color=[1.0, 0.0, 0.0]); deformable_visual_node.addObject(""IdentityMapping""). box = deformable_node.addObject(""BoxROI"", box=(-35, -1, -1) + (35, 1, 5)); deformable_node.addObject(""FixedConstraint"", indices=box.indices.getLinkPath()); ```; </details>. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 20.04; - Version of SOFA: master branch at commit 95e9357da1a457a2a158dfc26012b214ac0aa889; - State: ""Install directory"". ### Logs. Output on Segfault:. <details>; <summary>Click to expand!</summary>. ```bash; ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); sofa::component::topology::container::dynamic::PointSetTopologyContainer::setPointTopologyToDirty(); sofa::component::topology::container::dynamic::PointSetTopologyModifier::removePointsWarning(sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned int> >&, ; bool); sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier::removeTetrahedraProcess(sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned; int> > const&, bool); sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier::removeTetrahedra(sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned int> >; const&, bool); sofa::gui::component::performer::TopologicalChangeManager::removeItemsFromTriangleModel(sofa::com",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3202:5552,Install,Install,5552,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3202,1,['Install'],['Install']
Deployability,"0, 0.0, 0.0, 1.0]); cutting_sphere_node.addObject(""UniformMass"", totalMass=0.001); cutting_sphere_node.addObject(""SphereCollisionModel"", radius=1.0, group=1, tags=""CarvingTool""). elif test_cutting == ""edges"":; ######################; # Cuttable EdgeSet Object; ######################; edge_node = scene_node.addChild(""edges""). edge_node.addObject(""CGLinearSolver""); edge_node.addObject(""EulerImplicitSolver""). positions = [[x, 1.0, 1.0] for x in range(15, 25)]; edges = [[x, x + 1] for x in range(len(positions) - 1)]; edge_node.addObject(""EdgeSetTopologyContainer"", position=positions, edges=edges); edge_node.addObject(""EdgeSetTopologyModifier""). edge_node.addObject(""MechanicalObject"", showObject=True, showObjectScale=2.0); edge_node.addObject(""UniformMass"", totalMass=0.001); springs = [[first, second, 100, 0, 0] for first, second in edges]; edge_node.addObject(""StiffSpringForceField"", spring=springs); edge_node.addObject(""FixedConstraint"", indices=[0, len(positions) - 1]); edge_node.addObject(""LineCollisionModel"", group=0, tags=""CarvingSurface""). cutting_sphere_node_2 = scene_node.addChild(""cutting_sphere_2""); cutting_sphere_node_2.addObject(""CGLinearSolver""); cutting_sphere_node_2.addObject(""EulerImplicitSolver""); cutting_sphere_node_2.addObject(""MechanicalObject"", template=""Rigid3d"", position=[20.0, 5.0, 1.0, 0.0, 0.0, 0.0, 1.0]); cutting_sphere_node_2.addObject(""UniformMass"", totalMass=0.001); cutting_sphere_node_2.addObject(""SphereCollisionModel"", radius=1.0, group=1, tags=""CarvingTool""). root_node.addObject(""CarvingManager"", active=True, carvingDistance=1.0); ```; </details>. I would be happy to implement the bug fixes and missing functions myself, but I would need some help on where to do what. :D ; Maybe @epernod and @hugtalbot could help me there? :) . ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 20.04; - Version of SOFA: master branch at commit 95e9357da1a457a2a158dfc26012b214ac0aa889; - State: ""Install directory""",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3201:6528,Install,Install,6528,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3201,1,['Install'],['Install']
Deployability,"0, ymin=0, ymax=0, zmax=1, zmin=1,; p0=[0,0,0]); CatheterMechanics.addObject('MechanicalObject', showIndices=False, name='DOFs', template='Rigid3d', ry=-90); CatheterMechanics.addObject('WireBeamInterpolation', name='InterpolCatheter', WireRestShape='@../EdgeTopology/catheterRestShape',radius='1',printLog='0'); CatheterMechanics.addObject('AdaptiveBeamForceFieldAndMass',name='CatheterForceField',massDensity=0.00000102, interpolation='@InterpolCatheter'); CatheterMechanics.addObject('InterventionalRadiologyController', name='DeployController', template='Rigid3d', instruments='InterpolCatheter',; startingPos=[0, 0, 0, 0, 0, 0, 1], xtip=[0, 0, 0], printLog=True,; rotationInstrument=[0, 0, 0], step=5., speed=5.,; listening=True, controlledInstrument=0); CatheterMechanics.addObject('LinearSolverConstraintCorrection',wire_optimization='true', printLog=False); CatheterMechanics.addObject('FixedConstraint', indices=0, name='FixedConstraint'); CatheterMechanics.addObject('RestShapeSpringsForceField', points='@DeployController.indexFirstNode', angularStiffness=1e8, stiffness=1e8). VisuCatheter = rootNode.addChild('VisuCatheter'); VisuCatheter.activated = True; VisuCatheter.addObject('MechanicalObject', name='Quads'); VisuCatheter.addObject('QuadSetTopologyContainer', name='ContainerGuide'); VisuCatheter.addObject('QuadSetTopologyModifier', name='Modifier'); VisuCatheter.addObject('QuadSetGeometryAlgorithms', name='GeomAlgo', template='Vec3d'); VisuCatheter.addObject('Edge2QuadTopologicalMapping', radius='1', listening='true',; input='@../../topoLines_guide/meshLinesGuide',; nbPointsOnEachCircle='10', flipNormals='true', output='@ContainerGuide'); VisuCatheter.addObject('AdaptiveBeamMapping', interpolation='@../InterpolGuide',; name='visuMapGuide', output='@Quads', isMechanical=False,; input='@../DOFs', useCurvAbs=True, printLog=False). # Ogl model; VisuOgl = VisuCatheter.addChild('VisuOgl'); VisuOgl.addObject('OglModel', color=[0.2, 0.2, 0.8], quads='@../ContainerCatheter.qua",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3463:3066,Deploy,DeployController,3066,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3463,1,['Deploy'],['DeployController']
Deployability,"047). What this PR really does:; 1. Clean and make `DefaultCollisionGroupManager` and `DefaultContactManager` more readable; 2. Fix absence of collision response when using `DefaultCollisionGroupManager` with a stationary object. A scene test is provided; 3. Fix freeze happening in `examples/Components/collision/RayTraceCollision.scn` after some time; 4. Fix crash detected in #2047. . Everything is related to `DefaultCollisionGroupManager`. Note:; In the collision pipeline, the group manager responsibilities are:; 1. Combine `Node`s which are involved in a contact (which has been detected before). It is a manipulation of the scene graph which depends on the collision detection.; 2. Create the contact response. # Cleaning; - Split large functions into smaller to make them more readable; - More null pointer checks; - Add lots of comments; - Minor cleaning such as namespace concatenation, ... # Fix absence of collision response with stationary object; The contact with stationary objects are supposed to be handled by the collision pipeline before creating groups with the group manager. In the group manager, it supposes all the objects in contacts are associated with an ODE solver (since they cannot be stationary). Actually, the collision pipeline check if an object is stationary based on the value of `isSimulated()`. It means it's up to the user to set this Data. If it not done, the object is considered moving and goes to the group manager. The ODE solver is not found, so it is skipped:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L91; And collision response is not created.; In this PR, this case is not skipped and a collision response is created. A scene test has been added to check collision is working with a stationary object. # Fix freeze; This freeze happened before #2047.; It is due to an infinite loop here:; https://github.com/sof",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2076:1187,pipeline,pipeline,1187,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076,1,['pipeline'],['pipeline']
Deployability,"0; poissonRatioFingers = 0.3; fingersMass = 0.04; cavitiesInitialValue = 0.0001. # Parameters for each Fingers; fingersParameters = [; {; 'name': 'Finger1',; 'rotation': [0.0, 0.0, -270.0],; 'translation': [100.0, heightInitial, 0.0],; 'ROIBox': [100, heightInitial - 10, -20, 70, heightInitial, 20],; },; {; 'name': 'Finger2',; 'rotation': [360 - angle1 * 180 / math.pi, 0.0, 90.0],; 'translation': [0, heightInitial, radius * math.cos(angle1 - math.pi / 2)],; 'ROIBox': [100, heightInitial - 10, -20, 70, heightInitial, 20],; },; {; 'name': 'Finger3',; 'rotation': [360 - angle2 * 180 / math.pi, 0.0, 90.0],; 'translation': [0.0, heightInitial, radius * math.cos(angle2 - math.pi / 2)],; 'ROIBox': [100, heightInitial - 10, -20, 70, heightInitial, 20],; } ; ]; `. ---------------------------------------------. ### Environment. **Context**. - System: < NAME AND VERSION - e.g: ""Windows 10"", ""Ubuntu 20.04"", ... >; Command: lsb_release -a; Distributor ID:	Ubuntu; Description:	Ubuntu 22.04.4 LTS; Release:	22.04; Codename:	jammy. - Version of SOFA: v24.06.00 built with binaries; - State: Build Directory; - ; **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >; ![Screenshot from 2024-10-12 18-06-10](https://github.com/user-attachments/assets/47a941af-2286-435e-a832-94ccab211570). ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. < COPY-PASTE HERE THE RESULT OF THE COMMAND ABOVE >. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. < COPY-PASTE YOUR OUTPUT HE",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5060:7382,Release,Release,7382,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5060,1,['Release'],['Release']
Deployability,"1. All types of Eigen::SparseMatrix are now supported. For that, the implementation relies completely on the Eigen matrix product to compute the intersection. The trick is to flag the non-zero values with its index position in the array. The matrix product will implicitly keep track of all the operations thanks to the newly introduced scalar types.; 2. Because of the new method, `SparseMatrixStorageOrder` is no longer useful. It can be removed later; 3. Unit tests are extensive. They test all possible configuration of storage of LHS, RHS and Result. They are required because a condition on the storage type is required to swap the indices after the matrix product.; 4. A parallel version of the algorithm is introduced; 5. Benchmarks: https://github.com/alxbilger/SofaBenchmark/pull/39. Analysis of the results of the benchmarks:; - The best configuration storage for the fast matrix product seems to be ColColCol; - The fast matrix product is always faster than the regular product, except for a matrix of size 1000 and sparsity of 15%. This probably indicates that the method is adapted for very sparse matrices; - The parallel fast matrix product algorithm is always faster than the sequential algorithm, except for very small matrices where the overhead of parallelism is not negligible. However, the speed up is not linear with the number of cores and can be disappointing.; - The parallel fast matrix product is always faster than the regular product even for the matrix of size 1000 and sparsity of 15%, but not for very small matrices (overhead). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4547:507,configurat,configuration,507,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4547,2,['configurat'],['configuration']
Deployability,17 vc 14.1; Sofa Master: commit 9d9100aa1b0acb9363c8ec7c9b5e4b470821bfc1; Boost: 1.71.0; CGAL: CGAL-4.13.2; QT: 5.12.0. ```; INFO] [runSofa] PluginRepository paths = C:/open_prj/sofa/build/mmaster/plugins;C:/open_prj/sofa/build/mmaster/bin/Release; [INFO] [runSofa] DataRepository paths = C:/open_prj/sofa/src/share;C:/open_prj/sofa/src/examples; [INFO] [runSofa] GuiDataRepository paths = C:/open_prj/sofa/src/applications/projects/runSofa/resources;C:/open_prj/sofa/src/applications/sofa/gui/qt/resources; [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module could not be found. Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLForm,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:1511,Release,Release,1511,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,1,['Release'],['Release']
Deployability,2.58	 0.36	 2.58	 31.60	.....NarrowPhase; 4 	 2.83	 1 	 0.70	 4.50	 1.95	 0.89	 1.95	 23.87	....CollisionResponse; 4 	 4.79	 1 	 0.01	 0.03	 0.01	 0 	 0.01	 0.15	....end collision; 3 	 4.81	 1 	 1.75	 5.13	 3.12	 0.54	 3.12	 38.16	...Mechanical; 4 	 5.02	 1 	 0.12	 0.24	 0.14	 0.02	 0.14	 1.70	....ComputeForce; 4 	 5.16	 1 	 0.08	 0.27	 0.10	 0.01	 0.10	 1.17	....ComputeRHTerm; 4 	 5.26	 1 	 0 	 0.02	 0 	 0 	 0 	 0.04	....MBKBuild; 5 	 5.26	 1 	 0 	 0.01	 0 	 0 	 0 	 0.02	.....CG-setSystemMBKMatrix; 4 	 5.26	 1 	 1.38	 4.15	 2.11	 0.34	 2.11	 25.84	....MBKSolve; 5 	 5.35	 1 	 1.29	 3.98	 2 	 0.34	 2 	 24.46	.....CG-Solve; 4 	 7.37	 1 	 0.01	 0.04	 0.01	 0 	 0.01	 0.09	....UpdateVAndX; 2 	 7.93	 1 	 0.01	 0.05	 0.02	 0 	 0.02	 0.19	..UpdateSimulationContextVisitor; 2 	 7.96	 1 	 0.02	 0.23	 0.03	 0.01	 0.03	 0.32	..UpdateMapping; 3 	 7.96	 26.51	 0 	 0.01	 0 	 0 	 0 	 0.03	...MappingVisitor - processMechanicalMapping: unnamed; 2 	 7.99	 1 	 0.13	 0.51	 0.18	 0.04	 0.18	 2.26	..UpdateBBox; 3 	 7.99	 1 	 0.01	 0.05	 0.01	 0 	 0.01	 0.17	...BoundingBoxVisitor - ProcessTopDown: root; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaGeneralDeformable; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMiscCollision; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaImplicitOdeSolver; 4 	 8 	 1 	 0 	 0.01	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMeshCollision; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaTopologyMapping; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaLoader; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: visualStyle1; 4 	 8 	 1 	 0 	 0.02	 0 	 0 	 0 	 0 	....ComputeBBox: defaultPipeline1; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bruteForceBroadPhase1; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bVHNarrowPhase1; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: Proximity; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: Response; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: GroupMan,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089:19371,Update,UpdateBBox,19371,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089,1,['Update'],['UpdateBBox']
Deployability,"2nd big guy. #1527; based on ; - ~~#2612 ~~; - #2717 (for a moved file in core). Deprecates **SofaMiscMapping**; Partially deprecates **SofaBaseMechanics**, **SofaRigid**, **SofaGeneralRigid**. This module gathers all ""mechanical"" mappings (inhering BaseMapping) and __not__ topological mapping.; ~~I am a bit concerned by the size of this module but I cannot really find any good sub-modules to sort these components into ?~~. Following a discussion with @ChristianDuriez @Younesssss @alxbilger , Mappings are organized between:; - NonLinear: mappings implementing getK() and applyDJT(); - Linear: the rest of mappings; - MappedMatrix: components which are not mapping? but helps to map matrices (stiffness and stuff) ; -> Ad-hoc module which is only used to patch up matrices in SOFA, will disappear once matrix assembly will be pushed. ~~TODO (in an other PR), set Articulated-related things into a dedicated plugin.~~ Done in #2684 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2635:760,patch,patch,760,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2635,1,['patch'],['patch']
Deployability,"3 changes here:; - ~~FIX Debug build --> force all Zlib links to use the Release version~~; - CLEAN SOFA_HAVE_SOFA.YYY macro for consistency --> use SOFA_HAVE_SOFA_YYY everywhere; - FIX Boost::program_option copy --> `sofa_install_libraries` was missing. **IMPORTANT:** Windows users must update the `lib` directory in SOFA sources with https://www.sofa-framework.org/download/WinDepPack/latest/. Fixes #1851. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1891:73,Release,Release,73,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1891,2,"['Release', 'update']","['Release', 'update']"
Deployability,"3] Initializing with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.1m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [WARNING] [ObjectFactory] Class already registered: JointSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: RigidMapping<Rigid2d,Vec2d>; [WARNING] [ObjectFactory] Class already registered: RigidMapping<Rigid3d,Vec3d>; [WARNING] [ObjectFactory] Class already registered: RigidRigidMapping<Rigid3d,Rigid3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [WARNING] [ObjectFactory] Class already registered: AngularSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: RestShapeSpringsForceField<Rigid3d>; [WARNING] [ObjectFa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:9464,install,install,9464,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability,"3d as the default; [WARNING] [ObjectFactory] Class already registered: DynamicSparseGridGeometryAlgorithms<Vec2d>; [WARNING] [ObjectFactory] Class already registered: DynamicSparseGridGeometryAlgorithms<Vec3d>; ....; ```. or with a cryptic error message if you try to use the PluginManager from the GUI:; ```; [INFO] [PluginManager] Plugin not found in loaded plugins: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; [ERROR] [SofaPluginManager] plugin should be loaded: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; ```. Now, if you try to load twice the plugins (from differents paths then), it will print:; (one dll is in `build/bin/Release/` and the other one directly in `build/`; ```; [WARNING] [PluginManager] This plugin SofaNonUniformFem has been loaded from a different path, it will certainly lead to bugs or crashes...; You tried to load: ....build/bin/Release/SofaNonUniformFem.dll; Already loaded: ....\build\SofaNonUniformFem.dll; [WARNING] [PluginManager] Plugin SofaNonUniformFem is already loaded from a different path, check you configuration.; ```; The ""double information"" comes from the fact that in the end we consider the plugin as loaded ; the code afterwards will try to load the plugin nevertheless (hence having to detect twice the duplication); In the GUI code for example: https://github.com/sofa-framework/sofa/blob/71691309251177322967f53bc7a024e89c19bcbc/modules/SofaGuiQt/src/sofa/gui/qt/SofaPluginManager.cpp#L120. Obviously it is really not advised to continue to use Sofa if this case occurs but at least the user will know what is going on.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it bui",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2352:1380,configurat,configuration,1380,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2352,1,['configurat'],['configuration']
Deployability,9	 0 	 0 	 0 	 0.04	......Compute BoundingTree: lineCollisionModel3; 6 	 0.16	 1 	 0 	 0.10	 0 	 0 	 0 	 0.03	......Compute BoundingTree: pointCollisionModel3; 5 	 0.16	 1 	 0.01	 0.03	 0.01	 0 	 0.01	 0.19	.....BroadPhase; 5 	 0.17	 1 	 1.98	 3.67	 2.62	 0.30	 2.62	 54.67	.....NarrowPhase; 4 	 2.78	 1 	 0.17	 2.29	 0.27	 0.08	 0.27	 5.59	....CollisionResponse; 4 	 3.06	 1 	 0.01	 0.06	 0.01	 0 	 0.01	 0.20	....end collision; 3 	 3.07	 9 	 0 	 0.03	 0 	 0 	 0.01	 0.13	...InteractionFF; 3 	 3.08	 2 	 0.19	 1.48	 0.76	 0.18	 1.51	 31.59	...Mechanical; 4 	 3.11	 2 	 0.05	 0.14	 0.06	 0.01	 0.12	 2.53	....ComputeForce; 4 	 3.17	 2 	 0.03	 0.11	 0.04	 0.01	 0.08	 1.68	....ComputeRHTerm; 4 	 3.22	 2 	 0 	 0.02	 0 	 0 	 0 	 0.09	....MBKBuild; 5 	 3.22	 2 	 0 	 0.02	 0 	 0 	 0 	 0.03	.....CG-setSystemMBKMatrix; 4 	 3.22	 2 	 0.06	 1.24	 0.60	 0.16	 1.21	 25.25	....MBKSolve; 5 	 3.25	 2 	 0.04	 1.20	 0.57	 0.16	 1.14	 23.86	.....CG-Solve; 4 	 3.94	 2 	 0 	 0.02	 0 	 0 	 0.01	 0.15	....UpdateVAndX; 2 	 4.60	 1 	 0.01	 0.03	 0.01	 0 	 0.01	 0.23	..UpdateSimulationContextVisitor; 2 	 4.62	 1 	 0.02	 0.07	 0.02	 0.01	 0.02	 0.46	..UpdateMapping; 3 	 4.62	 26.67	 0 	 0.02	 0 	 0 	 0 	 0.05	...MappingVisitor - processMechanicalMapping: unnamed; 2 	 4.64	 1 	 0.12	 0.44	 0.14	 0.03	 0.14	 3.02	..UpdateBBox; 3 	 4.64	 1 	 0.01	 0.07	 0.02	 0 	 0.02	 0.35	...BoundingBoxVisitor - ProcessTopDown: root; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaGeneralDeformable; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMiscCollision; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaImplicitOdeSolver; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMeshCollision; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaTopologyMapping; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaLoader; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: visualStyle1; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: defaultPipeline1; 4 	 4.65	 1 	 ,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089:3245,Update,UpdateVAndX,3245,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089,1,['Update'],['UpdateVAndX']
Deployability,"99% of the modules/plugins implements getModuleComponentList() with; ```; const char* getModuleComponentList(); {; /// string containing the names of the classes provided by the plugin; static std::string classes = core::ObjectFactory::getInstance()->listClassesFromTarget(MODULE_NAME);; return classes.c_str();; }; ```; And the rest either omitted to implement it, or just forgot to update the list. (e.g MultiThreading). IMO getModuleComponentList() does not have really a meaning anymore and one should just use `ObjectFactory::listClassesFromTarget()` directly.; AFAIK, the only piece of code in the SOFA codebase using this entrypoint is Gui.Qt widget, displaying the component list for each loaded plugin. This PR:; - removes all the entrypoints from Sofa.Component.* (+MultiThreading); - deprecates getModuleComponentList() calls; - Sofa.Gui.Qt: calls directly listClassesFromTarget(), but still tests if getModuleComponentList() needs to be called; - warns at runtime if one plugin do implement getModuleComponentList(); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4795:384,update,update,384,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4795,1,['update'],['update']
Deployability,": [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collision.Geometry""]; [ERROR] [SofaRuntime] ValueError: Object type BackgroundSetting<> was not created; The object is not in the factory.; This component has been MOVED from SofaBaseVisual to Sofa.Component.UserInterface.ConfigurationSetting since SOFA v22.06.; To continue using this component you may need to update your scene by adding. Traceback (most recent call last):; File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 435, in; env.reset(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 380, in reset; super().reset(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/base.py"", line 147, in reset; self._init_sim(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 216, in _init_sim; super()._init_sim(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/base.py"", line 230, in _init_sim; self.scene_creation_result = getattr(self._scene_description_module, ""createScene"")(self._sofa_root_node, **self.create_scene_kwargs); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/scene_description.py"", line 98, in createScene; add_scene_header(; File ""/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:5778,Configurat,ConfigurationSetting,5778,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Configurat'],['ConfigurationSetting']
Deployability,"::Data<MatrixDeriv>;. using Point = Eigen::Vector2d;; };; } // namespace Sim2D. } // namespace VNCS; ```. ```; #include <SofaBaseMechanics/MechanicalObject.h>; #include <SofaBaseMechanics/MechanicalObject.inl>. namespace VNCS; {; namespace Sim2D; {; using MO = sofa::component::container::MechanicalObject<VNCS::Sim2D::Kernel::SimType>;. } // namespace Sim2D; } // namespace VNCS; ```. ```; #include <gtest/gtest.h>; #include <VNCS/2D/MechanicalObject.h>. TEST(MechanicalObject, 2D); {; // Create a Clustering matrix; auto mo = sofa::core::objectmodel::New<VNCS::Sim2D::MO>();; // mo->resize(10);; // auto positions = mo->readPositions();. // EXPECT_EQ(positions.size(), 10);; }; ```; My linking line is the following:. ```; 2/2 0.4/sec] Linking CXX executable bin/tst_mechanicalobject; FAILED: bin/tst_mechanicalobject ; : && /usr/bin/c++ -O3 -DNDEBUG tests/MechanicalObject/CMakeFiles/tst_mechanicalobject.dir/tst_mechanicalobject.cpp.o -o bin/tst_mechanicalobject -Wl,-rpath,/opt/libs/sofa/build/install/lib /opt/libs/sofa/build/install/lib/libSofaBaseTopology.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCommon.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaDefaultType.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaHelper.so.20.06.99 /usr/lib/libGLU.so /usr/lib/libGLX.so /usr/lib/libOpenGL.so /usr/lib/libGLEW.so /usr/lib/libboost_system.so.1.75.0 /usr/lib/libboost_filesystem.so.1.75.0 /usr/lib/libboost_program_options.so.1.75.0 /usr/lib/libboost_thread.so.1.75.0 /opt/libs/sofa/build/install/lib/libgtest.so.2.6.2 /usr/lib/libQt5Core.so.5.15.2 /usr/lib/libgmpxx.so /usr/lib/libmpfr.so /usr/lib/libgmp.so /usr/local/lib/libspdlog.a /opt/libs/sofa/build/install/lib/libgtest.so -lpthread; ```. but it fails with an unidefined reference. ```; undefined reference to `sofa::component::container::MechanicalObject<sofa::defaulttype::StdVectorTy",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1752:1621,install,install,1621,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1752,2,['install'],['install']
Deployability,"::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downlo",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2057:1668,Release,Release,1668,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057,1,['Release'],['Release']
Deployability,":; def __init__(self, MO):; super().__init__(); self.MO = MO. def onAnimateBeginEvent(self, _):; print(""\n\nonAnimateBeginEvent""); random_disp = np.random.normal(0, 1e-2, self.MO.position.value.shape); self.MO.position.value = self.MO.rest_position.value + random_disp; print(f""{random_disp[0]=}""); print(f""{self.MO.position.value[0]=}""). def onAnimateEndEvent(self, _):; print(""onAnimateEndEvent""); print(f""{self.MO.position.value[0]=}""). def createScene(root):; root.addObject('RequiredPlugin', pluginName=['BugPosition']); root.addObject(""MechanicalObject"", name=""MO"", template=""Vec3d"", position=[1, 0, 0]); root.addObject(""TestComponent"", position=""@MO.position""); root.addObject(Controller(root.MO)); ```. **Steps to reproduce**; I've put everything needed to reproduce the issue here https://github.com/jnbrunet/BugPosition. Hence, the following steps can be taken (the SOFA installation path must be changed, and SofaPython3 plugin must be installed alongside SOFA):; ```bash; export SOFA_ROOT=/opt/sofa; export PYTHONPATH=$PYTHONPATH:$SOFA_ROOT/plugins/SofaPython3/lib/python3/site-packages; ```; Then, compile and launch the scene; ```bash; git clone git@github.com:jnbrunet/BugPosition.git; cmake -DCMAKE_PREFIX_PATH=$SOFA_ROOT/lib/cmake -S BugPosition -B BugPosition/build -DCMAKE_BUILD_TYPE=Release; cmake --build BugPosition/build; python3 BugPosition/scene.py; ```; which should produce the erroneous results (random displacement isn't taken into account).; ```; (...); onAnimateBeginEvent; random_disp[0]=array([-0.01092411, -0.00742505, -0.01442109]); self.MO.position.value[0]=array([1., 0., 0.]); onAnimateEndEvent; self.MO.position.value[0]=array([1., 0., 0.]); ```. **Expected behavior**; The correct behaviour can be obtained using the GUI. In the previous example, simply adding the `gui` parameter to the scene will do the trick:. ```commandline; python3 BugPosition/scene.py gui; (...); onAnimateBeginEvent; random_disp[0]=array([-0.00746889, -0.01065234, 0.00446683]); self.MO",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2761:2610,install,installation,2610,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2761,2,['install'],"['installation', 'installed']"
Deployability,":component::collision::response::mapper::BarycentricContactMapper<sofa::component::collision::geometry::LineCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::updateXfree(); sofa::component::collision::response::contact::FrictionContact<sofa::component::collision::geometry::LineCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::createResponse(sofa::core::objectmodel::BaseContext*); sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionResponse(); sofa::simulation::PipelineImpl::computeCollisionResponse(); sofa::simulation::CollisionVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool); sofa::simulation::AnimateVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*); sofa::simulation::AnimateVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simul",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3524:2336,Pipeline,PipelineImpl,2336,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3524,1,['Pipeline'],['PipelineImpl']
Deployability,":core::objectmodel::SingleLink<$>::changed(boost::intrusive_ptr<$>, boost::intrusive_ptr<$>) (344 times, avg 10 ms); 3559 ms: sofa::core::objectmodel::TData<$>::copyValue(sofa::core::objectmodel::BaseData const*) (1784 times, avg 1 ms); 3513 ms: sofa::core::objectmodel::TClass<$>::dynamicCast(sofa::core::objectmodel::Base*) const (4067 times, avg 0 ms); 3446 ms: std::_Sp_counted_ptr<$>::_M_dispose() (2717 times, avg 1 ms); 3324 ms: sofa::component::container::MechanicalObject<$>::vOp(sofa::core::ExecParams const*, sofa::core::TVecId<$>, sofa::core:... (12 times, avg 277 ms); 3294 ms: sofa::component::topology::TetrahedronSetGeometryAlgorithms<$>::defineTetrahedronCubaturePoints() (6 times, avg 549 ms); 3285 ms: sofa::component::topology::EdgeSetGeometryAlgorithms<$>::defineEdgeCubaturePoints() (10 times, avg 328 ms); 3227 ms: sofa::core::objectmodel::TData<$>::updateFromParentValue(sofa::core::objectmodel::BaseData const*) (1785 times, avg 1 ms); 3215 ms: void Eigen::internal::assign_sparse_to_sparse<$>(Eigen::SparseMatrix<$>&, Eigen::CwiseBinaryOp<$> const&) (27 times, avg 119 ms); 3198 ms: sofa::component::topology::TriangleSetGeometryAlgorithms<$>::defineTetrahedronCubaturePoints() (6 times, avg 533 ms); 3196 ms: sofa::defaulttype::VirtualTypeInfo<$>::BaseType() const (2774 times, avg 1 ms); 3184 ms: sofa::component::topology::TopologyEngineImpl<$>::TopologyEngineImpl(sofa::core::topology::BaseTopologyData<$>*, sofa:... (117 times, avg 27 ms); 3141 ms: sofa::core::objectmodel::TClass<$>::~TClass() (4587 times, avg 0 ms); 3120 ms: sofa::component::interactionforcefield::MechanicalMatrixMapper<$>::addKToMatrix(sofa::core::MechanicalParams const*, s... (12 times, avg 260 ms); 3098 ms: sofa::component::engine::boxroi::BoxROI<$>::draw(sofa::core::visual::VisualParams const*) (6 times, avg 516 ms); 3080 ms: sofa::component::engine::MeshROI<$>::MeshROI() (6 times, avg 513 ms); 3079 ms: sofa::core::objectmodel::TClass<$>::isInstance(sofa::core::objectmodel::Base*) const (",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1523:28761,update,updateFromParentValue,28761,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1523,1,['update'],['updateFromParentValue']
Deployability,":vector<unsigned int, sofa::type::CPUMemoryManager<unsigned; int> > const&, bool); sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier::removeTetrahedra(sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned int> >; const&, bool); sofa::gui::component::performer::TopologicalChangeManager::removeItemsFromTriangleModel(sofa::component::collision::geometry::TriangleCollisionModel<sofa::defaulttype::StdVe; ctorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*, sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned int> > const&) const; sofa::gui::component::performer::TopologicalChangeManager::removeItemsFromCollisionModel(sofa::core::CollisionModel*, unsigned int const&) const; sofa::gui::component::performer::RemovePrimitivePerformer<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::execute(); sofa::gui::component::performer::BaseMouseInteractor::updatePosition(double); sofa::simulation::BehaviorUpdatePositionVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::gr; aph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std; ::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::gr; aph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std; ::pair<sofa::simulation::graph::DAGNode* const, ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3202:7135,update,updatePosition,7135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3202,1,['update'],['updatePosition']
Deployability,":warning: depends on #1488. This refactoring guarantees size consistency between `position / forces / velocity / external_forces` buffers when resized. Since those fields are coupled, changing the size of one should change the size of the others. except it's not the case.; plus, there's a ""size"" datafield that is supposed to determine the size of the buffers. Thus it is now impossible to edit the size of those buffers directly. any insertion / removal of a line in the buffers must be preceded with a change of size, which in turn will redimension the buffers. Also: When creating the scene (before executing the simulation) init_size and init_position should be used.; The idea behind that last change is that we should have separate datafields for inputs and outputs, instead of mixing both concepts together. :warning: **THIS IS BREAKING** because there are probably tons of codes out there that resize position manually and then call` init / reinit / bwdInit` on MOs, hoping for them to update the component (I should know I've been doing it for 6years :D). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1489:995,update,update,995,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1489,1,['update'],['update']
Deployability,"; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/wglew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/iconv.h; ....; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SofaOpenglVisual/SofaOpenglVisualConfig.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/SceneCreator.lib; 1>-- Up-to-date: C:/projects/sofa-build/install/bin/SceneCreator.dll; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetAssembledSizeVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetVectorVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneCreator.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneUtils.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/config.h; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets-release.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfigVersion.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfig.cmake; 1>CMake Error at applications/plugins/CImgPlugin/cmake_install.cmake:38 (file):; 1> file cannot create directory:; 1> C:/projects/sofa-build/$C:/projects/sofa-build/install/plugins/CImgPlugin/bin.; 1> Maybe need administrative privileges.; 1>Call Stack (most recent call first):; 1> applications/plugins/cmake_install.cmake:37 (include); 1> cmake_install.cmake:88 (include); 1>; 1>; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: The command ""setlocal; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: ""C:\Program Files\CMake\bin\cmake.exe"" -DBUILD_TYPE=R",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:1595,Install,Installing,1595,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,3,"['Install', 'install', 'release']","['Installing', 'install', 'release']"
Deployability,"; from gymnasium.core import (; File ""C:\SOFA\Lib\site-packages\gymnasium\core.py"", line 8, in <module>; import numpy as np; File ""C:\SOFA\Lib\site-packages\numpy\__init__.py"", line 149, in <module>; raise ImportError(msg) from e; ImportError: Error importing numpy: you should not try to import numpy from; its source directory; please exit the numpy source tree, and relaunch; your python interpreter from there. I already checked the suggested troubleshooting, but I couldn't fix the error.; Can you help me?; Thank you!. **Steps to reproduce**; `py -3.11 -m venv C:/SOFA`; `SOFA\Scripts\Activate`; `git clone https://github.com/ScheiklP/sofa_env.git `; `cd sofa_env`; `pip install -e .`; `python3 sofa_env/scenes/controllable_object_example/controllable_env.py`. **Expected behavior**; I would have expected that no errors would appear. ---------------------------------------------. ### Environment. **Context**. - System: OS Name	Microsoft Windows 11 Home; - Version of SOFA: I compiled SOFA with Cmake to be able to use with Geomagic Touch; - State: Install directory: C:\sofa. **Command called**. ```txt. python3 sofa_env/scenes/controllable_object_example/controllable_env.py. ```. **Env vars**. ```txt. import sys; print(sys.path); ['', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\idlelib', 'C:\\SOFA\\Lib\\site-packages', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\\Python\\Python311\\python311.zip', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\\Python\\Python311\\Lib', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\\Python\\Python311\\DLLs', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\\Python\\Python311', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages']. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. Traceback (most recent call last):; File ""C:\SOFA\Lib\site-packages\numpy\core\__init__.py"", line 24, in <module>; from . import multiarray; File ""C:\SOFA\Lib\site-packages",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5088:3203,Install,Install,3203,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5088,1,['Install'],['Install']
Deployability,">; [WARNING] [ObjectFactory] Class already registered: EvalSurfaceDistance<Vec3d>; [WARNING] [ObjectFactory] Default template for class ExtraMonitor already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: ExtraMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: ExtraMonitor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ExtraMonitor<Vec6d>; [WARNING] [ObjectFactory] Default template for class Monitor already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: Monitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: Monitor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: Monitor<Vec6d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [WARNING] [ObjectFactory] Class already registered: TopologicalChangeProcessor; [WARNING] [ObjectFactory] Class already registered: TopologyChecker; [WARNING] [ObjectFactory] Default template for class TopologyBoundingTrasher already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: TopologyBoundingTrasher<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_c",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:31984,install,install,31984,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability,">setSelectionFromPath({""/root/child1/object"", ""/root/child1/object2""}); ; //// This should be on the client side; SofaEditor::ID id = SofaEditor::getIdFromEditorName(""main"");; shared_ptr<SofaEditorState> s = SofaEditor::getState(id);; auto& v = s->getSelection(); ; ```. It is more common to have the client side in a PythonScriptController. To make that possible this module have a python binding which allows to write interesting editing interaction in python:; ```python; from SofaEditor import SofaEditor. def onDraw():; s = SofaEditor.getSelection(); drawSomethingSpecialForSelectedObject(s); ```. The python binding is different to the one we have yet into Sofa s it is made totally independently to SofaPython and is done using cython (http://cython.org/) ; (for which I'm curious to see how this will survive our CI). . Other notable things are that there is unittest either on the c++ side & python side and that the CMakeLists.txt are installing everything into a single the install location with the following structure: ; module/SofaEditor/SofaEditor.so; module/SofaEditor/python/SofaEditor/__init__.py; module/SofaEditor/python/SofaEditor/SofaEditor.so ; module/SofaEditor/examples; (I'm not sure it is a good idea but this is a kind of ""package"" but I think it is an interesting way to ship plugins). . I will open other PR to integrate this feature into runSofa and runSofa2. . For the records, I was hesitating between three designs. The first one consists in using the ""context/ExecParams"" to hold the editor state. As this context is passed to the components during the scenegraph traversal this would allows them to know the status of the editor. The second approach was using flexible messages/event transmitted through the scene graph. The third design was much simpler and simply consist of using a singleton so that it can be used everywhere there is a need to know the editor status. Between the three I made the decision to use the simplest approach (simpler to implement & s",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/735:1361,install,installing,1361,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/735,2,['install'],"['install', 'installing']"
Deployability,"A bug has been detected when creating and deleting component using TopologyHandler during the simulation. ### Current Status; Right now in the code, components like FEM, Constraints, etc... are creating TopologyData and at init stage, those TopologyData are creating a TopologyHandler to support TopologicalChanges (only if the component is linked with a dynamic topology container).; The actual design is:; 1. Create the TopologyHandler at component init (internally through the TopologyData creation). ; 2. The TopologyHandler register itselft into the TopologyContainer to be able to receive topological events.; 3. When the simulation graph is destroyed, TopologyHandler is deleted and TopologyContainer is cleared. ### Limitation/Bug; Scenario like using the mouse picking is creating a temporary Node with springFF or attachedConstraint component which is creating a TopologyHandler. When the mouse is released the Node is destroyed, deleting the components and the TopologyHandler as well. ; But the TopologyHandler is not properly removed from the dynamic topologyContainer list of TopologyHandler. This is why in issue #3370 the scene crash as soon as a vertex is removed because the TopologyContainer is sending the POINTREMOVED event to all topologyHandler registered. Including the deleted one from the mouse attached constraint. The pointer to the topologyHandler is not null but pointed to a deleted object. ### PR changes description; This PR and the PR #3271 (included in this on) are introducing a mechanism to better register and unregister a TopologyHandler from the TopologyContainer.; 1. register is done at creation of the TopologyHandler; 2. If TopologyHandler has well been added to the list manged by the Container, a internal bool m_isRegisterd is set to true.; 3. When the TopologyHandler is deleted (meaning its component owner is deleted). If m_isRegisterd == true, the TopologyHandler will unregister itself.; 4. When the TopologyContainer is deleted, it will go through ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3369:908,release,released,908,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3369,1,['release'],['released']
Deployability,"A component can be included in multiple maps (`uncreatableComponents`, `dealiasedComponents`, ` movedComponents`). If it is the case, only one was picked and the others were ignored. This PR processes all the maps to inform the user. Example of output:. ```; The component 'DefaultPipeline' cannot be found in the factory. ; Several reasons are possible:; 1) This component has been MOVED from SofaBaseCollision to Sofa.Component.Collision.Detection.Algorithm since SOFA v22.06.; To continue using this component you may need to update your scene by adding; <RequiredPlugin name='Sofa.Component.Collision.Detection.Algorithm'/> ; 2) This alias for the component CollisionPipeline was removed in SOFA v24.12.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5074:529,update,update,529,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5074,1,['update'],['update']
Deployability,"A directory that was recently removed is still mentioned in the cmake build files, so installation fails (compilation is fine). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/470:86,install,installation,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/470,1,['install'],['installation']
Deployability,"A long PR but it is actually divided in 3 parts. A link is provided for each part pointing to a comparison with the previous part. # 1. Introduction of the plugin. A new plugin is introduced to welcome new components. It is enabled by default.; https://github.com/sofa-framework/sofa/compare/master...alxbilger:sofamatrix?expand=1. The plugin may deserve a better name. # 2. Move CImgPlugin features on matrices. I introduced features related to matrices in CImgPlugin in a previous PR. It did not make sense. It is preferable to have them in a higher-level plugin, so I moved them in SofaMatrix.; https://github.com/alxbilger/sofa/compare/sofamatrix...sofamatrix_cimg. # 3. Introduction of a component to visualize the matrix. A component is introduced. It gets the matrix from the linear system and convert it to an bitmap to visualize it directly in the GUI.; https://github.com/alxbilger/sofa/compare/sofamatrix_cimg...sofamatrix_gui. ![image](https://user-images.githubusercontent.com/10572752/144421772-5676f6e8-12af-4468-8bec-24ea7856b00f.png). # To do:. - [x] Expand the bitmap in height; - [ ] Update the bitmap when the image changes during the simulation; - [ ] Do we move `GlobalSystemMatrixExporter` into SofaMatrix?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2517:1103,Update,Update,1103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2517,1,['Update'],['Update']
Deployability,"A mechanism of component state is now available while it is still unused and the API is not spread over the code base. We could work on generalizing it : delegating all functions (init, addForce etc) to make sure it uses the componentState.; Then, internal update of component would be possible and check in the scene graph of each component would allow to detect issues and prevent from crashes. Initially, this issue was only focused on ""Deprecate the doUpdateInternal"" : this API of internal update in BaseObjects should be removed and callbacks should be spread instead. As noticed in #1979",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2005:257,update,update,257,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2005,2,['update'],['update']
Deployability,"A user can chose in the scene to update the bounding box or not. It is no longer a compile-time selection. In InextensiblePendulum.scn, the second pendulum explodes. An update of the bbox would adapt to the exploded object. The bbox is so large that the first pendulum is no longer visible. It may lead the user to think that the scene is not working properly. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3080:33,update,update,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3080,2,['update'],['update']
Deployability,"ADD : use a string instead of an enum to specify an integration method as it easier for user to add new ones. This slightly changes the API of numerical integration.; ADD : add the possibility to add a function to create on the fly the required integration points (when an analytical formula is available).; UPDATE : modified the name of the integration methods for edges, triangles, tetrahedra and hexahedra.; UPDATE : use of numerical integration in Flexible; FIX : bug corrected when using of BezierShapeFunction with plugin HighOrderMeshes . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/936:52,integrat,integration,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/936,7,"['UPDATE', 'integrat']","['UPDATE', 'integration']"
Deployability,ADD some AdvanceTimer macro missing to understand the collision pipeline; FIX some end macro missing. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1158:64,pipeline,pipeline,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1158,1,['pipeline'],['pipeline']
Deployability,About the update of TemplateAlias,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3450:10,update,update,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3450,1,['update'],['update']
Deployability,Add CUDA support on Continuous Integration (CI) to test SofaCUDA,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/665:20,Continuous,Continuous,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/665,2,"['Continuous', 'Integrat']","['Continuous', 'Integration']"
Deployability,"Add ConstraintAttachButtonSetting to allow configuration of Lagrangian based mouse interaction directly in the scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4601:43,configurat,configuration,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4601,1,['configurat'],['configuration']
Deployability,Add Data bool d_checkTopology in PointSetTopologyContainer. By default to false. - Methods CheckTopology always return true if this option is not activated.; - Update some topology modifiers methods to check this option instead of CHECK_TOPOLOGY macro. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1351:160,Update,Update,160,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1351,1,['Update'],['Update']
Deployability,Add a boolean data (d_propagatetoDOF) to allow or not the propagation of the topological changes to the mechanical state immediately as soon as they occure. Default value (d_propagateToDOF=true) the topological changes are propagated immediately following the SOFA regular behavior and it should not affect all the Sofa current scenes. If the boolean is set to false the topological state changes update are not propagated immediately and they can executed in another step of the simulaiton loop. This modification should make the concurrent execution of the topological changes and the simulation safe. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/838:397,update,update,397,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/838,1,['update'],['update']
Deployability,"Add a new update mechanism for components which need to update / recompute internal variables when one or several data are modified. A visitor has been created for this, called at each begin of time step to refresh if necessary the internal variables. All feedback welcome. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1131:10,update,update,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1131,2,['update'],['update']
Deployability,"Add method to compute the good element density using ancestors and coefs values.; Update all toplogy addElement to take into account ancestors indices and coefficients. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2257:82,Update,Update,82,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2257,1,['Update'],['Update']
Deployability,"Add option to choose between restPosition and position. Also update the init method to better check the inputs. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1978:61,update,update,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1978,1,['update'],['update']
Deployability,"Add the `computeBBox` method to `SpringForceField`, so all spring force fields having `SpringForceField` as the base class can update their bounding box. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2599:127,update,update,127,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2599,1,['update'],['update']
Deployability,Added function:; 	drawInifiniteLine; 	drawDisk; 	drawCircle; 	drawArrow. Every drawtool implementation will need to be updated. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1252:119,update,updated,119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1252,1,['update'],['updated']
Deployability,Added update of ROI indices at the beginning of each time step using the listening option. todo:; - drawing selected points and ROI radius; - define number of indices of object 1 to consider; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1066:6,update,update,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1066,1,['update'],['update']
Deployability,"Adding a few utility functionalities to simplify Data tracking. - Data tracking system is now using Data's counter (lighter and simpler).; - externalizing Data tracking system outside of DataEngine so it can be use elsewhere (including other kinds of components).; - adding DataTrackerEngine that is a kind of DataEngine but that is not a component (not a BaseObject). It can easily be added anywhere and can link any Data, such as inside a Component, or even between components.; - adding DataTrackerFunctor to call a functor as soon as a Data is modified. What you can do: (have a look at the tests). - check if a Data changed on a regular rhythm. e.g check at each time step if a stiffness parameters changed to update a Matrix.; - automatically update a Data if its dependencies changed. e.g. young modulus can be set as a dependency of stiffness matrix, so each time you ask for the matrix, if the modulus changed, the matrix will be updated (behavior similar to DataEngine); - do an action as soon as a Data is modified. E.g. updating the gui scene graph as soon as a Node is (de)activated (by tracking the Data Node::activated).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/80:715,update,update,715,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/80,3,['update'],"['update', 'updated']"
Deployability,"Adding a few utility functionalities to simplify Data tracking. - externalizing Data tracking system outside of DataEngine so it can be use everywhere.; - Data tracking system is now using Data's counter (lighter and more simple).; - adding DataTrackerEngine that is a kind of DataEngine but that is not a component (not a BaseObject). It can easily be added anywhere and can link any Data, such as inside a Component, or even between components. What you can do: (have a look at the tests); - check if a Data changed on a regular rhythm. e.g check at each time step if a stiffness parameters changed to update a Matrix.; - automatically update a Data if its dependencies changed. e.g. young modulus can be set as a dependency of stiffness matrix, so each time you ask for the matrix, if the modulus changed, the matrix will be updated (behavior similar to DataEngine)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/60:604,update,update,604,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/60,3,['update'],"['update', 'updated']"
Deployability,"After building SOFA master (up to date) with success. Building INSTALL project in Visual 2017 failed:. ```; 1>------ Build started: Project: INSTALL, Configuration: Release x64 ------; 1>-- Install configuration: ""Release""; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/glew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/glut.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/glxew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/wglew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/iconv.h; ....; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SofaOpenglVisual/SofaOpenglVisualConfig.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/SceneCreator.lib; 1>-- Up-to-date: C:/projects/sofa-build/install/bin/SceneCreator.dll; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetAssembledSizeVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetVectorVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneCreator.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneUtils.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/config.h; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets-release.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfigVersion.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfig.cmake; 1>CMake Error at applications/plugins/CImgPlugin/cmake_install.cmake:38 (file):; 1> file cannot create d",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:63,INSTALL,INSTALL,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,17,"['Configurat', 'INSTALL', 'Install', 'Release', 'configurat', 'install']","['Configuration', 'INSTALL', 'Install', 'Installing', 'Release', 'configuration', 'install']"
Deployability,"After downloading and installing the current release binary for macOS on macOS 11.2.3 (Big Sur) it fails with the error `Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent`. Here is the full error log:; ```; Process: runSofa-20.12.01 [50874]; Path: /Applications/runSofa.app/Contents/MacOS/bin/runSofa; Identifier: org.sofa-framework.runsofa; Version: 0; Code Type: X86-64 (Native); Parent Process: ??? [1]; Responsible: runSofa-20.12.01 [50874]; User ID: 501. Date/Time: 2021-03-13 15:57:28.167 +0100; OS Version: macOS 11.2.3 (20D91); Report Version: 12; Bridge OS Version: 5.2 (18P4347); Anonymous UUID: 5C06CC90-63AA-4BB4-D9A1-27A399A7A269. Sleep/Wake UUID: EDB34D1C-5F47-4D91-82BA-9C09AEC804F8. Time Awake Since Boot: 75000 seconds; Time Since Wake: 13000 seconds. System Integrity Protection: enabled. Crashed Thread: 0. Exception Type: EXC_CRASH (SIGABRT); Exception Codes: 0x0000000000000000, 0x0000000000000000; Exception Note: EXC_CORPSE_NOTIFY. Termination Reason: DYLD, [0x4] Symbol missing. Application Specific Information:; dyld: launch, loading dependent libraries. Dyld Error Message:; Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent; Referenced from: /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts; Expected in: /usr/local/lib/QtWidgets.framework/QtWidgets; in /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts. Binary Images:; 0x1078c4000 - 0x1078e7fff +runSofa (0) <F5377489-827F-342E-9B3B-C78AC8FFB70D> /Applications/runSofa.app/Contents/MacOS/bin/runSofa; 0x1078f7000 - 0x107916fff +libSofaSimulationGraph.20.12.01.dylib (0) <2B9D2482-ED40-3ECB-9B4A-7BB93AFEF219> /Applications/runSofa.app/Contents/MacOS/lib/libSofaSimulationGraph.20.12.01.dylib; 0x107957000 - 0x10796afff +libSofaGuiMain.20.12.01.dylib (0) <B93CBF60-CD3B-39C5-9B98-9DAF891408CC> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiMain.20.12.01.dylib; 0x107979000 - 0x1079dcfff +libSofaValidat",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:22,install,installing,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,2,"['install', 'release']","['installing', 'release']"
Deployability,"After the discussion on DataLink ( #1526 ) now the Link themselves:. Objectives:; - Avoid multiple instantiations (Node.h) - Link with forward declaration; - Avoid using Links for Sequence / Single when it is actually no real Link. Positive impact:; - clean, factorization and especially the tests; - compile time, perf, related problems: can not be evaluated; - code more readable, more accessible (new devs). Functionally:; - store list something with a name and a help string; - SingleLink vs MultiLink → Shared API; - MultiLink conversion does not exist; - MultiLinks have iterators; - SingleLink have the API for iterating over elements (even if single link). -------. Tasks; - Add test for CheckPath to validate its behavior: #1714 [Merged]; - Move CheckPath() & CheckPathes() from Link.h to BaseLink: #1717 [Merged]; - Add test to show broken behavior in SingleLink: #1749 [To review]; - Move updateLinks() from Link.h to BaseLink: #1735 [Waiting #1749]; - Move read() from Link.h to BaseLink: #1736 [Waiting 1735]; - Unify the notifcation mechanisme in SingleLink/MultiLink: #1706 [breaking]; - Unify the container part of the Link API for SingleLink/MultiLink/BaseLink: (TO COME, draft in:; https://github.com/CRIStAL-PADR/sofa/blob/xp-remove-node-deps/SofaKernel/modules/SofaCore/src/sofa/core/objectmodel/Link.h ); - Replace the use of SingleLink to implement the non sptr version of Node::Single: (TO COME, wip in #1737); - Replace the use of MultiLink to implement the non sptr version Node::Sequence: (TO COME as drafted in NodeContainerSequence https://github.com/CRIStAL-PADR/sofa/blob/xp-remove-node-deps/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/Node.h); - Unify at best the internal parts of SingleLink & MultiLink (TO COME)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1722:900,update,updateLinks,900,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1722,1,['update'],['updateLinks']
Deployability,"All in the title, files from the previous organization were not deleted; and some cmake.in was not correctly updated. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2909:109,update,updated,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2909,1,['update'],['updated']
Deployability,Allow all loaders (namely Gmsh and STL) to flipNormals (actually reorder the indices of vertices in a triangle).; Update associated scenes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1418:114,Update,Update,114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1418,1,['Update'],['Update']
Deployability,"Also avoid to call the method at ```init``` as input indices might probably not be updated yet. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1979:83,update,updated,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1979,1,['update'],['updated']
Deployability,"Also, the repository won't generate anymore the following error when it is created from another library/executable that is not placed directly in the SOFA installation directory:. ```; Error: [FileSystem::isDirectory()] /home/runner/work/my_program/share/sofa/examples: No such file or directory; Error: [FileSystem::isDirectory()] /home/runner/work/my_program/share/sofa: No such file or directory; ``` . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1656:155,install,installation,155,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1656,1,['install'],['installation']
Deployability,AnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [WARNING] [ObjectFactory] Class already registered: CubeTopology; [WARNING] [ObjectFactory] Class already registered: CylinderGridTopology; [WARNING] [ObjectFactory] Class already registered: SphereGridTopology; [WARNING] [ObjectFactory] Class already registered: SphereQuadTopology; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [WARNING] [ObjectFactory] Class already registered: CenterPointTopologicalMapping; [WARNING] [ObjectFactory] Class,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:25386,install,install,25386,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability,"Apply doUpdateInternal API to ConstantForceField; and also change the behavior: do not extrapolate any info when an mismatch of size is detected. - Finally, let's not wait the Data update discussion to integrate such an amazing change ; - And .. we could also think about renaming this class as UniformForceField to be consistent with Masses!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1145:181,update,update,181,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1145,2,"['integrat', 'update']","['integrate', 'update']"
Deployability,"As #887 shows, some modules are not properly deployed in their install folders (the directory structure is not well respected because of a missing `set_target_properties( ... PUBLIC_HEADERS ... )` for instance). While #887 has been merged, the other modules should be checked for similar issues.; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/894:45,deploy,deployed,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/894,2,"['deploy', 'install']","['deployed', 'install']"
Deployability,"As introduced in #2021 , a quick fix for a SofaCUDA cmake configuration file not found when requested. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2022:58,configurat,configuration,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2022,1,['configurat'],['configuration']
Deployability,As pointe by @marques-bruno and @fredroy our Opengl rendering code is getting old and less and less compatible with modern architecture and OS. So it may be time for a serious update.; What is your opinion and suggestion that ?. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/678:176,update,update,176,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/678,1,['update'],['update']
Deployability,As promised !; Update of the ChangeLog.md. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old (or has fast-merge label).; - [x] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/263:15,Update,Update,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/263,1,['Update'],['Update']
Deployability,As said in the title this PR puts SofaSparseSolver and SofaPreconditioner as a real module that can be activated/deactivated. . CHANGLELOG/; - move source files to src/SofaSparseSolver & src/SofaPreconditioner so the .h are not leaked anymore. ; - conditional code based on #define SOFA_HAVE_METIS/SOFA_HAVE_CSPARSE is now changed to favor the use of *find_package* to detect and activate conditional building depending on dependencies. ; - add a modules/CMakeLists.txt to integrate that; - add the touched component into the list of 'moved' component. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/668:473,integrat,integrate,473,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/668,1,['integrat'],['integrate']
Deployability,"As soon as the 1st SOFA NG version is ready, the github repository including the CMakeList configuration of NG should be released.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/245:91,configurat,configuration,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/245,2,"['configurat', 'release']","['configuration', 'released']"
Deployability,"At https://defrobotics2022.sciencesconf.org/ we noticed that a lot of sofa users are manually setting SOFA_ROOT and PYTHONPATH. ; The problem is that when they are using a new version, they often forgot to update these path in their system configuration resulting in very hard to understand problems including random crashes (because runSofastarts, then try to load or use a plugin from a different sofa version which can only lead to ). We should think about some mecanisme to detect and guide users when this happens. The mecanism does not need to be bullet proof, guiding 80% of users would be already great. . Drafted suggestion on how we can do that is welcome.; On my side i think that we may have in SOFA_ROOT a file storing an unique ""token/md5 checksum"" telling which version of runSofa the plugin was compiled for and the same for every plugins. ; In case the runSofa version is different to the one stored into this file...and detect a ""wrong SOFA_ROOT"" prints a warning and use an empty SOFA_ROOT. ; Same in the plugin loader, if the runSofa unique token is not the one the plugin is expecting then prints a warning and refuse to load it.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3099:206,update,update,206,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3099,2,"['configurat', 'update']","['configuration', 'update']"
Deployability,Backport installation fix from master (#1154 ) to release v19.06. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1211:9,install,installation,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1211,2,"['install', 'release']","['installation', 'release']"
Deployability,"Based on #2813 . and sofang-ize paths/plugins/etc.; and creation of some *Testing framework (solidmechanics, topology, mapping...). and a loooots of clean as well. (not enough). Some tests were disabled, they are back again. ~~Will be updated when Collision/engine/etc will be merged.~~ done. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2873:235,update,updated,235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2873,1,['update'],['updated']
Deployability,"Based on #3815 and #3805 . ... instead of glBufferSubData() as it is a faster method to upload stuff on the GPU directly. Also:; - dont update indices (lines, triangles, quads) if there are not modified; - dont copy to temporary float if already in float. (same mesh as #3805); Before:; `1000 iterations done in 14.075 s ( 71.048 FPS)` . After:; `1000 iterations done in 9.597 s ( 104.199 FPS)`. After (float); ` 1000 iterations done in 7.618 s ( 131.268 FPS)`. Based on :; - #3815 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3822:136,update,update,136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3822,1,['update'],['update']
Deployability,"Based on #3924 this PR :; - removes the data `force` and replaces it by the possibility to define the data `forces` with size 1; - proposes a solution to avoid circular dependency : when one of both data `forces` or `totalForce` is given at scene initialization, the other can not be used for update later. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4019:293,update,update,293,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4019,1,['update'],['update']
Deployability,"Based on #3924. Answers to #2173 ! We finally have a nice internal udpate @damienmarchal ; The data used internally (`d_forces` and `d_totalForce`) are updated and synchronized through input data (`d_inputForce`, `d_inputForces` and `d_inputTotalForce`). I personnally like this but am open to discussion!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3936:152,update,updated,152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3936,1,['update'],['updated']
Deployability,"Based on :; - #3805 . updateBuffer (which is updating all buffers, to the GPU with its implementation OglModel for example) ; was called before computeNormals, tangents, etc.; So there was a discrepancy of 1 frame between vertices and normals/tangents. Also, using ScopedTimer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3815:22,update,updateBuffer,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3815,1,['update'],['updateBuffer']
Deployability,"Based on ; - #4925 . This PR sets the `ConfigDirectoryPath` with the value of getSofaLocalUserDir (see https://github.com/sofa-framework/sofa/pull/4875) instead of the current directory (could be the binary dir, install dir, etc). This PR also adds the option to change this directory path to a custom path, set with a new cmd line option. ---; Note (not the object of the PR 🙂‍↕️); A bit weird that the config directory path getter is from the GUI, which means one needs a dep on Sofa.GUI to get the config dir path 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4926:212,install,install,212,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4926,1,['install'],['install']
Deployability,"Based on @ziqiu-zeng implementation, this adds the Non-smooth Non-linear Conjugate Gradient (NNCG) as an alternative to the Projective Gauss Seidel (PGS) as NLCP solver in the GenericConstraintSolver. - an option ` resolutionMethod` is added with options: ""ProjectedGaussSeidel"", ""UnbuiltGaussSeidel"" or ""NonsmoothNonlinearConjugateGradient"" and 3 associated examples are provided for each option.; - a useless data `schemeCorrection` was also deprecated and removed. Documentation updated: https://github.com/sofa-framework/doc/pull/74. .. wonder if the PR name includes enough acronyms .. :thinking: . [ci-depends-on https://github.com/sofa-framework/Regression/pull/27]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3053:482,update,updated,482,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3053,1,['update'],['updated']
Deployability,"Based on https://github.com/sofa-framework/sofa/pull/3594. Introduce `ParallelStiffSpringForceField` and `ParallelMeshSpringForceField`. The base classes `SpringForceField` and `StiffSpringForceField` were also refactored to be able to reuse common code with their parallel implementations. Only the `addForce` method is implemented. The provided example has an explicit integration scheme where the force derivative is not required. `addDForce` and `addKToMatrix` may come later. Benchmark:. ```; Sequential; 1000 iterations done in 9.11327 s ( 109.73 FPS). Parallel; 1000 iterations done in 5.04016 s ( 198.406 FPS); ```. The implementation is naïve. We could probably do better. Note there are 11264 points and 62668 edges (springs) in the provided example. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3596:371,integrat,integration,371,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3596,1,['integrat'],['integration']
Deployability,"Based on previous PR #3539 . Add methods and binding for:; - loading sofa.ini file to set resources/example path; - loading SOFA plugin given the file path; - activate/deactivate SOFA messageHandler, get the number of queued message and get the message with its priority. edit:; - Avoid using string as it can produce memory bad access from other software integration. ; - Also remove use of config.h inside SofaPhysicsAPI .h to be able to easily include it in third library. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3540:356,integrat,integration,356,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3540,1,['integrat'],['integration']
Deployability,"Based on the following library: https://github.com/p-ranav/indicators. ![peek](https://github.com/sofa-framework/sofa/assets/10572752/22eb746a-3b10-4b13-94a2-eccce68f326d). Breaking because I updated the cxxopts library. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4168:192,update,updated,192,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4168,1,['update'],['updated']
Deployability,"Because `find_package(CUDA)` is deprecated. See https://cmake.org/cmake/help/latest/module/FindCUDA.html. Note that I had to re-install CUDA. It seems to be a common issue: https://stackoverflow.com/questions/56636714/cuda-compile-problems-on-windows-cmake-error-no-cuda-toolset-found. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2878:128,install,install,128,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2878,1,['install'],['install']
Deployability,"Been looking into github actions, trying to get it to do what I want... not yet really successfully, but I've got a proof of concept. Currently, I run the checks on a slave on ci.inria.fr, and the current POC does a minimalist build / install / run tests workflow. But I think it would be worth asking ourselves what the perfect CI/CD pipeline could be for SOFA & it's plugins. In my mind, I'd like this:. SOFA:; - build / run tests (of course...); - build documentation (doxygen, sphinx...) & deploy on github pages / readthedocs / website; - build docker image & push on docker hub or equivalent (consistent build environment); - generate standalone binaries, zip & upload on github pages / website (SOFA-latest / sofa-nightly build...). PLUGINS:; - load docker image, or wget binaries generated by SOFA; - build / run tests (of course...); - build documentation (doxygen, sphinx...) & deploy on github pages / readthedocs / website; - build docker image & push on docker hub or equivalent; - generate binaries, zip & upload on github pages / website; ; ADVANTAGES of github actions vs JK2:; - ALL CI/CD config centralized in a .github folder in the git repository; - NO separate tool but Github's interface; - SUPER DUPER KICKASS interface design from github, gives direct access to all logs, checks, status badges etc. for each workflow / job / step in the Github checks processes. ![plop2](https://user-images.githubusercontent.com/13734391/69730387-3e4fc280-1128-11ea-8f91-20eeb660d233.png). DISADVANTAGES:; - Still in beta (some bugs noticed, especially when running in self-hosted slaves...); - A lot to recode given what @guparan did in JK2; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatib",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1225:235,install,install,235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1225,3,"['deploy', 'install', 'pipeline']","['deploy', 'install', 'pipeline']"
Deployability,"Before merging this one, regression-test has to be updated as well.; but only after PR #1052 has been merged. fixes #1051 #828 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1061:51,update,updated,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1061,1,['update'],['updated']
Deployability,Better FFMPEG executable integration,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1205:25,integrat,integration,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1205,1,['integrat'],['integration']
Deployability,"Better fix to handle texture coordinate update during topological changes. ; The problem was coming from updating the data from parent Data (from Loader/engine) during the changes. ; Instead of breaking the ""parentship"", the topology callback has been changed to avoid calling updateIfDirty during the changes. This PR combine with the #2414 will; fix #2392 ; Add safeguard in the scene to avoid topologicalChanges which are not handled by TextureInterpolation; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2415:40,update,update,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2415,2,['update'],"['update', 'updateIfDirty']"
Deployability,"Boost libs were not copied correctly in MinSizeRel and RelWithDebInfo configurations on Windows. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1711:70,configurat,configurations,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1711,1,['configurat'],['configurations']
Deployability,"Bug reported by @olumide-x :. Right-clicking on a node and selecting ""expand node"" crashes runSofa master and 20.12.02. ```; #0 0x00007ff666876a98 in sofa::component::visualmodel::LightManager::handleEvent(sofa::core::objectmodel::Event*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaOpenglVisual.so; #1 0x00007ff67b4f2276 in sofa::simulation::PropagateEventVisitor::processNodeTopDown(sofa::simulation::Node*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #2 0x00007ff67cc2aa57 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2057:285,Release,Release,285,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057,3,['Release'],['Release']
Deployability,Build INSTALL on windows is failing,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:6,INSTALL,INSTALL,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,1,['INSTALL'],['INSTALL']
Deployability,"Build process:. ```; cd ~/Apps/git-apps; git clone https://github.com/sofa-framework/sofa.git; cd sofa/src; git checkout master; mkdir build-master; cd build-master; cmake [options] ..; make; ```. To be clear, build directory is: `/home/emdash00/Apps/git-apps/sofa/src/build-master`. Edit: updated `cmake-log.txt`. Last one was the wrong configuration by accident. I tried remaking the config, though it might not be 100% accurate. I used cmake-gui for the options, so here's the [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/4777146/CMakeCache.txt).; Here's the configuration process log of the `cmake [options] ..` command: [cmake-log.txt](https://github.com/sofa-framework/sofa/files/4777183/cmake-log.txt). Output is very long so I've attached it in this text file [log.txt](https://github.com/sofa-framework/sofa/files/4777142/log.txt). Probably the most notably part is on log.txt:385, which I'll post here. Note: I spaced it to make it visually easier to read. The original is all on a single line of course.; ```; /home/emdash00/Apps/git-apps/sofa/src/applications/plugins/SofaOpenCL/OpenCLIdentityMapping.cpp:71:16: error: duplicate explicit instantiation of; ‘class sofa::component::mapping::IdentityMapping<sofa::gpu::opencl::OpenCLVectorTypes<sofa::defaulttype::Vec<3, float>, ; 													 	 sofa::defaulttype::Vec<3, float>, float>,; 									 				 sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, ; 													 	 sofa::defaulttype::Vec<3, float>, float> >’ [-fpermissive]; ```. I'm unsure of where the original instantiation is. I'm just trying to use the library since Ubuntu 19.10 doesn't have prebuilt packages yet. I don't think this is part of the issue; however, I'm using OpenCL for an Intel GPU. I wasn't sure how computationally intensive this library would be, but I thought might as well try to utilize my Intel HD Graphics Unit. . Here's an attachment of all relevant system specs using linux commands: [sysinfo.txt](https://github.com",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1419:290,update,updated,290,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1419,3,"['configurat', 'update']","['configuration', 'updated']"
Deployability,"CMake configuration of out-of-tree plugins using Sofa.Testing is broken after; - #3655 . The compat/ dir has been removed but not its reference for the target config. Error log: (from beamadapter CI):. ```; CMake Error in BeamAdapter_test/CMakeLists.txt:; Imported target ""Sofa.Testing"" includes non-existent path. ""/home/runner/work/BeamAdapter/BeamAdapter/sofa/include/Sofa.Testing/Sofa.Testing/compat"". in its INTERFACE_INCLUDE_DIRECTORIES. Possible reasons include:. * The path was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and references files it does not; provide.; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3694:6,configurat,configuration,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3694,3,"['configurat', 'install']","['configuration', 'install', 'installation']"
Deployability,CMake external dependency binaries are installed in the sofa lib directory,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1153:39,install,installed,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1153,1,['install'],['installed']
Deployability,Cannot install from source when using Qt,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/794:7,install,install,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/794,1,['install'],['install']
Deployability,"Changed d_points from Indices to a TopologySubsetIndices so that the indices get updated on topology changes.; Discussed with @hugtalbot and @epernod in https://github.com/sofa-framework/sofa/discussions/3008. Is there a way to also do that for the external indices?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3037:81,update,updated,81,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3037,1,['update'],['updated']
Deployability,Changes:. - Removing deprecated datafields; - Use Accessors instead of beginEdits; - Remove aliases; - move addInputs / addOutputs from init() to ctor(); - Add alignedBoxes & orientedBoxes as inputs of the BoxROI engine; - Refactor init / reinit / doUpdate to guarantee full component update on data change. *BREAKING because of the removal of aliases & deprecated datafields*. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1482:285,update,update,285,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1482,1,['update'],['update']
Deployability,Class already registered: ProjectToPlaneConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec1d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec6d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/ser,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:24512,install,install,24512,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability,Class already registered: StiffSpringForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec6d>; [WARNING] [ObjectFactory] Class already registered: PolynomialSpringsForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [WARNING] [ObjectFactory] Class already registered: PenalityContactForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [WARNING] [ObjectFactory] Class already registered: LineCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: PointCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: TriangleCollisionModel<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [WARNING] [ObjectFactory] Class already registered: MeshOBJLoader; [WARNING] [ObjectFactory] Class already registered: MeshVTKLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [WARNING] [ObjectFactory,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:12328,install,install,12328,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability,"Clean, Fix, Upgrade, Harder, Better, Stronger...; wip. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/876:12,Upgrade,Upgrade,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/876,1,['Upgrade'],['Upgrade']
Deployability,"Cleaning PR for the v21.06 release. 1. remove warnings about unused variables/parameters; 2. transformRotation of Mat enforces if the given Mat is 3x3 or 4x4 (does not make sense otherwise, or could even crash); 3. add a function toHomogeneousMatrix() for Mat4x4 for RigidTypes (which will use the toHomogenous of Quat); 4. remove uses of operator= with MultiMatrix in ODESolvers; 5. HeadlessRecorder was using a deprecated feature of VisualParameters (sceneTransform); 6. Use PathResolver in MultiMapping; 7. Rename Deprecation Macro in BaseData.h, correct the fix message and remove use of setOwnerClass. Note for 7.: the GUI was displaying either ""Base"" for owner (when hovering on the Data name) or ""no owner found"". I dont really know what was supposed to be displayed.; Now with the correction, all the Data will display their owner's name, which seems a bit useless to me. Before:; ![prclean_2106_beforename](https://user-images.githubusercontent.com/11028016/123656430-35593280-d830-11eb-8f3a-bfd4283ac64f.png) ![prclean_2106_beforeflags](https://user-images.githubusercontent.com/11028016/123656436-368a5f80-d830-11eb-8a41-d772aa2f679a.png). After:; ![prclean_2106_aftername](https://user-images.githubusercontent.com/11028016/123656520-4ace5c80-d830-11eb-86ba-9a761911530b.png) ![prclean_2106_afterflags](https://user-images.githubusercontent.com/11028016/123656532-4d30b680-d830-11eb-8a6a-af7ec55843f4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2210:27,release,release,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2210,1,['release'],['release']
Deployability,"Cleaning and refactoring in BarycentricMapping (only for topology container). _description from comment below:_. Sure, sorry. So I wanted to optimize the initialization of BarycentricMapping, see issue #784 for clear description of the problem. . To avoid more duplication of code, and to allow the optimization to be available for a maximum of topology types, I needed the code to be refactored. . So:. 1. I created an abstract class (BarycentricMapperTopologyContainer) that gather the shared implementations of BarycentricMapperEdgeSetTopology, BarycentricMapperTriangleSetTopology, BarycentricMapperQuadSetTopology, BarycentricMapperTetrahedronSetTopology, and BarycentricMapperHexahedronSetTopology. 2. Enabeling to refactor the apply(), applyJ(), applyJT(), getJ(), draw() functions and more importantly the function I want to optimize, init(). The PR also include some cleaning, in particular the renaming of variables. That could indeed break not updated code. . What I couldn't do, is to also refactor the code of BarycentricMapperMeshTopology... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/797:955,update,updated,955,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/797,1,['update'],['updated']
Deployability,"Cmake cfg creates ""MinSizeRel, Release, RelWithDebInfo"" files in CMakeCache/bin",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1331:31,Release,Release,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1331,1,['Release'],['Release']
Deployability,Component states : update of component /data,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2005:19,update,update,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2005,1,['update'],['update']
Deployability,"Component.Visual') # Needed to use components [VisualStyle] ; ; MainHeader(rootNode,; plugins=['SofaPython3', 'SoftRobots'],; gravity=[0.0, -9810, 0.0]). ContactHeader(rootNode,; alarmDistance=5,; contactDistance=1,; frictionCoef=0.6). rootNode.VisualStyle.displayFlags = ""showBehaviors showCollisionModels"". Floor(rootNode, **floorParam). cube = Cube(rootNode, **cubeParam); cube.addObject('UncoupledConstraintCorrection'). for i in range(len(fingersParameters)):; finger = ElasticMaterialObject(attachedTo=rootNode,; volumeMeshFileName=fingersVolumeMesh,; name=fingersParameters[i]['name'],; rotation=fingersParameters[i]['rotation'],; translation=fingersParameters[i]['translation'],; surfaceMeshFileName=fingersSurfaceAndCollisionMesh,; collisionMesh=fingersSurfaceAndCollisionMesh,; withConstrain=True,; surfaceColor=fingersColor,; poissonRatio=poissonRatioFingers,; youngModulus=youngModulusFingers,; totalMass=fingersMass). finger.dofs.name = 'tetras'; rootNode.addChild(finger). finger.integration.rayleighStiffness = 0.1; finger.integration.rayleighMass = 0.1. finger.addObject('BoxROI', name='boxROI', box=fingersParameters[i]['ROIBox'], drawBoxes=True, doUpdate=False); finger.addObject('RestShapeSpringsForceField', points='@../Finger1/boxROI.indices', stiffness=1e12,; angularStiffness=1e12). PneumaticCavity(surfaceMeshFileName=fingersCavitySurfaceMesh,; attachedAsAChildOf=finger,; name='Cavity',; rotation=fingersParameters[i]['rotation'],; translation=fingersParameters[i]['translation'],; initialValue=cavitiesInitialValue,; valueType='pressure'). rootNode.addObject(WholeGripperController(node=rootNode)); `; `# -*- coding: utf-8 -*-; import math. # User parameters; cubeParam = {'name': ""Cube"",; 'totalMass': 0.002,; 'translation': [15.0, 20.0, 0.0],; 'uniformScale': 21}. floorParam = {'name': ""Plane"",; 'color': [1.0, 0.0, 1.0],; 'isAStaticObject': True,; 'uniformScale': 3}. # Fingers Mesh & Shared Parameters; fingersVolumeMesh = 'data/mesh/pneunetCutCoarse.vtk'; fingersSurfa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5060:4872,integrat,integration,4872,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5060,1,['integrat'],['integration']
Deployability,"Correction of the import of the queue library so that it can work with python3. The import and use of the queue library has changed between python2 and python3.; I updated it to use it in python3. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2572:164,update,updated,164,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2572,1,['update'],['updated']
Deployability,Create a Camera component so that it become possible to render a scene. The difference with InteractionCamera is that the Camera component is not having any interaction so you can implement; your own 'application specific behavior' by using an external Controller (eg: PythonScriptController). Changes:; - the BaseCamera now has a link to a BackgroundSetting so multiple camera can have multiple background. ; - the BaseCamera now implement a draw() method. If you don't want to see what is drawn...then; restrict the rendering of your scene graph to only call drawVisuals() which is what it is supposed to do :) ; - the Camera alias is not anymore creating an InteractionCamera but a Camera object. Update the caduceus example. NB: I know there is much more to refactor but I have not time for that. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/674:700,Update,Update,700,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/674,1,['Update'],['Update']
Deployability,"Currently config.h is a all-in-one configuration file that is generated by CMakeLists and included nearly everywhere. The problem is that it contains also very specific options that very few files are using. But, each time any of these specific option is changed sofa needs to be recompiled entirely. This PR is a implementing a more modular approach in which each .cpp that specifically requires a given define include a dedicated file.; Eg:; #include<config/build_option_opengl.h> // to do #if(SOFA_WITH_OPENGL==1); or; #include<config/build_option_experimental.h> // to do #if(SOFA_WITH_EXPERIMENTALFATURE==1); or; #include<config/sharedlibrary_defines.h>. It is still possible to use the old file but by being more specific we will reduce the amount of file to recompile when we will changed something. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/475:35,configurat,configuration,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/475,1,['configurat'],['configuration']
Deployability,"Currently in Sofa we aren't catching any exceptions. . The consequence is that every exception propagates to the top level exception handler halting the application. ; Un-handled exception are useful to detect bugs but this is a non-sense to use such top level handler to process possible application errors like failure to load a plugin or a scene. . A good approach should be that any exception that can be fixed without editting the source code (ie. but by editting the scene or changing some system configuration and so on) should ends with a gracefull error message indicating to the user how to fix the error cause. To implement this I suggest to:; - add a close to top-level try/catch block around simulations/plugin actions; - add a SofaSimulationException that has an error message, the component that emitted it and can have a backtrace as well as a top level reactions to do (eg: set componentstate to invalid and stop simulation). We should also use this SofaSimulationException at any place we are using msg_error(). ; (Actually it could even make sense to replace the msg_error macro by throwing the exception). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2344:503,configurat,configuration,503,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2344,1,['configurat'],['configuration']
Deployability,"Currently sofa does not compile with VS2013, and I see there is no VS2013 VM on the continuous integration.; - Is VS2013 support dropped ?; - I read in some email that there is a plan to have again a VS2013 VM, is it still the plan ?. thomas",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/98:84,continuous,continuous,84,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/98,2,"['continuous', 'integrat']","['continuous', 'integration']"
Deployability,"Currently the icons in the scene graph are not reflecting the real state of the corresponding component's message log because the icons are set at scene loading and not updated after. This rise consistency issues for dynamic scene which adds at run-time new messages to component's log (see the example below where the messages is emitted on key pressed. . This is a follow up of PR #2398 . The PR produce the expected behavior with this kind of scene; ```python; import Sofa. class MyC(Sofa.Core.Controller):; def __init__(self, *argv, **kwargs):; Sofa.Core.Controller.__init__(self, *argv, **kwargs); self.node = kwargs.get(""target""); ; def onKeypressedEvent(self, event):; Sofa.msg_info(self, ""Info message in the component""); Sofa.msg_error(self.node, ""Error message in the target's node""). def createScene(root):; root.addChild(""Child1""); root.addObject(MyC(name=""Dmaien"", target=root.Child1)); ```. NB: I have considered having a Data<queue<Message>> but given how is implemented Data I need to provide << and >> operator which does not have real sense in this scenario. ; ______________________________________________________; By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3027:169,update,updated,169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3027,1,['update'],['updated']
Deployability,"Currently we have a very strict reviewing process to validate a PR for merging in master. This is very good because we now have a very stable master. But after one year I think our approach also tend to favor trivial ""micro changes"" against complex things. . Because they are hard to read, or review, or because they may eventually break something, big PRs are often rejected. This is a drama and I think that we should make en effort to facilitate much more these one because they contains real work (ie...an engineer spends several days or week that he (and is employer) is willing to offer to the community). Loosing those contributions is just a raw loss for the community. . So I think we should relax a bit our rules to allow this kind of PR to be merged.; I see several aspects:; - reviewers should adapt their ""quality level"" to the size of the PR. There is no need to be super pinchy on two or three micro-details of a 50h PR. (reviewers should instead contribute to the PR by fixing that details); - reviewers should be willing and adapt their reviewing time to the size of the PR. A 50h PR really deserve 1H of reviewing from the community. ; - we should also have a way to relax the ""stability"" constraint of our API/software to allow breaking changes. On that aspect I would like to propose to have one release a year dedicated to BREAKING changes and ship it with tools to help users to fix their scenes. Any opinion ?; @bcarrez @hugtalbot @guparan @fredroy @matthieu-nesme @JeremieA, @ChristianDuriez, @olivier-goury",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/318:1316,release,release,1316,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/318,1,['release'],['release']
Deployability,"Currently when object are unable to be created there is no filename/line information on where the problem come from. . In this PR I implemented the missing <<operator in messaging.h to report those line number. ; Now you can write: ; ```cpp; msg_info() << SOFA_FILE_INFO_COPIED_FROM(""myPythonFile.py"", 4) << ""blah balh"" ; ```; To have the file name & line number associated in the message emitting information. If you don't the emitting information will be the source code file&line location. . If updated the xml load to take this feature into account. ; The python loader is updated in the PR #304 . ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/314:498,update,updated,498,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/314,2,['update'],['updated']
Deployability,"Currently, if you build Sofa with FFMPEG support, linking SofaFramework to an external project will require to find the FFMPEG_exec target, which will not be found: the cmake script to find the FFMPEG executable isn't installed by the Sofa install process. This FFMPEG executable path is never used in header files, only in cpp, I don't see any reason to force external projects to find it. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1177:218,install,installed,218,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1177,2,['install'],"['install', 'installed']"
Deployability,Cython is a de-facto standard to make ease binding between C++ and python. I use it to make 'per plugin' binding and will probably submit some in future PR. ; To ease the writing of cmake of these binding it is nice to detect if cython is installed what this file is doing. . The file is taken from (all credit should go to them):; https://github.com/thewtex/cython-cmake-example. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/734:239,install,installed,239,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/734,1,['install'],['installed']
Deployability,Data update,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/60:5,update,update,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/60,1,['update'],['update']
Deployability,Data update listener,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/61:5,update,update,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/61,1,['update'],['update']
Deployability,Data update: simplify Data tracking,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/80:5,update,update,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/80,2,['update'],['update']
Deployability,DataWidget of MeshROI does not update on refresh,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3487:31,update,update,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3487,1,['update'],['update']
Deployability,"Dependency on #760 . This PR mimics the behavior of the DataEngine, by binding the cleanDirty method in python, and not calling cleanDirty before calling update(); Furthermore, update() is not called from OnBeginAnimationStep events anymore, but only through the natural DDGNode update mechanism. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/751:154,update,update,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/751,3,['update'],['update']
Deployability,Depends #814; This PR renames DataTrackerDDGNode's isDirty() method to hasChanged() to reduce confusion between hasChanged and BaseData::isDirty(). It depends on #814 because replacing update with doUpdate forces the replacement of calls to data.isDirty() with m_dataTracker.isDirty(data) which means some extra calls are added in #814. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/822:185,update,update,185,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/822,1,['update'],['update']
Deployability,"Depends on #1226 . This PR provides a callback method in Base to easily connect DDGNodes (inputs & outputs) within a component, through the use of DataTrackerEngines. It is inspired by a POC from @damienmarchal in a branch we have in SofaDefrost/sofa.; The syntax to create a callback is the following:. ```cpp; addUpdateCallback(""dataTrackerEngineName"", {&inputs}, []()->ComponentState{; // Some code in a lambda setting the componentState by return value; }, {&outputs});; ```; This method will create a DataTrackerEngine in a map within Base, give it a name, set this as its owner, set the given list of inputs and outputs for the engine, and finally, use the given lambda as a delegate method for the update() function of the engine (delegate, because engine->updateAllInputsIfDirty() is called before the lambda, and engine->cleanDirty() is called after... just like a normal engine.). The test in SofaSimulationGraph_test/DDGLink_test.cpp has been updated to show how to use it in a simple class with 1 input / 1 output. Actually, the code doesn't work... I get an ugly exception when my engine tries to call the delegate lambda:; ```; unknown file: Failure; C++ exception with description ""bad_function_call"" thrown in the test body.; ```. No idea what this is, if you have suggestions, please don't hesitate to correct me or tell me what I did wrong... ;); Enjoy the WE =). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1227:705,update,update,705,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1227,3,['update'],"['update', 'updateAllInputsIfDirty', 'updated']"
Deployability,Detect missing python27.dll in installer,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/879:31,install,installer,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/879,1,['install'],['installer']
Deployability,"Detected by the CI sporadically.; The crash is triggered ""correctly"" when executing in Debug mode. The problem comes from the fact that the stored Jacobian matrix is not updated when the model (i.e mechanicalObject) is modified topologically.; There are some problems still with topological changes (#2242 ) so I opted for a check every time projectResponse() is called.; Not ideal so would need to be changed once topological changes mechanism is finished. Also create a updateJacobian() method (instead of reinit()). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2241:170,update,updated,170,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2241,2,['update'],"['updateJacobian', 'updated']"
Deployability,Discuss the integration of @courtecuisse @bakpaul implementation of the CollisionPipeline,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4222:12,integrat,integration,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4222,1,['integrat'],['integration']
Deployability,"During a discussion with @olivier-goury, it appeared that the sofa-launcher script was needed to use the MOR plugin. So when using this plugin, the users needed to download the sofa sources to get access to it because it was not shipped in the binaries. . This pr adds this folder to the install/releases. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4245:288,install,install,288,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4245,2,"['install', 'release']","['install', 'releases']"
Deployability,"During remove process inside `TopologySubsetData` the current Data was being modified but the method `TopologySubsetIndices::indexOfElement` was also called.; This method was using: ; `const container_type& data = this->getValue();` which call updateIfDirty messing WriteAccessor in the caller method.; Fix it by using directly: `const container_type& data = m_value.getValue();`. The others modifications are just better logs for debug. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3330:244,update,updateIfDirty,244,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3330,1,['update'],['updateIfDirty']
Deployability,"Each readXX method exists in two implementation. One that takes State* while the other is taking a SingleLink<State>. Given that from a SingleLink<State> one can get the corresponding State* using the get() method it is questionable why to maintain two set of methods for the same service. To mimimize the surface of the API I removed the link based version and update the code base accordingly. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3304:362,update,update,362,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3304,1,['update'],['update']
Deployability,Enhancing Collision Physics in Unity with Sofa Framework Integration,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4621:57,Integrat,Integration,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4621,1,['Integrat'],['Integration']
Deployability,Error in first launch of sofa after installation,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1943:36,install,installation,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1943,1,['install'],['installation']
Deployability,Errors when installing the CGAL plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1389:12,install,installing,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1389,1,['install'],['installing']
Deployability,"Everything is in the title.; Also update SOFA version in CMake to `18.06.dev`. From source dir: `./scripts/licenseUpdater/licenseUpdater.sh . auto 2018 ""development version""`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/585:34,update,update,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/585,1,['update'],['update']
Deployability,"Example scene files are in ""scenes"" directory and not in ""examples"" directory,; as expected by CMake install command. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/299:101,install,install,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/299,1,['install'],['install']
Deployability,"Externalize the plugin SofaSphFluid and add the fetching mechanism. This aims at disabling the regression tests when it is not built (e.g. for default configurations on the CI). I've externalized the plugin here: https://github.com/sofa-framework/SofaSphFluid and kept the history of changes. [ci-depends-on https://github.com/sofa-framework/Regression/pull/61]; [ci-depends-on https://github.com/sofa-framework/ci/pull/46]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4526:151,configurat,configurations,151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4526,1,['configurat'],['configurations']
Deployability,FIX install path for headers in `unsupported/Eigen`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1240:4,install,install,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1240,1,['install'],['install']
Deployability,FIX scene: update GenerateGrid usage to match current component interface. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/303:11,update,update,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/303,1,['update'],['update']
Deployability,FIX: sofa installation.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/194:10,install,installation,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/194,1,['install'],['installation']
Deployability,FIX: wrong paths of installed headers in SofaBaseMechanics,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/887:20,install,installed,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/887,1,['install'],['installed']
Deployability,"FYI:; Since the inclusion of .............**, Visual Studio 2015 needs to be updated to Update3** Service Pack while compiling AdvancedTimer.cpp.; ""....\sofakernel\extlibs\json\nlohmann_json.h(1259): error C2100: illegal indirection (compiling source file ....\SofaKernel\framework\sofa\helper\AdvancedTimer.cpp)"". (https://github.com/nlohmann/json/issues/719). ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/420:77,update,updated,77,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/420,1,['update'],['updated']
Deployability,"Factorize all compatibility code in the SofaFramework (GL, Helper, Defaulttype, Core) into a common module, to simplify maintainability. For now, it is forcefully loaded for all the modules, as no code has been ported to the new architecture yet. In the future, this module should be optional (and its inclusion in an other cmake file in a module/ directory for example). (out-of-tree configuration tested with SofaPython3); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1944:385,configurat,configuration,385,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1944,1,['configurat'],['configuration']
Deployability,"Factorize:; - use updateIfDirty in BaseData.h; - in Data.h in the beginEdit function use: beginWriteOnly. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1569:18,update,updateIfDirty,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1569,1,['update'],['updateIfDirty']
Deployability,"FastTetrahedralCorotationalForceField initialized its Poisson's ratio and Young's modulus with different values than the other tet FEM force fields. TODO:. - [x] Update tests; - [x] Update doc: https://github.com/sofa-framework/doc/pull/83. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3563:162,Update,Update,162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3563,2,['Update'],['Update']
Deployability,FileRepository is used by too many components to be optional. As a consequence boost filesystem and locale are made required; This commit fixes undefined symbol error occurring at link time when the filesystem or locale boost lib are not installed,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/122:238,install,installed,238,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/122,1,['install'],['installed']
Deployability,"FileRepository needs to be checked and fixed. It does not work for sure in some situations, e.g. if a sofa install is copied in a path containing accents on windows, FileRepository does not find the files. Note I have not go any further, and everything needs to be investigated.; I did not test with the distributed, precompiled package. I did not test on linux...",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/17:107,install,install,107,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/17,1,['install'],['install']
Deployability,"First steps for a consistent, uniformed and centralized configuration storage. This PR adds the ability to retrieve the current local config folder for the user. . These return respectively (local account is `fred`):; - Linux:; ```; getUserLocalDirectory(): /home/fred/.config; getSofaUserLocalDirectory(): /home/fred/.config/SOFA; ```. - macOS:; ```; getUserLocalDirectory(): /Users/fred/Library/Application Support; getSofaUserLocalDirectory(): /Users/fred/Library/Application Support/SOFA; ```; - Windows:; ```; getUserLocalDirectory(): C:/Users/Fred/AppData/Local; getSofaUserLocalDirectory(): C:/Users/Fred/AppData/Local/SOFA; ```. `getSofaUserLocalDirectory()` creates also the directory if it is not created yet. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4875:56,configurat,configuration,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4875,1,['configurat'],['configuration']
Deployability,"Fix #1667 , #1661 and much more... # TL;DR; Sofa.Config is a new module containing all the configuration necessary for compiling the SofaFramework and the subsequent modules.; It allows to spread efficiently all the flags/config/whatever to the cmake modules using it. # Description; A lot of CMake configuration/flags are spread everywhere in the code base: root CMakefile, Soframework CMakefile, SofaHelper CMakefile.; Moreover, a lot of compiler options are not set by **target** (CMake notion), so those are to added EVERYTIME for each projet/plugin (see SofaPython3): c++17, MSVC special flags, etc. # Solution; This PR regroups all CMake config code and SofaFramework is no more the ""bootstrapper"" or whatever it was not.; If you linking against anything from SOFA (most likely at least SofaHelper), the configuration will spread into your project automatically.; This module will be the lowest in the depencency chain (was a bastard mix of SofaFramework/SofaHelper before). # WIP; * ~~Some CMake file to clean~~. * ~~Add no-attribute flags from #1682~~. * Some variables are still not linked to Sofa.Config like Sofa_VERSION: it was in the root CMakefile before, so all the projects know this variable.; For now, Sofa.Config set those global variables **PARENT_SCOPE** but this is ugly in my opinion, and not ""Modern CMake""; One solution is to link this variable to a property of Sofa.Config, and retrieve this property when needed. But it seems a bit bothersome.; ```; get_target_property(Sofa_VERSION ${TARGET} Sofa_VERSION_PROPERTY); ```; Any opinion ?. * I guess there will other things to do later like removing all the tests related code/config into an eventual Sofa.Test, etc; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; _____",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1674:91,configurat,configuration,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1674,3,['configurat'],['configuration']
Deployability,"Fix #632 . The plugin list was never updated if we removed a plugin in the cmake configuration.; Plus, it was possible to append several identical targets. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/645:37,update,updated,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/645,2,"['configurat', 'update']","['configuration', 'updated']"
Deployability,"Fix #809; Following the STC decision to replace the DataEngine with the SimpleDataEngine, here's the PR that does just that. This replacement involves taking every engine in Sofa and:; - replacing its **update()** method with the new delegate **doUpdate()**.; - Remove the calls to **data.isDirty()** and (smartly) replacing them with **m_dataTracker.isDirty(data)**; - Remove the **cleanDirty()** calls while making sure we don't break the engine's behavior. Most engines present in SOFA are either in SofaGeneralEngine or SofaMiscEngine. ______________________________________________________ ; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/814:203,update,update,203,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/814,1,['update'],['update']
Deployability,"Fix **one** of the bugs breaking the Geomagic behavior. When updating the position of the Omni visual node, visitor update was call on the Omni->getContext() which is usually the Root node, thus all node where updated outside of the normal mechanical step leading to bad physic behavior. ; Call the update on the Omni visual node only. + some small change and warning fix. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/761:116,update,update,116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/761,3,['update'],"['update', 'updated']"
Deployability,Fix CMakeLists bug on Sofa.ini and installedSofa.ini creation,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/291:35,install,installedSofa,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/291,1,['install'],['installedSofa']
Deployability,"Fix a peculiar bug where:; - one wants to compile a project out-of-tree,; - on WIndows,; - this project needs Sofa.GL; - Sofa.GL is find_package()'d first. As GLEW config on windows is special (windeppack stuff), its configuration is set-up in Sofa.Helper.; But the cmake config file for out-of-tree (Sofa.GLConfig.cmake.in) was trying to find GLEW before Sofa.Helper, hence cmake could not configure the projet and was yelling about not finding GLEW.; (got the case with registration plugin). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3098:217,configurat,configuration,217,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3098,1,['configurat'],['configuration']
Deployability,"Fix compilation for Qt version< 5.11 or we decide to remove that and I update my computer:; ```if (QT_VERSION < QT_VERSION_CHECK(5, 11, 0))```. ```18>C:\projects\sofa-src\modules\SofaGuiQt\src\sofa\gui\qt\RealGUI.cpp(456,49): error C2027: use of undefined type 'QDesktopWidget'; 18>C:\Qt\5.10.1\msvc2017_64\include\QtWidgets\qapplication.h(57): message : see declaration of 'QDesktopWidget'```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1904:71,update,update,71,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1904,1,['update'],['update']
Deployability,Fix crash when calling updateBBox w/o an mstate in TetrahedronFEMForceField. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1403:23,update,updateBBox,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1403,1,['update'],['updateBBox']
Deployability,"Fix crash when removing triangles in scene using TriangleModel component. Clean and comment the class while undusting it (sorry hard to read the diff). - remove serr/sout; - change all protected members prefix; - rewritte init and updateFromTopology methods; - Remove the handleTopologyChange method. As this class use directly the topology buffers, no need neither for TopologyData. Just check the topology revision and update the component if topology has changed.; - Update RemovingTrianglesProcess and AddingTrianglesProcess tests scenes to test the TriangleModel; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/903:231,update,updateFromTopology,231,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/903,3,"['Update', 'update']","['Update', 'update', 'updateFromTopology']"
Deployability,Fix deprecated warnings for release,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1166:28,release,release,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1166,1,['release'],['release']
Deployability,Fix gtest integration [WIP],MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/601:10,integrat,integration,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/601,1,['integrat'],['integration']
Deployability,"Fix install further to #4410 ; \+ minor warning fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4451:4,install,install,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4451,1,['install'],['install']
Deployability,"Fix regression (appeared when boost was supposed to be removed from Sofa).; -> Plugins _not able to find Boost automatically_ failed to compile (because it needs boost to compile obviously); ; The problem was coming on Windows mainly, as boost are often installed in the system directories on Unix system. And few changes were added to make boost's CMake part more consistent. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/421:254,install,installed,254,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/421,1,['install'],['installed']
Deployability,"Fix several bugs when having a metis package installed and its cmake config files are expected to be used by our Findmetis cmake module file:; - cmake config files provided by metis packages (at least conda, as APT do not provide such) are prefixed with an uppercase (e.g. MetisConfig.cmake instead of metisConfig.cmake), although all cmake variables and targets are then correctly set to lowercase. This will make the library not findable in config mode on case senstitive OS such linux. ; - do not fail if invalid version of metis is found on the system, instead allow fetching the right one (is SOFA_ALLOW_FETCH_DEPENDENCIES is ON). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4570:45,install,installed,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4570,1,['install'],['installed']
Deployability,"Fix sofa::type namespace variables in CGALPlugin for release v21.06. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2246:53,release,release,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2246,1,['release'],['release']
Deployability,Fix the failing test in; - MeshROI_test ; - PluginManager_test; - in TestMessageHandler remove un-used attribute that was causing a compilation warning in clang; - in image_test do some cosmetic cleaning to find why it fails... but in fact the problem should be fixed on the CI by installing convert & gm.exe on the VM. (this is done since this morning); - Improve the tests in FixedConstraint_test.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/279:281,install,installing,281,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/279,1,['install'],['installing']
Deployability,"Fix these errors: https://ci.inria.fr/sofa-ci-dev/job/sofa-custom/963/CI_CONFIG=ubuntu_gcc-7,CI_TYPE=release/console. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1724:101,release,release,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1724,1,['release'],['release']
Deployability,Fix: ; - Dll export + Add config file; - Stop scheduler only if thread has successfully started. Enhancements:; - Add: specific method to handle tool buttons; - Add: send script event when button are used.; - Add: option to not automatically start tool at init but manually start it through a method call. (start at init by default); - Update: m_errorDevice is not anymore a bool but store the HD_DEVICE_ERROR. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/786:336,Update,Update,336,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/786,1,['Update'],['Update']
Deployability,"Fixed this error while trying to configure a out-of-tree compilation of a plugin depending on SofaGuiQt. `CMake Error at sofa/install/lib/cmake/SofaGuiQt/SofaGuiQtConfig.cmake:49 (find_package):; Found package configuration file:. sofa/install/plugins/SofaMiscForceField/lib/cmake/SofaMiscForceField/SofaMiscForceFieldConfig.cmake. but it set SofaMiscForceField_FOUND to FALSE so package; ""SofaMiscForceField"" is considered to be NOT FOUND. Reason given by; package:. The following imported targets are referenced, but are missing:; SofaBaseMechanics`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2707:126,install,install,126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2707,3,"['configurat', 'install']","['configuration', 'install']"
Deployability,"Fixing build error on sofa-custom: https://ci.inria.fr/sofa-ci-dev/job/sofa-custom/683/CI_CONFIG=ubuntu_gcc-7,CI_TYPE=release/console. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1648:118,release,release,118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1648,1,['release'],['release']
Deployability,"Following #2368 . Some projects (mainly tests) are using find_package(SofaBase) which still uses the project SofaEigen2Solver for compatibility purpose. This leads to a few prints in the cmake output about the SofaEigen2Solver being deprecated.; Of course this is a bit slightly annoying to read the cmake output. This PR limits the deprecation display to once a cmake configuration pass. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2386:369,configurat,configuration,369,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2386,1,['configurat'],['configuration']
Deployability,"Following a recent update of my fork from SOFA master, I observed a strange behaviour in the GUI while running a scene of mine where I'm doing catheter navigation (similarly to BeamAdapter). Namely :; - Before, Ctrl was the default key to use interactive controls, for instance `Ctrl+uparrow` was caught by `if event['key'] == chr(19)` in my Python controller. Now `uparrow` is caught by the same line.; - Before, keeping `Ctrl+uparrow` pushed down was automatically playing the control over and over (until the key was released). Now I have to release the key (`uparrow`) and press it again to redo the control. Talking with @fredroy, it seems that I'm not the only one to have observed this problem, so it might come from a PR undesirable side effect. Additionally, it apparently doesn't come from SofaPython3. Regarding the master, all I can say is that the previous update I made was on the 30/09/2022 (so I didn't have this issue at the time), and that the issue appeared after my last update on the 24/11/2022. I briefly went through the merged PR in between these dates, but could find one which could be incriminated. I'm working on Ubuntu (20.04). It is also worth mentioning that I did some other updates during the time lapse (basically, all default updates suggested by Ubuntu's Software Updater), but no major change in any software version. For this reason, I can't be sure at the moment that the issue traces back to SOFA itself. Is anyone else experiencing this ?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3510:19,update,update,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3510,8,"['Update', 'release', 'update']","['Updater', 'release', 'released', 'update', 'updates']"
Deployability,"Following https://github.com/sofa-framework/sofa/pull/2016. I thought SofaCUDA scenes were not tested at all on CI but actually they are (some of them at least).; A `.scene-test` file is used to ignore all the scenes that require SofaCUDA. Here are the scenes that are successfully tested (check them out [here](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/2474/testReport/SceneTests/applications_plugins_SofaCUDA_examples/)):; - StandardTetrahedralFEMForceFieldCPU.scn; - TetrahedralTensorMassForceFieldCPU.scn; - beam10x10x46-fem-implicit-CPU.scn; - beam10x10x46-hexafem-implicit-CPU.scn; - beam10x10x46-hexafem-rk4-CPU.scn; - beam16x16x76-fem-implicit-CPU.scn; - beam16x16x76-hexafem-rk4-CPU.scn; - quadSpringSphere.scn. Does it makes sense to have non-CUDA scenes in SofaCUDA? ; Maybe should we ignore all the plugin scenes?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2042:429,release,release,429,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2042,1,['release'],['release']
Deployability,"Following https://github.com/sofa-framework/sofa/pull/4495; This is to fix https://github.com/sofa-framework/BeamAdapter/actions/runs/8069371516/job/22044285700?pr=140; ```; CMake Error at BeamAdapter_test/CMakeLists.txt:5 (find_package):; Found package configuration file:. D:/a/BeamAdapter/BeamAdapter/sofa/lib/cmake/Sofa.Testing/Sofa.TestingConfig.cmake. but it set Sofa.Testing_FOUND to FALSE so package ""Sofa.Testing"" is; considered to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing:; Sofa.SimpleApi. -- Configuring incomplete, errors occurred!; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4542:254,configurat,configuration,254,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4542,2,"['a/B', 'configurat']","['a/BeamAdapter', 'configuration']"
Deployability,Following other components let's apply the updateInternal API to DiagonalMass. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1150:43,update,updateInternal,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1150,1,['update'],['updateInternal']
Deployability,Following the ConstantForceField let's apply the updateInternal API to UniformMass. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1149:49,update,updateInternal,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1149,1,['update'],['updateInternal']
Deployability,"Following the rise of discussions about further using Eigen inside SOFA, this PR aims at standardizing its inclusion in the framework. Right now, SOFA automatically pulls a fixed version of Eigen (3.2). It also install it along with SOFA, which is a big problem when an external program or library tries to compile with both SOFA and another version of Eigen. . This PR removes the automatic pull of Eigen, and instead rely on the standard find_package(Eigen3) which is available in almost all distributions via the system package manager (apt, dnf, pacman, etc), for instance:. <table>; <tr><td>Debian 9</td><td>Eigen 3.3.2</td></tr>; <tr><td>Debian 10</td><td>Eigen 3.3.7</td></tr>; <tr><td>Ubuntu 18.04</td><td>Eigen 3.3.4</td></tr>; <tr><td>Ubuntu 19.10</td><td>Eigen 3.3.7</td></tr>; <tr><td>Fedora 29</td><td>Eigen 3.3.5</td></tr>; <tr><td>Fedora 30-31</td><td>Eigen 3.3.7</td></tr>; </table>; ; Right now, this PR compiles with all of the previous distributions (I've tested it with Docker by simply installing eigen3-devel and compiling Sofa). ~~However, there is a faulty test with Eigen > 3.2: the **compliant_test** from the Compliant plugin. It seems to come from the Assembly visitor of the plugin, which relies a lot on Eigen to build the system matrices. I'll have a look at it in the next days, but if someone have an idea...~~ ; Found the nasty bug at 53dd4f5 - memcopy is _dangerous_ !. Everything ~~else~~ seems to be fine with recent versions of Eigen. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1281:211,install,install,211,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1281,2,['install'],"['install', 'installing']"
Deployability,"For information here is the current Topoogy classes architecture in sofa core.; ![Présentation sans titre](https://user-images.githubusercontent.com/21199245/111889075-75fc1100-89e2-11eb-9abc-ce8a4391ce7c.png). Here is the **current** architecture of TopologyData, TopologyHandler and TopologyEngine; ![Présentation sans titre(1)](https://user-images.githubusercontent.com/21199245/111889097-9f1ca180-89e2-11eb-9d80-ace8440c2887.png). With the **current** pipeline; ![Présentation sans titre(2)](https://user-images.githubusercontent.com/21199245/111889104-aa6fcd00-89e2-11eb-970d-050305cf0923.png). Here is the proposal of this PR. Basically all TopologyEngine have been removed and the code has been moved to TopologyData or TopologyHandler; ![Présentation sans titre(4)](https://user-images.githubusercontent.com/21199245/112510923-3773a700-8d92-11eb-9559-49d7c34c50b5.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1898:456,pipeline,pipeline,456,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1898,1,['pipeline'],['pipeline']
Deployability,"For old modules with no headers like SofaGTestMain, SofaHelper, SofaDefaultType, SofaCore, Sofa.SimulationCore, SofaGuiQt. Should fix this kind of error:; ```text; Imported target ""SofaCore"" includes non-existent path; ""/home/runner/work/BeamAdapter/BeamAdapter/sofa/include/SofaCore""; in its INTERFACE_INCLUDE_DIRECTORIES. Possible reasons include:; * The path was deleted, renamed, or moved to another location.; * An install or uninstall procedure did not complete successfully.; * The installation package was faulty and references files it does not; provide.; ```; taken from https://github.com/sofa-framework/BeamAdapter/runs/6790181313?check_suite_focus=true. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3023:420,install,install,420,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3023,2,['install'],"['install', 'installation']"
Deployability,"For whatever reason, MSVC19 does not compile anymore because of streams in fixed_array (maybe an update in the stl code); And after further tries, it is not really possible to just deal with iosfwd.h and the implementation in a cpp file (because of templates). ; Anyway, everything is including iostream so it wont hurt more the compilation time.⏳. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1426:97,update,update,97,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1426,1,['update'],['update']
Deployability,"Forgot to install libglew-dev on a new system, cmake is OK but when compiling, an error on the fact that gl/glew.h could not be found. Some time ago, it had been decided that the gl subsystem will always need glew (it was optional before); But the cmake did not reflect this choice. Now cmake will complain if glew is not found (if SOFA_WITH_OPENGL is enabled of course!). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2358:10,install,install,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2358,1,['install'],['install']
Deployability,"Found out that Eigen3 in Fedora 29 installs a `FindEigen3.cmake` that do not set the imported target **Eigen3::Eigen**, resulting in CMake failure when compiling SOFA or linking against it. ```; $ dnf locates /usr/share/cmake/Modules/FindEigen3.cmake; eigen3-devel-3.3.5-2.fc29.noarch : A lightweight C++ template library for vector and matrix math; Repo : fedora; Matched from:; Filename : /usr/share/cmake/Modules/FindEigen3.cmake; ```. There is also third party software that install their own, such as CGAL:. ```; $ dnf locates /usr/lib64/cmake/CGAL/FindEigen3.cmake; CGAL-devel-4.13-0.2.beta1.fc29.x86_64 : Development files and tools for CGAL applications; Repo : fedora; Matched from:; Filename : /usr/lib64/cmake/CGAL/FindEigen3.cmake; ```. Hence to avoid any of those, it is safer to set the NO_MODULE options to `find_package(Eigen3)` to look for **Eigen3Config.cmake** instead, which always define the imported target. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1348:35,install,installs,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1348,2,['install'],"['install', 'installs']"
Deployability,"FromImage.cpp.o; ""_readImage(char const*)"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ""ImageIO_alloc(unsigned long)"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ""CGAL::Image_3::private_read(point_image*)"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ld: symbol(s) not found for architecture x86_64; ```. This file is only included if the image plugin is activated, thus making this error appear only in specific cases. Moreover, since CGAL seems not tested on CI, this error might be quite old, as it has passed under the radar so far. It has been observed on OS X, and Linux. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/352:1879,update,update,1879,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/352,2,['update'],['update']
Deployability,Further to #1183; Discussed in #744 . component upgraded:; - [SofaBoundaryCondition] ; - FixedConstraint; - FixedPlaneConstraint; - FixedTranslationConstraint; - AffineMovementConstraint; - LinearMovementConstraint ; - PartialLinearMovementConstraint; - PatchTestMovementConstraint; - projectDirectionConstraint ; - projectToLineConstraint ; - projectToPlaneConstraint ; - projectToPointConstraint; - QuadPressureForceField ; - SurfacePressureForceField; - TaitSurfacePressureForceField ; - TrianglePressureForceField; - ParabolicConstraint; - ConstantForceField ; - LinearForceField; - EdgePressureForceField ; - OscillatingTorsionPressureForceField; - HermiteSplineConstraint ; - LinearVelocityConstraint; - [SofaConstraint] ; - DOFBlockerLMConstraint ; - FixedLMConstraint; - UncoupledConstraintCorrection; - [SofaMiscFem] ; - TriangleFEMForceField; - TriangularAnisotropicFENForceField; - TriangularFEMForceField; - [SofaMiscFem]; - FastTetrahedralCorotationalForceField; - StandardTetrahedralFEMForceField; - TetrahedralTensorMassForceField; - TetrahedronHyperelasticityFEMForceField; - [SofaMiscForceField] ; - MeshMatrixMass; - [SofaExporter] ; - WriteTopology; - [SofaMiscTopology] ; - TopologyChangeProcessor; - [SofaGeneralEngine] ; - SmoothMeshEngine; - [SofaDeformable] ; - MeshSpringForceField. Component previously upgraded in #1183 : ; - DiagonalMass; - [SofaGeneralSimpleFEM]; - BeamFEMForceField; - TetrahedralCorotationalFEMForceField; - TriangularFEMForceFieldOptim; - [SofaSimpleFEM]; - HexahedronFEMForceField; - TetrahedronFEMForceField; - TetrahedronDiffusionFEMForceField; - NonUniformHexahedronFEMForceField; - [SofaGeneralDeformable] ; - QuadBendingSpring; - QuadularBendingSprings; - VectorSpringFF; - FastTriangularBendingSpring; - TriangleBendingSpring; - TriangularBendingSpring; - TriangularBiquadraticSpringFF; - TriangularQuadraticSpringFF; - TriangularTensorMassFF; ______________________________________________________; <!--- Please leave this at the end of your me,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1199:48,upgrade,upgraded,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1199,2,"['Patch', 'upgrade']","['PatchTestMovementConstraint', 'upgraded']"
Deployability,"Further to #2300 the coordinate textures do no update anymore when using a TextureInterpolation as input of texcoord. Due [this change](https://github.com/sofa-framework/sofa/pull/2300/files#diff-ebb9cb0da6bb4d64a21079624cb5082e2dc4d807d5d711a148d3ef756661418bR994):. ``` cpp; m_vtexcoords.setParent(nullptr); // manually break the data link to follow topological changes; ```. deleting this line solves the issue, but I would need your insight @epernod on what was exactly intended here.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2392:47,update,update,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2392,1,['update'],['update']
Deployability,Further to #2777 some codes might need to be updated.; The STC could be the occasion to dedicated a dev force on this.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3766:45,update,updated,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3766,1,['update'],['updated']
Deployability,Geomagic problem after the update of handling linearised constraints,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1148:27,update,update,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1148,1,['update'],['update']
Deployability,Getting an easy to install: SOFA+python+Caribou,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2981:19,install,install,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2981,1,['install'],['install']
Deployability,"Given that the 20.12 release is on its way we can probably update the tests to the new value. Reminder of the convention:; TypeInfo::GetTypeName() => is a string representing the type as seen from c++, eg: vector<Vec<double, 3>>; TypeInfo::name() => is a string representing the type with as much as short cut, eg: vector<Vec3d>. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1709:21,release,release,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1709,2,"['release', 'update']","['release', 'update']"
Deployability,"Got a missing linker reference to pthread with my configuration.; I suppose this does not appear on the CI because of some differences in the cmake config (packages?). Related to the removal of boost::thread which was doing the job for everybody before. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2302:50,configurat,configuration,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2302,1,['configurat'],['configuration']
Deployability,"Greetings,. I have built SOFA v21.12 without any error massages, on Ubuntu 18.04. And it works fine without plugins. However when I try to run examples for SoftRobots, I encounter the same problems as previously described is following topics, also tried the solutions that is described there. (Also tried to build on Ubuntu 20.04 but the result is the same). https://www.sofa-framework.org/community/forum/topic/error-couldnt-import-objects-from-stlib3-physics-rigid/. https://www.sofa-framework.org/community/forum/topic/issues-with-running-examples-on-sofa_v20-12-02_defrost_linux/. Has this problem been solved?. Moreover, my colleague also built SOFA and the plugins on Ubuntu 20.04, then sent me the built version of his. I have re-installed Ubuntu 20.04 with his user name, and surprisingly the plugins worked without any errors. Therefore, I am assuming there might be a mistake while I use Cmake. However, as me and my colleague discussed, we have followed exactly the same method but the results were different. I get the following error massage when I try to run SOFA with my build:. `[ERROR] [SofaPython3::SceneLoader] Unable to completely load the scene from file '....path/to/file.../SoftRobots/docs/tutorials/FirstSteps/details/sofapython3/step4.py3scn'. ; Python exception: ; ImportError: cannot import name 'Floor' from 'stlib3.physics.rigid' (/....path/to/file...../sofa/build/lib/python3/site-packages/stlib3/physics/rigid/__init__.py). At:; step4.py3scn(2): <module>; <frozen importlib._bootstrap>(219): _call_with_frames_removed; <frozen importlib._bootstrap_external>(843): exec_module; <frozen importlib._bootstrap>(686): _load_unlocked; <frozen importlib._bootstrap>(702): _load; /usr/lib/python3.8/imp.py(171): load_source; /usr/lib/python3.8/imp.py(234): load_module; <string>(3): <module>; `",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2754:737,install,installed,737,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2754,1,['install'],['installed']
Deployability,"Hard to do some cleaning in CMakeLists without touching all SOFA files!. This PR contains:. ------------------------. Default properties for targets calling sofa_generate_package or sofa_install_targets; - include_directories:; - BUILD_INTERFACE: the directory given in INCLUDE_SOURCE_DIR or ""${CMAKE_CURRENT_SOURCE_DIR}/.."" (bad but necessary for old modules); - BUILD_INTERFACE: ""${CMAKE_BINARY_DIR}/include/${PROJECT_NAME}""; - INSTALL_INTERFACE: ""install"" (if relocatable plugin) or ""install/${PROJECT_NAME}""; - DEBUG_POSTFIX: ""_d""; - VERSION: Sofa_VERSION. ------------------------. Cleaning of config.h mechanism (consistency with all other SOFA modules); - deprecate headers not following the ""config.h"" naming convention; - sofa/core/core.h -> sofa/core/config.h; - sofa/defaulttype/defaulttype.h -> sofa/defaulttype/config.h; - sofa/helper/helper.h -> sofa/helper/config.h; - sofa/simulation/simulationcore.h -> sofa/simulation/config.h; - SofaSimulationCommon/common.h -> SofaSimulationCommon/config.h; - SofaSimulationGraph/graph.h -> SofaSimulationGraph/config.h; - SofaSimulationTree/tree.h -> SofaSimulationTree/config.h; - sofa/gui/SofaGUI.h -> sofa/gui/config.h; - sofa/gui/qt/SofaGuiQt.h -> sofa/gui/qt/config.h; - centralize config.h call chain on sofa/config.h; - sofa/helper/system/config.h is now useless; -> WARNING: maybe not a good idea, review needed here; - dispatch all SOFA_BUILD_* macros from packages' config.h towards modules' config.h (good for future modularizations). ------------------------. Moving SofaGui modules into ""modules"" directory + cleaning their source trees. ------------------------. Every package is now also a library. Work started by @fredroy in #1314, 3 packages remained; - SofaFramework; - SofaGui; - SofaSimulation. ------------------------. Cleaning source trees to eliminate some "".."" include directories; (files move but includes stay the same); - SofaExporter; - SofaGuiCommon; - SofaGuiQt; - SofaHeadlessRecorder; - SofaMiscCollision. ------",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1397:450,install,install,450,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1397,2,['install'],['install']
Deployability,"Hello all,. This PR adds (hopefully) proper GIL handling to `SofaPython`, so that it is possible to run python threads concurrently with the main Sofa program. It enables the following scene to run concurrently with the main program: . ```python; def createScene(node):. from threading import Thread; import time; ; def target():; while True:; time.sleep(1); print(""it's aliiive!""); ; thread = Thread(target = target); thread.daemon = True; thread.start(). time.sleep(2); ```. This is achieved through the RAII class `PythonEnvironment::gil`, which is meant to protect the boundaries between c++ and python code as follows:. ```c++; // some function called from the c++ side; {; PythonEnvironment::gil lock;; // safely call python functions here: the GIL ; // is acquired and released automatically; }; ```. The trick is that the GIL should also be released prior to the first lock so that the last object to unlock the GIL gives an opportunity to python threads to run, if any. Otherwise, the main thread still holds the GIL after the last lock is destroyed, and python threads never get to run. This is a work in progress, but should be pretty harmless and easy to disable if something goes wrong. EDIT: it does not work on this branch :-/; ___________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/326:776,release,released,776,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/326,2,['release'],['released']
Deployability,"Hello everyone, . i'm new to SOFA. I built succesfully SOFA from source on windows 11. Using cmake-gui, i selected plugin_sofapython3 to be added. the configuration and compilation went good, without any errors, but when i check the plugins list sofapython3 is not there and, after running runSofa, i cannot open a python scene in sofa. . Does someone have any ideas why this happens?. thank you very much!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252:151,configurat,configuration,151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252,1,['configurat'],['configuration']
Deployability,"Hello everyone,. I'm still not sure I fully understand the problem, but I'll describe it and PR a solution for discussion. When SofaCUDA is required as a dependency in an in-tree build, the CMake configure step is unable to locate `SofaCUDANvccFlags.cmake`. To reproduce the issue you may choose a dummy plugin (eg, [MyAwesomeComponents](https://github.com/sofa-framework/MyAwesomeComponents)), add to `CMakeLists.txt` and `*Config.cmake.in`:; ```; find_package(SofaCUDA REQUIRED); ```; And compile it in-tree.; I haven't tested how this goes in out-of-tree compilation. A really simple fix (PR ready) is to update the installation path SofaCUDANvccFlags.cmake to `build/lib/cmake` where it is surely found.; So in `SofaCUDA/CMakeLists.txt`:; ```; configure_file(SofaCUDANvccFlags.cmake ${CMAKE_BINARY_DIR}/lib/cmake/SofaCUDANvccFlags.cmake COPYONLY); ```. I understand though cmake config files should be placed and found on `build/cmake` and I do not know why it does not happen. Every insight will be much appreciated. Pedro",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2021:608,update,update,608,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2021,2,"['install', 'update']","['installation', 'update']"
Deployability,"Hello everyone,. I'm using operations of type `dst_transform *= src_transform` and noticed multiple debug messages on the terminal output:. ```; [INFO] [Transform] SolidTypes<R>::Transform::operator *=; ```. I made a small fix suppressing the line which I'll PR soon.; I'm using a modified version of the latest release v20.12 - but the issue seems to exist as well in master. Please let me know if there's any deeper meaning to this message or anything else to clean up,. Cheers,. Pedro",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1731:312,release,release,312,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1731,1,['release'],['release']
Deployability,"Hello, . I feel like a lot have changed in `MeshLoader`, but `GIDMeshLoader` hasn't been updated. . The problem I have is that the component is not working with the update callback mechanism :; - `doLoad()` is called three times, and it uses `push_back()` without clearing the lists (e.g. position, tetra...).; - and other problems related to transforms. I'd like to update the component, but I don't know how. I couldn't find a related PR.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1534:89,update,updated,89,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1534,3,['update'],"['update', 'updated']"
Deployability,"Hello, ; I'am having troubles compiling the SofaCUDA plugin; -Ubuntu 22.04; -SOFA 22.12; -gcc 11; -nvcc version: ; ```; nvcc: NVIDIA (R) Cuda compiler driver; Copyright (c) 2005-2023 NVIDIA Corporation; Built on Fri_Jan__6_16:45:21_PST_2023; Cuda compilation tools, release 12.0, V12.0.140; Build cuda_12.0.r12.0/compiler.32267302_0; ```. ; I get this error:; ` error: identifier ""umul24"" is undefined`; from:; `.../applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaContactMapper.cu(88)`. I tried to solve replacing this line:; `map[curTestEntry.newIndex + threadIdx.x] = umul24(curTestEntry.elem1,nbPointsPerElem) + c.p1;`; with this line:; `map[curTestEntry.newIndex + threadIdx.x] = curTestEntry.elem1*nbPointsPerElem + c.p1;`. but I get even more errors now, so I thought the plugin was written for a specific cuda version. Is that correct? Should I change my cuda toolkit version together with the gcc version?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4579:266,release,release,266,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4579,1,['release'],['release']
Deployability,"Hello, I am trying to install using https://hub.docker.com/r/sofaframework/sofa_nightly_ubuntu/tags and everything worked fine but while running ./runSofa shows me this error. Please also see the image attached (sorry for the mobile phone capture). Any help will be appreciated.; ![1](https://user-images.githubusercontent.com/91825106/201944685-a8ddf17b-33fa-425f-a298-7fb7b64e39b9.jpeg)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3486:22,install,install,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486,1,['install'],['install']
Deployability,"Hello,. I have been trying to run the CGAL Plugin with sofa, my aim is to create a tetrahedral mesh from a surface mesh, and then experiment that for Haptic Rendering within Sofa. I followed the page here: https://www.sofa-framework.org/community/doc/plugins/usual-plugins/cgal-library/. Although it does not tell what version of CGAL to use, or boost as well. Finally, I have been successful to build with the following versions of dependencies.; **Environment:**; Visual Studio 2017 vc 14.1; Sofa Master: commit 9d9100aa1b0acb9363c8ec7c9b5e4b470821bfc1; Boost: 1.71.0; CGAL: CGAL-4.13.2; QT: 5.12.0. ```; INFO] [runSofa] PluginRepository paths = C:/open_prj/sofa/build/mmaster/plugins;C:/open_prj/sofa/build/mmaster/bin/Release; [INFO] [runSofa] DataRepository paths = C:/open_prj/sofa/src/share;C:/open_prj/sofa/src/examples; [INFO] [runSofa] GuiDataRepository paths = C:/open_prj/sofa/src/applications/projects/runSofa/resources;C:/open_prj/sofa/src/applications/sofa/gui/qt/resources; [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:722,Release,Release,722,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,1,['Release'],['Release']
Deployability,"Hello,. I think it would be great (if not mandatory) to have in this release of Sofa new features and not only bug fixes. . To make that possible I suggest to use the SOFA_WITH_EXPERIMENTAL_FEATURES options to conditionally activate plugins or component that are in their way for integration but are not considered as stable enough or that may be subject to API change in 18.06. Those should print a warning message in their init function if used. . If agreed on the principle of allowing EXPERIMENTAL new components in 17.12 I have the following features/component to propose (all are located in plugins):; - In plugin/PSL:; - the PSL scene file format; - In plugin/SofaImplicitField: ; - CustomField (to implement implicit field in python and/or cython); - SurfaceMeshFromImplicitField (to generate a surface mesh from an implicit field using a marching cube); - ImplicitFieldViewer (to visualize the implicit surface); - python/difigeom (a complete library to make complex procedural geometry using ; distance field and python+cython) ; - In plugin/CGAL: ; - SurfaceMeshFromImplicitField (generate a surface mesh from an implicit field using CGAL); - VolumeMeshFromImplicitField (generates a tetrahedral mesh from implicit field using CGAL) . And you ? Do you have things that you would like to have integrated ? . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/517:69,release,release,69,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/517,3,"['integrat', 'release']","['integrated', 'integration', 'release']"
Deployability,"Hello,. I try to use SofaPython3 with sofa (master branch) on windows. I use MSVC compiler. I did the following :. 1. Installed pybind11 via pip3.9.; 2. set CMake variable `pybind11_DIR` = `C:/Program Files/Python39/Lib/site-packages/pybind11/share/cmake/pybind11`.; 3. set CMake variable`SOFA_FETCH_PYTHON3` to true.; 4. set CMake variables `PLUGIN_SOFAPYTHON3`, `PLUGIN_SOFAPYTHON3_BINDINGS`, `PLUGIN_SOFAPYTHON3_DOCS` and `PLUGIN_SOFAPYTHON3_EXAMPLES` to true.; 4. 'Configure' then 'Generate' using CMake's GUI.; 5. Build with MSVC -> success (release mode). I encounter a segfault error when loading SofaPython3.dll via the Sofa GUI : Edit>Plugin Manager...>Add...>SofaPython3.dll.; --> **exception Microsoft C++ : pybind11::error_already_set**. Do you have any idea what is causing this error ?. Thanks",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1672:118,Install,Installed,118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1672,2,"['Install', 'release']","['Installed', 'release']"
Deployability,"Hello,. I was playing with SimpleGUI, and it did not compile with recent sofa::type changes.; Here are some fixes, so it can compile and run well with the latest release. Cheers,. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2274:162,release,release,162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2274,1,['release'],['release']
Deployability,"Hello,. I'm a new user of SOFA. I've been trying to compile the stable version under Ubuntu 20. ; I'm using nvidia cuda 11.2 , gcc and g++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0; Compilation were done using ninja as recommended in the video. I might missed to install a dependencies. Please find below the error message:. Thanks in advance for your help.; Best,; Valéry. -----------------------------------------. [50/441] Building CXX object modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglAttribute.cpp.o; FAILED: modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglAttribute.cpp.o ; /usr/bin/clang++ -DNDEBUG -DSOFA_BUILD_OPENGL_VISUAL -DSOFA_BUILD_SOFAOPENGLVISUAL -DSofaOpenglVisual_EXPORTS -I/home/vozenne/Dev/sofa/src/modules/SofaOpenglVisual/src -Iinclude/SofaOpenglVisual -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaBaseVisual/src -Iinclude/SofaBaseVisual -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaBaseTopology/src -Iinclude/SofaBaseTopology -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaSimulationCommon/.. -Iinclude/SofaSimulation -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaCore/src -Iinclude/SofaFramework -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaCore/src -Iinclude/GTest -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaDefaultType/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaSimulationCore/src -isystem /home/vozenne/Dev/sofa/src/SofaKernel/extlibs/json -isystem /home/vozenne/Dev/sofa/src/extlibs/gtest/include -isystem /usr/include/eigen3 -Wall -W -Wno-padded -O3 -DNDEBUG -fPIC -DFRAMEWORK_TEST_RESOURCES_DIR=\""/home/vozenne/Dev/sofa/src/SofaKernel/SofaFramework/resources/tests\"" -pthread -DGTEST_LINKED_AS_SHARED_LIBRAR",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1864:258,install,install,258,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1864,1,['install'],['install']
Deployability,"Hello,. I'm trying to compile sofa from a fresh ubuntu install (so there is no conflict between software versions) and I can't process what this error means. Is it found or not? Is it the version that's too old or too new ? The displayed version correspond to the one installed by aptitude. Any hint / solution is welcome. ``; $ cmake ..; ``; -- The C compiler identification is GNU 9.3.0; -- The CXX compiler identification is GNU 9.3.0; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Install prefix: /home/thebigone/projects/sofa/build/install; -- Found PythonInterp: /usr/bin/python3.8 (found version ""3.8.2"") ; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Check if compiler accepts -pthread; -- Check if compiler accepts -pthread - yes; -- Found Threads: TRUE ; CMake Deprecation Warning at CMakeLists.txt:225 (message):; Deprecated components are activated (SOFA_WITH_DEPRECATED_COMPONENTS; variable is ON). -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; **CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Boost (missing: system filesystem program_options) (found; version ""1.71.0"")**; Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindBoost.cmake:2179 (find_package_handle_standard_args); SofaKernel",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1462:55,install,install,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1462,4,"['Install', 'install']","['Install', 'install', 'installed']"
Deployability,"Hello,. PR of a small fix to #1731. I simply removed the debug message which seems to be left behind at the code. It should be compatible to both master branch and the latest release. Please let me know if I should create a PR to master instead. Cheers,. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1732:175,release,release,175,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1732,1,['release'],['release']
Deployability,"Hello,. Since we talked about it during the SofaDev meeting,; Here's our QuickNDirty answer to the make install fail for CImgPlugin.; Of course as-is it is not acceptable or mergeable but it's here. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/609:104,install,install,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/609,1,['install'],['install']
Deployability,Here are all the changes made for v18.12 release.; Mostly CMake and CPack stuff. :warning: Notice the removal of all deprecated components [as planned in Changelog](https://github.com/sofa-framework/sofa/blob/master/CHANGELOG.md#deprecated). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/905:41,release,release,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/905,1,['release'],['release']
Deployability,"Here are the changes I made for v19.06, mostly cleans and fixes. Important changes:; - [[SofaMacros] ADD version to each target properties](https://github.com/sofa-framework/sofa/pull/1114/files#diff-c271701edce37b698b29020065753857) ; - [[CMake] ADD post-install script for Linux](https://github.com/sofa-framework/sofa/pull/1114/files#diff-16510636c780c3f88d6aaeb73dc3a80d). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1114:256,install,install,256,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1114,1,['install'],['install']
Deployability,"Here are the latest changes done directly in v20.06 branch to finalize the release. Main changes:; - [CMake] ADD SOFA_ENABLE_SOFT_DEPS_TO_SOFAPYTHON option (default is ON); When OFF, SofaPython will be added later during CMake generate so that all soft dependencies to SofaPython will be unsatisfied.; This is useful to generate binaries with at least SofaPython dependencies as possible.; - [CMake] FIX postinstall-fixup scripts call order; postinstall-fixup scripts are now in tools/postinstall-fixup and are included after all other parts of SOFA (even external directories); - [SofaMacros] FIX install dir for plugins with no INCLUDE_SOURCE_DIR; There was an issue with installed include directories introduced by #1397 ; - Backport #1428 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1432:75,release,release,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1432,3,"['install', 'release']","['install', 'installed', 'release']"
Deployability,"Here is a new plugin which implements a beam force field component with plastic behaviour (to model nonlinear and permanent deformation). The general structure is inspired from the BeamFEMForceField component. At the moment, I kept the new component in a dedicated plugin (BeamPlastic), but I guess it could be moved to where the BeamFEMFF component already is (providing the PR is mergeable). Two pull-requested files (in applications/plugins/BeamPlastic/quadrature) were implemented by someone else and published under the open source Boost Software License 1.0 (BSL-1.0). I mentioned this in both files headers, but I don't know if the BSL-1.0 is compatible with the SOFA license. If not, these files can be removed and I can re-implement the corresponding methods (for reduced gaussian integration). The code compiles on my side, and the two provided example files work fine, but there are quiet a few things that could/should be improved (including unit tests). I have already noted some of them, but as this is my first PR I'm not familiar with how or where these should be discussed.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1618:790,integrat,integration,790,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1618,1,['integrat'],['integration']
Deployability,Here is an update of PluginExample to clarify how to create a deploy-and-share friendly plugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1053:11,update,update,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1053,2,"['deploy', 'update']","['deploy-and-share', 'update']"
Deployability,"Here it is! This PR adds a new NG component: Sofa.Helper.Bvh. How to reproduce:; 1. Checkout [sofa2ng](https://github.com/guparan/sofa2ng) in the `tools` folder of your SOFA; 2. cd into sofa2ng and run `deploy.sh recipes/Sofa.Helper.Bvh.rcpy`; 3. Integrate your new NG module into SOFA by hand. How to integrate (things not done by sofa2ng):; - Create all NG structure if needed (here I created Sofa.Helper); - `add_subdirectory` your module at the right place (here I did it in SofaFramework/CMakeLists.txt); - Link your module to SOFA old modules when needed; - Remove old file inclusions in CMake (here it was in sofa/helper/CMakeLists.txt). ***************; **Summary:**; - The recipe I used with sofa2ng is here: [Sofa.Helper.Bvh.rcpy](https://github.com/guparan/sofa2ng/blob/master/recipes/Sofa.Helper.Bvh.rcpy); - The result of recipe application is here: https://github.com/sofa-framework/sofa/pull/741/commits/2c729aa646866c2b01792069e95d47cc450edcca; - The changes I did by hand are here: https://github.com/sofa-framework/sofa/pull/741/commits/6d6cd06fc34f6ae2ca53feed8af5b8a1cb452da6 (patch version [here](https://github.com/sofa-framework/sofa/commit/6d6cd06fc34f6ae2ca53feed8af5b8a1cb452da6.patch)); ***************. This is the right place to discuss about SOFA-NG, do not hesitate to comment!. I let this here and I go to vacation, see you in two weeks :wink: ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/741:203,deploy,deploy,203,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/741,5,"['Integrat', 'deploy', 'integrat', 'patch']","['Integrate', 'deploy', 'integrate', 'patch']"
Deployability,"Here's a bunch of fixes for the HAPI plugin:. * `config.h` was not generated --> added automatic generation to the cmake and fix the template to use cmake variable replacement. * there is some broken code in CMakeLists, not sure what was used for but it's not even a valid cmake code (broken if clause). For the moment I just commented out, I'm open to advices... * updated the code with recent member renaming in main sofa code (`indice` --> `d_indice`). * fix for `findH3D.cmake` to find the module without relying on non-default installation path (i.e. if you install H3D into a given directory, that is the root path from which `include` and `lib` can be easily found ). * fixes for `findHAPI.cmake` --> using `hapi_ROOT` to easily find the module (instead of relying on the mutual position of HAPI and H3DUtils). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1189:366,update,updated,366,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1189,3,"['install', 'update']","['install', 'installation', 'updated']"
Deployability,"Hey!. First PR with a POC of Object links that aren't based on SingleLinks. Here, a new template class (with its base class) is introduced: DDGLink.; Just like BaseDatas, DDGLink inherits DDGNode.; A DDGLink thus benefits from the whole dirty flag propagation thingy, and implements the update() function to clean its dirty flag, and update from its inputs.; Just like Datas, a DDGLink also possesses a counter, that is incremented when the link value changes. Just like BaseLinks, and SPtrs, to retrieve the object linked with a DDGLink, you need to call the get() method. The set() method will set the link. When a link is set within a DDGLink, the componentState of the linked object is set as input to that DDGLink. It's up to you to connect your DDGLink to some datas to connect your dependency graph. Contrary to the current link implementation in SOFA, these links, can be very easily manipulated as their base class (BaseDDGLink), or as DDGNodes even. DDGLinks are parsed in Base::parseField just like BaseLinks and BaseDatas, which makes them usable with the BaseObjectDescriptions. (they really mirror the behavior of all other field types.). A very simple test case is present in this PR to show you how it's used. You can reference your links with their pathnames, just like normal datas or links, by calling the getPathName() method. There's not bi-directionality implemented in this PR, (because I didn't have time in the end...) but it's not rocket science:; - all there is to do is add a vector of Base* in Base with helper methods to add, remove retrieve the list of link owners. Then in DDGLink::set(), call the add() method of your link to register`this`. (maybe in another PR...) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scen",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1226:287,update,update,287,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1226,2,['update'],['update']
Deployability,"Hi I downloaded the windows .exe file to install SOFA, I attempted to go through the tutorials and eventually learned that I have to click show doc browser for the walk throughs. But I get the warning: ""[WARNING] [RealGUI] Doc browser has been disabled because Qt5WebEngine is not available"". During installation I didn't see an option to activate this. I downloaded [qt-unified-windows-x64-online.exe](https://download.qt.io/official_releases/online_installers/qt-unified-windows-x64-online.exe), to no avail. . I saw a similar post, but for someone who build it on linux using cmake. I tried following the steps for that but couldn't complete when I tried to run a command given that did nothing. . I want that when I click show doc browser in SOFA it pops open that little window that I saw in a video tutorial. How do I get this?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5058:41,install,install,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5058,2,['install'],"['install', 'installation']"
Deployability,"Hi all, . BaseLoader was implemented in .h. ; This is bad so I splitted it into BaseLoader.cpp/h ; Then I removed the un-needed includes; Then I updated all the codebase that were missing specific includes. In case your code does not compile... after this PR then you need to add the include you are missing ; (probably fstream or sofa::helper::system::FileRepository) ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/393:145,update,updated,145,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/393,1,['update'],['updated']
Deployability,"Hi all, . There has been quite a lot of discussion recently about how the to implement update mecanisms. ; There is of course the DataTracker, but we are quite a lot to implement complementary mecanism in our respectives plugins so it may be a good idea to see what can be factorized into SofaCore. To do that it would be nice to have examples / snippets / draft of the different approaches we have tested or in mind so that we can evaluate the code impact and interoperability. @bruno-marques, @hugtalbot, @epernod, @jnbrunet feel free to add your ideas. ______________________________________________________; Dedicated Gitter room : https://gitter.im/sofa-framework/data-update?utm_source=share-link&utm_medium=link&utm_campaign=share-link",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/597:87,update,update,87,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/597,2,['update'],['update']
Deployability,"Hi all, ; I installed Sofa (v=17.06, with the Sofapython, Compliant, Image and Flexible pluggins) in a conda environment (conda 4.3.30 with python 2.7.11, numpy 1.13.3) on my computer (macOs 10.13.1). The installation apparently worked fine but when I run a python file it crashes while importing numpy.; More specifically, the crash happens as the framework tries to import the first C++-based module of numpy (=multiarray) see joined file below. I checked the dependency paths and they all point toward the /lib repository of the specific conda env in used.; I also tried to recompile numpy locally and the same problem happened... Does anyone has a clue on what's happening with my setup ?; Thx. PS: numpy works fine in the same conda env in ipython; PPS: I did not use cmake-gui for the compilation but the regular cmake. I used the following compilation flags but I might have missed something : . -DSOFAGUI_QGLVIEWER:BOOL=ON ; -DPLUGIN_FLEXIBLE:BOOL=ON ; -DPLUGIN_COMPLIANT:BOOL=ON ; -DPLUGIN_IMAGE:BOOL=ON ; -DPLUGIN_SOFAPYTHON:BOOL=ON ; -DBoost_INCLUDE_DIR=/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/include ; -DGLEW_INCLUDE_DIR=/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/include ; -DGLEW_LIBRARY=/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/libGLEW.dylib ; -DJPEG_INCLUDE_DIR=/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/include ; -DJPEG_LIBRARY=/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/libjpeg.dylib ; -DPNG_LIBRARY=/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/libpng.dylib ; -DPNG_PNG_INCLUDE_DIR=/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/include ; -DTIFF_LIBRARY=/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/libtiff.dylib ; -DTIFF_INCLUDE_DIR=/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/include . ![screen shot 2017-11-27 at 14 58 33](https://us",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531:12,install,installed,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531,2,['install'],"['installation', 'installed']"
Deployability,"Hi all,. For the next STC we are planning active coding sprint sessions to boost small tasks and have the pleasure to be working togther. . Feel free to propose any task in the comments!. Current task list (last update 2017-09-29):; - Deprecation: https://github.com/sofa-framework/sofa/issues/426; - Pluginization + SceneCreator dependencies (must be done AFTER deprecation): https://github.com/sofa-framework/sofa/issues/427; - `issofa_*` merges: https://github.com/sofa-framework/sofa/issues/428; - Code cleaning; - Doc. TODO List before the sprint:; - [x] finish to add the set management into the CMakeLists.txt (Damien & Bruno Carrez); - [x] make the list of component to deprecate (Fred, Stéphane, Guillaume); - [x] create a simple example of deprecation with the WashingMachineForceField (Damien); - [x] if needed make a list of ""advices"" we could add to the SceneChecker to warn user on how they can improve their scene (the StaticSolver thing) (Stéphane ?); - ~~add an attribute to BaseObjects to attach component quality info ?~~. Feel free to add whatever I mis-understood or forgot. ; ________________________________________; ping @sofa-framework/reviewers",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/413:212,update,update,212,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/413,1,['update'],['update']
Deployability,"Hi all,. I'm from elementary school doing an internship at DEFROST. ; I was asked to update the serr into msg_error(). ; And I was asked to update the sout into msg_info(). Here is the result of my work. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/916:85,update,update,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/916,2,['update'],['update']
Deployability,"Hi all,. When crawling into sofa code I often found line like that:; ```cpp; /** A class that define topological Data general methods; DEPRECATED; */; template < class T = void* >; class BaseTopologyData : public sofa::core::objectmodel::Data <T>; {...}; ```; This kind of comment is problematic as I have no idea what to do and it rise a lot of questions. Each time we want to deprecate something we should make efforts on documenting that properly to manage the changes. ; To me this means at least answering the following questions in the source code & in a github Issue: ; - why the code is deprecated and what is the replacement approach; - when it have been deprecated; - when can we remove deprecated class; - who is supposed to do the update...and if it is not the person that deprecate the code what is the implemented approach to notified calling code they are using deprecated code and that they have to be fixed. A good idea is to use dmsg_deprecated() messages for that. ; - how are we supposed to update thing that make use of the deprecated function; . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/272:743,update,update,743,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/272,2,['update'],['update']
Deployability,"Hi everyone!; I'm trying to develop a nodule detection exercise on SOFA v22.12. To do this I made a patch of skin: the behavior model is a box with a tetrahedral internal structure, the collision model is generated by making a topological mapping from those tetrahedra to triangles, and finally the visual model is defined as an identity mapping from the collision model. I want to create a sphere inside with a different stiffness's value so that a surgeon can feel the harder sphere inside the skin. The problem is that, although I feel the haptic feedback of both the skin and the sphere, it is very difficult to perceive the transition from the skin to the sphere, and it is impossible to perceive the size of the sphere. What can I do? Is there a way to manage the interface between two objects with different properties?. Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4318:100,patch,patch,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4318,1,['patch'],['patch']
Deployability,"Hi everyone, . i am trying to build sofa from source. I used cmake-gui and when i configure it gives me no errors, but i open Sofa.sln in VS 2022 it skips 3 compilations and so i can't find sofaRun to run the software. The 3 compilations are Examples, Documentations and INSTALL. . I watched the video tutorial on sofa website and i noticed QGLViewer_DIR variable is not found in cmake-gui, i don't know if this could be a reason why. . thak you for your help!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4246:271,INSTALL,INSTALL,271,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4246,1,['INSTALL'],['INSTALL']
Deployability,"Hi everyone, . i'm trying to install sofa_env for sofa. i already downloaded it from git hub but when i try to install it (i tried dirrent location: in the same environment as sofa, in the sofa folder, in the bin folder, etc), it tells me that it doesn't find the sofa module with sofapython3. Actually sofapython3 is in sofa (i can see it in the plugin manager). it looks like a path problem, like it can't find sofa for some reason, maybe i'm trying to install it in the wrong place. Can someone help me please?? maybe @ScheiklP . thank you very much!!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223:29,install,install,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223,3,['install'],['install']
Deployability,"Hi! :). The original issue and nice chronological story is described here; https://github.com/sofa-framework/sofa/issues/3318. TLDR:; 1. The destructor of `NarrowPhaseDetection` should clean up its map of `DetectionOutputVector`s; 2. `IntersectorFactory` should also keep track of already created `TIntersectorClass`s and release the old ones. Cheers,; Paul; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3337:322,release,release,322,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3337,1,['release'],['release']
Deployability,"Hi!. When building plugins as standalone projects, the SofaFramework package doesn't expose the cmake config options used to build SOFA.; In the SoftRobots plugin (among others), tests are performed to know if SOFA has been built using the required options (such as SOFA_BUILD_METIS, MODULE_SOFASPARSESOLVER, PLUGIN_SOFAPYTHON, SOFA_BUILD_TESTS etc.) and out-of-tree configurations require to re-specify those options, even though they are only defined in the SOFA build. I've modified the SofaFrameworkConfig.cmake.in to expose those options to whoever does a find_package(SofaFramework), although that might not be the smartest way to do it (the list is non exhausive and it would be best if options were added in a smarter way.; I think that modules such as SOFASPARSESOLVER should export the MODULE_SOFASPARSESOLVER themselves for instance, and so should the plugins.; But then there's also a long list of options that would be worth exposing, such as:; - SOFA_BUILD_TESTS; - SOFA_BUILD_METIS; - SOFA_BUILD_TUTORIALS; - SOFA_WITH_DEPRECATED_COMPONENTS; - SOFA_WITH_THREADING; - SOFA_WITH_DEVTOOLS; - SOFA_USE_MASK; - .... And I don't know where those should be exposed.. So I'm looking fwd to your opinion on the question!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/927:367,configurat,configurations,367,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/927,1,['configurat'],['configurations']
Deployability,"Hi, ; I installed the CGAL plugin (Window 10) in the following steps:; Step 1: Installing the software CGAL5.0.2; Step 2: Compiling CGAL Libraries; Step 3: Compiling CGalPlugin. In step3, I successfully compiled the CGalPlugin in Cmake.; When I compiling CGALPLUGIN in VS2017,it showed some errors like these:; `Error C2660: CGAL::Constrained_triangulation_plus_2<CDT1>::vertices_in_constraint_begin': function does not take 2 arguments； Project: CGALPlugin；; File: D:\SOFA\sofa\src\applications\plugins\CGALPlugin\src\CGALPlugin\Refine2DMesh.inl；; CODE: Line 300,; Error C2660: 'CGAL::Constrained_triangulation_plus_2<CDT1>::vertices_in_constraint_end': function does not take 2 arguments； Project: CGALPlugin；; File: D:\SOFA\sofa\src\applications\plugins\CGALPlugin\src\CGALPlugin\Refine2DMesh.inl; CODE: Line 301.`. I don’t know how to solve it.Please help me.Thanks.; I used Sofa v19.12. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1389:8,install,installed,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1389,2,"['Install', 'install']","['Installing', 'installed']"
Deployability,"Hi, I have installed the SOFA docker Image, but I have no idea how to run sofa in Docker!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4230:11,install,installed,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4230,1,['install'],['installed']
Deployability,"Hi, I tried to build SOFA from source following the instructions on the website and the youtube video (Linux compilation), ; however, it crashes at the end with the following error:. > [100%] Built target SceneChecking_test; >[100%] Linking CXX executable ../../../bin/runSofa; /usr/bin/ld: /home/hri/anaconda3/lib/libQt5Core.so.5.15.2: undefined reference to ''std::__exception_ptr::exception_ptr::_M_release()@CXXABI_1.3.13'; /usr/bin/ld: /home/hri/anaconda3/lib/libQt5Widgets.so.5.15.2: undefined reference to 'std::__throw_bad_array_new_length()@GLIBCXX_3.4.29'; /usr/bin/ld: /home/hri/anaconda3/lib/libQt5Core.so.5.15.2: undefined reference to `std::__exception_ptr::exception_ptr::_M_addref()@CXXABI_1.3.13'; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [applications/projects/runSofa/CMakeFiles/runSofa.dir/build.make:159: bin/runSofa-22.12.00] Error 1; make[1]: *** [CMakeFiles/Makefile2:18991: applications/projects/runSofa/CMakeFiles/runSofa.dir/all] Error 2; make: *** [Makefile:152: all] Error 2. ![Selection_003](https://user-images.githubusercontent.com/9308405/235440349-dfdb7d21-c788-429f-8aa1-4fc125d6e676.png). I added the CMAKE_PREFIX_PATH as suggested in the Troubleshooting CMake errors section, and the CMAKE configuration looks like the image attached. Does anyone know how to solve this problem? Thank you in advance!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3829:1280,configurat,configuration,1280,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3829,1,['configurat'],['configuration']
Deployability,"Hi, tried both SOFA v22.06.00 and v23.06.00 versions, but not able to load Sofa.Component.UserInterface.ConfigurationSetting plugin, which is causing failure of loading all the remaining plugins. check below error log. I am trying to run lapgym repo implementation , reach environment. Repo : https://github.com/ScheiklP/sofa_env; File : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/scene_description.py; scene header file where plugins are loaded : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/sofa_templates/scene_header.py. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtili",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:104,Configurat,ConfigurationSetting,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,1,['Configurat'],['ConfigurationSetting']
Deployability,"Hi,. As discussed at Journées HPC INRIA in Lille, here is an initial nix package for sofa. It also include a flake (and its lock), which is not mandatory, but ease the use of the package, with commands like; - `nix build`, to compile the package in a sandbox; - `nix develop`, to provide a shell with an environment containing all required dependencies to build the project in the usual CMake way; - `nix run`, to start the software. All these commands take an optional path argument, defaulting to the current working directory, but we could also build / develop / run any commit / tag / branch / fork of the project with eg. `nix build github:sofa-framework/sofa`(for master) or `nix run github:nim65s/sofa/58ae0644d117aea880ed284f6cc0beb7e9802f96`. While here, this also setup some CI for this packaging, mostly to detect early:; - if anything new in the repo would break the nix packaging; - if any update from a dependency in upstream [nixpkgs](https://github.com/NixOS/nixpkgs/) would break sofa. But also, a nix binary cache can be set up with eg. https://www.cachix.org/, so that once a commit is build in CI, users & developers can directly use that cache instead of compiling themselves.; (it is also true in the other way: developers with write access to the cache can send their build result to it so that the CI will be instantaneous cache hit). Here is an example of CI build log: https://github.com/nim65s/sofa/actions/runs/11306279152/job/31446709649. PS: I did not test on macos yet, so this is probably a bit early to expect it work. It at least require darwin signatures I guess, I'll try to test that this week, when I can use an apple system. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ________________________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059:903,update,update,903,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059,1,['update'],['update']
Deployability,"Hi,. I have an issue with commit cbee54ca9953f514da374d92253f9ca6e54df51f line 77.; It seems that a function has been added to get the number of primitives from the narrowphase without checking if the narrow phase is not NULL i.e. ; m_primitivesTest += obj->getNarrowPhaseDetection()->getPrimitiveTestCount();. I use such pipeline without narrowphase, which mechanically creates a segfault in my scenes. I fixed the problem adding if (obj->getNarrowPhaseDetection()) before the previous line but it will result in m_primitiveTestCount = 0. I don't know if it will raise other issues. Hadrien. . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/961:322,pipeline,pipeline,322,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/961,1,['pipeline'],['pipeline']
Deployability,"Hi,. In order to reduce compile time of sofa plugins, I decided to compile my plugins outside of Sofa (a build folder for each plugin, CMAKE_PREFIX_PATH and CMAKE_INSTALL_PREFIX to tell cmake where to find sofa); Compiling tests then doesn't work since the gtest headers, that are bundled in sofa, are not deployed on sofa's install dir. This PR rectifies that. @sofa-framework/consortium, I also believe that there should be clear guidelines in SOFA to determine what the ""normal"" way of compiling plugins should be.; I believe that outsourced builds should be the way to go, instead of adding plugins through ; `applications/plugins/CMakeLists.txt`; or cmake's; `EXTERNAL_DIRECTORIES`; since it allows people to isolate SOFA a bit more from their work. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/395:306,deploy,deployed,306,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/395,2,"['deploy', 'install']","['deployed', 'install']"
Deployability,"Hi,; Since v22.06, I cannot turn of the print outputs from `GenericConstraintSolver`. `root_node.addObject(""GenericConstraintSolver"", verbose=False, printLog=False)`. ![image](https://user-images.githubusercontent.com/29635054/187037091-9c754406-1adb-4e18-a270-78748924dbe8.png). Cheers,; Paul. ---------------------------------------------. Environment; Context. System: Ubuntu 20.04; Version of SOFA: master branch at commit v22.06.00; State: ""Install directory""",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3255:446,Install,Install,446,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3255,1,['Install'],['Install']
Deployability,"Hi,; at the moment, `springsIndices1` and `springsIndices2` are not updated, when calling `removeSpring` in `SpringForceField`. Added a call to `updateTopologyIndicesFromSprings` in `removeSpring`. Cheers,; Paul. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3268:68,update,updated,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3268,2,['update'],"['updateTopologyIndicesFromSprings', 'updated']"
Deployability,"Historically Setting a CubeTopology with nx, ny, nz was creating the topology elements but not the positions vectors. This has been changed in commit: https://github.com/sofa-framework/sofa/commit/47ef2e63a80cda787fd4c61c04580e22ecd56e2e. Need to check code if it was a bug or if the component needs to be used in another way. ```; void CubeTopology::updatePoints(); {; SeqPoints& points = *seqPoints.beginEdit();; points.resize(nbPoints) ;; for(int i;i<nbPoints;i++); {; points[i] = getPoint(i);; }; seqPoints.endEdit();; }; ```. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/574:351,update,updatePoints,351,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/574,1,['update'],['updatePoints']
Deployability,"Hi， i use the lastest SOFA v23.12.01.exe installed sofa framework in Windows,and it runs properly. but how can I add new feature(like tearing) to this build?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4632:41,install,installed,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4632,1,['install'],['installed']
Deployability,"Homogeneize the API for update.; A layer is added to avoid a direct access to the DataTracjer which is now private:; - in DataTrackerDDGNode: trackInputData, hasInputDataChanged, haveInputsDataChanged, cleanInputTracker; - in BaseObject: trackData, hasDataChanged. The name of the update function is:; - `doUpdate()` for Engines; - `doInternalUpdate()` for components inheriting from BaseObject. Update engines, and tests accordingly. Rename UpdateInternal(DataVisitor) into InternalUpdate(DataVisitor). Remove the DataTrackerFunctor and its test. TODO: update constantFF with new API. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1163:24,update,update,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1163,5,"['Update', 'update']","['Update', 'UpdateInternal', 'update']"
Deployability,How to update your code in plugin to match the post 20.12 version of sofa,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1757:7,update,update,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1757,1,['update'],['update']
Deployability,I am unable to follow the pendulum tutorial at step 4 because it is not possible to edit position Vector 1/2 from the GUI. Expected outcome: . Left click and typing of the number 2 in the X cell of the second position vector will update the X cell value from 1 to 2:. Actual outcome: It is not possible to edit any vector components in the GUI. Steps to reproduce: ; 1 load examples/Tutorials/StepByStep/Pendulum/3_Pendulum.scn in the modeler application of v17.12 build. ; 2 Double click on MechanicalObject Particles. Selcet Vector 1/2 tab of the GUI. ; 3 Left click and type the number 2 in the X cell of the second position vector will update the X cell value from 0 to 1:. Below is the dialog box that should be visible when trying to edit the vector component.; ![mechanicalobj scn](https://user-images.githubusercontent.com/20428997/41324725-19c31702-6e6b-11e8-98ca-268a77abe061.png). ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/686:230,update,update,230,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/686,2,['update'],['update']
Deployability,"I am using a Visual(Ogl)Model to display a decorative mesh (ie not a simulated object); The geometry is loaded using a MeshLoader. If I change some transformation value in the MeshLoader, and update/reinit this component, I get:; - positions in mesh loader updated; - VisualModel linked positions updated; - the 3d display NOT updated; - even if I reinit the VisualModel the display is still not updated; - even if I step the display is still not updated. I would expect that a VisualModel reinit would do the trick. If I add a MechanicalObject node + bottom level with IdentityMapping+VisualModel, then when I step I have the VisualModel and display updated - this is what I expect in that case (and this is currently my workaround) - What the mapping is doing to make the VisualModel really updates ?. I attach a simple demo .scn that show the issue (well looks like .scn cannot be attached) :. <Node name=""Root"" >; <MeshObjLoader name=""loader"" filename=""mesh/floor3.obj"" />; <MechanicalObject name=""dofs"" src=""@loader"" />; <Node name=""simple"">; <VisualModel name=""visual"" src=""@../loader"" color=""red"" />; </Node>; <Node name=""mapping"">; <VisualModel name=""visual"" src=""@../loader"" color=""blue"" />; <IdentityMapping name=""mapping"" />; </Node>; </Node>. If you think this is not a bug, feel free to change the label of this issue",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/152:192,update,update,192,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/152,8,['update'],"['update', 'updated', 'updates']"
Deployability,"I build sofa21.12 on Windows10, ; the complete cmake output is as follows. Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19043.; CMake Warning (dev) at D:/Program Files/CMake/share/cmake-3.22/Modules/CMakeDependentOption.cmake:84 (message):; Policy CMP0127 is not set: cmake_dependent_option() supports full Condition; Syntax. Run ""cmake --help-policy CMP0127"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning.; Call Stack (most recent call first):; CMakeLists.txt:45 (cmake_dependent_option); This warning is for project developers. Use -Wno-dev to suppress it. -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: J:/GitHub/sofa/build/install; CMake Deprecation Warning at SofaKernel/modules/Sofa.Config/CMakeLists.txt:74 (message):; Deprecated components are activated (SOFA_WITH_DEPRECATED_COMPONENTS; variable is ON). CMake Error at extlibs/CMakeLists.txt:28 (set_target_properties):; set_target_properties Can not find target to add properties to: tinyxml. CMake Error at extlibs/CMakeLists.txt:29 (set_target_properties):; set_target_properties Can not find target to add properties to: tinyxml. Using legacy headers is enabled.; Headers from v20.12 are usable, but it is advised to change your code to use the new headers introduced in v21.06.; Found Boost: E:/GitHub/vcpkg/installed/x64-windows/include (found version ""1.77.0"") ; Found Boost: E:/GitHub/vcpkg/installed/x64-windows/include (found version ""1.77.0"") found components: filesystem thread chrono atomic ; Adding module Sofa.GL; Adding plugin SofaSimpleFem; Adding plugin SofaRigid; Adding plugin SofaDeformable; Adding plugin SofaObjectInteraction; Adding plugin SofaMeshCollision; Adding plugin SofaEngine; Adding plugin SofaExplicitOdeSolver; Adding plugin SofaImplicitOdeSolver; Adding plugin SofaLoader; Adding plugin SofaGeneralVisual; Adding plugin SofaGraphComponent; Adding plugin SofaGeneralMeshCollision; ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2814:716,Install,Install,716,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2814,2,"['Install', 'install']","['Install', 'install']"
Deployability,I built Sofa with the registration plugin successfully. When I had a test with ICPRegistration_ShapeMatching.scn in .\applications\plugins\Registration\examples. It reminded these errors:. [INFO] [SofaPython] Added ‘F:/SOFA16.12/sofaproject/sofasrc/applications/plugins/image/python’ to sys.path; [INFO] [SofaPython] Added ‘F:/SOFA16.12/sofaproject/sofasrc/applications/plugins/Registration/python’ to sys.path; [INFO] [SofaPython] Added ‘F:/SOFA16.12/sofaproject/sofasrc/applications/plugins/SofaPython/python’ to sys.path; [INFO] [PluginManager] Loaded plugin: F:/SOFA16.12/sofaproject/sofabuild/bin/Release/SofaPython.dll. [INFO] [PluginManager] Loaded plugin: F:/SOFA16.12/sofaproject/sofabuild/bin/Release/Registration.dll; [ERROR] [RequiredPlugin] Plugin not found: “SofaMiscForceFieldDev”; [ERROR] [DAGNode “source”] Object type “RotationFinder” creation Failed; [ERROR] [DAGNode “source”] Object type “ShapeMatchingForceField” creation Failed; [ERROR] [SceneLoaderXML] Node initialization failed. I didn’t find any information about this SofaMiscForceFieldDev plugin. Can anyone give me some tips about that?. Thanks in advance!,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/307:602,Release,Release,602,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/307,2,['Release'],['Release']
Deployability,"I built sofa v16.08 on CentOS 7 using GCC 4.8.5 with the default cmake options. The build completes successfully. However, when I execute runSofa it terminates due to a segfault. This happens with both debug and release builds. Here's the stack trace after running in debugger:. ```; #0 0x00007ffff7b32133 in sofa::simulation::graph::DAGNode::detachFromGraph (this=0x18a1190) at /media/nvme4/sofa/v16.08/SofaKernel/modules/SofaSimulationGraph/DAGNode.cpp:128; #1 0x00007ffff687257e in sofa::gui::PickHandler::init (this=0xaec5f0, root=0xbe9b40) at /media/nvme4/sofa/v16.08/applications/sofa/gui/PickHandler.cpp:164; #2 0x00007ffff686336e in sofa::gui::BaseViewer::load (this=0x97f178) at /media/nvme4/sofa/v16.08/applications/sofa/gui/BaseViewer.cpp:283; #3 0x00007ffff71c9d61 in sofa::gui::qt::RealGUI::setScene (this=0x8b5ab0, root=..., filename=0x78cbb8 ""/media/nvme4/sofa/v16.08/examples/Demos/caduceus.scn"", temporaryFile=false); at /media/nvme4/sofa/v16.08/applications/sofa/gui/qt/RealGUI.cpp:883; #4 0x00007ffff687b1af in sofa::gui::GUIManager::SetScene (groot=..., filename=0x78cbb8 ""/media/nvme4/sofa/v16.08/examples/Demos/caduceus.scn"", temporaryFile=false) at /media/nvme4/sofa/v16.08/applications/sofa/gui/GUIManager.cpp:298; #5 0x000000000040ef7b in main (argc=1, argv=0x7fffffffa798) at /media/nvme4/sofa/v16.08/applications/projects/runSofa/Main.cpp:374; ```. I tried running some of the tutorial applications as well and it looks like the segfault occurs anytime the sofa simulation gets initialized with a ```DAGSimulation```. e.g. the ```chainHybrid``` tutorial application starts successfully (it uses a ```TreeSimulation```) while one ```oneParticle``` exhibits the segfault. Here's the backtrace from running ```oneParticle```:. ```; #0 0x00007ffff7b3b4d4 in sofa::core::objectmodel::LinkTraitsValueType<sofa::simulation::graph::DAGNode, sofa::simulation::graph::DAGNode*, false, true>::T::operator-> (this=0x8); at /media/nvme4/sofa/v16.08/SofaKernel/framework/sofa/core/../../s",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/127:212,release,release,212,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/127,1,['release'],['release']
Deployability,"I chose the library https://github.com/yhirose/cpp-httplib because it allows also to create a server (but not used in this PR). In any case, whatever the library we choose, we must use openSSL (we request a https). This is the main concern about this PR. In terms of installation, I think Ubuntu and macOS are straightforward because there are packages. But Windows is bit more tricky. The pre-built binaries are not available on the openSSL website. I found them here: https://slproweb.com/products/Win32OpenSSL.html. After installation, I had to define `OPENSSL_ROOT_DIR`, and add the `bin` folder to my path. In this PR, the newly introduced module is linked only in Sofa.GUI.Qt and the version checker is called at init (for test). A later contribution will use the introduced function to show the latest version in the GUI. Output example:; ```; [INFO] [VersionChecker] You are using the latest version (24.06.99). {272.525 ms}; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4702:267,install,installation,267,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4702,2,['install'],['installation']
Deployability,"I encountered a little issue during the compilation of SOFA using Visual Studio 2017. The configuration of SofaHelper's project, generated by CMake, seems incorrect. Indeed, during the linkage step, instead of looking for **libpng16.lib** (or libpng16d.lib) in **src/lib/win64/** (or /src/lib/win32), it searches **libpng.lib** (or libpngd.lib) in **build/SofaKernel/SofaFramework/SofaHelper**. At the moment, the workaround is to copy-paste and rename the concerned libraries, or manually edit the SofaHelper's project configuration inside Visual Studio to fix the path.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/443:90,configurat,configuration,90,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/443,2,['configurat'],['configuration']
Deployability,"I have compiled and installed SOFA master branch with the CGAL plugin. In the compilation folder, under lib, I have libCGALPlugin.so, and if I do ldd libCGALPlugin.so, it founds all the dependencies. However, if I install SOFA, (`cmake --build . --target install`), libCGALPlugin.so is moved to a plugins folders, under `<install>/plugins/CGALPlugin/lib`, and ldd now shows that libCGALPlugin.so can't find all the dependencies. . Ive search a bit and apparently, the rpath is set to `$ORIGIN/../lib`, which is okay when the library is directly in the `<builddir>/lib` folder, but fails if the library is in `<installdir>/plugins/CGALPlugin/lib/`. . Due to this, its not possible to load the plugin. . This happens not only with with plugins, but for example also with `libSofaComponentAll.so`. It tries to load `libSofaOpenglVisual.so`. In the <builddir> works fine because both are under `<builddir>/lib`, but when installed, `libSofaOpenglVisual.so` is moved to `<installdir>/lib/SofaOpenglVisual/lib`, where `libSofaComponentAll.so` is not searching.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1560:20,install,installed,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1560,7,['install'],"['install', 'installdir', 'installed']"
Deployability,"I have installed via the souce code method of SOFA; All the build and compile process has successed but I can not open the runsofa test binary file successfully.; It always says that: the runsofa can not find its entry to link to the libpng16.dll ; ![image](https://user-images.githubusercontent.com/27597690/81058246-e78ea780-8e82-11ea-8cfc-2d698a2637dd.png); That is very weird because I don't know how is this .exe related to my anaconda 3 which include a python 3.7 (I have python 2.7 installed and my sofapython is built successfully). And then I find that the ""sofa-windows-dependency-pack"" include this .dll file so I replace it in the anaconda directory and it can find its entry but gives me another error like this:; ![image](https://user-images.githubusercontent.com/27597690/81058659-ba8ec480-8e83-11ea-8069-504741e99e43.png); I really don't know why sofa go to my anaconda directory to find that .dll and I don't know where I was wrong, I use vs2019 to generate the runsofa binary successfully. Hope to be reply!. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1364:7,install,installed,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1364,2,['install'],['installed']
Deployability,"I have this code. ```; auto mo = sofa::core::objectmodel::New<VNCS::Sim2D::MO>();; mo->resize(10);; auto restPositions = mo->readRestPositions();; auto positions = mo->readPositions();; auto velocities = mo->readVelocities();; auto forces = mo->readForces();. EXPECT_EQ(restPositions.size(), 10);; EXPECT_EQ(positions.size(), 10);; EXPECT_EQ(velocities.size(), 10);; EXPECT_EQ(forces.size(), 10);; ```; being `VNCS::Sim2D::MO` just an alias for `MechanicalObject<Vec2>`. This 4 checks work fine, but when I try this. ```; // Check we can actually write in the vectors; auto writerRestPositions = mo->writeRestPositions();; EXPECT_EQ(writerRestPositions.size(), 10);; ```; it fails. . ```; Expected equality of these values:; writerRestPositions.size(); Which is: 0; 10; ```; the state vector size is not changed. What is the proper way to update the size of the state vectors?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1762:839,update,update,839,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1762,1,['update'],['update']
Deployability,"I integrated the Tracy profiler (https://github.com/wolfpld/tracy). It adds a ton of new feature to our internal profiler. In particular, I like:; - Multithreaded timeline; - Statistics; - Messages; - Memory management (need more work, I could not test it); - See context switching; - Mutex profiling (not tested yet). I tried not to be invasive, but it will require a change on the way we define timers such as in https://github.com/sofa-framework/sofa/compare/master...alxbilger:sofa:scoped_timer (the demo runs with this branch). TODO: a dedicated MessageHandler. ![peek (1)](https://github.com/sofa-framework/sofa/assets/10572752/17714b7d-337e-43b2-9701-3ae20dd5f262). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4182:2,integrat,integrated,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4182,1,['integrat'],['integrated']
Deployability,"I noticed that installed headers for SofaBaseMechanics aren't where they're supposed to be because the header's directory structure is not properly respected in SOFA's sofa_install_targets macro. This commit fixes the issue for the specific case of SofaBaseMechanics/BarycentricMappers/*.{h,inl} but doesn't offer a definitive fix. Additionally, it duplicates headers in SofaBaseMechanics/ since the sofa_install_targets is still in use. A definitive solution would be to embed the fix in the sofa_install_targets macro, but I wanted your input first. @damienmarchal @guparan ; . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/887:15,install,installed,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/887,1,['install'],['installed']
Deployability,"I once noticed that the Geomagic examples had been changed since 18.06, where the position data link had been removed to follow change in the constraint resolution API.; However, it would cause a delay, as we can see at my [post](https://www.sofa-framework.org/community/forum/topic/problem-about-geomagic-plugin-in-v18-12/); I think this issue stems from the update of handling linearised constraints in v18.06.; Now, sofa has been updated to v19.06 but this problem still has not been solved yet.; Can anyone notice about this problem?; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1148:360,update,update,360,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1148,2,['update'],"['update', 'updated']"
Deployability,"I recently had a small problem when a plugin was implicitly loading SofaConstraint from the SOFA's installation because its compilation was depending on it, but runSofa was launched from the build directory, hence loading SofaConstraint two times (one from the build directory, and one from the installation directory). This resulted in these output from the object manager:. ```; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class already registered: Vec2d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Default template for class SlidingConstraint already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class already registered: Vec2d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class a",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1652:99,install,installation,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1652,2,['install'],['installation']
Deployability,"I removed some tests from the Data_test.cpp file and created a new files for these tests and i updated the Cmakelists.txt; __________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2573:95,update,updated,95,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2573,1,['update'],['updated']
Deployability,"I suggest to add a message in GUI that a newer version of SOFA is available if an old version is used. I would look like:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/4aeaabcf-ec81-4585-b53c-9a8f24ac68f1). I chose to rely on Qt because otherwise it requires a new lib for the http request, and Qt is already here. But having Qt is not enough. I have an error related to ssl (similar error to https://stackoverflow.com/questions/53805704/tls-initialization-failed-on-get-request). It requires additional components in the Qt installation. I did not try it myself because it changes the installation process of SOFA. So before going further, we need to conclude that this feature is desirable (and is not a gadget). If it is, we can decide to rely on Qt and its additional component, or to go with a simpler C++ library (https://github.com/JosephP91/curlcpp for example). The second solution would open the version checker to ImGui. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4648:544,install,installation,544,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4648,2,['install'],['installation']
Deployability,"I suggest we could:; - add a warning when activating the real-time features since it changes the simulation time step; - change the reset button, since the API has never allowed for a clean reset. Why not reloading through the button ?; - graph update seems to be an issue (at least on Linux)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2491:245,update,update,245,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2491,1,['update'],['update']
Deployability,"I switched to the dark side, running emacs as my IDE :smiling_imp:, and I was testing it on SOFA's codebase. (If you like coding & navigating through SOFA's codebase without having QtCreator transforming your laptop into an airplane, you should try it, it's great!) ; Anyway, I'd like to suggest adding some stuff to the .gitignore file:. * emacs auto-generates autosave files that have the following formats: `#*` and `~*` ; * When running emacs as an IDE, an emacs package called `projectile` creates a file called `.dir-locals.el`, containing project configuration, compilation, and running instructions for emacs in the project's root folder.; * Finally, Emacs uses `clangd` or `ccls` as its language servers. these programs store their index (LSP data for the project's codebase) in `.cache/` and `.ccls-cache/` respectively. clangd & ccls both require cmake to generate a `compile_commands.json` file, which we also don't want to be committed in the git repository. I also noticed that SOFA doesn't have a `.clang-format` file. A clang-format file gives great hints to contributors, regarding the formating guidelines for SOFA. This .clang-format file respects the [coding guidelines described here](https://www.sofa-framework.org/community/doc/programming-with-sofa/guidelines/); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2884:554,configurat,configuration,554,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2884,1,['configurat'],['configuration']
Deployability,I think it's time to update our old icons for v18.12 :wink: . SOFA.png; ![SOFA](https://raw.githubusercontent.com/sofa-framework/sofa/43b71cf490996847a15f8fddf5e04db823b8d52d/share/icons/SOFA.png). MODELER.png; ![MODELER](https://raw.githubusercontent.com/sofa-framework/sofa/43b71cf490996847a15f8fddf5e04db823b8d52d/share/icons/MODELER.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/881:21,update,update,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/881,1,['update'],['update']
Deployability,"I used the given CMakeList code in ""Create your scene in C++"" page to test the given source code in the same page. But when I run cmake to build, the error occured. I know where the SofaFrameworkConfig.cmake is and i had tied to change ""find_package(SofaFramework REQUIRED)"" to ""find_package(/home/user_name/sofa/src/sofabuild/install/lib/cmake/SofaFramework/SofaFramework REQUIRED)"", then other errors occured, which is still about some Config.cmake files not found. CMake Error at CMakeLists.txt:7 (find_package):; By not providing ""FindSofaFramework.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""SofaFramework"", but CMake did not find one. Could not find a package configuration file provided by ""SofaFramework""; with any of the following names:. SofaFrameworkConfig.cmake; sofaframework-config.cmake. Add the installation prefix of ""SofaFramework"" to CMAKE_PREFIX_PATH or set; ""SofaFramework_DIR"" to a directory containing one of the above files. If; ""SofaFramework"" provides a separate development package or SDK, be sure it; has been installed.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2784:327,install,install,327,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2784,5,"['configurat', 'install']","['configuration', 'install', 'installation', 'installed']"
Deployability,"I'm trying to install Sofa from the master branch with the Geomagic plugin. I'm getting the following error:. ```; /home/franc/sofa/src/applications/plugins/Geomagic/src/GeomagicDriver.cpp: In member function ‘void sofa::component::controller::GeomagicDriver::initDevice()’:; /home/franc/sofa/src/applications/plugins/Geomagic/src/GeomagicDriver.cpp:361:86: error: no matching function for call to ‘sofa::component::mapping::RigidMapping<sofa::defaulttype::StdRigidTypes<3, double>, sofa::defaulttype::ExtVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float> >::setModels(sofa::component::container::MechanicalObject<sofa::defaulttype::StdRigidTypes<3, double> >*, sofa::component::visualmodel::OglModel*)’; visualNode[i].mapping->setModels(rigidDOF.get(), visualNode[i].visu.get());; ^; In file included from /home/franc/sofa/src/SofaKernel/framework/sofa/helper/../../sofa/simulation/Node.h:51:0,; from /home/franc/sofa/src/SofaKernel/framework/sofa/helper/../../sofa/simulation/Simulation.h:25,; from /home/franc/sofa/src/SofaKernel/framework/sofa/helper/../../sofa/helper/AdvancedTimer.h:25,; from /home/franc/sofa/src/SofaKernel/SofaCommon/../modules/SofaBaseTopology/TopologyEngine.inl:29,; from /home/franc/sofa/src/SofaKernel/SofaCommon/../modules/SofaBaseTopology/TopologyData.inl:26,; from /home/franc/sofa/src/SofaKernel/SofaCommon/../modules/SofaBaseVisual/VisualModelImpl.h:34,; from /home/franc/sofa/src/SofaGeneral/../modules/SofaOpenglVisual/OglModel.h:34,; from /home/franc/sofa/src/applications/plugins/Geomagic/src/GeomagicDriver.h:33,; from /home/franc/sofa/src/applications/plugins/Geomagic/src/GeomagicDriver.cpp:23:. /home/franc/sofa/src/SofaKernel/framework/sofa/helper/../../sofa/core/Mapping.h:88:18: note: candidate: void sofa::core::Mapping<TIn, TOut>::setModels(sofa::core::State<DataTypes>*, sofa::core::State<TOut>*) [with TIn = sofa::defaulttype::StdRigidTypes<3, double>; TOut = sofa::defaulttype::ExtVectorTypes<sofa::defaulttype::Vec",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/892:14,install,install,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/892,1,['install'],['install']
Deployability,"I'm using Windows and compiling with Visual Studio. Thanks for the fixes made with PR #568 . I think there's one line that still needs to changed. When I ran the updated version, I received the following error: . [ERROR] [FileRepository] File docs/runsofa.html NOT FOUND in :C:\git\sofaframework\sofa\master\build\bin/share/sofa/gui/runSofa/resources/:C:/git/sofaframework/sofa/master/build/share/sofa/gui/qt/resources. I think the issue is in line 154 of sofa/applications/projects/runSofa/Main.cpp. ; Instead of:; GuiDataRepository.addFirstPath(SetDirectory::GetRelativeFromProcess(""../share/sofa/gui/runSofa/resources/"")) ;; ; I think it should be:; GuiDataRepository.addFirstPath(Utils::getSofaPathTo(""share/sofa/gui/runSofa/resources/"").c_str()) ; . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/577:162,update,updated,162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/577,1,['update'],['updated']
Deployability,I've had a problem combining OglViewport (which is using old openGL) with another component using modern OpenGL.; Here's a fix I did with the help of @fredroy.; We just needed OglViewport to update the visualparams with the new matrices. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1500:191,update,update,191,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1500,1,['update'],['update']
Deployability,I've installed the sofa for windows just now. But there's an error:. ![image](https://user-images.githubusercontent.com/30407833/111863168-229cab00-896f-11eb-9800-27134da3b722.png). What's the problem?,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1943:5,install,installed,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1943,1,['install'],['installed']
Deployability,ING] [ObjectFactory] Class already registered: MeshGmshLoader; [WARNING] [ObjectFactory] Class already registered: MeshOffLoader; [WARNING] [ObjectFactory] Class already registered: MeshSTLLoader; [WARNING] [ObjectFactory] Class already registered: MeshTrianLoader; [WARNING] [ObjectFactory] Class already registered: MeshXspLoader; [WARNING] [ObjectFactory] Class already registered: OffSequenceLoader; [WARNING] [ObjectFactory] Class already registered: SphereLoader; [WARNING] [ObjectFactory] Class already registered: StringMeshCreator; [WARNING] [ObjectFactory] Class already registered: VoxelGridLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [WARNING] [ObjectFactory] Class already registered: CompareState; [WARNING] [ObjectFactory] Class already registered: CompareTopology; [WARNING] [ObjectFactory] Class already registered: DataController; [WARNING] [ObjectFactory] Class already registered: DataMonitor; [WARNING] [ObjectFactory] Class already registered: DevAngleCollisionMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: DevMonitorManager; [WARNING] [ObjectFactory] Class already registered: DevTensionMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: EvalPointsDistance<Rigid3d>; [WARNING] [Obje,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:29922,install,install,29922,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability,"IPO state wont change anyway so it is useless to do the test every time. On Windows, this test takes 2sec (for a total of 7sec for a minimal SOFA configuration), so it is quite appreciable without it.; On linux (Ubuntu) it takes 200ms on my setup so barely perceptible... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4191:146,configurat,configuration,146,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4191,1,['configurat'],['configuration']
Deployability,Image plugin installation does not preserve the file's hierarchy,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/136:13,install,installation,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/136,1,['install'],['installation']
Deployability,"Implement the improvement discussed in; https://github.com/sofa-framework/sofa/issues/56. This request contains: ; A new message class have been added for logging (in addition to Dev & Runtime).; A new RoutingMessageHandler.; A new test to validate the basic behavior of RoutingMessageHandler. Eg of use... to install a filter that will only send the; Runtime message of type Warning to a File you can do something like:; ```cpp; RoutingMessageHandler* m = new RoutingMessageHandler();; FileMessageHandler* toAFile = new FileMessageHandler(""the file""). /// Yes this is using c++ lambda syntax; m->setAFilter( [](Message& m); {; if(m.context() == Message::Runtime && m.type() == Message::Warning); return true ;; return false ;; }, toAFile );; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/57:310,install,install,310,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/57,1,['install'],['install']
Deployability,"Implementation of the (2nd part of) proposal #281 . Quick Reminder:; - CMake generates the list of compiled plugins in a file (`plugin_list.conf.default`) at the configuration stage.; - runSofa loads this list at startup; - if the user creates a custom `plugin_list.conf`, it will load this list instead.; - add an option to bypass the file (thus disable automatic loading) in runSofa. Everything is done in the runSofa application (+small patch in the macro sofa_add_generic() in SofaFramework CMake modules ; that allows us to have a list of all added targets which is not possible in CMake 3.1) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/301:162,configurat,configuration,162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/301,2,"['configurat', 'patch']","['configuration', 'patch']"
Deployability,"Imported targets can be aliased only if they are global. Otherwise, this error is raised:; ```; CMake Error at /data/Softwares/sofa/build/build-master/install/lib/cmake/SofaFramework/SofaFrameworkConfig.cmake:45 (add_library):; add_library cannot create ALIAS target ""SofaHelper"" because target; ""Sofa.Helper"" is imported but not globally visible.; Call Stack (most recent call first):; CMakeLists.txt:5 (find_package); ```. Thus, this PR adds the GLOBAL property to the imported targets we want to alias.; It also move all the alias definitions in their respective projects (not in SofaFramework anymore). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2175:151,install,install,151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2175,1,['install'],['install']
Deployability,"In #3838 we agreed on the misleading variable `symmetricMatrix` in the MechanicalParams.; I propose here a simple change using `m_supportOnlySymmetricMatrix` et associated read/write access function updates. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3861:199,update,updates,199,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3861,1,['update'],['updates']
Deployability,"In SOFA not using an accessor is really bad (I mean really really bad), but the syntax is not really; friendly and thus discourage ppl to use it. . The PR adds few easing function smooth the syntax. ; So you can now type:; auto points = getReadAccessor(d_points);; in place of:; ReadAccessor<Data<Vec3> points = d_points;. In also make code update more manageable, as the whole code based does not need to be changed if the d_points type change. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1254:341,update,update,341,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1254,1,['update'],['update']
Deployability,"In ```BeamFEMForceField```:; - Remove TopologyHandler to directly use TopologyData creation callback. Activate ```SofaGeneralSimpleFem_test``` by adding 8 tests in ```BeamFEMForceField_test.cpp``` to test:; - Component creation with given values or default values; - Error catching when creating without MechanicalObject; - Error catching when creating without topology or with empty topology; - value after init and after several simulation steps; - Check update of the FEM while removing edges. This last test on topological change is failing because of the bug in UniformMass fixed in PR #2377 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2382:457,update,update,457,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2382,1,['update'],['update']
Deployability,"In ```TriangularBendingSpring```:; - Remove all unused code; - Clean loops logic to exit/continue when possible. No major changes.; - Rename damping and stiffness Data to use prefix `d_`; - Add tests on Data setter to avoid negative values; - Document Header. Activate ```SofaGeneralDeformable_test``` by adding 8 tests in ```TriangularBendingSpring_test.cpp``` to test:; - Component creation with given values or default values; - Error catching if wrong Data values; - Error catching when creating without topology or with empty topology; - Init value on a single pair of triangles; - Simulated values on a grid scene; - Check update of the FEM while removing triangles. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2363:629,update,update,629,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2363,1,['update'],['update']
Deployability,"In all CMakeLists, upgrade `cmake_minimum_required` from 3.12 to 3.22 in order to support the find or fetch mechanism. **TODO**; - update documentation; - update SP3 readme. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4586:19,upgrade,upgrade,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4586,3,"['update', 'upgrade']","['update', 'upgrade']"
Deployability,"In https://github.com/sofa-framework/sofa/pull/1605, https://github.com/sofa-framework/sofa/pull/1611 and https://github.com/sofa-framework/sofa/pull/1632 were layed-out typeInfo subsystem refactoring. The general objective was to remove the ""magic"" and ODR violation of existing code.; The migration to the new system was postpone while NG refactoring & cleaning was progressing. ; Now it is done, let's go to deploy it. So in this step we are starting to use the new subsystem for ""selected"" type while printing a deprecation message for type that have not been migrated; . The PR shoul'nt break anything. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3288:411,deploy,deploy,411,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3288,1,['deploy'],['deploy']
Deployability,"In https://github.com/sofa-framework/sofa/pull/3104, `DefaultCollisionGroupManager` is removed from the scenes. However, this component has aliases that were not removed. I noticed `CollisionGroup`, and `TreeCollisionGroupManager`. ```cpp; int DefaultCollisionGroupManagerClass = core::RegisterObject(""Responsible for gathering colliding objects in the same group, for consistent time integration""); .add< DefaultCollisionGroupManager >(); .addAlias( ""CollisionGroupManager"" ); .addAlias( ""CollisionGroup"" ); .addAlias( ""TreeCollisionGroupManager"" ) // for backward compatibility with old scene files but could be removed; ;; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3320:385,integrat,integration,385,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3320,1,['integrat'],['integration']
Deployability,"In https://github.com/sofa-framework/sofa/pull/3702, it has been observed that previously, the Data callback `updateResolution` is called twice. The second call of the callback triggers inside the first call. This is because an output of the call back is edited with `beginEdit` (`d_edges.beginEdit()`). It triggers the second call.; The use of WriteOnlyAccessor fixes this problem.; This is issue is to keep in mind that `beginEdit` or `WriteAccessor` must not be used on callback outputs inside the callback. A mechanism using a counter can also track callbacks that call themselves.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3709:110,update,updateResolution,110,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3709,1,['update'],['updateResolution']
Deployability,"In order to implement damping behavior on a system, we can use rayleigh damping or we can use a more powerful feature, the dissipation potentials. These potentials implement a force that depends on the velocity. . https://par.nsf.gov/servlets/purl/10092361; http://gmrv.es/Publications/2018/SO18/EGauthorGuidelines-sca2018-sub.pdf. The first paper specifies how should these potentials be integrated into an optimization solver and the second one specifies how these potential should be to correctly damp the desired deformation modes. . In particular, we need to compute the dissipation rate, measures as the `dt * R(x, v)`. We also need to compute the damping forces (dR/dv) and the damping hessians (d2R/dvdx and d2R/dv2). With the current implementation of the ForceFields, we can implement the forces and the hessians, but we can't implement the dissipation rate because we don't have access to dt. . The `MechanicalParams` that is passed into the getPotentialEnergy function is the default instance, and that one doesn't have the dt set. . My proposal is to add a getDissipationRate function to the ForceField so we can pass the dt and separate the computation of the potential energy and the dissipation rate.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2335:389,integrat,integrated,389,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2335,1,['integrat'],['integrated']
Deployability,"In sofa, some component allows to specify colors by writing color=""1,0,0"" and ""red"" while others just allow color=""1,0,0"". This is a consistency issue (very very bad for the user experience). ; So we should unify this in all sofa for the next release. . DM.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/64:243,release,release,243,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/64,1,['release'],['release']
Deployability,"In some cases (which ones?), gcc does not link against pthread which is necessary for the recently added AsyncSparseLDLSolver.; I got the case on the latest gcc on Manjaro (`gcc version 11.1.0`), and at least one other user is reported the same error #2736 . Same configuration with clang worked fine without so I suppose the added library comes from somewhere (but I dont where/what). ; This PR adds the necessary library in any case. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2739:264,configurat,configuration,264,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2739,1,['configurat'],['configuration']
Deployability,"Inside the file defaulttype/CMakeLists.txt, the line; `target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>/../.."")`; should be; `target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../..>"")`. This error makes IDE based on cmake bleed the symbol indexing since a relative path ""../.."" is wrongly added in the sofa's CMake installed filed:. ```; $ grep -nr ""INTERFACE.*\.\.\/\.\."" build/install/lib/cmake; ./SofaFramework/SofaFrameworkTargets.cmake:66: INTERFACE_INCLUDE_DIRECTORIES ""${_IMPORT_PREFIX}/include;/../..""; ```. If, for exemple, you create an external projet that depends on Sofa, and that this external project is placed inside ~/source/project, than any IDE based on cmake for symbol indexing such as CLion will try to parse ~/source/project/../.. which is the home directory. This will end up take a lot of resources just for symbol indexing of a small project.; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/401:412,install,installed,412,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/401,2,['install'],"['install', 'installed']"
Deployability,"Install FindTinyXML2 for OOT compilation using the binaries. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4545:0,Install,Install,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4545,1,['Install'],['Install']
Deployability,"Introduce examples scenes for 4 cases of Euler explicit solver:; 1) Mass matrix is not diagonal and Euler is not symplectic: EulerExplicitSolver.scn; 2) Mass matrix is diagonal and Euler is not symplectic: EulerExplicitSolver_diagonal.scn; 3) Mass matrix is not diagonal and Euler is symplectic: EulerSymplecticSolver.scn; 4) Mass matrix is diagonal and Euler is symplectic: EulerSymplecticSolver_diagonal.scn. I did my best to create stable scenes, but it is not that simple with an Euler explicit solver. Especially if not symplectic. It comes at the price of very small time step sizes. This PR is based on #2163. It will need to be updated after #2165 is merged. [ci-depends-on https://github.com/sofa-framework/Regression/pull/15]",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2199:636,update,updated,636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2199,1,['update'],['updated']
Deployability,"Introduction of wrappers, derived from `BaseMatrix` and `BaseVector`, to Eigen matrices. The wrappers are courtesy of @jnbrunet, from https://github.com/jnbrunet/caribou, and have been adapted to SOFA + missing functions for CGLinearSolver. `eigen::EigenMatrix` has the interface of `BaseMatrix`, so it can be used as a matrix storing the linear system, in a linear solver.; An example is provided in `CGLinearSolver`. Performances:. Tested on a cantilever beam from `examples/Components/linearsolver/FEMBAR-CGLinearSolver.scn`. **CompressedRowSparseMatrixMat3x3d**; [INFO] [BatchGUI] 1000 iterations done in 2.62389 s ( 381.113 FPS).; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 2.23 5.32 2.59 0.21 2587.89 100 TOTAL; 1 0 1 2.23 5.31 2.59 0.21 2.59 99.97 .Simulation::animate; 2 0 1 0 0.02 0 0 0 0.04 ..BehaviorUpdatePositionVisitor; 2 0 1 0 0.01 0 0 0 0.05 ..UpdateInternalDataVisitor; 2 0 1 2.21 5.24 2.56 0.21 2.56 99.03 ..AnimateVisitor; 3 0.01 1 2.20 5.24 2.56 0.21 2.56 98.94 ...Mechanical; 4 0.01 1 0.06 0.21 0.07 0.01 0.07 2.60 ....ComputeForce; 4 0.08 1 0.05 0.14 0.05 0 0.05 1.98 ....ComputeRHTerm; 4 0.13 1 0.49 1.58 0.52 0.04 0.52 20.27 ....MBKBuild; 5 0.13 1 0.49 1.56 0.52 0.04 0.52 20.19 .....CG-setSystemMBKMatrix; 4 0.66 1 1.58 4.57 1.90 0.20 1.90 73.45 ....MBKSolve; 5 0.67 1 1.56 4.54 1.88 0.20 1.88 72.80 .....CG-Solve; ```. **CompressedRowSparseMatrixd**; [INFO] [BatchGUI] 1000 iterations done in 4.19299 s ( 238.493 FPS).; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 3.74 8.41 4.16 0.27 4159.02 100 TOTAL; 1 0 1 3.74 8.40 4.16 0.27 4.16 99.98 .Simulation::animate; 2 0 1 0 0 0 0 0 0.02 ..BehaviorUpdatePositionVisitor; 2 0 1 0 0 0 0 0 0.03 ..UpdateInternalDataVisitor; 2 0 1 3.72 8.36 4.13 0.27 4.13 99.39 ..AnimateVisitor; 3 0.01 1 3.72 8.35 4.13 0.27 4.13 99.33 ...Mechanical; 4 0.01 1 0.06 0.18 0.07 0.01 0.07 1.59 ....ComputeForce; 4 0.08 1 0.05 0.14 0.05 0 0.05 1.21 ....ComputeRHTerm; 4 0.13 1 1.66 5.86 1.72 0.14 1.72 41.42 ....",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2794:882,Update,UpdateInternalDataVisitor,882,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2794,1,['Update'],['UpdateInternalDataVisitor']
Deployability,"Introduction; =========; This PR refactor the class reflection feature. . In this PR didn't removed functionalities but i reorganized, rename and refactor them. . To ease the transition, I have let the old function available with a deprecated message trying at best to preserve feature. When the transitional layer will be removed (in a few month so) you may encounter compilation failure because of function removing, so it is highly suggested to quickly update your code. A dedicated section at the end of this document gives you hints on how to update you code. . Changes:. Move name decoding apsect in a separated file called NameDecoder.h; -------------------------------------------------------------------------------------------; Currently name processing is done in Base. This is generating an not needed noise ; for developper. So I moved all that name's related code into a separated file NameDecoder.h. ; So to get typeName, className, shortName, etc...you can now do:; ```cpp; NameDecoder::getTemplateName<MyObject>();; ``` ; The mecanism to implement custom name or template was too complex than what it should requiring to implement several function (the virtual one and the static one). So I propose here a different implementation where, to customize the template or className you just needs to implement the CustomClassName()/CustomTemplateName() static function in your class ...and everthing will work out of the box. For curious people have look at the SFINAE used to implement that in NameDecoder. The NameDecoder class is now used by the BaseClass to decode names. Remove duplicated custom template name; -------------------------------------------------------; A complete mecanisme is now implemented in the NameDecoder & BaseClass to provide default templateName for sofa object. The underlying idea was to remove the needs to those kind of code ; ```cpp; MyClass : public BaseObject; virtual std::string getTemplateName() const { return ""CustomName""; } ; static std::string t",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1283:456,update,update,456,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1283,2,['update'],['update']
Deployability,Is it possible to update the glew version distributed in the windows dependencies?. We can get this problem with the actually distributed version 1.13: https://www.khronos.org/opengl/wiki/OpenGL_Loading_Library#Initialization_of_GLEW_1.13.0_and_earlier. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/466:18,update,update,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/466,1,['update'],['update']
Deployability,"Issue detected by @quentinfrancois0. This comes from a change in the Python configuration since the last High Sierra.; The line #include <Python/Python.h> involved a link ""Python"" to the python include, but this is no longer valid in High Sierra. This was causing a fail in the compilation (include not found). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/614:76,configurat,configuration,76,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/614,1,['configurat'],['configuration']
Deployability,Issues with Sofa.Component.UserInterface.ConfigurationSetting,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:41,Configurat,ConfigurationSetting,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,1,['Configurat'],['ConfigurationSetting']
Deployability,"It has been noticed in https://github.com/sofa-framework/sofa/issues/4331. As it appears in the initialization, it won't affect the performances during the simulation. I took the opportunity to remove the useless collision pipeline in the example scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4332:223,pipeline,pipeline,223,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4332,1,['pipeline'],['pipeline']
Deployability,"It is useful to be able to load shaders directly from a std::string as it allows us to not need filesystem management. Consequently ""fixed"" shaders like shadows (or normal rendering when OpenGL Core profile will come) will be directly integrated into the libs (no more share/shaders directory to locate/find/read). [needed to solve #142 ]. Checklist to merge this PR: ; - [x] succeed on each compilation setup on the CI ; - [x] does not generates new warnings or test failure ; - [x] does not seems to break existing scenes.; - [x] does not seems to break API compatibility. ; - [x] cleans stuff; - [x] have tests on the introduced features. ; - [x] is now 1 week old and no one send a 'no go' comment.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/158:235,integrat,integrated,235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/158,1,['integrat'],['integrated']
Deployability,"It seems msvc is quite (much!) less clever than gcc. 2 optimizations (only useful when not building in Release mode); - add and use a NOINIT RigidDeriv constructor (avoiding to init a deriv which is filled afterwards); - default ctor directly call the identity of its components (which is their default ctor by the way). and 1 ridiculous optimization; - avoid calling getPositionIntegrationFactor() in the nested loop; ; This optimization brings a whooping 30% speedup on my setup (VC2022, Release/LTO enabled); Test scene: 3instruments_collis.scn from BeamAdapter, 2000 iterations in batch mode; - before: 16.5669 s ( 120.723 FPS); - after: 12.829 s ( 155.897 FPS). GCC was doing the same by the way with or without these optims (and is faster than msvc, even in a VM 🤔). NOTE: do not forget to enable the LTO option for Windows when deploying, it brings full inlining & stuff and it is really useful for perf; (w/o LTO, before the optims it is 21.9883 s ( 90.9575 FPS) ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3135:103,Release,Release,103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3135,3,"['Release', 'deploy']","['Release', 'deploying']"
Deployability,"It started from the case where SparseGrid could not open .OBJ files (because it is upper case 🐶 ); Now SparseGrid relies on the FactoryMesh mechanism for its extension management. BUT MeshOBJ is super deprecated, and the legacy helper::io::MeshLoader (not the one in sofa::core::loader) should be not used anymore.; BUT SparseGrid does not really handle src=""@loader"" syntax very well now, and it will be upgraded in the future. . I added some tests anyway 💛 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1231:405,upgrade,upgraded,405,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1231,1,['upgrade'],['upgraded']
Deployability,"It was agreed that runSofa is on its dying...but I see so much people that still use it so here is a set of patches to may make their live easier. I tried to spend as few time as possible so it is not super clean. . This PR contains: ; 1) Extend the live coding support. Before this PR only python script controller where concerned. Now any xml, pyscn and other is concerned when runSofa is started with the -i option. This is very usefull to make live demonstration, explaining scenes to an audiance or practice on small scene. It has no impact on user that don't start runSofa without -i. . 2) Currently Object that have messages in their logs exhibits small signs (green/yellow/red). This PR extends this behavior to the Node so it is more consistant and easy to locate the messages. . 3) Adds an openInEditor function in the pop menu in the scene graph to open the current scene in an external editor (It is nothing but I use that all the time in qtcreator and I wanted the same in sofa). Enjoy/. CHANGELOG for @hugtalbot & @guparan :; - [runSofa] ; - when using runSofa with the -i option adds live coding support for xml & pyscn scenes.; - adds icons (green, red, yellow) on nodes when their is message (before only the object have the icons). ; - in the scene graph pop-up menu adds an entry that open the current scene into an external editor. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/337:108,patch,patches,108,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/337,1,['patch'],['patches']
Deployability,"It was deemed too bothersome to have a subdirectory for the types similar to the stl (aka ""stdtypes"").; This fact is already indicated with the lowercase classname (and filename) anyway. This PR just remove the subdirectory (and updates the corresponding namespaces and paths). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1946:229,update,updates,229,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1946,1,['update'],['updates']
Deployability,"It was pointed by @EulalieCoevoet that the callbacks update are only called when the modified data is accessed for reading. This has a consequence in the UX, when a data field value is changed in the inspector, the callback is only executed when data is accessed... but not when we click on the ""update"" or ""ok"" button. . It was thus suggested to trigger the callback by accessing the component state.; All other change are just cleaning and refactoring of the function. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3713:53,update,update,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3713,2,['update'],['update']
Deployability,"It would be better to have gtest as an external lib... but in the meantime before such a PR arrive here is a gtest update to the latest official version (1.10). . It contains nice features to make abstract tests (to validate an abstract class properties on all its implementation). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1705:115,update,update,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1705,1,['update'],['update']
Deployability,"Just a little fix in SparseLDLImplInvertData, r of sparse is missing. ; Fix needed for Cuda plugins update in sofa-dev.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/74:100,update,update,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/74,1,['update'],['update']
Deployability,"Just call getValue once and use the const ref afterwards. This is particularly showing for the function getIndex() which is called a lot of times (really a lot). Release mode (full optim), MSVC and scene from Components/topology/RegularGridTopology.scn:; before: `5000 iterations done in 22.5747 s ( 221.487 FPS).`; after : `5000 iterations done in 20.7355 s ( 241.132 FPS).`; so 10% speedup. But the optimization is more effective the more complex the mesh is; (I changed the mesh in the previous scene with a liver with 500K triangles and the speed up was like around 30%). In any case, it shows that `getValue()` is not really ""free"" and must be called only once if the value is needed more than one time, especially in the ""hot"" functions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3348:162,Release,Release,162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3348,1,['Release'],['Release']
Deployability,"Just update the 3 examples for components: `WriteState`, `ReadState` and `CompareState` to be more useful. Here is the screenshot of CompareState.scn with in blue the simulated beam, in green the result of readState from a record of a heavier beam and in purple the drawing from `CompareState` showing distance between the simulated dof and the expected position from the state file. ![image](https://github.com/sofa-framework/sofa/assets/21199245/4164a242-4462-45fa-a366-e77ab11e0076). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4745:5,update,update,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4745,1,['update'],['update']
Deployability,"KE_BUILD_TYPE + Enable more plugins. ### [[DiffusionSolver] MOVE from image/extlibs to a real plugin](https://github.com/sofa-framework/sofa/commit/54f49d039aadaffd57a1d7f8ebab3af82e407674); I see no reason not to do that. Dependencies to DiffusionSolver are simpler this way. ### [[CImgPlugin] CLEAN include directory](https://github.com/sofa-framework/sofa/commit/1a617d5350f74ac4a816255960d92638a26cba1b); Sources moved to `src`. No more `../` horror in CImgPlugin include directories. ## Other changes. - [SofaHelper] FIX DynamicLibrary altered search path (Windows only) ; Needed to prefer `bin` libraries over neighboor libraries; - [SofaFramework] FIX typo in config.h.in; - [runSofa] Check if plugins dir exists before adding to PluginRepository; - [SofaTest] FIX SofaPython finding in *Config.cmake.in; - [plugins] ADD missing *Config.cmake.in files; Needed to use them as real plugins; - [All] Improve sofa_copy_libraries and sofa_install_libraries macros; Make them easier to use; - [CMake] Rename sofa_set_python_directory into sofa_install_pythonscripts; Clearer name in my opinion + using CMake multiValueArgs; - [CMake] Update package.cmake to enable plugins; Prepare package.cmake to produce binaries with all plugins from ""options"" configuration.; - [SofaImplicitField] FIX tests enabling; - [CMake] CLEAN package.cmake; - [SofaSimulationCore] Handle reload differently in SceneLoader::Listener; Needed to disable scene checks on reload.; - [SofaGraphComponent] Disable scene checks on reload; Needed by live editor (which reloads the scene every time the file is changed).; - [plugins] Remove commented lines in CMakeFiles. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:4341,Update,Update,4341,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,1,['Update'],['Update']
Deployability,"Last and maybe least PR on adding SingleLink to Topology in all components.; Following PR #1183 and #1199 ; <br>; **Addition change done in this PR:**; - Add new method getMeshTopologyLink() to quickly search for all component updated. (to replace all by next link generation); - Replace methods getLocalMeshTopology and getActiveMeshTopology by getMeshTopologyLink with imposed searchDir (temporary change); - Replace getMeshTopology method in collision model by getCollisionTopology using the l_topology. <br>. **Change done in all compoents:**; As discuss in #744 . The idea at the end is to remove all GetMeshTopology. ; 1. Add SingleLink in all component accessing GetMeshTopology from context; 2. Update all scenes but keep backward compability:; ```; if (linkTopology.empty()){; msg_warning() <<""set the link"";; linkTopology.set((this->getContext()->getMeshTopologyLink());; }; ```; 3. Flag all getXXXMeshTopology to Depreciate 20.06 ?; 4. after 20.06 Remove all getMeshTopology(). <br>. **Full list update: in the 3 PR**; - [SofaBaseCollision] ; - CapsuleModel; - [SofaBaseMechanics]; - DiagonalMass; - MechanicalObject; - SubsetMapping; - UniformMass; - [SofaBaseTopology] ; - PointSetGeometryAlgorithms; - [SofaBaseVisual] ; - VisualModelImpl; - [SofaBoundaryCondition]; - AffineMovementConstraint; - ConstantForceField; - EdgePressureForceField; - FixedConstraint; - FixedPlaneConstraint; - FixedTranslationConstraint; - HermiteSplineConstraint; - LinearForceField; - LinearMovementConstraint; - LinearVelocityConstraint; - OscillatingTorsionPressureForceField; - ParabolicConstraint; - PartialLinearMovementConstraint; - PatchTestMovementConstraint; - ProjectDirectionConstraint; - ProjectToLineConstraint; - ProjectToPlaneConstraint; - ProjectToPointConstraint; - QuadPressureForceField; - SurfacePressureForceField; - TaitSurfacePressureForceField; - TrianglePressureForceField; - [SofaConstraint]; - DistanceLMConstraint; - DOFBlockerLMConstraint; - FixedLMConstraint; - UncoupledConstr",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1223:227,update,updated,227,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1223,2,"['Update', 'update']","['Update', 'updated']"
Deployability,Last but not least PR on SPH plugin to restore ParticleSink component.; - Move all code inside inl file; - Fix the extern template; - Add prefix d_ to data; - Fix global behavior; - Update the existing basic example scene ; - Add 2 others scenes using Topology changes and OglFluid rendering done in previous PR. ![ezgif com-crop](https://user-images.githubusercontent.com/21199245/67562701-8b063f00-f71f-11e9-9e0b-d72e2a0f347a.gif). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1195:182,Update,Update,182,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1195,1,['Update'],['Update']
Deployability,"Last lifecycle before the release. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4760:26,release,release,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4760,1,['release'],['release']
Deployability,"Last soft dependencies (headers) in SofaCore:; - BaseContext just needs a forward declaration from Visitor (allowing removal of simulation/fwd.h); - ScriptEvent to use BaseNode from core instead of Node; - removing a large chunk of code in Pipeline (disabled with ```if 0``` since [a commit 14 (!) years ago](https://github.com/fredroy/sofa/commit/d29dc273dbf3c434a2de5434f39cfcee68ee8e24) whose goal was to do the same as this commit !); - some cleaning here and there. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1928:240,Pipeline,Pipeline,240,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1928,1,['Pipeline'],['Pipeline']
Deployability,"Last step to complete the task to unify the image importing process. Now that CImgPlugin is integrated, ImageBMP/ImagePNG and ImageQt can be removed from the trunk of Sofa. ; It lets all the responsibility of reading images to CImgPlugin (or any user custom plugin). (closes finally #9 and #51 ). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/424:92,integrat,integrated,92,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/424,1,['integrat'],['integrated']
Deployability,"Let's not pollute the `plugins` directory of SOFA install with all the old modules like SofaBaseMechanics that are now collections.; I created a new `collections` directory for them, working the same way as `plugins`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3196:50,install,install,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3196,1,['install'],['install']
Deployability,"Let's start from the begining. . By default the msg_ api does not stores the messages because in some context of use it is not needed while in some other it is (in a non graphical sofa vs in a sofa GUI). . Thanks to the MessageHandler class it is easy to add custom message storage that fits the application's needs.; ; Currently the existing LoggingMessageHandler can be used to store in a single storage queue the messages. The queue can be queried to get the messages for whatever the application developer want to do with them (displaying them in GUI or showing a long history, ...). In serr/sout API a different scheme is used as the history is stored at the Base object level in a (size increasing) string. This behavior is now possible with the PerComponentLoggingMessageHandler.; This behavior is closer to the existing serr/sout but it also have several improved properties:; - the message are really stored (not just the 'text' description);; - no text concatenation (memory resize, memory copy) at each message, ; - the queue size of each component can be controlled with a data field as well as the message type to store or to ignore in the queue. ; - when the handler is not installed...there is not recording of the message...so there is a computation & memory zero cost. . NB: The d_msgLevel and d_logLevel in Base* are only there for discussion but they are currently unused now. . There PR also contains several new tests. . Checklist to be merge: ; - [x] succeed on each compilation setup on the CI.; - [x] does not generates new test failure. ; - [x] does not seems to break existing scenes. ; - [x] does not seems to break API compatibility. ; - [x] introduces new component with tests & documentation. ; - [ ] is now 1 week old and no one send a 'no go' comment.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/106:1188,install,installed,1188,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/106,1,['install'],['installed']
Deployability,"Libraries for debug configuration have suffix ""d"". For that reason release and; debug configurations must have different pragmas for linking libpng and zlib; under MSVS. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/297:20,configurat,configuration,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/297,3,"['configurat', 'release']","['configuration', 'configurations', 'release']"
Deployability,"Libraries for debug configuration have suffix ""d"". For that reason release and; debug configurations must have different pragmas for linking libpng and zlib; under MSVS. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/298:20,configurat,configuration,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/298,3,"['configurat', 'release']","['configuration', 'configurations', 'release']"
Deployability,Linked to the #597 and all Data dependency and Data update topics.; A proof of concept of a visitor-less SOFA could ease a lot next steps on these topics. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1340:52,update,update,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1340,1,['update'],['update']
Deployability,"METIS and CSPARSE are used for sparse solvers. However, they can be better integrated. # METIS; - it could be useful to isolate METIS. Currently, it is an extlib in SofaSparseSolver. So, it is necessary to `find_package` SofaSparseSolver in order to link with METIS.; - The developer has the choice to use its own METIS library if it is in his PATH, or to use the one in extlib. For consistency between users, only one option could be considered.; - METIS library can be updated: a newer version of METIS is available on https://github.com/KarypisLab/METIS. # CSPARSE. - it could be useful to isolate CSPARSE. Currently, it is an extlib in SofaSparseSolver. So, it is necessary to `find_package` SofaSparseSolver in order to link with CSPARSE.; - CPARSE has been modified for our purpose. What are the changes? It prevents to update the lib. Would it be possible to keep the original CSPARSE library and isolate our modifications?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2767:75,integrat,integrated,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2767,3,"['integrat', 'update']","['integrated', 'update', 'updated']"
Deployability,"Macro sofa_install_git_infos will install a file `git-infos.txt` in all modules that contain a `.git` in their sources.; This will help to keep track of versions within SOFA binaries. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2309:34,install,install,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2309,1,['install'],['install']
Deployability,Management of the inclusion pipeline for config.h,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/904:28,pipeline,pipeline,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/904,1,['pipeline'],['pipeline']
Deployability,"Manager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module could not be found. Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ```. This dll is actually present. Please see the snapshot below.; Directory view:; ![image](https://user-images.githubusercontent.com/5296582/83347021-63272b80-a33f-11ea-9cda-e2c209b1be80.png). I am not able to understand what is the issue? Please suggest. Thanks; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:2229,Release,Release,2229,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,1,['Release'],['Release']
Deployability,"Manual merge to close PR #218 ; Only one commit was not integrated: (MechanicalMatrixVisitor and MechanicalOperations) fix if using a Linear Solver, projective constraints were wrongly applied when a force field is in a child node. -- Notes:. This PR will be further discussed during STC#3. ## issofa_bugfix. ### Cleans; - BaseObject: Output message in serr for required datas. Error word should be reserved for messages that will make the application fail.; - RayTriangleVisitor and SceneLoaderFactory: clean warnings; - ParticlesRepulsionForceField: Add empty implementation of addKToMatrix to get rid of console warnings. ### Bugfixes; - AttachConstraint: fix crash when indices are resized; - BTDLinearSolver: fix constant log + operator new [] vs operator delete mismatch; - CatmullRomSplineMapping: fix applyJ compilation; - ConstantForceField: fix avoid crashes in draw when trying to apply a constantforcefield to a non existing point; - DistanceGrid: fix incorrect use of serr; - GeneralConstraintSolver: fix incorrect parent class in SOFA_CLASS macro; - IndicesFromValues: fix use getTemplateName to avoid problems of links with other data; - EulerImplicitSolver: fix Disable calls to solveConstraint from EulerImplicitSolver by default as it is not needed unless an very specific solver is added and it currently crashes in other cases + wrong argument order in calls to `AdvancedTimer::stepNext()`; - FixedConstraint and PartialFixedConstraint: fix ""fixed FixedConstraint & PartialFixedConstraint for size-varying mechanical objects"".; - MechanicalObject: fix crash in debug with null pointer; - Mass: fix remove error logging in Mass method that are inherited from Forcefield API and that are not relevant for Mass; - Mesh2PointMechanicalMapping: fix constraints ApplyJT; - Metis(gk_arch.h): fix compilation with Visual Studio 2015; - ParticlesRepulsionForceField and RepulsiveSpringForceField: fix avoid division by 0 on repulsion force fields; - PersistentContactBarycentricMapping: fix",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/756:56,integrat,integrated,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/756,1,['integrat'],['integrated']
Deployability,Memory leak in Simulation.unload() caused by collision pipeline,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318:55,pipeline,pipeline,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318,1,['pipeline'],['pipeline']
Deployability,MeshLoader; [WARNING] [ObjectFactory] Class already registered: GridMeshCreator; [WARNING] [ObjectFactory] Class already registered: InputEventReader; [WARNING] [ObjectFactory] Class already registered: MeshGmshLoader; [WARNING] [ObjectFactory] Class already registered: MeshOffLoader; [WARNING] [ObjectFactory] Class already registered: MeshSTLLoader; [WARNING] [ObjectFactory] Class already registered: MeshTrianLoader; [WARNING] [ObjectFactory] Class already registered: MeshXspLoader; [WARNING] [ObjectFactory] Class already registered: OffSequenceLoader; [WARNING] [ObjectFactory] Class already registered: SphereLoader; [WARNING] [ObjectFactory] Class already registered: StringMeshCreator; [WARNING] [ObjectFactory] Class already registered: VoxelGridLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [WARNING] [ObjectFactory] Class already registered: CompareState; [WARNING] [ObjectFactory] Class already registered: CompareTopology; [WARNING] [ObjectFactory] Class already registered: DataController; [WARNING] [ObjectFactory] Class already registered: DataMonitor; [WARNING] [ObjectFactory] Class already registered: DevAngleCollisionMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: DevMonitorManager; [WARNING] [ObjectFac,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:29770,install,install,29770,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability,"Method LoadFromMemory to load an XML as a string is taking a parameter size which is unused and generate conversion warnings in tests. - Add method depreciation; - Update all tests compiled in my setup. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3376:164,Update,Update,164,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3376,1,['Update'],['Update']
Deployability,"Metis is an external library producing a few hundreds of compilation warnings (https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3459/FullBuildWarnings-MSBuild/). ![image](https://user-images.githubusercontent.com/10572752/163556296-5c153462-6e47-4e57-94c0-d06a36c6d299.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2874:193,release,release,193,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2874,1,['release'],['release']
Deployability,"Metis is installed only in the folder of the first plugin fetching it. Making the other one fail to find it. Moving it into the main folder with CMake is not really meaningful. The plugin should not fix something that is at higher level in the CMake hierarchy as itself (aka, fix install issue when another target depends on one of its dependency)... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4767:9,install,installed,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4767,2,['install'],"['install', 'installed']"
Deployability,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1926:308,Update,UpdateBoundingBoxVisitor,308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1926,2,['Update'],['UpdateBoundingBoxVisitor']
Deployability,Modules: Update variable name,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1986:9,Update,Update,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1986,1,['Update'],['Update']
Deployability,"Move Flexible code (and its history) to its own repository : https://github.com/sofa-framework/Flexible; And the same with Compliant: https://github.com/sofa-framework/Compliant. CI has been updated so it should fetch and enable those two plugins. EDIT: adding one more repo, RigidScale, as it is 100% depending on those two plugins. (#1527 , #1442); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1873:191,update,updated,191,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1873,1,['update'],['updated']
Deployability,"Move ManifoldTopologies and its history to its own repository : https://github.com/sofa-framework/ManifoldTopologies . the configure script on the CI has already been updated. It has its own CI too (and releases). (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2623:167,update,updated,167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2623,2,"['release', 'update']","['releases', 'updated']"
Deployability,"Move OptitrackNatNet and its history to its own repository : https://github.com/sofa-framework/OptitrackNatNet. the configure script on the CI has already been updated. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2548:160,update,updated,160,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2548,1,['update'],['updated']
Deployability,"Move PluginExample and its history to its own repository : https://github.com/sofa-framework/PluginExample (with brand-new github actions 😎). the configure script on the CI has already been updated. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2519:190,update,updated,190,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2519,1,['update'],['updated']
Deployability,"Move Registration and its history to its own repository : https://github.com/sofa-framework/Registration. the configure script on the CI has already been updated. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2552:154,update,updated,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2552,1,['update'],['updated']
Deployability,"Move SofaCUDA and its history to its own repository : https://github.com/sofa-framework/SofaCUDA. CI is building SofaCUDA on Windows so the configure script has been updated. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2502:166,update,updated,166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2502,1,['update'],['updated']
Deployability,"Move SofaPython code (using Python2) and its history to its own repository : https://github.com/sofa-framework/SofaPython. CI has been updated so it should fetch and enable SofaPython. (#1527 , #1442). TODO: convert MechanicalMatrixMapper.pyscn to a standard XML scene (in examples folder); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2224:135,update,updated,135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2224,1,['update'],['updated']
Deployability,"Move THMPGSpatialHashing and its history to its own repository : https://github.com/sofa-framework/THMPGSpatialHashing . the configure script on the CI has already been updated. It has its own CI too (and releaases). (#1527 , #1442). It just introduces one new component, THMPGSpatialHashing which is a colllision pipeline (i.e implements broad and narrow phases detection). ; After some tests it is slower than the standard bvh one, so it does not seem really important to maintain IMO. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2609:169,update,updated,169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2609,2,"['pipeline', 'update']","['pipeline', 'updated']"
Deployability,Multi-Mesh loader design (Assimp plugin integration),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/602:40,integrat,integration,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/602,1,['integrat'],['integration']
Deployability,"Name=['BugPosition']); root.addObject(""MechanicalObject"", name=""MO"", template=""Vec3d"", position=[1, 0, 0]); root.addObject(""TestComponent"", position=""@MO.position""); root.addObject(Controller(root.MO)); ```. **Steps to reproduce**; I've put everything needed to reproduce the issue here https://github.com/jnbrunet/BugPosition. Hence, the following steps can be taken (the SOFA installation path must be changed, and SofaPython3 plugin must be installed alongside SOFA):; ```bash; export SOFA_ROOT=/opt/sofa; export PYTHONPATH=$PYTHONPATH:$SOFA_ROOT/plugins/SofaPython3/lib/python3/site-packages; ```; Then, compile and launch the scene; ```bash; git clone git@github.com:jnbrunet/BugPosition.git; cmake -DCMAKE_PREFIX_PATH=$SOFA_ROOT/lib/cmake -S BugPosition -B BugPosition/build -DCMAKE_BUILD_TYPE=Release; cmake --build BugPosition/build; python3 BugPosition/scene.py; ```; which should produce the erroneous results (random displacement isn't taken into account).; ```; (...); onAnimateBeginEvent; random_disp[0]=array([-0.01092411, -0.00742505, -0.01442109]); self.MO.position.value[0]=array([1., 0., 0.]); onAnimateEndEvent; self.MO.position.value[0]=array([1., 0., 0.]); ```. **Expected behavior**; The correct behaviour can be obtained using the GUI. In the previous example, simply adding the `gui` parameter to the scene will do the trick:. ```commandline; python3 BugPosition/scene.py gui; (...); onAnimateBeginEvent; random_disp[0]=array([-0.00746889, -0.01065234, 0.00446683]); self.MO.position.value[0]=array([ 0.99253111, -0.01065234, 0.00446683]); onAnimateEndEvent; self.MO.position.value[0]=array([ 0.99253111, -0.01065234, 0.00446683]); ```. ---------------------------------------------. ### Environment. **Context**. - System: MacOS 12.1 but reproductible on Ubuntu 20.04; - Version of SOFA: master branch ([888a159f4c](https://github.com/sofa-framework/sofa/tree/888a159f4c)); - State: install directory. ---------------------------------------------. Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2761:4140,install,install,4140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2761,1,['install'],['install']
Deployability,"Necessitate to update the CI: see https://github.com/sofa-framework/ci/pull/19. [ci-depends-on https://github.com/SofaDefrost/STLIB/pull/106]; [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/354]; [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/222]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882:15,update,update,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882,1,['update'],['update']
Deployability,"Needs #1408 ; OglModel recomputes its internal data on topology change. There's 2 things I need review for here:; 1. which initialization methods should be called to properly update an OglModel? Currently, I'm calling more or less the whole thing: delete buffers, then init / reinit / initVisual & updateBuffers. Not sure all of them are necessary; 2. Which datafields should be taken into consideration for a total reinit:; Ideally I'd like to trigger the full update of the OglModel only when a change in the loader triggers the recomputation: positions can vary during simulation and shouldn't trigger a reload of the component.; Edges / triangles & other topological info change when the loader changes geometry, but could also change during a topological change for instance, and in that 2nd case shouldn't trigger a reload from the loader, whose topology isn't up-to-date anymore. This component needs heavy restructuring I believe if we want to handle proper data update using callbacks, and might be a good example for other components if we do it right. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1423:175,update,update,175,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1423,4,['update'],"['update', 'updateBuffers']"
Deployability,"New plugins are / should soon be released, and it could be nice to get them fetchable from SOFA:; - Caribou; - BeamAdapter",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2484:33,release,released,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2484,1,['release'],['released']
Deployability,"Not sure if this is correct, but it seems that sofa uses the rt library (high resolution clock?) on unix, but does not explicitly specify the library when linking. Because of that, compilation may fail on some systems. This patch just makes dependency on the rt library explicit in cmake",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/19:224,patch,patch,224,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/19,1,['patch'],['patch']
Deployability,"Now that the v23.12 is getting stable, this PR applies the [lifecycle](https://www.sofa-framework.org/community/doc/contributing-to-sofa/lifecycle-mechanisms/) policy of SOFA for the v24.06 release. Note that :; - another PR follows this one removing the entire `Sofa/Component/Compat` layer #4533; - this PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4532:190,release,release,190,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4532,1,['release'],['release']
Deployability,ObjectFactory] Class already registered: SpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: SpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: SpringForceField<Vec6d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec6d>; [WARNING] [ObjectFactory] Class already registered: PolynomialSpringsForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [WARNING] [ObjectFactory] Class already registered: PenalityContactForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [WARNING] [ObjectFactory] Class already registered: LineCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: PointCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: TriangleCollisionModel<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSo,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:11916,install,install,11916,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability,"On MacOS, I experienced a big problem since my OS upgrade to Big Sur. ; runSofa viewport remaining blank, either with QGL viewer or OpenGL viewer, with the following error message in the terminal:; ```; qt.qpa.openglcontext: Could not create NSOpenGLContext with shared context, falling back to unshared context.; ```; I finally figured it out: My Qt version was 5.15.x (installed with brew or the Unified Installer) and there seems to be a problem here, at least with my configuration : Intel Mac, with ATI GPU, MacOS 11.2.3.; **Downgrading Qt to 5.12.5 is a workaround.** It's a dirty fix that works, where a complete reinstall of Xcode and dependencies did not. At least I have a working build of runSofa now :-). I really have no idea of the exact cause of the problem, maybe related to my Mac configuration, GPU drivers or use of deprecated API by SOFA, but I hope this could help someone with the same problem.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2028:50,upgrade,upgrade,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2028,5,"['Install', 'configurat', 'install', 'upgrade']","['Installer', 'configuration', 'installed', 'upgrade']"
Deployability,"On Windows, when doing INSTALL, relocatable dlls have to be copied to install_dir/bin (because there is no RPATH on Windows).; This is done by `windows-postinstall-fixup.sh` but this script is executed only if the CMake option `SOFA_BUILD_RELEASE_PACKAGE` is ON. To do: rewrite `windows-postinstall-fixup.sh` in CMake and make sure it's always executed after install.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2353:23,INSTALL,INSTALL,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2353,2,"['INSTALL', 'install']","['INSTALL', 'install']"
Deployability,"One step towards continuous delivery in SOFA :tada: . This PR reworks/cleans CPack usage for release packaging and adds a new generator : [Qt Installer Framework](http://doc.qt.io/qtinstallerframework/ifw-overview.html). Very useful to unify packaging methods, it will be at first used to generate nice installers for Linux. This means no more .zip package for Linux binaries, unless you want to keep them?. Note: This PR also adds the opening of an URL after installation to ask the user to consider donating to the SOFA project. Do not hesitate to comment if you disagree with this idea. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/796:17,continuous,continuous,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/796,5,"['Install', 'continuous', 'install', 'release']","['Installer', 'continuous', 'installation', 'installers', 'release']"
Deployability,Only an optimal version based on the initial values of the; stiffness vector was implemented. Need to have updated stiffnesses. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/579:107,update,updated,107,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/579,1,['update'],['updated']
Deployability,Only small bug fixes according to release notes so it should not be breaking.... source taken from: https://sourceforge.net/projects/qwt/files/qwt/6.1.4/; release notes: https://sourceforge.net/p/qwt/news/. Fix #1134; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1136:34,release,release,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1136,2,['release'],['release']
Deployability,Only some cleaning in:; - Class define macro; - Data and member prefix; - Move code from header to inl or cpp files. Update several plugin demo scenes. ![SpatialGridContainer_00000001](https://user-images.githubusercontent.com/21199245/66745709-13632500-ee80-11e9-9cfe-94e1a9e4d27c.png); ![SPHFluidForceField_benchmarks_00000001](https://user-images.githubusercontent.com/21199245/66745711-13632500-ee80-11e9-8382-738a86b68c3c.png); ![SPHFluidSurfaceMapping_00000001](https://user-images.githubusercontent.com/21199245/66745713-13fbbb80-ee80-11e9-98a1-ea1386f91c19.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1186:117,Update,Update,117,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1186,1,['Update'],['Update']
Deployability,"Originally, the goal was not really to go for ; - #4221. But more to upgrade the gtest version, as the one in SOFA is really old (1.7.0 , *Sep 19, 2013* :exclamation: ) and was throwing warnings for newer cmake.; So instead of simply update the source in extlibs, I took the liberty to go into the find/fetch mechanism. A bit difficult as the CMakefile in the embedded version was heavily customized, so I am not 100% sure the install/package process is working well. But it should 😅. Last note: it is adding a target `gtest_main` which is always activated in the gtest cmake file. It is not used by SOFA as we have our own main for gtest. [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/5]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4471:69,upgrade,upgrade,69,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471,3,"['install', 'update', 'upgrade']","['install', 'update', 'upgrade']"
Deployability,PR: first version of the integration of assimp Importer to Sofa loader structure. - Only support single mesh creation for the moment: see discussion: https://github.com/sofa-framework/sofa/issues/602; - Change all loader logs to use msg_error/warning/info; - Change in SofaKernel :; - loader that failed at init is now set to componentState Invalide.; - Add extension field in Datafilename. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/603:25,integrat,integration,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/603,1,['integrat'],['integration']
Deployability,"Pack/GL/glew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/glut.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/glxew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/wglew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/iconv.h; ....; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SofaOpenglVisual/SofaOpenglVisualConfig.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/SceneCreator.lib; 1>-- Up-to-date: C:/projects/sofa-build/install/bin/SceneCreator.dll; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetAssembledSizeVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetVectorVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneCreator.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneUtils.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/config.h; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets-release.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfigVersion.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfig.cmake; 1>CMake Error at applications/plugins/CImgPlugin/cmake_install.cmake:38 (file):; 1> file cannot create directory:; 1> C:/projects/sofa-build/$C:/projects/sofa-build/install/plugins/CImgPlugin/bin.; 1> Maybe need administrative privileges.; 1>Call Stack (most recent call first):; 1> applications/plugins/cmake_install.cmake:37 (include); 1> cmake_install.cmake:88 (include); 1>; 1>; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: The command ""setlocal; 1>C:\Pr",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:1453,install,install,1453,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,1,['install'],['install']
Deployability,"Parallel implementation of `HexahedronFEMForceField`. For details, see the comments of the class `ParallelHexahedronFEMForceField`, in `ParallelHexahedronFEMForceField.h`. # Results. On a cantilever beam (`ParallelHexahedronFEMForceField.scn`) with 1911 hexahedra, after 1000 time steps:. ## Single threaded; ```; 21.1615 s ( 47.2557 FPS); LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.01 1 19.42 28.17 20.23 0.83 20.23 95.51 ...Mechanical; 4 0.02 1 0.86 1.54 0.90 0.06 0.90 4.23 ....ComputeForce; 4 0.91 1 0.70 1.38 0.74 0.05 0.74 3.51 ....ComputeRHTerm; 4 1.66 1 0 0.03 0 0 0 0.02 ....MBKBuild; 5 1.66 1 0 0.02 0 0 0 0.01 .....CG-setSystemMBKMatrix; 4 1.66 1 17.79 26.51 18.56 0.78 18.56 87.62 ....MBKSolve; 5 1.68 1 17.76 26.48 18.53 0.77 18.53 87.49 .....CG-Solve; 4 20.22 1 0.01 0.04 0.01 0 0.01 0.05 ....UpdateVAndX. ```; ## Multi threaded; ```; 8.40483 s ( 118.979 FPS); LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.01 1 5.32 26.82 7.42 1.31 7.42 88.31 ...Mechanical; 4 0.02 1 0.22 0.88 0.32 0.07 0.32 3.80 ....ComputeForce; 4 0.34 1 0.19 0.70 0.28 0.06 0.28 3.29 ....ComputeRHTerm; 4 0.61 1 0 0.07 0.01 0 0.01 0.06 ....MBKBuild; 5 0.61 1 0 0.07 0 0 0 0.03 .....CG-setSystemMBKMatrix; 4 0.62 1 4.87 25.85 6.80 1.22 6.80 80.84 ....MBKSolve; 5 0.64 1 4.84 25.82 6.77 1.22 6.77 80.51 .....CG-Solve; 4 7.42 1 0.01 0.02 0.01 0 0.01 0.13 ....UpdateVAndX. ```. # Comments. - Code is in plugin MultiThreading because of the large amount of boilerplate code for the multi threading management, that would pollute the initial implementation in `HexahedronFemForceField`. I have some ideas to reduce this code, but it requires work on the task scheduler.; - A small part of the code is duplicated from `HexahedronFemForceField`.; - Initially, I wanted to accelerate the execution of the Conjugate Gradient for `GraphScattered` types. It is not possible to propose a generic multi-threaded acceleration for all force fields: for FEM, the most time consuming step in the CG is `ForceField",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2177:819,Update,UpdateVAndX,819,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2177,1,['Update'],['UpdateVAndX']
Deployability,"Pass extra command-line arguments for python scenes loading in a more high-level function call. Knowing that SofaQtQuick uses a different argument parser, the underlying objective of this commit is to be able to pass command-line extra args using QCommandLineParser. This feature is ready on the side of SofaQtQuick and it works (i.e. attached patch). Note that the added input parameter 'sceneArgs' in the 'load' functions is an optional parameter. [patch_pyargs_support.txt](https://github.com/sofa-framework/sofa/files/3073394/patch_pyargs_support.txt). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/992:344,patch,patch,344,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/992,1,['patch'],['patch']
Deployability,"Playing with ClangBuildAnalyzer, I noticed that BoundingBox was in the top ten of the most expensive include.; Indeed BBox was included in Base.h so everybody is including it. (and consequently Vec.h too). ```; 423823 ms: SofaKernel/modules/Sofa.Type/src/sofa/type/Vec.h (included 828 times, avg 511 ms), ; 362330 ms: SofaKernel/modules/Sofa.Type/src/sofa/type/BoundingBox.h (included 778 times, avg 465 ms),:; ```. Fortunately, It was painless to do a forward declaration with it.; After this update, BBox.h (and Vec.h) is much less expensive in the whole compilation process. ```; 84215 ms: SofaKernel/modules/Sofa.Type/src/sofa/type/Vec.h (included 828 times, avg 101 ms),; 22233 ms: SofaKernel/modules/Sofa.Type/src/sofa/type/BoundingBox.h (included 779 times, avg 28 ms)`; ```. Weirdly, it is still included a lot (because of DataTypeInfo_BoundingBox.h) but it is nevertheless much less expensive. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2728:494,update,update,494,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2728,1,['update'],['update']
Deployability,PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [WARNING] [ObjectFactory] Class already registered: AngularSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: RestShapeSpringsForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: RestShapeSpringsForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: RestShapeSpringsForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: PolynomialRestShapeSpringsForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: SpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: SpringForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: SpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: SpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: SpringForceField<Vec6d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec6d>; [WARNING] [ObjectFactory] Class already registered: PolynomialSpringsForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [WARNING] [ObjectFactory] Class already registered: PenalityContactForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:11674,install,install,11674,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability,"Preliminary support with the new Qt6 library. - Some Qt code/UI files were dated from the Qt4 era, and were using deprecated functions in Qt5 (and removed in Qt6).; - Qt6 does not support WebEngine and Charts for the moment (?) -> no qdocbrowser, nor chart profiling; - QGLViewer has not been updated for Qt6 upstream either -> no qtglviewer. Qt5 is still the main version targeted for SOFA, so if CMake finds both Qt5 and Qt6, it will prioritize Qt5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1756:293,update,updated,293,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1756,1,['update'],['updated']
Deployability,Previous PR #1034 deprecating the naming in scenes and in C++ of XxxxxModel into XxxxxCollisionModel for clarity. This PR fixes all generated warnings in the code related to this deprecation. All scenes in SOFA were already updated in #1292. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1301:224,update,updated,224,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1301,1,['update'],['updated']
Deployability,"Previous version of libQGLViewer was not compatible with Qt6, but a recent update was released and should be OK. ; (at least it is with my setup, MSVC/Qt6.4.0); So I updated the version of libQGLViewer present in the source (good or bad, I dont know....); and restore the choice in the CMakeLists.txt of Sofa.Gui.Qt. I also removed the version in the folder name. Note that we cannot take the source as it is, as there is not CMakefile, and there were some errors with MSVC about std::min/std::max (need to remove std::, and seems it was already done with the source already in the repo). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3454:75,update,update,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3454,3,"['release', 'update']","['released', 'update', 'updated']"
Deployability,"Problem detected while using the install distribution. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2705:33,install,install,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2705,1,['install'],['install']
Deployability,Problem of configuration,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1486:11,configurat,configuration,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1486,1,['configurat'],['configuration']
Deployability,Problem: build errors in libQGLViewer with MSVC 2015. See https://github.com/sofa-framework/sofa/pull/461; Solution (TODO): update libQGLViewer to the latest version (2.7.0).,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/464:124,update,update,124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/464,1,['update'],['update']
Deployability,Project Continuous Integration : general discussion,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/186:8,Continuous,Continuous,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/186,2,"['Continuous', 'Integrat']","['Continuous', 'Integration']"
Deployability,"ProjectToLineConstraint is crashing when trying to do projectResponse() because its jacobian matrix member is not synchronized with its respective mechanical object (especially its size).; This problem was raised from the scene: ProjectToLineConstraint_RemovingMeshTest.scn; And it seems to be detectable only in Debug mode as the CI does not complain very often. One first fix was trying to call a method to update the Jacobian while catching the fact that a topology change event was triggered, but various problems arrived with the fact that the MechanicalObject data is not connected to the ""Data"" update mechanism. (a first draft on how to change this behavior here #1489 but stalled) . A second fix (less subtle) checks every time if the jacobian size is correct wrt to the mechanical object : #2241; Less desirable because it will check at each call but fix the problem for now. I let this issue to remember to trigger the jacobian update when detecting a topological change, once the topological change mechanism is finished.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2242:409,update,update,409,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2242,3,['update'],['update']
Deployability,Propagate the doUpdate() function for all engine instead of update(),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/809:60,update,update,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/809,1,['update'],['update']
Deployability,Proper install of include directories in SOFA,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/894:7,install,install,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/894,1,['install'],['install']
Deployability,Python and binary release of Sofa have trouble with ctypes and _dlopen,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/974:18,release,release,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/974,1,['release'],['release']
Deployability,Quick PR to fix the SofaPhysicsApi project; - Remove deprecated code regarding OpenGL tetrahedron. ; - FIX some bad path in cpack installation; - Change some class declaration to allow inheritance. . <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed; - [x] is more than 1 week old.; **Reviewers will merge only if all this checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/167:130,install,installation,130,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/167,1,['install'],['installation']
Deployability,"Quick test to check the behavior of unity-build on the CI (eg: ram limit). It would be nice to gather some statistics on pch/unity build (poke @alxbilger, @fredroy, @guparan) because the performance can increase/decrease with unity build for low memory system. Having insight on wether or not we activate them (in the CI for example). Damien's latop: 8 core, 32GB Ram, linux ; ```console; - clang/debug: 03:37 min; - clang/debug/pch: 03:05 min; - clang/debug/unity: 03:01 min; - clang/debug/pch+unity: 02:32 min; ; - clang/release: 05:58 min; - clang/release/pch: 05:06 min; - clang/release/unity: 05:43 min; - clang/release/pch+unity: 05:01 min; ```; PROs: pch and unity build are a good way to detect duplicated code and can reduce compilation time.; CONs: pch and unity build can be problematic as they hides possibly missing includes, can increase compilation time (memory limit. Not very c++20 module friendly ?. NB 1: unity build is only partially deployed until the PRs, fusing duplicated code, made by @alxbilger are not merged. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1964:523,release,release,523,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1964,5,"['deploy', 'release']","['deployed', 'release']"
Deployability,"Quick update of the MechanicalMatrixMapper so that when the user interacts on the simulated object with the mouse, the StiffSpringForceField that is dynamically added to the scene graph gets included in the forcefield link list of the MMMApper. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/772:6,update,update,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/772,1,['update'],['update']
Deployability,Re-investigate the use of Integration Factors when solving constraints,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2123:26,Integrat,Integration,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2123,1,['Integrat'],['Integration']
Deployability,"Recovering changes made by @olivier-roussel in his [patch](https://github.com/sofa-framework/conda-ci/blob/master/conda/recipes/sofa/patches/allow-compilation-out-of-SOFA.patch). To be noted @fredroy : in _Sofa/GUI/Qt/CMakeLists.txt_, Sofa.GL is only found in a QUIET way and it was not linked explicitely (no where `target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GL)`). Could you let me know whether the proposed change seems reasonable to you. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4844:52,patch,patch,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4844,3,['patch'],"['patch', 'patches']"
Deployability,Reducing the complexity of the update of Data; Associated doc required. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/809:31,update,update,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/809,1,['update'],['update']
Deployability,"Ref: #1521, #1527. ### Description; All the previous PR/commits (#1521 should list all the main ones) allow now the fact that each module of SofaFramework can be its own cmake package/configuration.; - No more dependency checks in the SofaFrameworkConfig.cmake.in, etc; they are now in their own *Config.cmake.in; - No more weird cross-dependencies between headers (no more add_include_dir in SofaHelper!): a change in SofaCore will not trigger a new compilation of SofaHelper for example...; - clearer and more logical use of packages: if you want SofaHelper you do:; ```cmake; find_package(SofaHelper); ....; target_link_libraries(${target} SofaHelper); ```. - SofaFramework is now a ""meta-package"" or collection like SofaBase. Obviously it will stay like that for compatibility reason. ### Note; - The removal of the cross-includes paths in SofaHelper pointed to an error I made in the Sofa.Topo/Sofa.Geo PR #1912 , which is a good demonstration of the cross-include path madness 🤡.; - I successfully compiled SofaPython3 out-of-tree with an install of SOFA so the *Config.cmake.in should be okay. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1990:184,configurat,configuration,184,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1990,2,"['configurat', 'install']","['configuration', 'install']"
Deployability,"Referee: @IPeterlik . Members: @IPeterlik @remibessard @hdeling @damienmarchal @fredroy @epernod Jeremie . Main objective: provide a continuous support for validation of SOFA. Subtasks and estimated duration; - using python, based on Method for Manufactured Solutions (MMS), static linear elasticity with linear FEM in (compression and torsion with < 5% deformation); ex: TensorMassFEMForceField; - TensorMassFEMForceField : addKToMatrix, vector of E; - extend it to beams (BeamAdapter); - implement engine : plugged to compute stress data in all FEM in SOFA. Future; - write article; - contact Stefan Suwelack for integration into CAEML.org. ---. Validation solution:; - analytical; - software comparison (Abaqus); - tests; - experimental setup. cases:; - dynamic vs static; - linear elasticity with linear FEM; - metrics : displacement, stress+strain tensors",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/25:133,continuous,continuous,133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/25,2,"['continuous', 'integrat']","['continuous', 'integration']"
Deployability,Release SOFA-NG repository,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/245:0,Release,Release,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/245,1,['Release'],['Release']
