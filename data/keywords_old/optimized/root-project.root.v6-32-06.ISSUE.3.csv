quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Deployability,"64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 437, in dump; self.save(obj); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 549, in save; self.save_reduce(obj=obj, *rv); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 637, in save_reduce; save(func); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 504, in save; f(self, obj) # Call unbound method with explicit self; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/python3.7/site-packages/dill/_dill.py"", line 1064, in save_builtin_method; pickler.save_reduce(_get_attr, (module, obj.__name__), obj=obj); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 638, in save_reduce; save(args); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 504, in save; f(self, obj) # Call unbound method with explicit self; File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 774, in save_tuple; save(element); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 504, in save; f(self, obj) # Call unbound method with explicit self; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/python3.7/site-packages/dill/_dill.py"", line 1269, in save_module; state=_main_dict); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 662, in save_reduce; save(state); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 504, in save; f(self, obj) # Call unbound method with explicit self; Fil",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6370:2874,release,releases,2874,https://root.cern,https://github.com/root-project/root/issues/6370,1,['release'],['releases']
Deployability,"68,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,5): error G28325FEB: non-static data member cannot be constexpr; did you intend to make it const? [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,24): error G68D9A705: member '_Tuple_conditional_explicit_v' declared as a template [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,79): error GC66A3811: expected ';' at end of declaration list [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; CUSTOMBUILD : error : Error loading the default rootcling header files. [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; ```. ### Expected behavior; ROOT should build successfully, even when MSVC's STL uses Future Technology (i.e. C++20 `explicit(bool)` in C++14/17 modes). Upstream Clang has supported this scenario (with a suppressible warning) since Clang 10.0.0 shipped on 2020-03-24. Example on Compiler Explorer: https://godbolt.org/z/a75ooK6cz. The comment in `CIFactory.cpp` indicates that this was a known issue (although I was unable to find anything filed in GitHub or Jira) - is ROOT planning to upgrade its Clang/LLVM dependency, which would resolve this?. ### To Reproduce; Build ROOT with the latest MSVC STL from https://github.com/microsoft/STL, or wait for VS 2022 17.4 Preview 1 to ship (we can't provide an ETA yet, but it'll be some time). ### Setup; 1. ROOT version: `master`; 2. Operating system: Windows 11; 3. How you obtained ROOT: Built it ourselves (or tried to). ### Additional context; Supporting `explicit(bool)` will also improve build throughput, as `std::pair`, `std::tuple`, and `std::optional`'s constructor sets were nearly twice the size with the `_HAS_CONDITIONAL_EXPLICIT=0` workaround.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10875:2429,upgrade,upgrade,2429,https://root.cern,https://github.com/root-project/root/issues/10875,1,['upgrade'],['upgrade']
Deployability,"6; 0x00000055030c74cc in __libc_start_main + 0x98 from /lib/aarch64-linux-gnu/libc.so.6; 0x0000005500001070 in _start + 0x30 from /mnt/root-build-ubuntu/bin/root.exe; Root > make[2]: *** [CMakeFiles/hsimple.dir/build.make:79: tutorials/hsimple.root] Error 129; make[2]: Target 'CMakeFiles/hsimple.dir/build' not remade because of errors.; make[2]: Leaving directory '/mnt/root-build-ubuntu'; make[1]: *** [CMakeFiles/Makefile2:7589: CMakeFiles/hsimple.dir/all] Error 2; make[1]: Target 'all' not remade because of errors.; make[1]: Leaving directory '/mnt/root-build-ubuntu'; make: *** [Makefile:156: all] Error 2; make: Target 'default_target' not remade because of errors.; make: Leaving directory '/mnt/root-build-ubuntu'; ```. ### Reproducer. ```; # Enable multiarch support for docker (https://hub.docker.com/r/multiarch/qemu-user-static/); docker run --privileged --rm multiarch/qemu-user-static --reset --persistent yes; # Start ubuntu docker container ; docker run --platform linux/arm64/v8 --rm -it ubuntu:latest; # Install minimal dependencies; apt-get update; apt-get install build-essential git cmake python3; # Clone ROOT to commit just before problem; git clone https://github.com/root-project/root; git -C root reset --hard a886646; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; # Configure and build (took 10 hours); cmake -Broot-build -Sroot -Dasimage=OFF -Dclad=OFF -Ddataframe=OFF -Ddavix=OFF -Dfftw3=OFF -Dgdml=off -Dhttp=off -Dimt=OFF -Dmathmore=OFF -Dminuit2=OFF -Dmlp=OFF -Dopengl=OFF -Dpyroot=OFF -Dpythia8=OFF -Droofit=OFF -Dwebgui=OFF -Droot7=OFF -Dspectrum=OFF -Dsqlite=OFF -Dssl=OFF -Dtmva=OFF -Dtmva-cpu=OFF -Dvdt=OFF -Dx11=OFF -Dxml=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=root-install; make -Croot-build -j7 install; # Reset ROOT to next commit, which introduced the problem ; git -C root reset --hard e9d264e; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; make ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13845:3773,Install,Install,3773,https://root.cern,https://github.com/root-project/root/issues/13845,3,"['Install', 'install', 'update']","['Install', 'install', 'update']"
Deployability,"6dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13842:1032,update,updated,1032,https://root.cern,https://github.com/root-project/root/pull/13842,4,['update'],"['update', 'updated']"
Deployability,"7, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",; isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176; #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250; #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156; #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48; #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48; #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314; #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94; #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96; #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100; #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103; #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87; #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_workin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2776:5347,patch,patches,5347,https://root.cern,https://github.com/root-project/root/pull/2776,2,['patch'],['patches']
Deployability,"765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); terminate called after throwing an instance of 'cling::InvalidDerefException'; what(): Trying to dereference null pointer or trying to call routine taking non-null arguments; ==22765== ; ==22765== Process terminating with default action of signal 6 (SIGABRT); ==22765== at 0x546E18B: raise (raise.c:51); ==22765== by 0x544D92D: abort (abort.c:100); ==22765== by 0x4E9E0A8: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9505: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9570: std::terminate() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA97F4: __cxa_throw (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x6C99676: cling_runtime_internal_throwIfInvalidPointer.cold (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DFF3CC: ???; ==22765== by 0x1FFEFFBB3F: ???; ==22765== by 0xB60A6A5548AF56FF: ???; ==22765== by 0x6E83C9F: ??? (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DEB03F: ???; ==22765== ; ==22765== HEAP SUMMARY:; ==22765== in use at exit: 66,909,576 bytes in 172,570 blocks; ==22765== total heap usage: 645,966 allocs, 473,396 frees, 231,012,668 bytes allocated; ==22765== ; ==22765== LEAK SUMMARY:; ==22765== definitely lost: 0 bytes in 0 blocks; ==22765== indirectly lost: 0 bytes in 0 blocks; ==22765== possibly lost: 7,728 bytes in 66 blocks; ==22765== still reachable: 66,622,884 bytes in 169,043 blocks; ==22765== of which reachable via heuristic:; ==22765== stdstring : 111 bytes in 1 blocks; ==22765== multipleinheritance: 7,776 bytes in 10 blocks; ==22765== suppressed: 278,964 bytes in 3,461 blocks; ==22765== Rerun with --leak-check=full to see details of leaked memory; ==22765== ; ==22765== Use --track-origins=yes to see where uninitialised values come from; ==22765== For lists of detected and suppressed errors, rerun with: -s; ==227",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11385:7717,release,release-master,7717,https://root.cern,https://github.com/root-project/root/issues/11385,1,['release'],['release-master']
Deployability,"785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115; #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76; #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532; #24 0x00007fffeed06399 in cling::IncrementalParser::Compile (this=0x4a2980, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:663; #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195; #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823; #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096; #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true); at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140; #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2776:7628,patch,patches,7628,https://root.cern,https://github.com/root-project/root/pull/2776,2,['patch'],['patches']
Deployability,"7d431bb3c767 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so; #22 0x00007d431bb3e1d9 in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so; #23 0x00007d431bb27790 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so; #24 0x00007d431b7e903e in HandleInterpreterException (metaProcessor=0x5ab8d59e1470, input_line=0x5ab8d6536800 "".X /tmp/./badcast.cpp"", compRes=; 0x7fffe3dd2650: cling::Interpreter::kSuccess, result=0x7fffe3dd26a0) at /opt/root_src/core/metacling/src/TCling.cxx:2438; ===========================================================; ```. root -l badcast.cpp+. ```; root [0] ; Processing badcast.cpp+...; Info in <TUnixSystem::ACLiC>: creating shared library /tmp//tmp/./badcast_cpp.so; In file included from input_line_9:6:; ././badcast.cpp:3:1: error: non-void function does not return a value [-Werror,-Wreturn-type]; }; ^; In file included from /tmp//tmp/badcast_cpp_ACLiC_dict.cxx:41:; /tmp/./badcast.cpp: In function ‘int badcast()’:; /tmp/./badcast.cpp:3:1: warning: no return statement in function returning non-void [-Wreturn-type]; 3 | }; | ^; In file included from /tmp//tmp/badcast_cpp_ACLiC_dict.cxx:41:; /tmp/./badcast.cpp: In function ‘int badcast()’:; /tmp/./badcast.cpp:3:1: warning: no return statement in function returning non-void [-Wreturn-type]; 3 | }; | ^; (int) 1116738714; root [1] ; ```. ### ROOT version. ```; ROOT v6.33/01; Built for linuxx8664gcc on May 10 2024, 07:02:39; From heads/cdoxy@v6-31-01-1881-g0b545d9b06; With g++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /home/user/build/build-root-Desktop-Debug/bin; ```. ### Installation method. From source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15537:3244,Install,Installation,3244,https://root.cern,https://github.com/root-project/root/issues/15537,1,['Install'],['Installation']
Deployability,"7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,; dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>); at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431; #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",; ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273; #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",; ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607; #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",; isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176; #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250; #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156; #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /hom",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2776:4082,patch,patches,4082,https://root.cern,https://github.com/root-project/root/pull/2776,2,['patch'],['patches']
Deployability,"8);; m->Draw();. TBox *b = new TBox(1., 1., 8., 8.);; printf(""CanvasPreferGL is set to %s\n"", gStyle->GetCanvasPreferGL() ? ""true, the red box is expected to be transparent"":""false, the red box is expected to be non-transparent"");; b->SetFillColorAlpha(kRed, 0.2);; b->Draw();; }; ```. Now if I run this as; ```; root -l -n transpar.cxx; ```; I get the following:; ![image](https://github.com/root-project/root/assets/7541582/446db1cf-b73e-4809-b5f7-dfb422934db3). (no transparency is expected, so it is all good).; But when I change `false` to `true` at the third line; ```c++; gStyle->SetCanvasPreferGL(true);; ```; and run again; ```; root -l -n transpar.cxx; ```; , I get; ![image](https://github.com/root-project/root/assets/7541582/e88d31f5-e46e-487b-bf37-8779ab8ef2d3). The box is now transparent, which is good, but there is too much empty space above the histogram name (“`h`”) and, as a consequence, the X-axis title is now cut off. Is there a way to make my box transparent and keep everything else where it was before?. Please note I’m using the `-n` option when running `transpar.cxx`, so it’s not due to something I have in my style file. [The original discussion at the ROOT forum](https://root-forum.cern.ch/t/extra-vertical-space-on-a-canvas-when-canvasprefergl-is-set-to-true/55298) revealed that:. - this is irreproducible if ran on local computers with Windows or Mac OS. The issue is observed only via SSH (from e.g. `lxplus7`); - in principle, the issue can be mitigated by adding the following five lines at the very end of the macro (right after `b->Draw();`; the transparency remains; the +/- 0.1 offsets need a bit of a tuning of course):; ```c++; if (gStyle->GetCanvasPreferGL()); {; gPad->SetBottomMargin(gPad->GetBottomMargin() + 0.1);; gPad->SetTopMargin(gPad->GetTopMargin() - 0.1);; }; ```. ### ROOT version. 6.28/00. ### How did you install ROOT?. provided by ATLAS @ lxplus7. ### Which operating system are you using?. CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13016:2558,install,install,2558,https://root.cern,https://github.com/root-project/root/issues/13016,1,['install'],['install']
Deployability,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ~~~~~~~~~~~~~~~~~~ ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ^; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; return __builtin_bit_cast(_To, _Val);; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here; template <class _To, class _From,; ^; CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; ```; To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6143:3408,release,release,3408,https://root.cern,https://github.com/root-project/root/pull/6143,6,"['release', 'upgrade']","['release', 'upgrade']"
Deployability,"8-opt/2021-03-21T0600/Athena/22.0.30/InstallArea/x86_64-centos7-gcc8-opt/lib/libAthenaPoolUtilitiesDict.so; #5 0x00007ffff7dea9c3 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2; #6 0x00007ffff7def59e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2; #7 0x00007ffff7dea7d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #8 0x00007ffff7deeb8b in _dl_open () from /lib64/ld-linux-x86-64.so.2; #9 0x00007ffff720afab in dlopen_doit () from /lib64/libdl.so.2; #10 0x00007ffff7dea7d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #11 0x00007ffff720b5ad in _dlerror_run () from /lib64/libdl.so.2; #12 0x00007ffff720b041 in dlopen@@GLIBC_2.2.5 () from /lib64/libdl.so.2; #13 0x00007fffefcd2e24 in cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #14 0x00007fffefbd7838 in cling::DynamicLibraryManager::loadLibrary(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #15 0x00007fffefb06b14 in TCling::Load(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #16 0x00007ffff55908e6 in TSystem::Load(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007ffff551c9e3 in TROOT::LoadClass(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #18 0x00007fffefb05a65 in TCling::ShallowAutoLoadImpl(char const*) (); from /cvmfs/sft-",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7657:3329,patch,patches,3329,https://root.cern,https://github.com/root-project/root/issues/7657,1,['patch'],['patches']
Deployability,"8014398509481984 vs 18.0144EiB an 16EB; Checking 16 vs 16B and 16B; Checking 24576 vs 24.576KiB and 24KB; Checking 3.77487e+07 vs 37.7487MiB and 36MB; Checking 5.79821e+10 vs 57.9821GiB and 54GB; Checking 8.90604e+13 vs 89.0604TiB and 81TB; Checking 1.36797e+17 vs 136.797EiB and 121.5EB; Checking 2.1012e+20 vs 210.12ZiB and 182.25ZB; Checking 3.22744e+23 vs 322.744YiB and 273.375YB; (int) 0. -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; Info in <TUnixSystem::ACLiC>: creating shared library /mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/build/roottest/root/core/assertHumanReadable_cxx.so; In file included from /mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/build/roottest/root/core/assertHumanReadable_cxx_ACLiC_dict.cxx:41:; In file included from /mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/roottest/root/core/assertHumanReadable.cxx:1:; [NON-XML-CHAR-0x1B][1m/mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/build/include/ROOT/StringConv.hxx:103:18: [NON-XML-CHAR-0x1B][0m[NON-XML-CHAR-0x1B][0;1;35mwarning: [NON-XML-CHAR-0x1B][0m[NON-XML-CHAR-0x1B][1mimplicit conversion from 'long long' to 'double' changes value from 9223372036854775807 to 9223372036854775808 [-Wimplicit-int-float-conversion][NON-XML-CHAR-0x1B][0m; if (v < std::numeric_limits<T>::max()) {; [NON-XML-CHAR-0x1B][0;1;32m ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~; [NON-XML-CHAR-0x1B][0m[NON-XML-CHAR-0x1B][1m/mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/roottest/root/core/assertHumanReadable.cxx:9:29: [NON-XML-CHAR-0x1B][0m[NON-XML-CHAR-0x1B][0;1;30mnote: [NON-XML-CHAR-0x1B][0min instantiation of function template specialization 'ROOT::FromHumanReadableSize<long long>' requested here[NON-XML-CHAR-0x1B][0m; auto parseResult = ROOT::FromHumanReadableSize(input,res);; [NON-XML-CHAR-0x1B][0;1;32m ^; [NON-XML-CHAR-0x1B][0m1 warning generated. -- END TEST ERROR --; CMake Error ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4257:3012,patch,patches,3012,https://root.cern,https://github.com/root-project/root/pull/4257,1,['patch'],['patches']
Deployability,"8510). The inital check for the compiler was. enable_language(Fortran OPTIONAL). This does not set the the CMAKE_Fortran_COMPILER variable (or sets it to; NOTFOUND) if a Fortran compiler is not found, but still marks the; Fortran language as being enabled for the current project. This broke; the settings for BLAS/LAPACK. The second attempt (bb40ede3941d0b4f2db4e23d5f9c32b221eb5fac) was to use. check_language(Fortran); if(CMAKE_Fortran_COMPILER); enable_language(Fortran); endif(). This does not find the Fortran compiler corresponding to the used C++; compiler. Cmake has some mechanism that if the C++ compiler is a GNU; compiler, it would also prefer GNU Fortran compilers. However, as the; check_language test is running in a separate process it would not know; about the C++ compiler. This is a problem in a set-up with executables; like:. /opt/newgcc/g++; /opt/newgcc/gfortran; /usr/bin/f95 (link to gfortran); /usr/bin/g++; /usr/bin/gfortran. Two versions of GCC are installed, one by the system, and one more; recent version in a separate directory. The directory to the newer; version is in the environment variable PATH before /usr/bin. In this; case the test from above (second attempt) would use /usr/bin/f95 as the; Fortran compiler, because Cmake usually prefers the executable f95 over; gfortran. This causes problems in case the two Fortran compilers are not; ABI compatible, i.e., gfortran 4.4 installed by the system vs. 4.9 as a; slightly more recent version. A simple enable_language (as in the; initial version) would correctly use /opt/newgcc/gfortran in this case.; This had to be worked around by setting the environment variable; FC=gfortran before running Cmake. To fix this, check_language is only used to determine whether a Fortran; compiler exists at all. If a compiler is found, then the; CMAKE_Fortran_COMPILER variable is reset, and enable_language again; performs a search of the compiler, this time prefering a compiler from; the same vendor as the C++ compiler.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/891:1388,install,installed,1388,https://root.cern,https://github.com/root-project/root/pull/891,2,['install'],['installed']
Deployability,"86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1088:24: error: expected parameter declarator; template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT; ^; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:131:75: note: expanded from macro 'atomic_store'; #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST); ^; <built-in>:16:26: note: expanded from here; #define __ATOMIC_SEQ_CST 5; ^; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1088:24: error: expected ')'; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:131:75: note: expanded from macro 'atomic_store'; #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST); ^; <built-in>:16:26: note: expanded from here; #define __ATOMIC_SEQ_CST 5; ^; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1088:24: note: to match this '('; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:131:57: note: expanded from macro 'atomic_store'; #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST); ^; In file included from libMyLibrary dictionary payload:5:; In fi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6454:6435,install,install,6435,https://root.cern,https://github.com/root-project/root/issues/6454,1,['install'],['install']
Deployability,8; 21: Field 'fIsPointer' is false in /opt/root_src/io/io/src/TContainerConverters.cxx:175; 22: Taking false branch in /opt/root_src/io/io/src/TContainerConverters.cxx:175; 23: Calling default constructor for 'TObject' in /opt/root_src/io/io/src/TContainerConverters.cxx:178; 24: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 25: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 26: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'writeEmptyRootPCM' is true in /opt/root_src/io/rootpcm/src/rootclingIO.cxx:144; 2: Taking true branch in /opt/root_src/io/rootpcm/src/rootclingIO.cxx:144; 3: Calling default constructor for 'TObject' in /opt/root_src/io/rootpcm/src/rootclingIO.cxx:145; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling constructor for 'TFoamVect' in /opt/root_src/math/foam/src/TFoamVect.cxx:171; 2: Calling default constructor for 'TObject' in /opt/root_src/math/foam/src/TFoamVect.cxx:38; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: 'rc' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412:34642,Update,UpdateIsOnHeap,34642,https://root.cern,https://github.com/root-project/root/issues/7412,1,['Update'],['UpdateIsOnHeap']
Deployability,"8dd9d4 in pymain_main (args=args; entry=0x7ffcb1bbaf90) at Modules/main.c:710; #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734; #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15; ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```; 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {; 1210	 assert(type->tp_dictoffset);; 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);; 1212	 if (err) {; 1213	 return err;; 1214	 }; ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx ; ```; 139 if (!Py_TYPE(pyobj)->tp_dictoffset); 140 {; 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);; 142 }; ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```; import ROOT; f = ROOT.TFile(""test.root"",""CREATE""); ; ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different reproducing compiler version. ### Instal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13694:2949,patch,patches,2949,https://root.cern,https://github.com/root-project/root/issues/13694,1,['patch'],['patches']
Deployability,"9 	max; 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04; 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03; 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14; Integrating log(a*x), relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19; 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41; 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3; Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06; Integrating log(a*x), relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26; 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48; 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38; [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms); [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4; Integrating Polynomial 4th order, relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04; 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05; 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05; Integrating Polynomial 4th order, relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05; 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04; 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06; Integrating Polynomial 4th order, relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06; 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02; 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03; [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms); [ RUN ] Roo1DIntegrator.ConvergenceSett",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6632:1407,Integrat,Integrating,1407,https://root.cern,https://github.com/root-project/root/pull/6632,1,['Integrat'],['Integrating']
Deployability,"9-opt/lib/python3.7/site-packages/dill/_dill.py"", line 287, in dump; pik.dump(obj); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 437, in dump; self.save(obj); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 549, in save; self.save_reduce(obj=obj, *rv); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 637, in save_reduce; save(func); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 504, in save; f(self, obj) # Call unbound method with explicit self; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/python3.7/site-packages/dill/_dill.py"", line 1064, in save_builtin_method; pickler.save_reduce(_get_attr, (module, obj.__name__), obj=obj); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 638, in save_reduce; save(args); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 504, in save; f(self, obj) # Call unbound method with explicit self; File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 774, in save_tuple; save(element); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 504, in save; f(self, obj) # Call unbound method with explicit self; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/python3.7/site-packages/dill/_dill.py"", line 1269, in save_module; state=_main_dict); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 662, in save_reduce; save(state); File ""/cvmfs/sft.cern.ch/lcg/releases/L",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6370:2721,release,releases,2721,https://root.cern,https://github.com/root-project/root/issues/6370,1,['release'],['releases']
Deployability,"9-opt/lib/python3.7/site-packages/dill/_dill.py"", line 902, in save_module_dict; StockPickler.save_dict(pickler, obj); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 859, in save_dict; self._batch_setitems(obj.items()); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 890, in _batch_setitems; save(v); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 504, in save; f(self, obj) # Call unbound method with explicit self; File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 819, in save_list; self._batch_appends(obj); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 846, in _batch_appends; save(tmp[0]); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 549, in save; self.save_reduce(obj=obj, *rv); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 633, in save_reduce; save(cls); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 504, in save; f(self, obj) # Call unbound method with explicit self; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/python3.7/site-packages/dill/_dill.py"", line 1330, in save_type; StockPickler.save_global(pickler, obj); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 960, in save_global; (obj, module_name, name)) from None; _pickle.PicklingError: Can't pickle <class '_pythonization.compose_method.<locals>.composition_pythonizor'>: it's not found as _pythonization.compose_method.<locals>.compositi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6370:5642,release,releases,5642,https://root.cern,https://github.com/root-project/root/issues/6370,1,['release'],['releases']
Deployability,"991ab293ffd""><code>236f4a0</code></a> [readme] rename and add badges</li>; <li><a href=""https://github.com/minimistjs/minimist/commit/ab033567b9c8b31117cb026dc7f1e592ce455c65""><code>ab03356</code></a> [Dev Deps] switch from <code>covert</code> to <code>nyc</code></li>; <li><a href=""https://github.com/minimistjs/minimist/commit/49c5f9fb7e6a92db9eb340cc679de92fb3aacded""><code>49c5f9f</code></a> [Dev Deps] update <code>covert</code>, <code>tape</code>; remove unnecessary <code>tap</code></li>; <li><a href=""https://github.com/minimistjs/minimist/commit/783a49bfd47e8335d3098a8cac75662cf71eb32a""><code>783a49b</code></a> [meta] create FUNDING.yml; add <code>funding</code> in package.json</li>; <li>Additional commits viewable in <a href=""https://github.com/minimistjs/minimist/compare/v0.0.8...v1.2.7"">compare view</a></li>; </ul>; </details>; <details>; <summary>Maintainer changes</summary>; <p>This version was pushed to npm by <a href=""https://www.npmjs.com/~ljharb"">ljharb</a>, a new releaser for minimist since your current version.</p>; </details>; <br />. Updates `mkdirp` from 0.5.1 to 0.5.6; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/isaacs/node-mkdirp/commit/92f086d2e28c6848951776fbe8ecadcf54c80c29""><code>92f086d</code></a> 0.5.6</li>; <li><a href=""https://github.com/isaacs/node-mkdirp/commit/2a2812536c0d3e23dce78978e1d4691d7ff445a7""><code>2a28125</code></a> clean up tests</li>; <li><a href=""https://github.com/isaacs/node-mkdirp/commit/c905d653e9cd294f7124c83ad499d95baed17088""><code>c905d65</code></a> update minimist</li>; <li><a href=""https://github.com/isaacs/node-mkdirp/commit/049cf185c9e91727bc505b796a2d16a4fe70d64d""><code>049cf18</code></a> 0.5.5</li>; <li><a href=""https://github.com/isaacs/node-mkdirp/commit/bea638225aa991095f29a9e16d914effa0c134fe""><code>bea6382</code></a> Remove unnecessary umask calls</li>; <li><a href=""https://github.com/isaacs/node-mkdirp/commit/42a012cc6dbd4648790f380df88190bb697dbb9c""><code>42a012c</code></",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11865:7446,release,releaser,7446,https://root.cern,https://github.com/root-project/root/pull/11865,1,['release'],['releaser']
Deployability,": cce::tf::RNTupleOutputer::~RNTupleOutputer() (in /uscms_data/d2/cdj/build/temp/rntuple/root_serialization/build-root-serialization/threaded_io_test); ==1920683== by 0x4114AE: main (in /uscms_data/d2/cdj/build/temp/rntuple/root_serialization/build-root-serialization/threaded_io_test); ==1920683== ; ```. ### Reproducer. The following shows the problem when run using valgrind.; ```C++; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RField.hxx>; #include <ROOT/RNTuple.hxx>. #include <vector>. int main() {; auto model = ROOT::Experimental::RNTupleModel::Create();; model->AddField( ROOT::Experimental::Detail::RFieldBase::Create(""ints"",""std::vector<int>"").Unwrap());; model->AddField( ROOT::Experimental::Detail::RFieldBase::Create(""floats"",""std::vector<float>"").Unwrap());; auto writeOptions = ROOT::Experimental::RNTupleWriteOptions();; writeOptions.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kLZMA, 4);. auto writer = ROOT::Experimental::RNTupleWriter::Recreate(std::move(model), ""Events"", ""dummy.root"", writeOptions);. std::vector<int> ints ={1,2,3};; void* pInts = &ints;; void** ppInts = &pInts;; std::vector<float> floats = {2.0, 4.0, 6.0};; void* pFloats = &floats;; void** ppFloats = &pFloats;; {; auto entry = writer->CreateEntry();; entry->CaptureValueUnsafe(""ints"", *ppInts);; entry->CaptureValueUnsafe(""floats"", *ppFloats);; writer->Fill(*entry);; }; writer.reset();. return 0;; }; ```. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.31/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 21 2024, 23:43:23 |; | From heads/master@tags/v6-31-01 |; | With g++ (GCC) 12.3.1 20230527 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ````; ### Installation method. CMSSW release. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14508:19584,Install,Installation,19584,https://root.cern,https://github.com/root-project/root/issues/14508,2,"['Install', 'release']","['Installation', 'release']"
Deployability,": error: reference to __device__ function '__nvvm_atom_sys_add_gen_f' in __host__ function; return __nvvm_atom_sys_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: note: '__nvvm_atom_sys_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: error: reference to __device__ function '__nvvm_atom_xchg_gen_i' in __host__ function; __nvvm_atom_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: note: '__nvvm_atom_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: error: reference to __device__ function '__nvvm_atom_cta_xchg_gen_i' in __host__ function; __nvvm_atom_cta_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: note: '__nvvm_atom_cta_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: error: reference to __device__ function '__nvvm_atom_sys_xchg_gen_i' in __host__ function; __nvvm_atom_sys_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: note: '__nvvm_atom_sys_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:244:16: error: static declaration of '__finite' follows non-static declaration; __DEVICE__ int __finite(double __a) { return __nv_isfinited(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathca",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:9171,install,install,9171,https://root.cern,https://github.com/root-project/root/issues/7518,1,['install'],['install']
Deployability,": expected expression; namespace std _GLIBCXX_VISIBILITY(default); ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:43: error: expected ';' after top level declarator; namespace std _GLIBCXX_VISIBILITY(default); ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:41:10: note: submodule of top-level module 'std' implicitly imported here; #include <cwchar> // For WEOF, wmemmove, wmemset, etc.; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:699:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstdint>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/functional_hash.h:35:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /h",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:23327,Install,Installed,23327,https://root.cern,https://github.com/root-project/root/issues/10528,1,['Install'],['Installed']
Deployability,": header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/ext/type_traits.h:35:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/cpp_type_traits.h>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/move.h:57:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits> // Brings in std::declval too.; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_iterator.h:70:11: note: submodule of top-level module 'std' implicitly imported here; # include <type_traits>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:35:10: note: submodule of top-level module 'std' implicitly imported here; #include <iosfwd>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /ho",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:27554,Install,Installed,27554,https://root.cern,https://github.com/root-project/root/issues/10528,1,['Install'],['Installed']
Deployability,":/Users/sftnight/build/release/include\ROOT/RVec.hxx:1455:68: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaPhi(const RVec<T>& v1, const RVec<T>& v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1473:55: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaPhi(const RVec<T>& v1, T v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1491:55: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaPhi(T v1, const RVec<T>& v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1510:113: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaR2(const RVec<T>& eta1, const RVec<T>& eta2, const RVec<T>& phi1, const RVec<T>& phi2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1524:112: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaR(const RVec<T>& eta1, const RVec<T>& eta2, const RVec<T>& phi1, const RVec<T>& phi2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1537:54: error: use of undeclared identifier 'M_PI'; 1306: T DeltaR(T eta1, T eta2, T phi1, T phi2, const T c = M_PI); 1306: ^; 1306: Error in <ACLiC>: Executing 'C:\Users\sftnight\build\release\bin\rootcling -v0 ""--lib-list-prefix=C:\Users\sftnight\build\release\roottest\root\dataframe\test_ctors_C_ACLiC_map"" -f ""C:\Users\sftnight\build\release\roottest\root\dataframe\test_ctors_C_ACLiC_dict.cxx"" -rml test_ctors_C -rmf ""C:\Users\sftnight\build\release\roottest\root\dataframe\test_ctors_C.rootmap"" -DR__ACLIC_ROOTMAP -I%ROOTSYS%\include -IC:/Users/sftnight/build/release/roottest/root/dataframe -D__ACLIC__ ""C:/Users/sftnight/git/roottest/root/dataframe/test_ctors.C"" ""C:\Users\sftnight\build\release\roottest\root\dataframe\test_ctors_C_ACLiC_linkdef.h""' failed!; ```. So let's re-introduce `#include <math.h>` and `_USE_MATH_DEFINES` on Windows if `M_PI` is not defi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6727:2402,release,release,2402,https://root.cern,https://github.com/root-project/root/pull/6727,1,['release'],['release']
Deployability,":1455:68: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaPhi(const RVec<T>& v1, const RVec<T>& v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1473:55: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaPhi(const RVec<T>& v1, T v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1491:55: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaPhi(T v1, const RVec<T>& v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1510:113: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaR2(const RVec<T>& eta1, const RVec<T>& eta2, const RVec<T>& phi1, const RVec<T>& phi2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1524:112: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaR(const RVec<T>& eta1, const RVec<T>& eta2, const RVec<T>& phi1, const RVec<T>& phi2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1537:54: error: use of undeclared identifier 'M_PI'; 1306: T DeltaR(T eta1, T eta2, T phi1, T phi2, const T c = M_PI); 1306: ^; 1306: Error in <ACLiC>: Executing 'C:\Users\sftnight\build\release\bin\rootcling -v0 ""--lib-list-prefix=C:\Users\sftnight\build\release\roottest\root\dataframe\test_ctors_C_ACLiC_map"" -f ""C:\Users\sftnight\build\release\roottest\root\dataframe\test_ctors_C_ACLiC_dict.cxx"" -rml test_ctors_C -rmf ""C:\Users\sftnight\build\release\roottest\root\dataframe\test_ctors_C.rootmap"" -DR__ACLIC_ROOTMAP -I%ROOTSYS%\include -IC:/Users/sftnight/build/release/roottest/root/dataframe -D__ACLIC__ ""C:/Users/sftnight/git/roottest/root/dataframe/test_ctors.C"" ""C:\Users\sftnight\build\release\roottest\root\dataframe\test_ctors_C_ACLiC_linkdef.h""' failed!; ```. So let's re-introduce `#include <math.h>` and `_USE_MATH_DEFINES` on Windows if `M_PI` is not defined, trying not to break the C++ modules on Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6727:2619,release,release,2619,https://root.cern,https://github.com/root-project/root/pull/6727,6,['release'],['release']
Deployability,":355; #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, ; cl=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292; #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649; #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679; #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688; #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891; #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097; #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352; #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, ; load=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759; #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162; #19 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11259:4013,patch,patches,4013,https://root.cern,https://github.com/root-project/root/issues/11259,2,['patch'],['patches']
Deployability,"::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined; status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"".; ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15413:7922,Install,Installation,7922,https://root.cern,https://github.com/root-project/root/issues/15413,1,['Install'],['Installation']
Deployability,"::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}; 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);; | ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~; /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations()’; 110 | RColumnRepresentations();; | ^~~~~~~~~~~~~~~~~~~~~~; /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided; /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’; 107 | class RColumnRepresentations {; | ^~~~~~~~~~~~~~~~~~~~~~; /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided; /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’; /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided; make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2; ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not...; Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src; cmake --build . -- install -j4. ### ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13103:2820,install,install,2820,https://root.cern,https://github.com/root-project/root/issues/13103,1,['install'],['install']
Deployability,"::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\rele",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11153:1801,release,release,1801,https://root.cern,https://github.com/root-project/root/pull/11153,1,['release'],['release']
Deployability,"::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #32 0x00007f0603125b4a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #35 0x00007f0603095986 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #36 0x00007f06031781a7 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=; 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436; ===============================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511:3084,release,releases,3084,https://root.cern,https://github.com/root-project/root/issues/15511,2,['release'],['releases']
Deployability,"::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): me",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:9083,release,release,9083,https://root.cern,https://github.com/root-project/root/pull/12523,1,['release'],['release']
Deployability,"::message_t>’ to ‘void*’; /usr/include/zmq.hpp:635:21: note: candidate: bool zmq::socket_t::recv(zmq::message_t*, int); inline bool recv (message_t *msg_, int flags_ = 0); ^~~~; /usr/include/zmq.hpp:635:21: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘zmq::message_t*’; In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17:0,; from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:; (...); /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: error: ‘m_fds’ was not declared in this scope; auto it = m_fds.find(fd);; ^~~~~; /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: note: suggested alternative: ‘m_free’; auto it = m_fds.find(fd);; ^~~~~; m_free; Consolidate compiler generated dependencies of target obj.clingInterpreter; [ 73%] Built target obj.clingInterpreter; [ 73%] Built target clingInterpreter; [ 73%] Built target CLING; [ 73%] Built target clad; [ 73%] Built target LLVMRES; Consolidate compiler generated dependencies of target ClingUtils; roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build.make:89: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o' failed; make[2]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o] Error 1; make[2]: Target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build' not remade because of errors.; CMakeFiles/Makefile2:35161: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all' failed; make[1]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all] Error 2; (...); ```; It seems that the problem is related to the system provided ""`libzmq`"".; The configuration step says:; `-- ZeroMQ not found. Switching on builtin_zeromq option`; but it also finds:; `pkgcfg_lib_PC_LIBZMQ_zmq:FILEPATH=/usr/lib/x86_64-linux-gnu/libzmq.so`; and then it uses the system provided `/usr/include/zmq.hpp` (from the ""`libzmq3-dev 4.2.5-1ubuntu0.2`"" package).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10107:3765,configurat,configuration,3765,https://root.cern,https://github.com/root-project/root/issues/10107,1,['configurat'],['configuration']
Deployability,":InitStreaming() and BuildOld for BeamFlux; in BuildOld look at base User::TrackerVtxBase (and record pointer value in baseclass); calls Init on the TStreamerElement base; this triggers the creation of the TClass for User::TrackerVtxBase; but BuildOld kept a stale pointer to the old TClass (was baseclass variable).; ```. Solution: replace raw pointer by a TClassRef. TCompInfo::Update did a TClass::GetClass for all type that were not classes :(; Usually it is just a waste of time.; In this case, one such type is User::TContext::Time (an enum) use as part; of User::TContext .. Consequently, before the dictionary TClass for User::TContext was constructed,; another class requested the update of the emulated StreamerInfo for the (still); emulated User::TContext, this in turn provoked the (unnecessary) call to; TClass::GetClass on ‘User::TContext::Time’ which provoked the creation of; the TClass for User::TContext … one of the steps is to absorb the existing; StreamerInfo (including the one being updated) and clear them (i.e. delete; the TCompInfo array) … upon return the result of the TClass::GetClass (a nullptr); is stored in deleted memory. Solution: Don’t call TClass::GetClass on non-type. ```; User::TDatum is loaded; provokes update of a StreamerInfo with a TTrueParticle; *spurrious* InitStreaming provoke need for TTrueParticle TClass; start consuming the TTrueParticle TProtoClass; needs the TTrueVertex TClass; provokes update of a StreamerInfo with a TBaseObject; *spurrious* InitStreaming provoke need for TBaseObject TClass; needs the TTrueParticle TClass; Consumes the TTrueParticle TProtoClass; return fine with a good TTrueVertex TClass; continue using the already “cleared” TTrueParticle TProtoClass; ```. Solution: significant update of TStreamerElement::Update and TStreamerBase::Update; to call TStreamerBase::InitStreamer if and only if there was a change in the base; class pointer, and to call TClass::GetClass only if there is a chance of finding; a new TClass ….",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4389:1866,update,update,1866,https://root.cern,https://github.com/root-project/root/pull/4389,10,"['Update', 'update']","['Update', 'update']"
Deployability,":RFieldBase::RColumnRepresentations::RColumnRepresentations(const TypesList_t&, const TypesList_t&)’; 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);; | ^~~~~~~~~~~~~~~~~~~~~~; /opt/root/install/include/ROOT/RField.hxx:111:49: note: no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}; 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);; | ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~; /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations()’; 110 | RColumnRepresentations();; | ^~~~~~~~~~~~~~~~~~~~~~; /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided; /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’; 107 | class RColumnRepresentations {; | ^~~~~~~~~~~~~~~~~~~~~~; /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided; /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’; /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided; make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2; ```. No header inclusion helpe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13103:2430,install,install,2430,https://root.cern,https://github.com/root-project/root/issues/13103,1,['install'],['install']
Deployability,":\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::un",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:2108,release,release,2108,https://root.cern,https://github.com/root-project/root/pull/12523,1,['release'],['release']
Deployability,":__cxx11::basic_string<char>, bool>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, bool> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, bool> > >::_M_insert_range_unique<const std::pair<const std::__cxx11::basic_string<char>, bool> *>' requested here; { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }; ^; /home/blue/Scratchpad/work/forum_rvec_crash_2/repro_modules_crash.C:2:31: note: in instantiation of member function 'std::map<std::__cxx11::basic_string<char>, bool, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, bool> > >::map' requested here; std::map<std::string, bool> m{{""foo"", true}, {""bar"", false}};; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_tree.h:315:7: note: previous definition is here; operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT; ^; ```. Note 1: A `Release` build seems to work fine. I can reproduce the problem on CentOS 8 Stream with a self-built GCC 11.1.0. When testing with self-built versions of GCC 11.2.0, 10.2.0, and 9.3.0, I get a probably related crash `ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/Decl.cpp:3857: unsigned int clang::FunctionDecl::getODRHash() const: Assertion 'hasODRHash()' failed.` where the `FunctionDecl` is the constructor of `std::_Rb_tree_iterator`. Note 2: The system-default GCC 8.5.0 and a self-built GCC 8.4.0 are both fine. The only ""relevant"" change that I see for `_Rb_tree_iterator` in GCC 9 is the move from (member) `bool operator==` to `friend bool operator==`, which matches the error message quite nicely. Finally, I was able to reproduce the assertion in a Docker container of `ubuntu:latest` (Ubuntu 22.04.4 LTS at the time of writing), after installing; ```; # apt update; # apt upgrade; # apt install --no-install-recommends ca-certificates cmake gcc g++ git libc6-dev libz-dev make ninja-build patch p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10291:2321,Release,Release,2321,https://root.cern,https://github.com/root-project/root/issues/10291,1,['Release'],['Release']
Deployability,":path path;; };. #endif; ```. test.cpp:; ```C++; #include ""test.hh""; test::test(); {; std::cout << ""test constructor"" << std::endl;; this->path = ""."";; }. test::~test(); {; std::cout << ""test destructor"" << std::endl;; }; ```. Then load with ACLiC:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp+; Info in <TUnixSystem::ACLiC>: creating shared library /data/giraudpf/tmp/./test_cpp.so; input_line_11:6:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl_deleter _1;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; input_line_11:7:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl* _0;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; Error in <Load>: Could not declare TEmulatedTuple<filesystem::path::_List::_Impl*,filesystem::path::_List::_Impl_deleter>; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13574:2408,Install,Installation,2408,https://root.cern,https://github.com/root-project/root/issues/13574,1,['Install'],['Installation']
Deployability,"; (fc2): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); (sigmoid): RecursiveScriptModule(original_name=Sigmoid); ); RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (fc2): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); (sigmoid): RecursiveScriptModule(original_name=Sigmoid); ); <string>:1: FutureWarning: 'torch.onnx.symbolic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:; Traceback (most recent call last):; File ""<string>"", line 6, in <module>; File ""<string>"", line 6, in <dictcomp>; TypeError: 'torch._C.Node' object is not subscriptable; terminate called after throwing an instance of 'std::runtime_error'; what(): ; Failed to run python code: for i in graph[0].nodes():; globals().update(locals()); nodeData={}; nodeData['nodeType']=i.kind(); nodeAttributeNames=[x for x in i.attributeNames()]; nodeAttributes={j:i[j] for j in nodeAttributeNames}; nodeData['nodeAttributes']=nodeAttributes; nodeInputs=[x for x in i.inputs()]; nodeInputNames=[x.debugName() for x in nodeInputs]; nodeData['nodeInputs']=nodeInputNames; nodeOutputs=[x for x in i.outputs()]; nodeOutputNames=[x.debugName() for x in nodeOutputs]; nodeData['nodeOutputs']=nodeOutputNames; nodeDType=[x.type().scalarType() for x in nodeOutputs]; nodeData['nodeDType']=nodeDType; modelData.append(nodeData); Subprocess aborted; make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] Error 1; make[1]: *** [CMakeFiles/Makefile2:62828: tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```. ### Reproducer. `cmake ../src -DCMAKE_BUILD_TYPE=RelWithDebInfo -Droofit=on -Dmysql=off -Dpgsql=off -Droostats=on -Dfortran=off -Dh",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13155:1279,update,update,1279,https://root.cern,https://github.com/root-project/root/issues/13155,1,['update'],['update']
Deployability,; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: unknown; -- Targeting AArch64; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_1.0~dev; CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:278 (MESSAGE):; Cannot determine location of C++ headers for runtime. -- Cling will look for C++ headers in '' at runtime.; -- And then fallback to: 'clang'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration . System Darwin-23.2.0; Processor 10 core Apple M1 Max (arm64); Build type Release; Install path /Users/marcomeyer/Software/root/20240113; Compiler AppleClang 15.0.0.15000100; Compiler flags:; C -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -O3 -DNDEBUG; Linker flags:; Executable -mmacosx-version-min=14.2; Module ; Shared . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix exceptions fftw3 gdml http imt libcxx mathmore mlp minuit2 mysql opengl pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva t,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:4140,Release,Release,4140,https://root.cern,https://github.com/root-project/root/issues/14337,2,"['Install', 'Release']","['Install', 'Release']"
Deployability,"; -excludePath=<string> - Do not store the <path> in the dictionary.; -f - Overwrite <file>s.; -failOnWarnings - Fail if there are warnings.; -inlineInputHeader - Does not generate #include <header> but expands the header content.; -interpreteronly - Generate minimal dictionary for interactivity (without IO information).; -m=<string> - The list of dependent modules of the dictionary.; -multiDict - If this library has multiple separate LinkDef files.; -noIncludePaths - Do not store include paths but rely on the env variable ROOT_INCLUDE_PATH.; -p - Deprecated, legacy flag which is ignored.; -rmf=<string> - Generate a rootmap file with the specified name.; -rml=<string> - Generate rootmap file.; -s=<string> - The path to the library of the built dictionary.; -selSyntaxOnly - Check the selection syntax only.; -split - Split the dictionary into two parts: one containing the IO (ClassDef)information and another the interactivity support.; Choose verbosity level:; -v - Show errors (default).; -v0 - Show only fatal errors.; -v1 - Show errors (the same as -v).; -v2 - Show warnings.; -v3 - Show notes.; -v4 - Show information.; ```; ; This patch deprecates:; 1) +P, +V, +STUB, -gccxml, -cint, -reflex -- they are old CINT legacy options which had no meaning in rootcling.; 2) -p, -c -- remove old options used by rootcling -generate-pch as now the build system does not export its lists of flags directly to roocling.; ; The implementation of 2) was quite permissive as it tried to send all possible unknown options directly to rootcling. As a side effect of reworking of 2) we can restrict the options being sent and unknown options are not sent to rootcling anymore, improving encapsulation.; ; If there is a need to do so please contact us or use the EXTRA_CLING_ARGS env option. PS: The end goal is fixing the incremental builds when -Druntime_cxxmodules=On. We will have something like `rootcling --bare-cling=""-fmodules -fno-implicit-module-maps -fmodule-map-file=... -emit-module=std`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4171:2320,patch,patch,2320,https://root.cern,https://github.com/root-project/root/pull/4171,1,['patch'],['patch']
Deployability,; 19: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302; 20: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 21: Loop condition is false. Exiting loop in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302; 22: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 23: Execution continues on line 4022 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4307; 24: 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022; 25: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022; 26: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027; 27: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027; 28: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031; 29: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031; 30: Control jumps to 'case kStringNotEqual:' at line 4125 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033; 31: The value -1 is assigned to 'pos2' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125; 32: 2nd function call argument is an uninitialized value in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125; /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5700:13: warning: Value stored to 'last' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'last' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5700; /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5728:13: warning: Value stored to 'last' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'last' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5728; /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx; ```. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15300:17485,update,updated,17485,https://root.cern,https://github.com/root-project/root/pull/15300,1,['update'],['updated']
Deployability,; 1: Calling constructor for 'TVector3' in /opt/root_src/math/physics/src/TRotation.cxx:759; 2: Calling default constructor for 'TObject' in /opt/root_src/math/physics/inc/TVector3.h:253; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling 'TVector3::operator*=' in /opt/root_src/math/physics/src/TVector3.cxx:293; 2: Calling 'TRotation::operator*' in /opt/root_src/math/physics/src/TVector3.cxx:184; 3: Calling constructor for 'TVector3' in /opt/root_src/math/physics/inc/TRotation.h:258; 4: Calling default constructor for 'TObject' in /opt/root_src/math/physics/inc/TVector3.h:253; 5: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 6: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 7: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Taking true branch in /opt/root_src/math/matrix/src/TDecompQRH.cxx:495; 2: Taking true branch in /opt/root_src/math/matrix/src/TDecompQRH.cxx:496; 3: Calling 'TDecompQRH::Decompose' in /opt/root_src/math/matrix/src/TDecompQRH.cxx:497; 4: Taking false branch in /opt/root_src/math/matrix/src/TDecompQRH.cxx:152; 5: Taking false branch in /opt/root_src/math/matrix/src/TDecompQRH.cxx:154; 6: Calling default constructor for 'TVectorT<double>' in /opt/root_src/math/matrix/src/TDecompQRH.cxx:164; 7: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TVectorT.h:53; 8: Calling 'TStorage::Up,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412:46349,Update,UpdateIsOnHeap,46349,https://root.cern,https://github.com/root-project/root/issues/7412,1,['Update'],['UpdateIsOnHeap']
Deployability,"; File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main; return _run_code(code, main_globals, None,; File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code; exec(code, run_globals); File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>; main(); File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main; IPKernelApp.launch_instance(kernel_class=ROOTKernel); File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance; app.initialize(argv); File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner; return method(app, *args, **kwargs); File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize; self.init_kernel(); File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel; kernel = kernel_factory(parent=self, session=self.session,; File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance; inst = cls(*args, **kwargs); File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__; self.magicloader = MagicLoader(self); File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__; raise Exception(""Error importing Magic: %s""%module_path); Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic; ```; And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:; ```; input_line_37:1:10: fatal error: 'dlfcn.h' file not found; ^~~~~~~~~; input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'; (dlopen(""libRint.so"", RTLD_NOW)); ^; ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12951:2038,release,release,2038,https://root.cern,https://github.com/root-project/root/pull/12951,4,"['Update', 'release', 'update']","['Update', 'release', 'updated']"
Deployability,"; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:; C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous; byte * pNetworkData,; ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'; enum class byte : unsigned char {};; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; root [1]; ```; To illustrate this, compiling this code:; ```; #include <iostream>; using namespace std;; #include <atlstr.h>. int main() {; std::cout << ""hello world!"" << std::endl;; return 0;; }; ```; is enough to generate the errors:; ```; C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx; atlstr.cxx; C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol; C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'; C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol; C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```; And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:; ```; root [0] #include <atlstr.h>; ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14602:3800,Install,Installation,3800,https://root.cern,https://github.com/root-project/root/issues/14602,1,['Install'],['Installation']
Deployability,"; Run with `root -l ExampleMacro.C`. Output, marking the higher than expected averages with `<--`:; ```; root [0] ; Processing ExampleMacro.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:NumericIntegration -- RooRealIntegral::init(func_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x). i, f(i), f(i+0.1), avg[i,i+0.1]. 10, 0.004, 0.00404, 0.00402; 10.1, 0.00404, 0.00408, 0.02456 <--; 10.2, 0.00408, 0.00412, 0.0041; 10.3, 0.00412, 0.00416, 0.02464 <--; 10.4, 0.00416, 0.0042, 0.00418; 10.5, 0.0042, 0.00424, 0.00422; 10.6, 0.00424, 0.00428, 0.02576 <--; 10.7, 0.00428, 0.00432, 0.0043; 10.8, 0.00432, 0.00436, 0.02584 <--; 10.9, 0.00436, 0.0044, 0.00438; 11, 0.0044, 0.00444, 0.00442; ```; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT Version: 6.24/06; Built for linuxx8664gcc; From tags/v6-24-06@v6-24-06; Installed manually within WSL Ubuntu 20.04. ### Additional context; <!--; Add any other context about the problem here.; -->; I first encountered this behaviour when calculating the chi^2 between a fitted RooCurve and data, where the data had bin sizes of 0.1, and the RooCurve was taking steps of 1. The chi^2 value of the RooCurve far exceeded what could be expected based on the fit residuals with respect to the data. Increasing the amount of curve points by increasing the precision of the `plotOn()` call resolved this issue. A potential fix for this bug could be to check to see if the `xFirstPt` and `xLastPt` used for averaging remain within the averaging interval when shifting them upwards or downwards, leading to inversion of the averaging boundaries. If this occurs taking the interpolated y-value at the violated boundary instead of the shifted value might ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9838:2970,install,install,2970,https://root.cern,https://github.com/root-project/root/issues/9838,1,['install'],['install']
Deployability,"; ```; And; ```; time python -c ""import ROOT"". real	0m0.779s; user	0m0.572s; sys	0m0.203s; ```. That is a factor ~3 reduction in `newfstatat` calls and >40% improved speed for `import ROOT`. One of the main motivators is the presence of spurious paths in .pcm files, which are then traversed when loading the library. For example, taken a ROOT sourced from the install directory, I see; ```; $: strings lib/Core.pcm | grep rootbuild; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/include; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_1; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_2; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_4; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_5; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_6; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stdarg.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/etc/cling/lib/clang/16/include/stddef.h; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_8; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_7; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14296:2721,release,release,2721,https://root.cern,https://github.com/root-project/root/issues/14296,12,['release'],['release']
Deployability,"; ```; RooRealVar t1(""t1"", ""Some variable"", 0.001, 1.0);; t1 = 0.000998;; cout << t1.getVal() << endl;; // returns 0.001 since it's outside the range specified; t1 = 0.000999;; cout << t1.getVal() << endl;; // should also return 0.001, since it's outside the range; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; RooRealVar t1(""t1"", ""Some variable"", 0.001, 1.0);; t1 = 0.000999;; cout << t1.getVal() << endl;; // returns 0.000999; // lest this be attributed to some floating point arithmetic:; t1 = 0.0009990000;; cout << t1.getVal() << endl;; // yields 0.000999 but; t1 = 0.0009999999;; cout << t1.getVal() << endl;; // yields 0.0001 as expected; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT version: 6.26/10; 2. Ubuntu 22.04 (but the result is independent of OS as far as I can tell, I've tried it on MacOS and RedHat 7); 3. Built from source. ### Additional context; <!--; Add any other context about the problem here.; -->; The reason this is important for my work is that I am importing data from a TTree, running sPlot to generate weights, the writing a new TTree with the sPlot weights as a new branch. The new tree will have fewer entries than the old one, since the import step excludes values which are out of range. In practice, some values which C++ comparisons would call out of range make it through RooFit's comparison, which causes a mismatch between the expected number of events written and what is actually written. This mismatch causes the number of events with weights to be larger than the number of events to be written, so at some point in my writing loop, an event is skipped by a C++ comparison but not by Ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11954:2950,install,install,2950,https://root.cern,https://github.com/root-project/root/issues/11954,1,['install'],['install']
Deployability,"; root [0] TGeoManager* myGeo = new TGeoManager();; root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""); Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2; Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML; Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------; (TGeoManager *) 0x556b33e2bc60; root [2] myGeo->CheckOverlaps(); Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for worldVOL and daughters within 0.1; Check overlaps: [==========] 3 [100.00 %] 00:00 ; Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [3] myGeo->PrintOverlaps(); === Overlaps for Default ===; = Overlap ov00000: worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_0 overlapping worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_1 ovlp=7.60311; ```. ### Setup; ROOT 6.26.06 on linux ubuntu 22.10, but using spack installer with following features enabled (i.e. no vecgeom):; ```; cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm dataframe davix exceptions gdml gnuinstall gsl_shared http imt mathmore minuit2 opengl pyroot roofit root7 rpath shared soversion ssl unuran vc vdt veccore x11 xml xrootd; ```. ### Additional context; I'm going to verify this is still present in `master` and confirm here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11781:2499,install,installer,2499,https://root.cern,https://github.com/root-project/root/issues/11781,1,['install'],['installer']
Deployability,"; sha256 = ""sha256-oO5K7AIH3Zhxpox3acuLcoTHD529pyIKXk9rfYi3U4U="";; };. nativeBuildInputs = [ makeWrapper cmake pkg-config git ];; buildInputs = [; davix; ftgl; gl2ps; glew; pcre; zlib; zstd; lapack; libxcrypt; libxml2; llvm_13; lz4; xz; gsl; openblas; openssl; xxHash; libAfterImage; giflib; libjpeg; libtiff; libpng; nlohmann_json; patchRcPathCsh; patchRcPathFish; patchRcPathPosix; python.pkgs.numpy; tbb; ]; ++ lib.optionals (!stdenv.isDarwin) [ libX11 libXpm libXft libXext libGLU libGL ]; ++ lib.optionals (stdenv.isDarwin) [ Cocoa CoreSymbolication OpenGL ]; ;. patches = [; ./sw_vers.patch; ];. preConfigure = ''; rm -rf builtins/*; substituteInPlace cmake/modules/SearchInstalledSoftware.cmake \; --replace 'set(lcgpackages ' '#set(lcgpackages '. # Don't require textutil on macOS; : > cmake/modules/RootCPack.cmake. # Hardcode path to fix use with cmake; sed -i cmake/scripts/ROOTConfig.cmake.in \; -e '1iset(nlohmann_json_DIR ""${nlohmann_json}/lib/cmake/nlohmann_json/"")'. patchShebangs build/unix/; '' + lib.optionalString noSplash ''; substituteInPlace rootx/src/rootx.cxx --replace ""gNoLogo = false"" ""gNoLogo = true""; '' + lib.optionalString stdenv.isDarwin ''; # Eliminate impure reference to /System/Library/PrivateFrameworks; substituteInPlace core/CMakeLists.txt \; --replace ""-F/System/Library/PrivateFrameworks"" """"; '' + lib.optionalString (stdenv.isDarwin && lib.versionAtLeast stdenv.hostPlatform.darwinMinVersion ""11"") ''; MACOSX_DEPLOYMENT_TARGET=10.16; '';. cmakeFlags = [; ""-Drpath=ON""; ""-DCMAKE_INSTALL_BINDIR=bin""; ""-DCMAKE_INSTALL_LIBDIR=lib""; ""-DCMAKE_INSTALL_INCLUDEDIR=include""; ""-Dbuiltin_llvm=OFF""; ""-Dbuiltin_nlohmannjson=OFF""; ""-Dbuiltin_openui5=OFF""; ""-Dalien=OFF""; ""-Dbonjour=OFF""; ""-Dcastor=OFF""; ""-Dchirp=OFF""; ""-Dclad=OFF""; ""-Ddavix=ON""; ""-Ddcache=OFF""; ""-Dfail-on-missing=ON""; ""-Dfftw3=OFF""; ""-Dfitsio=OFF""; ""-Dfortran=OFF""; ""-Dimt=ON""; ""-Dgfal=OFF""; ""-Dgviz=OFF""; ""-Dhdfs=OFF""; ""-Dhttp=ON""; ""-Dkrb5=OFF""; ""-Dldap=OFF""; ""-Dmonalisa=OFF""; ""-Dmysql=OFF""; ""-Dodbc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:5580,patch,patchShebangs,5580,https://root.cern,https://github.com/root-project/root/issues/11920,1,['patch'],['patchShebangs']
Deployability,"; │ │ ├── model.json; │ │ ├── model.rabbit; │ │ ├── multiclass_events.csv; │ │ ├── multiclass_model.json; │ │ ├── multiclass_model.rabbit; │ │ ├── multiclass_python_groundtruths.csv; │ │ ├── multiclass_python_predictions.csv; │ │ ├── multiclass_python_scores.csv; │ │ ├── python_predictions.csv; │ │ ├── regression_events.csv; │ │ ├── regression_model.json; │ │ ├── regression_model.rabbit; │ │ ├── regression_python_groundtruths.csv; │ │ ├── regression_python_predictions.csv; │ │ ├── regression_python_scores.csv; │ ├── forestBDTest.hxx; │ ├── helpersBDTest.hxx; │ ├── makefile; │ ├── readme.md; │ ├── RegressionBDTest.hxx; │ ├── run_all.sh; │ ├── testAll.cxx; ├── train_classifiers_examples.py; └── utils.py. ### Setup script for ubuntu 18.04; It sets up a new machine, installing everything in the home folder. Please modify for your needs.; ```bash; #!/bin/bash; cd; # can be ran with yes | bash this_file.sh # to say yes when prompted. sudo apt update ; yes | sudo apt upgrade. # Install all the stuff with apt. sudo apt install clang # to use clang; sudo apt install g++-7 gcc-7 # to use gcc; sudo apt install libx11-dev build-essential cmake ; sudo apt install git dpkg-dev cmake binutils libx11-dev libxpm-dev \; libxft-dev libxext-dev; sudo apt-get install gfortran libssl-dev libpcre3-dev \; xlibmesa-glu-dev libglew1.5-dev libftgl-dev \; libmysqlclient-dev libfftw3-dev libcfitsio-dev \; graphviz-dev libavahi-compat-libdnssd-dev \; libldap2-dev python-dev libxml2-dev libkrb5-dev \; libgsl0-dev libqt4-dev; sudo apt install gdb. sudo apt install libstdc++ # then add flag -stdlib=libstdc++. wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh; (echo ''; echo 'yes'; echo ''; echo 'yes';) | bash ./Miniconda3-latest-Linux-x86_64.sh; source .bashrc; source activate base; pip install numpy sklearn xgboost matplotlib. #################################### install projects #############################3; # Get ROOT; cd; git clone git@github.com:LucaZampieri/root.git",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4351:2195,Install,Install,2195,https://root.cern,https://github.com/root-project/root/pull/4351,1,['Install'],['Install']
Deployability,";; }; else {; new TStreamerInfo();; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented!; Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object!; ```; The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:; ```; if (const llvm::GlobalValue* GV; = getLastTransaction()->getModule()->getNamedValue(name)); ```; However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```; #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345; #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111; #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>); at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106; #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false); at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466; #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>); at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630; #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2776:2110,patch,patches,2110,https://root.cern,https://github.com/root-project/root/pull/2776,2,['patch'],['patches']
Deployability,"<TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload""; ```; In both cases followed by the rest of the ""dictionary payload"", see attached . [error98.txt](https://github.com/root-project/root/files/5517700/error98.txt); [errorDev.txt](https://github.com/root-project/root/files/5517701/errorDev.txt). The solution to the parsing of the paylog in both cases is the same, adding the Geant4 header location to ROOT_INCLUDE_PATH, this is understood. But the message about the missing header file should still be printed, when it cannot be found, shouldn't it?; Running the command with `strace` let's one see that it fails to find the Geant4 headers. ### Expected behavior; Print the ""file not found"" message. ### To Reproduce; This gives the error message, but of course is nothing to see if the problem is solved:; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_98/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```. This is for the environment that still prints the header not found message; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_97a_FCC_2/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```; (That the XML file isn't there doesn't matter, the argument has to be filled). ### Setup. 1. ROOT master, 6.22.00; 2. centos7; 3. lcg install. ### Additional context. This isn't really high priority, as a work around is available, but from; https://sft.its.cern.ch/jira/browse/ROOT-11029?focusedCommentId=110376&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-110376; where @Axel-Naumann said; > I'm still a bit unhappy about the quality of the diagnostics;. I figured this is worth an issue. Originally discovered in: https://github.com/key4hep/EDM4hep/issues/42#issuecomment-721167821",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6791:2380,install,install,2380,https://root.cern,https://github.com/root-project/root/issues/6791,1,['install'],['install']
Deployability,"<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>; TypeError: takes at least 3 arguments (2 given); ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>; TypeError: takes at least 3 arguments (2 given); ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>; logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame.; ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>; logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame.; ```. However, this works:; ```; import ROOT; import numpy as np; rdf = ROOT.RDF.MakeNumpyDataFrame({""bar"": np.arange(0, 10, 1)}); rdf = rdf.Redefine(""bar"", ""bar + 1""); rdf.Snapshot(""output"", ""output.root"", [""bar""]); ```. ROOT Version: 6.26/00 (conda install), 6.27/01 (swan bleeding edge)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10233:2646,install,install,2646,https://root.cern,https://github.com/root-project/root/issues/10233,1,['install'],['install']
Deployability,"<img width=""816"" alt=""Screenshot 2023-09-19 at 17 21 56"" src=""https://github.com/root-project/root/assets/80402204/cd5cf7e4-6920-4156-9695-f50da9e760d5"">; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have an issue with the SetFillStyle - the result looks quite different for the TCanvas version and the WebCanvas version. In this particular case I'm doing 'SetFillStyle(3244)' and 'SetFillStyle(3254)'. Also, for both cases, while I save the canvas from the web, using the bottom right button, the hatched area becomes completely filled instead of remaining hatched. See the attached comparison. . ### Reproducer. Using SetFillStyle() with or without WebBrowse option. ### ROOT version. current master. ### Installation method. root from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13678:739,Install,Installation,739,https://root.cern,https://github.com/root-project/root/issues/13678,1,['Install'],['Installation']
Deployability,"<optimized out>, silent=<optimized out>); at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431; #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",; ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273; #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",; ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607; #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",; isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176; #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250; #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156; #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48; #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48; #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2776:4379,patch,patches,4379,https://root.cern,https://github.com/root-project/root/pull/2776,2,['patch'],['patches']
Deployability,"= typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:83: error: expected ',' or '>' in template-parameter-list; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:95:14: error: use of undeclared identifier 'std'; return std::is_signed<T>::value; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:94:35: error: no return statement in constexpr function; static constexpr EStorageType determineStorageTypeT(T*) {; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:198:11: error: use of undeclared identifier 'std'; = std::is_reference<T>::value ?; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:40: error: use of undeclared identifier 'std'; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: expected a qualified name after 'typename'; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: unknown type name 'type'; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include ""cling/Interpreter/RuntimeUniverse.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:18316,Install,Installed,18316,https://root.cern,https://github.com/root-project/root/issues/10528,1,['Install'],['Installed']
Deployability,"=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",; ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273; #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",; ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607; #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",; isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176; #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250; #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156; #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48; #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48; #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314; #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94; #15 THashTable::Add (this=0xe65a20, o",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2776:4619,patch,patches,4619,https://root.cern,https://github.com/root-project/root/pull/2776,2,['patch'],['patches']
Deployability,"============; #5 0x00007f9ec9b38d5b in TClingCallFunc::SetArg(long) () from /home/root-6.26.04/builddir/lib/libCling.so; #6 0x00007f9ecff6d683 in TApplication::LoadGraphicsLibs() () from /home/root-6.26.04/builddir/lib/libCore.so; #7 0x00007f9ecff6ca2a in TApplication::InitializeGraphics() () from /home/root-6.26.04/builddir/lib/libCore.so; #8 0x00007f9ecff70d89 in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/root-6.26.04/builddir/lib/libCore.so; #9 0x00000000004011fc in main (); ===========================================================; ```. **Expected behavior**. The output messages should be:. ```; Memory mapped file: hsimple.map; Title: Memory Mapped Hist; Option: CREATE; Mapped Memory region: 0xb46a5000 - 0xb46be000 (0.10 MB); Current breakval: 0xb46b0000; Object Class Size ; hpx TH1F 1024; ```. **To Reproduce:**. The source code test.cpp I am using follows:; ```cpp; // test.cpp; #include ""TROOT.h""; #include ""TApplication.h""; #include ""TH1F.h""; #include ""TH2F.h""; #include ""TMapFile.h""; #include ""TRandom.h"". void hprod();. #ifndef __CINT__ ; int main(int argc, char **argv); {; TApplication* theApp = new TApplication(""Shared Mem - Producer"", &argc, argv);; hprod();; theApp->Run();; }; #endif . void hprod(); {; TH1F *hpx;; TH2F *hpxpy;; TProfile *hprof;; TMapFile::SetMapAddress(0xb46a5000);; TMapFile *mfile = TMapFile::Create(""hsimple.map"",""RECREATE"", 100000,""Memory Mapped Hist"");; hpx = new TH1F(""hpx"",""This is the px distribution"",100,-4,4);; ; // Print status of mapped file; mfile->Print();; ; // Endless loop filling histograms with random numbers; Float_t px, py, pz;; int ii = 0;; while(1); {; gRandom->Rannor(px,py);; pz = px*px + py*py;; hpx->Fill(px);; if (!(ii % 10)); { ; 	 mfile->Update();; 	 if (!ii) mfile->ls(); // print contents of mapped file after }; 	 ii++;; }; }; }; ```. To run mu code: ./test. **My setup**; 1. ROOT version: ROOT 6.26/04; 2. Operating system: Fedora 31; 3. How you obtained ROOT: I built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11353:3665,Update,Update,3665,https://root.cern,https://github.com/root-project/root/issues/11353,1,['Update'],['Update']
Deployability,"=============; #7 0x00007f174bc8faac in TCling__GetObjectDecl (obj=0x55fed02b7470) at ../core/metacling/src/TCling.cxx:603; #8 0x00007f174bce6d72 in TClingCallbacks::tryFindROOTSpecialInternal (this=this; entry=0x55fece888730, R=..., S=S; entry=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:772; #9 0x00007f174bce8e51 in TClingCallbacks::LookupObject (this=0x55fece888730, R=..., S=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:402; #10 0x00007f174bd7939f in cling::MultiplexInterpreterCallbacks::LookupObject(clang::LookupResult&, clang::Scope*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #11 0x00007f174c94bf1c in clang::MultiplexExternalSemaSource::LookupUnqualified(clang::LookupResult&, clang::Scope*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #12 0x00007f174cb36a92 in clang::Sema::ClassifyName(clang::Scope*, clang::CXXScopeSpec&, clang::IdentifierInfo*&, clang::SourceLocation, clang::Token const&, clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #13 0x00007f174c7d02fe in clang::Parser::TryAnnotateName(clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #14 0x00007f174c79f729 in clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*, clang::ParsedAttributesWithRange&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #15 0x00007f174c79fab4 in clang::Parser::ParseStatementOrDeclaration(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #16 0x00007f174c7a7902 in clang::Parser::ParseCompoundStatementBody(bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12673:9687,install,install,9687,https://root.cern,https://github.com/root-project/root/issues/12673,1,['install'],['install']
Deployability,"==================================; #8 0x0000000000000000 in ?? (); #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25; ===========================================================; ```. ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; See the following gist:; https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT master; 2. Fedora 32; 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also commented in the gist.; Before filling the TTree we can see that the current TFile of the tree is correctly the TBufferMergerFile (`tbmfile`):; ```; (gdb) p tbmfile.get(); $4 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750; (gdb) p tree.GetCurrentFile(); $5 = (TFile *) 0x1f0e750; (gdb) p tree.GetDirectory() ; $6 = (TDirectory *) 0x1f0e750; (gdb) p tbmfile.get()->GetName(); $7 = 0x1eca1f0 ""tbuffermerger_sequential.root""; (gdb) p tree.GetDirectory()->GetName(); $8 = 0x1eca1f0 ""tbuffermerger_sequential.root""; (gdb) p tree.GetCurrentFile()->GetName(); $9 = 0x1eca1f0 ""tbuffermerger_sequential.root""; ```; But after the event loop the TTree changes files twice and the latest file it p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6523:3831,install,install,3831,https://root.cern,https://github.com/root-project/root/issues/6523,1,['install'],['install']
Deployability,"> > const&, char const**, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #2 0x00007fffd50a6cf2 in (anonymous namespace)::TriggerDictionaryInitialization_libAthenaPoolUtilitiesDict_Impl() (); from /cvmfs/atlas-nightlies.cern.ch/repo/sw/master--dev4LCG_Athena_x86_64-centos7-gcc8-opt/2021-03-21T0600/Athena/22.0.30/InstallArea/x86_64-centos7-gcc8-opt/lib/libAthenaPoolUtilitiesDict.so; #3 0x00007fffd508bad3 in __static_initialization_and_destruction_0(int, int) [clone .constprop.966] (); from /cvmfs/atlas-nightlies.cern.ch/repo/sw/master--dev4LCG_Athena_x86_64-centos7-gcc8-opt/2021-03-21T0600/Athena/22.0.30/InstallArea/x86_64-centos7-gcc8-opt/lib/libAthenaPoolUtilitiesDict.so; #4 0x00007fffd508bd1b in _GLOBAL__sub_I_AthenaPoolUtilitiesDictReflexDict.cxx; (); from /cvmfs/atlas-nightlies.cern.ch/repo/sw/master--dev4LCG_Athena_x86_64-centos7-gcc8-opt/2021-03-21T0600/Athena/22.0.30/InstallArea/x86_64-centos7-gcc8-opt/lib/libAthenaPoolUtilitiesDict.so; #5 0x00007ffff7dea9c3 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2; #6 0x00007ffff7def59e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2; #7 0x00007ffff7dea7d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #8 0x00007ffff7deeb8b in _dl_open () from /lib64/ld-linux-x86-64.so.2; #9 0x00007ffff720afab in dlopen_doit () from /lib64/libdl.so.2; #10 0x00007ffff7dea7d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #11 0x00007ffff720b5ad in _dlerror_run () from /lib64/libdl.so.2; #12 0x00007ffff720b041 in dlopen@@GLIBC_2.2.5 () from /lib64/libdl.so.2; #13 0x00007fffefcd2e24 in cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #14 0x00007fffefbd7838",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7657:2368,Install,InstallArea,2368,https://root.cern,https://github.com/root-project/root/issues/7657,1,['Install'],['InstallArea']
Deployability,"> Does the Python translation need to be updated?. Yes, if you have the time.; - It also accesses the global RNGs from an MT context.; - The printing is also done in a loop, and could theoretically go into a function. _Originally posted by @hageboeck in https://github.com/root-project/root/issues/9352#issuecomment-982680071_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9360:41,update,updated,41,https://root.cern,https://github.com/root-project/root/issues/9360,1,['update'],['updated']
Deployability,">. # This Pull request:. ## Changes or fixes:. Fix for #12152. Requires #12153. The idea is the following:. - add `libbsd` option & `find_packge` module defining `LIBBSD::libbsd` target; - define `R__USE_LIBBSD` in `RConfigure.h` if `libbsd` enabled; - adjust `strlcpy` to include `bsd/string.h` if `R__USE_LIBBSD` defined; - add `LIBBSD::libbsd` to the public linking interface of `Clib`. Unfortunately, this does not work. The reason here is that (for some reason beyond me) `rootcling_stage1`, `libCling.so`, `bin/root` and probably more don't link to `Clib` as *target* but instead fetch the *target object* directly. Relevant CMake documentation:; - [`$<TARGET_OBJECTS:tgt`](https://cmake.org/cmake/help/latest/manual/cmake-generator-expressions.7.html#genex:TARGET_OBJECTS); - [Object Libraries](https://cmake.org/cmake/help/latest/manual/cmake-buildsystem.7.html#object-libraries); - [Linking Object Libraries](https://cmake.org/cmake/help/v3.13/command/target_link_libraries.html#linking-object-libraries). Example using `rootcling_stage1`:. Currently in CMake:; ```cmake; ROOT_EXECUTABLE(rootcling_stage1 src/rootcling_stage1.cxx; $<TARGET_OBJECTS:Clib>; $<TARGET_OBJECTS:ClingUtils>; $<TARGET_OBJECTS:Dictgen>; $<TARGET_OBJECTS:Foundation_Stage1>; LIBRARIES ${CLING_LIBRARIES} ${CMAKE_DL_LIBS} ${CMAKE_THREAD_LIBS_INIT} ${ROOT_ATOMIC_LIBS}; NOINSTALL); ```; I link against the `Clib` object library, but ignores any target properties like for example this line:; ```cmake; # alternative for strlcpy on linux, see https://github.com/root-project/root/issues/12152; if(libbsd); target_link_libraries(Clib PUBLIC LIBBSD::libbsd); endif(); ```. I don't see why using the `Clib` target directly should break anything? It's linked also directly, the only difference is that target properties are ignored which shouldn't be the case. I added a commit with this approach and it seems to work. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #12152.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12154:2003,update,updated,2003,https://root.cern,https://github.com/root-project/root/pull/12154,1,['update'],['updated']
Deployability,"? (); #18 0x00007f05fa745b0d in ?? (); #19 0x000000000204fc10 in ?? (); #20 0x00000000133b2cc8 in ?? (); #21 0x00000000133b2cc0 in ?? (); #22 0x00007f060309016c in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #23 0x00007ffd45bee260 in ?? (); #24 0x00007f060b10d110 in ?? (); #25 0x00007f060b10d020 in ?? (); #26 0x00007f0607fe2e7a in ?? () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #27 0x00007f05fa741095 in ?? (); #28 0x00007f05fa740f20 in ?? (); #29 0x00007f060471d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #30 0x00007f06031155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #31 0x00007f0603092698 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #32 0x00007f0603125b4a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511:1950,release,releases,1950,https://root.cern,https://github.com/root-project/root/issues/15511,2,['release'],['releases']
Deployability,"? (); #18 0x00007f05fa745b0d in ?? (); #19 0x000000000204fc10 in ?? (); #20 0x00000000133b2cc8 in ?? (); #21 0x00000000133b2cc0 in ?? (); #22 0x00007f060309016c in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #23 0x00007ffd45bee260 in ?? (); #24 0x00007f060b10d110 in ?? (); #25 0x00007f060b10d020 in ?? (); #26 0x00007f0607fe2e7a in ?? () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #27 0x00007f05fa741095 in ?? (); #28 0x00007f05fa740f20 in ?? (); #29 0x00007f060471d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #30 0x00007f06031155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #31 0x00007f0603092698 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #32 0x00007f0603125b4a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /cvmfs/lhcb.cern; #35 0x00007f0603095986 in cling::Interpreter::process(std::_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511:8204,release,releases,8204,https://root.cern,https://github.com/root-project/root/issues/15511,1,['release'],['releases']
Deployability,"?; 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},; | ^~~~~~~~~~~~~; | kSplitIndex32; /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:55: error: ‘kIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kIndex32’?; 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},; | ^~~~~~~~; | kIndex32; /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:79:12: error: no matching function for call to ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(<brace-enclosed initializer list>, <brace-enclosed initializer list>)’; 79 | {});; | ^; In file included from /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:19:; /opt/root/install/include/ROOT/RField.hxx:111:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const TypesList_t&, const TypesList_t&)’; 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);; | ^~~~~~~~~~~~~~~~~~~~~~; /opt/root/install/include/ROOT/RField.hxx:111:49: note: no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}; 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);; | ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~; /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations()’; 110 | RColumnRepresentations();; | ^~~~~~~~~~~~~~~~~~~~~~; /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided; /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RField",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13103:1663,install,install,1663,https://root.cern,https://github.com/root-project/root/issues/13103,1,['install'],['install']
Deployability,"?? (); #28 0x00007f05fa740f20 in ?? (); #29 0x00007f060471d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #30 0x00007f06031155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #31 0x00007f0603092698 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #32 0x00007f0603125b4a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #35 0x00007f0603095986 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #36 0x00007f06031781a7 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Val",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511:2557,release,releases,2557,https://root.cern,https://github.com/root-project/root/issues/15511,2,['release'],['releases']
Deployability,"@bbockelm ; 1. I move signal handling from TSystem to a new class called TSigHandling and use gSigHandling as a global signal handling object in ROOT.; 2. To comply with some function calls like ""gSystem->ResetSignals()"". I move old ResetSignals() to the new class so TUnixSystem::ResetSignals() just call gSigHandling->ResetSignals(). I could also go over all such function calls and replace them with gSigHandling->(functions) if necessary.; 2. I replace old unsafe functions in signal handlers with thread-safe ones.; 3. I only implement StackTrace functions for SIGBUS, SIGSEGV, SIGILL. Other signals are still using default StackTrace functions. kSigAlarm and kSigChild are ignored for my current implementation. Do we need to change other signal handlers?; 4. @pcanal I have some problem with running roottest. I asked a question here:; https://github.com/root-mirror/root/pull/84; Could you take a look at it and I will write test case this patch also.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/133:948,patch,patch,948,https://root.cern,https://github.com/root-project/root/pull/133,1,['patch'],['patch']
Deployability,"@bbockelm @pcanal This patch copies the code of signal handling in CMSSW. It avoids async-unsafe functions in signal handler functions. . For reference, see the link https://github.com/bbockelm/cmssw/blob/stacktrace_handler_revisit/FWCore/Services/src/InitRootHandlers.cc. I tried this patch with some simple multi-thread test cases and it worked fine. Is there any complicated test cases I can run? I think this patch is not very ready to merge, but it achieved basic functions. Any criticisms are welcome.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/97:23,patch,patch,23,https://root.cern,https://github.com/root-project/root/pull/97,3,['patch'],['patch']
Deployability,"@bbockelm I am submitting a new pull request for signal handling:; 1. I move signal handling from TSystem to a new class called TSigHandling and use gSigHandling as a global signal handling object in ROOT.; 2. To comply with some function calls like ""gSystem->ResetSignals()"". I move old ResetSignals() to the new class so TUnixSystem::ResetSignals() just call gSigHandling->ResetSignals(). I could also go over all gSystem->(functions) and replace them with gSigHandling->(functions) if necessary.; 3. I replace old unsafe functions in signal handlers with thread-safe ones.; 4. I only implement StackTrace functions for SIGBUS, SIGSEGV, SIGILL. Other signals are still using default StackTrace functions. kSigAlarm and kSigChild are ignored for my current implementation. Do we need to change other signal handlers?; 5. @pcanal I have some problem with running roottest. I asked a question here:; #84; Could you take a look at it and I will write test case this patch also.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/134:964,patch,patch,964,https://root.cern,https://github.com/root-project/root/pull/134,1,['patch'],['patch']
Deployability,"@dpiparo feel free to close this PR if you don't think doc updates should be backported.; I think it might make it easier to compare the two branches in the future if we keep them as similar as possible, and sometimes people land on the docs for v612 rather than master, and it makes sense to find the same information.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1537:59,update,updates,59,https://root.cern,https://github.com/root-project/root/pull/1537,1,['update'],['updates']
Deployability,@etejedor Shall we add a PyROOT section to the release notes?,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3783:47,release,release,47,https://root.cern,https://github.com/root-project/root/pull/3783,1,['release'],['release']
Deployability,"@mkrzewic @eamjensen could you maybe give this a short test on FreeBSD? I hope that a ""vanilla"" configuration of ROOT should now succeed, without specifying any `LLVM_TARGETS_TO_BUILD`. Closes #14075",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14115:96,configurat,configuration,96,https://root.cern,https://github.com/root-project/root/pull/14115,1,['configurat'],['configuration']
Deployability,@pcanal @davidlt -- this is the backport to 6.02-patches.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/103:49,patch,patches,49,https://root.cern,https://github.com/root-project/root/pull/103,1,['patch'],['patches']
Deployability,@pcanal @davidlt -- this is the backport to 6.04-patches.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/102:49,patch,patches,49,https://root.cern,https://github.com/root-project/root/pull/102,1,['patch'],['patches']
Deployability,@vgvassilev Please review the changes to disable optional LLVM components.; @Axel-Naumann Please review the commit to fix `TClingTests` when binaries are built as PIE.; @etejedor @oshadura Please review the creation of a relative symlink for installing PyROOT and if it works for you too.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7980:242,install,installing,242,https://root.cern,https://github.com/root-project/root/pull/7980,1,['install'],['installing']
Deployability,"@vgvassilev, here is the PR so solve the LLVM library conflicts when interfacing ROOT with Julia. I've limited the change to the interpreter package. I have 25 out of the 2140 tests that fail. It's likely to be due to my local environment. If it can easily be tested with the jenkins system, it will be faster that me trying to investigate the test failures. . Note. The parallel compilation is not working properly, independently of my changes: it fails many times and need to be restarted or build some package in single process mode. Is it a know problem ?. # This Pull request:. ## Changes or fixes:. Adds -Bsymbolic linker option for libCling.so in order get the symbols resolved internally; ; This is expected to solve conflicts when interfacing with other software using LLVM, like Julia. See https://github.com/JuliaHEP/ROOT.jl/issues/17#issuecomment-882719292. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8717:921,update,updated,921,https://root.cern,https://github.com/root-project/root/pull/8717,1,['update'],['updated']
Deployability,A (possibly growing) collection of documentation updates. Adding things as forum questions etc are coming in.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6070:49,update,updates,49,https://root.cern,https://github.com/root-project/root/pull/6070,1,['update'],['updates']
Deployability,"A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation; directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,; non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6054:100,install,installation,100,https://root.cern,https://github.com/root-project/root/pull/6054,5,"['configurat', 'install']","['configuration', 'install', 'installation', 'installed']"
Deployability,"A bug or lack of optimization is causing the tutorial `tutorial-tmva-TMVAMulticlass` to take forever to process. @ashlaban is working on optimizing this particular issue, so the ignore should be disabled once his patch is upstream.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/438:213,patch,patch,213,https://root.cern,https://github.com/root-project/root/pull/438,1,['patch'],['patch']
Deployability,A lot of interesting improvements https://github.com/facebook/zstd/releases/tag/v1.4.7; (bugfix release: https://github.com/facebook/zstd/releases/tag/v1.4.8),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7214:67,release,releases,67,https://root.cern,https://github.com/root-project/root/pull/7214,3,['release'],"['release', 'releases']"
Deployability,A new beta release has been published this week:; https://docs.python.org/3.11/whatsnew/3.11.html,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10734:11,release,release,11,https://root.cern,https://github.com/root-project/root/pull/10734,1,['release'],['release']
Deployability,A shortcut to perform Modified and Update,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14671:35,Update,Update,35,https://root.cern,https://github.com/root-project/root/pull/14671,1,['Update'],['Update']
Deployability,"A templated factory method for the field's type. Returns a unique_ptr<T>. If called with void, returns a unique pointer with a deleter that complains when called. The `unique_ptr<void>` is supposed to be explicitly released (ownership transfer). @Nowakus FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14704:215,release,released,215,https://root.cern,https://github.com/root-project/root/pull/14704,1,['release'],['released']
Deployability,"ABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301; #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539; #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395; #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516; #7 <signal handler called>; #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268; #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217; #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142; #11 0x000000000040955f in main (argc=3, argv=0x7ffd9f1b3de8) at /home/jmitrevs/work/AtlasOffline-rel_5/source/simpleStudy/util/TestExe.cxx:112; ===========================================================; ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14569:3041,Install,Installation,3041,https://root.cern,https://github.com/root-project/root/issues/14569,1,['Install'],['Installation']
Deployability,ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library.; ; The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files.; ; This patch teaches cling to work with the -fmodule-map-file= flag.; ; ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3850:302,patch,patch,302,https://root.cern,https://github.com/root-project/root/pull/3850,1,['patch'],['patch']
Deployability,"ADOOP_CONF_DIR',; 'HADOOP_HDFS_HOME',; 'HADOOP_HOME',; 'HADOOP_TOKEN_FILE_LOCATION',; 'HADOOP_YARN_HOME',; 'HOME',; 'JAVA_HOME',; 'JVM_PID',; 'LANG',; 'LD_LIBRARY_PATH',; 'LOCAL_DIRS',; 'LOCAL_USER_DIRS',; 'LOGNAME',; 'LOG_DIRS',; 'MALLOC_ARENA_MAX',; 'NM_AUX_SERVICE_mapreduce_shuffle',; 'NM_AUX_SERVICE_spark2_shuffle',; 'NM_AUX_SERVICE_spark_shuffle',; 'NM_HOST',; 'NM_HTTP_PORT',; 'NM_PORT',; 'OMP_NUM_THREADS',; 'PATH',; 'PRELAUNCH_ERR',; 'PRELAUNCH_OUT',; 'PWD',; 'PYTHONHASHSEED',; 'PYTHONPATH',; 'PYTHONUNBUFFERED',; 'PYTHON_WORKER_FACTORY_SECRET',; 'SHLVL',; 'SPARK_AUTH_SOCKET_TIMEOUT',; 'SPARK_BUFFER_SIZE',; 'SPARK_DIST_CLASSPATH',; 'SPARK_JOB_ARTIFACT_UUID',; 'SPARK_LOCAL_DIRS',; 'SPARK_PREFER_IPV6',; 'SPARK_REUSE_WORKER',; 'SPARK_USER',; 'SPARK_YARN_STAGING_DIR',; 'USER',; '_']; ```. And in particular these are the contents of `PATH` inside the worker environment:; ![image](https://github.com/root-project/root/assets/15638895/03cc533c-39a9-41f1-b923-1d8dd1ca8000). A [recent patch](https://github.com/root-project/root/pull/13803) has fixed the `import ROOT` issue:; ![image](https://github.com/root-project/root/assets/15638895/cf8df2f6-3d57-44cc-802e-1b9f65d2f9ac). But anything more than that will fail with:. ![image](https://github.com/root-project/root/assets/15638895/f48698a7-6b29-4f0c-9540-6ee292e8b164). This first issue seems to be fixed by explicitly setting the `ROOT_INCLUDE_PATH` variable to the correct LCG stack include directory on the Spark workers, via the SWAN Spark UI; ![image](https://github.com/root-project/root/assets/15638895/b9526d8c-68b1-426c-acf4-665ffa92ec44). And this is the result:. ![image](https://github.com/root-project/root/assets/15638895/9379d5ad-bd53-4867-9654-6106b6e78ed4). Now a new failure appears with a just slightly more complicated example, which simply opens a TFile with an EOS path; ![image](https://github.com/root-project/root/assets/15638895/fd4fb9c3-c20d-4b0e-9a98-7327c70c6dae). If I add the gcc and binutils directories t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13811:2024,patch,patch,2024,https://root.cern,https://github.com/root-project/root/issues/13811,1,['patch'],['patch']
Deployability,"AMPE MC Event nTuple Tree *; *Entries : 30000 : Total = 42024515 bytes File Size = 5331016 *; * : : Tree compression factor = 7.90 *; ******************************************************************************; *Br 0 :NUD_total_ADC : nud_total_adc/D *; *Entries : 30000 : Total Size= 241261 bytes File Size = 7509 *; *Baskets : 8 : Basket Size= 32000 bytes Compression= 32.06 *; *............................................................................*; ```. ```; DmpMCEvtNtup->Draw(""NUD_total_ADC""); ```; works, while; ```; root [13] TTreeReader r(DmpMCEvtNtup);; root [14] TTreeReaderValue<double> rv(r, ""NUD_total_ADC"");; root [15] r.Next(); Error in <TTreeReaderValueBase::GetBranchDataType()>: The branch NUD_total_ADC was created using a leaf list and cannot be represented as a C++ type. Please access one of its siblings using a TTreeReaderArray:; Error in <TTreeReaderValueBase::GetBranchDataType()>: NUD_total_ADC.nud_total_adc; Error in <TTreeReaderValueBase::CreateProxy()>: The branch NUD_total_ADC contains data of type {UNDETERMINED TYPE}, which does not have a dictionary.; (bool) false; ```. does not. `TTreeReader` instead requires the full leaf name:. ```; root [1] TTreeReader r(DmpMCEvtNtup);; root [2] TTreeReaderValue<double> rv(r, ""NUD_total_ADC.nud_total_adc"");; root [3] r.Next(); (bool) true; root [4] *rv; (double) -999.00000; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `TTreeReader` should support the same set of ""valid branch names"" that `TTree::Draw` supports. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. Reproduced with 6.22/02 and master@4ea4d8943 . ### Additional context; <!--; Add any other context about the problem here.; -->. This looks similar to https://sft.its.cern.ch/jira/browse/ROOT-7984 and it is (at least part of) the cause of https://sft.its.cern.ch/jira/browse/ROOT-9558 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6881:2434,install,install,2434,https://root.cern,https://github.com/root-project/root/issues/6881,1,['install'],['install']
Deployability,Accidentally closed #3574 Update libc.modulemap,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3582:26,Update,Update,26,https://root.cern,https://github.com/root-project/root/pull/3582,1,['Update'],['Update']
Deployability,Add BFGS update as a new algorithm in Minuit2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1593:9,update,update,9,https://root.cern,https://github.com/root-project/root/pull/1593,1,['update'],['update']
Deployability,Add BFGS update as an additional minimiser option. This a slight variation compared to Migrad and it could be useful and work better in some cases.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1593:9,update,update,9,https://root.cern,https://github.com/root-project/root/pull/1593,1,['update'],['update']
Deployability,"Add GitHub workflow to diff copy of LLVM and Clang, so we (hopefully) never forget to synchronize patches to LLVM and Clang into https://github.com/root-project/llvm-project/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12117:98,patch,patches,98,https://root.cern,https://github.com/root-project/root/pull/12117,1,['patch'],['patches']
Deployability,Add Johannes in CREDITS and release-notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5697:28,release,release-notes,28,https://root.cern,https://github.com/root-project/root/pull/5697,1,['release'],['release-notes']
Deployability,Add O.Shadura release notes (build system),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5736:14,release,release,14,https://root.cern,https://github.com/root-project/root/pull/5736,1,['release'],['release']
Deployability,Add RooFit::MultiProcess and TestStatistics to release notes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9375:47,release,release,47,https://root.cern,https://github.com/root-project/root/pull/9375,1,['release'],['release']
Deployability,Add TBufferMerger to release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/560:21,release,release,21,https://root.cern,https://github.com/root-project/root/pull/560,1,['release'],['release']
Deployability,Add TH2Poly::Copy function and implement also using Copy the copy ctor and assignment operator. ## Checklist:. - [ x] tested changes locally; - [x ] updated the docs (if necessary). This PR fixes #13075,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14732:149,update,updated,149,https://root.cern,https://github.com/root-project/root/pull/14732,1,['update'],['updated']
Deployability,Add TMVA PyTorch Interface to Release Notes v6-24-00,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7624:30,Release,Release,30,https://root.cern,https://github.com/root-project/root/pull/7624,1,['Release'],['Release']
Deployability,Add TScatter release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13976:13,release,release,13,https://root.cern,https://github.com/root-project/root/pull/13976,1,['release'],['release']
Deployability,Add a Tutorial for IntegratorMultiDim,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7740:19,Integrat,IntegratorMultiDim,19,https://root.cern,https://github.com/root-project/root/issues/7740,1,['Integrat'],['IntegratorMultiDim']
Deployability,"Add a few clarifications to the description of the `std::variant<T1, T2, ..., Tn>` type in the RNTuple Reference Specifications document. Currently, the dispatch tag is `== 0` _iif_ the variant was in the invalid state when the entry was filled. This condition is also expected to happen after the late model extension PRs are merged, given that late-added fields of type `std::variant<Ts...>` are in an invalid state for entries for which there is no data. ## Checklist:; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12587:479,update,updated,479,https://root.cern,https://github.com/root-project/root/pull/12587,1,['update'],['updated']
Deployability,Add a new function in Fitter to update minimizer options when refitting or when using Minos or Hesse,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4691:32,update,update,32,https://root.cern,https://github.com/root-project/root/pull/4691,1,['update'],['update']
Deployability,"Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members.; Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6615:529,integrat,integrators,529,https://root.cern,https://github.com/root-project/root/pull/6615,1,['integrat'],['integrators']
Deployability,"Add error message for overflow in converting double to ULong64_t. ## Changes or fixes:; This routine returns now an unsigned 64 bit integer; For large values, larger than 1.84e+19, we print an error message; advising to use the Trandom::PoissonD for such large values,; and return the max value UINT64_MAX. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #6927",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14668:358,update,updated,358,https://root.cern,https://github.com/root-project/root/pull/14668,1,['update'],['updated']
Deployability,Add integrator multi dim tutorial,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14730:4,integrat,integrator,4,https://root.cern,https://github.com/root-project/root/pull/14730,1,['integrat'],['integrator']
Deployability,Add missing call to `ReleasePage()` to free memory used for all the buffered pages after the vector write case (call to `CommitSealedPageV()`).; This fixes an unfortunate memory leak we introduced in https://github.com/root-project/root/pull/10775. Thanks @glmiotto!. ## Checklist:; - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12298:21,Release,ReleasePage,21,https://root.cern,https://github.com/root-project/root/pull/12298,1,['Release'],['ReleasePage']
Deployability,Add my RHist contributions to release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4807:30,release,release,30,https://root.cern,https://github.com/root-project/root/pull/4807,1,['release'],['release']
Deployability,Add patches for gcc 9 and 10,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7089:4,patch,patches,4,https://root.cern,https://github.com/root-project/root/pull/7089,1,['patch'],['patches']
Deployability,"Add pending updates of the RooFit documentation such as fixing typos, adding clarifications and pulling comments outside of functions such that doxygen can find them. Meant to be an NFC, but run CI to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3611:12,update,updates,12,https://root.cern,https://github.com/root-project/root/pull/3611,1,['update'],['updates']
Deployability,"Add possibility to set model function (and also data) when using Fitter::FitFCN. ; This gives possibility to call FitResult::GetConfidenceIntervals for the fits done using Fitter::FitFCN, as in the in case of TBinomialEfficiencyFitter. . This commit fixes ROOT-7790. The tutorial TesBinomial.C has been updated to compute as example the confidence interval of the fitted function. . This PR also contains a commit fixing the missing statistics in th2poly",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3447:303,update,updated,303,https://root.cern,https://github.com/root-project/root/pull/3447,1,['update'],['updated']
Deployability,"Add release notes for 6.16 (PyROOT, notebooks, command line tools)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3060:4,release,release,4,https://root.cern,https://github.com/root-project/root/pull/3060,1,['release'],['release']
Deployability,"Add release notes for PyROOT (current and experimental), Jupyter notebook integration and command line tools.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3060:4,release,release,4,https://root.cern,https://github.com/root-project/root/pull/3060,2,"['integrat', 'release']","['integration', 'release']"
Deployability,Add requirejs and update _getUID() function,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4271:18,update,update,18,https://root.cern,https://github.com/root-project/root/pull/4271,1,['update'],['update']
Deployability,Add support for abi-tags (adapted from Fedora's patch),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/124:48,patch,patch,48,https://root.cern,https://github.com/root-project/root/pull/124,1,['patch'],['patch']
Deployability,Add the RooFit related libraries if RooFit feature is installed.; Tested and tested with a cmake build and a main that creates RooRealVar.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/978:54,install,installed,54,https://root.cern,https://github.com/root-project/root/pull/978,1,['install'],['installed']
Deployability,Add the new operator developed by Aaradhya Saxena. This PR extends #8882 and updates to the new Session class of Sofie. ; It includes also the test for Batch normalization operator,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9307:77,update,updates,77,https://root.cern,https://github.com/root-project/root/pull/9307,1,['update'],['updates']
Deployability,"Add the possibility to use ratios as yield parameters in SPlot.; Also update the documentation of SPlot, and add a test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5592:70,update,update,70,https://root.cern,https://github.com/root-project/root/pull/5592,1,['update'],['update']
Deployability,Add xrdcp to installation bin directory,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7443:13,install,installation,13,https://root.cern,https://github.com/root-project/root/pull/7443,1,['install'],['installation']
Deployability,"Add yet another fence in TClass::GetClass to avoid lookups and memory consumption. This PR aims to fix #9029. Give the sophisticated implementation of TClass::GetClass, perhaps it would be good to collect some feedback, especially by @pcanal . # This Pull request:; This PR avoids lookups and parsing in some cases.; One of the principles of the TClass::GetClass method implementation is to avoid as much as possible. . ## Changes or fixes:; This commit adds yet another fence in TClass::GetClass, checking if the name in input is the name of a known fundamental type or typedef to it.; In order to avoid code duplication, a routine previously available within the implementation of TClassEdit has been made available with a public API. ## Checklist:. - [v ] tested changes locally; - [v ] updated the docs (if necessary). This PR fixes #9029",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13341:790,update,updated,790,https://root.cern,https://github.com/root-project/root/pull/13341,1,['update'],['updated']
Deployability,Added PyTorch TMVA Interface to release notes. PTAL @lmoneta,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7624:32,release,release,32,https://root.cern,https://github.com/root-project/root/pull/7624,1,['release'],['release']
Deployability,"Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11773:17,integrat,integration,17,https://root.cern,https://github.com/root-project/root/pull/11773,1,['integrat'],['integration']
Deployability,"Added my contributions and changed wordings w.r.t. latest 6.09 release. Naturally, feel free to modify anything.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/557:63,release,release,63,https://root.cern,https://github.com/root-project/root/pull/557,1,['release'],['release']
Deployability,"Added necessary changes to allow [XRootD local redirection](https://github.com/xrootd/xrootd/blob/8c9d0a9cc7f00cbb2db35be275c35126f3e091c0/docs/ReleaseNotes.txt#L14) from within TNetXNGFile. 1. Uses standard VectorReadLimits and does not query a XRootD data server (which is unknown in local redirection), when it is redirected to a local file; 2. Adds a, const char *lurl (defaulted to 0) to TNetXNGFile's Constructor, and passes it to TFile, if set. This allows redirection to files that have a different name in the local file system and is important to allow derivation (for example TAlien and TJAlienFile) and to still keep functionality via TArchiveFile when the file name in the local file system does not match *.zip",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2751:144,Release,ReleaseNotes,144,https://root.cern,https://github.com/root-project/root/pull/2751,1,['Release'],['ReleaseNotes']
Deployability,"Added some simple fixes to `ROOT::TFile`, to make it build with Xcode/Clang 9.0 on macOS High Sierra in C++14 mode. This is to fix the build problem described in https://sft.its.cern.ch/jira/browse/ROOT-9072. (I just thought that I might as well propose a fix, since I fixed it for my local installation anyway.). I imagine that cherry-picking the fix into the master branch would not be up to me anymore... (Should've read the contribution guidelines... 😛)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1220:291,install,installation,291,https://root.cern,https://github.com/root-project/root/pull/1220,1,['install'],['installation']
Deployability,"Added support for tesselated, ellipsoid, hyperboloid and cut tube in the ROOT to VecGeom converter. Added the macro tutorials/geom/tessellatedNav.C importing and raytracing a tessellated solid. # This Pull request:; Completes solid conversion to VecGeom support. ## Changes or fixes:; Adding the macro tutorials/geom/tessellatedNav.C. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11271",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12315:386,update,updated,386,https://root.cern,https://github.com/root-project/root/pull/12315,1,['update'],['updated']
Deployability,Adding release notes for O.Shadura,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3085:7,release,release,7,https://root.cern,https://github.com/root-project/root/pull/3085,1,['release'],['release']
Deployability,"Adding the bin width in the TH1::ComputeIntegral method, to handle histograms with non-uniform binning. # This Pull request:. ## Changes or fixes:. Modified the TH1::ComputeIntegral method, used in the TH1::GetRandom method, by multiplying the ""y"" variable (bin content) by the bin width. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). Not yet, since this has to be discussed with the ROOT developers. It has to be understood what a ""random extraction from a histogram"" should represent. This PR fixes 9530",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9538:340,update,updated,340,https://root.cern,https://github.com/root-project/root/pull/9538,1,['update'],['updated']
Deployability,"Address a number of AddressSanitizer failures with Python tests, due to the way we need to preload the ASan runtime and our configuration. If I count correctly (there were a number of failures introduced last night, so I don't have a proper baseline), this fixes 7 tests:; * `pyunittests-pyroot-import-load-libs`; * `tutorial-roofit-rf104_classfactory-py`; * `roottest-python-JupyROOT-simpleCppMagic_notebook`; * `roottest-python-JupyROOT-thread_local_notebook`; * `roottest-python-JupyROOT-ROOT_kernel_notebook`; * `roottest-python-basic-basic`; * `roottest-python-regression-regression`. Moreover, `tutorial-rcanvas-df104-py` will show a proper AdressSanitizer failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11621:124,configurat,configuration,124,https://root.cern,https://github.com/root-project/root/pull/11621,1,['configurat'],['configuration']
Deployability,"Addresses https://github.com/root-project/root/issues/13848 Thanks, Eddy!. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13956:170,update,updated,170,https://root.cern,https://github.com/root-project/root/pull/13956,1,['update'],['updated']
Deployability,Adds drawing possibilities for average ROC curves with cross validation. This integrates the work of @mohammaduzair9. Superseeds PR #2454.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2913:78,integrat,integrates,78,https://root.cern,https://github.com/root-project/root/pull/2913,1,['integrat'],['integrates']
Deployability,"Adds support for sending RDataFrame computations to a distributed Dask cluster. This looks like. ```python; import ROOT; from dask.distributed import Client; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. # In a Python script the Dask client needs to be initalized in a context; # Jupyter notebooks / Python session don't need this; if __name__ == ""__main__"":; client = Client(""SCHEDULER_ADDRESS""); df = RDataFrame(""mytree"",""myfile.root"", daskclient=client); # Proceed as usual; df.Define(""x"",""someoperation"").Histo1D(""x""); ```. Missing pieces:; - [ ] The current way to release the GIL in the mapper function of the `Base` backend assumes the first result of the list is a `RResultPtr` in order to be able to set the `__release_gil__` attribute on its `GetValue` function. I.e. this doesn't work for all operations, such as `AsNumpy` or `Snapshot` that do not return a `RResultPtr`; - [ ] Tutorial; - [ ] Tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9086:588,release,release,588,https://root.cern,https://github.com/root-project/root/pull/9086,1,['release'],['release']
Deployability,"Aesthetics fixes, variable names changes, markdown update",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/217:51,update,update,51,https://root.cern,https://github.com/root-project/root/pull/217,1,['update'],['update']
Deployability,After #9673 compilation in `dev` mode is broken - warnings are converted to errors. Plus update Oracle code to use namespace clearly - should help for Doxygen documentation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9674:89,update,update,89,https://root.cern,https://github.com/root-project/root/pull/9674,1,['update'],['update']
Deployability,"After [those changes](https://github.com/root-project/root/commit/060e8d7afd8c47f61eee9f72004388b1a60d77f2), related to C++ modules on Windows, the following tests:. roottest-root-dataframe-writeFcc (Failed); roottest-root-dataframe-test_readFcc (Failed); roottest-root-dataframe-regression_snapshot (Failed); roottest-root-dataframe-test_glob (Failed); roottest-root-dataframe-test_reduce (Failed); roottest-root-dataframe-ctors (Failed). Are failing with the following errors:. ```; 1306: Processing C:/Users/sftnight/git/roottest/root/dataframe/test_ctors.C+...; 1306: Info in <TWinNTSystem::ACLiC>: creating shared library C:/Users/sftnight/build/release/roottest/root/dataframe/test_ctors_C.dll; 1306: In file included from input_line_9:9:; 1306: In file included from C:/Users/sftnight/git/roottest/root/dataframe/test_ctors.C:4:; 1306: In file included from C:/Users/sftnight/build/release/include\ROOT/RDataFrame.hxx:20:; 1306: In file included from C:/Users/sftnight/build/release/include\ROOT/RDF/RInterface.hxx:15:; 1306: In file included from C:/Users/sftnight/build/release/include\ROOT/RDF/ActionHelpers.hxx:25:; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1434:36: error: use of undeclared identifier 'M_PI'; 1306: T DeltaPhi(T v1, T v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1455:68: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaPhi(const RVec<T>& v1, const RVec<T>& v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1473:55: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaPhi(const RVec<T>& v1, T v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1491:55: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaPhi(T v1, const RVec<T>& v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1510:113: error: use of undeclared identifier 'M_PI'; 1306: RVec",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6727:651,release,release,651,https://root.cern,https://github.com/root-project/root/pull/6727,3,['release'],['release']
Deployability,"After applying all updates on CentOS 8 Stream, `roottest-root-treeformula-stl-make` started crashing reproducibly both with GCC 8.5.0 and Clang 13 (assuming I didn't do something stupid). ### Output; ```; Processing runmapvector.C...; Warning in <TClass::Init>: no dictionary for class MyEvent is available; ***********************************; * Row * Instance * data.firs *; ***********************************; * 0 * 0 * 3 *; ***********************************; ***********************************; * Row * Instance * data.seco *; ***********************************; * 0 * 0 * 5 *; * 0 * 1 * 7 *; ***********************************; free(): invalid next size (fast); ```. ### Backtrace; ```; #0 0x00007ffff6674a4f in raise () from /lib64/libc.so.6; #1 0x00007ffff6647db5 in abort () from /lib64/libc.so.6; #2 0x00007ffff66b7057 in __libc_message () from /lib64/libc.so.6; #3 0x00007ffff66be1bc in malloc_printerr () from /lib64/libc.so.6; #4 0x00007ffff66bfb58 in _int_free () from /lib64/libc.so.6; #5 0x00007ffff77bb30f in TClass::Destructor (this=this@entry=0x20ee770, obj=<optimized out>, dtorOnly=dtorOnly@entry=false) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5460 ; #6 0x00007fffe03c2cf3 in TBranchElement::ReleaseObject (this=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 ; #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 ; #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 ; #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 ; #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 ; #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9543:19,update,updates,19,https://root.cern,https://github.com/root-project/root/issues/9543,1,['update'],['updates']
Deployability,"After changes to RDF's internal logic, some of the classes used; during the event loop were triggering unnecessary, slow cling nullptr; checks. This patch turns these checks off. This resolves a performance regression in v6.23 w.r.t. v6.22 for RDF; macros run via the interpreter (`root dfMacro.C`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7004:149,patch,patch,149,https://root.cern,https://github.com/root-project/root/pull/7004,1,['patch'],['patch']
Deployability,"After commit a0fa4fa, the integration of a RooParamHistFunc still; doesn't work when the RooParamHistFunc was cloned with `cloneTree`.; This was because the ranges were stored in a hash map keyed by argument; pointer and then not the correct clones of the arguments were used to; look up the ranges afterwards. This commit is fixing that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7479:26,integrat,integration,26,https://root.cern,https://github.com/root-project/root/pull/7479,1,['integrat'],['integration']
Deployability,"After commit a0fa4fa, the integration of a RooParamHistFunc still; doesn't work when the RooParamHistFunc was cloned with `cloneTree`.; This was because the ranges were stored in a hash map keyed by argument; pointer and then not the correct clones of the arguments were used to; look up the ranges afterwards. This commit is fixing that. The problem was reported in the ROOT forum: https://root-forum.cern.ch/t/barlow-beeston-in-subrange/43909/5.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7478:26,integrat,integration,26,https://root.cern,https://github.com/root-project/root/pull/7478,1,['integrat'],['integration']
Deployability,"After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15401:41,configurat,configuration,41,https://root.cern,https://github.com/root-project/root/pull/15401,1,['configurat'],['configuration']
Deployability,"After https://github.com/root-project/root/pull/15900, there should be four failing tests due to Clad:; ```; The following tests FAILED:; 206 - gtest-math-mathcore-test-CladDerivatorTests (Failed); 232 - gtest-roofit-histfactory-test-testHistFactory (Failed); 235 - gtest-roofit-hs3-test-testRooFitHS3 (Failed); 267 - gtest-roofit-roofitcore-test-testRooFuncWrapper (Failed); ```. They seem somehow related to `__builtin_pow`. For this reason, to keep green builds, clad was disabled for mac-beta in https://github.com/root-project/root/pull/15910. ### Reproducer. Install `MacOSX15.0.sdk`, build ROOT and try to run all tests. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. macOS",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15912:565,Install,Install,565,https://root.cern,https://github.com/root-project/root/issues/15912,2,['Install'],"['Install', 'Installation']"
Deployability,"After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14142:678,Update,UpdateSchema,678,https://root.cern,https://github.com/root-project/root/pull/14142,1,['Update'],['UpdateSchema']
Deployability,"After the latest LLVM upgrade, changes in cling's symbol resolution; logic cause some unresolved symbol failures in RDF jitting. Adding RJittedAction to the rootmap should help cling autoloading; and work around the problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7586:22,upgrade,upgrade,22,https://root.cern,https://github.com/root-project/root/pull/7586,2,['upgrade'],['upgrade']
Deployability,"After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:; ```; Integrating log(a*x), relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04; 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03; 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14; Integrating log(a*x), relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19; 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41; 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3; Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06; Integrating log(a*x), relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26; 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48; 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38; [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms); [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4; Integrating Polynomial 4th order, relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04; 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05; 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05; Integrating Polynomial 4th order, relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05; 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04; 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.383",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6632:70,integrat,integrator,70,https://root.cern,https://github.com/root-project/root/pull/6632,6,"['Integrat', 'integrat']","['Integrating', 'integrator', 'integrators']"
Deployability,"After the update to Visual Studio v16.4.0, the /O2 optimization flag in the interpreter make many (25%) of the tests failing.; Try to re-enable /O2 after the upgrade of llvm & clang, or after updating Visual Studio (v16.5.0-pre.2.0 still doesn't work)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4948:10,update,update,10,https://root.cern,https://github.com/root-project/root/pull/4948,2,"['update', 'upgrade']","['update', 'upgrade']"
Deployability,"After the upgrade to LLVM 13, the test `roottest-root-meta-tclass-execInitOrder` will *crash* with AddressSanitizer instrumentation:; ```; 2187: Processing /home/jhahnfel/ROOT/src/roottest/root/meta/tclass/execInitOrder.cxx+...; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Derived is found to inherit from TObject; 2187:; 2187: *** Break *** segmentation violation; 2187:; 2187:; 2187:; 2187: ===========================================================; 2187: There was a crash.; 2187: This is the entire stack trace of all threads:; 2187: ===========================================================; 2187: #0 0x00007f2a616e15db in waitpid () from /lib64/libc.so.6; 2187: #1 0x00007f2a61643ce7 in do_system () from /lib64/libc.so.6; 2187: #2 0x00007f2a630125cb in TUnixSystem::StackTrace (this=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2395; 2187: #3 0x00007f2a6301c2df in TUnixSystem::DispatchSignals (this=0x617000000080, sig=kSigSegmentationViolation) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:3615; 2187: #4 <signal handler called>; 2187: #5 0x00000000002d353e in __interceptor_strcmp.part.325 (); 2187: #6 0x00007f2a62e33daf in TClassTable::AddAlternate (normName=0x7f2a6007c780 <.str> ""UserClassViaTypedef"", alternate=0x7f2a6007c7c0 <.str> ""UserClass_t"") at /home/jhahnfel/ROOT/src/core/cont/src/TClassTable.cxx:447; 2187: #7 0x00007f2a62e382ed in ROOT::AddClassAlternate (normName=",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:10,upgrade,upgrade,10,https://root.cern,https://github.com/root-project/root/issues/11867,1,['upgrade'],['upgrade']
Deployability,"After updating to `clang-14.0.6-1.module_el8.7.0+1198+0c3eb6e2.x86_64`, many tests started failing when compiling ROOT with Clang (134 tests in my configuration). The reason seems to be that Clang is now built with [`GCC_INSTALL_PREFIX=/opt/rh/gcc-toolset-12/root/usr`](https://git.centos.org/rpms/clang/c/4e0495208f843a286dc0d06d9abdc3433a66983a) to detect and use `libstdc++` from GCC 12. Even if that was not the case, https://github.com/llvm/llvm-project/commit/35aaf548237a4f213ba9d95de53b33c5ce1eadce in Clang 15 will have a similar effect for people building the compiler from source. According to our own documentation, ROOT does not guarantee [""compatibility with compilers shipped with `devtoolsets` on CentOS or Red Hat""](https://root.cern/install/build_from_source/#caveats) which right now only leaves building with the system-default GCC 8.5 to get a fully working installation of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11601:147,configurat,configuration,147,https://root.cern,https://github.com/root-project/root/issues/11601,3,"['configurat', 'install']","['configuration', 'install', 'installation']"
Deployability,"After upgrade to latest CEF one cannot use it from original directory and have to copy it into ROOT `bin/` or `lib/` subdirectories; But when running, sometime CEF tries to search it's files in other location.; Try to convince CEF to search such files in concrete locations using `CefSettings` class. Fix several problems with Windows, provide short instruction how to compile CEF on Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6302:6,upgrade,upgrade,6,https://root.cern,https://github.com/root-project/root/pull/6302,1,['upgrade'],['upgrade']
Deployability,After upgrade to openui5 1.128.0 web widgets do not work with QWebEngine from qt5. Therefore do not select this engine by default - only when --web=qt5 specified. Keep it in the root while it still can be used without openui5 like in external widgets embeding TWebCanvas. In following PRs JSROOT will include patch to let qt5 work by using older openui5,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16521:6,upgrade,upgrade,6,https://root.cern,https://github.com/root-project/root/pull/16521,2,"['patch', 'upgrade']","['patch', 'upgrade']"
Deployability,"All columns created during late model extension need to have their page and column ranges synthesized during reading. However, only *deferred* columns (i.e., principal columns of top-level fields) also require zero pages. This change aims to make this distinction more clear. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15786:312,update,updated,312,https://root.cern,https://github.com/root-project/root/pull/15786,1,['update'],['updated']
Deployability,Allow both absolute and relative python install paths,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/382:40,install,install,40,https://root.cern,https://github.com/root-project/root/pull/382,1,['install'],['install']
Deployability,Allow installation of PyROOT in python system directories,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6054:6,install,installation,6,https://root.cern,https://github.com/root-project/root/pull/6054,1,['install'],['installation']
Deployability,Allowed `RVec` shorthand aliases in Numba.Declare.; Aliases are applied in `tutorials/pyroot/pyroot004_NumbaDeclare.py`. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #9898,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9950:157,update,updated,157,https://root.cern,https://github.com/root-project/root/pull/9950,1,['update'],['updated']
Deployability,Allows -Dfail-on-missing -Dpyroot3 to fail configuration if only pyroot2 can be built.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5500:43,configurat,configuration,43,https://root.cern,https://github.com/root-project/root/pull/5500,1,['configurat'],['configuration']
Deployability,"Allows to access files from `THttpServer` when it protected with `htdigest` password. Addresses issue discussed here:. https://root-forum.cern.ch/t/localhost-jsroot-server/54607/60. Example of starting such server on localhost:8011:; ```; THttpServer* serv = new THttpServer(""http:8011?auth_file=auth.txt&auth_domain=root&cred_cors&cors=http://localhost:8000"");; ```. Here crucial exact CORS url and `cred_cors` option which enables `Access-Control-Allow-Credentials` header. Server `localhost:8000` is just plain JSROOT installation with python3. To open ROOT file on such server:; ```; http://localhost:8000/jsroot/?with_credentials&file=http://localhost:8011/currentdir/hsimple.root; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12866:521,install,installation,521,https://root.cern,https://github.com/root-project/root/pull/12866,1,['install'],['installation']
Deployability,"Allows to change label on the axis by the value. It is more robust method, ; which continue working when zooming or axis limits or just canvas resolution changes.; Example is following:; ```; axis->ChangeValueLabel(30.,-1,-1,-1,kBlue,-1,""value of 30"");; ```. Old `TAxis::ChangeLabel` method using index is working as before. Use `strlcpy` instead of `strncpy` where it makes sense, update tutorial and release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13468:382,update,update,382,https://root.cern,https://github.com/root-project/root/pull/13468,2,"['release', 'update']","['release', 'update']"
Deployability,"Also apply clang-format to the involved files in the process. ## Changes or fixes:; `RNTupleFileWriter::Recreate` and `RNTupleFileWriter::Append ` now return a `unique_ptr` rather than a raw pointer, to make it obvious that the caller gets ownership of that pointer. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15580:318,update,updated,318,https://root.cern,https://github.com/root-project/root/pull/15580,1,['update'],['updated']
Deployability,Also fix several small issues in `TScatter` itself. Update JSROOT with `TScatter` support,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12759:52,Update,Update,52,https://root.cern,https://github.com/root-project/root/pull/12759,1,['Update'],['Update']
Deployability,Also make isBinnedDistribution depend on the vars rather than always return true. ## Changes or fixes:. Makes ParamHistFunc more flexible/powerful. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10516:199,update,updated,199,https://root.cern,https://github.com/root-project/root/pull/10516,1,['update'],['updated']
Deployability,Also new features. - TLegend autoplace; - Update stats box entries on server; - Better SVG bezier paremeters - more smooth curves,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12354:42,Update,Update,42,https://root.cern,https://github.com/root-project/root/pull/12354,1,['Update'],['Update']
Deployability,Also now verify all downloaded software before installing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1253:47,install,installing,47,https://root.cern,https://github.com/root-project/root/pull/1253,1,['install'],['installing']
Deployability,Also reduce log output when processing too many executions. Update JSROOT with eslint formating,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13758:60,Update,Update,60,https://root.cern,https://github.com/root-project/root/pull/13758,1,['Update'],['Update']
Deployability,Also sanitize setting of TEveArrow parameters and propagation of bounding-box updates to GL viewer.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/566:78,update,updates,78,https://root.cern,https://github.com/root-project/root/pull/566,1,['update'],['updates']
Deployability,Also update JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13454:5,update,update,5,https://root.cern,https://github.com/root-project/root/pull/13454,2,['update'],['update']
Deployability,Also update JSROOT for RColor handling,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5127:5,update,update,5,https://root.cern,https://github.com/root-project/root/pull/5127,1,['update'],['update']
Deployability,Also update minified file; Discovered with DeepCode,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7691:5,update,update,5,https://root.cern,https://github.com/root-project/root/pull/7691,1,['update'],['update']
Deployability,"Also, update the doxygen configuration file such that CUDA sources and headers are scanned as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13419:6,update,update,6,https://root.cern,https://github.com/root-project/root/pull/13419,2,"['configurat', 'update']","['configuration', 'update']"
Deployability,"Although 35105feb3d7cb fixes a problem in HistFactory, it has the; disadvantage that the assignment operator of Channel gets deactivated.; By passing the list of open TFiles as argument instead of making it a; member, the class can stay as it was. (cherry picked from commit 31f55ff0c1fbae1a0573a1c8bf136be4d77fc06b). **Update**:; Added also a cherry pick of the fix for ROOT-3579",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5677:320,Update,Update,320,https://root.cern,https://github.com/root-project/root/pull/5677,1,['Update'],['Update']
Deployability,"Although the [docs for building ROOT from source](https://root.cern/install/build_from_source/#setting-the-c-standard) suggest that the `C++20` standard should be supported, the software won't build with this setting. The reason is that the file `cmake/modules/CheckCompiler.cmake` hasn't been updated on the `latest-stable` branch within a year. Only for the `master`-branch `C++20` support has been added in #8399. So either the docs at https://github.com/root-project/web/blob/main/install/build_from_source.md#setting-the-c-standard should be fixed or the support for C++20 should be merged into `latest-stable` (which I personally would prefer, though I don't know if this would break something).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8939:68,install,install,68,https://root.cern,https://github.com/root-project/root/issues/8939,3,"['install', 'update']","['install', 'updated']"
Deployability,Always generate a ROOT modulemap and install it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/700:37,install,install,37,https://root.cern,https://github.com/root-project/root/pull/700,1,['install'],['install']
Deployability,And clean some configuration remnants,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16076:15,configurat,configuration,15,https://root.cern,https://github.com/root-project/root/pull/16076,1,['configurat'],['configuration']
Deployability,Apache 2.4 has now own FastCGI implementation and uses different name for parameter.; Also update docu with example FastCGI configuration for Apache 2.4 - older version no longer relevant,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6334:91,update,update,91,https://root.cern,https://github.com/root-project/root/pull/6334,2,"['configurat', 'update']","['configuration', 'update']"
Deployability,"Apparently xrootd 5.3.1 have a different sha256 hash (not clear how it could happened or if maybe in PR I was using old). Failure was detected on centos8 rootbench machine (https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/):; ```; -- verifying file...; file='/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz'; -- SHA256 hash of; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz; does not match expected value; expected: '1194ba435dc1e243f3cdb8273f6385407183799faf7622a582a828f4aff6807d'; actual: '0800b4c6444591a6514c5b81b2c4c79439875136ab2267ce4bed99cb94ead6e6'; -- Hash mismatch, removing...; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9103:324,Release,Release,324,https://root.cern,https://github.com/root-project/root/pull/9103,2,['Release'],['Release']
Deployability,"Apparently, `TClassEdit::ResolveTypedef()` is unable to resolve a typedef that aliases a fundamental data type if the `typedef` declaration is not known to cling. In non-C++-modules builds, making it known typically involves parsing the corresponding header. In addition, `TDataMember::GetTrueTypeName()`, however, correctly provides the information, which seems to be inconsistent behavior in ROOT meta. This pull request is twofold: _(i)_ it cleans up the code for type name normalization, and _(ii)_ circumvents this issue by directly using the resolved type name provided by `TDataMember::GetTrueTypeName()`. ## Changes or fixes:; - Separate the internal `GetNormalizedType()` function in `GetCanonicalTypeName()` (which returns the canonical name of a type, resolving typedefs where needed) and `GetNormalizedTypeName()` (which returns the RNTuple normalized name for a type, e.g. `const vector<T>` -> `std::vector<T>`.; - Add a protected `RFieldBase::Create()` overload that takes an already normalized type name + type alias.; - Use the aforementioned overload in `RClassField` to create fields associated to data members. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). (FYI, @Nowakus; this PR should solve the typedef issues that you were encountering)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13255:1181,update,updated,1181,https://root.cern,https://github.com/root-project/root/pull/13255,1,['update'],['updated']
Deployability,"Appears when method returns nullptr, but buffer is not released.; Also improve TTreeRow methods concerning reallocation or cleaning of memory",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4902:55,release,released,55,https://root.cern,https://github.com/root-project/root/pull/4902,1,['release'],['released']
Deployability,"Apple has switched to high-resolution timing for APFS, giving mu second resolution.; Ninja supports that since 1.9.0. BUT the binutils by Apple just write out zeros,; causing wrong time stamps and causing re-build events. CMake has worked around that by touching the library generated by Apple binutils,; to update its timestamp. That means:; On Apple (assuming Apple filesystem), with a recent Ninja, CMake has to be >= 3.14.4. This will be toned down to a WARNING message later - but for now, until we find the; CI nodes suffering from this, keep it as a FATAL_ERROR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6196:308,update,update,308,https://root.cern,https://github.com/root-project/root/pull/6196,1,['update'],['update']
Deployability,"Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```; ,boost-use-to-string,; ,misc-definitions-in-headers,; ,misc-string-compare,; ,misc-uniqueptr-reset-release,; ,modernize-deprecated-headers,; ,modernize-make-shared,; ,modernize-make-unique,; ,modernize-use-bool-literals,; ,modernize-use-equals-delete,; ,modernize-use-nullptr,; ,modernize-use-override,; ,performance-inefficient-algorithm,; ,performance-inefficient-vector-operation,; ,performance-faster-string-find,; ,performance-move-const-arg,; ,readability-container-size-empty,; ,readability-redundant-string-cstr,; ,readability-static-definition-in-anonymous-namespace,; ,readability-uniqueptr-delete-release; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14011:295,release,release,295,https://root.cern,https://github.com/root-project/root/pull/14011,4,['release'],['release']
Deployability,"Apply JSROOT release 7.3.0. Handle top node visibility in web geom painter; When drawing top volume, add geo manager itself to canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11902:13,release,release,13,https://root.cern,https://github.com/root-project/root/pull/11902,1,['release'],['release']
Deployability,"Apply [D41416](https://reviews.llvm.org/D41416) to reduce template specialization deserializations. This patch decreases the memory footprint of root startup by approx 17%. We deserialize 2 times less record types. See details [here](https://www.diffchecker.com/L2m1FE76). We cannot land D41416 in clang's trunk because in essence it replaces a liner algorithm with a quadratic one. We see the compilation time being approx 2 times slower clearly in one of the Google modules builds with approx 1000 modules with a lot of lazy specializations. While I am working on a better version of this patch, land it in our codebase because we do not have such extreme usage scenarios (yet?).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1526:105,patch,patch,105,https://root.cern,https://github.com/root-project/root/pull/1526,2,['patch'],['patch']
Deployability,Apply a fix when using the CNN with the latest cudnn library (version 8) compatibile with Cuda11. . Update also tutorials of tmva to make the keras models using tensorflow.keras that is now the reccomended way of using Keras,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7003:100,Update,Update,100,https://root.cern,https://github.com/root-project/root/pull/7003,1,['Update'],['Update']
Deployability,"Apply new naming convention in JSROOT; - all methods names starts with small letter; - all settings moved to `JSROOT.settings`; - remove several deprecated methods; - provide documentation for all ""public"" JSROOT classes. All http, webgui, v7 tutorials are tested and still working.; Also `iPython` is tested. If there are no other objections, major JSROOT release v6 will be done in next days",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6996:357,release,release,357,https://root.cern,https://github.com/root-project/root/pull/6996,1,['release'],['release']
Deployability,Apply patch from https://github.com/oneapi-src/oneTBB/pull/258,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7020:6,patch,patch,6,https://root.cern,https://github.com/root-project/root/pull/7020,1,['patch'],['patch']
Deployability,Apply patch to interpreter/llvm/src/tools/clang/lib/AST/TemplateBase.cpp as suggested here:; https://reviews.llvm.org/D36368. This patch has been in use for some time on the CMS fork of ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7336:6,patch,patch,6,https://root.cern,https://github.com/root-project/root/pull/7336,2,['patch'],['patch']
Deployability,Apply same patch for 6.10 branch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1066:11,patch,patch,11,https://root.cern,https://github.com/root-project/root/pull/1066,1,['patch'],['patch']
Deployability,Apply the same CMAKE_ARCHIVE_OUTPUT_DIRECTORY for all configurations,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4396:54,configurat,configurations,54,https://root.cern,https://github.com/root-project/root/pull/4396,1,['configurat'],['configurations']
Deployability,Area/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1072:31: error: expected expression; template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT; ^; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:83:73: note: expanded from macro 'atomic_is_lock_free'; #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))); ^; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1072:81: error: expected ';' at end of declaration; template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT; ^; ;; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1072:82: error: expected unqualified-id; template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT; ^; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'; # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT; ^; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/config/detail/suffix.hpp:965:26: note: expanded from macro 'BOOST_NOEXCEPT'; # define BOOST_NOEX,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6454:2076,Install,InstallArea,2076,https://root.cern,https://github.com/root-project/root/issues/6454,1,['Install'],['InstallArea']
Deployability,Arg' is non-null in /opt/root_src/net/http/src/TRootSniffer.cxx:1334; 2: Left side of '||' is false in /opt/root_src/net/http/src/TRootSniffer.cxx:1334; 3: Assuming the condition is false in /opt/root_src/net/http/src/TRootSniffer.cxx:1334; 4: Left side of '||' is false in /opt/root_src/net/http/src/TRootSniffer.cxx:1334; 5: Assuming the condition is false in /opt/root_src/net/http/src/TRootSniffer.cxx:1334; 6: Taking false branch in /opt/root_src/net/http/src/TRootSniffer.cxx:1334; 7: Calling default constructor for 'TUrl' in /opt/root_src/net/http/src/TRootSniffer.cxx:1340; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling implicit copy constructor for 'TProofProgressStatus' in /opt/root_src/proof/proof/src/TProofProgressStatus.cxx:86; 2: Calling copy constructor for 'TObject' in /opt/root_src/proof/proof/src/TProofProgressStatus.cxx:86; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:265; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming field 'fHasModRoot' is false in /opt/root_src/net/net/src/TWebFile.cxx:501; 2: Taking true branch in /opt/root_src/net/net/src/TWebFile.cxx:501; 3: Calling 'TWebFile::ReadBuffers10' in /opt/root_src/net/net/src/TWebFile.cxx:502; 4: Calling 'TWebFile::SetMsgReadBuffer10' in /opt/root_src/net/net/src/TWebFile.cxx:550; 5: Calling default constructor for 'TUrl' in /opt/root_src/net/net/src/TWebFile.cxx:268; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling default constructor for 'TPBHan,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412:60320,Update,UpdateIsOnHeap,60320,https://root.cern,https://github.com/root-project/root/issues/7412,1,['Update'],['UpdateIsOnHeap']
Deployability,"AroundUnnamedInclude -e #define\ ClingWorkAroundJITfullSymbolResolution -e #define\ ClingWorkAroundNoDotNamespace -e #define\ ClingWorkAroundNoDotInclude -e #define\ ClingWorkAroundTClassUpdateDouble32 -e #define\ ClingWorkAroundUnloadingVTABLES -q -l -b assertSparseSelection.C; ==22765== . Processing assertSparseSelection.C...; ==22765== Conditional jump or move depends on uninitialised value(s); ==22765== at 0x9D9A01A: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F2CBA: (anonymous namespace)::SymbolicallyEvaluateGEP(llvm::GEPOperator const*, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F35A1: (anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value const*, unsigned int, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F15DF: (anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap<llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo<llvm::Constant*>, llvm::detail::DenseMapPair<llvm::Constant*, llvm::Constant*> >&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F38B7: llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x91305C5: AddReachableCodeToWorklist(llvm::BasicBlock*, llvm::DataLayout const&, llvm::SmallPtrSetImpl<llvm::BasicBlock*>&, llvm::InstCombineWorklist&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9139861: combineInstructionsOverF",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11385:2670,release,release-master,2670,https://root.cern,https://github.com/root-project/root/issues/11385,1,['release'],['release-master']
Deployability,"As a follow-up from PR #12975, this pull request enables fetching up-to-date content for the given branch of a related repository. Before this patch, a related repository (roottest, etc.), was cloned if not found. It is, however, useful to be able to also checkout an up-to-date branch in an existing repository, e.g. for the new CI. This behavior is controlled by defining the `xxx_force_checkout=ON` CMake variable. Therefore, this PR also adds `roottest_force_checkout=ON` for the new CI. For rootbench, the upstream `master` branch is fetched in any case, but for the sake of code reuse this PR also allows the local clone to be _optionally_ updated. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13003:143,patch,patch,143,https://root.cern,https://github.com/root-project/root/pull/13003,3,"['patch', 'update']","['patch', 'updated']"
Deployability,"As a side-effect, this change solves the install problem with a missing; tree/forest/inc directory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3819:41,install,install,41,https://root.cern,https://github.com/root-project/root/pull/3819,1,['install'],['install']
Deployability,"As discussed in #12376, the release candidate tag was to be bumped to RC2 after late model extension + split encoding is available. In principle, it's safe to do it now. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13566:28,release,release,28,https://root.cern,https://github.com/root-project/root/pull/13566,1,['release'],['release']
Deployability,As discussed with @Axel-Naumann on mattermost: https://mattermost.web.cern.ch/root/pl/3en1hqnc9tbftqakg3s3jy4b4c. The conda build has been patching this out since it was first released. There was some issues when building with `runtime_cxxmodules` but those were fixed in #4710.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4757:139,patch,patching,139,https://root.cern,https://github.com/root-project/root/pull/4757,2,"['patch', 'release']","['patching', 'released']"
Deployability,"As measured, there is an improvement if the expansion of `R__ASSERT()` is out of the inlined code path due to slighly more compact code.; Additionally, the `R__ASSERT(count > 0)` has been removed, given that `ClusterSize_t::ValueType` is an unsigned integral type. This was seen during the evaluation of the relative overhead of RField's post-read callbacks, which for reference I provide below. Two different tests were carried out: _(i)_ 4 fields of type `std::uint32_t`; and _(ii)_ 2 fields of type `std::uint32_t` + 2 fields of a user-defined struct, where:; - BASE refers to the current `master` with `RFieldBase::Read()` slightly changed to not support read callbacks.; - [1] refers to the current `master` + the changes in this PR; - [2] refers to the current `master` where `RFieldBase::InvokeReadCallbacks()` is also outlined by moving it to RField.cxx. All tests used a Release `-O3` build, 40M entries and 505 compression; results in $us$, averaged over 10 executions. _(i)_ 4 fields of type `std::uint32_t`:; ```; | Average | Rel. increase; ---------------------------+-----------+--------------; BASE | 871502.4 |; No callbacks [1] | 867523.1 | 0.9954; No callbacks [1][2] | 878027.7 | 1.0075; 1 callback | 1068704.3 | 1.2263; 2 callbacks | 1233821.7 | 1.4157; ```; _(ii)_ 2 fields of type `std::uint32_t` + 2 user-defined structs:; ```; | Average | Rel. increase; ---------------------------+-----------+--------------; BASE | 2500244.7 |; No callbacks [1] | 2688342.6 | 1.0752; No callbacks [1][2] | 2746363.6 | 1.0984; 1 callback | 2883271.0 | 1.1532; 2 callbacks | 3016407.0 | 1.2064; ```. As noted in test _(ii)_ for 'No callbacks [1]', non-simple fields have an overhead due to the additional branch. Still, the change in this PR is beneficial. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13487:880,Release,Release,880,https://root.cern,https://github.com/root-project/root/pull/13487,1,['Release'],['Release']
Deployability,"As per Jira ticket ROOT-8483:. Creating a TTreeReaderValue after having looped over a TTreeReader prompts an error message at runtime. This error mentions calling `TTreeReader::Reset` as a solution, but said method does not exist.; Assuming `TTreeReader::Restart` was meant, the patch is trivial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/304:279,patch,patch,279,https://root.cern,https://github.com/root-project/root/pull/304,1,['patch'],['patch']
Deployability,"As per a request by @mnowakgit, it would be useful if `RNTupleWriter::Fill()` returns the number of (uncompressed) bytes written - IIRC, TTree does a similar thing. As `RFieldBase::Append()` already provides the count of written bytes, the changes included in this PR are minimal. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11672.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11674:332,update,updated,332,https://root.cern,https://github.com/root-project/root/pull/11674,1,['update'],['updated']
Deployability,"As reported [on the Forum](https://root-forum.cern.ch/t/build-error-in-the-v6-26-00-patches-branch-fails-to-build-on-ubuntu-18-04/49149):; This is Ubuntu 18.04 LTS / x86_64 / gcc, g++, gfortran 7.5.0 / cmake 3.20.3 here. The building of the current “v6-26-00-patches” branch (as of 2022.03.12) generates an error (“--std=c++14”):; ```; (...); In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQSvc.cpp:14:0:; /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: In member function ‘void ZmqLingeringSocketPtrDeleter<PERIOD>::operator()(zmq::socket_t*)’:; /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:24: error: ‘class zmq::socket_t’ has no member named ‘set’; did you mean ‘send’?; socket->set(zmq::sockopt::linger, PERIOD);; ^~~; send; /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:33: error: ‘zmq::sockopt’ has not been declared; socket->set(zmq::sockopt::linger, PERIOD);; ^~~~~~~; /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: At global scope:; /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:79:36: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type; using ZmqLingeringSocketPtr = std::unique_ptr<zmq::socket_t, ZmqLingeringSocketPtrDeleter<PERIOD>>;; ^~~~~~~~~~; (...); /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:103:6: error: no matching function for call to ‘zmq::socket_t::recv(std::reference_wrapper<zmq::message_t>&, int&)’; In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:17:0,; from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17,; from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:; /usr/include/zmq.hpp:625:23: note: candidate: size_t zmq::socket_t::recv(void*, size_t, int); inline size_t recv (void *buf_, size_t len_, int flags_ = 0); ^~~~; /usr/include/zmq.hpp:625:23: note: no known conv",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10107:84,patch,patches-branch-fails-to-build-on-ubuntu-,84,https://root.cern,https://github.com/root-project/root/issues/10107,7,['patch'],"['patches', 'patches-branch-fails-to-build-on-ubuntu-']"
Deployability,"As reported at: https://github.com/cms-sw/cmssw/issues/36908#issuecomment-1036397481. The problem is the rules are applied to a data member nested inside an object nested inside an STL collection that is a new data member of the class reco::HaloClusterCandidateHCAL, since it is a ""new"" member compared to the layout on file, none of the objects; from the new member down to the object on which the rules need to be run) are actually streamed and the code gathering the information to run the rule got a bit lost ; it is likely (I am checking as we speak) that in previous release the rule was not even attempted to be run ... which might actually be the desired behavior in this specific case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9899:573,release,release,573,https://root.cern,https://github.com/root-project/root/issues/9899,1,['release'],['release']
Deployability,"As reported in [ROOT-10490](https://sft.its.cern.ch/jira/browse/ROOT-10490), the way we currently merge histogram statistics in `Add(RHist, RHist)` yields incorrect results. Following discussion with @Axel-Naumann, this PR proposes to resolve this problem by reducing the scope of histogram merging, only accepting the merging of histograms with the same axis configuration (more precisely with identical axis binning), which allows use of a much simpler statistics summation rule. Once accepted, it will resolve [ROOT-10490](https://sft.its.cern.ch/jira/browse/ROOT-10490). cc @rete",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4974:360,configurat,configuration,360,https://root.cern,https://github.com/root-project/root/pull/4974,1,['configurat'],['configuration']
Deployability,"As reported in https://root-forum.cern.ch/t/how-can-i-set-the-tuning-parameters-for-gslsimanminimizer-when-using-root-fitter/45497 the setting of the specific options for the GSLSimAnMinimizer does not work from the Fitter class or the base Minimizer class. This is happening also for other minimizers. This is now fixed in this PR by removing SetOptions() and Options() derived methods (one can use the base class ones) ; and correctly set the options in the solver class before minimizing.; The setting of the options through the Fitter class is fixed by adding a Minimizer::SetExtraOptions method and calling it from FItConfig::CreateMinimizer; ; In addition when not using Minuit or Minuit2 do not have Migrad as default algorithm in MinimizerOptions. An example on how to set the options has been updated in the doc. ; This code example also shows that now setting of the options works:; ```; {; TH1D h1(""h1"",""h1"",100,-3,4) ; ; h1.FillRandom(""gaus""); ; ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""GSLSimAn"") ; ; ROOT::Math::GenAlgoOptions simanOpt; ; ; simanOpt.SetValue(""n_tries"", 1000); ; ROOT::Math::MinimizerOptions::SetDefaultExtraOptions(&simanOpt) ; ; ROOT::Math::MinimizerOptions::SetDefaultPrintLevel(1) ; // options ar enow printed when level is >=1 ; h1.Fit(""gaus"") ;; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8510:802,update,updated,802,https://root.cern,https://github.com/root-project/root/pull/8510,1,['update'],['updated']
Deployability,"As reported in:. https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-10501?filter=allopenissues. commit 1d2e76 deletes the host's Python installation. Here two conditions are introduced to run the command:. - the flag pyroot_experimental was specified during the configuration;; - the variable CMAKE_INSTALL_PREFIX doesn't start with ""/usr"", making; the command run only if the above mentioned variable was customized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4748:140,install,installation,140,https://root.cern,https://github.com/root-project/root/pull/4748,2,"['configurat', 'install']","['configuration', 'installation']"
Deployability,"As requested by Vassil, I replaced the cmake INSTALL directive with the ROOT_INSTALL_HEADERS; directive and added EXCLUDE options for the BLAS and CUDA dependent headers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/299:45,INSTALL,INSTALL,45,https://root.cern,https://github.com/root-project/root/pull/299,1,['INSTALL'],['INSTALL']
Deployability,"As returning an unpacked tuple without parenthesis is only supported since Python 3.8. This patch fixes the following:; ```; python3.7 -m py_compile _rdf_pyz.py; File ""_rdf_pyz.py"", line 253; return v, *args[1:]; ^; SyntaxError: invalid syntax; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11685:92,patch,patch,92,https://root.cern,https://github.com/root-project/root/pull/11685,1,['patch'],['patch']
Deployability,"As seen in the posix_memalign workaround in clang, it seems that; marking modules as system actually has more semantic behavior; than just disabling warnings for them. This patch marks both; STL and libc as system to fix those issues. Also see: https://github.com/Teemperor/clang-modules-bugs/issues/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/931:173,patch,patch,173,https://root.cern,https://github.com/root-project/root/pull/931,1,['patch'],['patch']
Deployability,"As stated in the team meeting a month ago, we need dependencies between rootcling invocations when running with C++ modules because each built module needs to reference any depending C++ modules. This patch also adds a build option for C++ modules that needs to be set for this setting to get active. This build option should replace the environment variable that we had before in areas where it is more practical to have a fixed CMake setting such as running PRs on Jenkins or when having CMake specific code for C++ modules.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/877:201,patch,patch,201,https://root.cern,https://github.com/root-project/root/pull/877,1,['patch'],['patch']
Deployability,"As suggested by @lmoneta, this is now the equivalent PR to https://github.com/root-project/root/pull/9808, but for `hist` instead of `roofit`. For developers, it is unconvenient that the `override` specifier; that flags member functions as overriding on first sight is not used so; much in `hist`. Now that the v6.28 development cycle has just started and there are no; major developments in the pipeline yet, I think it is a good time to add; the missing `override` specifiers everywhere in `hist`, as done already; for RooFitV. This commit was generated more or less automatically with this Python; script that uses `clang-tidy`:. ```Python; import os; import glob; import subprocess; import tqdm. """"""; For clang-tidy to work, you have to copy the compile_commands.json from the; build directory back into the repo directory (just like in; .ci/copy_headers.sh).; """""". def get_sources(directory, extensions):. files = []. for ext in extensions:; files += glob.glob(; os.path.join(directory, ""**/*"" + ext), recursive=True; ). return files. """"""; Recursively find extensions in directory, to figure out whic hextensions; should be globbed for.; find . -type f -name '*.*' | sed 's|.*\.||' | sort -u; """"""; extensions = ["".h"", "".hpp"", "".cpp"", "".cc"", "".cxx""]. """"""; Some extensions are recognized as C and not as C++ files by clang-tidy. We; need to rename them, and this dict specifies how file extensions should be; replaced.; """"""; rename_dict = {"".h"": "".hpp""}. files = get_sources(""hist"", extensions). cflags = (; subprocess.check_output([""root-config"", ""--cflags""]).strip().decode(""utf-8""); ). for file in tqdm.tqdm(files):. file_renamed = file; for ext, ext_renamed in rename_dict.items():; if file.endswith(ext):; file_renamed = file.replace(ext, ext_renamed). if file_renamed != file:; os.rename(file, file_renamed). cmd = [; ""clang-tidy"",; ""-checks=modernize-use-override"",; ""--fix"",; file_renamed,; ""--"",; ] + cflags.split("" ""); subprocess.call(cmd, stdout=subprocess.DEVNULL, stderr=subprocess.DEV",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9883:396,pipeline,pipeline,396,https://root.cern,https://github.com/root-project/root/pull/9883,1,['pipeline'],['pipeline']
Deployability,"As suggested by @lmoneta, this is now the equivalent PR to; https://github.com/root-project/root/pull/9808, but for `math` instead; of `roofit` because inheritance is also used a lot in Math. For developers, it is unconvenient that the `override` specifier; that flags member functions as overriding on first sight is not used so; much in `hist`. Now that the v6.28 development cycle has just started and there are no; major developments in the pipeline yet, I think it is a good time to add; the missing `override` specifiers everywhere in `hist`, as done already; for RooFit. This commit was generated more or less automatically with this Python; script that uses `clang-tidy`:. ```Python; import os; import glob; import subprocess; import tqdm. """"""; For clang-tidy to work, you have to copy the compile_commands.json from the; build directory back into the repo directory (just like in; .ci/copy_headers.sh).; """""". def get_sources(directory, extensions):. files = []. for ext in extensions:; files += glob.glob(; os.path.join(directory, ""**/*"" + ext), recursive=True; ). return files. """"""; Recursively find extensions in directory, to figure out whic hextensions; should be globbed for.; find . -type f -name '*.*' | sed 's|.*\.||' | sort -u; """"""; extensions = ["".h"", "".hpp"", "".hxx"", "".cpp"", "".cc"", "".cxx""]. """"""; Some extensions are recognized as C and not as C++ files by clang-tidy. We; need to rename them, and this dict specifies how file extensions should be; replaced.; """"""; rename_dict = {"".h"": "".hpp""}. files = get_sources(""math"", extensions). cflags = (; subprocess.check_output([""root-config"", ""--cflags""]).strip().decode(""utf-8""); ). for file in tqdm.tqdm(files):. file_renamed = file; for ext, ext_renamed in rename_dict.items():; if file.endswith(ext):; file_renamed = file.replace(ext, ext_renamed). if file_renamed != file:; os.rename(file, file_renamed). cmd = [; ""clang-tidy"",; ""-checks=modernize-use-override"",; ""--fix"",; file_renamed,; ""--"",; ] + cflags.split("" ""); subprocess.ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10083:445,pipeline,pipeline,445,https://root.cern,https://github.com/root-project/root/pull/10083,1,['pipeline'],['pipeline']
Deployability,"As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to; skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice. (cherry picked from commit 79a669bb1cd0ccd8bcaeb6c8f6b09c5ced761ac7). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8929:391,update,updated,391,https://root.cern,https://github.com/root-project/root/pull/8929,1,['update'],['updated']
Deployability,"As we discussed in #2644, the nicest interface for printing is; printValue, and we should support people using this rather than going; through cling::Value::print(). This patch contains:; - Implementation of declarePrintValue; - Re-Implementation of ClingPrintValue because I changed to use Evaluate; some time ago; - removing of RVec version of printValue which wasn't used at all; - Fix test/vecops_rvec.cxx, printValue is never supposed to be called by; a normal user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2664:171,patch,patch,171,https://root.cern,https://github.com/root-project/root/pull/2664,1,['patch'],['patch']
Deployability,"Assuming that `page_size` is a power of 2, the calculation of the base address of the page can be simplified and avoid a division. According to POSIX, either `MS_SYNC` or `MS_ASYNC` must be specified when calling `msync()`. Failure to include one of these flags will cause `msync()` to fail on some systems. When `msync()` returns -1, the pointer is only considered invalid when errno is set to `ENOMEM`. In principle, the other possible values for errno won't happen, but if they do, that should be considered an error, hence the assert condition needed an update. `EBUSY` shouldn't happen since we do not add `MS_INVALIDATE` to flags, and `EINVAL` shouldn't happen because we always pass a multiple of the page size to msync(). `EFAULT` is only used in Linux 2.4.18 and earlier instead of `ENOMEM`. See #4136 for more information.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4159:558,update,update,558,https://root.cern,https://github.com/root-project/root/pull/4159,1,['update'],['update']
Deployability,"At construction time, RDataFrame sets its number of processing slots; equal to ROOT::GetImplicitMTPoolSize(). We always want to; construct TTreeProcessorMT's thread pool with a size equal to; RDF::GetNSlots(). Besides being more robus (less reliance on shared global state),; this patch guarantees that if the number of threads in the thread pool; is different than what RDF requests, we get a warning from TThreadExecutor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5293:281,patch,patch,281,https://root.cern,https://github.com/root-project/root/pull/5293,1,['patch'],['patch']
Deployability,"At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing; https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465; to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14061:267,configurat,configuration,267,https://root.cern,https://github.com/root-project/root/issues/14061,1,['configurat'],['configuration']
Deployability,"Attempting to improve the situation regarding segfaults seen in the RBatchGenerator tutorials. Generally, the situation triggering the segfaults is:. 1. Main process is running Python code; 2. Spawns a C++ thread, which runs RDataFrame code; 3. Main thread will call into the interpreter via cppyy; 4. Data races happen. UPDATE:. The commits were update after discussion with @pcanal. The general strategy is to write the locks further deep in the call chain when possible (e.g. in the context of this PR, `TFunction` is a higher-level class than `TClingMethodInfo`, so the locks are better placed in the latter).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13302:321,UPDATE,UPDATE,321,https://root.cern,https://github.com/root-project/root/pull/13302,2,"['UPDATE', 'update']","['UPDATE', 'update']"
Deployability,"Avoids some memory allocations when the internal unzip buffer is never used throughout the decompressor's lifetime (since RNTupleDecompressor allocates a Buffer_t when default constructed).; With this change, RPageStorageDaos doesn't need to allocate a decompressor anymore. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15982:326,update,updated,326,https://root.cern,https://github.com/root-project/root/pull/15982,1,['update'],['updated']
Deployability,"BRARY); -- GFAL library not found. Set variable GFAL_DIR to point to your gfal installation; and the variable SRM_IFCE_DIR to the srm_ifce installation; -- For the time being switching OFF 'gfal' option; -- Could NOT find FTGL (missing: FTGL_INCLUDE_DIR FTGL_LIBRARY); -- ftgl library not found. Set variable FTGL_ROOT_DIR to point to your installation; -- For the time being switching ON 'builtin_ftgl' option; -- Checking for module 'davix>=0.6.4'; -- Package 'davix', required by 'virtual:world', not found; -- Looking for uuid_generate_random in uuid; -- Looking for uuid_generate_random in uuid - found; -- Found libuuid: /usr/include; -- Davix dependencies not found, switching OFF 'davix' option.; -- Looking for TBB; -- Found TBB: /usr (Required is at least version ""2018""); -- Looking for VDT; -- Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""); -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH; -- Switching ON 'builtin_vdt' option; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; -- Looking for BLAS for optional parts of TMVA; -- Looking for sgemm_; -- Looking for sgemm_ - not found; -- Looking for sgemm_; -- Looking for sgemm_ - found; -- Found BLAS: /usr/lib/libblas.so; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB - Success; -- Building LLVM in 'Release' mode.; -- The ASM compiler identification is GNU; -- Found assembler: /usr/bin/cc; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND); -- Looking for backtrace; -- Looking for backtrace - found; -- backtrace facility detected in default set of libraries; -- Found Backtrace: /usr/include; -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:7755,install,installation,7755,https://root.cern,https://github.com/root-project/root/issues/10528,1,['install'],['installation']
Deployability,Back port fix on release note 624 (a numbered list was not correct),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7851:17,release,release,17,https://root.cern,https://github.com/root-project/root/pull/7851,1,['release'],['release']
Deployability,"Backport #4806, targeting 6-20 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4838:31,patch,patches,31,https://root.cern,https://github.com/root-project/root/pull/4838,1,['patch'],['patches']
Deployability,Backport #5090 in 6.20 patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5103:23,patch,patches,23,https://root.cern,https://github.com/root-project/root/pull/5103,1,['patch'],['patches']
Deployability,Backport Fix OpenMP shadowing declaration of MnPrint print thread-local variable to 6-24-00-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9326:92,patch,patches,92,https://root.cern,https://github.com/root-project/root/pull/9326,1,['patch'],['patches']
Deployability,"Backport fixes from #6058, #6148, #6079 for supporting cudnn version 8 in 6.22 patches",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6151:79,patch,patches,79,https://root.cern,https://github.com/root-project/root/pull/6151,1,['patch'],['patches']
Deployability,Backport for #9271 to v6-24-00-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9276:31,patch,patches,31,https://root.cern,https://github.com/root-project/root/pull/9276,1,['patch'],['patches']
Deployability,"Backport of #13771, for more flexibility in packaging the ROOT 6.32 release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15586:68,release,release,68,https://root.cern,https://github.com/root-project/root/pull/15586,1,['release'],['release']
Deployability,"Backport of #14751 to the 6.32 release branch. Thanks again, @langenbruch!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15597:31,release,release,31,https://root.cern,https://github.com/root-project/root/pull/15597,1,['release'],['release']
Deployability,"Backport of #15988. Doesn't need to backported further, because 6.32 is the first release that supports PCRE 2.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15997:82,release,release,82,https://root.cern,https://github.com/root-project/root/pull/15997,1,['release'],['release']
Deployability,Backport of #7133 in 6.22 patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7241:26,patch,patches,26,https://root.cern,https://github.com/root-project/root/pull/7241,1,['patch'],['patches']
Deployability,"Backport of #9532. -Wbidirectional= was RedHat's initial proposal that they also shipped; in gcc-8.5.0-4.el8 for CentOS 8. During review, the name was changed; to -Wbidi-chars= which will appear in GCC 12 and was backported to the; next gcc-8.5.0-5.el8. See the mailing list thread at; https://gcc.gnu.org/pipermail/gcc-patches/2021-November/thread.html#583031; for details.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9681:320,patch,patches,320,https://root.cern,https://github.com/root-project/root/pull/9681,1,['patch'],['patches']
Deployability,"Backport of D27629, commit 18805ea951. Original commit message:; ```; Makes sure that the unwind info uses 64bits pcrel relocation if a large; code model is specified and handle the corresponding relocation in the; ExecutionEngine. This can happen with certain kernel configuration (the; same as the one in https://reviews.llvm.org/D27609, found at least on; the ArchLinux stock kernel and the one used on https://www.packet.net/); using the builtin JIT memory manager. Co-authored-by: Yichao Yu <yyc1992@gmail.com>; Co-authored-by: Valentin Churavy <v.churavy@gmail.com>; ```. Note: The handling in ExecutionEngine was committed in a different; revision and is already part of LLVM 9. We need the part about emitting; relocations because eh_frame (allocated in a data section) may be more; than 4Gb away from the code section it references. See the discussion; in https://github.com/cms-sw/cmssw/issues/31123 for context.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7563:268,configurat,configuration,268,https://root.cern,https://github.com/root-project/root/pull/7563,1,['configurat'],['configuration']
Deployability,"Backport of D27629, commit 18805ea951. Original commit message:; ```; Makes sure that the unwind info uses 64bits pcrel relocation if a large; code model is specified and handle the corresponding relocation in the; ExecutionEngine. This can happen with certain kernel configuration (the; same as the one in https://reviews.llvm.org/D27609, found at least on; the ArchLinux stock kernel and the one used on https://www.packet.net/); using the builtin JIT memory manager. Co-authored-by: Yichao Yu <yyc1992@gmail.com>; Co-authored-by: Valentin Churavy <v.churavy@gmail.com>; ```. Note: The handling in ExecutionEngine was committed in a different; revision and is already part of LLVM 9. We need the part about emitting; relocations because eh_frame (allocated in a data section) may be more; than 4Gb away from the code section it references. See the discussion; in https://github.com/cms-sw/cmssw/issues/31123 for context. (cherry picked from commit f481e8fe6df177ec1a50a10b7d76df5fb0b5c2a2). v6.24 version of #7563",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7606:268,configurat,configuration,268,https://root.cern,https://github.com/root-project/root/pull/7606,1,['configurat'],['configuration']
Deployability,Backport of recent fixes and improvements for the upcoming patch release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16071:59,patch,patch,59,https://root.cern,https://github.com/root-project/root/pull/16071,2,"['patch', 'release']","['patch', 'release']"
Deployability,Backport of the TCling changes in https://github.com/root-project/root/pull/4051/. This incorporate the changes of the patch:; https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/templ_ctor.diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4188:119,patch,patch,119,https://root.cern,https://github.com/root-project/root/pull/4188,2,['patch'],"['patch', 'patches']"
Deployability,Backport of the v6.24 release notes update introduced in commit 167039e2b4eb. [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7549:22,release,release,22,https://root.cern,https://github.com/root-project/root/pull/7549,2,"['release', 'update']","['release', 'update']"
Deployability,"Backport of; * https://github.com/root-project/root/pull/16258 (partial, the change in `CIFactory.cpp` is not needed); * https://github.com/root-project/root/pull/16268 (which fixes two Cling tests on macOS and is not exercised by ROOT). The reason I propose these is that `v6-32-00-patches` is the current release with LLVM 16, which would be good to have in a fully working state before merging the upgrade to LLVM 18.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16297:283,patch,patches,283,https://root.cern,https://github.com/root-project/root/pull/16297,3,"['patch', 'release', 'upgrade']","['patches', 'release', 'upgrade']"
Deployability,Backport recent fixes and improvements to 6.32 for patch release,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15846:51,patch,patch,51,https://root.cern,https://github.com/root-project/root/pull/15846,2,"['patch', 'release']","['patch', 'release']"
Deployability,Backport some recent relevant fixes and improvements to the release branch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15468:60,release,release,60,https://root.cern,https://github.com/root-project/root/pull/15468,1,['release'],['release']
Deployability,"Backport two PRs to fix warnings about enum comparisons in the nightlies:. * https://github.com/root-project/root/pull/13360; * https://github.com/root-project/root/pull/13082. The warnings can be seen here:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-28-00-patches/LABEL=ROOT-ubuntu2204,SPEC=cxx20,V=6-28/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13727:300,patch,patches,300,https://root.cern,https://github.com/root-project/root/pull/13727,1,['patch'],['patches']
Deployability,Backports of recent fixes and improvements for the next 6.32 patch release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16018:61,patch,patch,61,https://root.cern,https://github.com/root-project/root/pull/16018,4,"['patch', 'release']","['patch', 'release']"
Deployability,"Backports of recent fixes and improvements for the release. In particular, fixes unused variable warnings and makes the build system more robust.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15531:51,release,release,51,https://root.cern,https://github.com/root-project/root/pull/15531,1,['release'],['release']
Deployability,Backports of recent fixes and improvements to the 6.32 release series.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16079:55,release,release,55,https://root.cern,https://github.com/root-project/root/pull/16079,1,['release'],['release']
Deployability,Backports of tutorial filename updates,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2119:31,update,updates,31,https://root.cern,https://github.com/root-project/root/pull/2119,1,['update'],['updates']
Deployability,"Based on `TClass::DynamicCast()`.; `root` script to check it working https://gist.github.com/BerserkerTroll/b94c2d3e3a5848be7c7dd53e323e1cdb. Besides different cast method, some bugs were fixed, so #200 was actually broken, despite it compiles (nobody has instantiated broken templates). Consider @a885623b7f04d193b299097b189bbb1fd45139e1 (exception-based cast, without bugs) if you want to get rid of `TClass` or apply this https://gist.github.com/BerserkerTroll/b6624c5f74b71293bc9c2059b4e5236a patch to this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/205:497,patch,patch,497,https://root.cern,https://github.com/root-project/root/pull/205,1,['patch'],['patch']
Deployability,"Based on some confusion in today's ROOT IO meeting, update the documentation in `TLeaf` to clear up `fLen` vs `fNdata` vs `fLeafCount`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1534:52,update,update,52,https://root.cern,https://github.com/root-project/root/pull/1534,1,['update'],['update']
Deployability,"Based on the following patch by @wlav :; https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/signaltrycatch.diff. Adds a new exception handler used by cppyy to provide a better debugging experience in presence of errors:; https://cppyy.readthedocs.io/en/latest/debugging.html. It also adds SIGABRT and provides support for signal handling on Windows. The original cppyy patch has been modified to make it backwards compatible, since it eliminated the use of gApplication for exception handling in Unix. In this version, if there is an exception handler (e.g. we are using PyROOT, which defines it via cppyy) we will rely on that handler to treat the exception,; otherwise we fall back to the previous behaviour which relied on gApplication. Windows-related changes to be reviewed by @bellenot.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4671:23,patch,patch,23,https://root.cern,https://github.com/root-project/root/pull/4671,3,['patch'],"['patch', 'patches']"
Deployability,Be more specific on what is a header file to be moved and installed,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/528:58,install,installed,58,https://root.cern,https://github.com/root-project/root/pull/528,1,['install'],['installed']
Deployability,"Because in FindMySQL, the system path are listed before the environment variable provide path, it always favored a system installation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1993:122,install,installation,122,https://root.cern,https://github.com/root-project/root/pull/1993,1,['install'],['installation']
Deployability,"Because of ROOT-10144, the unit test for RooJohnson crashes occasionally.; Unless TFormula v5 is fixed or RooFit is updated to use TFormula v6 (ROOT-10164),; the test needs to stay disabled.; This is ROOT-10173.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3950:116,update,updated,116,https://root.cern,https://github.com/root-project/root/pull/3950,1,['update'],['updated']
Deployability,Because:. * 07a0da40df - (11 days ago) Add missing cling transaction — Philippe Canal (origin/v6-14-00-patches). Was inadvertently added directly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2183:103,patch,patches,103,https://root.cern,https://github.com/root-project/root/pull/2183,1,['patch'],['patches']
Deployability,"Befor we switched JSROOT to the local instances of the JS libraries, we could use jupyter with all features right after sourcing `thisroot.*`. Due to the switch, the path to the JS libraries was broken, which is now fixed by this PR. This makes `root --notebook` redundant in this case. Still to be added is the correct behaviour when ROOT is installed. I'll line out here how it should be done:. 1. We should abandon the `.rootnb` folder in `HOME` and use the default `.jupyter` folder.; 2. There, we have to add our config to the `jupyter_notebook_config.py` file, which is basically nothing else than `c.NotebookApp.extra_static_paths.append('/path/to/root/js')`.; 3. I think we should just get rid of the custom css things, which would be made default if installed into `.jupyter`.; 4. Install the ROOT kernel in `/usr/share/jupyter/kernels/root`, such as all other kernels. I would go first with this PR, which only improves the current behaviour. Next I'll have a look into a proper installation of our jupyter related files, but I'll make another PR for that. **Edit:** I've fixed the installation to a prefix. This just fixes the current issues but keeps the old installation/sourcing behaviour of jupyroot. We can refactor in another RP later!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6155:343,install,installed,343,https://root.cern,https://github.com/root-project/root/pull/6155,6,"['Install', 'install']","['Install', 'installation', 'installed']"
Deployability,"Before gcc 7.3 there is an issue passing a non-movable pair<string, unique_ptr<T>> into unordered_map::insert. A standalone reproducer is at https://godbolt.org/z/1ror6sqPx . This patch works around it by using operator[] + assignment instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11470:180,patch,patch,180,https://root.cern,https://github.com/root-project/root/pull/11470,1,['patch'],['patch']
Deployability,"Before importing cppyy from PyROOT, instead of specifying the location of the PCH, we can just use the magic word 'none' to tell cppyy not to check the PCH. In both cases, the objective is to avoid a warning from cppyy when importing it. This needs to be merged after the next update of `cppyy-backend`, when a new release is out. The related discussion with Wim is here:; https://bitbucket.org/wlav/cppyy/issues/62/new-check-in-loaderpy-uses-wrong-include",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3555:277,update,update,277,https://root.cern,https://github.com/root-project/root/pull/3555,2,"['release', 'update']","['release', 'update']"
Deployability,Before llvm 13 it was not possible to parse `nlohmann/json.hpp` include. Therefore `json_fwd.hpp` was used. . But it was missing on several platforms where external `nlohmann/json.hpp` has to be used. Now after llvm upgrade it is not necessary to use it.; This should simplify ROOT building and usage on platforms with installed `nlohmann/json.hpp`. Also should fix #14634,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14643:216,upgrade,upgrade,216,https://root.cern,https://github.com/root-project/root/pull/14643,2,"['install', 'upgrade']","['installed', 'upgrade']"
Deployability,Before llvm 13 it was not possible to parse nlohmann/json.hpp include. Therefore json_fwd.hpp was used. But it was missing on several platforms where external nlohmann/json.hpp has to be used. Now after llvm upgrade it is not necessary to use it.; This should simplify ROOT building and usage on platforms with installed nlohmann/json.hpp. Porting of changes in 6.30 branch from #14643 to master,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14663:208,upgrade,upgrade,208,https://root.cern,https://github.com/root-project/root/pull/14663,2,"['install', 'upgrade']","['installed', 'upgrade']"
Deployability,Before several objects like `TLine` and `TGaxis` could be recreated and drawn during `TRatioPlot::Paint()` which was wrong approach. Now in paint only attributes are updated - all necessary objects created when `TRatioPlot::Draw()` is called. Put `TRatioPlot` as first primitive in the pad. By this `TGaxis` and `TLine` attributes updated before they will be actually painted. Improve signals handling. Only one `TRatioPlot::fIsUpdate` is used now to prevent multiple actions at once. Make it transient. Adjust `stressGraphics` refs files - PDF and PS are smaller now while less dummy primitives are created,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14891:166,update,updated,166,https://root.cern,https://github.com/root-project/root/pull/14891,2,['update'],['updated']
Deployability,Before the fix it was alsways used an output width by default equal to 1. Now the default output width of the last dense layer is set to the number of classes. Update multiclass tutorial to use MethodDL,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5553:160,Update,Update,160,https://root.cern,https://github.com/root-project/root/pull/5553,1,['Update'],['Update']
Deployability,"Before the passmanager update, the function `populateModulePassManager` was called instead of `buildPerModuleDefaultPipeline` to set the default passes. But the former did not have `RelLookupTableConverterPass` turned on by default. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14598",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14622:23,update,update,23,https://root.cern,https://github.com/root-project/root/pull/14622,2,['update'],"['update', 'updated']"
Deployability,"Before this commit, calling `RVec<T> v(n)` where `T` is a move-only type would fail to compile because, internally, the operation was implemented in terms of a std::uninitalized_fill of the first `n` elements in the buffer, and std::uninitalized_fill needs the type to be copy-assignable. With this patch we use (a backport of) C++17's; std::uninitialized_value_construct instead for that case, which is works for move-only types as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11710:299,patch,patch,299,https://root.cern,https://github.com/root-project/root/pull/11710,1,['patch'],['patch']
Deployability,"Before this commit, if an action with a sample callback (currently; only Snapshot) or a DefinePerSample went out of scope, we did not; deregister the corresponding callbacks from the RLoopManager, which; would try to run them anyway during the following event loop.; As callbacks typically perform a call on the original action or; define objects, this could cause a use-after-delete. With this patch, we now associate each callback to the address of; the corresponding node of the computation graph and remove callbacks; when the nodes go out of scope. This fixes https://github.com/root-project/root/issues/11222.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11251:395,patch,patch,395,https://root.cern,https://github.com/root-project/root/pull/11251,1,['patch'],['patch']
Deployability,"Before this commit, if users requested `VariationsFor(result)` but; `result` did not depend on any variation, we constructed a (no-op); RVariedAction anyway and added it to the computation graph. With this patch we do not add this no-op node to the computation; graph if it's not needed. RResultMap had to be taught how to deal; with this case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10683:206,patch,patch,206,https://root.cern,https://github.com/root-project/root/pull/10683,2,['patch'],['patch']
Deployability,"Before this commit, the logic in SnapshotHelper did not take into; account the case of RVecs that are being read from an input TTree; (that was not possible until v6.26). Because of how the logic was; structured, that meant that Snapshot was trying to write out those; RVecs as C-style arrays instead, obviously badly failing at it. This patch tries to make the flow of this logic a bit more readable; and fixes the problem mentioned above by treating input branches; of RVec type the same way we already treat std::vectors. This fixes https://github.com/root-project/root/issues/10225.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10288:338,patch,patch,338,https://root.cern,https://github.com/root-project/root/pull/10288,1,['patch'],['patch']
Deployability,"Before this commit, the logic in SnapshotHelper did not take into; account the case of RVecs that are being read from an input TTree; (that was not possible until v6.26). Because of how the logic was; structured, that meant that Snapshot was trying to write out those; RVecs as C-style arrays instead, obviously badly failing at it. This patch tries to make the flow of this logic a bit more readable; and fixes the problem mentioned above by treating input branches; of RVec type the same way we already treat std::vectors. This fixes https://github.com/root-project/root/issues/10225. @pcanal the logic in this commit could be simplified if instead of ""if it's not every other case, it must be a C-style array"" I could do instead ""if it's not a C-style array, then it must be one of the other cases"". But I'm not sure how to check for ""branch is a C-style array"", see https://mattermost.web.cern.ch/root/pl/4n1qbh363tdfjc1hs3khe6y84o",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10268:338,patch,patch,338,https://root.cern,https://github.com/root-project/root/pull/10268,1,['patch'],['patch']
Deployability,"Before this commit, when using TTreeReader to loop over a dataset with; a friend TTree with more entries than the main TTree, TTreeReader would; run the event loop until the last entry _of the friend_, beyond the end; of the main TTree. This is inconsistent with the behavior of e.g. TTree::Draw, as well as; the behavior of TTreeReader itself when fTree is a TChain rather than a; TTree.; This issue is described in more detail at; https://github.com/root-project/root/issues/6518. With this patch, we quit the event loop as soon as the entries of the; main tree are over. This fixes #6518.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7152:493,patch,patch,493,https://root.cern,https://github.com/root-project/root/pull/7152,1,['patch'],['patch']
Deployability,"Before this commit, when you update the code in; `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. This commit fixes this situation by introducing intermediate CMake targets, resulting in the Python sources in the build and install directories being updated when changed in the source directory. Closes #11233.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11435:29,update,update,29,https://root.cern,https://github.com/root-project/root/pull/11435,5,"['install', 'update']","['install', 'installing', 'update', 'updated']"
Deployability,"Before this commit, whenever a function was constructing a node; of the computation graph it had to ""remember"" to also register; that node with the RLoopManager, which needs to know which nodes; are around so it can tell them e.g. to execute task initialization; and task finalization logic.; Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and; deregistration in the destructor of a node, i.e. this logic is; where a reader might expect it to be and new code does not have; to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,; RJittedDefine) don't need to register themselves with the; RLoopManager: the _concrete_ nodes will be registered right; before the event loop, at jitting time, and that is good enough.; RJittedFilter is an exception: RLoopManager needs to know what; filters have been booked even before the event loop (i.e. before; concrete filters are instantiated by jitted code) in order to; return a correct list from RLoopManager::GetFiltersNames().; So RJittedFilters register themselves with RLoopManager at; construction time and deregister themselves in; RJittedFilter::SetFilter, i.e. when they can be sure that the; concrete filter has been instantiated in jitted code and it has; been registered with RLoopManager, making the RJittedFilter; registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10653:354,patch,patch,354,https://root.cern,https://github.com/root-project/root/pull/10653,1,['patch'],['patch']
Deployability,"Before this patch (and since a2156969b4), Snapshot was enforcing; alphabetical ordering of the output branches. The ordering; specified as argument, however, could carry meaning: it might; make sense to have branches carrying related physics information; close together in the TTree so that they appear close to each; other e.g. in TTree::Print or in TBrowser. With this patch we keep the original column ordering (the one; explicitly specified by the user or the one coming from TTree); when creating output branches. One exception are branches from the input TTree that are; Redefine'd in case of auto-generated lists of output columns:; Define'd and Redefine'd columns appear before TTree branches,; which might move the position of branches that have been; Redefine'd with respect to others that have not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11116:12,patch,patch,12,https://root.cern,https://github.com/root-project/root/pull/11116,2,['patch'],['patch']
Deployability,"Before this patch RDF would first, eagerly, declare a dummy lambda; that contained the user-defined expression to check verify the cling; could understand it; then, lazily, the actual lambda variable used; by the nodes of the computation graph was jitted, together with all; other declarations required by RDF, just before the event loop. With this patch, the first declaration serves both purposes: it checks; that the expression is just-in-time compilable _and_ jits precisely the; definition that will be required during the event loop. This removes; redundant logic and results in strictly less work required of the; interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5487:12,patch,patch,12,https://root.cern,https://github.com/root-project/root/pull/5487,2,['patch'],['patch']
Deployability,Before this patch `ColumnName2ColumnTypeName` would silently return an empty string for the TTree branch type if it did not belong to one of the known listed categories (this what e.g. the cause of [ROOT-9130](ROOT-9130)).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1480:12,patch,patch,12,https://root.cern,https://github.com/root-project/root/pull/1480,1,['patch'],['patch']
Deployability,Before this patch we skipped running CleanUpTask if the status; of the TTreeReader after a single-thread event loop over ROOT data; encountered an error.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8337:12,patch,patch,12,https://root.cern,https://github.com/root-project/root/pull/8337,2,['patch'],['patch']
Deployability,"Before this patch, RCustomColumnBase's destructor could access; RLoopManager after deletion in some cases, e.g. when jitting code after; the computation graph was already out of scope or when the RLoopManager; was kept alive only by another node's shared_ptr to it. I think we never; saw a crash due to this bug because the use is _right after_ deletion,; and there is never an allocation between deletion and use. Valgrind; still sees it though. Thanks to the previous commit, all the logic that entangled RLoopManager; and RCustomColumns can actually be removed, and in particular; RCustomColumnBase's destructor does not need to access RLoopManager; anymore, fixing the use after delete. A minimal reproducer for the use after delete:. ```cpp; auto f = ROOT::RDataFrame(1).Filter([] { return true; });; ```. Before RFilter is destructed, it deletes its fPrevNode (shared_ptr to; the previous node), which triggers destruction of RLoopManager. Later,; RFilterBase is destructed, which triggers destruction of its registered; custom columns (in this case, the default ""rdfentry_"" or ""rdfslot_""; columns) and ~RCustomColumnBase tries to access RLoopManager.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5544:12,patch,patch,12,https://root.cern,https://github.com/root-project/root/pull/5544,1,['patch'],['patch']
Deployability,"Before this patch, TTreeProcessorMT::Process activated implicit; multi-threading features (and never disabled them). One undesired; side-effect was that ROOT's thread-pool was not destructed after; TTreeProcessorMT was destructed. After this patch, TTreeProcessorMT; multi-thread TTree processing and activation of implicit; multi-threading features are disentangled, and users are; required to call EnableImplicitMT explicitly to activate IMT.; This is consistent with TThreadExecutor's behavior.; This fixes ROOT-10656.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5304:12,patch,patch,12,https://root.cern,https://github.com/root-project/root/pull/5304,2,['patch'],['patch']
Deployability,"Before this patch, aliases of defined columns were jitted in namespace; __rdfX with X monotonously increasing. That is strictly unnecessary,; as every alias already contains a unique ID. This patch makes RDF more consistent (everything is jitted in the same namespace), and as a consequence we can simplify the signature of several helper functions and can remove a data member and relative getter from RLoopManager.; The change also helps with re-usage of jitted lambdas ([ROOT-10657](https://sft.its.cern.ch/jira/browse/ROOT-10657) as the type signatures of jitted lambdas of different RDF computation graphs will not contain different namespaces anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5354:12,patch,patch,12,https://root.cern,https://github.com/root-project/root/pull/5354,2,['patch'],['patch']
Deployability,"Before this patch, each node in the computation graph was; re-creating or re-requesting column readers for datasource and TTree/TChain; columns separately. We now create column readers for datasource and TTree/TChain columns early and; store them in RLoopManager which then gives out pointers to the; same RColumnReaderBase objects to all nodes. This is the first part of a series of changes aimed at; centralizing ownership and creation of all kinds of column; readers (defines and variations will come in a subsequent PR).; Sharing column readers among nodes of the computation; graph saves some redundant work and it is a pre-requisite for bulk; processing at the level of RDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10793:12,patch,patch,12,https://root.cern,https://github.com/root-project/root/pull/10793,1,['patch'],['patch']
Deployability,"Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`; 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc.; 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out.; I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8529:12,patch,patch,12,https://root.cern,https://github.com/root-project/root/pull/8529,2,['patch'],['patch']
Deployability,"Before this patch, given a TTree with a branch with name _different_; from its leaf, e.g. like this:. ```; *Br 0 :NUD_total_ADC : nud_total_adc/D; ```. RDataFrame only added ""branchname.leafname"" to the list of available; columns (i.e. ""NUD_total_ADC.nud_total_adc"" in the example). In comparison, in a similar situation `TTree::Draw` also accepts; just ""NUD_total_ADC"" as it assumes that the desired leaf is the; first sub-leaf of the specified branch. With this patch, RDataFrame also considers ""NUD_total_ADC"" as a valid; column name as long as it has only one sub-leaf. This, together with previous fixes in TTreeReader, fixes ROOT-9558.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7918:12,patch,patch,12,https://root.cern,https://github.com/root-project/root/pull/7918,2,['patch'],['patch']
Deployability,"Before this patch, given a TTree with a branch with name different; from its leaf, e.g. like this:. ```; *Br 0 :NUD_total_ADC : nud_total_adc/D; ```. TTreeReaderValue failed to retrieve the leaf when the named passed; to the constructor was just ""NUD_total_ADC"" (while it worked fine; with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar; situation `TTree::Draw` ""tries harder"" and it assumes that the; desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`; and as a last resort it picks the branch sub-leaf if it exists and; it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7889:12,patch,patch,12,https://root.cern,https://github.com/root-project/root/pull/7889,4,['patch'],['patch']
Deployability,"Before this patch, if a RLoopManager went out of scope before running; its event loop (a rare occurrence, but indeed possible, especially in; interactive sessions), we were leaking certain weak_ptrs and shared_ptrs; to components of the computation graph, that were meant to be used by; lazily jitted code that was never actually jitted in the end. With this change, when _any_ RLoopManager runs the event loop, we; trigger execution of _all_ jitted code that was registered, even if; it was registered by an RLoopManager that is now out of scope. In the; latter case, the code only performs clean-up of the heap-allocated; weak_ptrs and shared_ptrs and exits. We still ""leak"" in the odd case; in which RDF jitted code is registered but the application never actually; triggers any RDF event loops, in which case the code to be lazily jitted; remains in the pipeline until the end of the application, and parts of; the computation graph are kept alive indefinitely by heap-allocated shared_ptrs. For this to work, we need to detect when compiled objects went out of scope and we don't actually have to run the jitted code but just perform the clean-up, so we switch from heap-allocated shared_ptrs to heap-allocated weak_ptrs for those objects.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5488:12,patch,patch,12,https://root.cern,https://github.com/root-project/root/pull/5488,2,"['patch', 'pipeline']","['patch', 'pipeline']"
Deployability,"Before this patch, in cases in which t.GetBranch(""a.b"") and; t.GetBranch(""b"") both returned a valid address, RDataFrame was adding; only ""a.b"" to the list of valid TTree columns.; With this patch, both ""a.b"" and ""b"" are recognized as valid column names. We need this change in behavior to avoid a _worse_ change in behavior,; described in detail in ROOT-10942: since ROOT-10702 was fixed,; TTree::GetBranch became more powerful and started returning non-null; addresses for branch names with form ""a.b"" while it was returning a; nullptr until v6.20/06. With RDataFrame's previous logic, this in turn; meant that valid code that was using ""a"" as a column broke as RDataFrame; was now adding the ""a.b"" spelling to the list of valid columns instead. This fixes the RDF-related part of ROOT-10942: ""a"" is recognized as a; valid spelling again, and ""a.b"" is kept as a new valid spelling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6072:12,patch,patch,12,https://root.cern,https://github.com/root-project/root/pull/6072,2,['patch'],['patch']
Deployability,"Before this patch, in order to assert that the column type; returned by a Vary expression matched the type of the column we; always asked cling to provide a type id for the existing column; via TypeName2TypeID(GetColumnType(colName)). That failed if the; column had a type not known to the interpreter, e.g. because it; was Define'd and the expression returned a user-defined type. With this patch we use the typeid information coming from the; RDefine node if it is available, otherwise we try with cling. A corresponding test is coming soon in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10602:12,patch,patch,12,https://root.cern,https://github.com/root-project/root/pull/10602,2,['patch'],['patch']
Deployability,"Before this patch, we were iterating until the end of the map; rather than until the end of the equal_range (this was not a; problem in practice because program logic guaranteed that we would; find what we were looking for and break out of the loop early).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10847:12,patch,patch,12,https://root.cern,https://github.com/root-project/root/pull/10847,1,['patch'],['patch']
Deployability,"Before this patch: the destructor of a derived node type destroyed; its shared_ptr to the previous node. The destructor of the base node; type, called _afterwards_, called fLoopManager->Deregister(this).; In the special case in which the previous node was precisely; RLoopManager and no other RInterfaces or nodes held a shared_ptr to; it, the RLoopManager was being destructed (in the dtor of the derived class); just before that same node called Deregister on it (in the dtor of the; base class). After this patch: the derived node types are responsible for calling; Deregister, before destroying the shared_ptr to previous node. This fixes the use after delete reported in ROOT-9898.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3248:12,patch,patch,12,https://root.cern,https://github.com/root-project/root/pull/3248,2,['patch'],['patch']
Deployability,"Before, ""make version"" needed to have ROOT built to run root.exe, to then rebuild ROOT. Cut down on rebuilds during releases by relying on a python script instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5095:116,release,releases,116,https://root.cern,https://github.com/root-project/root/pull/5095,1,['release'],['releases']
Deployability,"Benchmarks.cxx:1:; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1760:40: error: parameter ‘slot’ set but not used [-Werror=unused-but-set-parameter]; 1760 | void UpdateCArraysPtrs(unsigned int slot, ColTypes &... values, std::index_sequence<S...> /*dummy*/); ```. I'm sure similar warnings also pop up in other places, but I just; happened to notice them in `rootbench`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14044:2148,Update,UpdateCArraysPtrs,2148,https://root.cern,https://github.com/root-project/root/pull/14044,1,['Update'],['UpdateCArraysPtrs']
Deployability,"Beside the general aversion against using an environment variable; for this setting, it also turns out that we can't easily set an; environment variable for a rootcling invocation in roottest. This patch adds the -cxxmodule flag to rootcling to allow activating; this feature without the old environment variable. For backwards; compability, we keep the ROOT_MODULES support around (for now).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1463:198,patch,patch,198,https://root.cern,https://github.com/root-project/root/pull/1463,1,['patch'],['patch']
Deployability,"Better English, better Markdown formatting, less typos, updated references.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1082:56,update,updated,56,https://root.cern,https://github.com/root-project/root/pull/1082,1,['update'],['updated']
Deployability,"Bloom filter in header section of so files is well described by:; https://blogs.oracle.com/solaris/gnu-hash-elf-sections-v2; and; lld/ELF/SyntheticSections.cpp. The point is that the static linker puts bloom filter value to .gnu.hash section; in so files. We just have to read this value and compare to the; mangled_name hash that we're looking for. Bloom filter is a false posive; probability data structure, so it might say ""yes"" to library which; ""doesn't"" contain mangled_name, but it won't say ""no"" to library which; ""do"" contain mangled_name. Modules W/O this patch; ```; Processing tutorials/hsimple.C...; hsimple : Real Time = 0.04 seconds Cpu Time = 0.03 seconds; (TFile *) 0x562b37a14fe0; Processing /home/yuka/CERN/ROOT/memory.C...; cpu time = 0.362307 seconds; sys time = 0.039741 seconds; res memory = 278.215 Mbytes; vir memory = 448.973 Mbytes; ```. Modules With this patch; ```; Processing tutorials/hsimple.C...; hsimple : Real Time = 0.05 seconds Cpu Time = 0.05 seconds; (TFile *) 0x564410677780; Processing /home/yuka/CERN/ROOT/memory.C...; cpu time = 0.356471 seconds; sys time = 0.079519 seconds; res memory = 266.73 Mbytes; vir memory = 423.59 Mbytes; ```. This difference become bigger when we need to lookup more libraries in; experiments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2131:566,patch,patch,566,https://root.cern,https://github.com/root-project/root/pull/2131,2,['patch'],['patch']
Deployability,"Both EnableEmplicitMT and TThreadExecutor implementations share the; same task scheduler and the number of threads it has been set to run on. This patch modifies TThreadExecutor so it:. * avoids the termination (from TThreadExecutor) of the scheduler; initialized by EnableEmplicitMT.; * warns the user if she/he tries to change an already-set number of; threads, as the scheduler will always take the value of its first; initialization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/326:147,patch,patch,147,https://root.cern,https://github.com/root-project/root/pull/326,1,['patch'],['patch']
Deployability,Both of these directories are needed if you have a non-standard location for LibXML2's needs. This is currently a manual patch in the root-feedstock for conda-forge. See <https://github.com/Kitware/CMake/blob/master/Modules/FindLibXml2.cmake>.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3381:121,patch,patch,121,https://root.cern,https://github.com/root-project/root/pull/3381,1,['patch'],['patch']
Deployability,"Branch: v6-22-00-patches (I checked master has the same issue). On file:; **root_src/core/base/src/TEnv.cxx**. in the implementation of the function: **TEnv::SetValue**; **line#: 784**. ```; void TEnv::SetValue(const char *name, double value); {; SetValue(name, Form(""%g"", value));; }. ```; the argument value should be **Double_t** as declared in the correspoinding TEnv.h file. Regards,; Danilo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6425:17,patch,patches,17,https://root.cern,https://github.com/root-project/root/issues/6425,1,['patch'],['patches']
Deployability,"Bugfix release, tagged in JSROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12563:7,release,release,7,https://root.cern,https://github.com/root-project/root/pull/12563,1,['release'],['release']
Deployability,Build github release into version release procedure,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11197:13,release,release,13,https://root.cern,https://github.com/root-project/root/issues/11197,2,['release'],['release']
Deployability,Build system updates,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2382:13,update,updates,13,https://root.cern,https://github.com/root-project/root/pull/2382,4,['update'],['updates']
Deployability,Build system updates (retry),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2384:13,update,updates,13,https://root.cern,https://github.com/root-project/root/pull/2384,1,['update'],['updates']
Deployability,Build system updates and minor fixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5105:13,update,updates,13,https://root.cern,https://github.com/root-project/root/pull/5105,1,['update'],['updates']
Deployability,Build system updates to address #8193,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8197:13,update,updates,13,https://root.cern,https://github.com/root-project/root/pull/8197,1,['update'],['updates']
Deployability,Build system updates to remove globbing from CMakeLists.txt,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2704:13,update,updates,13,https://root.cern,https://github.com/root-project/root/pull/2704,1,['update'],['updates']
Deployability,Build type updates,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4332:11,update,updates,11,https://root.cern,https://github.com/root-project/root/pull/4332,1,['update'],['updates']
Deployability,"Building ROOT with gcc 11.2.0 on a centos7 system with the following configuration:. cmake -DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_EXTENSIONS=Off -DCMAKE_INSTALL_PREFIX=/opt/root/v6-26-02_gc112_c17 -GNinja ../src. fails with the following error:; ```; [2542/9705] Performing download step (download, verify and extract) for 'XROOTD'; FAILED: builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download /bld6/root/bld/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download ; cd /bld6/root/bld/builtins/xrootd/XROOTD-prefix/src && /bld4/opt/cmake/3.22.2/bin/cmake -P /bld6/root/bld/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download-Release.cmake && /bld4/opt/cmake/3.22.2/bin/cmake -E touch /bld6/root/bld/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download; CMake Error at XROOTD-stamp/XROOTD-download-Release.cmake:49 (message):; Command failed: 1. '/bld4/opt/cmake/3.22.2/bin/cmake' '-Dmake=' '-Dconfig=' '-P' '/bld6/root/bld/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download-Release-impl.cmake'. ```. attached are the XROOTD-download-err.log and XROOTD-download-out.log; [XROOTD-download-err.log](https://github.com/root-project/root/files/8624870/XROOTD-download-err.log); [XROOTD-download-out.log](https://github.com/root-project/root/files/8624872/XROOTD-download-out.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10527:69,configurat,configuration,69,https://root.cern,https://github.com/root-project/root/issues/10527,4,"['Release', 'configurat']","['Release', 'Release-impl', 'configuration']"
Deployability,Builtin TBB library sometimes not found (or more exactly the one install in /usr/lib sometimes take priority),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13079:65,install,install,65,https://root.cern,https://github.com/root-project/root/issues/13079,1,['install'],['install']
Deployability,"Bumps [minimist](https://github.com/minimistjs/minimist) and [mkdirp](https://github.com/isaacs/node-mkdirp). These dependencies needed to be updated together.; Updates `minimist` from 0.0.8 to 1.2.7; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/minimistjs/minimist/blob/main/CHANGELOG.md"">minimist's changelog</a>.</em></p>; <blockquote>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.6...v1.2.7"">v1.2.7</a> - 2022-10-10</h2>; <h3>Commits</h3>; <ul>; <li>[meta] add <code>auto-changelog</code> <a href=""https://github.com/minimistjs/minimist/commit/0ebf4ebcd5f7787a5524d31a849ef41316b83c3c""><code>0ebf4eb</code></a></li>; <li>[actions] add reusable workflows <a href=""https://github.com/minimistjs/minimist/commit/e115b63fa9d3909f33b00a2db647ff79068388de""><code>e115b63</code></a></li>; <li>[eslint] add eslint; rules to enable later are warnings <a href=""https://github.com/minimistjs/minimist/commit/f58745b9bb84348e1be72af7dbba5840c7c13013""><code>f58745b</code></a></li>; <li>[Dev Deps] switch from <code>covert</code> to <code>nyc</code> <a href=""https://github.com/minimistjs/minimist/commit/ab033567b9c8b31117cb026dc7f1e592ce455c65""><code>ab03356</code></a></li>; <li>[readme] rename and add badges <a href=""https://github.com/minimistjs/minimist/commit/236f4a07e4ebe5ee44f1496ec6974991ab293ffd""><code>236f4a0</code></a></li>; <li>[meta] create FUNDING.yml; add <code>funding</code> in package.json <a href=""https://github.com/minimistjs/minimist/commit/783a49bfd47e8335d3098a8cac75662cf71eb32a""><code>783a49b</code></a></li>; <li>[meta] use <code>npmignore</code> to autogenerate an npmignore file <a href=""https://github.com/minimistjs/minimist/commit/f81ece6aaec2fa14e69ff4f1e0407a8c4e2635a2""><code>f81ece6</code></a></li>; <li>Only apps should have lockfiles <a href=""https://github.com/minimistjs/minimist/commit/56cad44c7f879b9bb5ec18fcc349308024a89bfc""><code>56cad44</code></a></li>; <li>[Dev Deps] update <code>covert</code",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11865:142,update,updated,142,https://root.cern,https://github.com/root-project/root/pull/11865,2,"['Update', 'update']","['Updates', 'updated']"
Deployability,"Bumps [path-parse](https://github.com/jbgutierrez/path-parse) from 1.0.6 to 1.0.7.; <details>; <summary>Commits</summary>; <ul>; <li>See full diff in <a href=""https://github.com/jbgutierrez/path-parse/commits/v1.0.7"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=path-parse&package-manager=npm_and_yarn&previous-version=1.0.6&new-version=1.0.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11863:562,update,updates,562,https://root.cern,https://github.com/root-project/root/pull/11863,1,['update'],['updates']
Deployability,"By chance internal data member is the same as ""subtype"" argument; It is ""backport"" from v6.22 branch (original PR is #6699); Hope, original code will be patched as well - see https://github.com/nlohmann/json/pull/2444",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6703:153,patch,patched,153,https://root.cern,https://github.com/root-project/root/pull/6703,1,['patch'],['patched']
Deployability,"By default saved points is fallback solution when evaluation on the client fails.; But one can force usage of saved points with ""WebGui.TF1UseSave: 2""; Or one can disable saved points usage ""WebGui.TF1UseSave: 0"". Update JSROOT to v 7.7.0 which will be reference for 6.32 release",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15603:214,Update,Update,214,https://root.cern,https://github.com/root-project/root/pull/15603,2,"['Update', 'release']","['Update', 'release']"
Deployability,"By defining `TString::kNPOS` out of class, the symbol is materialized properly also with LLVM>=13. Related to https://github.com/cms-sw/cmssw/issues/43077. Using the snippet at https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225 , these are the numbers reported by different ROOT versions:. ```; $: for n in `ls *.log`; do echo $n; grep openat $n | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l; done; master-2023-12-18-knpos-constexpr-run.log; 2579; master-2023-12-18-knpos-out-of-class-run.log; 307; master-2023-12-18-run.log; 2577; v6-26-14-run.log; 293; v6-28-00-knpos-constexpr-run.log; 2578; v6-28-00-knpos-out-of-class-run.log; 304; v6-28-00-run.log; 2798; ```. Note specifically `v6-28-00-knpos-out-of-class-run.log` and `master-2023-12-18-knpos-out-of-class-run.log` which correspond to respectively a 6.28 and a master build **with** this patch applied. In those cases, the number of `openat` calls falls back down to 6.26 levels. For completennes, @Axel-Naumann suggested to try defining `TString::kNPOS` as `static constexpr Ssiz_t kNPOS{::kNPOS};` inside the class body directly. The numbers are slightly better than the reference, but still quite worse than the case of defining the member variable out of class. See specifically `v6-28-00-knpos-constexpr-run.log` and `master-2023-12-18-knpos-out-of-class-run.log`. . Also, note that after this patch:; ```; $: nm $ROOTSYS/lib/*.so | grep _ZN7TString5kNPOSE | wc -l; 52; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14261:866,patch,patch,866,https://root.cern,https://github.com/root-project/root/pull/14261,2,['patch'],['patch']
Deployability,"By having the explicit template instantiation of `kDimension` with a definition in the header, the compiler emits the symbol in every translation unit that includes this header. This will be complained about by the ongoing upgrade to LLVM 13, but can already be seen today in regular compilation of two translation units. Instead move the template specializations to the library. FIXME: Works for GCC, but not for Clang!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10617:223,upgrade,upgrade,223,https://root.cern,https://github.com/root-project/root/pull/10617,1,['upgrade'],['upgrade']
Deployability,"By moving the header currently hidden in `src/RooFit` to `inc/RooFit` we can allow a roottest build to work when built with an external installation of ROOT. To preserve the intent of the header, the functions declared are moved to the `RooFit::Internal` namespace, as they are not meant for public use. ## Context. This is required for the conda nightlies builds, which build roottest after having built ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14187:136,install,installation,136,https://root.cern,https://github.com/root-project/root/pull/14187,1,['install'],['installation']
Deployability,"By setting a new bit in the TTree object, `kFlushAtCluster`, one can enter the ""one basket per event cluster"" mode. This forces baskets to line up with event clusters, at the cost of extra memory use. This new mode simplifies the basket layout within the file, reducing the amount of time handling special cases for the bulk IO mode. Because the baskets *must* grow to the size of an event cluster, we do not invoke `OptimizeBaskets` when one-basket-per-cluster mode is enabled. As this mode is expected to cause increased memory usage (the memory utilized by the `TTree` is more strongly tied to the variations in event size), we combine this with a technique borrowed from a CMS patchset to more aggressively shrink basket sizes after very large objects. The new basket shrinking algorithm will trigger whenever the basket is flushed. If the actual object size in the last clusters is significantly below the buffer size, then the basket will be shrunk. Given this tradeoff, I do not currently see this being enabled by default. The ideal ratio of `(basket buffer size)/(occupied buffer size)` is controlled by a new tunable in the `TTree`, defaulting to 1.1. A lower setting reduces overall memory usage at the cost of extra allocations; a higher setting increases aggregate memory usage. In writing out a 10k event CMS file (total CPU time is 32 minutes):. - Base case (without this patch):; - 888MB RSS; - 30 reallocations (shrinking of baskets due to low occupancy).; - 0.173ms taken for reallocation.; - New shrinking algorithm (this patch with defaults):; - 866MB RSS; - 4434 reallocations; - 97.0ms; - One basket per cluster mode with new shrinking algorithm:; - 902MB RSS; - 2882 reallocations; - 93.6ms. The CPU-time cost of the reallocation is 0.005% of total runtime (considering the file has to be read also, maybe 0.01% of output time?). This patch purposely leaves in the code that measures reallocation time in order to allow others to experiment; the intent is to disable / remove th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774:681,patch,patchset,681,https://root.cern,https://github.com/root-project/root/pull/774,1,['patch'],['patchset']
Deployability,"By using std::apply, now available after moving to C++17, the implementation can be greatly simplified. # This Pull request:. ## Changes or fixes:; The way the value of a std::ntuple is printed. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; Nothing, it reduces the overall maintenance cost of the root codebase by simplifying it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13619:246,update,updated,246,https://root.cern,https://github.com/root-project/root/pull/13619,1,['update'],['updated']
Deployability,"By using std::apply, now available after moving to C++17, the implementation can be greatly simplified. # This Pull request:. This is a BP of https://github.com/root-project/root/pull/13619. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13887:264,update,updated,264,https://root.cern,https://github.com/root-project/root/pull/13887,1,['update'],['updated']
Deployability,"C++ didn't have wording for class members until C++11. C++ draft, 9.2 [class.mem]; 17) ""Non-static data members of a (non-union) class with the same access control; (Clause 11) are allocated so that later members have higher addresses within a; class object. The order of allocation of non-static data members with different; access control is unspecified (Clause 11). Implementation alignment requirements; might cause two adjacent members not to be allocated immediately after each; other; so might requirements for space for managing virtual functions (10.3) and; virtual base classes (10.1)."". This means fX, fY and fZ indeed get higher addresses but are not guaranteed to be; continuous in memory. This should fix this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/570:681,continuous,continuous,681,https://root.cern,https://github.com/root-project/root/pull/570,1,['continuous'],['continuous']
Deployability,"C++ modules have two concepts -- a modulemap and a module file. The modulemap gives the mapping between a set of header files present in the module file. Clang has two ways to discover these artifacts -- modulemaps must be either explicitly specified or they have to be on the include paths (-I). Module files must be in the module cache path or the prebuilt module path. ROOT enforces the module files to be next to the library files. In some cases it the LD_LIBRARY_PATH is considered to extend the set of discoverables ROOT libraries. Over the years we have considered the LD_LIBRARY_PATH as the prebuilt module file locations. Relying on it leads to a number of issues. First, the osx system integrity protection filters its contents. Second, the LCG distribution mechanism can set the LD_LIBRARY_PATH to point to a complementary location of ROOT. In this case we will start loading irrelevant module files. This patch disables the LD_LIBRARY_PATH module discovery and relies on ROOT to provide its set of locations where modules should be present. Nowadays the current state of the implementation allows us to enforce this finer granularity.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4540:917,patch,patch,917,https://root.cern,https://github.com/root-project/root/pull/4540,1,['patch'],['patch']
Deployability,"C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value); ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('; constexpr explicit(; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ~~~~~~~~~~~~~~~~~~ ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6143:1531,release,release,1531,https://root.cern,https://github.com/root-project/root/pull/6143,2,['release'],['release']
Deployability,CI: fix release binaries (backport v630),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13847:8,release,release,8,https://root.cern,https://github.com/root-project/root/pull/13847,1,['release'],['release']
Deployability,CI: releases,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12272:4,release,releases,4,https://root.cern,https://github.com/root-project/root/issues/12272,1,['release'],['releases']
Deployability,CMake integration with external projects,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/916:6,integrat,integration,6,https://root.cern,https://github.com/root-project/root/pull/916,1,['integrat'],['integration']
Deployability,CMake updates and fixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4096:6,update,updates,6,https://root.cern,https://github.com/root-project/root/pull/4096,1,['update'],['updates']
Deployability,"CUDA 11 now supports C++17, which has `std::string_view`. Make sure the configuration when using CUDA allows it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6079:72,configurat,configuration,72,https://root.cern,https://github.com/root-project/root/pull/6079,1,['configurat'],['configuration']
Deployability,"C_SEQ_CST); ^; <built-in>:16:26: note: expanded from here; #define __ATOMIC_SEQ_CST 5; ^; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1088:24: error: expected ')'; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:131:75: note: expanded from macro 'atomic_store'; #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST); ^; <built-in>:16:26: note: expanded from here; #define __ATOMIC_SEQ_CST 5; ^; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1088:24: note: to match this '('; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:131:57: note: expanded from macro 'atomic_store'; #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST); ^; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1099:33: error: expected parameter declarator; template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT; ^; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6454:6993,Install,InstallArea,6993,https://root.cern,https://github.com/root-project/root/issues/6454,1,['Install'],['InstallArea']
Deployability,"Caches and precomputes data for this calculation, resulting in a; much more cache friendly access pattern. Leads to increased memory; usage during optimisation, which is subsequently released.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/443:183,release,released,183,https://root.cern,https://github.com/root-project/root/pull/443,1,['release'],['released']
Deployability,Calling 'REveElement::CheckReferenceCount' in /opt/root_src/graf3d/eve7/src/REveElement.cxx:899; 15: Assuming field 'fDestructing' is equal to kNone in /opt/root_src/graf3d/eve7/src/REveElement.cxx:541; 16: Taking false branch in /opt/root_src/graf3d/eve7/src/REveElement.cxx:541; 17: Left side of '&&' is true in /opt/root_src/graf3d/eve7/src/REveElement.cxx:544; 18: Assuming field 'fDestroyOnZeroRefCnt' is true in /opt/root_src/graf3d/eve7/src/REveElement.cxx:544; 19: Left side of '&&' is true in /opt/root_src/graf3d/eve7/src/REveElement.cxx:544; 20: Assuming field 'fDenyDestroy' is <= 0 in /opt/root_src/graf3d/eve7/src/REveElement.cxx:544; 21: Taking true branch in /opt/root_src/graf3d/eve7/src/REveElement.cxx:544; 22: Assuming 'gDebug' is <= 0 in /opt/root_src/graf3d/eve7/src/REveElement.cxx:546; 23: Taking false branch in /opt/root_src/graf3d/eve7/src/REveElement.cxx:546; 24: Memory is released in /opt/root_src/graf3d/eve7/src/REveElement.cxx:551; 25: Returning; memory was released in /opt/root_src/graf3d/eve7/src/REveElement.cxx:899; 26: Returning; memory was released via 1st parameter in /opt/root_src/graf3d/eve7/src/REveElement.cxx:1205; 27: Use of memory after it is freed in /opt/root_src/graf3d/eve7/src/REveElement.cxx:1210; /opt/root_src/graf3d/eve7/src/REveEllipsoid.cxx:204:10: warning: Value stored to 'max' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'max' is never read in /opt/root_src/graf3d/eve7/src/REveEllipsoid.cxx:204; /opt/root_src/graf3d/eve7/src/REveFrameBox.cxx:65:40: warning: Value stored to 'p' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'p' is never read in /opt/root_src/graf3d/eve7/src/REveFrameBox.cxx:65; /opt/root_src/graf3d/eve7/src/REveFrameBox.cxx:83:40: warning: Value stored to 'p' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'p' is never read in /opt/root_src/graf3d/eve7/src/REveFrameBox.cxx:83; /opt/root_src/graf3d/eve7/src/REveGeoPolyShape.cxx:55:38: warn,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7531:37278,release,released,37278,https://root.cern,https://github.com/root-project/root/issues/7531,1,['release'],['released']
Deployability,Calling `file->SetBit(TFile::k630forwardCompatibility);` will request to file to store the current; value of the bit kIsOnHeap and kNotDeleted for reading in older version that were not setting; their value based on the actual state of the read into object# This Pull request:. The rootrc TFile.v630forwardCompatibility can be used to change the default to have the bit set for all `TFile`. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15055:464,update,updated,464,https://root.cern,https://github.com/root-project/root/pull/15055,1,['update'],['updated']
Deployability,Calling constructor for 'TFormula' in /opt/root_src/hist/hist/src/TFormula.cxx:222; 8: Calling constructor for 'TNamed' in /opt/root_src/hist/hist/src/TFormula.cxx:431; 9: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:37; 10: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 11: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 12: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling default constructor for 'TSpectrum2' in /opt/root_src/hist/spectrum/src/TSpectrum2.cxx:1721; 2: Calling constructor for 'TNamed' in /opt/root_src/hist/spectrum/src/TSpectrum2.cxx:57; 3: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:37; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling default constructor for 'TSpectrum' in /opt/root_src/hist/spectrum/src/TSpectrum.cxx:2590; 2: Calling constructor for 'TNamed' in /opt/root_src/hist/spectrum/src/TSpectrum.cxx:51; 3: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:37; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left op,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412:25903,Update,UpdateIsOnHeap,25903,https://root.cern,https://github.com/root-project/root/issues/7412,1,['Update'],['UpdateIsOnHeap']
Deployability,"Can we [group the build logs](https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#grouping-log-lines) into the different sections: setup, cmake, build, install?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12184:188,install,install,188,https://root.cern,https://github.com/root-project/root/issues/12184,1,['install'],['install']
Deployability,Can't install root on ubuntu 23,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479:6,install,install,6,https://root.cern,https://github.com/root-project/root/issues/14479,1,['install'],['install']
Deployability,Cannot install root-framework from snap,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11338:7,install,install,7,https://root.cern,https://github.com/root-project/root/issues/11338,1,['install'],['install']
Deployability,"Canvas name was used as identifier to track HTML element. ; If new canvas with same name was created, old HTML name was overwritten.; Therefore add unique ID (pointer) to the canvas name to handle new canvas properly. Also update jsroot link to latest version",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15943:223,update,update,223,https://root.cern,https://github.com/root-project/root/pull/15943,1,['update'],['update']
Deployability,"Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled.; Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer).; But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects ; via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`.; And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus; for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14040:713,update,update,713,https://root.cern,https://github.com/root-project/root/pull/14040,1,['update'],['update']
Deployability,"Change primary responsible for page memory management from page pool to page storage. This is a preparation for asynchronous interfaces. In the new scheme, RColumn uses `RPageStorage::ReservePage` (writing) or `RPageStorage::PopulatePage` (reading) to allocate pages and `RPageStorage::ReleasePage` for freeing them. The page storage, in turn, may use a shared page pool. In this case, ownership of a page's memory is transferred to the page pool, which will free a page if there are no further users. Addresses ROOT-10205",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4014:286,Release,ReleasePage,286,https://root.cern,https://github.com/root-project/root/pull/4014,1,['Release'],['ReleasePage']
Deployability,"Change the structure of BinData, FitData to a more data-oriented one. This is the second in a series of PR for the integration of the vectorization + parallelization of the fit in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/367:115,integrat,integration,115,https://root.cern,https://github.com/root-project/root/pull/367,1,['integrat'],['integration']
Deployability,Changed install location for builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8732:8,install,install,8,https://root.cern,https://github.com/root-project/root/pull/8732,1,['install'],['install']
Deployability,Changes for 6.18 release,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3764:17,release,release,17,https://root.cern,https://github.com/root-project/root/pull/3764,1,['release'],['release']
Deployability,Changing default compression algorithm for 6-14-patches to zlib,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2492:48,patch,patches,48,https://root.cern,https://github.com/root-project/root/pull/2492,1,['patch'],['patches']
Deployability,"CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }; cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }; Traceback (most recent call last):; File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>; raise SystemExit(main()); ^^^^^^; File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main; print(ROOT.myvec); ^^^^^^^^^^; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr; raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)); AttributeError: Failed to get attribute myvec from ROOT; ```. ### ROOT 6.30.02 (LCG105); ```; [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh; [vpadulan@lxplus959 ~]$root --version; ROOT Version: 6.30/02; Built for linuxx8664gcc on Dec 20 2023, 18:59:44; From heads/master@tags/v6-30-02; [vpadulan@lxplus959 ~]$python repro_libphysics.py; Name: TVectorT<float> Title:; ```. ### Reproducer. ```python; import ROOT. def main():; ROOT.gInterpreter.Declare('''; #include <TVectorT.h>; //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear; const auto myvec = TVectorT<float>();; '''); print(ROOT.myvec). if __name__ == ""__main__"":; raise SystemExit(main()); ```. ### ROOT version. 6.32.*. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16601:3627,Install,Installation,3627,https://root.cern,https://github.com/root-project/root/issues/16601,1,['Install'],['Installation']
Deployability,"Checked for duplicates: not found. Discussion started here:; https://root-forum.cern.ch/t/validity-health-checking-for-a-tfile-content-tfile-ok-but-ttree-corrupted-and-no-error/47304. ### Describe the bug; Using from python:; A TFile not isZombie() and not TestBit(ROOT.TFile.kRecovered) throw these error when parsing a TTree:; ```; Error in unzip ZSTD. Type = Corrupted block detected . Code = 18446744073709551596; Error in <TBasket::ReadBasketBuffers>: fNbytes = 6787763, fKeylen = 72, fObjlen = 7622608, noutot = 0, nout=0, nin=6787691, nbuf=7622608; Error in <TBranch::GetBasket>: File: broken_AO2D.root at byte:240631153, branch:fZ, entry:0, badread=1, nerrors=1, basketnumber=0; Error in unzip ZSTD. Type = Corrupted block detected . Code = 18446744073709551596; Error in <TBasket::ReadBasketBuffers>: fNbytes = 6787763, fKeylen = 72, fObjlen = 7622608, noutot = 0, nout=0, nin=6787691, nbuf=7622608; Error in <TBranch::GetBasket>: File: broken_AO2D.root at byte:240631153, branch:fZ, entry:1905651, badread=1, nerrors=2, basketnumber=0; Error in unzip ZSTD. Type = Corrupted block detected . Code = 18446744073709551596; Error in <TBasket::ReadBasketBuffers>: fNbytes = 5760784, fKeylen = 74, fObjlen = 7615836, noutot = 0, nout=0, nin=5760710, nbuf=7615836; Error in <TBranch::GetBasket>: File: broken_AO2D.root at byte:460579199, branch:fSnp, entry:0, badread=1, nerrors=3, basketnumber=0; ```. ### Expected behavior; Any catch-able error either at TFile opening or at least when parsing and error is encounter ...; At this point i cannot check and asses the health of the file from within python. ### To Reproduce; https://gist.github.com/adriansev/5274de723333cd0afff774cb4d48d202; a test file can be provided through private communication. ### Setup; fedora 34/ ROOT git v6-24-00-patches @5af1fa4d3d; manual build",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9154:1794,patch,patches,1794,https://root.cern,https://github.com/root-project/root/issues/9154,1,['patch'],['patches']
Deployability,"Checksum is now excluded from the on-disk representation and it's not; stored in the anchor. This allows to leverage the ROOT I/O machinery for; schema evolution rather than having to rely entirely on custom code in; RNTuple::Streamer(). The RNTuple class version gets bumped from 4 to 5. This is a breaking change, but backwards compatibility with version 4; will be preserved for a while for easing the transition. Support for; version 4 will be dropped before stabilization. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15553:529,update,updated,529,https://root.cern,https://github.com/root-project/root/pull/15553,1,['update'],['updated']
Deployability,Cherry pick `fix max template recursion depth reached` to 6.10-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/743:63,patch,patches,63,https://root.cern,https://github.com/root-project/root/pull/743,1,['patch'],['patches']
Deployability,Cherry picked from Ivana's commit f245cb4; Ivana needs this in the patches branch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4833:67,patch,patches,67,https://root.cern,https://github.com/root-project/root/pull/4833,1,['patch'],['patches']
Deployability,Cherry-picked from Ivana's commit f245cb4; Ivana needs this also in v6-18-00-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4835:77,patch,patches,77,https://root.cern,https://github.com/root-project/root/pull/4835,1,['patch'],['patches']
Deployability,"Clad currently has problems with some new headers in `MacOSX15.0.sdk` and crashes / errors due to `__builtin_pow`. Disable it for now while a solution is worked on, so we can upgrade the nodes and keep the build green.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15910:175,upgrade,upgrade,175,https://root.cern,https://github.com/root-project/root/pull/15910,1,['upgrade'],['upgrade']
Deployability,"Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:; ```; struct A {; template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>; void Member(T p) {}; };. template void A::Member(int);; ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:; * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library.; * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16176:70,release,releases,70,https://root.cern,https://github.com/root-project/root/pull/16176,4,"['Release', 'configurat', 'release', 'upgrade']","['ReleaseNotes', 'configuration', 'releases', 'upgrade']"
Deployability,"Clang allows third party shared libraries to provide user-defined; extensions. For example, a custom libTemplateInstantiation.so can; visualize all template instantiation chains in clang. To enable it; one needs to pass a set of options such as -fplugin. Cling should be able to inherently work with clang plugins. However,; cling still does not make full use of the clang driver where the plugin; setup is handled. This patch enables plugins in cling and extends them in some aspects.; In particular, cling allows loading of plugins from shared libraries; but also if they are linked to the same library where cling is. This is; very useful in cases where cling runs itself in a shared library (eg; libCling). Users of libCling (such as ROOT) prefer to keep all llvm and; clang related symbols local to avoid symbol clashes if there is another; version of clang and llvm linked against a package. This can be done by; dlopen-ing libCling with RTLD_LOCAL visibility mode. Then the only way; for clang plugins to work in this scenario is to be linked to libCling. Patch by Aleksandr Efremov (@efremale) and me.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2371:421,patch,patch,421,https://root.cern,https://github.com/root-project/root/pull/2371,2,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,"Clang, and therefore cling, doesn't deal well with large amounts of; variable instantiations of types with non-trivial destructors in the; same function body. In this scenario the list of exception-handling; ""landing pads"" grows to sizes that make compilation times blow up.; What takes time specifically is the generation of code that deals; with calling the destructors of these variables in case an exception is; thrown in the function body. This patch avoids allocating many temporary std::strings and; std::vector<std::string>s in jitted code by generating code of the form; Jit{Filter,Define}Helper(..., const char*[]{""col1"", ""col2""}, ...) rather; than Jit{Filter,Define}Helper(..., std::vector<std::string>{""col1"", ""col2""}, ...).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7651:450,patch,patch,450,https://root.cern,https://github.com/root-project/root/pull/7651,2,['patch'],['patch']
Deployability,"Class to preserve `gPad` from the position where TContext is created. Supports two modes - interactive and fast. In interactive mode `pad->cd()` call is used. ; In the fast modes `gPad = saved_value` uses which should not invoke any graphics update. Use this class mainly in `TPad.cxx` and `TCanvas.cxx`, but also in several other sources",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11878:242,update,update,242,https://root.cern,https://github.com/root-project/root/pull/11878,1,['update'],['update']
Deployability,"Class.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’; 289 | TMethod *GetClassMethod(Longptr_t faddr);; | ^~~~~~~~~~~~~~; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’?; 424 | Longptr_t GetDataMemberOffset(const char *membername) const;; | ^~~~~~~~~; | Long64_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’?; 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;; | ^~~~~~~~~~~~~~~~~~~~~~~; | ClassStreamerFunc_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared; 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);; | ^~~~~~~~~~~~~~~~~~~~~~~; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’?; 583 | static DictFuncPtr_t GetDict (const char *cname);; | ^~~~~~~~~~~~~; | VoidFuncPtr_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’?; 584 | static DictFuncPtr_t GetDict (const std::type_info &info);; | ^~~~~~~~~~~~~; | VoidFuncPtr_t; make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2; make: *** [Makefile:171: all] Error 2; ```. ### To Reproduce; Steps to reproduce the behavior:; 1. I am building root through the CMake program with the command as recommended:; ```; $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src ; $ cmake --build .; ```. ### Setup; 1. ROOT version = 6.26.00; 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4; 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10155:3819,release,releases,3819,https://root.cern,https://github.com/root-project/root/issues/10155,2,['release'],"['release-', 'releases']"
Deployability,Clean up all accumulated redundant files over the llvm upgrades.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1296:55,upgrade,upgrades,55,https://root.cern,https://github.com/root-project/root/pull/1296,1,['upgrade'],['upgrades']
Deployability,Cling fixes after the LLVM upgrade,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/625:27,upgrade,upgrade,27,https://root.cern,https://github.com/root-project/root/pull/625,1,['upgrade'],['upgrade']
Deployability,"Cling has already basic support for CUDA: ; The CUDA mode is enable by `cling -xcuda`. A option for root is missing. I tried to start `root.exe` in CUDA mode with the following command: `EXTRA_CLING_ARGS=""-xcuda --cuda-path=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35"" root.exe`. However, the initialization process failed with an error that does not crash root itself. ```C++; $ EXTRA_CLING_ARGS=""-xcuda --cuda-path=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35"" root.exe; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: error: reference to __device__ function '__nvvm_vote_all' in __host__ function; __DEVICE__ int __all(int __a) { return __nvvm_vote_all(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: note: '__nvvm_vote_all' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: error: reference to __device__ function '__nvvm_vote_any' in __host__ function; __DEVICE__ int __any(int __a) { return __nvvm_vote_any(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: note: '__nvvm_vote_any' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: error: reference to __device__ function '__nvvm_vote_ballot' in __host__ function; __DEVICE__ unsigned int __ballot(int __a) { return __nvvm_vote_ballot(__a); }; ^; cling: /home/seh",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:750,install,install,750,https://root.cern,https://github.com/root-project/root/issues/7518,2,['install'],['install']
Deployability,"Cling.so; #19 0x00007f174c70dd20 in clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, clang::DeclaratorContext, clang::SourceLocation*, clang::Parser::ForRangeInit*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #20 0x00007f174c7d1e54 in clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) [clone .part.0] () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #21 0x00007f174c7d8830 in clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #22 0x00007f174c7d9900 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #23 0x00007f174be0d87a in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #24 0x00007f174be0e9b0 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #25 0x00007f174bd71127 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #26 0x00007f174bd7152d in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #27 0x00007f174be638ab in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, boo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12673:5264,install,install,5264,https://root.cern,https://github.com/root-project/root/issues/12673,2,['install'],['install']
Deployability,"Cling.so; #32 0x00007f0603125b4a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /cvmfs/lhcb.cern; #35 0x00007f0603095986 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6; #36 0x00007f06031781a7 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 \""ROOT_prompt_0\""\n#include <LoKi/ParticleCuts.h>"", compRes=; 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436; #38 0x00007f0602e683c4 in TCling::ProcessLine (this=0x20461a0, line=0x412ae70 ""#line 1 \""ROOT_prompt_0\""\n#include <LoKi/ParticleCuts.h>"", error=0x7ffd45beeedc) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.0; #39 0x00007f060aab78bf in TApplication::ProcessLine (this=0x200fe60, line=0x412ae70 ""#line 1 \""ROOT_prompt_0\""\n#include <LoKi/ParticleCuts.h>"", sync=false, err=0x7ffd45beeedc) at /build/jenkins/workspace/lcg_release_pi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511:9368,release,releases,9368,https://root.cern,https://github.com/root-project/root/issues/15511,1,['release'],['releases']
Deployability,Cling: prevent double release of Transactions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7752:22,release,release,22,https://root.cern,https://github.com/root-project/root/pull/7752,2,['release'],['release']
Deployability,"Cling: prevent double release of Transactions, take 2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7773:22,release,release,22,https://root.cern,https://github.com/root-project/root/pull/7773,1,['release'],['release']
Deployability,Clone roottest from release tag when configuring with release tarball,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4101:20,release,release,20,https://root.cern,https://github.com/root-project/root/pull/4101,2,['release'],['release']
Deployability,Closes #15104. Thank you very much @wlav for helping out here!. Also adds revert patches for a sequence of upstream commits that broke our `string_view` conversion usecases. In order:; 1. https://github.com/wlav/CPyCppyy/commit/fce87d5e0125bb9e84ea3472dae6643faa5b8aed; 2. https://github.com/wlav/CPyCppyy/commit/c06170389ea6e37fc6f25f9f0e44940fb1035625; 3. https://github.com/wlav/CPyCppyy/commit/b62b2561322b6c1fdc37ac525077524ea5b02fa0. Needs to be followed-up later.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15151:81,patch,patches,81,https://root.cern,https://github.com/root-project/root/pull/15151,1,['patch'],['patches']
Deployability,Closes https://github.com/root-project/root/issues/14917. To backport to 6.32 for making the packagers happy with our new release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15310:122,release,release,122,https://root.cern,https://github.com/root-project/root/pull/15310,1,['release'],['release']
Deployability,Co-authored-by: Bertrand Bellenot <bellenot@users.noreply.github.com>. Backport of https://github.com/root-project/root/pull/13856. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13948:227,update,updated,227,https://root.cern,https://github.com/root-project/root/pull/13948,1,['update'],['updated']
Deployability,Co-authored-by: sa35. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #10062,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12327:117,update,updated,117,https://root.cern,https://github.com/root-project/root/pull/12327,1,['update'],['updated']
Deployability,Code formatting and release notes for recent lock contention improvements,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7680:20,release,release,20,https://root.cern,https://github.com/root-project/root/pull/7680,1,['release'],['release']
Deployability,"Code from ROOT R project,; -> New features added. now you can use R functions in C++ very easy using the class TRFunctionImport, that have overloaded operators to use objects like functions that receives template arguments and return TRObjects.; -> Documentation updated in http://oproject.org/tiki-index.php?page=ROOT+R+Users+Guide#Import. Best Regards",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/74:263,update,updated,263,https://root.cern,https://github.com/root-project/root/pull/74,1,['update'],['updated']
Deployability,Collection of documentation updates that accumulated over a few weeks.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5841:28,update,updates,28,https://root.cern,https://github.com/root-project/root/pull/5841,1,['update'],['updates']
Deployability,Collection of small patches that piled up during work on a larger branch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6653:20,patch,patches,20,https://root.cern,https://github.com/root-project/root/pull/6653,1,['patch'],['patches']
Deployability,Collection of various documentation updates/fixes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3510:36,update,updates,36,https://root.cern,https://github.com/root-project/root/pull/3510,1,['update'],['updates']
Deployability,"Commit 785c9df34d (""Restore symbol lookup in child interpreters"") added a `DefinitionGenerator` to allow symbol lookup in the parent `IncrementalJIT` after the upgrade to LLVM 13. It appears that instead of the unmangled name, we need to lookup already linker mangled names. This fixes the tests `CodeUnloading/AtExit.C` and `MultipleInterpreters/MultipleInterpreters.C` on macOS, which adds an underscore during linker mangling. No change on Linux because there is no additional linker name mangling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16268:160,upgrade,upgrade,160,https://root.cern,https://github.com/root-project/root/pull/16268,1,['upgrade'],['upgrade']
Deployability,"Common.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.File.InternalWriteAllText(String path, String c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10247:2036,release,release,2036,https://root.cern,https://github.com/root-project/root/pull/10247,1,['release'],['release']
Deployability,"Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ~~~~~~~~~~~~~~~~~~ ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ^; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; return __builtin_bit_cast(_To, _Val);; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here; template <class _To, class _From,; ^; CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; ```; T",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6143:2788,release,release,2788,https://root.cern,https://github.com/root-project/root/pull/6143,2,['release'],['release']
Deployability,"Compared with latest dev version, new fixes:. 1. Fix v7 hist updates, repair draw_mt.cxx tutorial; 2. Fix TH2 col drawing (small bins were not shown at all); 3. Fix text drawing in TPave - not always draw completion was done properly; 4. Fix axes context menu in the frame; 5. Small performance optimization. Only JavaScript code, therefore skipping CI",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6652:61,update,updates,61,https://root.cern,https://github.com/root-project/root/pull/6652,1,['update'],['updates']
Deployability,"Compilation failure in branch v6-26-00-patches with gcc11, el8 and amd64",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12110:39,patch,patches,39,https://root.cern,https://github.com/root-project/root/issues/12110,1,['patch'],['patches']
Deployability,Compilers (at least clang) configure this internally; at least with the current efforts on compiler and CMake sides to put this into action our build system should keep away from interfering with this configuration. Oh and it also does not work with macOS and builtin_glew. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12746:201,configurat,configuration,201,https://root.cern,https://github.com/root-project/root/pull/12746,2,"['configurat', 'update']","['configuration', 'updated']"
Deployability,"Compiling Interpreter.cpp allows RunFunction and friends to be actually seen during stack unwind after an; exception has been thrown, directly or indirectly, by interpreter code. This allows for the RAII objects to be; properly tear down. In particular, without this patch, EnterUserCodeRAII was not tear down and thus the callbacks were not executed.; Consequently the ""Restore the ROOT global Mutex"" callback was not executed leaving the Mutex in an invalid state. In case of ART application, in most cases, they customize the ROOT error handler to throw an exception. This; resulted (without this fix) in crash when import a GDML file with an error in it. In practice what we have is:. call to TGeo Import; which calls the interpreter for some of its functionality; which calls gdml code; which reports an error; which leads the error handler to thrown an exception.; ... some of the stack are properly unwound ... some are not (because they were not compiled with exception support on) ....; ... so the ROOT Mutex goes into an incorrect state ...; ... unwinding continues; ... unwinding reached a frame that Unlock the mutex; Mutex notices it is an incorrect state.; so it reports the Error; the Error handler throw an exception ....... and because this exception is being thrown during the unwind, it is fatal.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4892:267,patch,patch,267,https://root.cern,https://github.com/root-project/root/pull/4892,1,['patch'],['patch']
Deployability,"Complete code reformatted to use JS classes.; Makes layout more clear and compact.; Optimize io code - use more internal constants, which; very well can be optimized by JS. Exclude `rawinflate.js` - code integrated and optimized in io script; Update `dat.gui.js`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9779:204,integrat,integrated,204,https://root.cern,https://github.com/root-project/root/pull/9779,2,"['Update', 'integrat']","['Update', 'integrated']"
Deployability,Configuration fixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/153:0,Configurat,Configuration,0,https://root.cern,https://github.com/root-project/root/pull/153,1,['Configurat'],['Configuration']
Deployability,"Consider this python script:. ```; import ROOT; v = ROOT.vector(float)(); for i in range(50000):; s = repr(v); if i%1000 == 0:; print (i, flush=True); ```. Using ROOT from a dev4 nightly:. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-opt. This runs for about 12 minutes and then starts printing errors:. ```; 21000; cling JIT session error: Cannot allocate memory; Error in Interpreter::toString: the input *((std::string*)0x7ffed5ef1580) = cling::printValue((std::vector<float>*)0x9c5a040); cannot be evaluatedcling JIT session error: Cannot allocate memory; Error in Interpreter::toString: the input *((std::string*)0x7ffed5ef1580) = cling::printValue((std::vector<float>*)0x9c5a040); cannot be evaluatedcling JIT session error: Cannot allocate memory; ...; ```. Meanwhile, with root 6.26.08:. /cvmfs/atlas-nightlies.cern.ch/repo/sw/master_Athena_x86_64-centos7-gcc11-opt/sw/lcg/releases/LCG_102b_ATLAS_19/ROOT/6.26.08/x86_64-centos7-gcc11-opt. The same script completes normally in about two seconds. See also ATEAM-885.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12817:255,patch,patches,255,https://root.cern,https://github.com/root-project/root/issues/12817,2,"['patch', 'release']","['patches', 'releases']"
Deployability,"Constructors with the same priority should keep their relative order that was specified. This is important for `clang-repl` with many `const` variables after commit https://github.com/llvm/llvm-project/commit/05137ecfca0bd2f7fa6cd30c771dfacbb8188785 (""[clang-repl] Emit const variables only once""). ---. Fixes #15511. (version of commit a60f3538220e298f14c0ea5824d2fda91b71f39e for LLVM 13 in `v6-28-00-patches`, backport of https://github.com/root-project/root/pull/15854)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15859:403,patch,patches,403,https://root.cern,https://github.com/root-project/root/pull/15859,1,['patch'],['patches']
Deployability,"Constructors with the same priority should keep their relative order that was specified. This is important for `clang-repl` with many `const` variables after commit https://github.com/llvm/llvm-project/commit/05137ecfca0bd2f7fa6cd30c771dfacbb8188785 (""[clang-repl] Emit const variables only once""). ---. Fixes #15511. (version of commit a60f3538220e298f14c0ea5824d2fda91b71f39e for LLVM 13 in `v6-30-00-patches`, backport of https://github.com/root-project/root/pull/15854)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15858:403,patch,patches,403,https://root.cern,https://github.com/root-project/root/pull/15858,1,['patch'],['patches']
Deployability,Content of install directory with this PR: ; https://gist.github.com/oshadura/7737bdcc90fed501869656808a5c514a. Next step will be to move installation of PCMs in ROOT_GENERATE_DICTIONARY().,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4783:11,install,install,11,https://root.cern,https://github.com/root-project/root/pull/4783,2,['install'],"['install', 'installation']"
Deployability,"Convert back slashes into forward slashes. This fixes the following errors on Windows:; input_line_12(12,4): error G954FC62D: \U used with no following hex digits [C:\Users\bellenot\build\release\onepcm.vcxproj]; ""C:\Users\bellenot\libs\GSL\2.5\include"",; ^~; input_line_12(13,4): error G954FC62D: \U used with no following hex digits [C:\Users\bellenot\build\release\onepcm.vcxproj]; ""C:\Users\bellenot\libs\libxml2\2.7.8\include"",; ^~; CUSTOMBUILD : error : .\bin\rootcling: compilation failure (./allDictd5c5124b81_dictContent.h) [C:\Users\bellenot\build\release\onepcm.vcxproj]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4376:188,release,release,188,https://root.cern,https://github.com/root-project/root/pull/4376,3,['release'],['release']
Deployability,"Convert the backslashes into forward slashes in the include path for rootcling on Windows. This fixes the following errors:; input_line_12(12,4): error G954FC62D: \U used with no following hex digits [C:\Users\bellenot\build\release\onepcm.vcxproj]; ""C:\Users\bellenot\libs\GSL\2.5\include"",; ^~; input_line_12(13,4): error G954FC62D: \U used with no following hex digits [C:\Users\bellenot\build\release\onepcm.vcxproj]; ""C:\Users\bellenot\libs\libxml2\2.7.8\include"",; ^~; CUSTOMBUILD : error : .\bin\rootcling: compilation failure (./allDictd5c5124b81_dictContent.h) [C:\Users\bellenot\build\release\onepcm.vcxproj]. And (when using ACLiC):; Info in <TWinNTSystem::ACLiC>: creating shared library C:/Users/bellenot/build/debug/core/dictgen/test/myextramacro_C.dll; input_line_12:7:4: error: \U used with no following hex digits; ""C:\Users\bellenot\build\debug\include"",; ^~; Error in <ACLiC>: Dictionary generation failed!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4381:225,release,release,225,https://root.cern,https://github.com/root-project/root/pull/4381,3,['release'],['release']
Deployability,"Converters and executors for ROOT fixed-width integer types are important for ""long long"" support for the cppyy inside ROOT (see https://github.com/root-project/root/issues/15872). This PR is an alternative to understanding what is actually going on with ""long long"" in PyROOT, and can be considered even for backporting to 6.32.02 if desired. However, since this only serves the niche usecase of using `cppyy` in ROOT via `import cppyy` without using ROOT at all, I don't this this should block the release. @dpiparo @vepadulano @hahnjo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15873:500,release,release,500,https://root.cern,https://github.com/root-project/root/pull/15873,1,['release'],['release']
Deployability,Copy the stl.cppmap modulemap now during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/425:41,configurat,configuration,41,https://root.cern,https://github.com/root-project/root/pull/425,1,['configurat'],['configuration']
Deployability,Correctly call TF1::Save with full range to be sure storing is correct; Support functions in TMultiGraph; Create real histogram for TGraph2D when `tri` option is configured; Update JSROOT with several fixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13978:174,Update,Update,174,https://root.cern,https://github.com/root-project/root/pull/13978,1,['Update'],['Update']
Deployability,"Cppyy allows to add custom pythonisations for classes, but it does not yet provide an API for adding custom type converters. Until that API exists, we need to patch Cppyy with a converter Python string -> `TString`, so that we do not have to create a `TString` in Python when calling a C++ method that expects it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3534:159,patch,patch,159,https://root.cern,https://github.com/root-project/root/pull/3534,1,['patch'],['patch']
Deployability,Create `http` group for related classes; Re-format doxygen documentation of all related classes; Update JSROOT.md and THttpServer.md; Update JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10733:97,Update,Update,97,https://root.cern,https://github.com/root-project/root/pull/10733,2,['Update'],['Update']
Deployability,"Create a struct holding the flag, `HANDLE`, and `WIN32_FIND_DATA` used by `OpenDirectory`, `GetDirEntry`, and `FreeDirectory`, so each thread creates its own instance of it. This fixes randome failures in mutithreaded applications on Windows, like for example in the `R__USE_IMT` part of the `datasource-root` test:; ```; [ RUN ] TRootTDS.DefineSlotMT; Error in <TFile::TFile>: file C:/root-dev/build/x64/debug/tree/dataframe/test/G__NTupleStruct.vcx does not exist; [ OK ] TRootTDS.DefineSlotMT (191 ms); [ RUN ] TRootTDS.FromARDFMT; Error in <TFile::Init>: C:/root-dev/build/x64/debug/tree/dataframe/test/INSTALL.vcxproj not a ROOT file; C:\root-dev\git\master\tree\dataframe\test\datasource_root.cxx(175): error: Expected equality of these values:; 29.; Which is: 29; *max; Which is: 23; [ FAILED ] TRootTDS.FromARDFMT (6 ms); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13472:607,INSTALL,INSTALL,607,https://root.cern,https://github.com/root-project/root/pull/13472,1,['INSTALL'],['INSTALL']
Deployability,"Create notebooks from fit, add jsroot integration",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/207:38,integrat,integration,38,https://root.cern,https://github.com/root-project/root/pull/207,1,['integrat'],['integration']
Deployability,"Created a new class in _function_utils to obtain function signature and jit the function. This will be further reused for Defines, which can may make _numbadeclare more modular. # This Pull request:. ## Changes or fixes:; 1. Added Filter pythonizations to RDF.; Filter now directly works with python functions.; 2. Resolved comments: 1,2 on repeated imports.; 3. Resolved comment: 3 on lazy imports; 4. Resolved comment: 4 on comments.; 5. Resolved comment: 5 on using a single pythonizer.; 6. Resolving comment: 7 on using multiple commits. Future commits will include test cases, Defines, and Tutorial changes.; 7. Resolved comment: 8 added docs for internal functions.; 8. Resolving comment: 9 on Pydefine. NOt implemented in this branch.; 9. The remaining comments are on the organisation of the test cases and tutorials which will be done in the different branches and will be addressed there. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10896:950,update,updated,950,https://root.cern,https://github.com/root-project/root/pull/10896,1,['update'],['updated']
Deployability,"Creating a new pull request since I force-pushed to the old branch. This PR improves VecCore integration into ROOT. Before we copied all VecCore and Vc headers into the build directory, since rootcling did not get the right includes when Vc or VecCore were builtin. Now the right includes are propagates by calling set_property() with the necessary include directories. Ideally, in the future we should take the includes not from the DIRECTORY property, but from the target dependencies for each subcomponent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/851:93,integrat,integration,93,https://root.cern,https://github.com/root-project/root/pull/851,1,['integrat'],['integration']
Deployability,"Current JSROOT dev version with lot of changes, potential v7.0 release. Really a lot of changes in dev version.; Fully avoids jQuery in the GUI, replace it by HTML5 code; Reduce significantly used code from d3.js (factor 3); Improve flexible layout in the GUI. Add support of many new classes/draw options; Like CANDLE/VIOLIN plots, TEfficiency,; Add many standard math functions to support majority of TF1/TF2 from tutorials. Upgrade three.js to r136. Adjust Eve7 code, fix few problems",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9638:63,release,release,63,https://root.cern,https://github.com/root-project/root/pull/9638,2,"['Upgrade', 'release']","['Upgrade', 'release']"
Deployability,"Current `clang-16` from main complains: ""case value is not a constant expression"". Even if that error is probably relaxed before Clang 16 is released early next year, there is really no point in converting an integer into an enum just to get a numeric value back. This is (intentionally) a partial revert of commit ac36d879629f. An alternative solution appears to be replacing `EProperty` (which refers to the enum type in `TVirtualCollectionProxy`) with `::EProperty` from `TDictionary.h`. However, since the enum values are used as a bit mask and `fCase` is defined as `UInt_t` anyhow, it makes more sense to compare integer constants from the start. Closes #11128. (cherry picked from commit cc28da57f0b8e2878a2c047504a49762d7d8dfb5). Backport of PR https://github.com/root-project/root/pull/11148",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11178:141,release,released,141,https://root.cern,https://github.com/root-project/root/pull/11178,1,['release'],['released']
Deployability,"Current `clang-16` from main complains: ""case value is not a constant expression"". Even if that error is probably relaxed before Clang 16 is released early next year, there is really no point in converting an integer into an enum just to get a numeric value back. This is (intentionally) a partial revert of commit https://github.com/root-project/root/commit/ac36d879629fd67cf6fc9e955923ec9f98a2361c. An alternative solution appears to be replacing `EProperty` (which refers; to the enum type in `TVirtualCollectionProxy`) with `::EProperty` from `TDictionary.h`. However, since the enum values are used as a bit mask and `fCase` is defined as `UInt_t` anyhow, it makes more sense to compare integer constants from the start. This PR fixes #11128",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11148:141,release,released,141,https://root.cern,https://github.com/root-project/root/pull/11148,1,['release'],['released']
Deployability,"Current v7 canvas cannot be stored in the file - I/O for shared_ptr<> not working. Because of that remove transfer of Pad/Canvas to the clients.; Actually, it was not required at all.; Also adjust extraction of attributes (line color) from the drawables. Repair all relevant macros in tutorials/v7. Update JSROOT, which now supports LZ4",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1647:299,Update,Update,299,https://root.cern,https://github.com/root-project/root/pull/1647,1,['Update'],['Update']
Deployability,"Currently RColumnDescriptorIterable's ctor wants a RFieldDescriptor even though it only uses the field's id internally. One of the overloads of GetColumnIterable accepts a fieldId but it is forced to retrieve back the field descriptor before constructing an Iterable object, only for the object itself to extract back the id, wasting work. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16096:391,update,updated,391,https://root.cern,https://github.com/root-project/root/pull/16096,1,['update'],['updated']
Deployability,"Currently RDF reads all column values via a single RColumnValue type,; which knows how to deal with TTreeReaderValues, TTreeReaderArrays,; datasource columns and defined columns. Not only that's too many hats; for a single type, but this design requires some runtime logical branching; to decide which path to take that can be simplified.; Finally and most importantly, going forward we want smarter integration; with RDataSource, and we will require RDataSource-specialized column readers.; In order to allow this latter use-case and simplify some logical; branching, instead of a single RColumnValue type we add specialized; column reader types. RDefineReader reads values of Defined columns, RTreeColumnReader reads values; via TTreeReaderValues or TTreeReaderArrays depending on the class specialization,; and RDSColumnReader reads values from a datasource.; A given computation graph will only make use of one between; RTreeColumnReader and RDSColumnReader. The new column readers bring two main advantages:; - logical branching has been reduced (for now, at the cost of introducing a; virtual call); - the new design makes it simpler to insert datasource-specific column; readers",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6170:400,integrat,integration,400,https://root.cern,https://github.com/root-project/root/pull/6170,1,['integrat'],['integration']
Deployability,"Currently hadd is only checking the compression levels to determine whether fast merging should be used or not. This is wrong, as it will incorrectly skip compression change when a file is changed from e.g. 101 to 201. With this commit, hadd (actually, TFileMerger) will check for equality of compression settings instead. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11245",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16082:374,update,updated,374,https://root.cern,https://github.com/root-project/root/pull/16082,1,['update'],['updated']
Deployability,Currently it displays like this:. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally; - [] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8433:127,update,updated,127,https://root.cern,https://github.com/root-project/root/pull/8433,1,['update'],['updated']
Deployability,"Currently we rebuilt LTO everytime you rerun cmake, as CMake; touches the vcsrevision file that LTO depends on. Make isn't; smart enough to realise it's still just an empty file, so it; retriggers the LTO compilations whenever you run CMake. Again, this patch will be obsolete on the next LLVM upgrade; as this CMake code is refactored upstream.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/842:254,patch,patch,254,https://root.cern,https://github.com/root-project/root/pull/842,2,"['patch', 'upgrade']","['patch', 'upgrade']"
Deployability,Currently we write into the overlay file all libc++ header paths (e.g. /usr/include/libc++:/another/path). This patch selects the first path from this list to produce a valid overlay.yaml when configuring.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/332:112,patch,patch,112,https://root.cern,https://github.com/root-project/root/pull/332,1,['patch'],['patch']
Deployability,"Currently when installed with `-Dgnuinstall=ON` ROOT ends up exporting relative paths from the `${CMAKE_INSTALL_CMAKEDIR}` to the relevant binary, include and library directories. This can be a problem, especially when these paths may be evaluated from a different system folder assumed by CMake (e.g. when `CMAKE_INTSTALL_CMAKEDIR` is not the same for ROOT and CMake) as well as in other cases, when relative paths are not appropriate. Thus, it is safer in the general case to have these relative paths resolved to absolute system paths immediately before being passed to a caller. This merge request tries to accomplish just that with complete transparency and zero side-effects. It has been tested and deployed in Arch Linux x86_64, CMake 3.16.4, GCC 9.2.1:; - resulting relevant CMake config:; ```cmake; #----------------------------------------------------------------------------; # Configure the path to the ROOT headers, using a relative path if possible.; # This is only known at CMake time, so we expand a CMake supplied variable.; #. # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_INCLUDE_DIRS ""${_thisdir}/../../../include"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_INCLUDE_DIRS ""${_ROOT_INCLUDE_DIRS}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_LIBRARY_DIR ""${_thisdir}/../../root"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_LIBRARY_DIR ""${_ROOT_LIBRARY_DIR}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_BINDIR ""${_thisdir}/../../../bin"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_BINDIR ""${_ROOT_BINDIR}"" REALPATH). # Deprecated value, please don't use it and use ROOT_BINDIR instead.; get_filename_component(ROOT_BINARY_DIR ""${ROOT_BINDIR}"" REALPATH); ```; - CMa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5084:15,install,installed,15,https://root.cern,https://github.com/root-project/root/pull/5084,2,"['deploy', 'install']","['deployed', 'installed']"
Deployability,"Currently, 36 tests are failing for runtime modules:; https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/; We want to make these test pass so that we can say that the runtime modules is; finally working. This patch enables ROOT to preload all modules at startup time. In my; environment, this patch fixes 14 tests for runtime cxxmodules. Preloading all the modules has several advantages. 1. We do not have to; rely on rootmap files which don't support some features (namespaces and; templates) 2. Lookup would be faster because we don't have to do; trampoline via rootmap files. The only disadvantage of preloading all the modules is the startup time performance.; `root.exe -q -l memory.C`; This is a release build without modules:; ```; cpu time = 0.091694 seconds; sys time = 0.026187 seconds; res memory = 133.008 Mbytes; vir memory = 217.742 Mbytes; ```; This is a release build with modules, with this patch:; ```; cpu time = 0.234134 seconds; sys time = 0.066774 seconds; res memory = 275.301 Mbytes; vir memory = 491.832 Mbytes; ```; As you can see, preloading all the modules makes both time and memory 2; to 3 times worse **at a startup time**. **Edit** : With hsimple.C; `root.exe -l -b tutorials/hsimple.C -q ~/CERN/ROOT/memory.C`; Release build without modules:; ```; Processing tutorials/hsimple.C... ; hsimple : Real Time = 0.04 seconds Cpu Time = 0.05 seconds ; (TFile *) 0x555ae2a9d560 ; Processing /home/yuka/CERN/ROOT/memory.C... ; cpu time = 0.173591 seconds ; sys time = 0.011835 seconds ; res memory = 135.32 Mbytes ; vir memory = 209.664 Mbytes ; ```; Release build with modules, with this patch:; ```; Processing tutorials/hsimple.C...; hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds; (TFile *) 0x55d1b036d230; Processing /home/yuka/CERN/ROOT/memory.C...; cpu time = 0.290742 seconds; sys time = 0.043851 seconds; res memory = 256.844 Mbytes; vir memory = 438.484 Mbytes; ```. However, it is a matter of course that we get slower startup t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1814:234,patch,patch,234,https://root.cern,https://github.com/root-project/root/pull/1814,5,"['patch', 'release']","['patch', 'release']"
Deployability,"Currently, `gSystem->GetHomeDirectory()` will prefer to use the value from `etc/passwd` on Linux systems. In the Snap packaging, this causes issues due to the sandboxing permissions and is currently worked around by using LD_PRELOAD to hijack `getpwuid()` and force it to respect $HOME. From what I see, every other instance in the ROOT repository already prefers the $HOME variable, apart from this one instance here. I wouldn't expect most users to notice this patch, but I would expect users who might have a need to change this value to assume simply changing $HOME is sufficient and expect this behaviour, which can be done without any real complexities; rather than changing /etc/passwd which is a much more involved task and relies upon legacy knowledge of Unix systems.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7083:463,patch,patch,463,https://root.cern,https://github.com/root-project/root/pull/7083,1,['patch'],['patch']
Deployability,"Currently, some sections of TFile::ReadProcessID are only protected; from concurrent access if Internal::IsParTreeProcessingEnabled(); is true. The only entity that enables ParTreeProcessing in ROOT; is TTreeProcessorMT::Process. With this patch, concurrent access to TFile::ReadProcessID is always protected. Rationale: if TTreeProcessorMT::Process needs that protection, everyone needs it. Note that `TParTreeProcessing` is unused after this change, so if you agree the change can go in, I'll add a commit that removes `TParTreeProcessing` from ROOT. If you _don't_ agree the change can go in: why does `TTreeProcessorMT::Process` need this protection but other usecases do not (note that `TParTreeProcessing` is in `ROOT::Internal`, so we do not expect users to activate these locks)?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5288:240,patch,patch,240,https://root.cern,https://github.com/root-project/root/pull/5288,1,['patch'],['patch']
Deployability,"Custom ranges seemed to be supported for analytical integration in; RooNDKeysPdf, but the code was not activated. Numerical integration was; always used for custom ranges. Unfortunately, using the existing code for analytical integration with; custom ranges gives the wrong result. This commit suggests how this can; be done with new and simpler code that has a logic similar to; RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8019:52,integrat,integration,52,https://root.cern,https://github.com/root-project/root/pull/8019,7,['integrat'],['integration']
Deployability,"DE_DIRS=/home/mkrzewic/src/root/interpreter/llvm-project/clang/include' '/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang//include' '-DCMAKE_CXX_STANDARD=17' '-DClang_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang/' '-DClang_CONFIG_EXTRA_PATH_HINTS=' '-DLLVM_FORCE_USE_OLD_TOOLCHAIN=ON' '-DCLAD_BUILD_STATIC_ONLY=ON' '-GUnix Makefiles' '-S' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad' '-B' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build'. See also. /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-*.log. -- stdout output is:; -- Configuring incomplete, errors occurred!. -- stderr output is:; CMake Warning:; Ignoring extra path from command line:. ""/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang/include"". CMake Warning:; Ignoring extra path from command line:. ""/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang//include"". CMake Error at CMakeLists.txt:86 (message):; Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or; installation folder. CMake Error at /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-Release.cmake:47 (message):; Stopping after outputting logs. gmake[2]: *** [interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/build.make:92: interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:44491: interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/all] Error 2; gmake: *** [Makefile:166: all] Error 2; ```. ### Reproducer. cmake ../../src/root -Droottest=ON -DCMAKE_BUILD_TYPE=RelWithDebInfo; cmake --build . ### ROOT version. master@0afffc6fc9. ### Installation method. source. ### Operating system. FreeBSD 14.0-RELEASE. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14492:2646,install,installation,2646,https://root.cern,https://github.com/root-project/root/issues/14492,4,"['Install', 'RELEASE', 'Release', 'install']","['Installation', 'RELEASE', 'Release', 'installation']"
Deployability,DManager.cxx:858; 6: Left side of '||' is false in /opt/root_src/gui/gui/src/TGDNDManager.cxx:858; 7: Assuming 'count' is not equal to 0 in /opt/root_src/gui/gui/src/TGDNDManager.cxx:858; 8: Left side of '||' is false in /opt/root_src/gui/gui/src/TGDNDManager.cxx:858; 9: Assuming 'data' is non-null in /opt/root_src/gui/gui/src/TGDNDManager.cxx:858; 10: Taking false branch in /opt/root_src/gui/gui/src/TGDNDManager.cxx:858; 11: Assuming 'kNone' is equal to field 'fSource' in /opt/root_src/gui/gui/src/TGDNDManager.cxx:864; 12: Taking false branch in /opt/root_src/gui/gui/src/TGDNDManager.cxx:864; 13: Assuming field 'fLocalTarget' is non-null in /opt/root_src/gui/gui/src/TGDNDManager.cxx:868; 14: Taking true branch in /opt/root_src/gui/gui/src/TGDNDManager.cxx:868; 15: Calling default constructor for 'TDNDData' in /opt/root_src/gui/gui/src/TGDNDManager.cxx:869; 16: Calling default constructor for 'TObject' in /opt/root_src/gui/gui/inc/TGDNDManager.h:71; 17: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 18: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 19: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling 'TGClient::HandleInput' in /opt/root_src/gui/gui/src/TGClient.cxx:116; 2: Calling 'TGClient::ProcessOneEvent' in /opt/root_src/gui/gui/src/TGClient.cxx:702; 3: Assuming field 'fRoot' is non-null in /opt/root_src/gui/gui/src/TGClient.cxx:651; 4: Taking false branch in /opt/root_src/gui/gui/src/TGClient.cxx:651; 5: Assuming the condition is true in /opt/root_src/gui/gui/src/TGClient.cxx:652; 6: expanded from macro 'gVirtualX' in /opt/root_src/core/base/inc/TVirtualX.h:338; 7: Taking true branch in /opt/root_src/gui/gui/src/TGClient.cxx:652; 8: Assuming 'kNone' is not equal to field 'fWaitForWindo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412:15068,Update,UpdateIsOnHeap,15068,https://root.cern,https://github.com/root-project/root/issues/7412,1,['Update'],['UpdateIsOnHeap']
Deployability,"Data {; std::unique_ptr<RBrowserDataCleanup> fCleanupHandle; ///<! cleanup handle for RecursiveRemove; };. // RBrowserData.cxx; class RBrowserDataCleanup : public TObject {};; ```. Which leads to failures in `roottest-root-core-execStatusBitsCheck` when building with `runtime_cxxmodules=OFF`:. ```; 1548: +Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> >; 1548: +Error in <CreateRealData>: Cannot find data member # 0 of class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> > for parent ROOT::Experimental::RFileDialog!; 1548: +Error in <TProtoClass::FindDataMember>: data member with index 1 is not found in class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> >; 1548: +Error in <CreateRealData>: Cannot find data member # 1 of class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> > for parent ROOT::Experimental::RFileDialog!; ```. As per the discussion in the linked PR, it seems that `TClass` is always generating dictionaries for the `std::unique_ptr` data member, even if it's transient. As things stand, the only ""fix"" is to move the `RBrowserDataCleanup` class from the implementation file to the header, and adding `ClassDef` macro since it inherits from `TObject`. An alternative workaround was changing `std::unique_ptr<RBrowserDataCleanup>` to `RBrowserDataCleanup *`, which is treated transparently in case of a transient member. ### Reproducer. 1. Revert the changes in #13134 ; 2. Run the following macro; ```cpp; void rbrowserdatacleanup(){; gSystem->LoadAllLibraries();; ROOT::Detail::TStatusBitsChecker::CheckAllClasses();; }; ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13361:2255,Install,Installation,2255,https://root.cern,https://github.com/root-project/root/issues/13361,1,['Install'],['Installation']
Deployability,"Davix interprets certain parameters that are passed in the anchor part of the URL (after the `#`). The anchor, however, is also used by `TChain` to pass the treename. This patch looks at the anchor and if it contains an equal sign (`=`), it assumes that it is a parameter list for Davix and not a treename. See also https://root-forum.cern.ch/t/problem-with-tchain-and-https-turls/53545/7",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12405:172,patch,patch,172,https://root.cern,https://github.com/root-project/root/pull/12405,1,['patch'],['patch']
Deployability,"Dbuiltin_davix=off"" ""-Dbuiltin_fftw3=off"" ""-Dbuiltin_freetype=off"" ""-Dbuiltin_ftgl=off"" ""-Dbuiltin_gl2ps=off"" ""-Dbuiltin_glew=off"" ""-Dbuiltin_gsl=off"" ""-Dbuiltin_llvm=on"" ""-Dbuiltin_lz4=off"" ""-Dbuiltin_lzma=off"" ""-Dbuiltin_nlohmannjson=off"" ""-Dbuiltin_openssl=off"" ""-Dbuiltin_openui5=on"" ""-Dbuiltin_pcre=off"" ""-Dbuiltin_tbb=off"" ""-Dbuiltin_unuran=on"" ""-Dbuiltin_vc=off"" ""-Dbuiltin_vdt=off"" ""-Dbuiltin_veccore=off"" ""-Dbuiltin_xrootd=off"" ""-Dbuiltin_xxhash=off"" ""-Dbuiltin_zeromq=on"" ""-Dbuiltin_zlib=off"" ""-Dbuiltin_zstd=off"" ""-Dccache=off"" ""-Dcefweb=off"" ""-Dclad=on"" ""-Dclingtest=off"" ""-Dcocoa=off"" ""-Dcoverage=off"" ""-Dcuda=off"" ""-Dcudnn=off"" ""-Dcxxmodules=off"" ""-Ddaos=off"" ""-Ddataframe=on"" ""-Ddavix=on"" ""-Ddcache=off"" ""-Ddev=off"" ""-Ddistcc=off"" ""-Dfail-on-missing=on"" ""-Dfcgi=off"" ""-Dfftw3=on"" ""-Dfitsio=on"" ""-Dfortran=on"" ""-Dgdml=on"" ""-Dgminimal=off"" ""-Dgnuinstall=off"" ""-Dgsl_shared=off"" ""-Dgviz=off"" ""-Dhttp=on"" ""-Dimt=on"" ""-Djemalloc=off"" ""-Dlibcxx=off"" ""-Dmacos_native=off"" ""-Dmathmore=on"" ""-Dmemory_termination=off"" ""-Dminimal=off"" ""-Dmpi=off"" ""-Dmysql=on"" ""-Dodbc=off"" ""-Dopengl=on"" ""-Dpgsql=on"" ""-Dpyroot=on"" ""-Dpythia8=off"" ""-Dqt5web=off"" ""-Dqt6web=off"" ""-Dr=off"" ""-Droofit=on"" ""-Droofit_multiprocess=on"" ""-Droot7=on"" ""-Drootbench=off"" ""-Droottest=on"" ""-Droottest_force_checkout=off"" ""-Drpath=on"" ""-Druntime_cxxmodules=on"" ""-Dshadowpw=off"" ""-Dshared=on"" ""-Dsoversion=off"" ""-Dspectrum=on"" ""-Dsqlite=on"" ""-Dssl=on"" ""-Dtcmalloc=off"" ""-Dtest_distrdf_dask=on"" ""-Dtest_distrdf_pyspark=on"" ""-Dtesting=on"" ""-Dtmva-cpu=off"" ""-Dtmva-gpu=off"" ""-Dtmva-pymva=on"" ""-Dtmva-rmva=off"" ""-Dtmva-sofie=off"" ""-Dtmva=on"" ""-Dunfold=on"" ""-Dunuran=on"" ""-During=off"" ""-Dvc=off"" ""-Dvdt=on"" ""-Dveccore=off"" ""-Dvecgeom=off"" ""-Dwebgui=on"" ""-Dwin_broken_tests=off"" ""-Dwinrtdebug=off"" ""-Dx11=on"" ""-Dxml=on"" ""-Dxrootd=on""; ```. I do not know to how many builds this applies, I just noticed it on this one. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15615:2670,Install,Installation,2670,https://root.cern,https://github.com/root-project/root/issues/15615,1,['Install'],['Installation']
Deployability,"Dear ROOT developers,. this Pull Request tries to address [this issue](https://root-forum.cern.ch/t/using-tfitshdu-to-read-a-table-with-arrays-as-column-elements/37867) I have opened in the ROOT forum. A limitation of the `TFITSHDU` class was its impossibility to read within columns of a FITS table containing a variable-length array. My patch adds such a possibility. I have modified the `Column` and `Cell` `struct`s adding objects necessary to read a variable-length arrays embedded in a cell. The`LoadHDU` function (fundamentally the initialiser of the `TFITSHDU` class) was modified accordingly such that this objects could be assigned. I have modified the functions dealing with printing and reading values from a table such that the occurrence of a column with variable-length arrays embedded can be properly signalled. In order not to interfere with the previous development of data handling I created a function to read within a cell for this specific case: it is called `GetTabVarLengthVectorCell`. I believe it does not make sense to read the entire column in this case (returning an array of variable-length arrays). The user is allowed to access the single cell, when attempting to use any other function (e.g. `GetTabRealVectorColumn`) to read the entire column, a warning is issued pointing him to this specific function. Last I added a tutorial in `tutorials/fitsio/FITS_tutorial8.C` with a test file illustrating the application of this case. I would kindly ask for a review,. Best. Cosimo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5099:339,patch,patch,339,https://root.cern,https://github.com/root-project/root/pull/5099,1,['patch'],['patch']
Deployability,"Dear ROOT devs,. These lines in the FindXROOTD. https://github.com/root-project/root/blob/323c21416cea9a64080698c23a7e2f6f6d1808bf/cmake/modules/FindXROOTD.cmake#L137-L149. make some root libraries, e.g., libNetxNG.so, link against old versions of xrootd if they are found on the system, even though one wants to build against the new version of xrootd.; We for SPI run into this problem when building on a machine which just happens to have this installed, and we cannot control the packages. e.g. this is printed during configure:; ```; -- Found Xrootd version num: 5.3.1 (setting -DROOTXRDVERS=500030001); --; -- libXrdMain not found: xproofd will be a wrapper around xrootd; -- include_dirs: /data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/include/xrootd;/data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/include/xrootd/private; -- libraries: /data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/lib64/libXrdUtils.so;/usr/lib64/libXrdClient.so;/data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/lib64/libXrdCl.so. ```; This then causes problem when our ROOT is used on some other machine.; So at the moment we just patch these lines out. If you could consider dropping them, or some check based on xrootd version?. Thanks,; Andre",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11750:447,install,installed,447,https://root.cern,https://github.com/root-project/root/issues/11750,6,"['install', 'patch']","['install', 'installed', 'patch']"
Deployability,"Dear ROOT experts,. When using [DD4hep](https://dd4hep.web.cern.ch/dd4hep/) to try and describe the geometry of the upgraded LHCb detector geometry, we've noticed overlapping geometry that's not picked up by running `gGeoManager::CheckOverlaps`. The geometry is attached as ROOT files (Geometry.root and Geometry_ClampInModule.root). To view the geometry we run in a ROOT session (or as a macro); ```c++; TGeoManager::Import(""Geometry.root""); gGeoManager->GetMasterVolume()->Draw(""ogl""); ```; and then running `gGeoManager->CheckOverlaps(0.00001)` Does not find the overlap between the shapes `pvCoolingClamp` and `pvPipeBottom` (The list of shapes can be found by opening a `TBrowser` after importing the geometry and navigating the 'default' folder). The expected behavior here is that overlaps would be found between these shapes as one passes straight through the other. I have also tried moving the Cooling Clamp to the top of the shape and trying again there (see Geometry_ClampInModule.root) and here overlaps are only identified between the Cooling Clamp and simple shapes (e.g. Chips, glue) but not `lvDet` or `lvModule` itself. These 'simple shapes' refer to just cuboids/cylinders/etc rather than subtractions of shapes which is how the others are produced. The expected behavior here is that overlaps would be found between each of these visibly overlapping shapes. Do you know what may be causing this or how it could be fixed?. My setup typically is done by running dd4hep `geoDisplay` however with the attached root files it can be reproduced using any recent LCG view (I used 96b). Geometry ROOT files: [GeometryFiles.zip](https://github.com/root-project/root/files/5328354/GeometryFiles.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6556:116,upgrade,upgraded,116,https://root.cern,https://github.com/root-project/root/issues/6556,1,['upgrade'],['upgraded']
Deployability,"Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```; mkdir build; cd build; cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja ..; ninja; ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```; $ ./Allen --sequence hlt1_pp_default; ...; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; ...; Failed to load module SessionViewer; input_line_4:2:2: error: unknown type name 'include'; #include ""TError.h""; ^; input_line_4:2:1: error: expected unqualified-id; #include ""TError.h""; ^; input_line_4:4:2: error: unknown type name 'define'; #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \; ^; input_line_4:21:7: error: expected ';' after top level declarator; #undef ClassDef; ^; ;; input_line_5:1:2: error: unknown type name 'include'; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; input_line_5:1:1: error: expected unqualified-id; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; Failed to load module MathCore; Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load.; ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12458:768,release,releases,768,https://root.cern,https://github.com/root-project/root/issues/12458,1,['release'],['releases']
Deployability,"Dear ROOT team,. while integrating some CMake functionality provided by ROOT through the `ROOT_USE_FILE` include into our project, some small issues came up. If we are mistaken and there are better solutions than the one I provided, your advice is very welcome. Our `FindROOT.cmake` implementation looks like this:; ```cmake; find_package(ROOT QUIET CONFIG; HINTS; ${ROOT_ROOT} # aliBuild; ${ROOTSYS} # upstream; $ENV{ROOTSYS} # upstream; ${SIMPATH} # FairSoft; ); include(FindPackageHandleStandardArgs); find_package_handle_standard_args(ROOT CONFIG_MODE); include(${ROOT_USE_FILE}); ```; which is called in a `CMakeLists.txt` like this; ```cmake; find_package(ROOT 6.10.04 REQUIRED); ```. Please see the commit messages for more details about the issues we had. Best regards,; Dennis",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/916:23,integrat,integrating,23,https://root.cern,https://github.com/root-project/root/pull/916,1,['integrat'],['integrating']
Deployability,"Dear all,. after . git clone https://github.com/root-project/root.git; cd root; git checkout -b v6-28-02 v6-28-02; mkdir root_build; cd root_build; cmake ../root; cmake --build -j4. I get:; ...; [ 75%] Built target rootcling_stage1; [ 75%] Generating G__Core.cxx, ../lib/Core.pcm; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:4:; In file included from /usr/include/c++/13/bitset:52:; In file included from /usr/include/c++/13/string:47:; /usr/include/c++/13/bits/stl_iterator_base_funcs.h:81:5: error: redefinition of '__distance'; __distance(_InputIterator __first, _InputIterator __last,; ^; /usr/include/c++/13/bits/stl_iterator_base_funcs.h:81:5: note: previous definition is here; __distance(_InputIterator __first, _InputIterator __last,; ^; ... This is under opensuse Tumbleweed with latest updates. The default compiler is gcc-13. . It looks similar to an previous issue with gcc-12: https://github.com/root-project/root/issues/10478. The last time I built root (v6.26.10 in December 2022) I had no problems but I don't know what the gcc version was back then. ; Could you please have a look?; Thanks & Cheers,; --Sven",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12659:883,update,updates,883,https://root.cern,https://github.com/root-project/root/issues/12659,1,['update'],['updates']
Deployability,"Dear all,. while root-6.28.03 compiled with the patch provided in response to issue #12659 a similar problem is back now in root-6.28.04 (retrieved via latest-stable from github today). I just did (on suse TW):; ```; git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src; mkdir root_build; cd root_build; cmake ../root_src -j4; ```. and this produced:; ```; ...; [ 76%] Built target ClingUtils; [ 76%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o; [ 76%] Linking CXX shared library ../../../lib/libCling.so; [ 76%] Linking CXX executable src/rootcling_stage1; [ 76%] Built target rootcling_stage1; [ 76%] Generating G__Core.cxx, ../lib/Core.pcm; [ 76%] Built target Cling; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:52:; In file included from /usr/include/c++/13/memory_resource:60:; In file included from /usr/include/c++/13/bits/memory_resource.h:46:; /usr/include/c++/13/bits/utility.h:219:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp>>'; inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;; ^; ./usr/include/c++/13/bits/stl_pair.h:62:11: note: '/usr/include/c++/13/bits/utility.h' included multiple times, additional include site in header from module 'std.bits/stl_pair.h'; # include <bits/utility.h> // for std::tuple_element, std::tuple_size; ^; ..; ```. It's not the exact same error message as in #12659 but seems rather close in nature ...; Could you please have look if the patch from 6.28.03 needs further additions to address this in 6.28.04?. Thanks & Cheers,; --Sven",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12897:48,patch,patch,48,https://root.cern,https://github.com/root-project/root/issues/12897,2,['patch'],['patch']
Deployability,"Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```; In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:; /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0); 2149 | AllocatorType, JSONSerializer, BinaryType>; | ^; ```; After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used; ```; cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src; ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please?; With best regards,; Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12492:755,install,install,755,https://root.cern,https://github.com/root-project/root/issues/12492,3,"['install', 'release']","['install', 'installed', 'release']"
Deployability,Debug builds in nightlies (and releases),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6430:31,release,releases,31,https://root.cern,https://github.com/root-project/root/issues/6430,1,['release'],['releases']
Deployability,"Declarations without the auto keyword are not part of standard C++. Even though it is a nice feature to have, it requires a patch on top of clang and is one of the hurdles preventing us from using the upstream clang. Implicit auto injection is currently only supported at the prompt (and only in the top-most function-level scope). So it should ideally not break other features. There are a few GitHub and JIRA issues related to this feature that can also be closed if we completely remove it. For the warning messages, I'm reusing one of the existing clang warning message (to not introduce more patches on top of the clang with custom error messages). EDIT:; Glancing through JIRA issues, these are the issues that can be closed (list might not be exhaustive):. https://its.cern.ch/jira/browse/ROOT-10309; https://its.cern.ch/jira/browse/ROOT-10593; https://its.cern.ch/jira/browse/ROOT-10284; https://its.cern.ch/jira/browse/ROOT-8828; https://its.cern.ch/jira/browse/ROOT-8538; https://its.cern.ch/jira/browse/ROOT-7970. # This Pull request:; Requires https://github.com/root-project/roottest/pull/1056 to be merged for tests to pass. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14645:124,patch,patch,124,https://root.cern,https://github.com/root-project/root/pull/14645,3,"['patch', 'update']","['patch', 'patches', 'updated']"
Deployability,"Declare an install target for a mini library for unit test support, so roottest can be built standalone",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9528:11,install,install,11,https://root.cern,https://github.com/root-project/root/pull/9528,1,['install'],['install']
Deployability,Dedicated branch now created in JSROOT repository; Same code will be submitted in v6-16-00-patches branch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2964:91,patch,patches,91,https://root.cern,https://github.com/root-project/root/pull/2964,1,['patch'],['patches']
Deployability,"Default value is on in C++ code,; but was remained off in system.rootrc and over-rulling C++. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14080:189,update,updated,189,https://root.cern,https://github.com/root-project/root/pull/14080,2,['update'],['updated']
Deployability,Delete v636 release notes [v6.34],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16835:12,release,release,12,https://root.cern,https://github.com/root-project/root/pull/16835,1,['release'],['release']
Deployability,Deploy root on pip,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14890:0,Deploy,Deploy,0,https://root.cern,https://github.com/root-project/root/issues/14890,1,['Deploy'],['Deploy']
Deployability,"Deprecate VMC, remove remnant of already removed options, and remove deprecated options not yet removed for the next release. The only remaining option is memstat, which I will do in a separate pull request.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3804:117,release,release,117,https://root.cern,https://github.com/root-project/root/pull/3804,1,['release'],['release']
Deployability,"Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; .dot file generated with RooAbsArg::graphVizTree produces an invalid .dot file if the graph title contains spaces. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; RooAbsArg::graphVizTree should produce a valid .dot file even when the names of the elements contain spaces. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ROOT macro, save to graphvizMWE.C and run with `root graphvizMWE.C`:; ```; void graphvizMWE(void){; // Create a simple dependency tree; RooRealVar x{};; RooRealVar sigma{};; RooRealVar mu{};. RooGaussian Gaussian(""my_gaussian"", ""Gaussian"", x, mu, sigma);; RooGaussian GaussianWithSpace(""my gaussian"", ""Gaussian"", x, mu, sigma);. // Create GraphViz trees; Gaussian.graphVizTree(""tree_example.dot"");; GaussianWithSpace.graphVizTree(""tree_example2.dot""); // Produces invalid output; }; ```; Then attempt to convert the produced `.dot` files to images using; `dot -Tpng tree_example.dot -o example1.png # Produces an image`; `dot -Tpng tree_example2.dot -o example2.png # Error!`. The first of these will produce a .png image, the second will fail with a message like: `Error: tree_example2.dot: syntax error in line 1 near 'gaussian'`. Can be fixed by enclosing the graph title in quotes: i.e. changing line 1 of `tree_example2.dot` from; `digraph my gaussian{`; to; `digraph ""my gaussian""{`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT built from source. ROOT Version: 6.23/01; Built for linuxx8664gcc on Jun 05 2020, 15:06:16; From heads/master@v6-23-01-229-gd4ac502837. Ubuntu 18.04.5 LTS",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7067:2148,install,install,2148,https://root.cern,https://github.com/root-project/root/issues/7067,1,['install'],['install']
Deployability,"Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When plotting a RooFit function the `RooCurve` will try to use the `plotSamplingHint` method to get a list of optimal point locations. When using a `RooHistPdf` or `RooHistFunc` the list contains points a little (~1e-8*range) before and after each bin boundary. ; If the bins are aligned to the range (as they often are), one point per side falls outside the range.; However, there is no guarantee that the function is safe to execute there, so this may cause a NaN to be inserted in the plot.; Furthermore, when this happens the `RooCurve` seems to stop collecting points and just uses the current list, which in case of an histogram only contains the bin boundaries, meaning that the curve is not smooth between bins. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The function is evaluated only in range, no NaN in frame, smooth function between bin boundaries. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testRooHistPdfBinning() {; RooRealVar x(""x"", """", 0., 1);; ; RooGenericPdf sqrtPdf(""sqrtPdf"", ""sqrt(x)"", x);; ; TH1F h(""h"", """", 2, 0., 1);; h.Fill(0.2, 2);; h.Fill(0.8, 1);; RooDataHist dh(""dh"", """", x, RooFit::Import(h));; RooHistPdf hpdf(""hpdf"", """", x, dh);; ; RooRealVar frac(""frac"", """", 0.5, 0, 1);; RooAddPdf p(""p"", """", RooArgSet(sqrtPdf, hpdf), frac);; ; auto frame = x.frame();; p.plotOn(frame);; frame->Draw();; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Centos7, ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11482:2191,install,install,2191,https://root.cern,https://github.com/root-project/root/issues/11482,1,['install'],['install']
Deployability,"Describe the bug; When starting ROOT on an arm64 machine a symbol-not-found message appears for about 10 times before getting to the prompt.; The message is related to SOFIE:. ```; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL22make_ROperator_ReshapeERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Reshape(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; Symbol found in '/cvmfs/sft.cern.ch/lcg/releases/ROOT/6.26.04-22463/aarch64-centos7-gcc11-opt/lib/libROOTTMVASofieParser.so'; did you mean to load it with '.L /cvmfs/sft.cern.ch/lcg/releases/ROOT/6.26.04-22463/aarch64-centos7-gcc11-opt/lib/libROOTTMVASofieParser.so'?; ```. ROOT 6.24/06 works fine. ### Expected behavior; No warning message. ### To Reproduce; Steps to reproduce the behavior:; 1. Login on an ARM amchine with cvmfs, e.g. techlab-arm64-thunderx2-01 ; 2. Source dev4arm; `source /cvmfs/sft.cern.ch/lcg/views/dev4/Wed/aarch64-centos7-gcc11-opt/setup.sh`; 3. Start ROOT, e.g. `root -b -q`. ### Setup; 1. ROOT version: 6.26/04; 2. Operating system: aarch64, centos7; 3. LCG stack. ### Additional context; Affecting ATLAS (first noticed by Asoka Da Silva)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10877:1308,release,releases,1308,https://root.cern,https://github.com/root-project/root/issues/10877,2,['release'],['releases']
Deployability,"Dirty flag propagation appeared to be unnecessary in the batch mode; because the RooFitDriver manages the evaluation of nodes, but some nodes; have internal computation graphs that rely on the dirty flag; propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:; ```; Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK; Test 28 : P.d.f. marginalization through integration.............OK; ```. The only tests that still needs to be fixed now is:; ```; Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9458:440,integrat,integration,440,https://root.cern,https://github.com/root-project/root/pull/9458,1,['integrat'],['integration']
Deployability,Disable pymva since old ROOT version will not support the latest versions of the python tools which are installed in the build nodes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15025:104,install,installed,104,https://root.cern,https://github.com/root-project/root/pull/15025,1,['install'],['installed']
Deployability,Disable rtcxxmodules if ROOT is already installed in the system,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4512:40,install,installed,40,https://root.cern,https://github.com/root-project/root/pull/4512,1,['install'],['installed']
Deployability,"Disable the rcanvas/rbox.py test which is failing with the following errors:; ```; Start 993: tutorial-rcanvas-rbox-py. 993: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python39-32/python.exe^C:/Users/bellenot/git/master/tutorials/launcher.py^C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"" ""-DSYS=C:/Users/bellenot/build/release"" ""-DENV=ROOTSYS=C:/Users/bellenot/build/release#PYTHONPATH=C:/Users/bellenot/build/release/bin#PYTHIA8DATA=C:/Users/bellenot/libs/pythia8/8.3.03/share/Pythia8/xmldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9035:349,release,release,349,https://root.cern,https://github.com/root-project/root/pull/9035,4,['release'],['release']
Deployability,Disable the silly workaround for cling not being able to parse the STL headers anymore after the update of Visual Studio v16.7.0. Works now with the upgrade of LLVM and Visual Studio 16.10.3.; This workaround had side effects when trying to use code supporting CUDA (e.g. boost) inside the interpreter.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8617:97,update,update,97,https://root.cern,https://github.com/root-project/root/pull/8617,2,"['update', 'upgrade']","['update', 'upgrade']"
Deployability,Disable tutorials failing on Windows (x86) with VS 2022 v17.8 This is needed to update the build nodes and add the new ones,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14629:80,update,update,80,https://root.cern,https://github.com/root-project/root/pull/14629,2,['update'],['update']
Deployability,"Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15187:147,install,installed,147,https://root.cern,https://github.com/root-project/root/pull/15187,6,['install'],['installed']
Deployability,"Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way!. ### Explain what you would like to see improved; At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved; As far as I can tell, what happens is this:. ```; THistPainter::Paint() is called; -> PaintInit() is called, this populates the Hparam structure with the old axis ranges; -> PaintFrame() is called; -> RecalculateRange() is called; -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal; -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel; -> The frame is painted with the old axis ranges; -> The histogram is drawn with old ranges; ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce; Simple macro - try zooming on the lower axis:; `; {; TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);; hist->FillRandom(""gaus"", 10000);; TF1 *func = new TF1(""func"", ""gaus"");; hist->Fit(func);; TRatioPlot *plot = new TRatioPlot(hist);; plot->Draw();; }; `. ### Setup; 1. ROOT 6.25/01; 2. macOS 11.4; 3. build from git. ### Additional context; There is a comment ; ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize""; in TRatioPlot.cxx so I assume at least one other person knows about this behavior",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9263:299,update,update,299,https://root.cern,https://github.com/root-project/root/issues/9263,3,['update'],"['update', 'updates']"
Deployability,"Discussed with @etejedor, still needs to be discussed with @oshadura.; Commit message needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5607:98,update,updated,98,https://root.cern,https://github.com/root-project/root/pull/5607,1,['update'],['updated']
Deployability,"Distributed RDataFrame internally checks the category an operation belongs to (e.g. transformation, action) through enums in Python. The enum package was added in Python 3.4 and can be installed in previous Python versions, so it should be added to requirements.txt with a check on the python version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7770:185,install,installed,185,https://root.cern,https://github.com/root-project/root/pull/7770,1,['install'],['installed']
Deployability,Do not install internal CMake modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4099:7,install,install,7,https://root.cern,https://github.com/root-project/root/pull/4099,1,['install'],['install']
Deployability,"Do not set up the iterator in the ctor.; ; Many interfaces in ROOT namely TCling do not need to iterate over decls to find what they look for. They use the regular lookup facilities which are provided by cling or clang.; ; In a few cases we still use the pattern:; `TClingClassInfo(fInterpreter) ci; ci.GetDataMember(..);`; where we are supposed to look for a ROOT's definition of a data member on the global scope. In turn, this pattern does not walk the decls but performs a 'regular' lookup.; ; This patch removes the expensive setup of the iterators (triggering humongous amount of deserializations). We lazily set up the iterators only when we are about to start iterating (most notably coming from the legacy PyROOT interfaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1668:503,patch,patch,503,https://root.cern,https://github.com/root-project/root/pull/1668,1,['patch'],['patch']
Deployability,"Documentation present in the TStatistic files has been updated to match Doxygen syntax. Data members with a little description are now visible in the docs, Class member functions documentation has been; pulled out of their definitions and changed a bit to better explain the algorithms involved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3809:55,update,updated,55,https://root.cern,https://github.com/root-project/root/pull/3809,1,['update'],['updated']
Deployability,Documentation updates,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5649:14,update,updates,14,https://root.cern,https://github.com/root-project/root/pull/5649,1,['update'],['updates']
Deployability,Documentation updates and sometimes also code changes that e.g. format warning messages or replace ineffective `assert`s by `throw`s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5315:14,update,updates,14,https://root.cern,https://github.com/root-project/root/pull/5315,1,['update'],['updates']
Deployability,Don't install a SIGPIPE handler,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/413:6,install,install,6,https://root.cern,https://github.com/root-project/root/pull/413,1,['install'],['install']
Deployability,Don't install eve7 files if eve7 is not built,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3436:6,install,install,6,https://root.cern,https://github.com/root-project/root/pull/3436,1,['install'],['install']
Deployability,Don't install h2root.1 and g2root.1 man pages when fortran is OFF,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11598:6,install,install,6,https://root.cern,https://github.com/root-project/root/pull/11598,1,['install'],['install']
Deployability,Don't install intermediate static lib minicern,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1675:6,install,install,6,https://root.cern,https://github.com/root-project/root/pull/1675,1,['install'],['install']
Deployability,Don't install intermediate static libs (mathtext and minicern).; Don't add JupyROOT python extension to cmake exports.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1643:6,install,install,6,https://root.cern,https://github.com/root-project/root/pull/1643,1,['install'],['install']
Deployability,Don't install roofit files when roofit is disabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12402:6,install,install,6,https://root.cern,https://github.com/root-project/root/pull/12402,1,['install'],['install']
Deployability,Done! I think I've integrated all changes. **TODO:**. - [x] Make commit message more expressive; - [x] Try to make the counters in `RDefineBase` and `GraphNode` atomics; - [x] Look for another solution for the static `TRegex` members; - [x] Add a random sleep to the test cases to stir things up; - [x] Add tests for `Cache` and `Snapshot`; - [x] Point out in the docs that `SaveGraph` is not thread safe,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6266:19,integrat,integrated,19,https://root.cern,https://github.com/root-project/root/pull/6266,1,['integrat'],['integrated']
Deployability,Doxygen fixes in integrator classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7746:17,integrat,integrator,17,https://root.cern,https://github.com/root-project/root/pull/7746,1,['integrat'],['integrator']
Deployability,Doxygen fixes in integrator classes; Typos,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7746:17,integrat,integrator,17,https://root.cern,https://github.com/root-project/root/pull/7746,1,['integrat'],['integrator']
Deployability,"Dropbox folders (among others) can contain parentheses.; Without this patch, ROOT and cling misinterpret those directories as arguments.; Instead, first find the end of the "".x"" line.; If the previous token was a closing paren, we assume that the preceding; tokens (up to the non-nested opening paren) belong to the argument.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3811:70,patch,patch,70,https://root.cern,https://github.com/root-project/root/pull/3811,1,['patch'],['patch']
Deployability,Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:; ```; -- Looking for python; -- Looking for numpy (python package); -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option; ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:; ```; -- Looking for python; -- Looking for numpy (python package); CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):; TMVA: numpy python package not found and tmva-pymva component required; (python executable:; /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python); ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:; ```; ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2972:91,configurat,configuration,91,https://root.cern,https://github.com/root-project/root/pull/2972,3,"['configurat', 'patch']","['configuration', 'patch']"
Deployability,"Due to the default behavior of CMake. https://gitlab.kitware.com/cmake/cmake/issues/17122. when using install(DIRECTORY ... PATTERN), if there are some folders; that don't contain the given PATTERN they are also created as empty; folders. This was causing the problem already addressed in 1d2e76. As suggested in. https://stackoverflow.com/questions/55451084/cmake-files-matching-pattern-copies-empty-directories/55722518#55722518. we apply the workaround consisting in addressing the '*pcm' files with; file(GLOB ...) and then install them with install(FILES ...).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4751:102,install,install,102,https://root.cern,https://github.com/root-project/root/pull/4751,3,['install'],['install']
Deployability,"During ROOT's build of Core.pcm, byproduct modules are built. rootcling was complaining about some headers not appearing in Core.pcm, despite them ending up in the byproduct pcms. Simply don't complain about headers not in the pcm if these headers are actually in a byproduct. In the same vein, do not forcefully include them in teh pcm, as they are already included in the byproduct which should be sufficient. This circumvents the warnings:. ```; [2751/6001] Generating G__Core.cxx, ../lib/Core.pcm; Warning in <CheckModuleValid>: after creating module ""Core"" the following headers are not part of that module:; strlcpy.h (already part of top-level module ""ROOT_Foundation_C""); snprintf.h (already part of top-level module ""ROOT_Foundation_C""); ESTLType.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TClassEdit.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); ThreadLocalStorage.h (already part of top-level module ""ROOT_Foundation_C""); ROOT/RStringView.hxx (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TIsAProxy.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TVirtualIsAProxy.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); ```. (cherry picked from commit a12ef5cf047445a952108763adc66908a17649ba). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12097:1410,update,updated,1410,https://root.cern,https://github.com/root-project/root/pull/12097,1,['update'],['updated']
Deployability,"During ROOT's build of Core.pcm, byproduct modules are built.; rootcling was complaining about some headers not appearing in Core.pcm,; despite them ending up in the byproduct pcms. Simply don't complain about headers not in the pcm if these headers; are actually in a byproduct. In the same vein, do not forcefully include; them in teh pcm, as they are already included in the byproduct which should; be sufficient. This circumvents the warnings:. ```; [2751/6001] Generating G__Core.cxx, ../lib/Core.pcm; Warning in <CheckModuleValid>: after creating module ""Core"" the following headers are not part of that module:; strlcpy.h (already part of top-level module ""ROOT_Foundation_C""); snprintf.h (already part of top-level module ""ROOT_Foundation_C""); ESTLType.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TClassEdit.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); ThreadLocalStorage.h (already part of top-level module ""ROOT_Foundation_C""); ROOT/RStringView.hxx (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TIsAProxy.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); TVirtualIsAProxy.h (already part of top-level module ""ROOT_Foundation_Stage1_NoRTTI""); ```. (cherry picked from commit a12ef5c)# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12098:1380,update,updated,1380,https://root.cern,https://github.com/root-project/root/pull/12098,1,['update'],['updated']
Deployability,"DynamicLibraryManager only looks at LD_LIBRARY_PATH and friends, but for install / prefix; builds that might not point to the ROOT library dir. Make it explicit that the; DynamicLibraryManager is supposed to look at the directory containing ROOT libraries.; Fixes install-with-prefix builds with RPATH, that now do not need a fake LD_LIBRARY_PATH; anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4710:73,install,install,73,https://root.cern,https://github.com/root-project/root/pull/4710,2,['install'],"['install', 'install-with-prefix']"
Deployability,"ERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xxhash builtin_zstd ccache clad dataframe exceptions gdml http imt mlp pyroot roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum uring vdt x11; -- Configuring incomplete, errors occurred!; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeError.log"".; ```; <!--; A clear and concise description of ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7654:4529,Install,Install,4529,https://root.cern,https://github.com/root-project/root/issues/7654,1,['Install'],['Install']
Deployability,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h; Segmentation fault; ```; I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer; ``` bash; # Install mold and have it available in PATH, for example in /usr/bin; export LDFLAGS=""-fuse-ld=mold""; # from the root source; mkdir builddir; cd builddir; cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja; ninja; ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15473:2347,Install,Install,2347,https://root.cern,https://github.com/root-project/root/issues/15473,2,['Install'],"['Install', 'Installation']"
Deployability,"Each module has a set of identifier tables which aid lookup. Based on this information clang decides if it needs a declaration to be deserialized. Namespace partitions and other C++ entities may have semantically the same identifier lookup tables across multiple modules. Since lookup is a heavily used operation in compilers clang tries to optimize it as much as possible. In case it sees more than 4 such lookup tables it merges them together into a single table aiming to keep the lookup algorithmic complexity of O(1). This logic approach has several assumptions:; * The progam will use only a small superset of the modules it needs;; * The program will be compiled in multiple TUs and merging of tables will not be called often;. In the interpreter context where we make all module available the merging of such tables becomes CPU intense operation at runtime which produces a lot of temporary reallocations. Moreover, we have seen a lot of profiles where the merging operation dominates (by around 18%). This patch tries to make the merging far less often. On some short benchmarks ran locally we get (70-80%) runtime improvement and ~10% reduction in memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4761:1015,patch,patch,1015,https://root.cern,https://github.com/root-project/root/pull/4761,1,['patch'],['patch']
Deployability,"Each module has a set of identifier tables which aid lookup. Based on this; information clang decides if it needs a declaration to be deserialized. Namespace partitions and other C++ entities may have semantically the same; identifier lookup tables across multiple modules. Since lookup is a heavily used; operation in compilers clang tries to optimize it as much as possible. In case; it sees more than 4 such lookup tables it merges them together into a single; table aiming to keep the lookup algorithmic complexity of O(1). This logic approach has several assumptions:; * The progam will use only a small superset of the modules it needs;; * The program will be compiled in multiple TUs and merging of tables will not; be called often;. In the interpreter context where we make all module available the merging of; such tables becomes CPU intense operation at runtime which produces a lot of; temporary reallocations. Moreover, we have seen a lot of profiles where the; merging operation dominates (by around 18%). This patch tries to make the merging far less often. On some short benchmarks ran; locally we get (70-80%) runtime improvement and ~10% reduction in memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4774:1024,patch,patch,1024,https://root.cern,https://github.com/root-project/root/pull/4774,1,['patch'],['patch']
Deployability,Editors like VIM creates temporary files (.*.swp) that were added into the list of files to be moved or installed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/528:104,install,installed,104,https://root.cern,https://github.com/root-project/root/pull/528,1,['install'],['installed']
Deployability,"Effectively do what the old comments already say should be done. Remove the indirection to TFormula in TActivationFunction and call C++ code directly. This makes the constructors and destructors trivial (might even default them,; no opinion from my side, happy to update if you have a preference). Also update the comments, where they seem just copy&paste from other files along with the skeleton. PS: I thought I had already discussed (part of?) this at some point in the past but really don't recall. And I guess in a moment from now I will see what clang-format thinks about the change.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2520:264,update,update,264,https://root.cern,https://github.com/root-project/root/pull/2520,2,['update'],['update']
Deployability,"Enable ROOT's builtin_llvm=Off. This patch allows ROOT to be built against compatible external llvm (5.0 or 5.0.1). Note that we still need to build clang (eg. we require builtin_clang=On) due to the ROOT-specific patches which are not yet upstream. Since we have externally installed llvm, we configure and build clang as a standalone project. The configuration relies on finding llvm-config-5.0 and uses an adapted version of the standard clang standalone build procedure. Clang provides dependencies such as FileCheck and not which are used by cling's testsuite and are not being installed with the standard llvm package. Cling (which depends on llvm and clang) is built as a clang tool to avoid unresolved dependencies to clang and complicating further the already complicated cmake setup.; ; This patch intends a minimal change and follows the initial (suboptimal) design to configure and build llvm, clang and cling as part of ROOT. An ultimate solution would be to have llvm, clang and cling built as separate standalone projects (following the recommended way by the LLVM cmake developers). This should reduce the compile times by approx 20% (if we have llvm-5.0-dev installed) and make cross compilation of ROOT a little easier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1632:37,patch,patch,37,https://root.cern,https://github.com/root-project/root/pull/1632,7,"['configurat', 'install', 'patch']","['configuration', 'installed', 'patch', 'patches']"
Deployability,Eve-7 Backport of #9643 to v6-26 patches branch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9679:33,patch,patches,33,https://root.cern,https://github.com/root-project/root/pull/9679,1,['patch'],['patches']
Deployability,Eve-7: Major update for FireworksWeb and for standalone JS renderer.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4617:13,update,update,13,https://root.cern,https://github.com/root-project/root/pull/4617,1,['update'],['update']
Deployability,Eve-7: add updates in v6-20 ReleaseNotes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4849:11,update,updates,11,https://root.cern,https://github.com/root-project/root/pull/4849,2,"['Release', 'update']","['ReleaseNotes', 'updates']"
Deployability,"Even if the test collection comment is conveying it, it's important to make those platforms fail that have failing tests, for visibility reasons. This fixes https://github.com/root-project/root/issues/12307. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12812:303,update,updated,303,https://root.cern,https://github.com/root-project/root/pull/12812,1,['update'],['updated']
Deployability,"Even though it's build and can be found in the build directory, it's not installed anymore. xrdcp is the default way to download files through the CLI, so I'd vote for having it back as part of the ROOT installation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7441:73,install,installed,73,https://root.cern,https://github.com/root-project/root/issues/7441,2,['install'],"['installation', 'installed']"
Deployability,"Every RooFit pdf is evaluated with a set of variables to normalize over; (normalization set). A pointer to the last used normalization set is; stored in the pdf class. sometimes, pdfs are evaluated without a; normalization set in RooFit if the normalization doesn't matter. But for; a specific class the normalization always matters: the RooAddPdf Because; if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used; normalization set if you evaluate a RooAddPdf without a normalization; set. But since the pdf only has a *pointer* to the last-used; normalization set, it will have an invalid pointer if the actual; previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles; memory every 6000 RooArgSets, the invalid `_normSet` problem only gets; visible in large models, but if the model is large enough it causes; reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set; into the RooAddPdf, instead of only storing a pointer. Furthermore, the; logic to override the empty normalization set with the last-stored; normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding; the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8580:1412,update,updated,1412,https://root.cern,https://github.com/root-project/root/pull/8580,3,"['patch', 'release', 'update']","['patch', 'release', 'updated']"
Deployability,"Every RooFit pdf is evaluated with a set of variables to normalize over; (normalization set). A pointer to the last used normalization set is; stored in the pdf class. sometimes, pdfs are evaluated without a; normalization set in RooFit if the normalization doesn't matter. But for; a specific class the normalization always matters: the RooAddPdf Because; if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used; normalization set if you evaluate a RooAddPdf without a normalization; set. But since the pdf only has a *pointer* to the last-used; normalization set, it will have an invalid pointer if the actual; previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles; memory every 6000 RooArgSets, the invalid `_normSet` problem only gets; visible in large models, but if the model is large enough it causes; reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set; into the RooAddPdf, instead of only storing a pointer. Furthermore, the; logic to override the empty normalization set with the last-stored; normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding; the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8579:1494,patch,patch,1494,https://root.cern,https://github.com/root-project/root/pull/8579,2,"['patch', 'release']","['patch', 'release']"
Deployability,"Every time when sub-directory items are requested, set it as `gDirectory`; This helps to directly access objects from that sub-directory in command line. Also automatically update canvas drawing if it was modified during command execution. Add newline in command output",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10164:173,update,update,173,https://root.cern,https://github.com/root-project/root/pull/10164,1,['update'],['update']
Deployability,Example failure:. 562/1224 Test #541: tutorial-gl-gltf3 ...................................................***Failed Error regular expression found in output. Regex=[Error in <] 1.36 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/gl/gltf3.C...; Error in <TList::Delete>: A list is accessing an object (0x7fffd1c959a0) already deleted (list name = Functions); Error in <TList::Delete>: A list is accessing an object (0x7fffd1c95750) already deleted (list name = Functions). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10310:582,update,updated,582,https://root.cern,https://github.com/root-project/root/pull/10310,1,['update'],['updated']
Deployability,"Example with TH1F, for reproducibility, but happens for any class accessed via ROOT. >>> class MyClass(ROOT.TH1F):; ... ""My Class""; ... ; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; KeyError: 'UpdateBinContent'. The variable with the KeyError is always the variable last in the list of private data members. ; This error appears on lxplus, CentOS Linux 7 (Core), gcc version 7.3.0, CXXFLAGS=-fPIC -g -O2 -std=c++17. This error DOES NOT appear on Ubuntu 20.04.1 LTS, gcc version 9.3.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6856:222,Update,UpdateBinContent,222,https://root.cern,https://github.com/root-project/root/issues/6856,1,['Update'],['UpdateBinContent']
Deployability,Exceptions thrown in an event loop are caught to print a message. This catch block is leveraged to finalize all scheduled actions in order to properly deallocate memory where needed and save the partial results which are obtained. # This Pull request:; Is work in progress and lacks a test battery; ## Changes or fixes:; Allows to finalize actions scheduled in a RDF analysis in case an exception is thrown during the event loop. ## Checklist:. - [V] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #10484,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13546:481,update,updated,481,https://root.cern,https://github.com/root-project/root/pull/13546,1,['update'],['updated']
Deployability,Executables that are compiled with fPIE means they are compiled in a position independent manner and are almost indistinguishable from the shared objects. A reasonably reliable way to find if this was a `pie executable` is to check the `DF_1_PIE` in the dynamic section of ELF. The pseudo-code is:; ```; if DT_FLAGS_1 dynamic section entry is present; if DF_1_PIE is set in DT_FLAGS_1:; print pie executable; else; print shared object; ```; ; See https://stackoverflow.com/questions/34519521/why-does-gcc-create-a-shared-object-instead-of-an-executable-binary-according-to/34522357#34522357. Fixes #7366. Patch by Alexander Penev (@alexander-penev),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9404:605,Patch,Patch,605,https://root.cern,https://github.com/root-project/root/pull/9404,1,['Patch'],['Patch']
Deployability,"Execute on what was announced in the 6.34 release notes and indicated by deprecation macros and doxygen tags. As ROOT 6.36 will be the next release after ROOT 6.34 and the current `master` branch is leading up to that next release, the code should be removed now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16821:42,release,release,42,https://root.cern,https://github.com/root-project/root/pull/16821,6,['release'],['release']
Deployability,Explicitly specify that integers in the RNTuple anchor are encoded in big-endian. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15700:133,update,updated,133,https://root.cern,https://github.com/root-project/root/pull/15700,1,['update'],['updated']
Deployability,"Export in ROOTConfig.cmake the list of all options, too. This patch is a prerequisite to fix ROOT-9405.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2122:62,patch,patch,62,https://root.cern,https://github.com/root-project/root/pull/2122,1,['patch'],['patch']
Deployability,"Extend the RooDataHist tests to also validate the schema evolution; from version 5 and version 6. Version 6 is the current version, so the `dataHistv6_ref.root` reference; file was produced with ROOT master. Version 5 was used in ROOT 6.24,; which was used to produce the `dataHistv5_ref.root` reference file. The version 6 reference file is a little bit smaller than the version 5 file, as the `_realVars` member was removed with version 6. A nice aspect of the version 6 update is also that it's backwards compatible. The `initialize()` function is called in the [custom streamer](https://github.com/root-project/root/blob/v6-24-00-patches/roofit/roofitcore/src/RooDataHist.cxx#L1995) of RooDataHist, so if the `_realVars` member is missing in the ROOT file it will still be initialized. This fixes issue https://github.com/root-project/root/issues/8037.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8090:473,update,update,473,https://root.cern,https://github.com/root-project/root/pull/8090,2,"['patch', 'update']","['patches', 'update']"
Deployability,Extra patches used by ALICE - v620 backport.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5407:6,patch,patches,6,https://root.cern,https://github.com/root-project/root/pull/5407,1,['patch'],['patches']
Deployability,"F1(const char* name, double xmin, double xmax, int npar, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2 (a float is required); TF1::TF1(const char* name, const char* formula, double xmin = 0, double xmax = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault, bool vectorize = false) =>; TypeError: could not convert argument 2 (expected string or Unicode object, function found); TF1::TF1(const char* name, ROOT::Math::ParamFunctorTempl<double> f, double xmin = 0, double xmax = 1, int npar = 0, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2; TF1::TF1(const char* name, Double_t(*)(Double_t*,Double_t*) fcn, double xmin = 0, double xmax = 1, int npar = 0, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2; TF1::TF1(const char* name, Double_t(*)(const Double_t*,const Double_t*) fcn, double xmin = 0, double xmax = 1, int npar = 0, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2; Failed to instantiate ""TF1(std::string,function,int,double)""; ``` . <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. dev3ptython2 LCG slot (ROOT v6.25/01) ; 2. lxplus.cern.ch ; 3. ; ```; ( source /cvmfs/sft.cern.ch/lcg/views/LCG_100/${CMTCONFIG}/setup.sh ; python test.py ); ```. ### Additional context; <!--; Add any other context about the problem here.; -->. It worked for all previous versions of ROOT in all released LCG slots; and it works also for dev3 and decv3python39 LCG slots",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8152:3204,install,install,3204,https://root.cern,https://github.com/root-project/root/issues/8152,2,"['install', 'release']","['install', 'released']"
Deployability,"FS='""' '{ print $1 }' | sort | uniq -c; 206 access(; 2 chdir(; 1 execve(; 1 +++ exited with 0 +++; 181 getcwd(; 2 newfstatat(0, ; 2 newfstatat(1, ; 2 newfstatat(2, ; 532 newfstatat(3, ; 29 newfstatat(4, ; 10123 newfstatat(AT_FDCWD, ; 546 openat(AT_FDCWD, ; 843 readlink(; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95944, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95946, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95950, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; ```; And; ```; time python -c ""import ROOT"". real	0m0.779s; user	0m0.572s; sys	0m0.203s; ```. That is a factor ~3 reduction in `newfstatat` calls and >40% improved speed for `import ROOT`. One of the main motivators is the presence of spurious paths in .pcm files, which are then traversed when loading the library. For example, taken a ROOT sourced from the install directory, I see; ```; $: strings lib/Core.pcm | grep rootbuild; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/include; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_1; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_2; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_4; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_5; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_6; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-rele",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14296:2584,install,install,2584,https://root.cern,https://github.com/root-project/root/issues/14296,1,['install'],['install']
Deployability,"Factor out the URL - it's unconventional to have two URLs, and it's reasonable to just update the version number as part of the URL. Remove patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12726:87,update,update,87,https://root.cern,https://github.com/root-project/root/pull/12726,2,"['patch', 'update']","['patches', 'update']"
Deployability,"Fatal error after running ""make install"" when built against LLVM 9",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:32,install,install,32,https://root.cern,https://github.com/root-project/root/issues/7055,1,['install'],['install']
Deployability,"Fedora 37 reached end-of-life on 2023-12-05:; https://en.wikipedia.org/wiki/Fedora_Linux; See the section ""Releases"". We should therefore consider removing it from the CI. This commit is made now because the outdated xrootd version in the Fedora 37 repos is a problem from migrating to the XRootDConfig.cmake file shipped by XRootD itself (see #14180).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14305:107,Release,Releases,107,https://root.cern,https://github.com/root-project/root/pull/14305,1,['Release'],['Releases']
Deployability,"FileExtension> > > const&, bool, cling::Interpreter const*) () from /home/geonwoo/root/lib/libCling.so; #16 0x00007fd7ce21b224 in TCling::TCling(char const*, char const*, char const* const*) () from /home/geonwoo/root/lib/libCling.so; #17 0x00007fd7ce21ceea in CreateInterpreter () from /home/geonwoo/root/lib/libCling.so; #18 0x00007fd7d1edeb13 in TROOT::InitInterpreter() () from /home/geonwoo/root/lib/libCore.so.6.22; #19 0x00007fd7d1edf00f in ROOT::Internal::GetROOT2() () from /home/geonwoo/root/lib/libCore.so.6.22; #20 0x00007fd7d1eebdcd in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/geonwoo/root/lib/libCore.so.6.22; #21 0x00007fd7d2263f0f in TRint::TRint(char const*, int*, char**, void*, int, bool) () from /home/geonwoo/root/lib/libRint.so.6.22; #22 0x0000561a6211b174 in main (); ===========================================================; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; i installed root from homepage, ; ```; $ wget https://root.cern/download/root_v6.22.00.Linux-ubuntu19-x86_64-gcc9.2.tar.gz; $ tar -xzvf root_v6.22.00.Linux-ubuntu19-x86_64-gcc9.2.tar.gz; $ source root/bin/thisroot.sh # also available: thisroot.{csh,fish,bat}; ```; i finished these steps and finally i had tried to excute root by $root and then this error message had poped up . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1.latest version 2. oracle VM VirtualBox in window 10 3.i don't know i just followed steps from cern homepage. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6859:9541,install,installed,9541,https://root.cern,https://github.com/root-project/root/issues/6859,2,['install'],"['install', 'installed']"
Deployability,Final update to use LZ4 as a default for ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1749:6,update,update,6,https://root.cern,https://github.com/root-project/root/pull/1749,1,['update'],['update']
Deployability,First Patch AutoEnoders,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/686:6,Patch,Patch,6,https://root.cern,https://github.com/root-project/root/pull/686,1,['Patch'],['Patch']
Deployability,First Patch RNN,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/685:6,Patch,Patch,6,https://root.cern,https://github.com/root-project/root/pull/685,2,['Patch'],['Patch']
Deployability,First Patch for Autoencoders,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/708:6,Patch,Patch,6,https://root.cern,https://github.com/root-project/root/pull/708,1,['Patch'],['Patch']
Deployability,"First introduced by #5083, a mechanism was put in place to build PyROOT for both Python 2 and Python 3. As Python 2 is not supported anymore by ROOT, this patch can be reverted. This helps to get again closer with upstream cppyy and CPyCppyy, avoids setting environment variables when importing ROOT, and reduces overhead in importing the ROOT module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14703:155,patch,patch,155,https://root.cern,https://github.com/root-project/root/pull/14703,1,['patch'],['patch']
Deployability,First patch Autoencoders,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/696:6,patch,patch,6,https://root.cern,https://github.com/root-project/root/pull/696,1,['patch'],['patch']
Deployability,First patch CNN,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/664:6,patch,patch,6,https://root.cern,https://github.com/root-project/root/pull/664,1,['patch'],['patch']
Deployability,"First reported on the forum at https://root-forum.cern.ch/t/problem-with-type-conversion-for-lorentz-vector/53639 . Minimal reproducer:. ```cpp; #include <Math/Vector4D.h>; #include <ROOT/RDataFrame.hxx>. float TakeMVector(ROOT::Math::PtEtaPhiMVector &) { return 4.2; }. int main() {; ROOT::RDataFrame df(""Tree"", ""example_file.root"");. df.Define(""unused"", ""L""); // the failure disappears if this is commented out, even if ""unused"" is never used. auto dff4 = df.Define(""x"", TakeMVector, {""L""});; dff4.Max<float>(""x"").GetValue();; }; ```. with the input file at https://root-forum.cern.ch/t/problem-with-type-conversion-for-lorentz-vector/53639/3?u=eguiraud . The program errors out with:. ```; The branch L contains data of type ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >. It cannot be accessed by a TTreeReaderValue<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double> >>; ```. (so TTreeReaderValue cannot read a `LorentzVector<PtEtaPhiM4D<Double32_t>>` as a `LorentzVector<PtEtaPhiM4D<double>>`). The following patch by @Axel-Naumann seems to fix the problem:. ```diff; diff --git a/tree/treeplayer/src/TTreeReaderValue.cxx b/tree/treeplayer/src/TTreeReaderValue.cxx; index 2323cffee4..6d938f1b14 100644; --- a/tree/treeplayer/src/TTreeReaderValue.cxx; +++ b/tree/treeplayer/src/TTreeReaderValue.cxx; @@ -554,7 +554,8 @@ void ROOT::Internal::TTreeReaderValueBase::CreateProxy() {; auto branchActualTypeAsClass = dynamic_cast<TClass*>(branchActualType);; auto inheritance = dictAsClass && branchActualTypeAsClass && branchActualTypeAsClass->InheritsFrom(dictAsClass);. - if (fDict != branchActualType && !inheritance) {; + if (fDict != branchActualType && !inheritance; + && dictAsClass->GetTypeInfo() != branchActualTypeAsClass->GetTypeInfo()) {; TDataType *dictdt = dynamic_cast<TDataType*>(fDict);; TDataType *actualdt = dynamic_cast<TDataType*>(branchActualType);; bool complainAboutMismatch = true;; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12334:1038,patch,patch,1038,https://root.cern,https://github.com/root-project/root/issues/12334,1,['patch'],['patch']
Deployability,"Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846:219,update,update,219,https://root.cern,https://github.com/root-project/root/pull/12846,6,['update'],['update']
Deployability,"Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13842:219,update,update,219,https://root.cern,https://github.com/root-project/root/pull/13842,3,['update'],['update']
Deployability,"Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'; however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in; the file is empty and thus no information was recorded about `ExpensiveObject`,; consequently when the map's StreamerInfo request the TClass for the underlying pair,; it is returned nullptr (since we no longer create the TClass for a pair where one or; more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7926:522,update,updated,522,https://root.cern,https://github.com/root-project/root/pull/7926,3,['update'],['updated']
Deployability,Fix 6767 missing TStreamerInfo update during a TClass reload,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6769:31,update,update,31,https://root.cern,https://github.com/root-project/root/pull/6769,1,['update'],['update']
Deployability,Fix CMake configuration and build with oneTBB,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8239:10,configurat,configuration,10,https://root.cern,https://github.com/root-project/root/pull/8239,1,['configurat'],['configuration']
Deployability,Fix CMake configuration without Python,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13292:10,configurat,configuration,10,https://root.cern,https://github.com/root-project/root/pull/13292,1,['configurat'],['configuration']
Deployability,"Fix Cocoa GUI for MacOS14 and Clang15. . The following collection of patches was provided by Timur Pocheptsoff <tpochep@mail.ru>. - [x] Fix TBrowser ""white window""; - [x] Fix TBrowser text editor (it does not echo text until the window is resized); - [x] Fix the OpenGL viewer. Fixes https://github.com/root-project/root/issues/13834",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13885:69,patch,patches,69,https://root.cern,https://github.com/root-project/root/pull/13885,1,['patch'],['patches']
Deployability,Fix PyROOT installation on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6205:11,install,installation,11,https://root.cern,https://github.com/root-project/root/pull/6205,1,['install'],['installation']
Deployability,Fix ROOT-10552 incorrect StreamerInfoList update.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5012:42,update,update,42,https://root.cern,https://github.com/root-project/root/pull/5012,3,['update'],['update']
Deployability,"Fix ROOT-10890 , TMathLLGcgs() was wrong by 10^6 ! . Update also new values of gravitational constant according to latest values from NIST; (https://physics.nist.gov/cuu/Constants/index.html); with better uncertainty (22ppm). Use also the new SI definition , see https://en.wikipedia.org/wiki/2019_redefinition_of_the_SI_base_units; Now the Planck , Boltzmann constants and Avogado number are exact in the new definition.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5999:53,Update,Update,53,https://root.cern,https://github.com/root-project/root/pull/5999,1,['Update'],['Update']
Deployability,"Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever; there was a problem reading the StreamerInfo record and; introduces a useless attempt to read from file in the case; of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread; scalability the override ability of TFile::GetStreamerInfoList; is replaced by an override of TFile::GetStreamerInfoListImp with; updated return type and arguments. If a class override; TFile::GetStreamerInfoList you will now see a compilation error like:; {code}; /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function; virtual TList *GetStreamerInfoList();; ^; /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here; virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl; ^; {code}. Instead you need to override the protected method:. {code}; InfoListRet GetStreamerInfoListImpl(bool lookupSICache);; {code}. which can be implemented as; {code}; InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {; ROOT::Internal::RConcurrentHashColl::HashValue hash;; TList *infolist = nullptr;; //; // Body of the former Derived::GetStreamerInfoList with the; // return statement replaced with something like:. // The second element indicates success or failure of the load.; // (i.e. {nullptr, 0, hash} indicates the list has already been processed; // {nullptr, 1, hash} indicates the list failed to be loaded; return {infolist, 0, hash};; }; {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2725:489,update,updated,489,https://root.cern,https://github.com/root-project/root/pull/2725,1,['update'],['updated']
Deployability,Fix TF1::Update which reset fHistogram attributes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14386:9,Update,Update,9,https://root.cern,https://github.com/root-project/root/pull/14386,1,['Update'],['Update']
Deployability,"Fix TMVAGui dialog setting number of signal/background events.; When changing the text fild and then clicking on ReDraw the numbers were not updates, because; the function setting the events was not called.; This fixes ROOT-7507",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6501:141,update,updates,141,https://root.cern,https://github.com/root-project/root/pull/6501,1,['update'],['updates']
Deployability,Fix `TWebCanvas` update and zooming,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8659:17,update,update,17,https://root.cern,https://github.com/root-project/root/pull/8659,1,['update'],['update']
Deployability,Fix `fatal: corrupt patch at line 28` on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12882:20,patch,patch,20,https://root.cern,https://github.com/root-project/root/pull/12882,1,['patch'],['patch']
Deployability,"Fix a few minor things and pave the way to integrate cutflow reports in TDataFrame. * TDFAction ctor can take a shared_ptr instead of a weak_ptr: TDFAction; can safely assume that the previous node in the chain still exists when it is; being constructed; * fPrevData is now a reference instead of a raw pointer in all classes:; a reference better indicates that we always expect fPrevData to be a valid; node of the chain. In fact, the only case when this condition might not be; met is when the TDataFrameImpl object goes out-of-scope before other nodes; of the chain; we detect this case and throw before trying to access; invalid fPrevData pointers/references.; * use `Long64_t` instead of `int` for all entry variables",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/333:43,integrat,integrate,43,https://root.cern,https://github.com/root-project/root/pull/333,1,['integrat'],['integrate']
Deployability,Fix a long standing issue with popup (and context) menus popping up on wrong display on Windows with multiple display configuration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4062:118,configurat,configuration,118,https://root.cern,https://github.com/root-project/root/pull/4062,1,['configurat'],['configuration']
Deployability,"Fix a missing state update in RooAbsCategory, and prevent an invalid state in uninitialised categories. On the way to finding this bug, I managed to get some indentation fixes and loop modernisations done, which are included here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5997:20,update,update,20,https://root.cern,https://github.com/root-project/root/pull/5997,1,['update'],['update']
Deployability,Fix a warning in RNTupleSerializer. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16709:87,update,updated,87,https://root.cern,https://github.com/root-project/root/pull/16709,1,['update'],['updated']
Deployability,Fix an access violation error when using `fscanf` on Windows 64 bit:; ```; 243: Processing C:/Users/sftnight/git/master/test/stressGraphics.cxx...; 243: **********************************************************************; 243: * Starting Graphics - S T R E S S suite *; 243: **********************************************************************; 243: * Starting Basic Graphics - S T R E S S *; 243: **********************************************************************; 243: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:227 (message):; 243: error code: Access violation; 243:; 243:; 1/1 Test #243: test-stressgraphics-interpreted ...***Failed 4.33 sec; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9959:519,release,release,519,https://root.cern,https://github.com/root-project/root/pull/9959,1,['release'],['release']
Deployability,Fix an issue with `root-config --has-whatever` as described on the forum: https://root-forum.cern.ch/t/tpythia8-h-file-not-found/50682; The `all_features` list in the `root-config` script was empty when installing it (but was OK in the build directory),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10922:203,install,installing,203,https://root.cern,https://github.com/root-project/root/pull/10922,1,['install'],['installing']
Deployability,Fix axis labels tilt; Fix THStack update; Support drawing HIST and E1 for TH1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13640:34,update,update,34,https://root.cern,https://github.com/root-project/root/pull/13640,1,['update'],['update']
Deployability,Fix build of llvm in Release mode for multi-configuration generators …,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4391:21,Release,Release,21,https://root.cern,https://github.com/root-project/root/pull/4391,2,"['Release', 'configurat']","['Release', 'configuration']"
Deployability,"Fix compilation warnings on Win64, as shown below, by using proper long types; ```; gcompletion.c(47): warning C4028: formal parameter 3 different from declaration [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]; gconvert.c(105): warning C4133: 'function': incompatible types - from 'gsize *' to 'size_t *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]; gconvert.c(460): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]; gdataset.c(552): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]; giochannel.c(1238): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]; gmem.c(662): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]; ...; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9289:193,release,release,193,https://root.cern,https://github.com/root-project/root/pull/9289,6,['release'],['release']
Deployability,Fix configuration when builtin_glew is enabled on demand,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3983:4,configurat,configuration,4,https://root.cern,https://github.com/root-project/root/pull/3983,1,['configurat'],['configuration']
Deployability,Fix deprecation warnings when compiling cling standalone. # This Pull request:. Fix warnings in a standalone Cling build. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16408:195,update,updated,195,https://root.cern,https://github.com/root-project/root/pull/16408,1,['update'],['updated']
Deployability,Fix directory name for correct installation of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5450:31,install,installation,31,https://root.cern,https://github.com/root-project/root/pull/5450,1,['install'],['installation']
Deployability,Fix failing patch on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12882:12,patch,patch,12,https://root.cern,https://github.com/root-project/root/pull/12882,1,['patch'],['patch']
Deployability,Fix geometry update when drawn inside canvas,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11926:13,update,update,13,https://root.cern,https://github.com/root-project/root/pull/11926,1,['update'],['update']
Deployability,Fix histogram stat box update; Do not use variables before define them; Remove unused variables,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6420:23,update,update,23,https://root.cern,https://github.com/root-project/root/pull/6420,1,['update'],['update']
Deployability,Fix installation error,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3094:4,install,installation,4,https://root.cern,https://github.com/root-project/root/pull/3094,1,['install'],['installation']
Deployability,Fix installation of PCMs with pyroot_experimental,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4783:4,install,installation,4,https://root.cern,https://github.com/root-project/root/pull/4783,1,['install'],['installation']
Deployability,Fix link for modules release documentation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3302:21,release,release,21,https://root.cern,https://github.com/root-project/root/pull/3302,1,['release'],['release']
Deployability,Fix modules build with install prefix (ROOT-10452),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4703:23,install,install,23,https://root.cern,https://github.com/root-project/root/pull/4703,1,['install'],['install']
Deployability,Fix option of having clang with ROOT patches as an external package (builtin_clang=OFF),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1955:37,patch,patches,37,https://root.cern,https://github.com/root-project/root/pull/1955,1,['patch'],['patches']
Deployability,Fix path on which PyROOT Python modules are looked up (`pythonization` -> `_pythonization`) during the installation procedure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9469:103,install,installation,103,https://root.cern,https://github.com/root-project/root/pull/9469,1,['install'],['installation']
Deployability,Fix rootls with python3 (Fixes ROOT-9299) (v6-12-00-patches),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1719:52,patch,patches,52,https://root.cern,https://github.com/root-project/root/pull/1719,1,['patch'],['patches']
Deployability,Fix stats update in historgam when running in THttpServer; Many small fixes with usage of undefined variables -; discovered when developing jsroot v6,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6419:10,update,update,10,https://root.cern,https://github.com/root-project/root/pull/6419,1,['update'],['update']
Deployability,Fix the cgs value of the gravitational constant (TMath::Gcgs() ) and update values of physical constants from NIST,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5999:69,update,update,69,https://root.cern,https://github.com/root-project/root/pull/5999,1,['update'],['update']
Deployability,"Fix the following compilation error of `ntuple_types` on Windows:; ```; ntuple_types.obj : error LNK2019: unresolved external symbol ""const ROOT::Experimental::RRecordField::`vftable'"" (??_7RRecordField@Experimental@ROOT@@6B@) referenced in function ""private: virtual void __thiscall RNTuple_CreateField_Test::TestBody(void)"" (?TestBody@RNTuple_CreateField_Test@@EAEXXZ) [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; C:\Users\bellenot\build\release\tree\ntuple\v7\test\Release\ntuple_types.exe : fatal error LNK1120: 1 unresolved externals [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10839:396,release,release,396,https://root.cern,https://github.com/root-project/root/pull/10839,4,"['Release', 'release']","['Release', 'release']"
Deployability,"Fix the following compilation error on Win64:; ```; Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap; In file included from input_line_9:58:; In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:; C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]; mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence; this issue; mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; static_cast<unsigned long>( ); CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9387:240,release,release,240,https://root.cern,https://github.com/root-project/root/pull/9387,9,['release'],['release']
Deployability,"Fix the following compilation errors with `-std:c++20` on Windows:; ```; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::uni",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:247,release,release,247,https://root.cern,https://github.com/root-project/root/pull/12523,2,['release'],['release']
Deployability,"Fix the following error messages displayed when starting ROOT compiled with a different version of Visual Studio than the one installed on the system:; ```; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: error: redefinition of '_CrtEnableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:517:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Window",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5627:126,install,installed,126,https://root.cern,https://github.com/root-project/root/pull/5627,2,['install'],['installed']
Deployability,"Fix the following error on Windows:. In file included from input_line_10:1:; C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous; RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor; RooRealVar(const char *name, const char *title, Double_t minValue,; ^; C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor; RooRealVar(const char *name, const char *title, Double_t value,; ^; CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6009:340,release,release,340,https://root.cern,https://github.com/root-project/root/pull/6009,3,['release'],['release']
Deployability,Fix the following errors on Windows:; ```; 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist; 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms); 362: [ RUN ] TOffsetGeneration.primitiveTest; 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied; 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode; 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms); 362: [ RUN ] TOffsetGeneration.elementsTest; 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied; 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode; 362: [ OK ] TOffsetGeneration.elementsTest (136 ms); 362: [----------] 3 tests from TOffsetGeneration (3293 ms total); ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9320:109,release,release,109,https://root.cern,https://github.com/root-project/root/pull/9320,4,"['Release', 'release']","['Release', 'release']"
Deployability,"Fix the following kind of error when building tests (and using rootcling) in parallel on Windows:; ```; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: The ""GetOutOfDateItems"" task failed unexpectedly. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: System.IO.IOException: The process cannot access the file 'C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\x64\Release\X86CommonTableGen\X86Commo.12E1F1A7.tlog\CustomBuild.command.1.tlog' because it is being used by another process. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10247:312,release,release,312,https://root.cern,https://github.com/root-project/root/pull/10247,4,"['Release', 'release']","['Release', 'release']"
Deployability,Fix the update of time step for DL optimizer,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5042:8,update,update,8,https://root.cern,https://github.com/root-project/root/pull/5042,1,['update'],['update']
Deployability,"Fix typo in `CompressionSettings()` function declaration to match definition in `Compression.cxx`. Many thanks for reporting @mnowakgit!. This typo caused the following to fail:; ```; root [0] auto c = ROOT::RCompressionSetting::EAlgorithm::kZSTD;; root [1] CompressionSettings(c, 5);; input_line_10:2:3: error: no matching function for call to 'CompressionSettings'; (CompressionSettings(((*(enum ROOT::RCompressionSetting::EAlgorithm::EValues*)0x7f02285f4010)), 5)); ^~~~~~~~~~~~~~~~~~~; /home/jalopezg/_build/include/Compression.h:124:5: note: candidate function not viable: no known conversion from 'enum ROOT::RCompressionSetting::EAlgorithm::EValues' to 'RCompressionSetting::EAlgorithm' for 1st argument; int CompressionSettings(RCompressionSetting::EAlgorithm algorithm, int compressionLevel);; ^; /home/jalopezg/_build/include/Compression.h:126:5: note: candidate function not viable: no known conversion from 'enum ROOT::RCompressionSetting::EAlgorithm::EValues' to 'ROOT::ECompressionAlgorithm' for 1st argument; int CompressionSettings(ROOT::ECompressionAlgorithm algorithm, int compressionLevel);; ^; ```. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11054:1170,update,updated,1170,https://root.cern,https://github.com/root-project/root/pull/11054,1,['update'],['updated']
Deployability,Fix typos in `TVirtualCollectionProxy` class documentation accidentally introduced in #13307. ## Checklist:; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13442:115,update,updated,115,https://root.cern,https://github.com/root-project/root/pull/13442,1,['update'],['updated']
Deployability,"Fixes #10449 . Avoids serialisation of the head node which triggered recursive serialisation of all nodes in the graph. The graph is now represented with a flat list with node information. Each element has the operation of the current node and a (integer id) reference to the parent , which the operation should be called upon. In turn, also recreating the graph on each task is not done recursively anymore. Update:. Tests added, code reviewed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10459:409,Update,Update,409,https://root.cern,https://github.com/root-project/root/pull/10459,1,['Update'],['Update']
Deployability,"Fixes #11784. # This Pull request:; Fixes a bug in overlap checking. ## Changes or fixes:; Tessellated shapes cannot be used for overlap checking, because they do not provide navigation functionality. This PR skips checks when one of the two shapes potentially overlapping is a tesselation. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11784",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11788:342,update,updated,342,https://root.cern,https://github.com/root-project/root/pull/11788,1,['update'],['updated']
Deployability,"Fixes #14132. # This Pull request:. ## Changes or fixes:; Also check if `fOutputFiles` is empty before giving warning ""A lazy Snapshot action was booked but never triggered"". ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #14132 (the other issue with broken `gDirectory` seems to have gone in latest ROOT (6.32.06), so can consider as this bug is fixed)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16550:226,update,updated,226,https://root.cern,https://github.com/root-project/root/pull/16550,1,['update'],['updated']
Deployability,"Fixes #14157. When building minuit2 standalone with root 6.30/02 (-Dminuit2_standalone=ON), cmake errors out when looking for the version file 'RVersion.hxx' in 'core/foundation/inc/ROOT/RVersion.hxx' whereas it is copied to the top-level dir (i.e. 'math/minuit2/'). This is because the variable VERSION_FILE is incorrectly set to the file path matching the full path of the file. Fixed by setting the parent dir path of 'RVersion.hxx' as the `SOURCE` in `copy_standalone()` so that `VERSION_FILE` is set to just the base file name. # This Pull request:. ## Changes or fixes: commit 27082fb. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14157",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14160:643,update,updated,643,https://root.cern,https://github.com/root-project/root/pull/14160,1,['update'],['updated']
Deployability,Fixes #15703. The second commit adds a test to check that there is no memory increase using the reproducer from the linked issue. @guitargeek let me know how I should generate a patch to keep track of this change w.r.t. CPyCPPyy,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15777:178,patch,patch,178,https://root.cern,https://github.com/root-project/root/pull/15777,1,['patch'],['patch']
Deployability,Fixes #6376. The previous way of calculating the offset was causing a corruption in a multi-inheritance case (described in #6376). Adapted from:; https://bitbucket.org/wlav/cpycppyy/commits/7d9eb4a170ff9e3da9569232ba76ef59c9ee72fd; since CPPConstructor.cxx has changed since last update.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6434:280,update,update,280,https://root.cern,https://github.com/root-project/root/pull/6434,1,['update'],['update']
Deployability,"Fixes #6523 . As per comments by Philippe and Guilherme, the behaviour triggered by `TTree::Fill` to change the associated TFile when reaching a size greater than `fgMaxTreeSize` doesn't fit within the scope of TBufferMerger. Avoid calling `TTree::ChangeFile` doesn't change anything from the user perspective and doesn't interfere with the I/O mechanism of TBufferMerger (and thus of the multithreaded RDF Snapshot as well). . While fixing the above issue I found another one that may be related to this. Meanwhile the draft can be discussed. TODO; - [x] Update docs in TTree::Fill, TTree::ChangeFile and TBufferMerger. Tell the users that TBufferMergerFile doesn't trigger this behaviour; - [x] Include the reproducer as test",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6570:556,Update,Update,556,https://root.cern,https://github.com/root-project/root/pull/6570,1,['Update'],['Update']
Deployability,"Fixes #6974 and also updates the way in which we check if we are in IPython in `JupyROOT/__init__.py`, to sync it with `ROOT/__init__.py`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6980:21,update,updates,21,https://root.cern,https://github.com/root-project/root/pull/6980,1,['update'],['updates']
Deployability,"Fixes #7528 ; Civetweb not touched, need to be updated soon anyway",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7593:47,update,updated,47,https://root.cern,https://github.com/root-project/root/pull/7593,1,['update'],['updated']
Deployability,"Fixes #7828 partially, missing integration into Describe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7832:31,integrat,integration,31,https://root.cern,https://github.com/root-project/root/pull/7832,1,['integrat'],['integration']
Deployability,"Fixes #7829 partially, missing integration into Describe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7833:31,integrat,integration,31,https://root.cern,https://github.com/root-project/root/pull/7833,1,['integrat'],['integration']
Deployability,Fixes #8141. This PR requires a new clad release v0.9. The clad master is incompatible with ROOT atm and the release of 0.9 depends on #8371,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8766:41,release,release,41,https://root.cern,https://github.com/root-project/root/pull/8766,2,['release'],['release']
Deployability,"Fixes #8828; ```; root [0] namespace std { namespace Detail {} }; root [1] auto c = TClass::GetClass(""Detail""); (TClass *) 0x12ef3d7b0; root [2] namespace Detail {}; Error in <TInterpreter::RefreshClassInfo>: Should not need to update the classInfo a non type decl: Detail; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16540:228,update,update,228,https://root.cern,https://github.com/root-project/root/pull/16540,1,['update'],['update']
Deployability,Fixes Cling's nightly releases sync test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4713:22,release,releases,22,https://root.cern,https://github.com/root-project/root/pull/4713,1,['release'],['releases']
Deployability,Fixes Windows patch error.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12833:14,patch,patch,14,https://root.cern,https://github.com/root-project/root/pull/12833,1,['patch'],['patch']
Deployability,Fixes `roottest_cling_specialobj_runf02` with the previously updated reference file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9587:61,update,updated,61,https://root.cern,https://github.com/root-project/root/pull/9587,1,['update'],['updated']
Deployability,"Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:; - using GCC 13.2.0 on Ubuntu 24.04; - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`; - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests.; If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16141:663,patch,patched,663,https://root.cern,https://github.com/root-project/root/pull/16141,1,['patch'],['patched']
Deployability,Fixes a memory corruption seen after the llvm upgrade. This is still a terrible hack;; it will be replaced by a proper fix in clang::CodeGen (coming up).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/629:46,upgrade,upgrade,46,https://root.cern,https://github.com/root-project/root/pull/629,1,['upgrade'],['upgrade']
Deployability,Fixes and updates in preparation for ROOT 6.12 release,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1393:10,update,updates,10,https://root.cern,https://github.com/root-project/root/pull/1393,2,"['release', 'update']","['release', 'updates']"
Deployability,Fixes as well https://github.com/root-project/root/issues/8280. (Thanks a lot to @amadio for pointing out the most reasonable for ROOT build system). Update: sadly we can't move directly to 3.16 because Debian 10 has only cmake 3.13 packaged https://pkgs.org/search/?q=cmake,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8336:150,Update,Update,150,https://root.cern,https://github.com/root-project/root/pull/8336,1,['Update'],['Update']
Deployability,"Fixes for bug ROOT-1036 (FitResult::Scan); When fitting histograms a shared_pointer of FitData must be passed to the Fitter class, in Fitter::Fit( data,...) functions instead of a row pointer !; This fixes the shared ownership of the fitting data between the Fitter and the FitResult classes and avoid that the data are deleted when exiting TH1::Fit. ; One can then use FitResult::Scan , FitResult::Contour or FitResult::GetConfidenceIntervals.; Before the data were accidentally not deleted, when multi-thread wad not enabled, because in that case a reference for the data was kept in the global TVirtualFitter class, available only in non-mt mode/. This PR also fixes the case of bin integral fit in multithreading. The problem was caused by using the GSL integrator from Mathmore. . testFit has been improved by adding test for FitResult::Scan and tests for multi-threading fitting",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4557:758,integrat,integrator,758,https://root.cern,https://github.com/root-project/root/pull/4557,1,['integrat'],['integrator']
Deployability,Fixes for:; - Installation of TPyDispatcher.h. Fixes #6579 ; - Removal of pythonization files that are no longer there,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6588:14,Install,Installation,14,https://root.cern,https://github.com/root-project/root/pull/6588,1,['Install'],['Installation']
Deployability,"Fixes https://github.com/root-project/root/issues/11971. leftover from https://github.com/root-project/root/commit/b1257ba27a7139e0c927693fded3b243b3f94b33. # This Pull request:. ## Changes or fixes:. Unused variable, found by HenryDayHall. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11972:292,update,updated,292,https://root.cern,https://github.com/root-project/root/pull/11972,1,['update'],['updated']
Deployability,"Fixes https://github.com/root-project/root/issues/15336; Fix the following compilation errors with Visual Studio v17.10 on x86; ```; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z) [C:\; root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z) [C:\root-dev\build\x86\release\co; re\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z) [C:\root-dev\build\x86\release\core\met; acling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z) [C:; \root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; C:\root-dev\build\x86\release\bin\libCling.dll : fatal error LNK1120: 4 unresolved externals [C:\root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15860:352,release,release,352,https://root.cern,https://github.com/root-project/root/pull/15860,6,['release'],['release']
Deployability,"Fixes https://github.com/root-project/root/issues/15336; Fix the following compilation errors with Visual Studio v17.10 on x86; ```; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z); libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z); libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z); libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z); C:\root-dev\build\x86\release\bin\libCling.dll : fatal error LNK1120: 4 unresolved externals; ```. **To be backported to 6.32**",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15855:872,release,release,872,https://root.cern,https://github.com/root-project/root/pull/15855,1,['release'],['release']
Deployability,"Fixes https://github.com/root-project/root/issues/15610. As reported on the forum:; https://root-forum.cern.ch/t/memory-leak-in-pyroot-when-using-user-defined-c-macros-from-python-and-ttree-friends/59432. According to that post, the problem is present at least since 6.26/04, but I suspect it has been there forever (at least 6.22 with with cppyy upgrade in 2019). . I fixed the memory leak in the Pythonization is in the usual way how I fix problems with the PyROOT CPython extension: re-implementing the offending parts in Python and hoping that the problem is gone. Which it is!. Note that the code also had no obvious memory leak before. where it was; using the `CPyCppyy::Instance_FromVoidPtr` function from the CPyCppyy; API. If similar problems appear, this function might have to be; investigated in more detail. But for this commit it is not relevant: moving more Pythonization logic; into the Python layer is better anyway. The problem can be reproduced with a variation of the forum reproducer:; ```python; import ROOT; import numpy as np. ROOT.gInterpreter.Declare(; """"""; template<class T>; void * MyGetAddress(T * b) {; return *(void**)b->GetAddress();; }; """"""; ). def macro(tree, *args, **kwargs):. import cppyy.ll. # manually; v1 = cppyy.ll.cast[tree.GetBranch(""value1"").GetClassName() + ""*""](ROOT.MyGetAddress(tree.GetBranch(""value1""))); # using the Pythonization; v2 = getattr(tree, ""value2""); return None. pinfo = ROOT.ProcInfo_t(). def print_memory(i):; ROOT.gSystem.GetProcInfo(pinfo); print(i, ""memory usage"", pinfo.fMemResident, pinfo.fMemVirtual). class reTupler:; def __init__(self, tree_name, new_file, src_file):; self.src_file = ROOT.TFile.Open(src_file); self.src_tree = self.src_file.Get(tree_name). self.new_file = ROOT.TFile.Open(new_file, ""recreate""); self.new_tree = ROOT.TTree(tree_name, tree_name). # To access branches in 'src_tree' from 'new_tree':; self.new_tree.AddFriend(self.src_tree). # To keep track of new branches and store values:; self.new_branches = {}.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15608:347,upgrade,upgrade,347,https://root.cern,https://github.com/root-project/root/pull/15608,1,['upgrade'],['upgrade']
Deployability,"Fixes https://github.com/root-project/root/issues/6467. It needs https://github.com/root-project/root/pull/6377 for Python <= 3.6, otherwise an error of the type `KeyError: 'fProofChain'` (for TChain) happens first and we don't even get to the issue that this PR fixes (UPDATE: #6377 has been merged). Also, before merging, this fix needs to be tested for `TGMainFrame`, where the problem described in https://github.com/root-project/root/issues/6578 has been identified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6582:270,UPDATE,UPDATE,270,https://root.cern,https://github.com/root-project/root/pull/6582,1,['UPDATE'],['UPDATE']
Deployability,Fixes https://github.com/root-project/root/issues/7740. # This Pull request:. ## Changes or fixes:; Add tutorial about multi dimensional integrator. ## Checklist:. - [x ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; https://github.com/root-project/root/issues/7740,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14730:137,integrat,integrator,137,https://root.cern,https://github.com/root-project/root/pull/14730,2,"['integrat', 'update']","['integrator', 'updated']"
Deployability,Fixes https://its.cern.ch/jira/browse/ROOT-5760. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15280:144,update,updated,144,https://root.cern,https://github.com/root-project/root/pull/15280,1,['update'],['updated']
Deployability,"Fixes https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-24-00-patches/30/LABEL=mac11arm,SPEC=noimt,V=6-24/testReport/junit/projectroot.roottest.python/cpp/roottest_python_cpp_cpp/. (to be backported to 6.24)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8020:97,patch,patches,97,https://root.cern,https://github.com/root-project/root/pull/8020,1,['patch'],['patches']
Deployability,Fixes importing `JupyROOT` when `CMAKE_INSTALL_PYTHONDIR` is set to the standard site-packages directory. Fixes the failure seen in this build of the conda nightly:. https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/99/console. The builds after 100 include this patch and work as expected. (The new failure in [`roottest_python_JupyROOT_ROOT_kernel_notebook`](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/101/testReport/projectroot.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/) is a bug in `metakernel` that is fixed by https://github.com/Calysto/metakernel/pull/214.),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6248:288,patch,patch,288,https://root.cern,https://github.com/root-project/root/pull/6248,1,['patch'],['patch']
Deployability,"Fixes macOS 12 builds (no ""python"", only ""python3"").; Davix now uses curl instead of neon. (cherry picked from commit 4fb53c7adfb4df5fb2652b234c609af951a98edc). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10375:256,update,updated,256,https://root.cern,https://github.com/root-project/root/pull/10375,1,['update'],['updated']
Deployability,Fixes macOS 12 builds. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10275:118,update,updated,118,https://root.cern,https://github.com/root-project/root/pull/10275,1,['update'],['updated']
Deployability,"Fixes the `make distsrc` command in the release checklist, so far working until 6.30",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15380:40,release,release,40,https://root.cern,https://github.com/root-project/root/pull/15380,1,['release'],['release']
Deployability,"Fixes the following warning with CMake 3.24:; ```; CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):; The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is; not set. The policy's OLD behavior will be used. When using a URL; download, the timestamps of extracted files should preferably be that of; the time of extraction, otherwise code that depends on the extracted; contents might not be rebuilt if the URL changes. The OLD behavior; preserves the timestamps from the archive instead, but this is usually not; what you want. Update your project to the NEW behavior or specify the; DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this; robustness issue.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11231:583,Update,Update,583,https://root.cern,https://github.com/root-project/root/pull/11231,2,['Update'],['Update']
Deployability,"Fixes the nightly failure. I could not have anticipated this, because the PR tests of the PR that caused the regression were just fine:; https://github.com/root-project/root/actions/runs/8426692299. It seems the build configuration of the scheduled builds in inconsistent with the PR builds: it misses `mathmore=ON`. Follows up on https://github.com/root-project/root/pull/14743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15058:218,configurat,configuration,218,https://root.cern,https://github.com/root-project/root/pull/15058,1,['configurat'],['configuration']
Deployability,Fixes version detection e.g. for release / cpack builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3174:33,release,release,33,https://root.cern,https://github.com/root-project/root/pull/3174,1,['release'],['release']
Deployability,"Fixes ~20 from 100 existing warnings on Windows, ; remaining warnings are from llvm and clang, which is hard to patch now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4068:112,patch,patch,112,https://root.cern,https://github.com/root-project/root/pull/4068,1,['patch'],['patch']
Deployability,Fixing built of classic build for builtin lz4 and non-builtin case.; Updated version of PR#926 https://github.com/root-project/root/pull/926,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1012:69,Update,Updated,69,https://root.cern,https://github.com/root-project/root/pull/1012,1,['Update'],['Updated']
Deployability,Follow up of #14136 . Also update JSROOT with several fixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14775:27,update,update,27,https://root.cern,https://github.com/root-project/root/pull/14775,1,['update'],['update']
Deployability,"Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a; RooParamHistFunc is tested both for trivial and non-trivial parameters,; since the integration over subranges was problematic (as reported in; issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7322:202,integrat,integration,202,https://root.cern,https://github.com/root-project/root/pull/7322,2,['integrat'],['integration']
Deployability,Following discussions in TMVA developers meetings. Callgrind reports large (factor 2ish) reduction of CPU cycles for BDT evaluation. TODO: careful review if mixed trees can actually occur!. Credits to F. Lemaitre for the suggestion to remove the dynamic_casts in this way (as opposed to the implementation I was working on). PS: filed PR against patches v6-08-00-patches to keep the diff readable for now.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/327:346,patch,patches,346,https://root.cern,https://github.com/root-project/root/pull/327,2,['patch'],['patches']
Deployability,"Following our discussions, this is the proposed change to disable the splash screen by default. Most users use `root -l` to get rid of the splash screen in any case. As mentioned in the discussions, it is still possible to see the splash screen with `root -a` or from a `TBrowser`, by going to *Browser Help* → *About ROOT*. If you want to check out this change, I have installed ROOT 6.18 with this change into CVMFS.; You can run it on Linux with (no setup required):; ```; $ /cvmfs/sft.cern.ch/lcg/contrib/gentoo/linux/x86_64/usr/lib/root/6.18/bin/root; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4187:370,install,installed,370,https://root.cern,https://github.com/root-project/root/pull/4187,1,['install'],['installed']
Deployability,Follows the changes introduced in https://reviews.llvm.org/D136030 to be more compatible with std::string and std::string_view. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14785:223,update,updated,223,https://root.cern,https://github.com/root-project/root/pull/14785,1,['update'],['updated']
Deployability,"Follows up on c58e551, updating the minor version number that is expected. Since LLVM 17, the minor version number is hardcoded to ""1"" instead of ""0"": https://releases.llvm.org/. This will also be the case for the upcoming LLVM 19 release. This PR is needed to make ROOT configure with `builtin_llvm=OFF`. I was just trying this out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16432:159,release,releases,159,https://root.cern,https://github.com/root-project/root/pull/16432,2,['release'],"['release', 'releases']"
Deployability,Followup patch for #2097; Explicitly include cling/Interpreter/Runtim…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2194:9,patch,patch,9,https://root.cern,https://github.com/root-project/root/pull/2194,1,['patch'],['patch']
Deployability,Fons's Patches for macOS 11 Big Sur,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6691:7,Patch,Patches,7,https://root.cern,https://github.com/root-project/root/pull/6691,1,['Patch'],['Patches']
Deployability,"For ""png"", ""jpg"", ""pdf"" and ""svg"" headless web browser will be used inside `TPad::Print()` method.; Fix small issue and improve `TPad::Print()`; Update JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11870:145,Update,Update,145,https://root.cern,https://github.com/root-project/root/pull/11870,1,['Update'],['Update']
Deployability,"For LLVM we don't have Optimized build, but only Debug, Release, RelWithDebInfo, and MinSizeRel.; Thats why to have correctly interpreted __FAST_MATH__ in ROOT macroses we need to add -ffast-math flag for LLVM default Release build type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1039:56,Release,Release,56,https://root.cern,https://github.com/root-project/root/pull/1039,2,['Release'],['Release']
Deployability,"For RooFit developers, it is unconvenient that the `override` specifier; that flags member functions as overriding on first sight is not used so; much in RooFit. Now that the v6.28 development cycle has just started and there are no; major developments in the pipeline yet, I think it is a good time to add; the missing `override` specifiers everywhere in RooFit. This commit was generated more or less automatically with this Python; script that uses `clang-tidy`:. ```Python; import os; import glob; import subprocess; import tqdm. """"""; For clang-tidy to work, you have to copy the compile_commands.json from the; build directory back into the repo directory (just like in; .ci/copy_headers.sh).; """""". def get_sources(directory, extensions):. files = []. for ext in extensions:; files += glob.glob(; os.path.join(directory, ""**/*"" + ext), recursive=True; ). return files. """"""; Recursively find extensions in directory, to figure out whic hextensions; should be globbed for.; find . -type f -name '*.*' | sed 's|.*\.||' | sort -u; """"""; extensions = ["".h"", "".hpp"", "".cpp"", "".cc"", "".cxx""]. """"""; Some extensions are recognized as C and not as C++ files by clang-tidy. We; need to rename them, and this dict specifies how file extensions should be; replaced.; """"""; rename_dict = {"".h"": "".hpp""}. files = get_sources(""roofit"", extensions). cflags = (; subprocess.check_output([""root-config"", ""--cflags""]).strip().decode(""utf-8""); ). for file in tqdm.tqdm(files):. file_renamed = file; for ext, ext_renamed in rename_dict.items():; if file.endswith(ext):; file_renamed = file.replace(ext, ext_renamed). if file_renamed != file:; os.rename(file, file_renamed). cmd = [; ""clang-tidy"",; ""-checks=modernize-use-override"",; ""--fix"",; file_renamed,; ""--"",; ] + cflags.split("" ""); subprocess.call(cmd, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL). if file_renamed != file:; os.rename(file_renamed, file). """"""; Finally, replace the ClassDef with the ClassDefOverride macros.; find roofit -type f -print | x",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9808:260,pipeline,pipeline,260,https://root.cern,https://github.com/root-project/root/pull/9808,1,['pipeline'],['pipeline']
Deployability,For Ubuntu 22.04 we will otherwise get a build error.; See https://github.com/xrootd/xrootd/issues/1666. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10322:200,update,updated,200,https://root.cern,https://github.com/root-project/root/pull/10322,1,['update'],['updated']
Deployability,For Ubuntu 22.04 we will otherwise get a build error.; See https://github.com/xrootd/xrootd/issues/1666. (cherry picked from commit f4bd8e740a99828d1232494b9d92a25fe2c39f65). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10374:270,update,updated,270,https://root.cern,https://github.com/root-project/root/pull/10374,1,['update'],['updated']
Deployability,"For `alien`, only the build option is removed; the corresponding code will be removed in master. `gsl_shared` is unused. These are a) untested and b) to my knowledge not used by any experiment. (ALICE does not use ROOT's monalisa module.). If we don't deprecate these now we have to wait another release cycle.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12203:296,release,release,296,https://root.cern,https://github.com/root-project/root/pull/12203,1,['release'],['release']
Deployability,"For deferred columns (i.e. columns created during late model extension) for subfields that have been created after one or more clusters have already been written, their (synthetic) column ranges were not properly initialized upon read back. This resulted in incorrect metadata and problems reading back the data in the subfields only (so not the complete field they are part of). This PR partly addresses #15661. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15699:464,update,updated,464,https://root.cern,https://github.com/root-project/root/pull/15699,1,['update'],['updated']
Deployability,"For our users, it's important to fix certain parameters in the likelihood easily with any overhead. So far, this didn't work when using gradients from AD, because the gradients were only produced for the parameters that are floating at the time where the likelihood is created. However, it has no additional runtime overhead in backwards AD mode to simply generate the gradient for **all** parameters, and then filter out the right elements in the the RooMinimizer-related code. This is what is implemented in the second commit of this PR. Some changes in the RooAbsMinimizerFcn were necessary to do this filtering: so far it didn't store any information on all the parameters in order. It only stored two separate lists for floating and constant parameters. The first commit in this PR adds the necessary data members (`_allParams` and `_allParamsInit`) to the RooAbsMinimizerFcn for the filtering of parameters. Furthermore, the previous datamembers that stored the parameters separately are removed to avoid duplication and possible desync of information. On this occasion, the parameter management was completely rewritten to be more concise and robust. This will also help later when we integrate the discrete profiling from CMS combine, where changing the state and filtering of minimization parameters is also relevant. It was validated with the ATLAS and CMS likelihoods from ICHEP 2024 that this PR results in no performance regression, even though we are now generating the gradient for more parameters (roughly up to two times more, because for every floating nuisance parameter there is usually one constant global observable that constrains it).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16750:1192,integrat,integrate,1192,https://root.cern,https://github.com/root-project/root/pull/16750,1,['integrat'],['integrate']
Deployability,"For simplicity and code reusability, this PR suggests to merge the `EvaluateFuncs.h` header and the `AnalyticalIntegrals.h` header into a single header. Also, use `ROOT::Math::inc_gamma_(c)` directly in RooPoisson implementation. This saves us a few function calls and will also make it easier to implement custom pullbacks for the gradient, since the callstack is not as deep. Also, slightly refactor the code for evaluating the interpolations and improve the AD tests for the RooLandau to get more coverage. This is a part of #15502, factored out because these are already meaningful changes without the update to Clad 1.5.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15557:606,update,update,606,https://root.cern,https://github.com/root-project/root/pull/15557,1,['update'],['update']
Deployability,"For some algorithms like numeric integration, we want to enable PDF evaluation on the GPU with the RooFitDriver also for the case where the input arrays are already on the device and don't come from a `RooAbsData`. This is implemented in this PR, such that things like this are now possible:. ```c++; namespace CudaInterface = RooFit::Detail::CudaInterface;. // Define model; RooRealVar x{""x"", ""x"", 0, -10, 10};; RooRealVar mu{""mu"", ""mu"", 0, 0, 10};; RooRealVar sigma{""sigma"", ""sigma"", 3, 0.1, 10};. RooGaussian gauss{""gauss"", ""gauss"", x, mu, sigma};. std::size_t numBins = 20;; x.setBins(numBins);. RooArgSet normSet{x};. // Create array of observable values; std::vector<double> xValsHost;; for (std::size_t i = 0; i < numBins; ++i) {; x.setBin(i);; xValsHost.push_back(x.getVal());; }. // Copy observable values to the array; CudaInterface::DeviceArray<double> xValsDevice{numBins};; CudaInterface::copyHostToDevice(xValsHost.data(), xValsDevice.data(), numBins);. // Compile pdf for evaluation with RooFitDriver; std::unique_ptr<RooAbsReal> gaussCompiled{RooFit::Detail::compileForNormSet(gauss, normSet)};. // Instantiate RooFitDriver and set device input array; ROOT::Experimental::RooFitDriver driver{*gaussCompiled, RooFit::BatchModeOption::Cuda};; driver.setInput(""x"", {xValsDevice.data(), numBins}, /*isOnDevice=*/ true);. // Evaluate; std::span<const double> deviceOut = driver.run();. // Copy back to host and pring results; std::vector<double> hostOut(deviceOut.size());; CudaInterface::copyDeviceToHost(deviceOut.data(), hostOut.data(), numBins);; for (int i = 0; i < numBins; ++i) {; std::cout << xValsHost[i] << "" "" << hostOut[i] << std::endl;; }; ```. The `RooFitDriver.h` interface is also significantly reduced to not include anything that strictly has to do something with the evaluation. This makes the interface less confusing, which is important because I want to make this class public to the users in the next PR. The evaluation of PDFs with the RooFitDriver also on the GPU i",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13389:33,integrat,integration,33,https://root.cern,https://github.com/root-project/root/pull/13389,1,['integrat'],['integration']
Deployability,For some common libraries we provide modulemaps such as tinyxml2 and boost. Independently whether implicit or fno-implicit-module-maps is selected we insert an overlay and register the modulemap directly. This patch disables this when fno-implicit-module-maps is chosen. This should resolve ROOT-10803 introduced by root-project/root#5709,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5793:210,patch,patch,210,https://root.cern,https://github.com/root-project/root/pull/5793,1,['patch'],['patch']
Deployability,"For some reason, calling `isInlined()` member function on an `operator new()` FunctionDecl does not return the expected result for an inline-defined function. This patch workarounds the aforementioned problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4222:164,patch,patch,164,https://root.cern,https://github.com/root-project/root/pull/4222,1,['patch'],['patch']
Deployability,"For the documentation of the RooFit pythonizations, we wanted to realize; two things:. * A PyROOT block in the doxygen documentation of the C++ class,; indicating the pythonizations for a given class or function. * A new doxygen page with only the content of all the RooFit PyROOT; blocks to have a one-stop place to learn everything about RooFit; pythonizations. This commit proposes a new mechanism to do this, based on the existing; RooFit pythonization mirror class infrastructure:. * Every class or member function that should get a PyROOT block gets; an can be patched with an attribute `_doxygen`, containing the; contents of the PyROOT block; * Member functions can also be patched with the attribute; `cpp_signature`, specifying the C++ overload where the PyROOT block; should go; * A new scipt `print_roofit_pyz_doctrings.py` extracts this; information, and this script is used to create a file; `_roofit.pyzdoc` with all the doxygen source to generate both the; PyROOT blocks in the existing documentation, as well as the separate; page about all the RooFit pythonizations. This is how the RooFit pythonization page would look like with this PR:. ![Screenshot_2021-08-17_15-06-40](https://user-images.githubusercontent.com/6578603/129736827-e2aadfe5-2893-48c0-a7e9-2549a136cd68.png). Writing all the documentation will be done in later PRs by @Harshalzzzzzzz , this PR is just to set up the infrastructure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8856:567,patch,patched,567,https://root.cern,https://github.com/root-project/root/pull/8856,2,['patch'],['patched']
Deployability,"For the next major release of [iminuit](https://github.com/scikit-hep/iminuit/), I finally implemented the ability to scan the function for a minimum using a brute-force grid search in N dimensions. This is very inefficient, but still a feature that users regularly request and there has been an [open issue in iminuit about it for a long time, now closed](https://github.com/scikit-hep/iminuit/issues/104). Originally this was supposed to use MnScan from C++ Minuit2, but I found some severe problems with MnScan. I would like to discuss what we want MnScan to do, then I would be happy to work on a patch. ### What MnScan currently does. It does a 1D scan with 41 steps for each parameter in sequence, so it is not actually scanning the full hypercube. It first scans one parameter, then starts the scan of the second parameter from the best value of the first and so on. Instead of a full 2D scan, it does something like this:; ```; y; B; y; xxxxxxxxxxxxxxxxxx A xxxxxx; y; y; ```; where A and B are the minima along the x and y axis respectively. This approach has the advantage that the number of function evaluations scales like with k * n, where k is the number of dimensions and n the number of steps per dimension, while a full grid search scales like n ^ k. However, this approach will fail miserably when x and y are correlated, trying this on the Rosenbrock function for instance gives terrible results (basically no improvement with respect to the starting value). ### What to do?. The current behavior of MnScan is not what people usually consider a scan, which most people understand as a full grid search over the whole N-dimensional space. It seems that MnScan is not really used in ROOT, but I may be mistaken. If it is not really used, I would suggested to keep the name MnScan and change the implemenation to do a full hypercube scan. I am strongly convinced that MnScan should do a full grid search instead of what it currently does, because the current implementation is fairly p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6862:19,release,release,19,https://root.cern,https://github.com/root-project/root/issues/6862,2,"['patch', 'release']","['patch', 'release']"
Deployability,"For the update of LLVM 9, Cling required another patch to Clang for replacing the children of a `CompoundStmt`. Instead solve this by creating a new `CompoundStmt` with the right `Stmt`s attached.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7488:8,update,update,8,https://root.cern,https://github.com/root-project/root/pull/7488,2,"['patch', 'update']","['patch', 'update']"
Deployability,"Force deserialization also for unevaluated ESTs.; Deserializing the decl chain (as part of the linkage spec calculation); will update the EST between Start and End EH emission, causing an; asymmetry and triggering the assert. This forces the decl chain to be; loaded. Fixes roottest/root/treeformula/stl/assertSparseSelection.C on MacOS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5534:127,update,update,127,https://root.cern,https://github.com/root-project/root/pull/5534,1,['update'],['update']
Deployability,"Frame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi); gr.SetMarkerColor(2); gr.SetLineColor(ROOT.kRed); gr.SetMarkerStyle(20); gr.SetMarkerColor(ROOT.kBlue); gr.SetMarkerSize(1.5); gr.SetLineWidth(3); gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""); ```. **testErrorGraph_v2**; ```Python; import ROOT ; from array import array. ROOT.gROOT.SetBatch(True); ROOT.gStyle.SetEndErrorSize(10). nPoints = 10; # Set ymin and ymax on purpose so that some error bars should be go beyon this range ; ymax = 4; # Set ymin > 0 since here we use log scale ; ymin = 0.1. # Data x, y; data_x = array('d', list(range(nPoints))); data_y = array('d', [2.]*nPoints). # x and y up/down errors ; # Increasing y-error for each points; unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_x_lo = array('d', [0]*nPoints); unc_x_hi = array('d', [0]*nPoints). # Make last point negative ; data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(); pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9); pad.Draw(); pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 ; # observe the difference for the last point ; pad.SetBottomMargin(0.); #pad.SetBottomMargin(0.1); pad.SetLogy(). xminFrame = min(data_x) - 0.5 ; xmaxFrame = max(data_x) + 0.5 ; yminFrame = ymin; ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi); gr.SetMarkerColor(2); gr.SetLineColor(ROOT.kRed); gr.SetMarkerStyle(20); gr.SetMarkerColor(ROOT.kBlue); gr.SetMarkerSize(3); gr.SetLineWidth(3); gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v2.pdf""); ```. ### ROOT version. I think all versions are affected but I tested it with ROOT `6.30/02` and `6.30/00`. ### Installation method. Build from source. ### Operating system. Linux, MacOs. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16070:5315,Install,Installation,5315,https://root.cern,https://github.com/root-project/root/issues/16070,1,['Install'],['Installation']
Deployability,From Guilherme. Applies to legacy PyROOT. To do:; - [ ] check whether standalone `import cppyy` still works when ROOT's python things are installed in site-packages rather than in ROOTLIBDIR; - [ ] check that TPython still finds libcppyy.so,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5907:138,install,installed,138,https://root.cern,https://github.com/root-project/root/pull/5907,1,['install'],['installed']
Deployability,From Timur! Fixes black area on top of canvas region in non-batch (i.e. interactive) GUI save-as. I.e. fixes issue #13964. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13970:218,update,updated,218,https://root.cern,https://github.com/root-project/root/pull/13970,1,['update'],['updated']
Deployability,"From Timur:. When TGQuartz was developed, retina macs did not exist yet and Cocoa; did not provide any API to access scaling-related information.; After they have introduced this API and released retina MacBooks, our GUI; rendering was just fine and worked out of box, our 'pixmap-based' graphics; was fixed by multiplying pixmaps' geometry (by scaling factor) and also setting; the corresponding scaling CTM on the bitmap context. It appears, all these; years we did not know how expensive this scaling transformation is.; As was noticed recently, even a relatively simple poly-line consisting; of 25K segments takes _forever_ to draw - apparently Quartz is working; hard doing hell knows what under the hood (disabling anti-aliasing does not change; anything, for example). This patch is a possible fix, the proper solution would require a serious redesign; in many places (starting from TVirtualX and TCanvas) - for now we simply cancel; the scaling transformation when rendering potentially complex geometry and scale; coordinates manually instead. A macro reproducing this problem on retina display would be:. {; int n = 5000;; double xx[n];; double yy[n];; TRandom r;; for (int i=0; i<n; i++) {; xx[i] = r.Gaus(-1,0.5);; yy[i] = r.Gaus(1,1.5);; }; TGraph *g = new TGraph(n, xx,yy);; g->Draw(""al"");; }",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1177:187,release,released,187,https://root.cern,https://github.com/root-project/root/pull/1177,2,"['patch', 'release']","['patch', 'released']"
Deployability,"From the release notes of `glibc` 2.34 [[1]]:. > The deprecated memory allocation hooks __malloc_hook, __realloc_hook,; __memalign_hook and __free_hook are now removed from the API. Compatibility; symbols are present to support legacy programs but new applications can no; longer link to these symbols. These hooks no longer have any effect on glibc; functionality. The malloc debugging DSO libc_malloc_debug.so currently; supports hooks and can be preloaded to get this functionality back for older; programs. However this is a transitional measure and may be removed in a; future release of the GNU C Library. Users may port away from these hooks by; writing and preloading their own malloc interposition library. As a consequence, building root 6.24/06 against glibc 2.34 (for example on openSUSE Tumbleweed which already has the updated glibc) fails with the following errors:. ~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void* (* TMemStatHook::GetMallocHook())(size_t, const void*)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:51:11: error: '__malloc_hook' was not declared in this scope; [ 2135s] 51 | return __malloc_hook;; [ 2135s] | ^~~~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void (* TMemStatHook::GetFreeHook())(void*, const void*)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:64:11: error: '__free_hook' was not declared in this scope; [ 2135s] 64 | return __free_hook;; [ 2135s] | ^~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void TMemStatHook::SetMallocHook(TMemStatHook::MallocHookFunc_t)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:77:4: error: '__malloc_hook' was not declared in this scope; [ 2135s]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9031:9,release,release,9,https://root.cern,https://github.com/root-project/root/issues/9031,3,"['release', 'update']","['release', 'updated']"
Deployability,Fully avoid blocking in TCanvas::Update().; Only for expert use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9713:33,Update,Update,33,https://root.cern,https://github.com/root-project/root/pull/9713,1,['Update'],['Update']
Deployability,"Fwd decls from rootmap files were injected to ROOT at the startup time.; However with modules we don't need any foward decls as we're preloading; all modules. Our future plan is to remove rootmap files as a whole, but we still need; to support more features (see 2380). So for now we can remove what we; are not using. *edit This patch also contains adding fHasCxxModule as a private member. This improves startup memory by 10 mbytes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2592:330,patch,patch,330,https://root.cern,https://github.com/root-project/root/pull/2592,1,['patch'],['patch']
Deployability,"G4run.so; #10 0x00007f0763b8b3f7 in G4RunManager::RunInitialization() () from /home/yasmin/CERN/geant4.10.03.p03-install/lib/libG4run.so; #11 0x00007f0763b852c6 in G4RunManager::BeamOn(int, char const*, int) () from /home/yasmin/CERN/geant4.10.03.p03-install/lib/libG4run.so; #12 0x00007f0763b921fb in G4MTRunManager::Initialize() () from /home/yasmin/CERN/geant4.10.03.p03-install/lib/libG4run.so; #13 0x0000559358750187 in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum.; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f0761bb4118 in G4RToEConvForGamma::BuildAbsorptionLengthVector(G4Material const*, G4PhysicsLogVector*) () from /home/yasmin/CERN/geant4.10.03.p03-install/lib/libG4processes.so; #7 0x00007f0761bb6c3f in G4VRangeToEnergyConverter::Convert(double, G4Material const*) () from /home/yasmin/CERN/geant4.10.03.p03-install/lib/libG4processes.so; #8 0x00007f0761bb0bee in G4ProductionCutsTable::UpdateCoupleTable(G4VPhysicalVolume*) () from /home/yasmin/CERN/geant4.10.03.p03-install/lib/libG4processes.so; #9 0x00007f0763b9c5e2 in G4RunManagerKernel::RunInitialization(bool) () from /home/yasmin/CERN/geant4.10.03.p03-install/lib/libG4run.so; #10 0x00007f0763b8b3f7 in G4RunManager::RunInitialization() () from /home/yasmin/CERN/geant4.10.03.p03-install/lib/libG4run.so; #11 0x00007f0763b852c6 in G4RunManager::BeamOn(int, char const*, int) () from /home/yasmin/CERN/geant4.10.03.p03-install/lib/libG4run.so; #12 0x00007f0763b921fb in G4MTRunManager::Initialize() () from /home/yasmin/CERN/geant4.10.03.p03-install/lib/libG4run.so; #13 0x0000559358750187 in main (); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9952:3155,install,install,3155,https://root.cern,https://github.com/root-project/root/issues/9952,8,"['Update', 'install']","['UpdateCoupleTable', 'install']"
Deployability,"GH currently puts this under seemingly arbitrary jobs, such as the unrelated SonarCloud. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13151:184,update,updated,184,https://root.cern,https://github.com/root-project/root/pull/13151,1,['update'],['updated']
Deployability,"GNU ld has a way to control the symbol versions by 'fixing' the library; appending @@somelib_version. In practice, ROOT's libraries contain a lot of undefined symbols which; are supposed to be resolved either in libc or glibc which are system; libraries. Our symbol dependency chain builder does not look into system; libraries for performance (and legacy reasons). Thus the undefined symbols; from the C/C++ runtime cause us to scan every time all non-system libraries; when we know what would be the outcome. More information can be found in the binutils documentation:; https://sourceware.org/binutils/docs/ld/VERSION.html. This patch optimizes dependency resolution speed for libTreePlayer by 450%",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4112:632,patch,patch,632,https://root.cern,https://github.com/root-project/root/pull/4112,1,['patch'],['patch']
Deployability,GUI Doxygen update,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7403:12,update,update,12,https://root.cern,https://github.com/root-project/root/pull/7403,1,['update'],['update']
Deployability,"Gen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_de",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:6217,release,release,6217,https://root.cern,https://github.com/root-project/root/pull/12523,1,['release'],['release']
Deployability,"GitHub repacks archives from time to time, which changes the hash. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12175:162,update,updated,162,https://root.cern,https://github.com/root-project/root/pull/12175,1,['update'],['updated']
Deployability,"GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--. -->; segfault in build process. ; ### Expected behavior; <!--; -->; build process completes. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; standard cmake build process, as described in the guide. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT v6-26-10 (@4dddea35); FreeBSD 13.2 RELEASE (clang 14.0.5), required dependencies installed from ports. ### Additional context; <!--; Add any other context about the problem here.; -->. a port exists v6-28-02 (development/root), installs in binary form (so somebody got it to compile, did not have too much time to test it thoroughly). In my case, however, the port also does not compile, craps out somewhere else. plus it hauls in too many dependencies so it is less than ideal.; I imagine getting it to work on FreeBSD would not end at fixing this issue here. The fbsd port maintainer has some patches which might help, but I have also seen that e.g. procfs is deprecated in new releases and libprocstat has to be used, etc, etc.; With that being said, it would be extremely nice to get ROOT to work on FreeBSD...; thanks,. ```; [ 52%] Built target rootcling_stage1; [ 52%] Generating G__Core.cxx, ../lib/Core.pcm; #0 0x000000000446e3d5 llvm::sys::PrintStackTrace(llvm::raw_ostream&) Signals.cpp:0:0; #1 0x000000000446c646 llvm::sys::RunSignalHandlers() Signals.cpp:0:0; #2 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12787:1061,install,installed,1061,https://root.cern,https://github.com/root-project/root/issues/12787,1,['install'],['installed']
Deployability,"GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The compilation fails with the following error:; ```; Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap; In file included from input_line_9:58:; In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:; C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]; mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence; this issue; mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; static_cast<unsigned long>( ); CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9468:1181,release,release,1181,https://root.cern,https://github.com/root-project/root/issues/9468,6,['release'],['release']
Deployability,Given the very small statistics used (especially on MAcoS) due to th eslow time in evaluating we disable the check on the regression error obtained. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16002:244,update,updated,244,https://root.cern,https://github.com/root-project/root/pull/16002,1,['update'],['updated']
Deployability,"Given; ```cpp; // tree_with_pair.cpp; void tree_with_pair() {; TTree t(""t"", ""t"");; auto x = std::make_pair(42, 84);; //t.Branch(""topbranch"", &x, ""a/I:b/I""); t.Branch(""topbranch"", &x);; t.Fill();; t.Scan();; }; ```. , without this patch the output is:. ```; Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; Execution of your code was aborted.; In module 'Core':; /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; size_t hint_offset = ((char*)&(p->second)) - (char*)p;; ^; ```. with this patch:. ```; Processing tree_with_pair.cpp...; ************************************; * Row * topbranch * topbranch *; ************************************; * 0 * 42 * 84 *; ************************************; ```. This fixes #11215 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11227:230,patch,patch,230,https://root.cern,https://github.com/root-project/root/pull/11227,2,['patch'],['patch']
Deployability,"GraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFiles/G__Graf.dir/G__Graf.cxx.o -Wl,-rpath,/home/graemes/tmp/root-build-nobrotli/lib: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a /usr/lib/x86_64-linux-gnu/libz.so ../../lib/libmathtext.a ../../lib/libHist.so ../../lib/libMatrix.so ../../lib/libMathCore.so ../../lib/libImt.so ../../lib/libMultiProc.so ../../lib/libNet.so ../../lib/libRIO.so ../../lib/libThread.so ../../lib/libCore.so; 	/usr/bin/ld: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a(sfnt.o): in function `sfnt_init_face':; 	sfnt.c:(.text+0x1173a): undefined reference to `BrotliDecoderDecompress'; 	collect2: error: ld returned 1 exit status; ```. If I re-run the link manually adding `/usr/lib/x86_64-linux-gnu/libbrotlicommon.so` it succeeds. The error is avoided entirely if the FTGL libraries are found on the system (specifically for Ubuntu by installing the `libfgtl-dev` package). Naively, it seems there is probably a missing library in `graf2d/graf/CMakeLists.txt`. ### To Reproduce. Try to build ROOT 6.26/06 on an Ubuntu 22.04 machine where FTGL is not natively installed and ROOT self-builds it (`builtin_ftgl` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11239:2843,install,installing,2843,https://root.cern,https://github.com/root-project/root/issues/11239,2,['install'],"['installed', 'installing']"
Deployability,"H:C:\Strawberry\perl\bin;=%; 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. ; 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**; ```; Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]; 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]; 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:2033,install,install,2033,https://root.cern,https://github.com/root-project/root/issues/11787,1,['install'],['install']
Deployability,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:11248,Install,Installed,11248,https://root.cern,https://github.com/root-project/root/issues/10528,1,['Install'],['Installed']
Deployability,"Handle unknown feature and/or option, addressing the issue #7662 on Windows. Gives something like:; ```; C:\Users\sftnight>root-config --flags; --flags: Unknown option or argument!. Usage: root-config [options]. --arch Print the architecture (compiler/OS); --platform Print the platform (OS); --libs Print regular ROOT libraries; --glibs Print regular + GUI ROOT libraries; --evelibs Print regular + GUI + Eve libraries; --cflags Print compiler flags and header path; --bindir Print the executable directory; --libdir Print the library directory; --incdir Print the header directory; --etcdir Print the configuration directory; --tutdir Print the tutorials directory; --srcdir Print the top of the original source directory; --auxlibs Print auxiliary libraries; --config Print arguments used for configuration with CMake; --features Print list of all supported features; --has-<feature> Test if <feature> is compiled in; --version Print the ROOT version; --git-revision Print the ROOT git revision number; --python-version Print the Python version used by ROOT; --python2-version Print the Python2 version used by PyROOT; --python3-version Print the Python3 version used by PyROOT; --ncpu Print number of available (hyperthreaded) cores; --cc Print alternative C compiler specified when ROOT was built; --cxx Print alternative C++ compiler specified when ROOT was built; --f77 Print alternative Fortran compiler specified when ROOT was built; --ld Print alternative Linker specified when ROOT was built; --help Print this message. C:\Users\sftnight>root-config --has-feet; --has-feet: unknown feature!. C:\Users\sftnight>root-config --has-feet --has-pyroot; --has-feet: unknown feature! yes; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7663:603,configurat,configuration,603,https://root.cern,https://github.com/root-project/root/pull/7663,2,['configurat'],['configuration']
Deployability,Handling modulemap files may issue parsing errors or not found errors and our diagnostics client should be prepared for it. This patch fixes an assertion in clang when we see duplicate modulemap files.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5176:129,patch,patch,129,https://root.cern,https://github.com/root-project/root/pull/5176,1,['patch'],['patch']
Deployability,"Having tests in the `test/` directory is quite fragile for configuration reasons, because this is separate CMake project. Therefore, it doesn't share the same configuration variables, which is easy to forget. The RooFit stress tests have been moved already, and this commit moves the remaining RooFit tests. The code is reformatted with the ROOT `clang-format` style on this occasion. Also, the `longtest` label is removed form one of the tests because it doesn't actually take a long time to run (only a few seconds).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15490:59,configurat,configuration,59,https://root.cern,https://github.com/root-project/root/pull/15490,2,['configurat'],['configuration']
Deployability,"Having that bit set on TBranches causes _a lot_ of thread; contention (~TBranch -> ~TNamed -> RecursiveRemove).; Similarly for leaves. This mitigates performance issues with MT runs on certain samples; where all branches and leaves have this bit set. For a reproducer provided by a CMS user, this patch provides a factor 9 speed-up, up to a factor 30 for a stripped down version of said reproducer that exacerbates the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10729:297,patch,patch,297,https://root.cern,https://github.com/root-project/root/pull/10729,1,['patch'],['patch']
Deployability,Heap' in /opt/root_src/core/base/inc/TObject.h:245; 19: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 20: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'c' is non-null in /opt/root_src/gui/webgui6/src/TWebCanvas.cxx:1186; 2: Taking false branch in /opt/root_src/gui/webgui6/src/TWebCanvas.cxx:1186; 3: Calling constructor for 'TCanvasWebSnapshot' in /opt/root_src/gui/webgui6/src/TWebCanvas.cxx:1195; 4: Calling default constructor for 'TPadWebSnapshot' in /opt/root_src/gui/webgui6/inc/TWebSnapshot.h:93; 5: Calling implicit default constructor for 'TWebSnapshot' in /opt/root_src/gui/webgui6/inc/TWebSnapshot.h:66; 6: Calling default constructor for 'TObject' in /opt/root_src/gui/webgui6/inc/TWebSnapshot.h:66; 7: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 8: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 9: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'norm' is not equal to 0 in /opt/root_src/hist/hist/src/TF3.cxx:715; 2: Taking false branch in /opt/root_src/hist/hist/src/TF3.cxx:715; 3: Calling constructor for 'TF3' in /opt/root_src/hist/hist/src/TF3.cxx:725; 4: Calling constructor for 'TF2' in /opt/root_src/hist/hist/inc/TF3.h:72; 5: Calling constructor for 'TF1' in /opt/root_src/hist/hist/inc/TF2.h:72; 6: Calling constructor for 'TF1' in /opt/root_src/hist/hist/inc/TF1.h:373; 7: Calling constructor for 'TNamed' in /opt/root_src/hist/hist/inc/TF1.h:274; 8: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:37; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412:20050,Update,UpdateIsOnHeap,20050,https://root.cern,https://github.com/root-project/root/issues/7412,1,['Update'],['UpdateIsOnHeap']
Deployability,Helgrind found that TCint::CallFunc_Factory indirectly updates; global cint state. Therefore one must take the cint lock before; calling the function. This was the only place (other than; TSelectorCint::Build) which calls this function without first; taking the lock.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/33:55,update,updates,55,https://root.cern,https://github.com/root-project/root/pull/33,1,['update'],['updates']
Deployability,"Hello everyone!; This is Akshay Vashistha, a GSOC student working on AutoEncoders. Currently I have implemented the Denoise Layer and working on stacking up the layers. After this, I will write some tests for same.; My next patch will have a properly implemented stacked layer architecture and some tests for verifying the correctness.; Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/686:224,patch,patch,224,https://root.cern,https://github.com/root-project/root/pull/686,1,['patch'],['patch']
Deployability,"Hello everyone,; This is Akshay Vashistha, a GSOC student working on AutoEncoder implementation. Here is my first patch. It has a base class layer for autoencoders, a denoise layer and StackedNets. The denoise layer can corrupt, encode and reconstruct the input. The stacked layer has both Pretraining and finetuning steps. ; Currently working on writing tests to check the correctness of code. In my next patch I will add some verified tests with required changes. Thank You.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/708:114,patch,patch,114,https://root.cern,https://github.com/root-project/root/pull/708,2,['patch'],['patch']
Deployability,"Hello everyone,; This is Akshay Vashistha, a GSOC student working on Autoencoder implementation. Here is my first patch. Currently it has a denoise layer and finetune layer for stacking.; In my next patch I will add verified tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/696:114,patch,patch,114,https://root.cern,https://github.com/root-project/root/pull/696,2,['patch'],['patch']
Deployability,"Hello, . Instructions at https://root.cern/install/build_from_source/ suggest to run. ```; git clone --branch latest-stable https://github.com/root-project/root.git root_src; ```. However, the branch `latest-stable` doesn't seem to exist in this project. There is no branch with the keyword stable or latest in the project. Cheers,; Karolos",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8188:43,install,install,43,https://root.cern,https://github.com/root-project/root/issues/8188,1,['install'],['install']
Deployability,"Hello,. At the moment, the `ROOT::TLorentzVector` class uses a pseudorapidity-based calculation for the commonly-used DeltaR distance between vectors. For massive objects, such as jets, the rapidity should often be used instead. I have implemented a small switch within the `TLorentzVector::DeltaR` function to allow users to make this calculation with the vector's rapidity, instead of pseudorapidity. This has a default value of `kFALSE`, which means that the current behaviour will be the default one. I have cross-checked this new functionality with the `fastjet::pseudojet::delta_R` implementation and an internal ATLAS one, which all give the same results when performing the rapidity-based calculation. Please let me know if I have violated any contribution guidelines, and I will update this PR accordingly!. 🍻 Matt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7087:788,update,update,788,https://root.cern,https://github.com/root-project/root/pull/7087,1,['update'],['update']
Deployability,"Hello,. We are trying to build root branch [v6-26-00-patches](https://github.com/root-project/root/compare/v6-26-00-patches), but it does not compile after commit 80c1ab6b6dab02c46d8cc66262686fd718b57ece. Here the stacktrace:; ```; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.26.11-214c85d364498a3e137a3783af2e7b69/root-6.26.11/gui/browsable/src/TDirectoryElement.cxx:184:16: error: 'std::string TDirectoryLevelIter::GetContent(const string&)' marked 'override', but does not override; 184 | std::string GetContent(const std::string &kind) override; | ^~~~~~~~~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.26.11-214c85d364498a3e137a3783af2e7b69/root-6.26.11/gui/browsable/src/TDirectoryElement.cxx: In member function 'std::string TDirectoryLevelIter::GetContent(const string&)':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.26.11-214c85d364498a3e137a3783af2e7b69/root-6.26.11/gui/browsable/src/TDirectoryElement.cxx:186:11: error: 'GetContentKind' was not declared in this scope; did you mean 'GetContent'?; 186 | if (GetContentKind(kind) == kFileName); | ^~~~~~~~~~~~~~; | GetContent; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.26.11-214c85d364498a3e137a3783af2e7b69/root-6.26.11/gui/browsable/src/TDirectoryElement.cxx:186:35: error: 'kFileName' was not declared in this scope; 186 | if (GetContentKind(kind) == kFileName); | ^~~~~~~~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.26.11-214c85d364498a3e137a3783af2e7b69/root-6.26.11/gui/browsable/src/TDirectoryElement.cxx:187:17: error: 'fFileName' was not declared in this scope; 187 | return fFileName;; | ^~~~~~~~~; ```; It successfully build up to commit https://github.com/root-project/root/commit/58c6a86fbe840a0f7fdd95d710755e925300120f. We are targeting `el8`, `amd64` and `gcc11`. Could you",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12110:53,patch,patches,53,https://root.cern,https://github.com/root-project/root/issues/12110,2,['patch'],['patches']
Deployability,"Hello,. after I installed the most recent ROOT release 6.22.00, I noticed that the drawing performance of the marker styles 6 and 7 became significantly worse. Unfortunately, I got to admit this is due to the additions of my PR #4772.; The implementation of the marker line width required to use different line joins and line caps than default to look nice, but are a little bit slower. In usual cases you won't notice this, but when you draw 100.000+ points, it becomes significant. I wrote this patch to fix this problem and make the markers 6 and 7, which are meant to be used for huge amounts of points, fast again. I confirmed that the fix works in an X11 environment. It would be good if someone can approve it also on Windows and MacOS. Since this is a fix, it should also become part of the v6-22-00-patches branch, how ever I don't know exactly how to do this. Do I need to open a second PR for this?. All the best,; Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6027:16,install,installed,16,https://root.cern,https://github.com/root-project/root/pull/6027,4,"['install', 'patch', 'release']","['installed', 'patch', 'patches', 'release']"
Deployability,"Hello,. it is Vladimir working on the Convolutional Neural Networks in TMVA,; as a part of the Google Summer of Code 2017. This is my first patch for now,; where I have created the entire CNN structure and implemented and tested; the reference architecture. I had some problems with the backpropagation,; so I was not able to test that. For everything else there are tests. In the next patch which I plan to be before the first evaluation starts, I will include a CPU; architecture implementation, and a correct backporpagation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/664:140,patch,patch,140,https://root.cern,https://github.com/root-project/root/pull/664,2,['patch'],['patch']
Deployability,"Hello,. the bug this PR is adressing could be seen by random failures of the test gtest-hist-hist-test-TGraphMultiErrorsTests:; - https://epsft-jenkins.cern.ch/job/root-pullrequests-build/74654/testReport/projectroot.hist.hist/test/gtest_hist_hist_test_TGraphMultiErrorsTests/; - https://epsft-jenkins.cern.ch/job/root-pullrequests-build/74449/testReport/projectroot.hist.hist/test/gtest_hist_hist_test_TGraphMultiErrorsTests/; - https://epsft-jenkins.cern.ch/job/root-pullrequests-build/73886/testReport/projectroot.hist.hist/test/gtest_hist_hist_test_TGraphMultiErrorsTests/. I have to apologize for this bug. It was caused by using an attribute to allocate an array before its value had been updated. All the best,; Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4780:695,update,updated,695,https://root.cern,https://github.com/root-project/root/pull/4780,1,['update'],['updated']
Deployability,"Hello,. these are exactly the same changes as PR #6027; Since it is a pure bugfix, I think it should be added also to the patches branch. In case this second PR for the patches branch is not necessary to get the changes into the patches branch, I'm sorry, however I am no expert on using git tools and this is the only way I know. All the best,; Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6089:122,patch,patches,122,https://root.cern,https://github.com/root-project/root/pull/6089,3,['patch'],['patches']
Deployability,"Hello,. this patch adds the possibility to specify a line width to be used when markers are drawn. Recently I stumbled upon this and searched for an already existing solution, but I could only find other people looking for something like this, so I decided to implement it. Before I start to describe the changes, let me mention the most important point first: I only tested the feature under Linux, since I have neigther a ROOT installation under Windows nor a Mac. Since the feature also changes files associated with drawing under Windows and MacOS, I consider it absolutly mandatory to test the feature under those systems before merging this pull request. Now back to the actual feature. Since an image says more than 1000 words here an image of the outcome using the implemented feature which is also part of the feature description in the class TAttMarker:; ![c](https://user-images.githubusercontent.com/5320187/71742710-ee6cc580-2e62-11ea-900d-ba546e27f474.png). **The attribute fMarkerLineWidth**; The storing of the parameter is done by the attribute fMarkerLineWidth of the TAttMarker class. I checked all daughter classes of TAttMarker for the need of changes due to this addition. Furthermore, I added a line width dropdown field to the TAttMarkerEditor which works the same way as in the TAttLineEditor. Obviosly the line width only makes sense for marker styles that consist of lines and not areas. To check whether the currently set marker style is influenced by the marker line width I added the function HasMarkerLineWidth to TAttMarker. **Marker size and draw method**; Since the calculation of the size of the marker assumed ultimatly thin lines up to now, the bounding box of the marker would have increased when setting a larger marker line width. To counter that, I decreased the marker size by the amount it would have increased due to the line width. However, note that this only works with round line caps and round line joins, since for example with miter joins the boundin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4721:13,patch,patch,13,https://root.cern,https://github.com/root-project/root/pull/4721,2,"['install', 'patch']","['installation', 'patch']"
Deployability,"Hello,; This is the Implementation of DataLoader for TMVA according to new design.; - Tutorials updated; - Variable Importance implemented and tested.; - New ROC algorithm implemented; - PyMVA now support python 3. Cheers,; Omar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/119:96,update,updated,96,https://root.cern,https://github.com/root-project/root/pull/119,1,['update'],['updated']
Deployability,"Helper.cxx:. ```; // NOTE: We cannot instantiate the scope: not a valid decl.; // Need to unload it if this decl is a definition.; // But do not unload pre-existing fwd decls. Note that this might have failed; // because several other Decls failed to instantiate, leaving several Decls; // in invalid state. We should be unloading all of them, i.e. inload the; // current (possibly nested) transaction.; auto *T = const_cast<Transaction*>(m_Interpreter->getCurrentTransaction());; m_Interpreter->unload(*T);; *setResultType = nullptr;; return 0;; ```. The call stack here is. ```; #0 0x00007fffef9dde70 in cling::Interpreter::unload(cling::Transaction&)@plt; (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #1 0x00007fffefbf28ce in cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #2 0x00007fffefb854d9 in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #3 0x00007fffefb06c54 in TCling::GetInterpreterTypeName(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool); (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #4 0x00007ffff560f184 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #5 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #6 0x00007ffff56188e5 in TClass::Init(char const*",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7657:12051,patch,patches,12051,https://root.cern,https://github.com/root-project/root/issues/7657,1,['patch'],['patches']
Deployability,"Hey! One commit I found locally, may be used to fix #7441 . - Enabled by the XRDCL_LIB_ONLY=ON cmake flag; - Prevents building the client binaries such as xrdcp in our build dir; but not exposing them in the installation. Fixes #7441",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7539:208,install,installation,208,https://root.cern,https://github.com/root-project/root/pull/7539,1,['install'],['installation']
Deployability,"Hi @Axel-Naumann,. This is not really a pull request but I thought it might be a good way to get feedback from you guys and maybe some help improving it. This is not meant for merging, we are fine with an out of tree patch for now, but we would of course be very happy if something like this becomes upstream eventually. This is a very ""hacky"" try to be able to create ROOT files with; deterministic checksum that is not dependent on timestamp or hostname or; anything: Create a file with the same content twice on different; machines should yield the same checksum (assuming they have the same root file format version and same class definitions ...). We cannot really modify the software using these checksums and it's not just ROOT files but also other files in there so a distinction between ""content checksum"" and ""file checksum"" would be rather tricky. That's why we went for the brutal approach. We need this mostly for small files in a well controlled environment:; The file is created in one place at one time and not incrementally over; a long time, no threads. . So we would be fine with a global flag to not store time dependent information in files but it is of course ugly. A slightly less horrific version might be to have a `TDeterministicFile` which behaves like `TFile` with the only difference that it has a zeros for dates/uuids but I don't know the classes well enough to judge if that is feasible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4083:217,patch,patch,217,https://root.cern,https://github.com/root-project/root/pull/4083,1,['patch'],['patch']
Deployability,"Hi @guitargeek , this pull request add the tutorials for the lagrangian morphing class and also; add an example for the factory interface. The are some accompanying fixes as listed below.; Please take a look and let me know if this looks good !. ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate ; the usage of the `RooLagrangianMorphFunc` class; - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new; options of `taylorexpand` and `lagrangianmorph`; ; ## Changes or fixes:; - formatting of `tutorials/roofit/rf710_roopoly.py`; - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed ; from `NP` to `NewPhysics` to avoid confusion with other abbreviations; - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [ ] tested changes locally. Cheers,; Rahul",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9665:436,update,update,436,https://root.cern,https://github.com/root-project/root/pull/9665,2,['update'],['update']
Deployability,"Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot!. 1. Open a x64 Native Tools Command Prompt for VS 2019; 2. git clone --branch master https://github.com/root-project/root.git; 3. cd root; 3. mkdir build_amd64 && cd build_amd64; 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 ..; 5. cmake --build . --config Release. Hit below error when build:; F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9389:22,release,release,22,https://root.cern,https://github.com/root-project/root/issues/9389,4,"['Release', 'release']","['Release', 'release', 'release-', 'releases']"
Deployability,"Hi Axel and Lorenzo,. I take the code and I put it in one commit to let review it easy.; In resume the changes are ; -> Now you can use R functions in C++ very easy using the class TRFunctionImport, that have overloaded operators to use objects like functions that receives template arguments and return TRObjects.; -> Documentation updated in http://oproject.org/tiki-index.php?page=ROOT+R+Users+Guide#Import; -> added documentation in doxygen; -> new propieties for TRDataFrame with operators. You can see the output of documentation in; http://files.oproject.org/root/rootdoc/html/group___r.html; users guide in markdown integrate to doxygen ; http://files.oproject.org/root/rootdoc/html/md__home_omazapa_root_bindings_r_doc_users-guide__r_o_o_t_r__users__guide.html. I have the code now in http://github.com/oprojects/root. Best Regards; O.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/83:333,update,updated,333,https://root.cern,https://github.com/root-project/root/pull/83,2,"['integrat', 'update']","['integrate', 'updated']"
Deployability,"Hi Guys,. According to the new design of TMVA the interfaces TMVAGui, TMVAMultiClassGui and TMVARegGui needs an update to support the new format that is stored the results.; In this pull requests I have the code to updated TMVAGui to do visualization of two class classification.; lets see http://oproject.org/tiki-index.php?page=TMVA#TMVAGuis. I will continue working to updated TMVAMultiClassGui and TMVARegGui.; NOTE: all requirements accorded in the meeting was implemented. Best Regards. Omar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/143:112,update,update,112,https://root.cern,https://github.com/root-project/root/pull/143,3,['update'],"['update', 'updated']"
Deployability,"Hi Jonas (@guitargeek) and Lorenzo (@lmoneta) ,. I am opening a draft pull request with the bulk of the code for the morphing class. The morphing class consist of the RooLagrangianMorphFunc which builds the necessary morphing function and is assisted by a lightweight config class which allows to configure the morphfunc in various ways. ; ; The code is WIP and there are more updates expected in subsequent PRs. The main discussion is the way the objects are handled by the config and the morphfunc and support for factory style syntax. The code for the tutorials and the optimizer for the choice of input templates is also postponed to a subsequent PR as this is tied to the previous issue. There are some more issues regarding having boost high precision which can be a separate PR.; ; Feel free to comment on this version to get the review started !; ; Cheers,; Rahul and Carsten (@cburgard)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7766:377,update,updates,377,https://root.cern,https://github.com/root-project/root/pull/7766,1,['update'],['updates']
Deployability,"Hi `root-project/root`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull req",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11808:135,integrat,integrated,135,https://root.cern,https://github.com/root-project/root/pull/11808,2,['integrat'],['integrated']
Deployability,"Hi all,. I love the new command line utils included in the releases in root/main/python/. However, I found the rooteventselector command to be lacking in some functionality, so I added the ability for it to skim based on a selection string (a la a TCut). I hope this is useful for others!. -Larry",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/149:59,release,releases,59,https://root.cern,https://github.com/root-project/root/pull/149,1,['release'],['releases']
Deployability,"Hi all,. I've added a new command-line tool called rootslimtree which will remove branches from an input tree and write out a new file. This is actually implemented in cmdLineUtils.rootEventselector() and the rooteventselector function has been updated to also have this ability, so in case a user wants to remove both branches and events, this can be done in a single step. . Related to #149. Thanks!; -Larry",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/150:245,update,updated,245,https://root.cern,https://github.com/root-project/root/pull/150,1,['update'],['updated']
Deployability,"Hi guys,; * updated PyMVA with support for scikit-learn >= 0.18; * support for python 2 and 3. Best; Omar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/375:12,update,updated,12,https://root.cern,https://github.com/root-project/root/pull/375,1,['update'],['updated']
Deployability,"Hi please check here:; https://root-forum.cern.ch/t/6-24-00-does-not-complile-on-redhat-8-3/45161. details:. Hello,; I’m running into problems compiling root 6.24.00:. $ cmake -Dclad=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j8. …; [ 76%] Linking CXX static library …/…/…/…/lib/libclingInterpreter.a; [ 76%] Built target clingInterpreter; Scanning dependencies of target CLING; [ 76%] Built target CLING; Scanning dependencies of target LLVMRES; [ 76%] Copying LLVM resource and header files; [ 76%] Built target LLVMRES; (stucks…). $ cmake --build . --install; [ 0%] Built target AFTERIMAGE; [ 0%] Built target OPENUI5; [ 0%] Built target LZMA; [ 0%] Performing download step (download, verify and extract) for ‘VDT’; (stucks). seems that vdt uses network access, which I do not have (not mentioned in the docs).; I think I do not need it anyhow…. so again:; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . --install; …; [ 79%] Generating G__Thread.cxx, …/…/lib/Thread.pcm; [ 79%] Generating G__forward_listDict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -D",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292:261,install,install,261,https://root.cern,https://github.com/root-project/root/issues/8292,2,['install'],['install']
Deployability,"Hi! I have been trying to run several rooFit tutorials in Swan and also locally with ROOT v6.22.08 in MacOS. I am getting errors with some functions. There are multiple, but on example is `gauss.plotOn(xframe, LineColor=""r"")` and it doesn't seem to accept the `LineColor` argument. I get:. ```; TypeError: RooAbsPdf::plotOn got an unexpected keyword argument 'LineColor'; ```. I tried copying the code and running them in a cmslpc cluster and in my mac but I get the same error like in Swan.; I haven't seen any solution so far to this problem. Are there any updated sets of tutorials?. One can quickly reproduce the problem/s, by running some Swan notebooks. For example: https://root.cern.ch/doc/master/rf101__basics_8py.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8973:559,update,updated,559,https://root.cern,https://github.com/root-project/root/issues/8973,1,['update'],['updated']
Deployability,"Hi, . A regression was introduced in TMutiGraph with a log scale; I found a commit that seems to be linked to my problem [https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604](https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604). my OS is debian10 x86_64 with gcc8.3. here is sample script to reproduce the bug :. ```; void multigraph(); {; auto c1 = new TCanvas(""c1"",""multigraph"",700,500);; c1->SetGrid();; c1->SetLogx();; c1->SetLogy();; auto *mg = new TMultiGraph();; std::vector<double> x1;; std::vector<double> sig1;; std::vector<double> sig2;; for (double E=1e-4;E<2e7;E*=1.1); {; 		x1.push_back(E);; 		sig1.push_back(10*pow(E,-0.1));; 		sig2.push_back(15*pow(E,-0.15));; 		}; auto g1 = new TGraph(x1.size(), x1.data(), sig1.data());; mg->Add(g1);; auto g2 = new TGraph(x1.size(), x1.data(), sig2.data());; mg->Add(g2);; mg->SetTitle(""; E (eV);#sigma (b)"");; mg->GetXaxis()->CenterTitle(true);; mg->GetYaxis()->CenterTitle(true);; mg->Draw(""AL"");; c1->SaveAs(""multigraph.pdf"");; }; ```. It works fine on versions 6.14.08, 6.18.04 and 6.20.06; TMultiGraph scale is wrong with versions 6.22.08, 6.24.06.; There is also an error message at the console (negative value for log scale). ```; Processing multigraph.C...; Error in <THistPainter::PaintInit>: log scale requested with a negative argument (-1.720339); Info in <TCanvas::Print>: pdf file multigraph.pdf has been created; ```. I remove the patch [https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604](https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604) on version 6.24.06 and it works again. thanks in advance",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9011:1455,patch,patch,1455,https://root.cern,https://github.com/root-project/root/issues/9011,1,['patch'],['patch']
Deployability,"Hi, ; I create this issue to report a bug, that was also observed by @eguiraud, ; with ROOT version 6.22.06. I am trying to use the RDataFrame to produce histograms running on root files.; With the following code; ```python; import ROOT as RT ; """"""; # setupATLAS and ROOT 6.22.06 ; export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase; alias setupATLAS='source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh'; setupATLAS; . /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.22.06/x86_64-centos7-gcc48-opt/bin/thisroot.sh. # Execute python script; python2 dataframe_vs_tree.py; """"""; RT.gROOT.SetBatch(True) ; RT.EnableImplicitMT(). infileName = ""Zee_Sh221-0.root"" ; treeName = ""Nominal"" ; cutString = ""sample==\""Zbl\"""" ; distName = ""MET"" ; #weightName = ""EventWeight"" ; binning = [25,0,500]. histName = ""h_{}"".format(distName). print(""infileName = {}"".format(infileName)); print(""treeName = {}"".format(treeName)); print(""cutString = {}"".format(cutString)) . infile = RT.TFile.Open(infileName); dataframe = RT.RDataFrame(treeName, infile). histmodel = RT.RDF.TH1DModel(histName, histName, binning[0], binning[1], binning[2]). hist = dataframe.Filter(cutString).Histo1D(histmodel, distName) ; print(""-----""); print(""hist.GetEntries() = {}"".format(hist.GetEntries())); print(""hist.GetSumOfWeights()= {}"".format(hist.GetSumOfWeights())); print(""-----""); ```; I attached the test file on the ROOT forum (which only contains 3 entries on purpose); Please read the following strange observations that we made about it which to us do not make sense ; https://root-forum.cern.ch/t/rdataframe-and-createpoxy-ttreereadervalue-error-for-selection-on-string-branch-in-filter-method/43488. But I get the error; ```; Error in <TTreeReaderValueBase::CreateProxy()>: The branch sample contains data of type string. It cannot be accessed by a TTreeReaderValue<string>; ```; With bigger files I get many times this error and the number of entries and integral of the histogram hist is 0 while it should no",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7169:474,release,releases,474,https://root.cern,https://github.com/root-project/root/issues/7169,1,['release'],['releases']
Deployability,"Hi, @pcanal @bbockelm . This branch implements little endian in TBuffer. The code is not ready to be merged and I hope it would be more convenient to discuss it on github. There is still a design issue. This is the link: https://sft.its.cern.ch/jira/browse/ROOT-5073. Let's take an example of writing to a TFile, we need to update header (TFile::WriteHeader), streamer info (TFile::WriteStreamerInfo) and free segments (TFile::WriteFree). ; 1. TFile::WriteHeader creates a TKey but does not stream its buffer. When you read or write header, it is always stored as big endian.; 2. TFile::WriteFree works in the same way with TFile::WriteHeader.; 3. TFile::WriteStreamerInfo is quite different from above two cases. It creates a TKey but uses streaming function to change streamer info object TList to little endian. The problem is that all of three information are read by TFile::ReadBuffer or TFile::ReadKeyBuffer without converting the endianesss. header and free segments can be processed without any problems. But streamer info is read in reversed endianess. . To address this issue, one way is adding a fBit in TFile class and change all meta data (header, free segments and streamer info) to little endian. Another way is modifying the read function for streamer info and convert its endianess before read it from buffer. Zhe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/136:324,update,update,324,https://root.cern,https://github.com/root-project/root/pull/136,1,['update'],['update']
Deployability,"Hi,. # This Pull request: . This PR comes from this [forum thread](https://root-forum.cern.ch/t/use-root-io-as-library-in-a-c-stand-alone-project/55539/5). This tutorial is a minimal working example about how to create a ROOT dictionary for a custom class, and its use for writing and reading a TTree. Further changes may be needed before full integration into ROOT project. ## Changes or fixes:. New folder added, `tutorials/tree/dictionary`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13205:344,integrat,integration,344,https://root.cern,https://github.com/root-project/root/pull/13205,2,"['integrat', 'update']","['integration', 'updated']"
Deployability,"Hi,. I added 2 convenient methods for TGraph:; - AppendPoint adds a new point at the ""end"" of the graph.; - RemoveAllPoints calls RemovePoint(0) until there are no points left. This probably could also be done (faster) by deleting the fX and fY arrays, so feel free to change this patch. Benni",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/39:281,patch,patch,281,https://root.cern,https://github.com/root-project/root/pull/39,1,['patch'],['patch']
Deployability,"Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output; ```cmake; -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log; [ 0%] No update step for 'TBB'; [ 0%] No patch step for 'TBB'; [ 0%] No configure step for 'TBB'; [ 0%] Performing build step for 'TBB'; CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):; Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log; ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get; ```cmake; -- Found TBB: /opt/homebrew; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):; if given arguments:. ""VERSION_LESS"" ""2018""; ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one?. Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10370:15,install,install,15,https://root.cern,https://github.com/root-project/root/issues/10370,5,"['install', 'patch', 'update']","['install', 'installation', 'patch', 'patches', 'update']"
Deployability,"Hi,. This has been bugging me for a while now. 😛. ROOT has been exporting a CMake configuration for downstream projects (using ROOT) for a while now. But the exported/imported library targets at the moment can't be used with code like:. ```cmake; find_package( ROOT 6.10 REQUIRED ); add_executable( MyExecutable test.cxx ); target_link_libraries( MyExecutable ROOT::Core ); ```. In this case the build would complain that it can't find the ROOT headers that `test.cxx` may want to use. Even though the expectation against imported targets **is** that they would carry all information with them to compile any client code correctly. While the latter sentiment can take us quite far, as one could even argue that imported libraries should carry whatever compiler definitions/options the client may need with themselves, unfortunately this is not super easy to do with CMake at the moment. (For instance I don't know of a good way in which the imported library could impose the same C++ standard on the client project that ROOT was built with. While allowing the client project to use an even newer standard if needed.). So for now I'll just be satisfied making sure that at least the include directory needed by the ROOT libraries would be automatically propagated to clients wanting to link against them. This update takes care of that. Cheers,; Attila",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1466:82,configurat,configuration,82,https://root.cern,https://github.com/root-project/root/pull/1466,2,"['configurat', 'update']","['configuration', 'update']"
Deployability,"Hi,. While trying to compile some code which uses ROOT::Math::PxPyPzMVector, I run into; ```; In file included from v6-22-06/install/include/Math/Vector4D.h:12:; v6-22-06/install/include/Math/GenVector/PxPyPzE4D.h:154:17: error: call to function 'sqrt' that is neither visible in the template definition nor found by argument-dependent lookup; return sqrt(mm);; ^; v6-22-06/install/include/Math/GenVector/PxPyPzM4D.h:108:14: note: in instantiation of member function 'ROOT::Math::PxPyPzE4D<double>::M' requested here; fM = v.M();. ```. In the header files all standard functions should be prefixed with `std::`. I guess this is a remnant from days when there were `using namespace std` statements in the headers... Cheers,; Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7905:125,install,install,125,https://root.cern,https://github.com/root-project/root/issues/7905,3,['install'],['install']
Deployability,"Hi,. not entirely sure if this has been discussed already, i just noticed i hadn't pushed this one to a public server yet. RooDataSets can already be converted from Tree to Vector storage, but to export RooFit data to a standard root TTree and then do ""normal root things"" with it, the reverse direction is also needed and at to my best knowledge a bit cumbersome (juggeling with DataStore classes, as encapsulated in this patch). for the record `RooDataSet::setDefaultStorageType(RooAbsData::Tree)` exists, though i assume there are cases where one only doesn't want to globally flip the switch. What probably should be thought over is the ownership management: i let the dataset keep ownership with `tree()` (and a reference is passed). and transfer ownership with `export_tree()` and a copy of the data is passed. Therefore `tree()` will still return a `nullptr` if vector storage is used and the user has to explicitly trigger the conversion if they want a reference to the internal tree. (the name `export_tree()` can be changed into something more coherent with method naming conventions.). Cheers,; Paul",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/363:423,patch,patch,423,https://root.cern,https://github.com/root-project/root/pull/363,1,['patch'],['patch']
Deployability,"Hi,; I ran into a memory leak training a BDT yesterday.; Strangely only when running through the root_numpy interface.; The problem appears to scale with number of training events (somewhere between 6.4k and 12.8k training events I run out of RAM); Valgrind/memcheck pointed into `TMVA::DecisionTree::TrainNodeFast` (assuming I read the output correctly. valgrind gave me some 370k lines and i tried with diff'ing a many-event run with a few-event run to get rid of unrelated issues); since this is in an if IMT block, I tried rebuilding root without IMT => tada leak gone.; So diffing the if and else blocks of the preprocessor if (i.e. two different `TMVA::DecisionTree::TrainNodeFast` implementations) I noticed these lines commented out. This patch does not fix the original problem for me, and I'm still on the chase, but the change looks right to me. EDIT: I should add, this does not seem to be a general root_numpy issue because other TMVA methods don't see the issue. the memory only starts exploding during the BDT training. I don't see the issue with tmva through pyroot either. so I really need all three root_numpy+IMT+BDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2836:747,patch,patch,747,https://root.cern,https://github.com/root-project/root/pull/2836,1,['patch'],['patch']
Deployability,"Hi,; I'm trying to add a patch to address the issue here: https://sft.its.cern.ch/jira/browse/ROOT-9655.; There are two features:; 1) using the default option, TPaletteAxis will have the same range as the early histogram that the current histogram is normalized to, and thus the correct palette;; 2) New options ""SAME0"" and ""SAMES0"" to allow opting out of the default normalization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3150:25,patch,patch,25,https://root.cern,https://github.com/root-project/root/pull/3150,1,['patch'],['patch']
Deployability,"Hi,; We are trying to test latest ROOT 6.28 patches (commit 36349764e9) and ROOT master (commit 84d6328434) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit b684439239. Looks like rootcling and `c++20` issue. Is it a known issue?. [a] ; https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-394617/32404/build.log; ```; >> Checking EDM Class Version for src/DataFormats/L1GlobalCaloTrigger/src/classes_def.xml in libDataFormatsL1GlobalCaloTrigger.so; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/cling/std.modulemap:554:10: error: module 'std.bits/uses_allocator_args.h' requires feature 'cplusplus20'; module ""bits/uses_allocator_args.h"" [optional] {; ^; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/memory_resource:42:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/uses_allocator_args.h> // uninitialized_construct_using_alloc; ^; ```. this is the stack trace we see when this error occurs; ```; ===========================================================; There was a crash (kSigAbort).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00002b4bd10da72b in waitpid () from /lib64/libc.so.6; #1 0x00002b4bd103bcf7 in do_system () from /lib64/libc.so.6; #2 0x00002b4bd1d2345c in TUnixSystem::Exec (this=0x7472d0, shellcmd=0xc1f5720 ""/pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:44,patch,patches,44,https://root.cern,https://github.com/root-project/root/issues/12771,3,"['integrat', 'patch']","['integration', 'patches']"
Deployability,"Hi,; We are trying to update root 6.24 branch (commit https://github.com/root-project/root/commit/7c0cfaca4c70c7394328547c05e00028b0079a03) in CMSSW special integration builds (https://github.com/cms-sw/cmsdist/pull/6746/files ) but looks like pyROOT fails/hangs for some special dictionaries. . While building cmssw , we use https://github.com/cms-sw/cmssw/blob/master/FWCore/Utilities/scripts/edmCheckClassVersion to check for root dictionaries class versions. This works for most of our dictionaries e.g following two run fine ( https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_hlt.xml, https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_1.xml ); ```; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_hlt.xml; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_1.xml; ```; but it fails/hangs for https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_2.xml; ```; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_2.xml; ```; Most of the times the above command just hangs with error https://muzaffar.web.cern.ch/root624/err1.log but once I was able to get this error https://muzaffar.web.cern.ch/root624/err.log . Can you please look in to it and see if this log helps? . In case you want to try it yourself then you go to cmsdev25 and do; ```; >cd /build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT624_X_2021-03-25-1100; >cmsenv; >/build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT624_X_2021-03-25-1100/src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x /build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmss",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718:22,update,update,22,https://root.cern,https://github.com/root-project/root/issues/7718,2,"['integrat', 'update']","['integration', 'update']"
Deployability,"Hi,; i try to t install root, i get the cMakelists.text issue; CMake Error: The source directory ""/home/said/Desktop/product/root"" does not appear to contain CMakeLists.txt. how i can fix this problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11819:16,install,install,16,https://root.cern,https://github.com/root-project/root/issues/11819,1,['install'],['install']
Deployability,"How to compile code see Readme in gui/canvaspainter. Code is not yet used - I will provide another patch after this PR and #717 are merged. CEF-related makefile should be improved. ; One can use **cefsimple** cmake files as an example. https://bitbucket.org/chromiumembedded/cef/src/8e69e3dcea8b/tests/cefsimple/?at=master. **cefsimple** has some specialization for linux, mac and windows. ; I used only linux till now. One could try mac - for that one should include simple_handler_mac.mm into compilation instead of simple_handler_linux.cxx. Same is for cef_main.cxx. Formally one need to create separate versions for mac, linux and windows.; You can see example also in **cefsimple**. These are different platform-specific error handlers. Building of Qt5 part is not called from makefile. I hope, one can add it into makefile when qt5-webengine is discovered. Also rootqt5 executable should be moved into $ROOTSYS/bin directory",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/721:99,patch,patch,99,https://root.cern,https://github.com/root-project/root/pull/721,1,['patch'],['patch']
Deployability,"Hub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`; ```cpp; class CustomStruct { ; typedef std::string typedef_string;; typedef_string str;; };. auto classField = RField<CustomStruct>(""field"");; ```; Trying to create this field fails at run time:; ```; C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >; ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) ; [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]; ```; ### Setup; ROOT master; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):; https://github.com/root-project/root/blob/28f86b343f4ec280937fbbe8ecf64d9582651dcb/tree/ntuple/v7/src/RField.cxx#L550. <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7861:1695,install,install,1695,https://root.cern,https://github.com/root-project/root/issues/7861,1,['install'],['install']
Deployability,"I already told Axel I was ""playing"" with clang-tidy. Here are some first results, basically low-hanging fruits only. I also included some of my own TMVA patches (more progress bars / unordered_map) and code modernization for TMVA. Biggest improvement is probably the missing TString move assignment operator, that makes sorting a vector<TString> much much faster if the strings are too long for short string optimization. Most of these patches can be applied in any order, they do not depend on each other. We can discuss the large modernize-loops commit. I didn't have enough time to go through the loop variable names. The autogenerated names are not always the best (especially if the name ""i"" is generated). Nevertheless I wanted to push all these changes before SB52 :-)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1585:153,patch,patches,153,https://root.cern,https://github.com/root-project/root/pull/1585,2,['patch'],['patches']
Deployability,"I am not sure if it is a real bug or a known issue but the following macro does not fill the histogram `hpx`:; ```; void ntuple_example() {; auto hpx = new TH1F(""hpx"", ""hpx"", 100, -1., 1.);; auto f = new TFile(""hsimple.root"");; auto tree = (TTree*)f->Get(""ntuple"");; tree->Draw(""px >> hpx"","""",""goff"");; hpx->Draw();; }; ```; To make it work it is enough to swap the histogram creation line and the TFile creation line.; So the workaround is simple but that might be confusing if people first create the histogram(s) and then attach the file(s) containing the tree(s): the histogram(s) will be empty. I see that on Mac. I see this issue until 6:20 at least (I was not able to install older versions)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11440:675,install,install,675,https://root.cern,https://github.com/root-project/root/issues/11440,1,['install'],['install']
Deployability,"I am working with dev3 LCG nigthlies slot. ; Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. ; There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method.; Problem appears from the start of this week. There were no problem till with last week nightlies ; as well as there are no problems with any released versions of ROOT. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT version 6.25.01 from dev3 nightlies slot ; 2. lxplus.cern.ch ; 3. LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8474:349,release,released,349,https://root.cern,https://github.com/root-project/root/issues/8474,1,['release'],['released']
Deployability,"I believe this is what happens:; - In a ProductPdf, the values of the different components are precomputed & cached if `Optimize(2)` is activated. This caches PDF values **with** normalisation.; - If the ProductPdf is integrated, those PDF values are not re-evaluated, the pre-cached values are used. That means that already normalised PDF values are used to compute the integrals, and then the PDFs are divided by the now wrong integrals.; - The fix is to clone the terms that are multiplied for computing the integrals. This side-tracks the pre-cached values when integrals are computed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6315:218,integrat,integrated,218,https://root.cern,https://github.com/root-project/root/pull/6315,1,['integrat'],['integrated']
Deployability,"I checked that the following chain of configurations works now, and; failed before:; ```; cmake -Dminimial=ON -Dssl=OFF ..; cmake -Dbuiltin_xrootd=ON .; ```. Closes https://github.com/root-project/root/issues/16374.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16604:38,configurat,configurations,38,https://root.cern,https://github.com/root-project/root/pull/16604,1,['configurat'],['configurations']
Deployability,"I did the same ""style"" of integration as was done for roottest repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1142:26,integrat,integration,26,https://root.cern,https://github.com/root-project/root/pull/1142,1,['integrat'],['integration']
Deployability,"I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```; RooRealVar alpha(""alpha"",""alpha"",-5,5);; RooRealVar nom(""nom"",""nom"",10);; RooRealVar up(""up"",""up"",11);; RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});; pi.setAllInterpCodes(5);; TGraph gr;; alpha = -3;; while (alpha.getVal()<3) {; gr.AddPoint(alpha.getVal(),pi.getVal());; alpha.setVal(alpha.getVal()+0.1);; }; gr.Draw(""ALP"");; ```; ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16169:961,patch,patches,961,https://root.cern,https://github.com/root-project/root/pull/16169,1,['patch'],['patches']
Deployability,"I don't know if this is desirable or not, but I figured I would raise the issue. `TStreamerElement::ESTLtype` duplicates `ROOT::ESTLType` exactly, but with a lower-case `t` in `type`. It confused me when I found this out (and it turns out that I forgot to update `TStreamerElement::ESTLtype` when I updated `ROOT::ESTLType`). I could not find any usage of `TStreamerElement::ESTLType` in ROOT, and ROOT compiles just fine without the enum, but just in case someone out there is using it, I'm proposing to deprecate it in 6.24 and remove it in 6.26. Feel free to close this PR if you don't think this makes sense. UPDATE:. after discussion with @pcanal we decided that deprecation/removal is the right thing to do, and I extended the patch to `TDictionary` and `TClassEdit`. `TBufferJSON` had some usage of `TClassEdit::ESTLType` which has now been substituted with `ROOT::ESTLType`. UPDATE 2:. Since gcc 5 (the system compiler on Ubuntu 16) [does not support deprecation of enumerators](https://godbolt.org/z/1TEo5M), I'm proposing to disable `R__DEPRECATED` for that gcc version (it was already disabled for gcc 5.1 and 5.2 due to a different issue).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7234:256,update,update,256,https://root.cern,https://github.com/root-project/root/pull/7234,5,"['UPDATE', 'patch', 'update']","['UPDATE', 'patch', 'update', 'updated']"
Deployability,"I got these errors while building from master on Fedora 32 with the following command `cmake -GNinja -Ddev=ON -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=Release` . ```; /home/vpadulan/Programs/rootproject/root/gui/browserv7/src/RWebBrowserImp.cxx: In member function ‘virtual void ROOT::Experimental::RWebBrowserImp::BrowseObj(TObject*)’:; /home/vpadulan/Programs/rootproject/root/gui/browserv7/src/RWebBrowserImp.cxx:89:31: error: invalid use of incomplete type ‘class TSeqCollection’; 89 | if (gROOT->GetListOfFiles()->FindObject(obj)); | ^~; In file included from /home/vpadulan/Programs/rootproject/root/gui/browserv7/src/RWebBrowserImp.cxx:15:; /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:59:7: note: forward declaration of ‘class TSeqCollection’; 59 | class TSeqCollection;; | ^~~~~~~~~~~~~~; ninja: build stopped: subcommand failed.; ```. Not sure if it's the right fix, but I thought it was worth mentioning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8255:153,Release,Release,153,https://root.cern,https://github.com/root-project/root/pull/8255,1,['Release'],['Release']
Deployability,I had apparently overlooked that in 5455bbc3b5210bb73fffd0c6a3ab8833bf1dbfec. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13484:173,update,updated,173,https://root.cern,https://github.com/root-project/root/pull/13484,1,['update'],['updated']
Deployability,"I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below; ```; $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root; ```; I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```; The following tests FAILED:; 	 1 - clingtest-check-cling (Failed); 	 13 - pyunittests-pyroot-dependency-versions (Failed); 	 68 - pyunittests-pyroot-numbadeclare (Not Run); 	 69 - test-import-numba (Failed); 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed); 	282 - test-stressmathcore (Failed); 	307 - test-TFormulaTests (Failed); 	800 - tutorial-pythia-pythiaExample (Failed); 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run); 	1143 - test-import-numba (Failed); 	1358 - roottest-cling-stl-dicts-build (Failed); 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed); 	1753 - roottest-root-io-transient-base-WriteFile (Failed); 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed); 	1799 - roottest-root-meta-countIncludePaths (Failed); 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed); 	1852 - roottest-root-meta",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9436:182,configurat,configuration,182,https://root.cern,https://github.com/root-project/root/issues/9436,2,['configurat'],['configuration']
Deployability,"I have installed [xfitter](https://www.xfitter.org/xFitter/) package using ROOT. Installation was completed successfully ; but when I want to run some examples I encounter this error:. ```; *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f80c2812dba in __GI___wait4 (pid=139255, stat_loc=stat_loc; entry=0x7fff1886c568, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007f80c2812d7b in __GI___waitpid (pid=<optimised out>, stat_loc=stat_loc; entry=0x7fff1886c568, options=options; entry=0) at waitpid.c:38; #2 0x00007f80c27820e7 in do_system (line=<optimised out>) at ../sysdeps/posix/system.c:172; #3 0x00007f817cab0c47 in TUnixSystem::StackTrace() () from /home/mamali/Packages/root_install/lib/libCore.so; #4 0x00007f817caadef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/mamali/Packages/root_install/lib/libCore.so; #5 <signal handler called>; #6 0x00007fff1886f330 in ?? (); #7 0x00005639fcd3b4e6 in init_theory_modules () at init_theory.f:13; #8 0x00005639fcd03ddc in xfitter () at main.f:72; #9 0x00005639fccfb53d in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007fff1886f330 in ?? (); #7 0x00005639fcd3b4e6 in init_theory_modules () at init_theory.f:13; #8 0x00005639fcd03ddc in xfitter () at main.f:72; #9 0x00005639fccfb53d in main (); ====================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9179:7,install,installed,7,https://root.cern,https://github.com/root-project/root/issues/9179,2,"['Install', 'install']","['Installation', 'installed']"
Deployability,I have moved CMSSW to the latest GCC 7.1.1 and to the tip of 6.10 patches branch. These are the fixes I have applied on top of that branch for CMS.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/591:66,patch,patches,66,https://root.cern,https://github.com/root-project/root/pull/591,1,['patch'],['patches']
Deployability,"I have question. Does `roottest` runs `cmake --build . --target cling-test` when the cling interpreter code is changed? From time to time I see, that commits are merged regardless of whether the CI fails.; If I understand Cling's workflow correctly, changes are integrated and tested in ROOT and automatically streamed down to Cling after the merge in ROOT. So, if `roottest` does not run the integrated tests in cling, it is possible that the Cling CI is bypassed, or I'm wrong?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6957:262,integrat,integrated,262,https://root.cern,https://github.com/root-project/root/issues/6957,2,['integrat'],['integrated']
Deployability,"I haven't restored the coefficient caching at this time, however. The new interpolation is put in interpCode=5. Added option to use PiecewiseInterpolation with interpCode=5 which correspondings to FIV InterpCode=4 (confusing, I know!). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13427:332,update,updated,332,https://root.cern,https://github.com/root-project/root/pull/13427,1,['update'],['updated']
Deployability,"I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15973:73,upgrade,upgrade,73,https://root.cern,https://github.com/root-project/root/pull/15973,1,['upgrade'],['upgrade']
Deployability,I installed root via this video [https://www.youtube.com/watch?v=pmfM4Zq6OQU&list=PLLybgCU6QCGWLdDO4ZDaB0kLrO3maeYAe&index=30](https://www.youtube.com/watch?v=pmfM4Zq6OQU&list=PLLybgCU6QCGWLdDO4ZDaB0kLrO3maeYAe&index=30) . To build a starlight ; ![Screenshot 2022-10-23 133107](https://user-images.githubusercontent.com/116489914/197387186-122e8d49-1751-4152-bc5c-c9ce70a8f60a.png); I tried a lot to fix this error ; ![Screenshot 2022-10-22 220723](https://user-images.githubusercontent.com/116489914/197386889-d40c094c-b457-4e2c-a549-caf0d6d39a61.png) . Please help me,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11626:2,install,installed,2,https://root.cern,https://github.com/root-project/root/issues/11626,1,['install'],['installed']
Deployability,"I just looked in the code while want to add support of TGeoTesselated to JSROOT.; Here is first attempt: https://jsroot.gsi.de/dev/examples.htm#tgeo_tess. Found and fixed issues:; * Fix potential memory access problem in new TGeoFacet; * In assign operator one should release memory before allocating new one; * `fIvert` member was not copied in assign operator; * Eliminate copy constructor and assign operator for TGeoTesselated (not used, default is ok). For several TGeo classes like TGeoPolygon, TGeoPcon, TGeoPgon one should declare assign operator and copy constructor as deleted or really implement them. Otherwise if anybody use them, this will produce memory leak / seg. violation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4923:268,release,release,268,https://root.cern,https://github.com/root-project/root/pull/4923,1,['release'],['release']
Deployability,"I may be missing something but I seem to be unable to compile ROOT 6.28/04 with c++14. I use. ```; cmake ../root/root-6.28.04/ -DCMAKE_CXX_VERSION=14; ```. And get the following confirmation at the end of the cmake output. ```; System Linux-3.10.0-1160.88.1.el7.x86_64; Processor 36 core Intel(R) Xeon(R) CPU E5-2695 v4 @ 2.10GHz (x86_64); Build type Release; Compiler GNU 6.3.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined -Wl,--hash-style=""both""; ```; As far as I can tell, gcc6.3.0 should have full c++14 capability. However, eventually I get the following errors:. ```; Consolidate compiler generated dependencies of target Dictgen; Consolidate compiler generated dependencies of target ClingUtils; Consolidate compiler generated dependencies of target MetaCling; [ 78%] Built target ClingUtils; [ 78%] Built target Dictgen; Consolidate compiler generated dependencies of target rootcling_stage1; [ 78%] Built target rootcling_stage1; [ 78%] Built target MetaCling; [ 78%] Generating G__Core.cxx, ../lib/Core.pcm; [ 78%] Linking CXX shared library ../../../lib/libCling.so; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; input_line_1:1:10: note: submodule of top-level module 'std' implicitly imported here; #include <new>; ^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: note: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:351,Release,Release,351,https://root.cern,https://github.com/root-project/root/issues/13453,1,['Release'],['Release']
Deployability,"I may update with more commits later, but feel free to review current changes. Fixes [ROOT-9086](https://sft.its.cern.ch/jira/browse/ROOT-9086).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3764:6,update,update,6,https://root.cern,https://github.com/root-project/root/pull/3764,1,['update'],['update']
Deployability,"I noticed while debugging Minuit, that `MnMachinePrecision`'s constructor is called many times during minimization. Every time it is created, it goes through a loop to computes the machine precision. Since the number is the same every time, this is a waste of CPU cycles. This patch runs the loop only once and caches the result. New instances of MnMachinePrecision use the pre-computed value. The patch has no side effects.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2215:277,patch,patch,277,https://root.cern,https://github.com/root-project/root/pull/2215,2,['patch'],['patch']
Deployability,"I tested this in a private repository, but unfortunately I can only check the final integration after merging...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8654:84,integrat,integration,84,https://root.cern,https://github.com/root-project/root/pull/8654,1,['integrat'],['integration']
Deployability,I think it's useful/user-friendly to have basic installation instructions in-source.; I removed the outdated content and added pointers to root.cern/install/build_from_source and similar. This fixes ROOT-10964 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6152:48,install,installation,48,https://root.cern,https://github.com/root-project/root/pull/6152,2,['install'],"['install', 'installation']"
Deployability,I took some inspiration from the CMSSW `.clang-tidy` configuration file to run some more `clang-tidy` checks and automatically apply its suggestions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13320:53,configurat,configuration,53,https://root.cern,https://github.com/root-project/root/pull/13320,1,['configurat'],['configuration']
Deployability,"I updated the description of the Fibonacci sequence and fixed the datatype in line 38. Int N is an integer, yet the concatenation said %d, which is a double.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7011:2,update,updated,2,https://root.cern,https://github.com/root-project/root/pull/7011,1,['update'],['updated']
Deployability,"I would like to mention the new analysis tutorials in the release notes (they have a great PR value). You could argue that this is not the correct place to do so, I'm not sure about this. What do you think?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5512:58,release,release,58,https://root.cern,https://github.com/root-project/root/pull/5512,1,['release'],['release']
Deployability,I'm not sure what the policy here is with inclusion of these styles and I didn't see another way to include a style in ROOT without patching at least one file. So feel free to decline this PR. If there's a different way to do this (in rootrc or a simple config file in some style directory) I would be happy to hear that,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5550:132,patch,patching,132,https://root.cern,https://github.com/root-project/root/pull/5550,1,['patch'],['patching']
Deployability,"I'm trying to work on this tutorial: https://indico.cern.ch/event/704163/contributions/2936719/attachments/1693833/2726445/Tutorial-PyROOT.pdf, but when I tried to import ROOT initially with my base environment and base ROOT installation, I got a module not found error. So in order to go around that, I redownloaded ROOT via conda and tried to run the myScript.py I wrote but I ended up getting this very large error, saying that the code broke:. he lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so; #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so; #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24; #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24; #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so; #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24; #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6.24; #13 0x00007ff",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:225,install,installation,225,https://root.cern,https://github.com/root-project/root/issues/10676,1,['install'],['installation']
Deployability,"I, _OI) [with bool _IsMove = false; _II = long unsigned int*; _OI = long unsigned int*]’ at /usr/include/c++/14/bits/stl_algobase.h:548:42,; inlined from ‘constexpr _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = long unsigned int*; _OI = long unsigned int*]’ at /usr/include/c++/14/bits/stl_algobase.h:555:31,; inlined from ‘constexpr _OI std::copy(_II, _II, _OI) [with _II = long unsigned int*; _OI = long unsigned int*]’ at /usr/include/c++/14/bits/stl_algobase.h:651:7,; inlined from ‘constexpr std::vector<bool, _Alloc>::iterator std::vector<bool, _Alloc>::_M_copy_aligned(const_iterator, const_iterator, iterator) [with _Alloc = std::allocator<bool>]’ at /usr/include/c++/14/bits/stl_bvector.h:1342:28,; inlined from ‘constexpr void std::vector<bool, _Alloc>::_M_reallocate(size_type) [with _Alloc = std::allocator<bool>]’ at /usr/include/c++/14/bits/vector.tcc:1059:40,; inlined from ‘constexpr void std::vector<bool, _Alloc>::reserve(size_type) [with _Alloc = std::allocator<bool>]’ at /usr/include/c++/14/bits/stl_bvector.h:1130:17,; inlined from ‘ROOT::Internal::RDF::BuildAction<char, unsigned char, int, unsigned int, short int, short unsigned int, double, float, long long int, long long unsigned int, bool, ROOT::Detail::RDF::RLoopManager>(const ROOT::RDF::ColumnNames_t&, const ; std::shared_ptr<SnapshotHelperArgs>&, unsigned int, std::shared_ptr<ROOT::Detail::RDF::RLoopManager>, ActionTags::Snapshot, const RColumnRegister&)::<lambda()>’ at tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:270:20:; /usr/include/c++/14/bits/stl_algobase.h:452:30: warning: ‘void* __builtin_memmove(void*, const void*, long unsigned int)’ forming offset 8 is out of the bounds [0, 8] [-Warray-bounds=]; 452 | __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);; | ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ```. ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16360:3197,Install,Installation,3197,https://root.cern,https://github.com/root-project/root/issues/16360,1,['Install'],['Installation']
Deployability,"ILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default; ```. ### Expected behavior. no libMathMore ==> tutorials disabled for ctest. ### To Reproduce; https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/2577/BUILDTYPE=Release,COMPILER=default,LABEL=performance-cc8,SPEC=default/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8145:1321,Release,Release,1321,https://root.cern,https://github.com/root-project/root/issues/8145,5,['Release'],['Release']
Deployability,"IMPORTANT! It is not yet enabling web canvas as default. 1. By default enable all `TWebCanvas` interactive features. Now zooming, log scale change, pad clicking, tooltip is reflected on C++ back. See `hlHisto[1/2/3/4].C` tutorials; 2. Testing all tutorials in `tutorials/hist/` subfolder. Basic display works for all of them, some interactive features (especially with `TExec`) not yet.; 3. Update JSROOT with correspondent changes plus many other improvements,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11688:391,Update,Update,391,https://root.cern,https://github.com/root-project/root/pull/11688,1,['Update'],['Update']
Deployability,IO: Fix StreamerInfo record write during file update.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846:46,update,update,46,https://root.cern,https://github.com/root-project/root/pull/12846,2,['update'],['update']
Deployability,"Idea to create separate actions list, which will be used only for text-based streaming.; Most actions functions can be reused from normal I/O, ; only several cases should be implemented slightly different. On the long run one could create complimentary actions list for reading data with TBufferXML or TBufferSQL2 and fully isolate text-based and binary I/O. That is in PR:; - creating separate list **fWriteText,** now used only with JSON; - provide new method TStreamerInfo::AddWriteTextAction() to fill actions list; - actions build from the full list of class members (avoid compressed members); - provide specialized actions for kTNamed, kTObject, kSTLp and kStreamLoop; - make actions for kSTLp and kStreamLoop with template parameter isText, potentially can be reused in binary I/O. PR solves several existing problem with JSON:; - TNamed and TObject as direct data members; - correct store of kSTLp members with arrays; - kStreamLoop member with fCounter==0; - kStreamLoop member with fCounter==1; - rudimentary support for TRef; - store dummy TObject instance. With provided code all my test classes working. I can provide patch for roottest. P.S. Most probably, Travis-CI check will be unhappy about source-code formatting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/578:1132,patch,patch,1132,https://root.cern,https://github.com/root-project/root/pull/578,1,['patch'],['patch']
Deployability,"If ""server"" kind of web display is configured,; one still can use ""new TBrowser"". This requires that batch gui factory; allows to create web-based implementation. Update JSROOT, use nullptr in related classes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10783:163,Update,Update,163,https://root.cern,https://github.com/root-project/root/pull/10783,1,['Update'],['Update']
Deployability,"If IMT is enabled, TThreadedObject should allocate as many slots as threads the pool has been set with. This PR will be updated with another default value for fgMaxSlots once PR https://github.com/root-project/root/pull/1018 has been agreed upon and merged.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1019:120,update,updated,120,https://root.cern,https://github.com/root-project/root/pull/1019,1,['update'],['updated']
Deployability,"If ROOT compiled with CEF3 support, new canvas will be created not in the web browser, ; but with CEF methods. ; Also when rootqt5 is compiled, one can run macro and open canvas with Qt windows; See gui/canvaspainter/README for more details. @peremato ; Build procedure should be changed; CEF should be detected/configured when top ROOT cmake is called; Also some resources should be copied or linked from CEF into ROOT installation; ; rootqt5 executable should be compiled when qt5 with required plugins (qt5-webengine) is exists",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/789:420,install,installation,420,https://root.cern,https://github.com/root-project/root/pull/789,1,['install'],['installation']
Deployability,"If `${ARG_OPTIONS}` is used to propagate extra include directories to rootcling and the extra directories contain another ROOT installation, then ROOT headers will come from the external ROOT and break the build. We need to make sure that headers from the current build take precedence over any external installation of ROOT by moving definitions and include directories towards the beginning of the command line for rootcling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2782:127,install,installation,127,https://root.cern,https://github.com/root-project/root/pull/2782,2,['install'],['installation']
Deployability,"If `builtin_gtest` was initially off (since commit 28ddffca94), we first try to look for an installed version of GTest. If not found, this falls back to `builtin_gtest`, but also sets `GTEST_INCLUDE_DIRS` to `GTEST_INCLUDE_DIRS-NOTFOUND`, which is not a valid value to have in `INTERFACE_INCLUDE_DIRECTORIES`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13375:92,install,installed,92,https://root.cern,https://github.com/root-project/root/pull/13375,1,['install'],['installed']
Deployability,"If a class/struct has virtual method it should also contain a virtual; dtor. This is important if one uses allocator (tcmalloc, jemalloc) with; C++14 sized deallocation. It's needed to provide a proper object size; to deallocation function. We found that jemalloc (dev branch) tends to deadlock if wrong object; size is provided to deallocation function. Patch is just as precaution. Signed-off-by: David Abdurachmanov <david.abdurachmanov@gmail.com>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/611:355,Patch,Patch,355,https://root.cern,https://github.com/root-project/root/pull/611,1,['Patch'],['Patch']
Deployability,"If during processing of incoming data TCanvas::Update() invoked,; do not block caller until actual update is done. Otherwise deadlock is; possible",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9703:47,Update,Update,47,https://root.cern,https://github.com/root-project/root/pull/9703,2,"['Update', 'update']","['Update', 'update']"
Deployability,"If during processing of incoming data TCanvas::Update() invoked,; do not block caller until actual update is done. Otherwise deadlock is; possible. Backported from future PR to master",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9702:47,Update,Update,47,https://root.cern,https://github.com/root-project/root/pull/9702,2,"['Update', 'update']","['Update', 'update']"
Deployability,"If external version of `nlohmann/json.hpp` is provided,; always test if json_fwd.hpp is there. If not, one only; can use versions 3.9 .. 3.10, for which forward declaration; match to included into `REveElement.hxx`. After LLVM upgrade one can fully skip usage of `json_fwd.hpp` header",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11268:227,upgrade,upgrade,227,https://root.cern,https://github.com/root-project/root/pull/11268,1,['upgrade'],['upgrade']
Deployability,"If fFormula already allocated, it should be released",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4899:44,release,released,44,https://root.cern,https://github.com/root-project/root/pull/4899,1,['release'],['released']
Deployability,"If libbsd installed in custom location,; custom include path can be provided in LIBBSDINCPATH variable. This PR may fix #14958",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15242:10,install,installed,10,https://root.cern,https://github.com/root-project/root/pull/15242,1,['install'],['installed']
Deployability,"If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch.; ```; c++: error: unrecognized command line option ‘-fcolor-diagnostics’; ninja: build stopped: subcommand failed.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3389:235,patch,patch,235,https://root.cern,https://github.com/root-project/root/pull/3389,1,['patch'],['patch']
Deployability,"If one tries to update a directory inside an existing file, Snapshot complains:; `Error in <TFile::mkdir>: An object with name hi exists already`. This fixes the problem by using the `returnExistingDirectory` option in `mkdir`. First mentioned in the forum [here](https://root-forum.cern.ch/t/snapshot-complains-when-updating-existing-directory/37935). Similar to [PR4649](https://github.com/root-project/root/pull/4649).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4964:16,update,update,16,https://root.cern,https://github.com/root-project/root/pull/4964,1,['update'],['update']
Deployability,"If only the OpenGL headers are installed, but not GLU, the cmake check for OpenGL/GLU succeeds, but compile will fail at some point, because the GLU headers are needed.; This pull request fixes this inconsistency by explicitly checking also for GLU in the cmake script.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/120:31,install,installed,31,https://root.cern,https://github.com/root-project/root/pull/120,1,['install'],['installed']
Deployability,"If subBranchName is already in bNamesReg, then we don't need to try to reinsert it.; This patch shaves off ~10% from the runtime of an exploration of a large test TTree.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11538:90,patch,patch,90,https://root.cern,https://github.com/root-project/root/pull/11538,1,['patch'],['patch']
Deployability,"If the G__X filenames don't match with a module called X, then; CMake can't find the right dependencies and we get race conditions.; This patch fixes all a few more typos that caused those problems. Found by our debug code in RootNewMacros (which is now nearly silent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/769:138,patch,patch,138,https://root.cern,https://github.com/root-project/root/pull/769,1,['patch'],['patch']
Deployability,"If the compiler default is lower than C++11, stick with C++11.; This should fix ROOT-10692. Note that this PR changes the C++ standard we compile certain release binaries with, e.g. Ubuntu 20.04 will (or at least, should) switch from C++11 to C++14 as a consequence of these changes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6388:154,release,release,154,https://root.cern,https://github.com/root-project/root/pull/6388,1,['release'],['release']
Deployability,"If the constructor of the contained object is not run (e.g. because; assembling its arguments triggered an exception), the dtor must not; be run when destructing the cling::Value. Detect this case by imprinting; canary bytes into the contained object bytes: if they have changed,; run the dtor, if not assume that the constructor has failed. This will cause false positives in those cases where the constructor; is not modifying the first object bytes: in these cases, the dtor; is not run even though the ctor is run. That is still better than; the other case (where the dtor crashes because no ctor was run).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4074:212,canary,canary,212,https://root.cern,https://github.com/root-project/root/pull/4074,1,['canary'],['canary']
Deployability,"If the user disables fortran but a fortran compiler is actually; present, then hist/CMakeLists.txt will still try to compile; hbook (which results in a failure). This patch explicitly sets the fortran compiler to not found; in order to prevent this from occurring.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/128:167,patch,patch,167,https://root.cern,https://github.com/root-project/root/pull/128,1,['patch'],['patch']
Deployability,"If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5420:186,patch,patch,186,https://root.cern,https://github.com/root-project/root/pull/5420,2,['patch'],['patch']
Deployability,"If we call `gInterpreter->GenerateDictionary(""std::vector<int>"")` with; missing second parameter (which expects to pass the corresponding include); we crash. This patch enables error reporting and removes the default argument to; tell the user that nullptr is not expected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1724:163,patch,patch,163,https://root.cern,https://github.com/root-project/root/pull/1724,1,['patch'],['patch']
Deployability,"If we don't cache the PyROOT library, include dir and version variables, they will not be found by CMake in the loop over `CACHE_VARIABLES` which sets `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, and therefore `root-config --config` will not show them. This affects master and 6.22. This was reported by:; https://root-forum.cern.ch/t/python-in-root-6-22/39891. Note that `PYTHON_EXECUTABLE` is not cached, since caching it can interfere with the user setting of that same variable, when specifying that only one Python installation should be considered (if we cache it and reconfigure, CMake thinks it is the user who is setting it). This is not a problem, since `PYTHON_EXECUTABLE` was never offered in `root-config --config` in previous ROOT versions (the loop over `CACHE_VARIABLES` in the main `CMakeLists.txt` filters it out). The alternative to this implementation, if we don't want to cache these PyROOT variables, would be to add them to `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, independently of `CACHE_VARIABLES`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5906:523,install,installation,523,https://root.cern,https://github.com/root-project/root/pull/5906,1,['install'],['installation']
Deployability,"If we have dependencies which we expect to build (like in this case); we should use DEPENDENCIES. LIBRARIES is a terrible misnomer and we probably should; fix that. This patch teaches rootcling to build the pcms in order and; particularly, ROOTWebDisplay.pcm before the WebGui6.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3000:170,patch,patch,170,https://root.cern,https://github.com/root-project/root/pull/3000,1,['patch'],['patch']
Deployability,"If we have; ```; root_generate_dictionary(HitClassesRootInterfaces; ${CMAKE_CURRENT_SOURCE_DIR}/demo-geant-integration/HitRootIO.hh; ${CMAKE_CURRENT_SOURCE_DIR}/demo-geant-integration/SensitiveHit.hh; NOINSTALL; MODULE demo-geant-integration; DEPENDENCIES Celeritas::accel ${Geant4_LIBRARIES} Celeritas::corecel ; LINKDEF ""${CMAKE_CURRENT_SOURCE_DIR}/demo-geant-integration/HitClassesLinkDef.h""; ); ```; `root_generate_dictionary` will call (if they are proper target at that point) `get_property(dep_include_dirs TARGET ${dep} PROPERTY INCLUDE_DIRECTORIES)`. However there is 2 problems.; (a) It ignores [INTERFACE_INCLUDE_DIRECTORIES](https://cmake.org/cmake/help/latest/prop_tgt/INTERFACE_INCLUDE_DIRECTORIES.html) and [INTERFACE_SYSTEM_INCLUDE_DIRECTORIES](https://cmake.org/cmake/help/latest/prop_tgt/INTERFACE_SYSTEM_INCLUDE_DIRECTORIES.html); the former is used by `Geant4` (as it should) to publish its installed directories. (b) It fails the properties contains cmake generator expressions that does not expand yet. For example `$<INSTALL_INTERFACE:include>`; it fails badly because it then passed to rootcling a `-I` followed by 'nothing' hence shallowing the next arguments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12263:107,integrat,integration,107,https://root.cern,https://github.com/root-project/root/issues/12263,5,"['install', 'integrat']","['installed', 'integration']"
Deployability,If we include the definition of SMatrix after MathFunctions.h (which; relies on HelperOps.h (to forward declare SMatrix) we cannot see the; default arguments. Patch by Lorenzo Moneta and me!. (cherry picked from commit d4b004c641b1e939250eb17721083a2016172bef),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3127:159,Patch,Patch,159,https://root.cern,https://github.com/root-project/root/pull/3127,1,['Patch'],['Patch']
Deployability,"If we use -fimplicit-module-maps this means that cling will find all files called module.modulemap on the include paths. In certain cases the same modulemap can be present in two locations causing module redefinition errors. This patch teaches cling to work with explicitly specified modulemaps in -fno-implicit-module-maps mode. It moves the generation of the overlay file closer to the CIFactory so that we can reuse the modulemap loading code before the interpreter object was set up. The patch also turns off the implicit module map discovery and explicitly specifies the ROOT-related modulemap files. The modulemap files need to be enumerated in both TCling and rootcling. Rootcling requires -fno-rtti build mode and we cannot use the utilities in TROOT (also because rootcling_stage1 is built before libCore). This requires the extraction of the `GetSysRoot`, `GetIncludeDir` and `GetEtcDir` in the `ROOT::FoundationUtils` which is can be used throughout the entire core component. This fixes ROOT-10354.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4553:230,patch,patch,230,https://root.cern,https://github.com/root-project/root/pull/4553,2,['patch'],['patch']
Deployability,"If widget URL includes sensitive information,; one just put it into local file and start browser with such local HTML file. ; Internally its will redirect to normal http server. This is most easy way to hide secret information from the system.; Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets.; In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time; new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also; from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side.; This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between; client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session; key is not gained by other means. Also re-submitting same packets will not be possible - while packet with; already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client.; But even if connection gained by sniffer - it will not be able use it. To use connection, each packet ; should be signed by ~~md5~~ H",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14136:697,integrat,integrate,697,https://root.cern,https://github.com/root-project/root/pull/14136,1,['integrat'],['integrate']
Deployability,"If you plot a shifted RooHistPdf, it doesn't look good. Probably because it is sampled at the wrong points, the numeric bin integrator doesn't work in this case, or both. This is a problem that comes up relatively often in the ROOT forum, the last time here:; https://root-forum.cern.ch/t/roofit-in-root-6-28-04/55267. By looking for the keyword ""shift"" in the RooFit forum, one can see that this problem also came up in the past already:; https://root-forum.cern.ch/search?expanded=true&q=shift%20%23roofit-and-roostats; For example here:; https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++; void repro(); {; using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);; x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});; // Doesn't work better either...; // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;; RooArgSet pdfs;; RooArgSet yields;. // Fill the templates; for (std::size_t i = 0; i < 2; ++i) {; auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());; pdf.SetParameters(1, 1200 + 100 * i, 50);; pdf.Print();; TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());; h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));; pdfs.addOwned(; *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));; yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));; }. // Construct final model; RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified; model.fitTo(*data, Range(0.0, 5000));.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13030:124,integrat,integrator,124,https://root.cern,https://github.com/root-project/root/issues/13030,1,['integrat'],['integrator']
Deployability,"If you print a default numeric integrator config object, it will tell; you for the RooImproperIntegrator1D:. ```; *** RooImproperIntegrator1D ***; Capabilities: [1-D] [OpenEnded]; Configuration:; (Depends on 'RooIntegrator1D'); ```. However, in almost all of the code branches, it does not use the; `RooIntegrator1D` of the given numeric integrator configuration, but; falls back to the default by not forwarding the configuration to the; created `RooIntegrator1D`. This commit fixes that, copying the correct integrator config to create; a new configuration object with the required summation rule for the; `RooIntegrator1D`. Closes https://github.com/root-project/root/issues/11067.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11074:31,integrat,integrator,31,https://root.cern,https://github.com/root-project/root/pull/11074,7,"['Configurat', 'configurat', 'integrat']","['Configuration', 'configuration', 'integrator']"
Deployability,"Implement proper handling of canvas window size and canvas drawing area size. By default web browser with given window size/position will be started. Depending from context menu,; status line, other layout components drawing area will be reduced to some value and always adjust to that area. With the call `TCanvas::SetCanvasSize(width,height)` one can fix drawing area to exact value, which does not change with web browser resize. One can toggle state either with context menu or by calling ``c1->SetCanvasSize(0,0)`. All browser window position/size changes are reflected in the TCanvas members. Provide JSROOT with new resize logic, also includes support of TLatex in 3D plots",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13268:441,toggle,toggle,441,https://root.cern,https://github.com/root-project/root/pull/13268,1,['toggle'],['toggle']
Deployability,"Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened.; 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15952:433,patch,patch,433,https://root.cern,https://github.com/root-project/root/pull/15952,1,['patch'],['patch']
Deployability,Implemented pythonization to RDF Define.; Define can now directly accept a python callable.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11078:188,update,updated,188,https://root.cern,https://github.com/root-project/root/pull/11078,1,['update'],['updated']
Deployability,Imported RooAbsArgs should have their workspace set to the workspace they are being imported to. Can we please sweep this into 6.30 patches too please.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14759:132,patch,patches,132,https://root.cern,https://github.com/root-project/root/pull/14759,1,['patch'],['patches']
Deployability,Improve RWebWindow/RWebWindowsManager docu; Update JSROOT with recent fixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9094:44,Update,Update,44,https://root.cern,https://github.com/root-project/root/pull/9094,1,['Update'],['Update']
Deployability,Improve configuration of clang-tidy.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/603:8,configurat,configuration,8,https://root.cern,https://github.com/root-project/root/pull/603,1,['configurat'],['configuration']
Deployability,"Improve the error message when you try to build NumPy arrays with types; that the interpreter doesn't know about. Running the reproducer from the JIRA ticket, one now gets this output:; ```txt; TClass::Init:0: RuntimeWarning: no dictionary for class Foo is available; { ""a"", ""b"", ""foo"", ""foo.a"", ""foo.b"" }; Traceback (most recent call last):; File ""/home/rembserj/root-support/jira/ROOT-10930/reproducer.py"", line 13, in <module>; print(df.AsNumpy()); ^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/ROOT/_pythonization/_rdataframe.py"", line 243, in RDataFrameAsNumpy; raise RuntimeError(; RuntimeError: The column named ""foo"" is of type ""Foo"", which is not known to the ROOT interpreter. Please load the corresponding header files or dictionaries.; ```. This was the output before:; ```txt; TClass::Init:0: RuntimeWarning: no dictionary for class Foo is available; { ""a"", ""b"", ""foo"", ""foo.a"", ""foo.b"" }; Traceback (most recent call last):; File ""/home/rembserj/root-support/jira/ROOT-10930/reproducer.py"", line 5, in <module>; print(df.AsNumpy()); ^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/ROOT/_pythonization/_rdataframe.py"", line 236, in RDataFrameAsNumpy; result_ptrs[column] = df.Take[column_type](column); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: Could not find ""Take<Foo>"" (set cppyy.set_debug() for C++ errors):; Failed to instantiate ""Take<Foo>(std::string)""; ```. Closes the following Jira issue:; https://its.cern.ch/jira/browse/ROOT-10930",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16281:501,install,install,501,https://root.cern,https://github.com/root-project/root/pull/16281,2,['install'],['install']
Deployability,"Improved variant of PR #578 . Idea to create separate actions list, which will be used only for text-based streaming.; Most actions functions can be reused from normal I/O,; only several cases should be implemented slightly different. On the long run one could create complimentary actions list for reading data with TBufferXML or TBufferSQL2 and fully isolate text-based and binary I/O. That is in PR:. creating separate list fWriteText, now used only with JSON; provide new method TStreamerInfo::AddWriteTextAction() to fill actions list; actions build from the full list of class members (avoid compressed members); provide specialized actions for kTNamed, kTObject, kSTLp and kStreamLoop; make actions for kSTLp and kStreamLoop with template parameter isText, potentially can be reused in binary I/O. PR solves several existing problem with JSON:. TNamed and TObject as direct data members; correct store of kSTLp members with arrays; kStreamLoop member with fCounter==0; kStreamLoop member with fCounter==1; rudimentary support for TRef; store dummy TObject instance. With provided code all my test classes working. I can provide patch for roottest. P.S. Most probably, Travis-CI check will be unhappy about source-code formatting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/580:1135,patch,patch,1135,https://root.cern,https://github.com/root-project/root/pull/580,1,['patch'],['patch']
Deployability,"Improves the interplay of `RPage`, `RPageAllocator`, `RPagePool`, and `RPageSource/Sink`. - The `RPageAllocator` becomes an abstract interface for creating pages and allocating the page buffer.; - There is currently one concrete implementation, the `RPageAllocatorHeap`; - Pages are movable only and release the page buffer on destruction using the page allocator that created them; - The page pool owns pages and hands out `RPageRef` objects, which are proxies for the use counter (reference counter) of the page; - The `RPageRef` class is movable only and decreases the reference counter of the page in the page pool on destruction; - Remove the `RPageStorage::ReleasePage()` method; - `RPageSource::LoadPage` hands out `RPageRef` objects from their page pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16164:300,release,release,300,https://root.cern,https://github.com/root-project/root/pull/16164,2,"['Release', 'release']","['ReleasePage', 'release']"
Deployability,"In 2003, in a possibly-misguided attempt to make compression faster, the entire contents of the built-in custom compression codec were converted from compilation targets to header files. This code, which is about 90% identical to `zlib`, had continuous additions throughout the years, including the code to invoke non-`zlib` based compression. With this patch, we have:. - `ZDeflate.c`/`ZInflate.c`/`ZTrees.c`/`Bits.c`/`ZIP.h`: Code related to the old compression functions.; - `Bits.h`: headers necessary to actually use the old compression functions.; - `RZip.{cxx,h}`: Modern headers that anything outside this package should use in order to invoke the C-style library functions.; - `Compression.h`: Enums defining the different compression levels. Additionally, we now force external callers to utilize the proper enum for the compression type (`ROOT::ECompressionAlgorithm`) instead of the type-erased `int`. Note that a lot of the resulting code does not follow coding conventions as I attempted to reduce the amount of code-churn related to this commit. `clang-format` checks are expected to fail.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1223:242,continuous,continuous,242,https://root.cern,https://github.com/root-project/root/pull/1223,2,"['continuous', 'patch']","['continuous', 'patch']"
Deployability,"In Fedora 29, with gcc, there is a problem with __builtin_cpu_supports() function. It causes an undefined symbol error during linking, unless you link against -lgcc explicitly. There was already code in the file to protect against this bug in some versions of gcc, but as the problems seems to exist under various gcc build configurations, I change the code to include the fix for every gcc version. See also: https://github.com/root-project/root/issues/6855",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6867:324,configurat,configurations,324,https://root.cern,https://github.com/root-project/root/pull/6867,1,['configurat'],['configurations']
Deployability,"In RPageStorageFile we're currently either writing all pages in a single vector write or, if their total size exceeds `maxKeySize`, we commit one at a time.; With this change we try to commit as many consecutive pages as possible and split the vector write as soon as the next page would exceed `maxKeySize`. If a single page is bigger than `maxKeySize` we take care to write it in the non-vectorized fashion, since splitting a key is only supported through `WriteBlob()`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15974:524,update,updated,524,https://root.cern,https://github.com/root-project/root/pull/15974,1,['update'],['updated']
Deployability,"In TBufferFile::WriteFastArrayString, we had. ```; if (n < 255) {; *this << (UChar_t)n;; } else {; *this << (UChar_t)255;; *this << n;; }; ```. A recent commit changed the type of the n parameter from Int_t to Long64_t. This is effectively an incompatible change in the on-disk format, but only for strings which are at least 255 characters long. Further, ReadFastArrayString is still reading an Int_t, so this version of ROOT cannot read files that it writes. Resolve by changing WriteFastArrayString to explicitly write an Int_t. Also move the bounds check on the length to before writing anything into the buffer. Fixes a failure seen in the unit tests of the ATLAS EventInfo package in the dev3LCG build. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14887:805,update,updated,805,https://root.cern,https://github.com/root-project/root/pull/14887,1,['update'],['updated']
Deployability,In TGlobalMappedFunction all global functions casted to the type: `void *(*)()`; But in reality all used functions have other signature: `void *&(*)()`; To silent compiler warnings intermediate casting to (void*) was used - this is **dangerous** and in generally **wrong**. Patch introduces functor inside TGlobalMappedFunction.; Within lambda each function called as it is and just return value casted to `void *`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3208:274,Patch,Patch,274,https://root.cern,https://github.com/root-project/root/pull/3208,1,['Patch'],['Patch']
Deployability,"In TXMLEngine in several places pointer was not recalculated after expand of the buffer.; Problem exists since the beginning (approx 2004), but never appeared before.; Most probably while realloc() function in previous glibc versions was always returning same pointer value. Now it is not a case. Reported here: https://root-forum.cern.ch/t/29593. Same patch can be applied to all previous ROOT branches. P.S. cmake /path/to/roottest does not work for me",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2280:353,patch,patch,353,https://root.cern,https://github.com/root-project/root/pull/2280,1,['patch'],['patch']
Deployability,"In a C++20 build (in this case using GCC 13):; ```; $ touch test.cpp; $ ./bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 02 2023, 08:25:11 |; | From heads/master@v6-29-01-1276-g12cf386128 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp++; Info in <TUnixSystem::ACLiC>: creating shared library /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/./test_cpp.so; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; ```. This leads to many test failures because of the additional warning not expected in the reference output. All seems to work fine with C++17 for a compiler that defaults to C++14.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12747:996,configurat,configuration,996,https://root.cern,https://github.com/root-project/root/issues/12747,4,['configurat'],['configuration']
Deployability,"In a binned likelihood fit, it is possible to skip the PDF normalization; when the unnormalized binned PDF can be interpreted directly in terms of; event yields. This is now done by default for models HistFactory models,; which results in great speedups for binned fits with many channels. Some; RooFit users like ATLAS were already using this for a long time, so this; feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,; add the `-disable_binned_fit_optimization` command line argument.; Directly in C++, you can also set the `binnedFitOptimization` to `false`; in the HistFactory configuration as follows:; ```C++; RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});; ```; If your compiler doesn't support aggregate initialization with designators, you; need to create and edit the configuration struct explicitely:; ```C++; RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;; hfCfg.binnedFitOptimization = false;; RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10562:630,configurat,configuration,630,https://root.cern,https://github.com/root-project/root/pull/10562,3,"['Configurat', 'configurat']","['Configuration', 'configuration']"
Deployability,"In a meeting in IT I saw that ~200PB/year are being read from the `eoshome` instance via fuse, and I thought that maybe ROOT at least could try to do something smart and just redirect fuse traffic to XRootD if possible. The patch in this pull request does just that. When I talked to Axel about making this work, we wanted the redirection to not happen when using `file://file.root`, but it created some inconsistencies when using `TFile::Open` vs using `TChain` so the final implementation always attempts to redirect. Below is a demo session of ROOT opening a file on EOS with (a former version of) the patch:; ```sh; $ pwd; /eos/home-a/amadio; $ ls *.root; Run2012BC_DoubleMuParked_Muons.root; $ root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 28 2022, 09:49:15 |; | From heads/redirect-xrootd@v6-09-01-24773-gd85df4c5e9 |; | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-15) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f1 = TFile::Open(""file://Run2012BC_DoubleMuParked_Muons.root"");; root [1] auto f2 = TFile::Open(""Run2012BC_DoubleMuParked_Muons.root"");; root [2] f1->GetName(); (const char *) ""Run2012BC_DoubleMuParked_Muons.root""; root [3] f2->GetName(); (const char *) ""root://eoshome-a.cern.ch//eos/user/a/amadio/Run2012BC_DoubleMuParked_Muons.root""; root [4] .q; $; ```; and with a slightly modified `df102_NanoAODDimuonAnalysis` tutorial to avoid `TChain`:; ```diff; void df102_NanoAODDimuonAnalysis(const char* filename); {; // Enable multi-threading; ROOT::EnableImplicitMT();; ; - // std::cout << ""Using filename: "" << filename << std::endl;; + auto f = TFile::Open(filename);; + auto t = f->Get<TTree>(""Events"");; ; - ROOT::RDataFrame df(""Events"", filename);; + ROOT::RDataFrame df(*t);; ```. I go",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644:224,patch,patch,224,https://root.cern,https://github.com/root-project/root/pull/11644,2,['patch'],['patch']
Deployability,"In a synthetic benchmark that only fills a single histogram for; which no binning was provided (i.e. the case in which; BufferedFillHelper gets used), these are sample runtimes on my; laptop before this patch:. ```; 0 3735; 1 3742; 2 3534; 4 3191; 8 2733; 16 1725; ```. and after:; ```; 0 3552; 1 3876; 2 2466; 4 1696; 8 1202; 16 1038; ```. where over 8 threads hyper-threading kicks in and 0 threads means; no `EnableImplicitMT()` at all.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11089:203,patch,patch,203,https://root.cern,https://github.com/root-project/root/pull/11089,1,['patch'],['patch']
Deployability,"In case TGeoManager is set to work with default ROOT units [cm,deg] and the GDML parser reads entities missing explicit units, it issues now a warning. This is due to the fact that the default unit in this case will not match the unit types defined in the GDML schema [mm,rad]. An automatic fix cannot be done because it would introduce backward incompatibilities. This closes #11781. # This Pull request:; Produces warnings for GDML files with entities missing explicit unit declaration. ## Changes or fixes:; The number of entities missing declaration of units is reported. The warning proposes the alternative fix of using Geant4 units supported by TGeo. . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR addresses #11781",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11801:711,update,updated,711,https://root.cern,https://github.com/root-project/root/pull/11801,1,['update'],['updated']
Deployability,"In case of an objective funciton (FCN) given by the user, like in case of RooMinimizer, we don't clone the FCN before fitting, but we do after fitting or after running Hesse/Minos.; In this way the user can have the correct FCN state information updated during the fit. For example, with this Pull request, the correct number of function call can be returned by `RooMinimizer::evalCounter()`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10650:246,update,updated,246,https://root.cern,https://github.com/root-project/root/pull/10650,1,['update'],['updated']
Deployability,In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235:305,patch,patch,305,https://root.cern,https://github.com/root-project/root/pull/5235,1,['patch'],['patch']
Deployability,In cases where we build ROOT with -Dbuiltin_llvm=Off -Dbuiltin_clang=On and we have installed both llvm and clang in /usr/ clad will pick up the clang headers from there too. This patch gives higher priority to the header files which ROOT is supposed to use. It fixes a very obscure initialization issue due to different versions of the ASTContext.h installed and used by ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2498:84,install,installed,84,https://root.cern,https://github.com/root-project/root/pull/2498,3,"['install', 'patch']","['installed', 'patch']"
Deployability,"In clang a transient file is a header file which is stored in the pch/pcm file. If this file does not exist, clang creates a virtual file of the unzipped stored file. However, if the file exists it compares the size of the file on disk and the size of the transent file. If the two sizes are different it does not complain (as validation is off) but it triggers an assert in when constructing and outdated clang::InputFile. The implementation disallows a overridden or transient file to be out of date. This patch extends the DisableValidation abilities to span not only for timestamps but we avoid checking the file sizes if the file is on the disk. And, instead we just create a virtual file of the file that we already have. This patch should fix a relocation issue for cmssw and some of the reported LCG issues. cc: @oshadura, @davidlange6, @smuzaffar, @emanca, @zygoloid",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4480:508,patch,patch,508,https://root.cern,https://github.com/root-project/root/pull/4480,2,['patch'],['patch']
Deployability,"In clang/lib/Lex/HeaderSearch.cpp HeaderSearch::lookupModule(StringRef ModuleName, StringRef SearchName),;   1. It searches for ModuleName in modulemap directly under the search directory (E.g ""/usr/include"" or ""/home/yuka/build/include"");   2. It searches for ModuleName in modulemap in a subdirectory of the search directory with the same name as the module. If it couldn't find ModuleName in both 1 and 2, it comes to this line;  283     // Load all module maps in the immediate subdirectories of this search;  284     // directory.;  285     loadSubdirectoryModuleMaps(SearchDirs[Idx]);; Which results in iterating over all files in the search path for example ""/usr/include"". For us, we had a problem with CMSSW because Clang started to load our default installed root modulemap in ""usr/include/root/module.modulemap"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2213:759,install,installed,759,https://root.cern,https://github.com/root-project/root/pull/2213,1,['install'],['installed']
Deployability,"In ecd98632, the class version of the `RooAbsArg` class was incremented. As explained in #8791, there are sometimes warnings in the IO of derived classes if their version number is not increased as well. Increasing the class version of RooRealVar indeed fixes this warning that one gets right now when reading old workspaces:. ```; Warning in <TStreamerInfo::BuildCheck>:; The StreamerInfo of class RooRealVar read from file toyws/WS-VHbb-STXS_mu_toy_new.root; has the same version (=8) as the active class but a different checksum.; You should update the version to ClassDef(RooRealVar,9).; Do not try to write objects with the current class definition,; the files will not be readable. Warning in <TStreamerInfo::CompareContent>: The following data member of; the on-file layout version 8 of class 'RooRealVar' differs from; the in-memory layout version 8:; RooAbsBinning _binning; //; vs; unique_ptr<RooAbsBinning,default_delete<RooAbsBinning> > _binning;; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12114:545,update,update,545,https://root.cern,https://github.com/root-project/root/pull/12114,1,['update'],['update']
Deployability,"In https://github.com/root-project/root/pull/11604, many redundancies in the RooMinimizer design became apparent,; and this PR aims to avoid them. The following changes are made:. * The signature of `RooAbsMinimizerFcn::Synchronize()` is changed to not; take a `bool optConst` argument anymore. Ths is because the value of; the argument that was passed by the RooMinimizer instance was always a; member of the `RooAbsMinimizerFcn` anyway. * Change type of `RooMinimizer::Config::verbose` to `bool`, because; `setVerbose()` also takes a `bool` flag. * Give `RooAbsMinimizerFcn` access to the RooMinimizer configuration; such that configuration data does not need to be duplicated. A separate commit in this PR formats the code of the `RooMinimizerFcn`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11695:604,configurat,configuration,604,https://root.cern,https://github.com/root-project/root/pull/11695,2,['configurat'],['configuration']
Deployability,In most error situations preallocated buffer was not released,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4901:53,release,released,53,https://root.cern,https://github.com/root-project/root/pull/4901,1,['release'],['released']
Deployability,In number of cases over the last years we have seen a need to call clang APIs with valid source locations. The interpreter generates code and valid locations can be problematic. This patch allows cling to return a valid source location even when no code was processed. This way we can provide our modules infrastructure proper source locations to activate the module visibility rules on locations which have common predecessor. The common predecessor is essential when we compare entities for diagnostics or reasoning about module visibility. This PR should fix the nightly failures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5056:183,patch,patch,183,https://root.cern,https://github.com/root-project/root/pull/5056,1,['patch'],['patch']
Deployability,"In order to avoid {namespace std} interfering with following include files,; when generating a dictionary file add the {using namespace std;} only after; GenerateNecessaryIncludes method is called. Since many legacy root header files do require this global {using namespace std;}; to complete the tests, old behaviour is kept by default and the global; {using namespace std} can be avoided by adding -noGlobalUsingStd to rootcling invocation. Allow passing ACLiC RootCling flags via .rootrc (Vassil). This is a special patch tailored for v6-20-02",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5510:519,patch,patch,519,https://root.cern,https://github.com/root-project/root/pull/5510,1,['patch'],['patch']
Deployability,"In order to be able to build unit test support also outside of a ROOT; build (e.g. for standalone roottest or for user tests), the unit test; support library needs to be visible outside of ROOT. Therefore, it is; moved to `core/testsupport`, and now installed and exported under the; name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't; found when a new gtest is defined. Fix #9507. ## For reviewers; - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9528:250,install,installed,250,https://root.cern,https://github.com/root-project/root/pull/9528,1,['install'],['installed']
Deployability,In order to fix ROOT-10034 a new Executor class has been created.; The class wraps the TExecutor types of ROOT and create in MT running a TThreadExecutor or a TSequentialExecutor. ; This allows to use exactly same code in all TMVA depending on sequential or MT running. ; In addition now the TMVA::Config can control the MT running. The behaviour is the following: ; - ROOT::IsImplicitMTEnabled() = false TMVA uses TSequentialExecutor (no MT); - ROOT::IsImplicitMTEnabled() = true TMVA uses TThreadExecutor with the number of threads provided in ROOT::EnableImplicitMT; - TMVA::gConfig.EnableMT(nthreads) : run MT using TThreadExecutor with nthreads (if the ROOT thread pool has not been created before) otherwise use existing pool; - TMVA::gConfig.DisableMT() - delete TThreadExecutor if it has been created (i.e. release the thread pool) and use TSequentialExecutor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3585:815,release,release,815,https://root.cern,https://github.com/root-project/root/pull/3585,1,['release'],['release']
Deployability,"In order to:; - make the build system less entangled and more maintainable ; - give a solution to the bug mentioned in https://github.com/root-project/root/pull/4939; we move the search for Python installation in a new script called SearchRootCoreDeps, where also the search for main Root dependencies will happen at some point. The misleading 'python' option, which was basically enabling pyroot, is deprecated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4945:197,install,installation,197,https://root.cern,https://github.com/root-project/root/pull/4945,1,['install'],['installation']
Deployability,"In particular, backport the deprecation of the old `TList` constructor and improvements in the build system for better packaging of the release. Corresponding PR in roottest:; https://github.com/root-project/roottest/pull/1124",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15478:136,release,release,136,https://root.cern,https://github.com/root-project/root/pull/15478,1,['release'],['release']
Deployability,"In preparation for a future removal of Python 2 support, add the `pyroot-python2` cmake build option (OFF by default). Users who really need Python 2 support can still get it, but warn them that it will be removed in a future ROOT release. This leads to . ```; $: cmake -Dpyroot-python2=ON; [...]; CMake Warning at cmake/modules/SearchRootCoreDeps.cmake:153 (message):; Building ROOT with Python 2 support is deprecated. The support for Python 2; will be removed in ROOT version 6.32.; Call Stack (most recent call first):; CMakeLists.txt:169 (include); ```. ```; $: python -c ""import ROOT""; /home/vpadulan/Programs/rootproject/rootbuild/py2-cmake-test-conda-py2/lib/ROOT/__init__.py:36: DeprecationWarning: The support for Python 2 in ROOT is deprecated. It will be removed in ROOT version 6.32.; ""ROOT version 6.32."", category=DeprecationWarning); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13606:231,release,release,231,https://root.cern,https://github.com/root-project/root/pull/13606,1,['release'],['release']
Deployability,"In preparation for the Dask backend, we need to be sure that we always release the GIL while running distributed RDataFrame applications. In this context, it is better to have a single coherent place where all the computation graph nodes are triggered. This PR introduces changes in the `ComputationGraphGenerator` class so that the `ROOT.RDF.RunGraphs` function can be called (with the GIL released beforehand) in order to trigger the computations.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9122:71,release,release,71,https://root.cern,https://github.com/root-project/root/pull/9122,2,['release'],"['release', 'released']"
Deployability,"In preparation for the switch of experimental PyROOT to default in master, this PR updates the cppyy packages to their latest version:; - cppyy-1.6.1 (until [here](https://bitbucket.org/wlav/cppyy/commits/d7802d6e6e74c5359acfaf09443b9a1fc87baf6b)); - CPyCppyy-1.10.1 (until [here](https://bitbucket.org/wlav/cpycppyy/commits/c780f284d0cd0ff81f06007b620797cb18b0e269)) ; - clingwrapper-1.10.7 (until [here](https://bitbucket.org/wlav/cppyy-backend/commits/8200a3709d76b56cf06be89d26a4682a2c9c59cd)). Moreover, the PR also introduces a few fixes and disables one test until the following TCling issue is fixed:; https://sft.its.cern.ch/jira/browse/ROOT-10488",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4957:83,update,updates,83,https://root.cern,https://github.com/root-project/root/pull/4957,1,['update'],['updates']
Deployability,"In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10185:343,patch,patch,343,https://root.cern,https://github.com/root-project/root/pull/10185,1,['patch'],['patch']
Deployability,"In previous allmodules&autoloading patch, we used callback from; DeserializationListener to get Decl and loaded corresponding libraries.; It worked, but the performance was bad because ROOT was loading; excessive libraries. In this patch, we use TCling::LazyFunctionCreatorAutoloadForModule. This; function gets callback when ""mangled_name"" was not found in loaded; libraries thus we have to the load corresponding library and lookup; again. I used unordered_map to store mangled identifier and library pair. I'm; doing an optimization by hashing mangled name and storing library not by; name but by uint8 and hold uint8-name information in another vector.; Also tried std::map but unorderd_map was more performant. There are; better hash table like:; https://probablydance.com/2018/05/28/a-new-fast-hash-table-in-response-to-googles-new-fast-hash-table/; we can try to use them if this part gets crucial. With this patch:; ```; Processing tutorials/hsimple.C...; hsimple : Real Time = 0.04 seconds Cpu Time = 0.03 seconds; (TFile *) 0x562b37a14fe0; Processing /home/yuka/CERN/ROOT/memory.C...; cpu time = 0.362307 seconds; sys time = 0.039741 seconds; res memory = 278.215 Mbytes; vir memory = 448.973 Mbytes; ```. W/o this patch:; ```; Processing tutorials/hsimple.C...; hsimple : Real Time = 0.08 seconds Cpu Time = 0.07 seconds; (TFile *) 0x5563018a1d30; Processing /home/yuka/CERN/ROOT/memory.C...; cpu time = 1.524314 seconds; sys time = 0.157075 seconds; res memory = 546.867 Mbytes; vir memory = 895.184 Mbytes; ```. So it improves time by 4x times and memory by 2x.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2093:35,patch,patch,35,https://root.cern,https://github.com/root-project/root/pull/2093,4,['patch'],['patch']
Deployability,"In several ROOT scripts, I was having to cast to `Long_t` or to create several temporary `TString` objects to account for lack of overloads. This adds all of the missing methods. Since this adds to the API it might need to wait for a major version update.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1510:248,update,update,248,https://root.cern,https://github.com/root-project/root/pull/1510,1,['update'],['update']
Deployability,"In several cases we have to store information in more than one dictionary.; There are two cases: (a) when dictionary becomes too big (windows) and; more importantly (b) when we want to have double vs Double32_t specializations.; This mode is known as MULTIDICT in cmake. The current implementation, generates 2 rdict files when MULTIDICT option; is specified. For example, `libGenVector_rdict.pcm` and; `libGenVector_G__GenVector32_rdict.pcm`. Looking at the call site of; `TCling::LoadPCM` it seems impossible to load the second version of the; dictionary. This patch removes the generation of it as it is unused.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3013:563,patch,patch,563,https://root.cern,https://github.com/root-project/root/pull/3013,1,['patch'],['patch']
Deployability,"In some cases gPad can be set to tmpGuideLinePad, which is deleted any time ShowGuidelines method is called. In that case pointer on this temporary pad should be removed from TContext object. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12773:287,update,updated,287,https://root.cern,https://github.com/root-project/root/pull/12773,1,['update'],['updated']
Deployability,"In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers.; For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found; #include ""TMVA/Volume.""; ^~~~~~~~~~~~~~; Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:168:10: fatal error: 'TMV/Version.h' file not found; #include ""TMV/Version.h""; ^~~~~~~~~~~~~~~; Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found; #include ""TMVA/TreInference/Objectives.hxx""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters; Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:; - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression; - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5993:1549,update,updated,1549,https://root.cern,https://github.com/root-project/root/pull/5993,6,['update'],"['update', 'updated']"
Deployability,In special engines like qt5web or cefweb synchronous update of the canvas may block normal event loop of such engines.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13105:53,update,update,53,https://root.cern,https://github.com/root-project/root/pull/13105,2,['update'],['update']
Deployability,"In tests on an Apple M1 after the upgrade to LLVM 9, this new instruction selection framework emits branches / calls that expect all code to be reachable in +/- 128 MB. This cannot be guaranteed during JIT, which generates code into allocated pages on the heap and could span the entire address space of the process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7419:34,upgrade,upgrade,34,https://root.cern,https://github.com/root-project/root/pull/7419,1,['upgrade'],['upgrade']
Deployability,"In the RooBatchCompute CPU library, all scalar inputs have to be copied; n times into a buffer that is as long as the SIMD registers, to allow; for vectorization in all cases. To avoid frequent memory allocations, this buffer was made a `static`; variable in the original implementation of the batchcompute library,; which of course made it non-threadsafe. This is now hitting us, because RooFit needs to be able to do multiple; fits concurrently. This is a requirement for CMSSW, and a blocker for; ROOT master adoption in CMSSW since the new CPU backend is the default:; https://github.com/cms-sw/cmsdist/pull/9034. This commit fixes the concurrency problem by doing the buffering in the; DataMaps that are used in the `RooFit::Evaluator`. Like this, multiple; computation graphs can be concurrently evaluated. It was tested with the ATLAS benchmarks in `rootbench` that the fitting; performance remains the same. This PR also makes some code style and memory management improvements documented in the commit messages. It also updates the documentation to make clear the new CPU backend is now the default, which was not done in this PR:; https://github.com/root-project/root/pull/14742",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14877:1029,update,updates,1029,https://root.cern,https://github.com/root-project/root/pull/14877,1,['update'],['updates']
Deployability,"In the RooChi2Var and the related `createChi2` functions in RooAbsReal; and RooAbsPdf, the `DataError` was not explained precisely enough. This commit changes the documentation of the RooChi2Var constructor to; exactly explain what is going on, and the the documentation of the; `createChi2` is updated to link to the RooChi2Var documentation to avoid; code duplication. This commit also replaces some LaTeX formulae from titiles in the; documentation because they are not rendered there. Closes #8615.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10914:295,update,updated,295,https://root.cern,https://github.com/root-project/root/pull/10914,1,['update'],['updated']
Deployability,"In the RooChi2Var, there was another case of inconsistency between; constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit; command arguments. However, there were also other constructors used by; the RooFit test statistic implementation details (i.e. in; `RooAbsOptTestStatistic::create`) that when used with default aruments; behave inconsistently with the command arg constructors: the default; error type is different, and errors will be estimated from the pdf and; not from the data. This lead to the confusing situation that when creates a `RooChi2Var`; without any command arguments, the default error mode is suddenly; different. This inconsistency should be removed by having only the; command argument constructors part of the public interface. Making these constructors private should not be a problem. There were; already considered implementaiton details before, and their interface; was already changed anyway to use the configuration structs in 6.26.; Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10566:1009,configurat,configuration,1009,https://root.cern,https://github.com/root-project/root/pull/10566,1,['configurat'],['configuration']
Deployability,"In the RooPoisson integration code, it is hardcoded to return 1.0 if the upper boundary is infinite. But this should only be done if the lower boundary is not greater than zero. Closes #10868.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11697:18,integrat,integration,18,https://root.cern,https://github.com/root-project/root/pull/11697,1,['integrat'],['integration']
Deployability,"In the RooRealIntegral and RooGenProdProj classes, the normalization sets were so far not forwarded to the servers, which resulted in undefined normalization sets for integrated PDFs as reported in #11476. A unit test that covers #11476 and the related JIRA issue ROOT-9436 is also implemented. Closes #11476.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11696:167,integrat,integrated,167,https://root.cern,https://github.com/root-project/root/pull/11696,1,['integrat'],['integrated']
Deployability,"In the RooRealIntegral constructor, there is a code section to figure out if the list of integration variables can be re-expressed in lvalues that are higher in the expression tree. To check this, the clients of the integration variables are followed recursively. This doesn't work if *copies* of the integration variables are passes to the integral, because they have no clients. Therefore, when filling the initial list of leaf servers, they need to be filled with the instances of the integration variables that are in the actual computation graph of the function. Closes #12646.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12699:89,integrat,integration,89,https://root.cern,https://github.com/root-project/root/pull/12699,4,['integrat'],['integration']
Deployability,"In the `RPageStorage` destructor: wait for unterminated tasks, if any, as they may still hold a reference to `this`. This is known to happen, e.g. in `RPageSinkBuf` if `CommitClusterImpl()` is not called after committing some pages via `CommitPageImpl()` and the `RPageSinkBuf` is immediately destructed. This fixes the ntuple_extended:`RNTuple.SmallClusters` test. ## Checklist:; - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12824:417,update,updated,417,https://root.cern,https://github.com/root-project/root/pull/12824,1,['update'],['updated']
Deployability,"In the `RooRealIntegral` constructor, there was a `O(N^2)` operation on; the computation graph, checking the dependency of the top-level function; on each other node. This is very expensive in the numer of RooAbsArgs N; is large. Instead of calling `dependsOnValue` for each leaf node, which is; very expensive because it's a recursive function, the value server; leaves are all put in a RooArgSet before the leaf iteration to check; quickly if a leaf is also a value server. This change speeds up the `createNLL` step of large models like the; ATLAS Higgs combination by at least a factor of two or three. In the same PR, I also bring a little other commit, where the ownership of the `cloneSet` in `cloneTree` is released before removing the top node element, in order to avoid ownership ambiguities.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10959:715,release,released,715,https://root.cern,https://github.com/root-project/root/pull/10959,1,['release'],['released']
Deployability,"In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:; ```C++; void repro(); {; RooWorkspace w;; w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");; w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");; w.factory(""Uniform::prior_b(b)"");; w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");; RooRealVar& b = *w.var(""b"");; RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {; x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;; }; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11814:453,integrat,integrator,453,https://root.cern,https://github.com/root-project/root/issues/11814,5,['integrat'],['integrator']
Deployability,"In the current implementation of `RooDataSet::reduceEng`, the dataset; itself was queried to get the weight variable used in the reduced; dataset. This didn't work with the `RooCompositeDataStore`, because a; dataset with this data store doesn't have a weight variable, as these; are encapsulated in the components of the composite store. Hence,; reducing a weighted dataset with a RooCompositeDataStore yields an; unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic; for the RooCompositeDataStore: the components are now reduced; individually, instead of naively creating a RooCompositeDataStore from a; RooVectorDataStore/RooTreeDataStore. To avoid further code branches in; RooDataSet, a new virtual function `RooAbsDataStore::reduce` is; introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10397:831,update,update,831,https://root.cern,https://github.com/root-project/root/pull/10397,1,['update'],['update']
Deployability,"In the example below, thread #11 is waiting on the ‘AppKit lock’ while thread #1 is waiting on the ROOT read lock and thread #12 is waiting on the ROOT write lock. In thread #11, the ROOT write lock is taken/held by frame #9, TCanvas::Update, to ‘serialize’ the update to the windowing system. In thread #1, the ‘AppKit lock’ is likely taken/held by a frame in the #16 to #40 range. This commit remove the dead lock by removing the unnecessary use of code needing the ROOT lock within code run under the AppKit lock so that in they case thread #1 no longer need to wait for the ROOT (read) lock. In addition it should be investigated whether the ROOT (write) lock should be taken in thread #1, frame 1 (TMacOSXSystem::ProcessPendingEvents) for the same reason it is taken in TCanvas::Update. thread #11; frame #0: 0x00007fffab109bf2 libsystem_kernel.dylib`__psynch_cvwait + 10; frame #1: 0x00007fffab1f57fa libsystem_pthread.dylib`_pthread_cond_wait + 712; frame #2: 0x00007fff93394e34 AppKit`-[NSViewHierarchyLock lockForReadingWithExceptionHandler:] + 287; frame #3: 0x00007fff934948ae AppKit`-[NSWindow _copyAcquiredViewHierarchyLock] + 126; frame #4: 0x00007fff9349442c AppKit`-[NSView lockFocusIfCanDraw] + 159; frame #5: 0x000000011c09063d libGCocoa.so`ROOT::MacOSX::X11::CommandBuffer::Flush(this=0x0000000100dbb080, impl=0x0000000100dbb000) at X11Buffer.mm:550; frame #6: 0x000000011c04e9c4 libGCocoa.so`TGCocoa::Update(this=0x0000000100ad1bc0, mode=1) at TGCocoa.mm:536; frame #7: 0x000000011c04ff3e libGCocoa.so`TGCocoa::UpdateWindow(this=0x0000000100ad1bc0, (null)=1) at TGCocoa.mm:776; frame #8: 0x000000011ad70827 libGpad.so`TCanvas::Flush(this=0x000000012274e740) at TCanvas.cxx:1096; frame #9: 0x000000011ad7830f libGpad.so`TCanvas::Update(this=0x000000012274e740) at TCanvas.cxx:2287; frame #10: 0x0000000100fe4e86 threadsh2_C.so`handle2((null)=0x0000000000000001) at threadsh2.C:105; frame #11: 0x0000000100f55680 libThread.so`TThread::Function(ptr=0x0000000122753b00) at TThread.cxx:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1573:235,Update,Update,235,https://root.cern,https://github.com/root-project/root/pull/1573,3,"['Update', 'update']","['Update', 'update']"
Deployability,"In the future, we want separate computation graphs to share and re-use already; jitted lambdas. Without this patch, however, we would have an ordering; problem or a redefinition problem, because RDF2 might want to re-use/redefine; a lambda that RDF1 is _going to_ declare, but (since we delay all; jitting to right before an RDF's event loop) that might happen too late; for RDF2. With this change, all RDFs can jit all code that has been booked by all; other RDFs, resolving that problem. In addition, making less, ""fatter""; call to the interpreter is a performance optimization in itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5356:109,patch,patch,109,https://root.cern,https://github.com/root-project/root/pull/5356,1,['patch'],['patch']
Deployability,"In the hybrid mode when we use ROOT with modules and third party software without modules we have two name resolution systems: the global module index (GMI) and the rootmaps. In case an identifier is defined in both (eg TMVA::Event and X::Event), the GMI will take priority and load the TMVA module without later allowing the system to look for other candidates. This patch uses the GMI only when no rootmap file has told ROOT that it provides names for the given namespace. This fixes root-project/root#9583",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9592:368,patch,patch,368,https://root.cern,https://github.com/root-project/root/pull/9592,1,['patch'],['patch']
Deployability,"In the implementation of `RooHistPdf::plotSamplingHint`, some of the; returned values can be outside the variable definition range. This might; lead to invalid evaluations when the sampling hints are also used to; evaluate other PDF components of a composite PDF, as reported in https://github.com/root-project/root/issues/11482. This commit suggests an improved algorithm for the sampling hint:; consider only bin boundaries that are strictly between the plot limits; within some epsilon, and for the limits just sample two additional; points left and light that are some epsilon aways from the plot limits. The `stressRooFit_ref.root` reference file needs to be updated with this; change, because the sampling changes the RooPlots that are used as; reference objects. The final commit in this PR avoids code redundancy by calling the implementation of `RooHistPdf::plotSamplingHint` also in the `RooHistFunc`. Closes https://github.com/root-project/root/issues/11482.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11701:664,update,updated,664,https://root.cern,https://github.com/root-project/root/pull/11701,1,['update'],['updated']
Deployability,"In the past, it was possible to build the [roottest suite](https://github.com/root-project/roottest) standalone, just having ROOT sourced in your environment. This possibility is also advertised in the README.md of roottest. After https://github.com/root-project/root/commit/56c6ace5340003a9135d565f4d5fa68be67aa0d5, it is not possible anymore to do that, because the unit tests depend on the `ROOTUnitTestSupport` library which is only available at ROOT compile time. Maybe a possible solution is to install the `ROOTUnitTestSupport` library as part of ROOT? I don't know what's the best solution here, so I'm only opening an issue for now. But I think this need to be fixed before the next ROOT release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9507:501,install,install,501,https://root.cern,https://github.com/root-project/root/issues/9507,2,"['install', 'release']","['install', 'release']"
Deployability,"In the past, the `getNDim` function was called just `NDim`. The funciton; was renamed to match the code convention (lower case for funciton; names), but we have to keep an overload with the old name to not break; existing user code. Here you can see where the old `RooAbsMinimizerFcn::NDim()` function was defined:; https://github.com/root-project/root/blob/v6-24-00-patches/roofit/roofitcore/inc/RooMinimizerFcn.h#L43; (it was in `RooMinimizerFcn` before, but after @egpbos refactoring it can be in `RooAbsMinimizerFcn`). FYI @cburgard",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9332:367,patch,patches,367,https://root.cern,https://github.com/root-project/root/pull/9332,1,['patch'],['patches']
Deployability,"In the previous PR https://github.com/root-project/root/pull/7344, the biggest challenge has been to make `RooAbsOptTestStatistic` aware if batch mode is enabled to skip the cache optimization. The cleanest way of disabling the cache optimization is to do so directly in the `RooAbsOptTestStatistic` constructor so it is skipped. Unfortunately, the constructor of `RooAbsOptTestStatistic` and its base class `RooAbsTestStatistic` has already a very long signature, and it is already challenging to correctly align all parameters correctly with the position they should have. That's why I propose in this PR to use a struct to group all `RooAbsTestStatistic` parameters. This has several advantages:; * the struct can be initialized with tagged initialization, so alignment errors can be easily avoided; * if a new parameter is added (such as the `batchMode` flag in this PR), only the configuration struct declaration struct needs to be changed; * the default values are defined in a central place and not redundantly in all the relevant constructor declarations/`RooAbsTestStatistic::create` overrides. To make the review easier, this PR only includes the configuration refactor and disabling the cache optimization is batch mode is used. The `RunContextTracker`-related commits would follow in a separate PR, but I already tested that everything together does work and the unit test I created for the `RunContextTracker` succeeds. Two open questions are still:; * the `RooNLLVar::_batchEvaluations` flag is now redundant, but I still kept it to not have to change class versions too often. Is this acceptable?; * the new `RooAbsTestStatistic::_batchMode` takes part in the IO, entailing an increment of the class version. I that acceptable? The advantage here is that if one reads back a serialized RooFit workspace, it can remember if batch mode is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7616:885,configurat,configuration,885,https://root.cern,https://github.com/root-project/root/pull/7616,2,['configurat'],['configuration']
Deployability,"In the v6.26 development cycle cycle, some RooFit helper header files; whose names don't start with the `Roo` prefix sneaked into the; RooFitCore library. These headers have the overly generic names; `Floats.h` and `UniqueId.h`, which calls for trouble in environments; where the ROOT headers are directly installed in the main system include; path (most Linux distributions). To prevent any possible issues, this commit proposes and follows new; conventions for RooFit headers:. * Installed RooFit headers must start with `Roo*` or must be located; in a subdirectory starting with `Roo*` (e.g. RooFit or RooStats).; * Similarly, if the class name doesn't start with Roo, it has to go in; a `Roo*` namespace (usually `RooFit`); * Free functions always need to go in this namespace; * For implmentation details that we can't avoid installing, we can use; a `Roo*::Detail` namespace like we have with `ROOT::Detail` (same; with `Experimental`). We should also keep in mind what we established in PR #9078:. * `inc/` is for installed headers; * `res/` is for headers that are only used at compile time of other; ROOT components; * Headers only used within a library go to `src/`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9394:306,install,installed,306,https://root.cern,https://github.com/root-project/root/pull/9394,4,"['Install', 'install']","['Installed', 'installed', 'installing']"
Deployability,"In writing a paper I noticed that although I promised that users can exchange the integrator of RooBinSamplingPdf,; they cannot. They can only alter options of the existing integrator.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6921:82,integrat,integrator,82,https://root.cern,https://github.com/root-project/root/pull/6921,2,['integrat'],['integrator']
Deployability,Include New Deep Learning Module with support for CNN.; Integrate the development of the 2017 GSOC students.; For the moment this PR does not include the RNN and the DAE,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1826:56,Integrat,Integrate,56,https://root.cern,https://github.com/root-project/root/pull/1826,1,['Integrat'],['Integrate']
Deployability,"Include `RBrowserData` and created `TCanvas` into `gROOT` list of cleanups. In case if any object is deleted, check if it also appears in list; of cached object in RBrowserData. Tries to catch situation when ; closing TFile let objects like histograms disappear. Also special handling of TFile which do not automatically has cleanup bit set and; therefore can be deleted without any notice for RBrowser. Update jsroot",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10673:404,Update,Update,404,https://root.cern,https://github.com/root-project/root/pull/10673,1,['Update'],['Update']
Deployability,Inconsistent behaviour on failed jitting (transaction rollback issue?),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16577:54,rollback,rollback,54,https://root.cern,https://github.com/root-project/root/issues/16577,1,['rollback'],['rollback']
Deployability,"Initial Commit for TMVA SOFIE under TMVA::Experimental::SOFIE. including support for transpose, relu and gemm operators. including cmake configurations for building sofie when protobuf is found. this PR is experimental only and made to accommodate timeline for GSoC selection tests related to TMVA SOFIE",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7544:137,configurat,configurations,137,https://root.cern,https://github.com/root-project/root/pull/7544,1,['configurat'],['configurations']
Deployability,"Initializing RooBatchCompute takes over a second when CUDA is also; available on the system. It is unreasonable to do this everytime the; RooFit library is loaded. For example, the time of small unit tests was; completely dominated by the RooBatchCompute initialization time before; this commit. This change entailed another change in `Buffers.cxx` to avoid static; initialization problems. If possible, I'll still try to backport this to the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9915:443,release,release,443,https://root.cern,https://github.com/root-project/root/pull/9915,1,['release'],['release']
Deployability,"Initially, this was to try out the suggestion [in #7151](https://github.com/root-project/root/issues/7151#issuecomment-1047822177), to enable code like; ```c++; TGraph gr({1, 2, 3}, {1, 2, 3});; ```. This doesn't work, unfortunately, because overload resolution cannot disambiguate between the `TVectorF` and `TVectorD` constructors of TGraph. What this enables, however, is this:; ```c++; TVectorD{1., 2., 3.}; ```; or for the TGraph case:; ```c++; TGraph gr(TVectorD{1., 2., 3.}, {1., 2., 3.});; ```. I think it's a nice shortcut to have. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9968:592,update,updated,592,https://root.cern,https://github.com/root-project/root/pull/9968,1,['update'],['updated']
Deployability,Inspired by this forum post:; https://root-forum.cern.ch/t/install-root-in-my-directory-in-a-share-server/60150/2. We can simply require the needed components to avoid manual checking and emitting `FATAL_ERROR`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16008:59,install,install-root-in-my-directory-in-a-share-server,59,https://root.cern,https://github.com/root-project/root/pull/16008,1,['install'],['install-root-in-my-directory-in-a-share-server']
Deployability,Install GDB pretty printers with correct filename when using soversion,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4024:0,Install,Install,0,https://root.cern,https://github.com/root-project/root/pull/4024,1,['Install'],['Install']
Deployability,Install headers with COMPONENT headers,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6237:0,Install,Install,0,https://root.cern,https://github.com/root-project/root/pull/6237,1,['Install'],['Install']
Deployability,Install liblzma.lib (required by roottest for example),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5638:0,Install,Install,0,https://root.cern,https://github.com/root-project/root/pull/5638,1,['Install'],['Install']
Deployability,Install the global module index.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7338:0,Install,Install,0,https://root.cern,https://github.com/root-project/root/pull/7338,1,['Install'],['Install']
Deployability,"Install the modules, pcms, and rootmap files in the bin directory on …",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3870:0,Install,Install,0,https://root.cern,https://github.com/root-project/root/pull/3870,2,['Install'],['Install']
Deployability,Installation fails with libvectorDict.so: no such file or directory,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7293:0,Install,Installation,0,https://root.cern,https://github.com/root-project/root/issues/7293,1,['Install'],['Installation']
Deployability,Installation of GLEW target (backward compatibility),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5583:0,Install,Installation,0,https://root.cern,https://github.com/root-project/root/pull/5583,1,['Install'],['Installation']
Deployability,Installation without internet access,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8424:0,Install,Installation,0,https://root.cern,https://github.com/root-project/root/issues/8424,1,['Install'],['Installation']
Deployability,Installing missing header MnMatrixfwd.h when building standalone Minuit2. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13522:0,Install,Installing,0,https://root.cern,https://github.com/root-project/root/pull/13522,2,"['Install', 'update']","['Installing', 'updated']"
Deployability,Installing pyROOT required -DPyroot=ON along with -DPYTHON_EXECUTABLE=<path>,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8095:0,Install,Installing,0,https://root.cern,https://github.com/root-project/root/issues/8095,1,['Install'],['Installing']
Deployability,Installing with CMAKE_INSTALL_PYTHONDIR different from CMAKE_INSTALL_LIBDIR leads to incorrect runpath configuration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11431:0,Install,Installing,0,https://root.cern,https://github.com/root-project/root/issues/11431,2,"['Install', 'configurat']","['Installing', 'configuration']"
Deployability,Instead direct call of Paint() call UpdateAsync(); Prevent Paint() when calling TCanvas::SetGrayscale,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13670:36,Update,UpdateAsync,36,https://root.cern,https://github.com/root-project/root/pull/13670,1,['Update'],['UpdateAsync']
Deployability,"Instead of aborting on an `R__ASSERT`, with this patch RNTuple throws a meaningful exception when trying to open a file that was generated in an incompatible, future format. Fixes lazy loading of the model in `RNTupleReader::LoadEntry()` along the way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7739:49,patch,patch,49,https://root.cern,https://github.com/root-project/root/pull/7739,1,['patch'],['patch']
Deployability,"Instead of hard-coding 'lib' as the path to which minuit2 is installed as a standalone library, use the user configurable CMAKE_INSTALL_LIBDIR. As a particularly common example, this allows a user to specify the library installation path to '${_prefix}/lib64' for 64-bit machines from the cmake command line. This is part of upstreaming patches that I use to build packages for root on openSUSE [1]. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). [1] https://build.opensuse.org/package/show/science/root6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14176:61,install,installed,61,https://root.cern,https://github.com/root-project/root/pull/14176,4,"['install', 'patch', 'update']","['installation', 'installed', 'patches', 'updated']"
Deployability,"Instead of throwing when deserializing a field with an unknown structural role, we assign to it structure == ENTupleStructure::kUnknown. ; FieldDescriptors with Unknown structural role will generate RInvalidFields upon calling CreateField(). ; This allows getting the descriptor for a future RNTuple from an old ROOT version. A `fForwardCompatible` option is added to RCreateModelOptions to tell RNTuple to not throw when reconstructing the model for an RNTuple containing fields with an unknown structural role. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16602:564,update,updated,564,https://root.cern,https://github.com/root-project/root/pull/16602,1,['update'],['updated']
Deployability,"Instr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:6764,release,release,6764,https://root.cern,https://github.com/root-project/root/pull/12523,1,['release'],['release']
Deployability,Integrate Bitshuffle pre-conditioner for LZ4,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6221:0,Integrat,Integrate,0,https://root.cern,https://github.com/root-project/root/pull/6221,1,['Integrat'],['Integrate']
Deployability,Integrate [Bitshuffle pre-conditioner](https://github.com/kiyo-masui/bitshuffle) to LZ4 compression algorithm.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6221:0,Integrat,Integrate,0,https://root.cern,https://github.com/root-project/root/pull/6221,1,['Integrat'],['Integrate']
Deployability,Integrate clad,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1563:0,Integrat,Integrate,0,https://root.cern,https://github.com/root-project/root/pull/1563,1,['Integrat'],['Integrate']
Deployability,"Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,; which one can check with this code:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};; xint->Print();; ```. The integral of x from -5 to 5 should be zero, but the integral object; only returns the current value of the variable. Some users expect the integral to work, and give the same result as; this, which correctly prints out zero:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; RooProduct xId{""xId"", ""xId"", RooArgList{x}};; std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};; xint->Print();; ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27); * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the; same as its integral! As soon as the x value or limits would change, the; results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was; not used anywhere outside artificial unit tests, this commit suggests so; prohibit the integration of RooAbsRealLValues by throwing an exception; if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11162:0,Integrat,Integrating,0,https://root.cern,https://github.com/root-project/root/pull/11162,3,"['Integrat', 'integrat']","['Integrating', 'integration']"
Deployability,Integration of Qt5Web and CEF Web Displays for ROOT 7,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1663:0,Integrat,Integration,0,https://root.cern,https://github.com/root-project/root/pull/1663,1,['Integrat'],['Integration']
Deployability,Integration of all different layers in one Deep Learning module.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/817:0,Integrat,Integration,0,https://root.cern,https://github.com/root-project/root/pull/817,1,['Integrat'],['Integration']
Deployability,Integration of improvements suggested by running clang-tidy on the CrossValidation class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2630:0,Integrat,Integration,0,https://root.cern,https://github.com/root-project/root/pull/2630,1,['Integrat'],['Integration']
Deployability,Integration of rootbench repository into ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1142:0,Integrat,Integration,0,https://root.cern,https://github.com/root-project/root/pull/1142,1,['Integrat'],['Integration']
Deployability,"Introduce TWebCanvas::AddFont which register font by name and filename. Simple demo is:. ```; {; auto indx = TWebCanvas::AddFont(""custom"", ""/home/user/build/root/fonts/monotype.ttf"");; gStyle->SetStatFont(indx);; auto c1 = new TCanvas(""c1"", ""c1"", 800, 600);; auto hpx = new TH1F(""hpx"", ""hpx title"", 100, -5, 5);; hpx->FillRandom(""gaus"", 10000);; hpx->Draw();; }; ```. This will set monotype font for stats box. Can be used with any objects.; Address issue #14065. Also major JSROOT update with providing in-browser support of PDF. ; Now PDF file can be generated directly in JavaScript code - using https://github.com/parallax/jsPDF and https://github.com/yWorks/svg2pdf.js. This also include support of custom fonts. . Many other fixes in JSROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14086:482,update,update,482,https://root.cern,https://github.com/root-project/root/pull/14086,1,['update'],['update']
Deployability,Introduce `TPad::UpdateAsync` method,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13552:17,Update,UpdateAsync,17,https://root.cern,https://github.com/root-project/root/pull/13552,1,['Update'],['UpdateAsync']
Deployability,"Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the; internet connection has to be disabled. This is not allowed when; `fail-on-missing=ON`. Therefore, we can raise the fatal error already in; the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint; to the user on what option to set if he wants to avoid the configuration; code branch that requires the connection check. Also, move all connection check related things in; `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16594:488,configurat,configuration,488,https://root.cern,https://github.com/root-project/root/pull/16594,1,['configurat'],['configuration']
Deployability,"Introducing RTreeViewer, integrated with RBrowser. Activated when `TTree` item clicked in the browser. Main features:; 1. Edit draw expressions, cut, options; 2. Input help branch/leafs names as suggested items; 3. Select dialog with fulllist and search over branch list; 4. Drawing performed into recent canvas created in `RBrowser`. Several changes in RBrowser to let implement special features required by tree viewer - ; like activate canvas widget after tree draw. ![tree_draw0](https://user-images.githubusercontent.com/4936580/195348575-b207f199-35fc-4cd6-8d09-d2894c5dba16.png); ![tree_draw1](https://user-images.githubusercontent.com/4936580/195348581-30ca4aae-9d27-4f42-98e7-dc5b596cbefc.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11548:25,integrat,integrated,25,https://root.cern,https://github.com/root-project/root/pull/11548,1,['integrat'],['integrated']
Deployability,"Introducing a class acting as a heterogenuous container to store; metadata. Since the intended use case would be obtaining metadata from; json files, the nlohmann::json is used as the underlying container.; This required an extra dependency in tree/dataframe. The RDatasetSpec now only has attributes (treenames, fileglobs, friendinfo,; entryrange, groupinfo), getters and only a single ctor taking a RSpecBuilder.; The user is no longer supposed to build a RDatasetSpec directly.; Therefore all corresponding tests are now removed. The RSpecBuilder has exactly the same attributes as RDatasetSpec, and writable; methods only - e.g. AddGroup, WithFriends, WithRange, Build (but no getters). The RLoopManager now has an extra attribute storing the group; information. It could be set only by the ctor taking a RDatasetSpec. The RDatasetSpec was holding the number of fileglobs in each group.; In the RLoopManager ctor (accepting a RDatasetSpec) the globs are; expanded and the group sizes are updated. However, group positioning; remains relevant to the global TChain in RLoopManager and hence; currently accesing groups/metadata requires global TTreeProcessorMT; chain creation. RSampleInfo now holds RMetadata and thus, could be accessed from DefinePerSample. ---; Example of a valid json file to be parsed:; ```json; {; 	""groups"": [{; 			""tag"": ""SIMULATED"",; 			""trees"": [""tree"", ""subTree"", ""subTree""],; 			""files"": [""test_dir/specTestFile00*.root"", ""specTestFile1.root"", ""specTestFile2.root""],; 			""metadata"": {; 				""year"": 2040,; 				""lumi"": 3.14,; 				""edeposit"": 19.0,; 				""datatype"": ""MC""; 			}; 		},; 		{; 			""tag"": ""REAL"",; 			""trees"": [""subTreeA""],; 			""files"": [""specTestFile4.root"", ""specTestFile4.root""],; 			""metadata"": {; 				""year"": 2012,; 				""century"": 20,; 				""experiment"": ""CMS""; 			}; 		},; 		{; 			""tag"": ""BLABLA"",; 			""trees"": [""subTreeA""],; 			""files"": [""specTestFile4.root"", ""specTestFile4.root""],; 			""metadata"": {; 				""year"": 2030,; 				""century"": 20,; 				""experiment"":",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11526:992,update,updated,992,https://root.cern,https://github.com/root-project/root/pull/11526,1,['update'],['updated']
Deployability,"Introducing the intermediate class RFloatField<T> that is inherited by RField<float> and RField<double> which exposes the SetHalfPrecision(), SetTruncated() and SetQuantized() methods for both classes. This also adds the previously-missing but advertised `double -> Real16` mapping and the `double -> Real32Trunc` mapping. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16546:374,update,updated,374,https://root.cern,https://github.com/root-project/root/pull/16546,1,['update'],['updated']
Deployability,"IsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #32 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #33 0x00007ffff5606b70 in TClass::LoadClassDefault(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #34 0x00007ffff560ee9c in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patche; s/x86_64-centos7-gcc8-opt/lib/libCore.so; #35 0x00007ffff645805b in ?? (); #36 0x000000000000042e in ?? (); #37 0x00007fffefb8337e in TClingMethodInfo::TClingMethodInfo(TClingMethodInfo const&) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #38 0x00007ffff560f4b0 in ?? (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #39 0x00007fffffff3208 in ?? (); #40 0x00007fffffff3180 in ?? (); #41 0x000000010559b1b0 in ?? (); #42 0x0000000000000000 in ?? (); ```. The ultimate trigger here is what it usually is --- trying to find the TClass; for something for which no dictionary was generated, leading to autoparsing.; I can get rid of the crash in the atlas build by generating dictionaries; for these classes (here, various specialization of; `CondMultChanCollection<LArConditionsSubset<T> >`).; However, i also looked at bit at the root cause of the crash. The summary is that it seems to involve a Transaction object being released; multiple times back to the TransactionPool. And the fact that TransactionPool; is used only in opt builds is why we don't see this crash if libCling; is compiled with debugging. The crash in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7657:8652,patch,patches,8652,https://root.cern,https://github.com/root-project/root/issues/7657,1,['patch'],['patches']
Deployability,It behaves exactly as Chrome; Provided only on Windows; Update release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11563:56,Update,Update,56,https://root.cern,https://github.com/root-project/root/pull/11563,2,"['Update', 'release']","['Update', 'release']"
Deployability,It causes a clash of a macro defined in stdatomic with an identifier in boost.; Fixes https://github.com/root-project/root/issues/6454. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8541:231,update,updated,231,https://root.cern,https://github.com/root-project/root/pull/8541,1,['update'],['updated']
Deployability,"It causes build failures on GCC 12.2.1 / c++17 with. ```; [ 70%] Generating G__Core.cxx, ../lib/Core.pcm; In file included from input_line_7:111:; /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used; using clock_t = std::chrono::system_clock;; ^; /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible; struct system_clock; ^; In module 'std' imported from input_line_1:1:; /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used; _Tp __tmp = _GLIBCXX_MOVE(__a);; ^; /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here; swap(fDate, other.fDate);; ^; /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable; struct time_point; ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12516:1161,update,updated,1161,https://root.cern,https://github.com/root-project/root/pull/12516,1,['update'],['updated']
Deployability,It escaped the after-release purge because it does not use the `R__DEPRECATED` mechanism.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13027:21,release,release,21,https://root.cern,https://github.com/root-project/root/pull/13027,1,['release'],['release']
Deployability,"It fails very often (more than 90% of the time) on fedora{38,39} since the last update of chromium, and now also on olbdw-01.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14771:80,update,update,80,https://root.cern,https://github.com/root-project/root/pull/14771,1,['update'],['update']
Deployability,"It fixes broken builds on Ubuntu 16:; `[ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooProdPdf.cxx.o; /mnt/build/workspace/lcg_ext_rootcov/BUILDTYPE/Release/COMPILER/native/LABEL/ubuntu16/build/projects/ROOT-HEAD/src/ROOT/HEAD/gui/webgui6/src/TWebCanvas.cxx: In member function ‘void TWebCanvas::ShowCmd(const char*, Bool_t)’:; /mnt/build/workspace/lcg_ext_rootcov/BUILDTYPE/Release/COMPILER/native/LABEL/ubuntu16/build/projects/ROOT-HEAD/src/ROOT/HEAD/gui/webgui6/src/TWebCanvas.cxx:516:77: error: ‘Warning’ was not declared in this scope; Warning(""ShowCmd"", ""Send operation not empty when try show %s"", arg); ^; `",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3551:179,Release,Release,179,https://root.cern,https://github.com/root-project/root/pull/3551,2,['Release'],['Release']
Deployability,It is a synchronization of revert commits with branch 6.14 patches.; Next PR will generalize a switch between compression algorithms.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2889:59,patch,patches,59,https://root.cern,https://github.com/root-project/root/pull/2889,1,['patch'],['patches']
Deployability,"It is available less and less often, and we do not actually benefit a lot from printing the distro (stress) or we can get the same info from /etc/os-release (cmake).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14923:149,release,release,149,https://root.cern,https://github.com/root-project/root/pull/14923,1,['release'],['release']
Deployability,"It is available less and less often, and we do not actually; benefit a lot from printing the distro (stress) or we can get; the same info from /etc/os-release (cmake).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11029:151,release,release,151,https://root.cern,https://github.com/root-project/root/pull/11029,1,['release'],['release']
Deployability,"It is broken by design, there is no way that this interface can; be used in a safe way. Just get rid of it.# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12166:202,update,updated,202,https://root.cern,https://github.com/root-project/root/pull/12166,1,['update'],['updated']
Deployability,"It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:; https://root-forum.cern.ch/t/failing-chi2-fit/56309",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13638:226,release,release,226,https://root.cern,https://github.com/root-project/root/pull/13638,1,['release'],['release']
Deployability,"It is container for the all menu items, collected for the TDrawable; Now is temporary object, later all items can be preserved until TDrawable::Execute() is called. Create hierarchy of menu items class:; - base TMenuItem class; - TCheckedMenuItem for items which could be toggled; - TArgsMenuItem for item with several arguments, which should be provided for function call",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/786:272,toggle,toggled,272,https://root.cern,https://github.com/root-project/root/pull/786,1,['toggle'],['toggled']
Deployability,"It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:; In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:; /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required; pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );; ^; In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:; /usr/include/pthread.h:51:3: note: previous declaration is here; PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,; ^; 1 error generated.`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3374:140,Release,Release,140,https://root.cern,https://github.com/root-project/root/pull/3374,4,['Release'],['Release']
Deployability,It is most probable place where new canvases are created or existing are modified. ; Therefore need check for update. Simple workaround for some macros execution,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16439:110,update,update,110,https://root.cern,https://github.com/root-project/root/pull/16439,1,['update'],['update']
Deployability,It is most probable place where new canvases are created or existing are modified. Therefore need to update.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16441:101,update,update,101,https://root.cern,https://github.com/root-project/root/pull/16441,1,['update'],['update']
Deployability,"It is not recommended to link directly to the Python libraries, but instead, use `-undefined dynamic_lookup` (macOS flag). Depending on how Python was built, using dynamic or static links to the libPython, a direct link can cause it to segfault. This uses that method, and was a necessary change for the conda-forge package for Python 3 macOS. See, for example:; https://pybind11.readthedocs.io/en/stable/compiling.html#building-manually. Note: This might be reasonable to do for Linux too, but maybe with the appropriate flags. The current patch is as conservative as possible. Discussion has moved here: <https://sft.its.cern.ch/jira/browse/ROOT-9950>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3396:541,patch,patch,541,https://root.cern,https://github.com/root-project/root/pull/3396,1,['patch'],['patch']
Deployability,"It is now base class for `RLegend`, `RPaveText`, `RHistStatsBox`.; Main functionality - consistent positioning relative to the `RFrame`. ; But also drawing without frame is possible - in that case just default frame position will be used.; Plus interactive moving of `RPave` around. Improve `RLegend` class. Now it correctly drawn and can be interactively moved.; Also one can configure custom attributes disregard of other drawables.; Also special I/O mechanism is used to avoid large data transfer of RLegend::REntry - ; referenced drawable ""masked out"" before streaming. Introduce `RPaveText` class. Update JSROOT code correspondingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5897:603,Update,Update,603,https://root.cern,https://github.com/root-project/root/pull/5897,1,['Update'],['Update']
Deployability,"It is part of the set of 'system' modules which gets created on demand when a dictionary includes intrinsics. Make this action explicit. This way we can invalidate it (from within rootcling) and rebuild it when required. This patch also fixes an issue in cmssw where _Builtin_intrinsics is generated and installed on cvmfs. If we have local ROOT which does not have this module generated, the system picks up the one from cvmfs causing out-of-date errors. cc: @davidlange6, @smuzaffar, @oshadura",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4676:226,patch,patch,226,https://root.cern,https://github.com/root-project/root/pull/4676,2,"['install', 'patch']","['installed', 'patch']"
Deployability,"It looks like `#define -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12 1` is generated due to broken parsing somewhere... Here is the summary of the configuration and the full CMake configuration line:. ```; -- ROOT Configuration . System Linux-5.18.5-gentoo; Processor 16 core AMD Ryzen 9 3950X 16-Core Processor (x86_64); Build type Debug; Install path /usr/lib/root/6.26; Compiler GNU 12.2.1; Compiler flags:; C -march=native -O2 -pipe -g -fno-omit-frame-pointer -Wno-implicit-fallthrough -pipe -Wall -W -pthread ; C++ -march=native -O2 -pipe -g -fno-omit-frame-pointer -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; Linker flags:; Executable -Wl,-O1 -Wl,--as-needed -rdynamic; Module -Wl,-O1 -Wl,--as-needed; Shared -Wl,-O1 -Wl,--as-needed -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 dataframe davix exceptions fftw3 fitsio fortran gdml gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl oracle pgsql pyroot pythia6 pythia8 qt5web roofit webgui root7 shadowpw shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran uring vc vdt x11 xml xrootd; ```. ```; cmake -C /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/gentoo_common_config.cmake -G Unix Makefiles -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_C_COMPILER=gcc-12.2.1 -DCMAKE_CXX_COMPILER=g++-12.2.1 -DCMAKE_CUDA_HOST_COMPILER=g++-12.2.1 -DCMAKE_C_FLAGS=-march=native -O2 -pipe -g -fno-omit-frame-pointer -DCMAKE_CXX_FLAGS=-march=native -O2 -pipe -g -fno-omit-frame-pointer -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=/usr/bin/python3.11 -DCMAKE_INSTALL_PREFIX=/usr/lib/root/6.26 -DCMAKE_INSTALL_MANDIR=/usr/lib/root/6.26/share/man -DCMAKE_INSTALL_LIBDIR=lib -DDEFAULT_SYSROOT= -DCLING_BUILD_PLUGINS=OFF -Dasserts=OFF -Ddev=OFF -Dexceptions=ON -Dfail-on-missing=ON -Dgnuinstall=OFF -Dshared=ON -Dsoversion=ON -D",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:167,configurat,configuration,167,https://root.cern,https://github.com/root-project/root/issues/11381,4,"['Configurat', 'Install', 'configurat']","['Configuration', 'Install', 'configuration']"
Deployability,"It looks these two commits are causing the compilation failure. The problem is in cmake, but it's complicated than it looks. I will fix and send this patch again, but first we really need to fix nightlies compilation failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2577:150,patch,patch,150,https://root.cern,https://github.com/root-project/root/pull/2577,1,['patch'],['patch']
Deployability,"It modifies the interpreter state, thus needs locking. UPDATE:. As suggested by @hahnjo I tried to write a small unit test to see the data race in action. In fact it was pretty easy, and it also highlighted another data race in `TCling::LoadFile`. In the latest commits I take care both of adding the lock to the other method and adding the test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13348:55,UPDATE,UPDATE,55,https://root.cern,https://github.com/root-project/root/pull/13348,1,['UPDATE'],['UPDATE']
Deployability,"It performs asynchronous canvas update. In case of web-based canvas triggers update of the canvas; on the client side, but does not wait that real update is completed.; Avoids blocking of caller thread.; Have to be used if called from other web-based widget to avoid logical; dead-locks. In case of normal canvas just canvas->Update() is performed. Use it in `RFitPanel` and `RBrowser`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13552:32,update,update,32,https://root.cern,https://github.com/root-project/root/pull/13552,4,"['Update', 'update']","['Update', 'update']"
Deployability,"It produces false positives on memcpy ""out of bounds"". ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16386:106,update,updated,106,https://root.cern,https://github.com/root-project/root/pull/16386,1,['update'],['updated']
Deployability,It solves problem I recognize for the first time with ROOT7 webgui.; It was wrong representation for container like: std::vector<UserClass>; Patch for roottest will follow very soon.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/615:141,Patch,Patch,141,https://root.cern,https://github.com/root-project/root/pull/615,1,['Patch'],['Patch']
Deployability,"It turns out that RNTuple data should better not be stored in custom directories because. 1. It is hard to get the TBrowser integration correctly; the TBrowser can only know the special status of the directory when looking at the object, looking at its key is not enough; 2. All the page keys get added to the directory's key list, which is inefficient. Instead, RNTuple will be changed to replicate the TTree approach: an ntuple is represented by a single, small `RNTuple` object, but the actual page data is stored in anonymous keys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4651:124,integrat,integration,124,https://root.cern,https://github.com/root-project/root/pull/4651,1,['integrat'],['integration']
Deployability,It was deprecated (by comment) and emptied in year 2000. This patch removes all uses of it and 'registers' it to the modulemap to avoid our duplication algorithms do not find it as a duplicate.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2500:62,patch,patch,62,https://root.cern,https://github.com/root-project/root/pull/2500,1,['patch'],['patch']
Deployability,"It was effectively dead code since commit 4feecb3d63ab81344d66a54b4085a051c7ac35b2 (""Always assume we have xrootd >= 5.0.0"") last year. Users had to manually specify `-Dnetx=ON` during CMake configuration, which would not build with XRootD >= 5.1.0 that removed the `XrdClient` library.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15244:191,configurat,configuration,191,https://root.cern,https://github.com/root-project/root/pull/15244,1,['configurat'],['configuration']
Deployability,It was using the wrong signature leading to the configuration to be mis-read. Fixes #7754,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7755:48,configurat,configuration,48,https://root.cern,https://github.com/root-project/root/pull/7755,2,['configurat'],['configuration']
Deployability,It will be next major JSROOT release; Many changes (see jsroot log).; Main - upgrade of all used packages and moving to ES6 syntax.; Also trying to cleanup API,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6708:29,release,release,29,https://root.cern,https://github.com/root-project/root/pull/6708,2,"['release', 'upgrade']","['release', 'upgrade']"
Deployability,"It would also help if the NLL in RooFit for binned fits is reformulated such that the normalization integral is only approximated by evaluating at the bin centers. Like this, the average binning effects are cancelling out because they appear both in the numerator and denominator. Only bin-dependent binning effects are remaining then. Besides reducing binning effects, this would improve numerical fit stability because no numeric integration of the PDF function needs to be done in the integral is not known analytically. More detail with the mathematical background can be found on the ROOT forum:; https://root-forum.cern.ch/t/minimized-nll-not-corresponding-to-best-chi2/50120/22",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11951:432,integrat,integration,432,https://root.cern,https://github.com/root-project/root/issues/11951,1,['integrat'],['integration']
Deployability,"It's a problem of old gccs. New compilers consider naming a variable the; same as a function not a shadow. This was fixed in gcc5, although the; release notes of gcc 4.8 claim that it was in 4.8. That's not the case,; as the warning that popped up in the nightlies showed. This commit silences these warnings by renaming the relevant variables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7278:145,release,release,145,https://root.cern,https://github.com/root-project/root/pull/7278,1,['release'],['release']
Deployability,It's not needed anymore since we can now just take the column ids from the field descriptor. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16105:144,update,updated,144,https://root.cern,https://github.com/root-project/root/pull/16105,1,['update'],['updated']
Deployability,"Its Python 3.11 needs the upcoming Spark release, see https://github.com/apache/spark/pull/38987",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12544:41,release,release,41,https://root.cern,https://github.com/root-project/root/pull/12544,1,['release'],['release']
Deployability,"I’ve recently updated my ROOT version to v6.20.06 and my once working code snippet to plot several pdf components on the same canvas broke. No matter if I select the pdf components by object reference or by name, i.e. by:. ```; modelTot.plotOn(frame, RooFit::Components(“ modelBkgTotTrig*”),; FillColor(93), LineColor(93), DrawOption(“F”));; ```. or by:. ```; modelTot.plotOn(frame, RooFit::Components(RooArgSet(expo)),; FillColor(93), LineColor(93), DrawOption(“F”));; ```. I get:. ```; [#1] INFO:Plotting -- RooAbsPdf::plotOn(modelTot0) directly selected PDF components: (modelBkgTotTrig0); [#1] INFO:Plotting -- RooAbsPdf::plotOn(modelTot0) indirectly selected PDF components: (); terminate called after throwing an instance of 'std::regex_error'; what(): Unexpected character in brace expression.; Aborted (core dumped); ```. It looks like they are found but then the regex_error appears.; Is this a known issure or shall I do something different to select the pdfs to plot?. Thanks,; Davide",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7115:14,update,updated,14,https://root.cern,https://github.com/root-project/root/issues/7115,1,['update'],['updated']
Deployability,"JECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh; $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh ; $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx; genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed.; ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```; #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (; this=0x7fffef6df2e8); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257; #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768; #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791; #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (; this=0x7fffffff4430, onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341; #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, ; onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350; #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11259:1889,patch,patches,1889,https://root.cern,https://github.com/root-project/root/issues/11259,2,['patch'],['patches']
Deployability,"JOB_ARTIFACT_UUID',; 'SPARK_LOCAL_DIRS',; 'SPARK_PREFER_IPV6',; 'SPARK_REUSE_WORKER',; 'SPARK_USER',; 'SPARK_YARN_STAGING_DIR',; 'USER',; '_']; ```. And in particular these are the contents of `PATH` inside the worker environment:; ![image](https://github.com/root-project/root/assets/15638895/03cc533c-39a9-41f1-b923-1d8dd1ca8000). A [recent patch](https://github.com/root-project/root/pull/13803) has fixed the `import ROOT` issue:; ![image](https://github.com/root-project/root/assets/15638895/cf8df2f6-3d57-44cc-802e-1b9f65d2f9ac). But anything more than that will fail with:. ![image](https://github.com/root-project/root/assets/15638895/f48698a7-6b29-4f0c-9540-6ee292e8b164). This first issue seems to be fixed by explicitly setting the `ROOT_INCLUDE_PATH` variable to the correct LCG stack include directory on the Spark workers, via the SWAN Spark UI; ![image](https://github.com/root-project/root/assets/15638895/b9526d8c-68b1-426c-acf4-665ffa92ec44). And this is the result:. ![image](https://github.com/root-project/root/assets/15638895/9379d5ad-bd53-4867-9654-6106b6e78ed4). Now a new failure appears with a just slightly more complicated example, which simply opens a TFile with an EOS path; ![image](https://github.com/root-project/root/assets/15638895/fd4fb9c3-c20d-4b0e-9a98-7327c70c6dae). If I add the gcc and binutils directories to `PATH` the file can be opened, specifically I need to set. ```; spark.executorEnv.PATH; /cvmfs/sft.cern.ch/lcg/releases/gcc/11.3.0-ad0f5/x86_64-centos7/bin:/cvmfs/sft.cern.ch/lcg/releases/binutils/2.37-355ed/x86_64-centos7/bin:/usr/bin:/usr/local/bin; ```. ![image](https://github.com/root-project/root/assets/15638895/b49ead64-6044-4e3a-89d5-18e4909dfcd2). ### Reproducer. See the description above. ### ROOT version. ROOT master https://github.com/root-project/root/commit/1ed5b2319a500de0d0e5815c2a17615c134c863d, taken from the LCG nightlies. ### Installation method. LCG stack. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13811:3143,release,releases,3143,https://root.cern,https://github.com/root-project/root/issues/13811,3,"['Install', 'release']","['Installation', 'releases']"
Deployability,JSROOT code for 6.32 release. It is copy of special branch from JSROOT repository: https://github.com/root-project/jsroot/tree/v6-32-00-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15352:21,release,release,21,https://root.cern,https://github.com/root-project/root/pull/15352,2,"['patch', 'release']","['patches', 'release']"
Deployability,JsMVA should be updated to use the same jsroot version as the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12441:16,update,updated,16,https://root.cern,https://github.com/root-project/root/issues/12441,1,['update'],['updated']
Deployability,"Jupyter may be configured to be served on different base url's, so we cannot assume that is accessible in `/`. This is the case, for example, when it's used together with JupyterHub (like SWAN), where the base url is `/user/_username_/`.; This PR fixes the way jsROOT is loaded in order to take that into account. . For that, I've removed `/static/`, which forced the absolute url to the file, and let requireJs apply its own configuration (which takes the base url into account). For Jupyterlab, I also load requireJs with the base url. In case requireJs is not available (maybe it will be possible to install Jupyterlab without Jupyter Notebooks in the future?), it falls back to a cdn to load it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4652:426,configurat,configuration,426,https://root.cern,https://github.com/root-project/root/pull/4652,2,"['configurat', 'install']","['configuration', 'install']"
Deployability,"Just testing for now, please do not merge as there are LLVM patches in the mix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1393:60,patch,patches,60,https://root.cern,https://github.com/root-project/root/pull/1393,1,['patch'],['patches']
Deployability,"Just testing for now, still need to define how CMake options will be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1595:69,update,updated,69,https://root.cern,https://github.com/root-project/root/pull/1595,1,['update'],['updated']
Deployability,"Keras 2.4 version is not a mult-backend version as before, but is just tensorflow.keras, see https://github.com/keras-team/keras/releases/tag/2.4.0. Old keras code will not work then with Keras 2.4 and one needs to swicth to use tensorflow.keras in that case",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6793:129,release,releases,129,https://root.cern,https://github.com/root-project/root/pull/6793,1,['release'],['releases']
Deployability,"Kind)'; 2023-02-02@14:29:38:DEBUG:O2Physics:ROOT:0: /home/eulisse/src/sw/ubuntu1804_x86-64/GCC-Toolchain/v10.2.0-alice2-local1/bin/../lib/gcc/x86_64-unknown-linux-gnu/10.2.0/../../../../x86_64-unknown-linux-gnu/bin/ld: ../lib/libCling.so.6.27.99: undefined reference to `clang::WhileStmt::Create(clang::ASTContext const&, clang::VarDecl*, clang::Expr*, clang::Stmt*, clang::SourceLocation)'; 2023-02-02@14:29:38:DEBUG:O2Physics:ROOT:0: /home/eulisse/src/sw/ubuntu1804_x86-64/GCC-Toolchain/v10.2.0-alice2-local1/bin/../lib/gcc/x86_64-unknown-linux-gnu/10.2.0/../../../../x86_64-unknown-linux-gnu/bin/ld: ../lib/libCling.so.6.27.99: undefined reference to `clang::ASTContext::getConstantArrayType(clang::QualType, llvm::APInt const&, clang::ArrayType::ArraySizeModifier, unsigned int) const'; 2023-02-02@14:29:38:DEBUG:O2Physics:ROOT:0: /home/eulisse/src/sw/ubuntu1804_x86-64/GCC-Toolchain/v10.2.0-alice2-local1/bin/../lib/gcc/x86_64-unknown-linux-gnu/10.2.0/../../../../x86_64-unknown-linux-gnu/bin/ld: ../lib/libCling.so.6.27.99: undefined reference to `clang::CXXFunctionalCastExpr::Create(clang::ASTContext const&, clang::QualType, clang::ExprValueKind, clang::TypeSourceInfo*, clang::CastKind, clang::Expr*, llvm::SmallVector<clang::CXXBaseSpecifier*, 4u> const*, clang::SourceLocation, clang::SourceLocation)'; 2023-02-02@14:29:38:DEBUG:O2Physics:ROOT:0: /home/eulisse/src/sw/ubuntu1804_x86-64/GCC-Toolchain/v10.2.0-alice2-local1/bin/../lib/gcc/x86_64-unknown-linux-gnu/10.2.0/../../../../x86_64-unknown-linux-gnu/bin/ld: ../lib/libCling.so.6.27.99: undefined reference to `clang::CXXMethodDecl::Create(clang::ASTContext&, clang::CXXRecordDecl*, clang::SourceLocation, clang::DeclarationNameInfo const&, clang::QualType, clang::TypeSourceInfo*, clang::StorageClass, bool, clang::ConstexprSpecKind, clang::SourceLocation)'; 2023-02-02@14:29:38:DEBUG:O2Physics:ROOT:0: collect2: error: ld returned 1 exit status; ```. when compiling with (v6-28-00-patches) 5ffba22ef571dea2d6eaf186662e19d5a7789a05.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12209:9101,patch,patches,9101,https://root.cern,https://github.com/root-project/root/issues/12209,1,['patch'],['patches']
Deployability,"LAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1088:24: error: expected parameter declarator; template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT; ^; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:131:75: note: expanded from macro 'atomic_store'; #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST); ^; <built-in>:16:26: note: expanded from here; #define __ATOMIC_SEQ_CST 5; ^; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1088:24: error: expected ')'; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:131:75: note: expanded from macro 'atomic_store'; #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST); ^; <built-in>:16:26: note: expanded from here; #define __ATOMIC_SEQ_CST 5; ^; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1088:24: note: to match this '('; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:131:57: note: expanded from macro 'atomic_store'; #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6454:6318,Install,InstallArea,6318,https://root.cern,https://github.com/root-project/root/issues/6454,1,['Install'],['InstallArea']
Deployability,LHCb requested adding the Hypatia PDF. A function for fast batch evaluations is missing. Also sneaked in a few small bugfixes and documentation updates.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4564:144,update,updates,144,https://root.cern,https://github.com/root-project/root/pull/4564,1,['update'],['updates']
Deployability,"LIBRARY); -- Pythia8 not found. Switching off pythia8 option; -- Looking for FFTW3; -- Found fftw3 includes at /usr/include; -- Found fftw3 library at /usr/lib/libfftw3.so; -- Looking for CFITSIO; -- Could NOT find CFITSIO (missing: CFITSIO_LIBRARY CFITSIO_INCLUDE_DIR); -- CFITSIO not found. You can enable the option 'builtin_cfitsio' to build the library internally'; -- For the time being switching off 'fitsio' option; -- Looking for XROOTD; -- XROOTD not found, enabling 'builtin_xrootd' option; -- Downloading and building XROOTD version 5.4.2; -- Could NOT find GFAL (missing: GFAL_INCLUDE_DIR SRM_IFCE_INCLUDE_DIR GFAL_LIBRARY); -- GFAL library not found. Set variable GFAL_DIR to point to your gfal installation; and the variable SRM_IFCE_DIR to the srm_ifce installation; -- For the time being switching OFF 'gfal' option; -- Could NOT find FTGL (missing: FTGL_INCLUDE_DIR FTGL_LIBRARY); -- ftgl library not found. Set variable FTGL_ROOT_DIR to point to your installation; -- For the time being switching ON 'builtin_ftgl' option; -- Checking for module 'davix>=0.6.4'; -- Package 'davix', required by 'virtual:world', not found; -- Looking for uuid_generate_random in uuid; -- Looking for uuid_generate_random in uuid - found; -- Found libuuid: /usr/include; -- Davix dependencies not found, switching OFF 'davix' option.; -- Looking for TBB; -- Found TBB: /usr (Required is at least version ""2018""); -- Looking for VDT; -- Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""); -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH; -- Switching ON 'builtin_vdt' option; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; -- Looking for BLAS for optional parts of TMVA; -- Looking for sgemm_; -- Looking for sgemm_ - not found; -- Looking for sgemm_; -- Looking for sgemm_ - found; -- Found BLAS: /usr/lib/libblas.so; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB; -- Performing Test ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:7159,install,installation,7159,https://root.cern,https://github.com/root-project/root/issues/10528,1,['install'],['installation']
Deployability,"LLVM had a bug where constructors with the same priority would not be stably sorted. This has been fixed upstream by https://github.com/llvm/llvm-project/pull/95532, but to avoid relying on a backport this commit works around the issue: The idea is that we lower the default priority of concerned constructors to make them sort correctly. ---. As discussed, this provides a bit of magic :magic_wand: to work around the bug if we don't have the backport, for example in the Conda releases. I propose we still leave the backport in our copy of LLVM though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16420:479,release,releases,479,https://root.cern,https://github.com/root-project/root/pull/16420,1,['release'],['releases']
Deployability,"LLVM has dropped it's svn instance, so cpt was unable to retrieve LLVM from svn (and Cling CI was failing). Also, lit is not being installed as an independent package on MacOS when being installed using Python2's pip (used to work earlier). Therefore we decided to drop Python 2 (also Python 2 has reached end of life). @Axel-Naumann This should also solve the sudo issue when running tests, that you mentioned to me around a year ago ;). Linked issue - https://github.com/root-project/cling/issues/385",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7229:131,install,installed,131,https://root.cern,https://github.com/root-project/root/pull/7229,2,['install'],['installed']
Deployability,LZ4 upgrade to latest recommended version (multiple bug fixes),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4429:4,upgrade,upgrade,4,https://root.cern,https://github.com/root-project/root/pull/4429,1,['upgrade'],['upgrade']
Deployability,"L_VEC'; __MATHCALL (function, suffix, args); ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:180:1: note: expanded from here; __cosf; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: error: reference to __device__ function '__nvvm_atom_add_gen_d' in __host__ function; return __nvvm_atom_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: note: '__nvvm_atom_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_d' in __host__ function; return __nvvm_atom_cta_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: note: '__nvvm_atom_cta_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_d' in __host__ function; return __nvvm_atom_sys_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:3697,install,install,3697,https://root.cern,https://github.com/root-project/root/issues/7518,1,['install'],['install']
Deployability,"Last year, with commit 3657e7c, the parameter index calculation was; changed to be on the fly instead of using a look-up map, which is much; faster. However, the implemented formula was not correct for two or three; dimensions, which is fixed by this commit. To make sure that the index computation is correct this time, the new; code was tested in this code snippet with various inputs:. ```C++; void runTest(int nx = 42, int ny = 42, int nz = 42) {; const int nxy = nx * ny;; const int nyz = ny * nz;. for (int i = 0; i < nx; ++i) {; for (int j = 0; j < ny; ++j) {; for (int k = 0; k < nz; ++k) {; const int index = k + j * nz + i * ny * nz;; const int gammaIndex = i + j * nx + k * nx * ny;. const int i2 = index / nyz;; const int tmp = index % nyz;; const int j2 = tmp / nz;; const int k2 = tmp % nz;. const int gammaIndex2 = i2 + j2 * nx + k2 * nxy;. if (gammaIndex2 != gammaIndex) {; std::cout << ""The unraveled indices were not correct!""; << std::endl;; return;; }; }; }; }; }; ```. Needs to be backported to the 6.26 branch to get into the 6.26.06 patch; release. This commit the following problem reported on the forum:; https://root-forum.cern.ch/t/cpycppyy-segfault-on-mac-m1/50822",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10989:1056,patch,patch,1056,https://root.cern,https://github.com/root-project/root/pull/10989,2,"['patch', 'release']","['patch', 'release']"
Deployability,Let configure such property; Better handling of double click in file dialog; Update JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9146:77,Update,Update,77,https://root.cern,https://github.com/root-project/root/pull/9146,1,['Update'],['Update']
Deployability,Let configure web display kind when running `rootbrowse`. More important - run event loop when web-based browser is started.; In contrary to normal `TBrowser` one needs event loop running. Fix web-display configuration problem when `WebGui.Display: something` configured in rootrc file.; In such case always web-batch-mode kind was selected. Addressing [question on forum](https://root-forum.cern.ch/t/is-there-an-option-to-customize-rootbrowse/62066/),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16807:205,configurat,configuration,205,https://root.cern,https://github.com/root-project/root/pull/16807,1,['configurat'],['configuration']
Deployability,Let's see if this new configuration of the test still shows issues on some CI runs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16030:22,configurat,configuration,22,https://root.cern,https://github.com/root-project/root/pull/16030,1,['configurat'],['configuration']
Deployability,"Like this, we are polluting the build and install directories less with unneeded files and it also speeds up the build process a bit if RooFit and/or TMVA are disabled. Their pythonization files don't need to be compiled to `.pyc` files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12042:42,install,install,42,https://root.cern,https://github.com/root-project/root/pull/12042,2,['install'],['install']
Deployability,"LikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #35 0x00007f0603095986 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #36 0x00007f06031781a7 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=; 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436; ===========================================================. Root > .q; ```. ### ROOT version; ```; ❯ which root; /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/bin/root; ```. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 19",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511:16111,release,releases,16111,https://root.cern,https://github.com/root-project/root/issues/15511,1,['release'],['releases']
Deployability,"LikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #35 0x00007f0603095986 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #36 0x00007f06031781a7 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=; 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436; ===========================================================; ```. ### Reproducer. With the `test_env.sh` included in [test_env.zip](https://github.com/root-project/root/files/15310428/test_env.zip) on lxplus.cern.ch:; ```; ❯ hx test_env.sh; -bash: hx: command not found; marcocle in 🌐 lxplus913 in ~/tmp/root-issue; ❯ vim test_env.sh;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511:3371,release,releases,3371,https://root.cern,https://github.com/root-project/root/issues/15511,1,['release'],['releases']
Deployability,"List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 ; - TMVA : optimizer options : #7318; - ChangeLabel: #7294; - Buffer Merger improvements : #7286; - Eve7: The first implementation of log view #7270; - TMVA: Update Keras tutorials using tensorflow.keras #7255; - builtins: Zstd 1.4.8 #7214; - RooFit: warning message for RooAddPdf without norm set: #7129 ; - RooFit: Improve plotting of RooBinSamplingPdf. #7110; - Hist: Fixes and improvements for the TKDE class #7096; - Fix a memory leak in TF1::Copy #7035; - Fix for new version of cudnn version 8 #7003; - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001; - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956; - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902; - TMVA: Implement MethodCategory::GetMulticlassValues() #6886; - Hist: Add THistRange class defining a generic histogram range and its iterator #6795; - TMVA: Support for Keras 2.4 (tf.keras) #6793; - Eve-7: Add example of calorimeter representation of REveDataCollection #6783; - Math: Fix BinData copy constructor #6776; - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724; - Math: Changes in TRandom3::GetSeed #6723; - Minuit2: new Minuit2 logging #6705; - ntuple] Several interface improvements (unique pointer, const) #6655; - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7858:35,release,release,35,https://root.cern,https://github.com/root-project/root/issues/7858,2,"['Update', 'release']","['Update', 'release']"
Deployability,LiveVisualize does not update canvas on Jupyter notebook,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13631:23,update,update,23,https://root.cern,https://github.com/root-project/root/issues/13631,1,['update'],['update']
Deployability,"Locking on a child view while inside the parent's -drawRect:; was always looking horrendously (alas, this is how ROOT text; rendering is implemented in TGTextView et al.). Finally,; with macOS 10.14 released, after all these years of horrors, it; stopped working at all. While it's still quite crappy that; TGTextView tries to render text in its child window - TGViewFrame; - it does not mean literally we physically have to do this. A; little cheat and we render in the correct view instead. This PR fixes ROOT-10052 and ROOT-9976",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3785:199,release,released,199,https://root.cern,https://github.com/root-project/root/pull/3785,1,['release'],['released']
Deployability,"Looking at the code, it was probably the idea at some point in the `RooAbsData` design that the ownership of the variables in the dataset can be shared, i.e. that the outside world can ""claim"" and ""release"" the variables in a RooAbsData. If anything else is still claiming the variables, they will not be deleted by the RooAbsData destructor. That's quite messy. For example, if the RooAbsData is destructed before the external ""claimers"" releases the variables, the claimers suddenly has the responsability to delete the variables themselves. And who of them should do it then? The ownership model is completely unclear. This and other reasons explain probably why the; `RooAbsData::claimVars()` and `RooAbsData::releaseVars()` are not used at all outside the RooAbsData, and this commit suggests to remove these memory-unsafe functions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13179:198,release,release,198,https://root.cern,https://github.com/root-project/root/pull/13179,3,['release'],"['release', 'releaseVars', 'releases']"
Deployability,"Looks like only TGeoCone was ignoring name.; Fixes error described in https://root-forum.cern.ch/t/32493; Patch can be applied to several previous versions: 6.12, 6.14, 6.16",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3340:106,Patch,Patch,106,https://root.cern,https://github.com/root-project/root/pull/3340,1,['Patch'],['Patch']
Deployability,"MBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xxhash builtin_zstd ccache clad dataframe exceptions gdml http imt mlp pyroot roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum uring vdt x11; -- Configuring incomplete, errors occurred!; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CM",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7654:4381,Configurat,Configuration,4381,https://root.cern,https://github.com/root-project/root/issues/7654,1,['Configurat'],['Configuration']
Deployability,"MSSW_13_3_ROOT6_X_2023-08-07-2300/src/Alignment/OfflineValidation/test/inspectData_cfg.py unitTest=True trackCollection=ALCARECOTkAlCosmicsCTF0T; ``` . And for gdb:; ```; Singularity> gdb cmsRun; (gdb) run /cvmfs/cms-ib.cern.ch/week1/el8_amd64_gcc11/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-08-07-2300/src/Alignment/OfflineValidation/test/inspectData_cfg.py unitTest=True trackCollection=ALCARECOTkAlCosmicsCTF0T; ```. A sample stacktrace upon destruction of the `TString`:; ```; Thread 1 (Thread 0x7ffff413fc80 (LWP 3407688) ""cmsRun""):; #0 tcmalloc::SLL_PopRange (end=<synthetic pointer>, start=<synthetic pointer>, N=32, head=0x45a0a0) at src/linked_list.h:88; #1 tcmalloc::SLL_PopRange (end=<synthetic pointer>, start=<synthetic pointer>, N=32, head=0x45a0a0) at src/linked_list.h:79; #2 tcmalloc::ThreadCache::FreeList::PopRange (end=<synthetic pointer>, start=<synthetic pointer>, N=32, this=0x45a0a0) at src/thread_cache.h:238; #3 tcmalloc::ThreadCache::ReleaseToCentralCache (this=this@entry=0x45a040, src=src@entry=0x45a0a0, cl=<optimized out>, N=N@entry=32) at src/thread_cache.cc:206; #4 0x00007ffff57dff2c in tcmalloc::ThreadCache::ListTooLong (this=0x45a040, list=0x45a0a0, cl=<optimized out>) at src/thread_cache.cc:164; #5 0x00007ffff6dc2465 in TString::UnLink (this=0xcbb820) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/base/inc/TString.h:265; --Type <RET> for more, q to quit, c to continue without paging--c; #6 0x00007ffff68a2266 in TString::~TString (this=0xcbb820, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/base/src/TString.cxx:249; #7 0x00007ffff68ac37f in TStyle::~TStyle (this=0xcbb500, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/base/src/TSt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13429:1751,Release,ReleaseToCentralCache,1751,https://root.cern,https://github.com/root-project/root/issues/13429,1,['Release'],['ReleaseToCentralCache']
Deployability,"Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6609:615,configurat,configuration,615,https://root.cern,https://github.com/root-project/root/pull/6609,1,['configurat'],['configuration']
Deployability,"Main (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734; #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15; ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```; 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {; 1210	 assert(type->tp_dictoffset);; 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);; 1212	 if (err) {; 1213	 return err;; 1214	 }; ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx ; ```; 139 if (!Py_TYPE(pyobj)->tp_dictoffset); 140 {; 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);; 142 }; ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```; import ROOT; f = ROOT.TFile(""test.root"",""CREATE""); ; ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different reproducing compiler version. ### Installation method. build from source. ### Operating system. Fedora 38, Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13694:3987,Install,Installation,3987,https://root.cern,https://github.com/root-project/root/issues/13694,1,['Install'],['Installation']
Deployability,Major JSROOT upgrade,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10236:13,upgrade,upgrade,13,https://root.cern,https://github.com/root-project/root/pull/10236,1,['upgrade'],['upgrade']
Deployability,"Major point was finding fix for RBrowser list binding.; While this was done in #16481, now latest openui5 can be applied. Required minimal adjustments in the ui5-related code.; Fix several tiny problems in eve7; Update JSROOT and documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16484:212,Update,Update,212,https://root.cern,https://github.com/root-project/root/pull/16484,1,['Update'],['Update']
Deployability,Make RBatchGenerator more visible for the release,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14001:42,release,release,42,https://root.cern,https://github.com/root-project/root/pull/14001,1,['release'],['release']
Deployability,"Make `FilteringDiagConsumer` also ignore -Wunused-result. Whether or not such diagnostic is filtered depends on `CompilationOptions::IgnorePromptDiags`. In particular, `IgnorePromptDiags` should _only_ be enabled for code parsed via `Interpreter::EvaluateInternal()`. Thus, as of this commit `IgnorePromptDiags` defaults to 0 in `makeDefaultCompilationOpts()`. The observable effect of this change is ignoring `-Wunused-result` for wrapped code, e.g.; ```c++; [[nodiscard]] int f() { return 0; }. // This yields `warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]`; void g() { f(); }. f(); // but this should not; ```. Alternatively, as discussed with @Axel-Naumann, we could insert `#pragma clang diagnositc ...` directives in [`Interpreter::WrapInput()`](https://github.com/root-project/root/blob/master/interpreter/cling/lib/Interpreter/Interpreter.cpp#L1130), but I see that as much less elegant. ## Checklist:; - [X] tested changes locally; - [X] the patch passes cling tests. This PR fixes #11562.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12654:1002,patch,patch,1002,https://root.cern,https://github.com/root-project/root/pull/12654,1,['patch'],['patch']
Deployability,Make a pre-release check of clad. DONT MERGE.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8237:11,release,release,11,https://root.cern,https://github.com/root-project/root/pull/8237,1,['release'],['release']
Deployability,Make configuration fail when dependencies are not found and fail-on-missing=ON,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3975:5,configurat,configuration,5,https://root.cern,https://github.com/root-project/root/pull/3975,1,['configurat'],['configuration']
Deployability,"Make dnn_cuda library static, as it is not installed",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3066:43,install,installed,43,https://root.cern,https://github.com/root-project/root/pull/3066,1,['install'],['installed']
Deployability,Make install improvements,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1643:5,install,install,5,https://root.cern,https://github.com/root-project/root/pull/1643,1,['install'],['install']
Deployability,Make sure the CI build all math packages (even GPL ones) in PR builds and add also tmva-sofie and r interface on node where ; these can be built (where protobuf and r installations exist),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14836:167,install,installations,167,https://root.cern,https://github.com/root-project/root/pull/14836,1,['install'],['installations']
Deployability,Make sure we're using the macOS-native framework version in the OpenGL case. See:; * https://cmake.org/cmake/help/latest/module/FindOpenGL.html#macos-specific; * https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L22. This avoids indirectly picking up a X11 dependency by using some other OpenGL installed on the system.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15435:338,install,installed,338,https://root.cern,https://github.com/root-project/root/pull/15435,1,['install'],['installed']
Deployability,"Many analyses and frameworks offer the possibility of using a semi-structured format to represent both the full dataset (in terms of the files that need to be processed) and some metadata attached to it. Most often, the files are split into multiple groupings, which are usually called ""samples"" or ""datasets"". A few examples of this pattern are:. * [AGC](https://github.com/iris-hep/analysis-grand-challenge/blob/main/analyses/cms-open-data-ttbar/ntuples.json); * [PocketCoffea](https://github.com/PocketCoffea/PocketCoffea/blob/main/datasets/DATA_DoubleMuon_local.json); * [WRemnants](https://github.com/WMass/WRemnants/blob/4068b8622fd54867ae779ee3d79a4d4aa270a4a5/wremnants/datasets/datasetDict_v9.py); * [Bamboo](https://gitlab.cern.ch/swertz/bambooexamples/-/blob/master/samples.yml). This helps a lot in keeping the configuration of the analysis dataset tidy and short, so that it can also be more easily shared to others and compared between different executions. But this also calls for a discussion on providing a standard schema that all frameworks could accept and digest into their own execution workflows. For example, it is quite natural to always include a list of files in each ""sample"". This new standard schema should support a few key features of the definition of a dataset:. * Specify groups of several input files, each with associated metadata; * Decide what term to use instead of ""groups""; * Cover TTree but plan for RNTuple support; * Should support friend trees per group; * Should support entry ranges per group; * No indexed friend trees (at least for now). One possible starting point would be (using ""samples""=""groups""=""datasets""):; ```python; {; ""samples"":{; ""sample_a"":{; ""treenames"": [""Events""],; ""files"": [""fa*.root""],; ""friends"":{; ""treenames"": [""Friend""],; ""files"": [""fr*.root""],; },; ""entry_range"": [0, 1000],; ""metadata"": {...}; },; ""sample_b"":{; ""treenames"": [""treeb_1"", ""treeb_2""],; ""files"": [""fileb_1.root"", ""fileb_2.root""],; ""friends"":{; ""treenames"": [""Frie",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11624:823,configurat,configuration,823,https://root.cern,https://github.com/root-project/root/issues/11624,1,['configurat'],['configuration']
Deployability,Many broken tests after recent Clang update on CentOS 8 Stream,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11601:37,update,update,37,https://root.cern,https://github.com/root-project/root/issues/11601,1,['update'],['update']
Deployability,"Many new test directories have been added using add_subdirectory instead of using ROOT_ADD_TEST_SUBDIRECTORY. This causes problems, since when the directory is added using add_subdirectory the test binaries are treated as normal binaries and get installed when running make install, polluting the build. This pull request changes to using ROOT_ADD_TEST_SUBDIRECTORY where appropriate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1515:246,install,installed,246,https://root.cern,https://github.com/root-project/root/pull/1515,2,['install'],"['install', 'installed']"
Deployability,"Many people pythonized the RooWorkspace themselves by adding a new; attribute `_import` that calls getattr(self, ""import"") under the; hood. However, `_import` is now the reference to the original cppyy; overload, and resetting it with a wrapper around `import` would cause; infinite recursions! We prevent resetting that attribute here, which; is a clearer error to the user than an infinite call stack involving; the internal pythonization code. The ""official"" way of calling `RooWorkspace::import()` in PyROOT is now `RooWorkspace.Import`. Should be backported to the 6.26 release if possible, so that people are not caught by surprise.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9896:575,release,release,575,https://root.cern,https://github.com/root-project/root/pull/9896,1,['release'],['release']
Deployability,"Many users expect to use `Clone()` to copy RooWorkspaces, but so far this resulted in corrupt workspaces because the `Clone()` function was not overridden. This is an important fix that needs to be backported at least to 6.28 and 6.26, better yet every ROOT release used in production.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12638:258,release,release,258,https://root.cern,https://github.com/root-project/root/pull/12638,1,['release'],['release']
Deployability,Matrix patch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2401:7,patch,patch,7,https://root.cern,https://github.com/root-project/root/pull/2401,1,['patch'],['patch']
Deployability,Matrix updates,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2364:7,update,updates,7,https://root.cern,https://github.com/root-project/root/pull/2364,2,['update'],['updates']
Deployability,Merge fixes in TMVA for Deep Learning from master to 6.14 patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2111:58,patch,patches,58,https://root.cern,https://github.com/root-project/root/pull/2111,1,['patch'],['patches']
Deployability,"Merge the `RooIntegrator1D` class with its slight variations: `RooIntegrator2D`, `RooSegmentedIntegrator1D`, and `RooSegmentedIntegrator2D`. To reflect the fact that it can now be used for the n-dimenstional case, it is renamed to `RooRombergIntegrator`. This greatly reduces boilerplate code to implement the different numeric integration methods (more detail in the PR description).; It will also make porting the numerical integration with the Romberg method to the GPU much easier. The changes were validated with the following script:; ```c++; // runNumIntValidation.C. #include <RooFormulaVar.h>; #include <RooNumIntConfig.h>; #include <RooRealVar.h>. void testIntegrationMethod(int ndim, std::string const &label); {; RooRealVar x{""x"", ""x"", 0, 10};; RooRealVar y{""y"", ""y"", 0, 10};. std::string funcName = std::string(""func"") + label;; RooFormulaVar func{funcName.c_str(), ""x*std::sqrt(x) + y*std::sqrt(y) + x*y"", {x, y}};. std::cout << label << "":"" << std::endl;. RooNumIntConfig cfg(*func.getIntegratorConfig());. if (ndim == 2) {; cfg.method2D().setLabel(label.c_str());; }; if (ndim == 1) {; cfg.method1D().setLabel(label.c_str());; }. RooArgSet iset{x};; if (ndim > 1); iset.add(y);; std::unique_ptr<RooAbsReal> integ{func.createIntegral(iset, RooFit::NumIntConfig(cfg))};; double val = integ->getVal();; std::cout << std::setprecision(15) << val << std::endl;. std::cout << std::endl;; }. void runNumIntValidation(); {; RooHelpers::LocalChangeMsgLevel changeMsgLvl(RooFit::WARNING);. std::vector<std::string> methods1d{""RooIntegrator1D"", ""RooSegmentedIntegrator1D""};; std::vector<std::string> methods2d{""RooAdaptiveIntegratorND"", ""RooIntegrator2D"", ""RooSegmentedIntegrator2D""};. for (auto const &label : methods1d) {; testIntegrationMethod(1, label);; }. for (auto const &label : methods2d) {; testIntegrationMethod(2, label);; }; }; ```. The output with this PR is the same as with ROOT master:; ```; RooIntegrator1D:; 488.294986988088. RooSegmentedIntegrator1D:; 488.294680086881. RooAda",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13384:328,integrat,integration,328,https://root.cern,https://github.com/root-project/root/pull/13384,2,['integrat'],['integration']
Deployability,"Method signature used for `DataLoader::PrepareTrainingAndTestSet` triggered the generation of classes ""Signal"" and ""Background"". Since the task was regression this caused confusion further down the processing pipeline. Code changed to use global selection cut instead of implicit signal/background cuts. Also includes additional improvements to variable names and documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2460:209,pipeline,pipeline,209,https://root.cern,https://github.com/root-project/root/pull/2460,1,['pipeline'],['pipeline']
Deployability,Migrate patches to LLVM monorepo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12117:8,patch,patches,8,https://root.cern,https://github.com/root-project/root/pull/12117,1,['patch'],['patches']
Deployability,Minimal installation for basic IO,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6471:8,install,installation,8,https://root.cern,https://github.com/root-project/root/issues/6471,1,['install'],['installation']
Deployability,Minimal set of changes required to enable pip build backends to install ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16669:64,install,install,64,https://root.cern,https://github.com/root-project/root/pull/16669,1,['install'],['install']
Deployability,Minor aesthetic fix: add a missing new-line after `.q` if quitting a ROOT session via the Ctrl+D keybinding (EOF). ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #10135.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10143:166,update,updated,166,https://root.cern,https://github.com/root-project/root/pull/10143,1,['update'],['updated']
Deployability,Minor backports such that the RooFit sources don't diverge between 6.32 patch releases and `master` just yet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15920:72,patch,patch,72,https://root.cern,https://github.com/root-project/root/pull/15920,2,"['patch', 'release']","['patch', 'releases']"
Deployability,Minor updates and fixes for the build system,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4020:6,update,updates,6,https://root.cern,https://github.com/root-project/root/pull/4020,1,['update'],['updates']
Deployability,"Minuit migrad minimization: 1. the setup phase where the initial gradient is calculated and 2. the line search phases. To make the above possible, a few bugs had to be fixed:; - `RooAbsL` classes have `evaluatePartition` which allows you to specify the range of events and components over which to evaluate the likelihood. This had some bugs: the extended term and possible subsidiary components were added for each partition, leading to N duplicates (for N partitions). Commits 3db2e0dd36478813cfb534451f459348e8d90da9 and c2a8bc9df029f65ee575e140825af6c509860538.; - As a result of this fix, which reorders some terms in the sum, the LikelihoodGradientJob test was failing for a specific case due to increased floating point differences. We would like to add back in an option for retaining bit-wise exact same results in the future, but since the minimization still converges to the same value within the desired precision, for now we leave it like this, since the user can still pick the old ways if they prefer their exact old results. Commit b7f7fa7b705e2dfb767187dce3f6a32275f30d9e.; - `LikelihoodJob` had a bug where it didn't reset its `result` sum variable to zero before doing a new sum. Commits 042e1577d8c303d532016537e7467d6e2fbfcd9c and 44197a2a64f77b47587e5ee200d360c4514b8098. Finally, I made a mini optimization in `LikelihoodJob` by using `publish_from_master_to_workers` more efficiently, which reduces communication overhead slightly (and makes the code a bit cleaner). Also in commit 567b7988d56b6c1db6102d857b523fc2da607dbc. Note that although this is a bit of a big PR, the commits are factored out into the above list of changes, so I hope this makes it easy to review. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). Documentation not yet updated, I will check if this is necessary (I didn't think so, because it doesn't actually add much to the user interface, all the classes were already there, they just didn't work before like this).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10966:2089,update,updated,2089,https://root.cern,https://github.com/root-project/root/pull/10966,2,['update'],['updated']
Deployability,Minuit2 CMake Update,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1699:14,Update,Update,14,https://root.cern,https://github.com/root-project/root/pull/1699,1,['Update'],['Update']
Deployability,"Minuit2 uses the Pimpl idiom with a shared_ptr to avoid frequent copies, but the implementation is not good. The full interface of each class is duplicated, which is not necessary and makes the code confusing and difficult to change. This patch simplifies the implementation but keeps the semantics the same. This patch is a precursor of some improvements that I have prepared.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7882:239,patch,patch,239,https://root.cern,https://github.com/root-project/root/pull/7882,2,['patch'],['patch']
Deployability,Minuit2: Install libs to CMAKE_INSTALL_LIBDIR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14176:9,Install,Install,9,https://root.cern,https://github.com/root-project/root/pull/14176,1,['Install'],['Install']
Deployability,Missing `test` installation folder in $ROOTSYS,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13548:15,install,installation,15,https://root.cern,https://github.com/root-project/root/issues/13548,1,['install'],['installation']
Deployability,Missing in Release Notes for 6.24,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7858:11,Release,Release,11,https://root.cern,https://github.com/root-project/root/issues/7858,1,['Release'],['Release']
Deployability,More build system updates,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2722:18,update,updates,18,https://root.cern,https://github.com/root-project/root/pull/2722,1,['update'],['updates']
Deployability,More build system upgrades,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4097:18,upgrade,upgrades,18,https://root.cern,https://github.com/root-project/root/pull/4097,1,['upgrade'],['upgrades']
Deployability,More info: https://github.com/google/googletest/releases/tag/release-1.10.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5228:48,release,releases,48,https://root.cern,https://github.com/root-project/root/pull/5228,2,['release'],"['release-', 'releases']"
Deployability,"Most ROOT developers and users seem to agree that autonomously toggling features at configuration time based on the environment is not good. The feature set that ROOT is built with is then not deterministic. In past cases, this already resulted in accidentally missing test coverage because features were switched off after environment changes. That's why for the CI, we are always building with the `fail-on-missing-option`. However, this is not only a problem in testing, but everytime ROOT is built. That's why this commit suggests to make `fail-on-missing` the default, and warn the users of potential future deprecation of this flag in the release notes. An interesting point is also that the `fail-on-missing` code path in `SearchInstalledSoftware.cmake` is much simpler, which also helps to reduce the margin for error. See also:; https://github.com/root-project/root/issues/14188#issuecomment-1844965943",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14311:84,configurat,configuration,84,https://root.cern,https://github.com/root-project/root/pull/14311,2,"['configurat', 'release']","['configuration', 'release']"
Deployability,"Motivation: we need to make sure that, if PyROOT is used from another process that will keep on living after the Python interpreter dies, PyROOT does not shut down the ROOT interpreter via `TROOT::EndOfProcessCleanups` when running its atexit handler. In that sense, this PR adds a configuration option to tell PyROOT if the teardown needs to be soft, i.e. we do not want to shut down the ROOT interpreter. Instead, in the soft mode, we only want (and need) to clean the objects that are controlled by PyROOT via its `TMemoryRegulator`. @Axel-Naumann @pcanal just one new thing with respect to what we discussed: in the function that does the cleanup of the objects in `TMemoryRegulator`, called `RecursiveRemoveAll` in my commit, we can only delete a C++ object found in the map if the corresponding Python proxy **owns** the C++ object. Otherwise we will have a double delete (if the proxy does not own is because the deletion will happen somewhere else, so our `RecursiveRemoveAll` can't delete too).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4687:282,configurat,configuration,282,https://root.cern,https://github.com/root-project/root/pull/4687,1,['configurat'],['configuration']
Deployability,Move Davix to new builtin mechanism and update OpenSSL to 1.0.2o (latest LTS release).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1845:40,update,update,40,https://root.cern,https://github.com/root-project/root/pull/1845,2,"['release', 'update']","['release', 'update']"
Deployability,Move libpcre to new builtin mechanism and update to version 8.42,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3209:42,update,update,42,https://root.cern,https://github.com/root-project/root/pull/3209,1,['update'],['update']
Deployability,Move old release notes into README/ReleaseNotes/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3202:9,release,release,9,https://root.cern,https://github.com/root-project/root/pull/3202,2,"['Release', 'release']","['ReleaseNotes', 'release']"
Deployability,"Move the fRoofit classes depending on GSL in a new library libRooFitMore. The classes are: . - AdaptiveGauss and GausKronrod 1D integrator from Roofitcore; - Legendre, non-central chi2 and SphArmonic pdf",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4536:128,integrat,integrator,128,https://root.cern,https://github.com/root-project/root/pull/4536,1,['integrat'],['integrator']
Deployability,"Moved from https://github.com/root-project/root/pull/6385 as there are too many bot comments in that PR. cc @vgvassilev. When testing the LLVM 9 PR for conda-forge and had a few issues with external LLVM/Clang/Cling so I temporarily switched to the builtins. This works from the build directory but it then has issues once `make install` is ran. More details are in the comment copied at the end of this issue. I think this is an issue with root's install commands rather than the conda-recipe, but you can reproduce what I'm doing it docker by running:. ```bash; git clone https://github.com/chrisburr/root-feedstock.git; cd root-feedstock; git checkout llvm90-install-error; # Adjust CPU_COUNT as required; CPU_COUNT=192 ./build-locally.py --debug --output-id '*root_base*' linux_64_numpy1.16python3.8.____cpython; # When the container launches, look at the output and run the suggested command; # which will be of the form:; cd xxxxx && source xxxxx/build_env_setup.sh; source $RECIPE_DIR/build_root-base.sh; # Anything with ROOT will now fail, e.g.; root; # Rather than waiting to build again, you can roll back to before; # ""make install"" was ran by running; cd ../..; rm -rf $PWD/*; cp -rp $PWD.bak/* $PWD/; cd -; ```. >The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:; >```log; >$ root -b -q -x -e 1+2; >input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:329,install,install,329,https://root.cern,https://github.com/root-project/root/issues/7055,3,['install'],"['install', 'install-error']"
Deployability,Muhammad Alhroob (using ChatGPT) demonstrated that this can considerably reduce the runtime cost for TRandom3. Marking the class `final` seems a good compromise between performance and backward incompatibility: the compiler will diagnose if people inherit from TRandom3. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/12547.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12964:366,update,updated,366,https://root.cern,https://github.com/root-project/root/pull/12964,1,['update'],['updated']
Deployability,Multiplication' in /opt/root_src/math/physics/src/TLorentzVector.cxx:294; 2: Calling constructor for 'TLorentzVector' in /opt/root_src/math/physics/inc/TLorentzRotation.h:241; 3: Calling default constructor for 'TObject' in /opt/root_src/math/physics/inc/TLorentzVector.h:608; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling 'TVector3::Cross' in /opt/root_src/math/physics/src/TQuaternion.cxx:405; 2: Calling constructor for 'TVector3' in /opt/root_src/math/physics/inc/TVector3.h:336; 3: Calling default constructor for 'TObject' in /opt/root_src/math/physics/inc/TVector3.h:253; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling constructor for 'TVector3' in /opt/root_src/math/physics/src/TRotation.cxx:759; 2: Calling default constructor for 'TObject' in /opt/root_src/math/physics/inc/TVector3.h:253; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Call,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412:44965,Update,UpdateIsOnHeap,44965,https://root.cern,https://github.com/root-project/root/issues/7412,1,['Update'],['UpdateIsOnHeap']
Deployability,Necessary to make cling pickup the VFS from root which fixes all the merging; problems that we have in STL/libc. Original description:. Title: Use the VFS from the CompilerInvocation by default. The CompilerInstance should create its default VFS from its CompilerInvocation. Right now the; user has to manually create the VFS before creating the FileManager even though; `-ivfsoverlay file.yaml` was passed via the CompilerInvocation (which is exactly how we worked; around this issue in `FrontendAction.cpp` so far). This patch uses the invocation's VFS by default and also tests this behavior now from the; point of view of a program that uses the clang API.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/994:523,patch,patch,523,https://root.cern,https://github.com/root-project/root/pull/994,1,['patch'],['patch']
Deployability,Needs to go into the release. * https://github.com/root-project/root/pull/15605; * https://github.com/root-project/root/pull/15602; * https://github.com/root-project/root/pull/15608,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15614:21,release,release,21,https://root.cern,https://github.com/root-project/root/pull/15614,1,['release'],['release']
Deployability,New CI label for nightly does not correctly report cmake configuration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15615:57,configurat,configuration,57,https://root.cern,https://github.com/root-project/root/issues/15615,1,['configurat'],['configuration']
Deployability,New dictionary-related crash in 6.24.00-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7657:40,patch,patches,40,https://root.cern,https://github.com/root-project/root/issues/7657,1,['patch'],['patches']
Deployability,"New member functions of RooFit classes were introduced exclusively to PyROOT for better interoperability between RooFit and Numpy and Pandas:. 1. `RooDataSet.from_numpy`: Import a RooDataSet from a dictionary of numpy arrays (static method); 2. `RooDataSet.to_numpy`: Export a RooDataSet to a dictionary of numpy arrays; 3. `RooDataSet.from_pandas`: Import a RooDataSet from a Pandas dataframe (static method); 4. `RooDataSet.to_pandas`: Export a RooDataSet to a Pandas dataframe; 5. `RooRealVar.bins`: Get bin boundaries for a `RooRealVar` as a NumPy array. - Unit tests were implemented that make closure tests for weighted and unweighted datasets, and also test if the support for `RooAbsCategory` works; - Besides implementing these functions as pythonizations, this PR makes some changes to the `RooVectorDataStore` interface to enable this data import/export functionality; - Some changes were made to the RooFit pythonization infrastructure to support static methods in the Python mirror classes; - A new tutorial was written to showcase these features; - Release notes were added; - Windows tests are disabled for now because they fail for reasons that I don't understand (see draft PR #8784). This is part of the feature set presented at ACAT 2021 and promised for the next ROOT release. The equivalent import/export functions for `RooDataHist` will follow later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9346:1063,Release,Release,1063,https://root.cern,https://github.com/root-project/root/pull/9346,2,"['Release', 'release']","['Release', 'release']"
Deployability,New printValue() integration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/75:17,integrat,integration,17,https://root.cern,https://github.com/root-project/root/pull/75,1,['integrat'],['integration']
Deployability,"New version v2.7.0 of EnricoMi/publish-unit-test-result-action was just released ([change log](https://github.com/EnricoMi/publish-unit-test-result-action/releases/tag/v2.7.0)), it adds test times to case annotations:; https://github.com/EnricoMi/publish-unit-test-result-action/issues/431. Thanks @EnricoMi!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12688:72,release,released,72,https://root.cern,https://github.com/root-project/root/pull/12688,2,['release'],"['released', 'releases']"
Deployability,"Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see; https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date.; This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11752:777,update,updated,777,https://root.cern,https://github.com/root-project/root/pull/11752,1,['update'],['updated']
Deployability,Next iteration of geometry viewer. Following new functions are introduced:; - search of geometry nodes and results display; - sync highlighting of selected volumes in hierarchy browser and in GL drawing; - toggle visibility flags and proper redraw; - fix problems with clipping. Up-to-date demo: https://linev.github.io/geomCMS/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3235:206,toggle,toggle,206,https://root.cern,https://github.com/root-project/root/pull/3235,1,['toggle'],['toggle']
Deployability,Next stable JSROOT release,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1664:19,release,release,19,https://root.cern,https://github.com/root-project/root/pull/1664,1,['release'],['release']
Deployability,Ninja shows dependency issues in our build system; fix those first before switching to Ninja. This reverts commit fcfca4ccdaf97099a180e154c60bc3c621abfafe. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13591:251,update,updated,251,https://root.cern,https://github.com/root-project/root/pull/13591,1,['update'],['updated']
Deployability,"No globbing in html/, do not install tests, fix FindOracle.cmake to not change bindir",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3520:29,install,install,29,https://root.cern,https://github.com/root-project/root/pull/3520,1,['install'],['install']
Deployability,"No response_. ### How to reproduce?. From lxplus9.cern.ch:; ```; ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh; ❯ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/05 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |; | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp""; root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed.; ```. The workaround can be demonstrated with:; ```; ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh; ❯ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/05 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |; | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] #define WORKAROUND; root [1] #include ""custom_meta_enum_test.hpp""; root [2] ; ```. ### ROOT version. v6-28-00-patches@v6-28-04-94-gb7de1efc73. ### How did you install ROOT?. LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using?. Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13019:3273,patch,patches,3273,https://root.cern,https://github.com/root-project/root/issues/13019,3,"['install', 'patch']","['install', 'patches']"
Deployability,"Now Canvas::Update() and Canvas::SaveAs() can be synchronous and asynchronous.; Sync mean method will block calling thread until completed. ; Async returns immediately and let continue script execution. . In both methods one can provide callback functions which invoked once method is completed. ; Makes only sense in async mode. Canvas::Modified() increments version counter, which used to control version delivered to each JS client. ; Canvas::IsModified() return false only if all clients have actual version of the canvas. Canvas::Show() now can be provided with ""where"" parameter, which identifies how canvas should be shown. Parameter can be browser program name or some predefined values: ""cef"", ""qt5"", ""browser"". First steps are done to correctly cleanup connection to closed/crashed clients.; Probably, watchdog timer should be installed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/818:12,Update,Update,12,https://root.cern,https://github.com/root-project/root/pull/818,2,"['Update', 'install']","['Update', 'installed']"
Deployability,Now RCanvas can correctly update/redraw ROOT6 objects - which is main test-case for RBrowser now,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4500:26,update,update,26,https://root.cern,https://github.com/root-project/root/pull/4500,1,['update'],['update']
Deployability,"Now TWebCanvas only able to serve data for the web clients, but not allowed to change data in the TCanvas. This means:; - no new objects; - no context menu; - no range update; - no any attributes updates; - no any command execution. Full-functional implementation, based on TWebCanvas, will be maintained outside ROOT here:; https://github.com/linev/go4/tree/master/webgui6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3744:168,update,update,168,https://root.cern,https://github.com/root-project/root/pull/3744,2,['update'],"['update', 'updates']"
Deployability,"Now TWebCanvas provides method to store JSON files, which are send to the clients.; These files can be used for offline debugging of the JavaScript code.; Plus one could use them for HTML documentation generation, which includes online graphics. Improve data format inside TWebPainting - use much more compact and simple structures. Update JSROOT, including major three.js upgrade",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2900:333,Update,Update,333,https://root.cern,https://github.com/root-project/root/pull/2900,2,"['Update', 'upgrade']","['Update', 'upgrade']"
Deployability,"Now basic openui5 config parameters can be provided via rootrc file:. * WebGui.openui5src: alternative location for openui5 like https://openui5.hana.ondemand.com/; * WebGui.openui5libs: list of pre-loaded ui5 libs like sap.m, sap.ui.layout, sap.ui.unified; * WebGui.openui5theme: openui5 theme like sap_belize (default) or sap_fiori_3. Extend light configuration in webgeom - let configure kind and intensity of the light",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4630:350,configurat,configuration,350,https://root.cern,https://github.com/root-project/root/pull/4630,1,['configurat'],['configuration']
Deployability,Now both TCanvas or RCanvas can be used in RBrowser.; In both cases very similar code is used for embedding - some extension of interface was required.; On client side code is mostly identical.; For the moment TCanvas is default while RCanvas has some problem on client side with update,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4499:280,update,update,280,https://root.cern,https://github.com/root-project/root/pull/4499,1,['update'],['update']
Deployability,"Now if the type of a column is `RVec<bool>`, `RDataFrame` reads it as; a `TTreeReaderValue<std::vector<bool>>` and performs a copy into a; `RVec<bool>` value when passing each entry value to RDF operations. This is a temporary patch, this changes should be reverted as soon; as ROOT-9570 (""TTreeReaderArray<bool> silently returns wrong results; when reading a vector<bool>"") is fixed. Note that C-arrays of bool are still broken, and that requires that; `TTreeReaderArray<bool>` be fixed.; EDIT: or are they? does `TTreeReaderArray<bool>` work with C-arrays of bools?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2605:227,patch,patch,227,https://root.cern,https://github.com/root-project/root/pull/2605,1,['patch'],['patch']
Deployability,Now it is not a single include file but lot of small includes. This PR will be also applied to v6-22-00-patches branch to solve ROOT-10993.; After that I will try to move nlohmann to buildins and provide possibility to use external version as requested in the ROOT-10993,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6662:104,patch,patches,104,https://root.cern,https://github.com/root-project/root/pull/6662,1,['patch'],['patches']
Deployability,"Now that `builtin_afterimage` is deprecated and always `ON`, it has to build on all platforms. Update `config.guess` to the latest upstream version to auto-detect `riscv64-unknown-linux-gnu` and fix the build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16260:95,Update,Update,95,https://root.cern,https://github.com/root-project/root/pull/16260,1,['Update'],['Update']
Deployability,"Numba 0.59 with Python 3.12 was already released:; https://github.com/numba/numba/releases. With this change, we make sure the numba features in ROOT are still tested in environments with Python 3.12 (like for example Ubuntu 24.04 or Arch Linux as of today).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15367:40,release,released,40,https://root.cern,https://github.com/root-project/root/pull/15367,2,['release'],"['released', 'releases']"
Deployability,"OOT:ROOT:0: While building module 'std' imported from input_line_1:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module '_wchar' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wchar.h:67:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from <module-includes>:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wchar.h:76:10: fatal error: could not build module '__wctype'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <sys/_types/_mbstate_t.h>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: input_line_1:1:10: fatal error: could not build module 'std'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <new>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Warning in cling::IncrementalParser::CheckABICompatibility():; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Failed to extract C++ standard library version.; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Warning in cling::IncrementalParser::CheckABICompatibility():; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Extraction of runtime standard library version was: ''; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Core':; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Cling_Runtime' imported from input_line_2:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Cling_Runtime_Extra' imported from /Users/ktf/src/sw/BUILD/7aa97d0224e628a02dfa9bddf88351f532b5c298/ROOT/etc/cling/Interpreter/RuntimeUniverse.h:27:; ```. ### Reproducer. Simply compiling ROOT is enough. ### ROOT version. 6.32.00 and 6.32.04. ### Installation method. aliBuild. ### Operating system. macOS Sequoia. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16449:13789,Install,Installation,13789,https://root.cern,https://github.com/root-project/root/issues/16449,1,['Install'],['Installation']
Deployability,"OOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_iterator.h:70:11: note: submodule of top-level module 'std' implicitly imported here; # include <type_traits>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:35:10: note: submodule of top-level module 'std' implicitly imported here; #include <iosfwd>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:37:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/exception_defines.h>; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:24008: core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o; [ 75%] Built target MetaCling; make: *** [Makefile:156: all] Error 2. ``",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:28507,Install,Installed,28507,https://root.cern,https://github.com/root-project/root/issues/10528,1,['Install'],['Installed']
Deployability,OSX and homebrew in particular creates many symlinks for its libraries. We should resolve to the realpath before scanning for symbols. This patch should reduce the test failues on the experimental runtime_modules support on Mac. Patch by Alexander Penev(@alexander-penev)!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4696:140,patch,patch,140,https://root.cern,https://github.com/root-project/root/pull/4696,2,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,"OSX has modularized sdk (libc++ included) and there we prefer the modulemaps that libraries ship with. However, libc++ can be also used on other Unix platforms and we should not try to mount the std.modulemap file for it. This patch fixes ROOT-10677.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5348:227,patch,patch,227,https://root.cern,https://github.com/root-project/root/pull/5348,1,['patch'],['patch']
Deployability,"OT should get one too, but that's another Issue.). As Wouter doesn't appear to have a GitHub account (**edit**: I'm wrong, he's @wverkerke), I'll tag @egpbos as a public member of the RooFit development team (apologies if I should have tagged someone else) as well as @dkirkby to see if they have any particular thoughts on the matter. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. To trigger the RooFit banner simply run any piece of code that uses any part of RooFit. Example:. ```console; $ python -c 'from ROOT import RooFit' # Get banner. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. For the examples I've shown above are using ROOT `v6.24/06` built from source. ```console; $ root --version; ROOT Version: 6.24/06; Built for linuxx8664gcc on Feb 18 2022, 00:26:00; From tags/v6-24-06@v6-24-06; ```. ### Additional context; <!--; Add any other context about the problem here.; -->. * [ROOT Forum: How to switch off RooFit banner?](https://root-forum.cern.ch/t/how-to-switch-off-roofit-banner/6357/4); * [ROOT Forum: RooFit Banner - can we switch it off somehow?](https://root-forum.cern.ch/t/roofit-banner-can-we-switch-it-off-somehow/13574); * [ROOT Forum: `__ROOFIT_NOBANNER=ON` CMake option seems to have no effect](https://root-forum.cern.ch/t/roofit-nobanner-on-cmake-option-seems-to-have-no-effect/48828); * https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/63; * https://github.com/conda-forge/root-feedstock/issues/160",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9954:4711,install,install,4711,https://root.cern,https://github.com/root-project/root/issues/9954,1,['install'],['install']
Deployability,"OTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; ```; Apparently it cant find hadd.exe . ; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; It working?; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This is my CMakeLists.txt:; ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR); project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include); ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx); target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx); target_link_libraries(Main Event); ```; I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. ; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Windows 10. Latest version of root as of April 2021; ### Additional context; <!--; Add any other context about the problem here.; -->; I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:5189,install,install,5189,https://root.cern,https://github.com/root-project/root/issues/7982,1,['install'],['install']
Deployability,"On 64-bit latest Tumbleweed release (20210515) there is one roottest failing; 597 - roottest-root-meta-ROOT-7462-make. It seems the issue isn't new; c.f https://github.com/root-project/root/issues/6331 and https://github.com/nicknagi/root/commit/707152a3af656a985ec3a14ad385b534c7f30062. <details>; <summary>Test output</summary>. ```; Name of real 'variable' seen as: 'fContent.'; Info: ClassInfo is not valid; Warning in <TStreamerInfo::Build>: Outer: pair<string,Inner<int> > has no streamer or dictionary, data member ""fContent"" will not be saved; -string=not set; -value=-1; -Info: Decl for instantation is valid; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:392:36: error: no member named 'value' in 'std::__and_<std::is_copy_assignable<std::__cxx11::basic_strin; g<char> >, std::is_copy_assignable<Inner<int> > >'; is_copy_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; ./instGood.cxx:10:33: note: in instantiation of template class 'std::pair<std::__cxx11::basic_string<char>, Inner<int> >' requested here; std::pair<string,Inner<int>> p;; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:403:36: error: no member named 'value' in 'std::__and_<std::is_move_assignable<std::__cxx11::basic_strin; g<char> >, std::is_move_assignable<Inner<int> > >'; is_move_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Outer with content:. #line 1 ""instlib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. input_line_55:2:34: error: member access into incomplete type 'Outer'; {Outer *o = (Outer*)0x2e6d470; o->Print();}; ^; instlib dictionary forward declarations' payload:5:65: note: forward declaration of 'Outer'; class __attribute__((annotate(""$cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8187:28,release,release,28,https://root.cern,https://github.com/root-project/root/issues/8187,1,['release'],['release']
Deployability,"On MacOS passing to cmake:. `-Dcocoa=ON -Dopengl=OFF`. leads to. ```; /Users/pcanal/root_working/code/rootcling/graf2d/cocoa/src/TGCocoa.mm:20:10: fatal error: 'TGLIncludes.h' file not found; #include ""TGLIncludes.h""; ^~~~~~~~~~~~~~~; 1 error generated.; ```; In `graf2d/cocoa/CMakeLists.txt` the code:; ```; if(opengl) # special case when cocoa is enabled but not opengl (i.e. gminimal=ON); target_include_directories(GCocoa PRIVATE ${OPENGL_INCLUDE_DIR}); else(); target_include_directories(GCocoa PRIVATE; ${CMAKE_SOURCE_DIR}/graf3d/gl/inc; ); endif(opengl); ```; acknowledge the challenge but fail to address it. And indeed in `TGCocoa.mm` the file `TGLIncludes.h` is always included. Maybe this should fail at configuration time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7160:715,configurat,configuration,715,https://root.cern,https://github.com/root-project/root/issues/7160,1,['configurat'],['configuration']
Deployability,"On macOS, we rely on the `textutil` executable to set some packaging metadata. However, we can't assume that it's always present. For example, in the nix packages build, it is not available, and there is a hack that disables setting the package metadata:; https://github.com/nixos/nixpkgs/blob/848699d4c1f669af01918b7cfdb438329667ddc2/pkgs/applications/science/misc/root/default.nix#L145. However, the `CPACK_PACKAGE_DESCRIPTION_FILE` and; `CPACK_RESOURCE_FILE_README` metadata that depends on `textutil` is optional and not crucial. It's used only in rare situations, like creating Windows installers automatically. See also the description here:; https://cmake.org/cmake/help/latest/module/CPack.html. It would be more appropriate to not fail the configuration if `textutil` is not found, but instead just to skip setting this metadata.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16433:591,install,installers,591,https://root.cern,https://github.com/root-project/root/pull/16433,2,"['configurat', 'install']","['configuration', 'installers']"
Deployability,"On one installation of MacOS with Sonoma 14.6.1 and XCode 15.4 and clang-1500.3.9.4; (not sure about the xcode command line tool version), the generation of; G__Core.cxx failed until we applied the change in this commit. On another installation of MacOS with the same version numbers the; change was not needed but the change did not hurt either. ```; In module 'std' imported from input_line_1:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/c++/v1/__chrono/time_point.h:34:52:; error: missing '#include <__chrono/file_clock.h>'; '_FilesystemClock'; must be defined before it is used; template <class _Clock, class _Duration = typename _Clock::duration>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/c++/v1/__chrono/time_point.h:34:1:; note: in instantiation of default argument for; 'time_point<std::filesystem::_FilesystemClock>' required here; template <class _Clock, class _Duration = typename _Clock::duration>; ^~~~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/c++/v1/__chrono/file_clock.h:51:8:; note: definition here is not reachable; struct _FilesystemClock {; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494:7,install,installation,7,https://root.cern,https://github.com/root-project/root/pull/16494,2,['install'],['installation']
Deployability,"On some configurations such warning causes compilation errors like:. ```; C:\Soft\root\include\TVirtualStreamerInfo.h(80,77): error C4596: 'kIgnoreTObjectStreamer': illegal qualified name in member declaration; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9686:8,configurat,configurations,8,https://root.cern,https://github.com/root-project/root/pull/9686,1,['configurat'],['configurations']
Deployability,"On some platform operator delete taints the memory, so even right after the deletion the information stored by ~TObject is already erased. On those platform we no longer rely on the kNotDelete bit hack and rely on the system (which has tainted the memory assumingly for a reason) to detect the use-after-delete problems. Introduce 2 new functions. TObject::IsDestructed (used by TClonesArray) that detects that the destructor has been run and is active in all configuration. This should be used if the code knows that the memory has not been freed/deleted. ROOT::Detail::HasBeenDeleted(TObject*) with returns true if the platform does not taint the memory and if the kNotDeleted is not set (in all other case, it returns false). This fixes #11330",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11334:460,configurat,configuration,460,https://root.cern,https://github.com/root-project/root/pull/11334,1,['configurat'],['configuration']
Deployability,"On some platform operator delete taints the memory, so even right after the deletion the information stored by ~TObject is already erased. On those platform we no longer rely on the kNotDelete bit hack and rely on the system (which has tainted the memory assumingly for a reason) to detect the use-after-delete problems. Introduce 2 new functions. TObject::IsDestructed (used by TClonesArray) that detects that the destructor has been run and is active in all configuration. This should be used if the code knows that the memory has not been freed/deleted. ROOT::Detail::HasBeenDeleted(TObject*) with returns true if the platform does not taint the memory and if the kNotDeleted is not set (in all other case, it returns false). This fixes #11330. Backport of https://github.com/root-project/root/pull/11334",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11405:460,configurat,configuration,460,https://root.cern,https://github.com/root-project/root/pull/11405,1,['configurat'],['configuration']
Deployability,On some platforms external nlohmann/json.hpp installed without; such special include. In this case full version has to be used. Provide special define when compile EVE7 which indicates if; json_fwd.hpp can be used. In the macros such define is not; exported and therefore full version of nlohmann/json.hpp; will be used. Better solution then https://github.com/root-project/root/pull/8343,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8345:45,install,installed,45,https://root.cern,https://github.com/root-project/root/pull/8345,1,['install'],['installed']
Deployability,"On the Snap build of ROOT, the parameters were assumed to be int, double. Errors from build log, running Ubuntu 20.04 GCC9 C++17. ```; /root/parts/root/src/roofit/xroofit/src/xRooNode.cxx:5778:105: note: deduced conflicting types for parameter ‘const _Tp’ (‘int’ and ‘double’); 5778 | : (h->GetBinContent(1) + std::max(abs(h->GetBinContent(1) * 0.1), 50.)));; ```; ; This doesn't appear to occur in normal builds, but the guard code seems trivial enough to include and this may prevent compilation errors in other scenarios. ## Checklist:. - [Y] tested changes locally; - [Y] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11984:576,update,updated,576,https://root.cern,https://github.com/root-project/root/pull/11984,1,['update'],['updated']
Deployability,One have to delete result of gSystem->ExpandPathName() function.; Or as in the patch - use other signature.; Little bit simplify the code,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4851:79,patch,patch,79,https://root.cern,https://github.com/root-project/root/pull/4851,1,['patch'],['patch']
Deployability,Only install the xproofd script and man page if xproofd option is on,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6281:5,install,install,5,https://root.cern,https://github.com/root-project/root/pull/6281,1,['install'],['install']
Deployability,"Only then configuration of ""static"" paths is really used.; Small fix in utility.py, which only important with older JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8538:10,configurat,configuration,10,https://root.cern,https://github.com/root-project/root/pull/8538,1,['configurat'],['configuration']
Deployability,Only when window geometry reported by the client - return it with methods like `c1->GetWindowWidth()` or `c1->GetWindowTopX()`. If value is not known yet - keep initial values. Small updates in JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13278:183,update,updates,183,https://root.cern,https://github.com/root-project/root/pull/13278,1,['update'],['updates']
Deployability,Openui5 - switch to latest 1.70.0 release,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4433:34,release,release,34,https://root.cern,https://github.com/root-project/root/pull/4433,1,['release'],['release']
Deployability,"Ordering of labels in TProfile is not correct when: . - Profile have weights. The array containing the weight square, `fBinSumw2` is not updated in TProfileHelper::LabelsOption; - Labels have different order than bin numbers. This was same bug present in `TH1::LabelsOption` and fixed by #6217",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6403:137,update,updated,137,https://root.cern,https://github.com/root-project/root/issues/6403,1,['update'],['updated']
Deployability,"Original commit message:; ""; The current logic of pseudo-automatic modulemap discovery is a little fragile; as it mounts a virtual file named module.modulemap in the location where the; a give system library header is found (cuda.h, etc). However, if the libraries; are squashed into a single folder then we end up mounting a file over another; virtual file. This should be a hard error, however, on systems such as OSX some; libraries already come with modulemap files and we should just not mount our; predefined ones. This makes it very difficult to distinguish when to issue the; hard error. While this patch is not a solution for the general when the modulemaps are; automatically discovered (-fimplicit-module-maps), we can use the real file; stems in cases where we are called with -fno-implicit-module-maps. As a side effect this fixes the *non-recommended* squashing of library header; files into a single folder.; """,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5178:607,patch,patch,607,https://root.cern,https://github.com/root-project/root/pull/5178,1,['patch'],['patch']
Deployability,"Original commit message:; ""[cxxmodules] Don't complain about redeclaration of declared annotated enum. Extend c14934e to support the case where the enum is deserialized from a module and the currently parsed enum comes from an annotated forward declaration. This patch should allow enabling the cmssw DataFormats/PatCandidates module which currently complains with:. scripts/edmCheckClassVersion -l libCondFormatsL1TObjects.so -x CondFormats/L1TObjects/src/classes_def.xml; DataFormatsL1GlobalTrigger_xr dictionary forward declarations' payload:9:216: error: enumeration previously declared with nonfixed underlying type; ...__attribute__((annotate(""$clingAutoload$DataFormats/L1GlobalTrigger/interface/L1GlobalTriggerReadoutRecord.h""))) L1GtObject : unsigned int;; ^; DataFormats/L1GlobalTrigger/interface/L1GtObject.h:28:6: note: previous declaration is here; enum L1GtObject {; ^. cc: @oshadura, @davidlange6, @smuzaffar, @mrodozov",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5059:263,patch,patch,263,https://root.cern,https://github.com/root-project/root/pull/5059,1,['patch'],['patch']
Deployability,"Original commit message:; ""[modules] Print input files when -module-file-info file switch is passed. This patch improves traceability of duplicated header files which end up in multiple pcms.; """,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2491:106,patch,patch,106,https://root.cern,https://github.com/root-project/root/pull/2491,1,['patch'],['patch']
Deployability,"Original message of upstream commit by Richard Smith, https://github.com/llvm/llvm-project/commit/61c7a9140b:; ```; Commit to a primary definition for a class when we load its first; member. Previously, we wouldn't do this if the first member loaded is within a; definition that's added to a class via an update record, which happens; when template instantiation adds a class definition to a declaration; that was imported from an AST file. This would lead to classes having member functions whose getParent; returned a class declaration that wasn't the primary definition, which; in turn caused the vtable builder to build broken vtables. I don't yet have a reduced testcase for the wrong-code bug here, because; the setup required to get us into the broken state is very subtle, but; have confirmed that this fixes it.; ```. This fixes an assertion in `CodeGenFunction::EmitCXXDestructorCall()`:; ```; Assertion `ThisTy->getAsCXXRecordDecl() == DtorDecl->getParent() && ""Pointer/Object mixup""' failed.; ```; which was already seen during the upgrade to LLVM 13 in one tutorial on CentOS 8 and ""solved"" by commit ffe867985b (""Relax assertion on generating destructor call""). Due to the nature of this problem, the assertion failure went away with unrelated changes so I reverted the change in 2b997add1d. Now the problem comes back with the upgrade to LLVM 16 and also in master when trying to enable the RBatchGenerator tutorials in https://github.com/root-project/root/pull/13302, both on macOS this time. Luckily, the underlying cause was properly fixed in upstream LLVM just last week, so backport that commit. FYI @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13370:305,update,update,305,https://root.cern,https://github.com/root-project/root/pull/13370,3,"['update', 'upgrade']","['update', 'upgrade']"
Deployability,"Original message:; ""[cmake] Use CLANG_BINARY_DIR to determine the build directory. The patch puts the ClangConfig.cmake in the expected location when clang is; embedded into a framework.""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1536:87,patch,patch,87,https://root.cern,https://github.com/root-project/root/pull/1536,1,['patch'],['patch']
Deployability,"Original patch by Georgios Bitzes, manual rebase onto master. Compiles and works correctly against upstream/master on CC7. See here for more information: https://tmaier.web.cern.ch/tmaier/ROOTDavixRedirection/davix-root-fix.html. Please also backport this patch to 6-08 and 6-10. Thanks!; Mario",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1352:9,patch,patch,9,https://root.cern,https://github.com/root-project/root/pull/1352,2,['patch'],['patch']
Deployability,"Original title: ""TF1 and TFitResultPtr do not serialise correctly pickle, and this is an issue with Python multiprocessing"". ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TF1 and TFitResultPtr do not serialise correctly with pickle. This causes issues with multiprocessing in python as well as distributed execution, e.g. with DistRDF. ### Reproducer. One can see with the reproducer below that:; - The fit succeeds and the result pointer is sane if nothing is pickled and depickled; - The fit fails if the function is pickled and depickled; - The fit result pointer is not sane any more if pickled and then depickled. ```python; import ROOT; import pickle. def SerialiseDeserialise(obj):; return pickle.loads(pickle.dumps(obj)). h = ROOT.TH1F(""myHist"", ""myTitle"", 64, -4, 4); h.FillRandom(""gaus""); f1 = ROOT.TF1(""f1"", ""gaus""); f1_d = SerialiseDeserialise(f1). res = h.Fit(f1, ""S""); print (""Status is "", res.Status()). # Check fit with de-serialised TF1; res = h.Fit(f1_d, ""S""); print (""Status is "", res.Status()). # Check de-serialised result ptr; res_d = SerialiseDeserialise(res); print (""Status is "", res_d.Status()); ```. ### ROOT version. master (I suspect all). ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16184:1202,Install,Installation,1202,https://root.cern,https://github.com/root-project/root/issues/16184,1,['Install'],['Installation']
Deployability,Others are taken care by linked issues and will end up in the list of bugfixes of the release notes automatically,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13944:86,release,release,86,https://root.cern,https://github.com/root-project/root/pull/13944,1,['release'],['release']
Deployability,Our CMake code for making path to headers relative is broken; for the v7 headers (as they don't have the 'CURRENT_SOURCE/inc'; prefix we check for). This caused that we have absolute paths for; those headers in the modulemap we ship with ROOT. This patch just hacks in the additional check for v7 headers; and a sanity check that should prevent this error in the future.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2003:249,patch,patch,249,https://root.cern,https://github.com/root-project/root/pull/2003,1,['patch'],['patch']
Deployability,Our use case requires optimization level 3 and disabled pointer checks. Therefore Fons asked me to send this PR.; Please see the following discussion:; https://root-forum.cern.ch/t/jit-performance-issue/38555. Commit based on; https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/optlevel2_forced.diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6038:285,patch,patches,285,https://root.cern,https://github.com/root-project/root/pull/6038,1,['patch'],['patches']
Deployability,"Output lines are in wrong order when running CTest on Windows x64, as shown below:; ```; 1397: -- BEGIN TEST OUTPUT --; 1397:; 1397: Processing C:/Users/bellenot/git/roottest/root/meta/runInterpreterValue.C...; 1397: WithDtor(): 1; 1397: Ident: IAmWithDtor!; 1397: Now deleting TInterpreterValue; 1397: ~WithDtor() 0; 1397: Now all WithDor should be gone; we have 0 left; 1397: About to return a WithDtor; 1397:; 1397: -- END TEST OUTPUT --; 1397: -- BEGIN OUTDIFF OUTPUT --; 1397: --- C:/Users/bellenot/git/roottest/root/meta/InterpreterValue.ref Tue Jul 13 10:19:19 2021; 1397: +++ C:/Users/bellenot/build/x64/release/roottest/root/meta/roottest-root-meta-runInterpreterValue-auto.log Mon Feb 21 15:23:36 2022; 1397: @@ -1,7 +1,7 @@; 1397:; 1397: WithDtor():1; 1397: -AbouttoreturnaWithDtor; 1397: Ident:IAmWithDtor!; 1397: NowdeletingTInterpreterValue; 1397: ~WithDtor()0; 1397: NowallWithDorshouldbegone;wehave0left; 1397: +AbouttoreturnaWithDtor; 1397:; 1397: -- END OUTDIFF OUTPUT --; 1397: CMake Error at C:/Users/bellenot/build/x64/release/RootTestDriver.cmake:254 (message):; 1397: compare 'stdout' error: 1; 1397:; 1397:; 1/1 Test #1397: roottest-root-meta-runInterpreterValue-auto ...***Failed 0.56 sec; ```; The output is correct, but the line order is wrong (i.e. `AbouttoreturnaWithDtor` is at the wrong position).; This is related to the issue #9809, and is due to the `-O1` optimization flag in Cling (`clingArgsStorage.push_back(""-O1"");` in `TCling.cxx`)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9944:612,release,release,612,https://root.cern,https://github.com/root-project/root/issues/9944,2,['release'],['release']
Deployability,"Over the years we have a pathological issue with cling when it calls directly; compiler API. Most of the API assume they are called from code residing in a; text file. This code has valid source locations which can be used for; comparisons and things like point of instantiation for template instantiations. This means that whenever a clang API requires a valid source location, cling; should have an interface which gives a pseudo-valid, commonly-rooted unique; source location. We are bitten by this fact when preloading modules as if we have diagnostics; they cannot be ordered due to the fact that the compared decls from two; different modules do not have a common includer. This patch avoids using an API and relies on a textual form which does not have; this problem at the cost of synthesizing an extra string. This should fix the roottest python stl-stl test failure in the incremental builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4339:685,patch,patch,685,https://root.cern,https://github.com/root-project/root/pull/4339,1,['patch'],['patch']
Deployability,Over the years we have been working towards controlling very well the way we build the PCH in order to reduce a lot of subtle problems. We have understood that inverting the responsibility to the infrastructure producing the PCH is better in terms of reliability. This patch unteaches cling to match its compiler instance to a given PCH. This helps when migrating to clang-repl where we could rely much more on the clang Driver to set up the compiler instance. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11922:269,patch,patch,269,https://root.cern,https://github.com/root-project/root/pull/11922,1,['patch'],['patch']
Deployability,PR against v6-18-00-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3898:20,patch,patches,20,https://root.cern,https://github.com/root-project/root/pull/3898,1,['patch'],['patches']
Deployability,"PR https://github.com/root-project/root/pull/8944 was a good first step to get the RooWorkspace to JSON converter work for typical histfactory models, but this simple example code showcases that are are still significant bugs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++; #include ""RooRealVar.h""; #include ""RooSimultaneous.h""; #include ""RooCategory.h""; #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(); {; using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool.; std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");; RooJSONFactoryWSTool::loadExportKeys(; rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");; RooJSONFactoryWSTool::loadFactoryExpressions(; rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json""; );. // Create a test model: RooSimultaneous with Gaussian in one component, and; // product of two Gaussians in the other.; RooRealVar x(""x"", ""x"", -8, 8);; RooRealVar mean(""mean"", ""mean"", 0, -8, 8);; RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);; RooGaussian g1(""g1"", ""g1"", x, mean, sigma);; RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));; RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});; RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);; RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});; RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);; simPdf.addPdf(model, ""physics"");; simPdf.addPdf(model_ctl, ""control"");. // Export to JSON; {; RooWorkspace ws{""workspace""};; ws.import(simPdf);; RooJSONFactoryWSTool tool{ws};; tool.exportJSON(""simPdf.json"");; // Output can be pretty-printed with `python -m json.tool simPdf.json`; }. // Import JSON; RooWorkspace ws{""workspace""};; RooJSONFactoryWSTool tool{ws};; tool.importJSON(""simPdf.json"");; // At the moment this will fail, because the Gaussians in the product are; // missing in the JSON dump!; }; ```. The JSON dump will look like this:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9372:262,release,release,262,https://root.cern,https://github.com/root-project/root/issues/9372,1,['release'],['release']
Deployability,"Partial backport of, mostly to get the compatibility with the newest `sklearn`:. * https://github.com/root-project/root/pull/13634. With all the backports I made in the last days, the difference between the `tmva/` subdirectory in ROOT 6.28 and ROOT master is a relatively short list of commits, which might help us in tracking remaining problems (if there should be any):. ```txt; 5473c5c1b0 Fixed how VDT would be used.; 352c35395a [tmva][sofie] Add in RSofieReader specialization for single output; ead7963b5b [tmva][sofie] Add in RSofieReader support for multiple inputs and custom operators; 8b005a0659 [tmva][pymva] Do not disable tensorflow eager execution on MacoS; 7793c2038e [tmva][pymva] Use .h5 file instead of .keras; 4c9e26ca58 Log ONNX Operator implemented and the merge conflicts are resolved; d016febdb6 Update ROperator_Slice.hxx; 6b2bef2aab Fixed bugs in Slice SOFIE Operator, added slice gtests; f0cb4e9ceb [tmva][sofie-gnn] Tutorial for SOFIE-GNN; 3c17793839 [tmva][sofie-gnn] Fix on loading required packages (sonnet, graph_nets) and restricting numpy version; 2f2b9c62ad [tmva][sofie-gnn] Docstrings for SOFIE-GNN implementations and vectorization in node aggregate and GraphIndependent; 1968e25b63 [tmva][sofie-gnn] Make Edge_update in core using a single infer call for all edges; e4555770c7 [tmva][sofie-gnn] Add support for LayerNormalization and registering additional functions; b6ac312508 [tmva][sofie-gnn] Test LHCb toy model with SOFIE-GNN; 5455f90c3a [tmva][sofie-gnn] Python in-memory parse function and tests; d925d6a805 [tmva][sofie-gnn] Introducing RModel_GraphIndependent; 2df806aa32 [tmva][sofie-gnn] Introducing RFunctions for SOFIE-GNN; 1ca9b4c240 [tmva][sofie-gnn] Introducing SOFIE-GNN; 6cb0d0a957 [TMVA] Don't use the same file name (`TMVA.root`) everywhere (#13576); 4fe2f6ef61 [pymva] Refactor TestRModelParserPyTorch to use RSofieReader; e53fcb7b6a [tmva][sofie] Fix formattting in RModel; f93775a9dc [tmva][sofie] Add options to append generated C++ cod",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13783:821,Update,Update,821,https://root.cern,https://github.com/root-project/root/pull/13783,1,['Update'],['Update']
Deployability,"Partial fix of #8708.; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. . ## How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/`, and `C` is installed in those system includes as well. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```. ## In this PR:; - Includes for VDT and XROOTD are fixed by making them `IMPORTED` targets, so their includes have lowest precedence.; - Some cheating where include directories are copied around between targets is removed. CMake should handle this.; - Some dependency and target management is simplified (or rather modernised with target-based cmake); - A broken dependency in RooFit is fixed, which was previously hidden by the cheating with include directories. ## What remains to be done:; It is likely that more builtins (or rather `FindXXX` have to be converted to `IMPORTED` targets, so they don't provoke this error again. A broken configuration can be detected by; 1. Having CMake pick up a dependency in some common directory; 2. Either; - Placing a lot of `#error`-ROOT headers in there or; - Searching `compile_commands.json` for `-I/my/include/directory/`; 3. Fixing the `FindXXX` for this dependency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8709:49,install,installed,49,https://root.cern,https://github.com/root-project/root/pull/8709,4,"['Install', 'configurat', 'install']","['Install', 'configuration', 'installed']"
Deployability,"Partially revert commit d487a42b311 (""[cmake] Set CMAKE_CXX_STANDARD explicitly in RootUseFile.cmake"") because this is required to propagate the C++ standard via CMake library targets, as advertised on the website. Fixes #15253 (needs to be backported to `v6-32-00-patches`)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15254:265,patch,patches,265,https://root.cern,https://github.com/root-project/root/pull/15254,1,['patch'],['patches']
Deployability,"Partially solves: [ROOT-10915](https://its.cern.ch/jira/browse/ROOT-10915). Reasoning from the ticket:; > It seems most header files are not added to the library targets that compose ROOT. This is most imminent to me when I create a Visual Studio project by CMake. Almost all header files are missing in the solution explorer. > While this still allows to build ROOT, the IDE experience is severly limited. Automatic code refactoring and static analysis fails to a large degree, because the headers are not considered part of the project. E.g. the clang-tidy integration in Visual Studio cannot fix any header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6014:559,integrat,integration,559,https://root.cern,https://github.com/root-project/root/pull/6014,1,['integrat'],['integration']
Deployability,"Passing an out-of-range bin to `TH1::AddBinContent` leads to undefined behavior. # This Pull request:. ## Changes or fixes:; Comment added to documentation: `TH1::AddBinContent` do not check bin boundaries, passing an out-of-range bin leads to undefined behavior. The boundary check is not needed because this method should be used only internally, despite being public. ## Checklist:. - [ ] tested changes locally; - [x ] updated the docs (if necessary). This PR fixes # ; https://github.com/root-project/root/issues/14575",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14674:423,update,updated,423,https://root.cern,https://github.com/root-project/root/pull/14674,1,['update'],['updated']
Deployability,Patch GetVariableSettings() method to correctly report parameter limits.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/455:0,Patch,Patch,0,https://root.cern,https://github.com/root-project/root/pull/455,1,['Patch'],['Patch']
Deployability,Patch Vc to avoid warnings about macro redefinitions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5168:0,Patch,Patch,0,https://root.cern,https://github.com/root-project/root/pull/5168,3,['Patch'],['Patch']
Deployability,Patch builtin_tbb for GCC 13,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12724:0,Patch,Patch,0,https://root.cern,https://github.com/root-project/root/pull/12724,1,['Patch'],['Patch']
Deployability,Patch by Vassil Vassilev.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2507:0,Patch,Patch,0,https://root.cern,https://github.com/root-project/root/pull/2507,1,['Patch'],['Patch']
Deployability,Patch currently applied to the SHiP software stack. It would be nice if this could be merged upstream after review.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1075:0,Patch,Patch,0,https://root.cern,https://github.com/root-project/root/pull/1075,1,['Patch'],['Patch']
Deployability,Patch fixes a ROOT binary distribution of clad for 6.16.02,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3382:0,Patch,Patch,0,https://root.cern,https://github.com/root-project/root/pull/3382,1,['Patch'],['Patch']
Deployability,Patch for 6.18 version will follow,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4039:0,Patch,Patch,0,https://root.cern,https://github.com/root-project/root/pull/4039,1,['Patch'],['Patch']
Deployability,Patch from M.Frank for optical surface implementation and material properties,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3781:0,Patch,Patch,0,https://root.cern,https://github.com/root-project/root/pull/3781,1,['Patch'],['Patch']
Deployability,Patch from Vassil! Add the cwg to the prebuilt module cache path.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1980:0,Patch,Patch,0,https://root.cern,https://github.com/root-project/root/pull/1980,1,['Patch'],['Patch']
Deployability,Patch proposed by Timur,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8746:0,Patch,Patch,0,https://root.cern,https://github.com/root-project/root/pull/8746,1,['Patch'],['Patch']
Deployability,Patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/39:0,Patch,Patches,0,https://root.cern,https://github.com/root-project/root/pull/39,1,['Patch'],['Patches']
Deployability,Patches by @marsupial,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/625:0,Patch,Patches,0,https://root.cern,https://github.com/root-project/root/pull/625,1,['Patch'],['Patches']
Deployability,"Patches for compile on Debian 12 with Python 3.11 libraries. # This Pull request:. ## Changes or fixes:; Permit to compile with Python's libraries 3.11, too; I've tested locally on Debian 12 (bookworm). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13974:0,Patch,Patches,0,https://root.cern,https://github.com/root-project/root/pull/13974,2,"['Patch', 'update']","['Patches', 'updated']"
Deployability,PendingInstances.'. <details>; <summary>Cling test failures</summary>. Failures in `master` on my system:; ```; Cling :: CodeUnloading/PCH/VTables.C; Cling :: DynamicLibraryManager/callable_lib_L_AB_order1.C; ```. Remaining failures (excluding the ones above):; ```; Cling :: CodeGeneration/Symbols.C; Cling :: CodeUnloading/AtExit.C; Cling :: CodeUnloading/PCH/VTablesClingPCH.C; Cling :: CodeUnloading/RereadFile.C; Cling :: ErrorRecovery/StoredState.C; Cling :: MultipleInterpreters/MultipleInterpreters.C; ```; </details>. ROOT:; - [x] Compare the build size against master; - [x] Compare the `.pcm` file size against master; - [ ] Add flags to ignore compilation warnings coming from llvm; - [x] Remove the FIXME from commit 'Add another symbol generator to resolve the generated lazy symbol' - the explanation is in the commit; - [x] Fix the llvm::StringRef conversion failures on OSX. <details>; <summary>; Binary Size this PR needs 13% more space (2.3 vs 2. GB); </summary>. ```; du -hs root-release-llvm13; 2.3G	.; (base) vvassilev@vv-nuc /build/vvassilev/root-release-llvm13 $ du -hs ../root-release-master/; 2.0G	../root-release-master/; ```. </details>. <details>; <summary>; Module files need ~5% more space on disk (215 vs 206 MB); </summary>. ```; diff -y llvm13 master ; 424K	lib/ASImageGui.pcm				 |	444K	lib/ASImageGui.pcm; 468K	lib/ASImage.pcm					 |	484K	lib/ASImage.pcm; 4.2M	lib/_Builtin_intrinsics.pcm			 |	4.0M	lib/_Builtin_intrinsics.pcm; 48K	lib/_Builtin_stddef_max_align_t.pcm		 |	44K	lib/_Builtin_stddef_max_align_t.pcm; 200K	lib/Cling_Runtime_Extra.pcm			 |	132K	lib/Cling_Runtime_Extra.pcm; 100K	lib/Cling_Runtime.pcm					100K	lib/Cling_Runtime.pcm; 11M	lib/Core.pcm					 |	9.6M	lib/Core.pcm; 564K	lib/EG.pcm					 |	584K	lib/EG.pcm; 5.7M	lib/Eve.pcm					 |	5.4M	lib/Eve.pcm; 652K	lib/FitPanel.pcm				 |	656K	lib/FitPanel.pcm; 504K	lib/Foam.pcm					 |	520K	lib/Foam.pcm; 440K	lib/Fumili.pcm					 |	460K	lib/Fumili.pcm; 1.2M	lib/Gdml.pcm						1.2M	lib/Gdml.pcm; 960K	lib/G,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294:1276,release,release-,1276,https://root.cern,https://github.com/root-project/root/pull/10294,1,['release'],['release-']
Deployability,"Per the last ROOT I/O meeting (where the correct use of iterators to array-backed collections, e.g. `std::vector<T>`): an iterator on an array-backed container is just a pointer; thus, it can be directly stored in `*xyz_arena`, saving one dereference (see [here](https://github.com/root-project/root/blob/master/io/io/inc/TVirtualCollectionIterators.h#L34)). This pull request, fixes both the implementation of `RCollectionIterableOnce` and the unit test. As a result, this PR should fix the use case in PR #12948. Given that this behavior was not documented at all, a follow-up PR will update the documentation for `TVirtualCollectionProxy`. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13306:587,update,update,587,https://root.cern,https://github.com/root-project/root/pull/13306,2,['update'],"['update', 'updated']"
Deployability,"Performance visualization in the RNtupleMetrics can allow the encapsulation of more complex type of metrics, which can allow the extraction of more usefull information, as oposssed to previous, simple, agreggate counter. This PR currently encapsulates 4 fully tested variants of histogram metrics and deploys it's most sophisticated variant onto the analysis of the volume of read requests when loading a page or cluster, by default. The following 4 variants are available, mainly referred to by their key usage:. - `RNTupleHistoInterval` : User-provided set of intervals.; - `RNTupleHistoCounterLog` : Histogram on a log scale.; - `RNTupleHistoActiveLearn` : Active learning phase to adjust to data distribution.; - `RNTupleFixedWidthHistogram` : Fixed width bins with constant time filling. Developed under a summer student project by Rui Reis and supervised by Javier Lopez Gomes and Jakob Blomer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8880:301,deploy,deploys,301,https://root.cern,https://github.com/root-project/root/pull/8880,1,['deploy'],['deploys']
Deployability,Please refer to the release notes of each project for more information; - Vc 1.4.0 — https://github.com/VcDevel/Vc/releases/tag/1.4.0; - VecCore 0.5.2 — https://github.com/root-project/veccore/releases/tag/v0.5.2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2976:20,release,release,20,https://root.cern,https://github.com/root-project/root/pull/2976,3,['release'],"['release', 'releases']"
Deployability,"Please see commit messages for more information. Note: For the regular binary releases, `-Drpath=ON -DCMAKE_INSTALL_RPATH='$ORIGIN/../lib'` should be added to our Jenkins jobs in order to use relative `RUNPATH` and not require setting `LD_LIBRARY_PATH` afterwards for using ROOT.; The only setup that will be really required later would be setting `PYTHONPATH` to the same as `root-config --libdir` before trying to `import ROOT` from Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6735:78,release,releases,78,https://root.cern,https://github.com/root-project/root/pull/6735,1,['release'],['releases']
Deployability,"Plotting with matplotlib doesn't work on the CI nodes even if matplotib; is installed because there is not `DISPLAY` variable. Hence we should; catch a general exception to cover also that case, not only an; `ImportError`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9432:76,install,installed,76,https://root.cern,https://github.com/root-project/root/pull/9432,1,['install'],['installed']
Deployability,Plus small update in ui5 code - use JSROOT inspector.; Update 6.18 release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3753:11,update,update,11,https://root.cern,https://github.com/root-project/root/pull/3753,3,"['Update', 'release', 'update']","['Update', 'release', 'update']"
Deployability,Plus update JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16142:5,update,update,5,https://root.cern,https://github.com/root-project/root/pull/16142,1,['update'],['update']
Deployability,"Port patch by @bircoph to support giflib-5, as well as some minor build system updates. Since the bundled version of libAfterImage in ROOT got some updates of its own, an effort was made to; keep those changes intact. For more information, please refer to the bug report at https://bugs.gentoo.org/571654. Fixes [ROOT-7904](https://sft.its.cern.ch/jira/browse/ROOT-7904).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/328:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/328,3,"['patch', 'update']","['patch', 'updates']"
Deployability,Port release notes to 6.16,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3091:5,release,release,5,https://root.cern,https://github.com/root-project/root/pull/3091,1,['release'],['release']
Deployability,"Ported from Cppyy patch by @wlav :`; https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/using_decls.diff. Adds an iterator for using declarations to `TClingMethodInfo`. it should make redundant the pythonisations that add the method overloads from a base class to the derived class that uses them:; https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/PyROOT/src/PyzPythonHelpers.cxx#L113. Instead of relying on pythonisations for specific classes, this PR adds the necessary logic to have this functionality solved in a generic way in the bindings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3640:18,patch,patch,18,https://root.cern,https://github.com/root-project/root/pull/3640,2,['patch'],"['patch', 'patches']"
Deployability,"Ported from a patch by Wim Lavrijsen:; https://bitbucket.org/wlav/cppyy-backend/src/00d65c73d303fde7069aacc32cf95bb0144bbe43/cling/patches/using_decls.diff. This PR supersedes #3640 and ports the changes to master. The changes are a fix for the Jira ticket: https://sft.its.cern.ch/jira/browse/ROOT-10582. The reproducer (fails without the fix, prints `2` with the fix):. ```python; import ROOT. ROOT.gInterpreter.Declare(""""""; class A {; public:; int val;; A(int a): val(a) {}; virtual ~A() {}; };; """"""; ). class B(ROOT.A):; pass. b = B(2); print(b.val); ```. The PR also allows to remove workarounds to make RooFit work, see the pythonizations here:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_rooabspdf.py#L24-L25; https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodataset.py#L24; https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodatahist.py#L24",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5430:14,patch,patch,14,https://root.cern,https://github.com/root-project/root/pull/5430,2,['patch'],"['patch', 'patches']"
Deployability,Possible incomplete installation of internal TBB,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9599:20,install,installation,20,https://root.cern,https://github.com/root-project/root/issues/9599,1,['install'],['installation']
Deployability,"Pressing ctrl-r when no ~/.root_hist file is present or possibly; when it contains 0 lines used to cause a segfault. The culprit; if an out-of-bound access in History::GetLine, as the case in which; the history has zero entries was not taken into account. With this patch, Histoy::GetLine returns an empty string instead.; This fixes ROOT-10917.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6006:266,patch,patch,266,https://root.cern,https://github.com/root-project/root/pull/6006,1,['patch'],['patch']
Deployability,"Pressing ctrl-r when no ~/.root_hist file is present or possibly; when it contains 0 lines used to cause a segfault. The culprit; if an out-of-bound access in History::GetLine, as the case in which; the history has zero entries was not taken into account. With this patch, Histoy::GetLine returns an empty string instead.; This fixes ROOT-10917. Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6098:266,patch,patch,266,https://root.cern,https://github.com/root-project/root/pull/6098,1,['patch'],['patch']
Deployability,Prevent access violation when executing the df017_vecOpsHEP.C tutorial with ROOT built in release mode. To be reviewed when updating Visual Studio or LLVM,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10443:90,release,release,90,https://root.cern,https://github.com/root-project/root/pull/10443,1,['release'],['release']
Deployability,Prevent ldap.h sneaking in from wrong location as is the case during LCG release builds if ROOT is tried to be built with ldap support. All details can be found at SPI-1120,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3193:73,release,release,73,https://root.cern,https://github.com/root-project/root/pull/3193,1,['release'],['release']
Deployability,"Previously if a user with Python2 didn't have pyspark installed on the system it would trigger the wrong error; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Spark/Backend.py"", line 22, in <module>; except ModuleNotFoundError:; NameError: name 'ModuleNotFoundError' is not defined; ```; Switch to the base class `ImportError` which is Python2 compatible, also improve the error message to include the link to the installation guide for pyspark (this works equally for Python2 and Python3):; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Spark/Backend.py"", line 23, in <module>; raise ImportError((""cannot import module 'pyspark'. Refer to ""; ImportError: cannot import module 'pyspark'. Refer to https://spark.apache.org/docs/latest/api/python/getting_started/install.html for instructions on how to install PySpark on your system.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7705:54,install,installed,54,https://root.cern,https://github.com/root-project/root/pull/7705,4,['install'],"['install', 'installation', 'installed']"
Deployability,"Previously if running with a large number of input files (few hundred or even a thousand+ could be typical for large datasets processed into flat trees with grid jobs) one could end up with a huge number of tasks (at minimum nThreads * nFiles). This makes the splitting aware of the number of files, taken into account for both the default splitting and the function used for user configuration, which also changes name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7106:381,configurat,configuration,381,https://root.cern,https://github.com/root-project/root/pull/7106,1,['configurat'],['configuration']
Deployability,"Previously the modules were only a environment variable, so we never; had any CMake code that added the correct dependencies here. Now we; do have runtime_cxxmodules, and we can actually properly add a; dependency here.; Without this patch a deleted C++ module file actually will never be regenerated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1038:234,patch,patch,234,https://root.cern,https://github.com/root-project/root/pull/1038,1,['patch'],['patch']
Deployability,Previously these build options where hidden behind a define and the; only way to test them is to manually add this to the CXX/CC flags; by hand. This patch turns this into a proper (but experimental) build setting; to better document the effort to have proper memory deallocation in; ROOT. It also fixes some of the broken code that was hidden behind; this define.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/794:150,patch,patch,150,https://root.cern,https://github.com/root-project/root/pull/794,1,['patch'],['patch']
Deployability,"Previously, only pcms which were generated by rootcling was installed.; For example, stl.pcm and _Builtin_intrinsics.pcm were not copied to; install directory and was implicitly build to; /tmp/org.llvm.clang.yuka../ at runtime. This behavior is not what we; want, we want all our root related pcms to be prebuilt and just be; installed and used from that location.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3181:60,install,installed,60,https://root.cern,https://github.com/root-project/root/pull/3181,3,['install'],"['install', 'installed']"
Deployability,"Previously, the Exec method of the FillTGraphHelper was ambiguous.; Currently, Exec properly handles container and non-container types.; Corresponding tests added.; Small adjustments of the variable names of Graph in RInterface.hxx. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9790:269,update,updated,269,https://root.cern,https://github.com/root-project/root/pull/9790,1,['update'],['updated']
Deployability,"Prior to this update if a StreamerInfo on file was the exact same; as one in memory, it would get recorded in an arbitrary slot in; the 'record those StreamerInfo array'.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5012:14,update,update,14,https://root.cern,https://github.com/root-project/root/pull/5012,3,['update'],['update']
Deployability,"Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores.; - Breaks all RDataFrame tests that run with a specified number of cores/slots.; - Requires `#include <hpx/hpx_main.hpp>` in the script with the main.; - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``; - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5364:380,integrat,integration,380,https://root.cern,https://github.com/root-project/root/pull/5364,2,"['install', 'integrat']","['installed', 'integration']"
Deployability,Provide functions which are used in JSROOT-based display in `jupyter`. After final v7 JSROOT release code in `jupyter` will be adjusted to dynamic modules loading.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10272:93,release,release,93,https://root.cern,https://github.com/root-project/root/pull/10272,1,['release'],['release']
Deployability,Provide in the cmake configuration the C++ standard which was used to compile ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7644:21,configurat,configuration,21,https://root.cern,https://github.com/root-project/root/issues/7644,1,['configurat'],['configuration']
Deployability,Provide json_fwd.h which can be used now in eve7. Also update forward declaration in REveElement.hxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11223:55,update,update,55,https://root.cern,https://github.com/root-project/root/pull/11223,1,['update'],['update']
Deployability,Provide updated v6.26 release notes for the Interpreter and RNTuple sections. [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9440:8,update,updated,8,https://root.cern,https://github.com/root-project/root/pull/9440,2,"['release', 'update']","['release', 'updated']"
Deployability,"Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data; - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model; - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9317:766,patch,patch,766,https://root.cern,https://github.com/root-project/root/pull/9317,1,['patch'],['patch']
Deployability,Publish every (new) release on Zenodo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8706:20,release,release,20,https://root.cern,https://github.com/root-project/root/issues/8706,1,['release'],['release']
Deployability,"Pull request #11731 introduced internal support for per field post-read callbacks. This follow-up pull request registers a callback for each `#pragma read` rule on user-defined classes.; Currently, `#pragma read` rules referencing non-transient members as a `target` are intentionally disallowed -- a warning is logged in that case. Only target class version is checked, i.e. checksum is ignored. Raw read rules are not (and will likely not be) supported, as they take a `TBuffer &`. ## Changes or fixes:; - Introduce `RFieldBase::AddReadCallbacksFromIORules()`. This function registers a post-read callback for each of the given `ROOT::TSchemaRule`s.; - `RFieldBase::ConnectPageSource()`: cache C++ type version as stored in the RNTupleDescriptor. This information can be accessed via `GetOnDiskTypeVersion()`.; `RFieldBase::RegisterReadCallbacks()` is called as part of `ConnectPageSource()`. This function can be overridden; in particular, derived classes can make use of the on-disk type version to enable/disable read rules.; - RClassField: register a post-read callback for each of the custom I/O rules associated with the target class version.; - I/O customization rules referencing non-transient members are ignored for now. Such rules shall trigger a warning, e.g.; ```; 210: Warning in <[ROOT.NTuple] Warning /home/jalopezg/CERN/repos/root/tree/ntuple/v7/src/RField.cxx:931 in ; ROOT::Experimental::RClassField::RClassField(std::string_view, std::string_view, TClass*)::<lambda(const ; ROOT::TSchemaRule*)>>: ignoring I/O customization rule with non-transient member: a; ```. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR partially takes care of #10019.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11944:1637,update,updated,1637,https://root.cern,https://github.com/root-project/root/pull/11944,1,['update'],['updated']
Deployability,"Put it into graf2d/gpad. For the moment it is not possible to add v7 TText into graf2d/graf due to cross-referencing between libGpad and libGraf in that case. Normally libGpad linked against libGraf, but if one adds v7 TText into libGraf, one need several v7 classes (including TCanvas) from libGpad. One gets circular dependency. Should be resolved after Axel redesigns draw attributes container. . Also include JSROOT code for FitPanel and TText. Update docu for THttpServer and JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1235:449,Update,Update,449,https://root.cern,https://github.com/root-project/root/pull/1235,1,['Update'],['Update']
Deployability,PyROOT update broke some existing code,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:7,update,update,7,https://root.cern,https://github.com/root-project/root/issues/15117,1,['update'],['update']
Deployability,Python 3.11 is supported by the latest Numba release https://numba.readthedocs.io/en/stable/release-notes.html#version-0-57-0-1-may-2023,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12843:45,release,release,45,https://root.cern,https://github.com/root-project/root/pull/12843,2,['release'],"['release', 'release-notes']"
Deployability,Python class inherited from a ROOT class fails in last release,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16520:55,release,release,55,https://root.cern,https://github.com/root-project/root/issues/16520,1,['release'],['release']
Deployability,Python is installed on machine but not found during configuration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8097:10,install,installed,10,https://root.cern,https://github.com/root-project/root/issues/8097,2,"['configurat', 'install']","['configuration', 'installed']"
Deployability,"RDFHelpers.hxx provides ROOT::RDF::RunGraphs(std::vector<RResultHandle>).; In order for the handy implicit conversion from RResultPtr<T> to; RResultHandle to be available for client code that include; RDFHelpers.hxx, it is not enough that this header forward-declares; RResultHandle, but it needs to transitively provide the whole type; declaration. In practice, before 8bbd543f3d56, this worked fine:. ```; ...; RunGraphs({resultptr1, resultptr2});; ```. while after that commit it would require an extra `#include; <ROOT/RResultHandle.hxx>`. This patch restores the previous situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11248:549,patch,patch,549,https://root.cern,https://github.com/root-project/root/pull/11248,1,['patch'],['patch']
Deployability,"RED ${SOURCES} G__mwe.cxx); target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); target_link_libraries(mwe ${ROOT_LIBRARIES}); ```. myscript.py:. ```; import cppyy; import ROOT; cppyy.load_library('libmwe.so'); createHistMap = cppyy.gbl.createHistMap; hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:; hist.ProjectionY() # This should fail if the type is not correctly handled; print(""something is wrong""); except AttributeError as e:; print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed; print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""); ```. mwe.cpp:. ```; #include <mwe.h>; #include <TH1.h>; #include <TH2.h>. std::map<std::string, TH1*> createHistMap() {; std::map<std::string, TH1*> histMap;; TH1* hist1 = new TH1F(""hist1"", ""Histogram 1"", 100, 0, 100);; TH2* hist2 = new TH2F(""hist2"", ""Histogram 2"", 100, 0, 100, 100, 0, 100);; histMap[""hist1""] = hist1;; histMap[""hist2""] = hist2;; return histMap;; }; ```. mwe.h:. ```; #include <string>; #include <TH1.h>; #include <map>. std::map<std::string, TH1*> createHistMap();; ```. LinkDef.h:. ```; #ifdef __CINT__; #pragma link C++ class std::map<std::string, TH1*>+;; #pragma link C++ function createHistMap;; #endif; ```. Steps to Reproduce: `mkdir build && cd build && cmake .. && make && python ../myscript.py`. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.32.02 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 22 2024, 18:26:29 |; | From heads/master@tags/v6-32-02 |; | With c++ (GCC) 14.1.1 20240522 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source. ### Operating system. ArchLinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16062:3089,Install,Installation,3089,https://root.cern,https://github.com/root-project/root/issues/16062,1,['Install'],['Installation']
Deployability,REve backport fixes in v6-28-00-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12080:32,patch,patches,32,https://root.cern,https://github.com/root-project/root/pull/12080,1,['patch'],['patches']
Deployability,REve release notes for v632,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15592:5,release,release,5,https://root.cern,https://github.com/root-project/root/pull/15592,1,['release'],['release']
Deployability,"RMiniFile only knows how to write into proper ROOT files. ; I went with the blacklist approach because there are a bunch of valid cases that are not just TFiles that we want to support (e.g. TMemFile, TBufferMergerFile, ...). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16825:277,update,updated,277,https://root.cern,https://github.com/root-project/root/pull/16825,1,['update'],['updated']
Deployability,"RNTuple's minifile writer seems to create subtly corrupted ROOT files. If such a file is opened by `TFile` in update mode and reopened for reading, the map reads like. ```; 20220511/094820 At:100 N=104 TFile ; 20320223/050248 At:204 N=68423 CX = -11523.26 ; 20531200/160357 At:68627 N=14215937 CX = -24.78 ; 20531200/160357 At:14284564 N=1 END ; ```. On first sight, the file remains usable/readable though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10559:110,update,update,110,https://root.cern,https://github.com/root-project/root/issues/10559,1,['update'],['update']
Deployability,"ROOT ""swallows"" `std::`, and we need to figure out how to handle the namespaces; `std::foo` vs `::foo`. Until we do that, avoid the issue by renaming the only; known ""clash"", using `std::__ROOT` as in several other backport cases. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9093:326,update,updated,326,https://root.cern,https://github.com/root-project/root/pull/9093,1,['update'],['updated']
Deployability,ROOT 6.22 should reject TBB 2021.1.1 and above during configuration (fails to compile),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6933:54,configurat,configuration,54,https://root.cern,https://github.com/root-project/root/issues/6933,1,['configurat'],['configuration']
Deployability,ROOT 7 c++ standard not updated on documentation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8743:24,update,updated,24,https://root.cern,https://github.com/root-project/root/issues/8743,1,['update'],['updated']
Deployability,"ROOT CMake modules are really only used during the build. Users only need `ROOTConfig.cmake` and related files like `ROOTConfig-{version,targets*}.cmake`, `ROOTUseFile.cmake`, and `RootMacros.cmake`. Not installing the internal modules gives us more freedom to change them without worrying about breaking backward compatibility for users. Fixes: https://sft.its.cern.ch/jira/browse/ROOT-9828",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4099:204,install,installing,204,https://root.cern,https://github.com/root-project/root/pull/4099,1,['install'],['installing']
Deployability,ROOT I/O performance related updates,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/709:29,update,updates,29,https://root.cern,https://github.com/root-project/root/pull/709,1,['update'],['updates']
Deployability,"ROOT can get the incorrect flags if a compiler needs c++1z or something similar. This patch makes sure the compiler matches exactly what CMake uses. The old version can cause issues activating C++17 mode on AppleClang, for example, and then using `root-config`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3411:86,patch,patch,86,https://root.cern,https://github.com/root-project/root/pull/3411,1,['patch'],['patch']
Deployability,"ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue?. **Versions and configuration**; OS: Windows Server 2022 Datacenter; VS: Visual Studio 2019(16.11.19). **Steps to reproduce**; 1. open x64 native tools command prompt for VS 2019; 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64; 3. git clone https://github.com/root-project/root F:\root; 4. cd F:\root; 5. mkdir build_arm64ec & cd build_arm64ec; 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. ; 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**; ```; Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:544,configurat,configuration,544,https://root.cern,https://github.com/root-project/root/issues/11787,1,['configurat'],['configuration']
Deployability,"ROOT failed to build with error MSB8066 with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? I think these errors are due to the clang-tblgen.exe and llvm-tblgen.exe being ran. How to disable run these two exes. Thanks in advance. Versions and configuration; OS: Windows Server 2022 Datacenter; VS: Visual Studio 2019(16.11.20). **Repro steps:**; 1. Open a VS 2019 x64 Native Tools Command Prompt; 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64; 3. git clone hhttps://github.com/root-project/root F:\root; 4. cd F:\root; 5. mkdir build_arm64ec_a && cd build_arm64ec_a; 6. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -Droofit=off -Dtesting=OFF -Droottest=OFF -DCMAKE_BUILD_TYPE=Release .. ; 7. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. **Error info:**; ```; Line 10784: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\4f43b9c638cd6c1d81fa9a9ebaa126f2\CommentCommandInfo.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\2eda59820b008a7805abb7b7ec667403\ClangCommentCommandInfo.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\AST\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]; 	Line 10786: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\4f43b9c638cd6c1d81fa9a9ebaa126f2\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\2eda59820b008a7805abb7b7ec667403\ClangCommentHTMLNamedCharacterReferences.rul",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11881:316,configurat,configuration,316,https://root.cern,https://github.com/root-project/root/issues/11881,4,"['Configurat', 'Release', 'configurat']","['Configuration', 'Release', 'configuration']"
Deployability,ROOT installs libraries at the top-level site-packages directory,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14917:5,install,installs,5,https://root.cern,https://github.com/root-project/root/issues/14917,1,['install'],['installs']
Deployability,"ROOT introduced a build flag in 6.26.00 that allowed you to build it using the `ryml` library instead of nlohmann-json as the backend for the JSON IO. But that was not particularly great. The `ryml` backend code is at risk of rotting, because to try and test it one needs a special ROOT build. It would be much better to just build both backends if `ryml` is installed on the system, and have a mechanism for developers to try this other backend. This is implemented in this commit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12221:359,install,installed,359,https://root.cern,https://github.com/root-project/root/pull/12221,1,['install'],['installed']
Deployability,"ROOT is expecting to be built with exceptions since years. The corresponding CMake configuration flag needs to be removed (after deprecation). Already deprecated in 6.28, to be removed in 6.30:; - jemalloc; - tcmalloc; - pyroot_legacy. Updated list of build options to deprecate in 6.30:; - exceptions; - pythia6_nolink; - pythia6; - pyroot-python2; - oracle",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9114:83,configurat,configuration,83,https://root.cern,https://github.com/root-project/root/issues/9114,2,"['Update', 'configurat']","['Updated', 'configuration']"
Deployability,ROOT needs an overlay files in the include directory during runtime; to correctly mount the system modulemaps for libc/STL. For this; we need to generate and install a new overlay file that points to; the *installed* modulemaps for those libraries. We can't use the existing modulemap as this one still points to the; original build directory. We also need to install the related stl/lib modulemaps.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2023:158,install,install,158,https://root.cern,https://github.com/root-project/root/pull/2023,3,['install'],"['install', 'installed']"
Deployability,"ROOT version of https://github.com/root-project/cling/pull/158 (but NOTE different directory; this patch needs to be applied to cling, too)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/697:99,patch,patch,99,https://root.cern,https://github.com/root-project/root/pull/697,1,['patch'],['patch']
Deployability,ROOT won't compile because of changes in the Python 3 API together with; GCC 6.1 release. The code changes fixes the issues on my machine running; Arch Linux (except for an error in Python 3.5 numpy/__multiarray_api.h),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/173:81,release,release,81,https://root.cern,https://github.com/root-project/root/pull/173,1,['release'],['release']
Deployability,"ROOT's ""dynamic path"" has some environment variables to control it. Those environment variables have some issues:. * They are dependant on the OS (DYLD* on macOS, LD_LIBRARY_PATH on Linux, etc); * LD_LIBRARY_PATH/etc modify the system's search path for dynamic libraries, which can result in all sorts of bad things. We would like to have a dedicated environment variable, that is; * OS independant.; * does only affect ROOT. Let's name it ROOT_LIBRARY_PATH (suggestion on mattermost.web.cern.ch). It was suggested to put this into `system.rootrc` and/or `.rootrc`. This has some issues:. * `.rootrc` is good for a per user solution. We would like to have a package level solution.; * `system.rootrc` is usually a place for the local sysadmin to modify. It could be used by a distribution package to put ""defaults"". But that's not really nice.; * Finally, `.rootrc` entries replace `system.rootrc` entries. So any package level configuration would be gone the moment, that the user sets `Unix.*.Root.DynamicPath`. So getting the above mentioned environment variable to work at a package level, means to put it into TUnixSystem.cpp. cc: @dennisklein",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7031:928,configurat,configuration,928,https://root.cern,https://github.com/root-project/root/pull/7031,1,['configurat'],['configuration']
Deployability,ROOT-5494: Update THDFS,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/89:11,Update,Update,11,https://root.cern,https://github.com/root-project/root/pull/89,1,['Update'],['Update']
Deployability,ROOT-9164: Update the list of libs provided by root-config with ROOTDataFrame and ROOTVecOps,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2043:11,Update,Update,11,https://root.cern,https://github.com/root-project/root/pull/2043,1,['Update'],['Update']
Deployability,ROOT-9661 Improve configuration using external clang,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3807:18,configurat,configuration,18,https://root.cern,https://github.com/root-project/root/pull/3807,1,['configurat'],['configuration']
Deployability,"ROOT-9739 Build Configuration Fixes (version 2), master branch (2018.10.23.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2833:16,Configurat,Configuration,16,https://root.cern,https://github.com/root-project/root/pull/2833,1,['Configurat'],['Configuration']
Deployability,"ROOT-9739 Build Configuration Fixes, master branch (2018.10.23.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2829:16,Configurat,Configuration,16,https://root.cern,https://github.com/root-project/root/pull/2829,1,['Configurat'],['Configuration']
Deployability,"ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1132,1): error C2661: 'std::vector<std::string,std::allocator<std::string>>::insert': no overloaded function takes 1 arguments [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; Done Building Project ""C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj"" (default targets) -- FAILED.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11153:2723,release,release,2723,https://root.cern,https://github.com/root-project/root/pull/11153,5,['release'],['release']
Deployability,"ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:699:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstdint>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/functional_hash.h:35:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/range_access.h:36:10: note: submodule of top-level module 'std' implicitly imported here; #include <initializer_list>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/range_access.h:37:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits> //",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:24281,Install,Installed,24281,https://root.cern,https://github.com/root-project/root/issues/10528,1,['Install'],['Installed']
Deployability,"RPageSinkBuf calls `ReservePage()` as part of a `CommitPageImpl()` call. This memory is release in `CommitClusterImpl()` by calling `ReleasePage()` accordingly. However, if `CommitClusterImpl()` is never invoked (e.g., because the 'small cluster' check failed in RNTuple.cxx:336), this memory is leaked.; This patch fixes that by making `RColumnBuf` adopt the pages. `DrainBufferedPages()` gives back the ownership to the caller, who is then responsible of calling `ReleasePage()`. FWIW, this bug was found while hunting the issues seen in the CI for the `RNTuple.SmallClusters` test. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13022:88,release,release,88,https://root.cern,https://github.com/root-project/root/pull/13022,5,"['Release', 'patch', 'release', 'update']","['ReleasePage', 'patch', 'release', 'updated']"
Deployability,"RPageSource and all its children are using exclusively the static version of RNTupleDecompressor::Unzip, so there's no need to keep it there for now. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16037:201,update,updated,201,https://root.cern,https://github.com/root-project/root/pull/16037,1,['update'],['updated']
Deployability,RResultPtr<T>::Release method added to RResultPtr.hxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7142:15,Release,Release,15,https://root.cern,https://github.com/root-project/root/pull/7142,1,['Release'],['Release']
Deployability,"RSION]; [--notebook NOTEBOOK]; [--web WEB]; [--web=<browser> WEB=<BROWSER>]; [dir]; [file:data.root]; [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show the ROOT banner; -a Show the ROOT splash screen; -config print ./configure options; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before executing; [file:data.root] Open the ROOT file data.root; [file1.C...fileN.C] Execute the the ROOT macro file1.C ... fileN.C; Exit status: 1; ```. ### Setup; This issue is reproducible on my laptop (x86_64 NixOS), LXPLUS7 LXPLUS8 and LXPLUS9. My laptop:; ```; $ root --version; ROOT Version: 6.26/08; Built for linuxx8664gcc on Jan 01 1980, 00:00:00; From @; $ nix-info -m; - system: `""x86_64-linux""`; - host os: `Linux 5.15.80, NixOS, 22.11 (Raccoon), 22.11.20221130.596a8e8`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.11.0`; - nixpkgs: `/nix/store/qwgw2b19ga8dr7c6wfpd6p87bdjyrnha-source`; ```. LXPLUS7:; ```; ROOT Version: 6.24/08; Built for linuxx8664gcc on Sep 29 2022, 13:04:57; From tags/v6-24-08@v6-24-08; ```. LXPLUS8:; ```; ROOT Version: 6.26/10; Built for linuxx8664gcc on Nov 16 2022, 10:42:54; From tags/v6-26-10@v6-26-10; ```. LXPLUS9:; ```; ROOT Version: 6.26/10; Built for linuxx8664gcc on Nov 16 2022, 10:42:54; From tags/v6-26-10@v6-26-10; ```. <!--; 1. ROOT version; 2. Operating system; 4. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11977:3183,install,install,3183,https://root.cern,https://github.com/root-project/root/issues/11977,1,['install'],['install']
Deployability,"RScanner iterates over all decls in our AST, but with modules we; have hidden decl from unimported submodules in our AST. As we; call Sema functions on these decls which use the normal clang; lookup that respects visibility, we suddenly get mysterious; lookup failures from inside Sema when running rootcling. This patch restricts RScanner to looking at visible decls, which; restores the original behavior where RScanner onlys sees visible decls; from included headers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/915:315,patch,patch,315,https://root.cern,https://github.com/root-project/root/pull/915,1,['patch'],['patch']
Deployability,"RUN ] RNTuple.UnsupportedStdTypes; [ OK ] RNTuple.UnsupportedStdTypes (3 ms); [ RUN ] RNTuple.Casting; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:280: Failure; Expected equality of these values:; 42; *fieldCast; Which is: 180388626432; [ FAILED ] RNTuple.Casting (56 ms); [ RUN ] RNTuple.TClass; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Warning in <[RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:19430,release,release,19430,https://root.cern,https://github.com/root-project/root/issues/12426,1,['release'],['release']
Deployability,RZip.h for 5-34-00-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/23:19,patch,patches,19,https://root.cern,https://github.com/root-project/root/pull/23,1,['patch'],['patches']
Deployability,"Ran every time by the CI and testing TThread, without reducing coverage. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13762:168,update,updated,168,https://root.cern,https://github.com/root-project/root/pull/13762,1,['update'],['updated']
Deployability,"Rather than constructing a different reader for each node that; needs it, with this patch we now leverage RColumnRegister as; a ""cache"" of RDefineReaders and RVariationReaders so that nodes; in the computation graph share the same reader objects (per; processing slot). This is analogous to what RLoopManager does; for RDSColumnReaders and RTreeColumnReaders. Sharing column readers across the computation graph will be useful; for bulk loading of event values (which we do not want to repeat; for different instances of a given column's reader).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10899:84,patch,patch,84,https://root.cern,https://github.com/root-project/root/pull/10899,1,['patch'],['patch']
Deployability,"Rather than reading from the file the value of kIsOnHeap, preserve the value that was calculated at object creation time (i.e. in the current execution). For example, for an embedded object (inside an object created on the heap or stack), the bit always need to be off (i.e. it can never be explicitly deleted). Fix #15964 ?. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15968:421,update,updated,421,https://root.cern,https://github.com/root-project/root/pull/15968,1,['update'],['updated']
Deployability,"Rather than reading from the file the value of kIsOnHeap, preserve the value that was calculated at object creation time (i.e. in the current execution). For example, for an embedded object (inside an object created on the heap or stack), the bit always need to be off (i.e. it can never be explicitly deleted). Fix #15964 ?; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15969:421,update,updated,421,https://root.cern,https://github.com/root-project/root/pull/15969,1,['update'],['updated']
Deployability,Re-download all Clad patches from GitHub,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12892:21,patch,patches,21,https://root.cern,https://github.com/root-project/root/pull/12892,1,['patch'],['patches']
Deployability,Really just a clean-up kind of patch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6864:31,patch,patch,31,https://root.cern,https://github.com/root-project/root/pull/6864,1,['patch'],['patch']
Deployability,Reapply fix lost in the LLVM 9 upgrade. This fix is in LLVM 10. Backported from llvm upstream; https://reviews.llvm.org/D74129,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8069:31,upgrade,upgrade,31,https://root.cern,https://github.com/root-project/root/pull/8069,1,['upgrade'],['upgrade']
Deployability,Reapply fix lost in the LLVM 9 upgrade. This fix is in LLVM 10. Backported from llvm upstream; https://reviews.llvm.org/D74129. (cherry picked from commit 01e3a904179f0ebb88edff3783708cf7215cb18b). Closes #9424,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9426:31,upgrade,upgrade,31,https://root.cern,https://github.com/root-project/root/pull/9426,1,['upgrade'],['upgrade']
Deployability,"Recent change to master fixed some tests which were excluded previously, so I reverted ""excluding tests"" patches and excluded three tests which were failing in current master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2040:105,patch,patches,105,https://root.cern,https://github.com/root-project/root/pull/2040,1,['patch'],['patches']
Deployability,"Recent changes that added support for jitted Book actions broke the; edge case in which the action helper takes no columns:; `df.Book(Helper{}, {})` now means ""jit this action"" rather than ""this; action does not take any columns"". With this patch, we resolve this ambiguity at runtime by looking at; the list of column names. A helper type is used to make sure that; compilation is fine in all cases. cc: @bendavid",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8353:241,patch,patch,241,https://root.cern,https://github.com/root-project/root/pull/8353,1,['patch'],['patch']
Deployability,Recent cmake version `3.27.2` makes following warnings:. ```; CMake Deprecation Warning at interpreter/cling/CMakeLists.txt:1 (cmake_minimum_required):; Compatibility with CMake < 3.5 will be removed from a future version of; CMake. Update the VERSION argument <min> value or use a ...<max> suffix to tell; CMake that the project does not need compatibility with older versions.; ```; Set in ` interpreter/cling` and `math/minuit2` this minimal version as 3.5 (release in 2018). Also for cling call `cmake_minimum_required` before calling `project`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13474:233,Update,Update,233,https://root.cern,https://github.com/root-project/root/pull/13474,2,"['Update', 'release']","['Update', 'release']"
Deployability,"Recent llvm versions use llvm::Error as a facility for error handling. It includes an ErrorInfoBase class which has virtual methods (with a pinned vtable in the object file). This makes it harder to include headers that use transitively include llvm/Support/Error.h crossing rtti/no-rtti worlds (that is llvm is compiled with -fno-rtti and TCling and friends with -frtti). Newer llvm versions have a lot of usage of llvm::Error in its header files and it is practically impossible to solve this problem by avoiding the headers that use ErrorInfoBase. There are two other alternatives. First we can outline the functions in Error.h which use ErrorInfoBase but then we will hit other things like RTTIRoot which also needs special treatment. Secondly, we can enable llvm's RTTI builds for ROOT and this is what this patch does.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10289:813,patch,patch,813,https://root.cern,https://github.com/root-project/root/pull/10289,1,['patch'],['patch']
Deployability,"Recent updated had made TClass::GetClass always returns an instance for std::pair even if there is no dictionary for the pair or it has not been instanced yet in the interpreter (step that can lead to autoparsing).; However, the offset and size calculations (guesses) in those cases is inadequate and sometimes leads to incorrect use (read/write) of the content of collection. See for example: https://github.com/cms-sw/cmssw/issues/30359#issuecomment-728121661",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6840:7,update,updated,7,https://root.cern,https://github.com/root-project/root/issues/6840,1,['update'],['updated']
Deployability,"Recently there are some stuck jobs on the new `mac12` and `mac13` nodes during `cmake` configuration that time out after 6 hours. From a quick survey among affected developers and confirmed in one case on the node, they are blocking on trying to clone a forked `roottest` which doesn't exist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14708:87,configurat,configuration,87,https://root.cern,https://github.com/root-project/root/issues/14708,1,['configurat'],['configuration']
Deployability,"Recently, in commit https://github.com/root-project/root/commit/47c250898f3d3a1bb1718c73b84014a70809ffdf, the algorithm to figure out the value; and shape servers of integrals was rewritten. However, the new; implementation analyzed the computation graph by pointer, which caused a; wrong list of servers if one passed clones of the integration variables; to the integral constructor. This commit fixes that, and also implements a unit test for this case. Closes https://github.com/root-project/root/issues/11637, as the issue was caused by the integration variable; wrongly being registered as a value server of the integral. This made; the reproducer code in the issue thread very slow, because the integral; was reevaluated for each event.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11662:333,integrat,integration,333,https://root.cern,https://github.com/root-project/root/pull/11662,2,['integrat'],['integration']
Deployability,"Redirect calls to:; * TGaxis::SetMaxDigits(); * TGaxis::GetMaxDigits(); * TGaxis::SetExponentOffset(). Let use these configurations also in TWebCanvas, which has access to; gStyle object. Small adjustment in TStyle class. Implement all these attributes in JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12513:117,configurat,configurations,117,https://root.cern,https://github.com/root-project/root/pull/12513,1,['configurat'],['configurations']
Deployability,"Reduce duration of DF unit tests, eliminating jitting in favor of compilation where possible and optimizing obvious parameters, all without loosing any coverage. # This Pull request:. ## Changes or fixes:; The df battery of unit tests now runs a few minutes faster than before. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13621:329,update,updated,329,https://root.cern,https://github.com/root-project/root/pull/13621,1,['update'],['updated']
Deployability,Ref: https://reviews.llvm.org/D128319. # This Pull request:. This reverts commit 71e133dd0391deac1cf3761d2c5c253b3cb247ff. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10826:196,update,updated,196,https://root.cern,https://github.com/root-project/root/pull/10826,1,['update'],['updated']
Deployability,"Related to #11245 . The `-O` option of hadd can be used to force the recompression of the whole target tree (including branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message.; The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome!. Other commits are style changes to the message for a clearer output and code. After this PR:; ```; $: hadd -h; usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]; [-cachesize CACHESIZE]; [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]; [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]; TARGET SOURCES. OPTIONS:; -a Append to the output; -k Skip corrupt or non-existent files, do not exit; -T Do not merge TTree objects; -O If hadd is used to merge TTree objects, compress the whole target tree; (including its branches and baskets) with the desired compression; algorithm. This can be set for example through the '-f' option; -v Explicitly set the verbosity level: 0 request no output, 99 is the; default; -j Parallelize the execution in multiple processes; -dbg Parallelize the execution in multiple processes in debug mode (Does; not delete partial files stored inside working directory); -d Carry out the partial multiprocess execution in the specified; directory; -n Open at most 'maxopenedfiles' at once (use 0 to request to use the; system maximum); -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to; disable); -experimental-io-features Used with an argument provided, enables the corresponding experimental; feature for output trees; -f Gives the ability to specify the compression level of the target file; (by default 4); -fk Sets the target file to contain the baskets with the same compression; as the input files (unless -O is specified). Compresses the meta data; using the compression level specified in the first input or the; compression setting after f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11254:264,update,updates,264,https://root.cern,https://github.com/root-project/root/pull/11254,1,['update'],['updates']
Deployability,"Related to #7125 . The file modules.idx is not delete upon doing a cleaning of build (and this is fatal because of #7125). ```; pcanal@Viroflay:~/root_working/build/pristine-opt$ ls -l lib/modules.idx; -rw-r--r-- 1 pcanal pcanal 286972 Sep 1 13:46 lib/modules.idx; pcanal@Viroflay:~/root_working/build/pristine-opt$ ninja clean; [1/1] Cleaning all built files...; Cleaning... 11131 files.; pcanal@Viroflay:~/root_working/build/pristine-opt$ ls -l lib/modules.idx; -rw-r--r-- 1 pcanal pcanal 286972 Sep 1 13:46 lib/modules.idx; ```. and even after the rebuild, it has not been updated at all.; ```; pcanal@Viroflay:~/root_working/build/pristine-opt$ ls -l lib/modules.idx; -rw-r--r-- 1 pcanal pcanal 286972 Sep 1 13:46 lib/modules.idx; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8959:576,update,updated,576,https://root.cern,https://github.com/root-project/root/issues/8959,1,['update'],['updated']
Deployability,Release Notes for changes in TNetXNGFile,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3538:0,Release,Release,0,https://root.cern,https://github.com/root-project/root/pull/3538,1,['Release'],['Release']
Deployability,Release Notes: python-dev required and 'python' variable deprecated,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5303:0,Release,Release,0,https://root.cern,https://github.com/root-project/root/pull/5303,1,['Release'],['Release']
Deployability,Release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15581:0,Release,Release,0,https://root.cern,https://github.com/root-project/root/pull/15581,1,['Release'],['Release']
Deployability,Release notes about includes optimization in ROOT headers [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5611:0,Release,Release,0,https://root.cern,https://github.com/root-project/root/pull/5611,1,['Release'],['Release']
Deployability,Release notes for TWebCanvas and JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3080:0,Release,Release,0,https://root.cern,https://github.com/root-project/root/pull/3080,1,['Release'],['Release']
Deployability,Release notes update,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4813:0,Release,Release,0,https://root.cern,https://github.com/root-project/root/pull/4813,2,"['Release', 'update']","['Release', 'update']"
Deployability,Release notes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2171:0,Release,Release,0,https://root.cern,https://github.com/root-project/root/pull/2171,2,['Release'],['Release']
Deployability,Releases notes [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4798:0,Release,Releases,0,https://root.cern,https://github.com/root-project/root/pull/4798,1,['Release'],['Releases']
Deployability,Rely on a configuration-time setting to decide whether experimental PyROOT is ON and set the environment accordingly. More info about the issue here:. https://sft.its.cern.ch/jira/browse/ROOT-10873,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5930:10,configurat,configuration-time,10,https://root.cern,https://github.com/root-project/root/pull/5930,1,['configurat'],['configuration-time']
Deployability,Remove ELISPDIR - nothing is installed in it anymore,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13714:29,install,installed,29,https://root.cern,https://github.com/root-project/root/pull/13714,1,['install'],['installed']
Deployability,Remove a .gitignore file in minuit2 which can cause the remaining of duplicate files in local repo after having build a standalone minuit2 tarball. The file was used to mask files which are copied inside the minuit2 source directory when building the standalone distribution. ; These files should be deleted after building the standalone distribution by a `make purge` command. . Update the documentation of building minui2 tarballs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5417:380,Update,Update,380,https://root.cern,https://github.com/root-project/root/pull/5417,1,['Update'],['Update']
Deployability,Remove remaining references to removed Java configuration variables,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2264:44,configurat,configuration,44,https://root.cern,https://github.com/root-project/root/pull/2264,1,['configurat'],['configuration']
Deployability,Remove the deprecated in the previous release code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4988:38,release,release,38,https://root.cern,https://github.com/root-project/root/pull/4988,1,['release'],['release']
Deployability,Removes MarkovChain interfaces that are one-time used in `MCMCInterval` . Now obtain the reduced markov chain data (also as Hist ) by calling `reduce` on the RooDataSet (which can be directly accessed through `MarkovChain::GetAsConstDataSet`). . Updates all `reduce` and `reduceEng`methods to const across `RooAbsData` and other RooFit classes with overrides.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16334:246,Update,Updates,246,https://root.cern,https://github.com/root-project/root/pull/16334,1,['Update'],['Updates']
Deployability,Rename RooHistFunc::getObservables to not hide; RooAbsArg::getObservables. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7911:132,release,release,132,https://root.cern,https://github.com/root-project/root/pull/7911,1,['release'],['release']
Deployability,Replace ROOT's own integral template type printing patches on top of Clang with newly landed upstream patches (needed to backport 2 more commits to commit the integral template type printing patch).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8173:51,patch,patches,51,https://root.cern,https://github.com/root-project/root/pull/8173,3,['patch'],"['patch', 'patches']"
Deployability,"Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %.; The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the `R__SUGGEST_ALTERNATIVE` macro. **For Reviewers**; Reviews are most appreciated in `RooAbsCollection.h` (interfaces) and maybe `RooAbsCollection.cxx`. This is the central change.; All other changes are mostly places where old iterators have been replaced by new iterators to make RooFit faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3345:276,update,updated,276,https://root.cern,https://github.com/root-project/root/pull/3345,1,['update'],['updated']
Deployability,"Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList, RooRefCountList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %.; The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the R__SUGGEST_ALTERNATIVE macro. This PR is identical to #3345, but more improvements were added on top of the branch used there. This is to test if the test failures on centos7 persist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3380:293,update,updated,293,https://root.cern,https://github.com/root-project/root/pull/3380,1,['update'],['updated']
Deployability,"Reproducer:. ```; [eguiraud@lxplus727 ~]$ source /cvmfs/sft.cern.ch/lcg/views/LCG_98python3/x86_64-centos7-gcc8-opt/setup.sh; [eguiraud@lxplus727 ~]$ python; Python 3.7.6 (default, Aug 12 2020, 09:46:40) ; [GCC 8.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from ROOT import TMVA; >>> from ROOT import TFile; Error in <RootX11ErrorHandler>: BadAccess (attempt to access private resource denied) (XID: 418, XREQ: 18); ```. This error is not printed with other LCG releases, e.g. LCG_99.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7162:509,release,releases,509,https://root.cern,https://github.com/root-project/root/issues/7162,1,['release'],['releases']
Deployability,"Reproducer:; ```; void gerrors() {; TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph with error bars"",200,10,700,500);. const Int_t n = 10;; Float_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; Float_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Float_t ex[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Float_t ey[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);; gr->SetTitle(""TGraphErrors Example"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""AP|>"");. c1->Update();; auto l = new TLegend(0.45,0.65,0.8,0.8,"""",""NDC"");; l->SetBorderSize(0.);; l->SetTextFont(42);; l->AddEntry(gr, ""TGraphErrors new title"", ""e"");; l->Draw();; }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14022:536,Update,Update,536,https://root.cern,https://github.com/root-project/root/pull/14022,1,['Update'],['Update']
Deployability,"Requires that TEnv:: Getvalue, Lookup are const as well.; Also mark Defined const. Local compilation of ROOT succeeds after the patch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1358:128,patch,patch,128,https://root.cern,https://github.com/root-project/root/pull/1358,1,['patch'],['patch']
Deployability,"Resolves root-project/cling#399; Fix the following linker errors:; ```; 253>cling.exp : error LNK2001: unresolved external symbol ""public: static class std::basic_string<char,struct std::char_traits,class std::allocator > __cdecl clang::QualType::getAsString(class clang::Type const *,class clang::Qualifiers)"" (?getAsString@QualType@clang@@sa?AV?$basic_string@DU?$char_traits@D@std@@v?$allocator@D@2@@std@@PEBVType@2@VQualifiers@2@@z); 253>cling.exp : error LNK2001: unresolved external symbol ""private: virtual void __cdecl llvm::raw_ostream::handle(void)"" (?handle@raw_ostream@llvm@@EEAAXXZ); 253>D:\work\libs\cling\src\build\Release\bin\cling.exe : fatal error LNK1120: 2 unresolved externals; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7645:629,Release,Release,629,https://root.cern,https://github.com/root-project/root/pull/7645,1,['Release'],['Release']
Deployability,"Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake.; Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:; It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13633:423,update,updated,423,https://root.cern,https://github.com/root-project/root/pull/13633,1,['update'],['updated']
Deployability,"Revert ""Do not install {Clang,Cling}Config.cmake in the project lib dir""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12333:15,install,install,15,https://root.cern,https://github.com/root-project/root/pull/12333,1,['install'],['install']
Deployability,"Revert ""Update concurrentfill.cxx (#8492)"" [skip-ci]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8495:8,Update,Update,8,https://root.cern,https://github.com/root-project/root/pull/8495,1,['Update'],['Update']
Deployability,"Revert ""[cmake] Update xrootd hash after a new version of the xrootd …",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11164:16,Update,Update,16,https://root.cern,https://github.com/root-project/root/pull/11164,1,['Update'],['Update']
Deployability,"Revert ""core/clingutils: improve configuration using external clang""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4259:33,configurat,configuration,33,https://root.cern,https://github.com/root-project/root/pull/4259,1,['configurat'],['configuration']
Deployability,Revert LLVM patch for win32,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12054:12,patch,patch,12,https://root.cern,https://github.com/root-project/root/pull/12054,1,['patch'],['patch']
Deployability,"Revert ROOT's ""&"" printing patch of LLVM and backport https://reviews.llvm.org/rG8518742104ab075296722ef6151f65aee7a0646d",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8066:27,patch,patch,27,https://root.cern,https://github.com/root-project/root/pull/8066,1,['patch'],['patch']
Deployability,Revert another LLVM patch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12074:20,patch,patch,20,https://root.cern,https://github.com/root-project/root/pull/12074,1,['patch'],['patch']
Deployability,Revert changes done for installations of pcms,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4775:24,install,installations,24,https://root.cern,https://github.com/root-project/root/pull/4775,1,['install'],['installations']
Deployability,Revert three more Clang patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13181:24,patch,patches,24,https://root.cern,https://github.com/root-project/root/pull/13181,1,['patch'],['patches']
Deployability,Reverting clang patch 'Work around ROOT-6966 to unblock CMS and ATLAS…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1796:16,patch,patch,16,https://root.cern,https://github.com/root-project/root/pull/1796,1,['patch'],['patch']
Deployability,"Reverting clang patch: ""PCH has partial names (include/TObject.h), us…",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1727:16,patch,patch,16,https://root.cern,https://github.com/root-project/root/pull/1727,1,['patch'],['patch']
Deployability,"Reverts root-project/root#2130:; ```; /mnt/build/jenkins/workspace/lcg_personal_experimental/BUILDTYPE/Release/COMPILER/clang600binutils/LABEL/centos7/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/newdelete/src/NewDelete.cxx:214:7: error: exception specification in declaration does not match previous declaration; void *operator new(size_t /*size*/, std::align_val_t /*al*/) throw(); ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2220:103,Release,Release,103,https://root.cern,https://github.com/root-project/root/pull/2220,1,['Release'],['Release']
Deployability,"Reverts root-project/root#9251 due to failures in LCG. In 1c38aa0 we made it possible to use installed json versions which do not have `json_fwd.h` to forward declare the json classes. However in this case, that brings the entire json package in the dictionaries. In turn, then we will need to build Json.pcm to avoid content duplication. This in turn requires LCG to provide ROOT_INCLUDE_PATH=/path/to/json at runtime. Is this all worth it?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9267:93,install,installed,93,https://root.cern,https://github.com/root-project/root/pull/9267,1,['install'],['installed']
Deployability,"Reviewers, please make sure that renaming this file still makes it ""findable"" by users! I don't know how references to this file are generated, and whether they need to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5678:172,update,updated,172,https://root.cern,https://github.com/root-project/root/pull/5678,1,['update'],['updated']
Deployability,"Right now the ExternalASTSources in LLVM have an awkward way; of implementing their generation counters, which provide an; incrementing UID for versioning the AST when it is changed; lazily by the ExternalASTSource (for example when more decls; are). The current implementation is based on having an counter in; each ExternalASTSource, but each ExternalASTSource actually; only refers to the top most ExternalASTSource of the current; ASTContext, which means that the counter suddenly resets; when we add any kind of new ExternalASTSource (and we have; no way to work around this). Also, some ExternalASTSources; like the ASTReader make assumptions that they are the top; most ExternalASTSource which means that as soon as we; overwrite the ASTReader, we suddenly have two counters; running providing conflicting information to anyone; querying the counters. This patch merges all these counters into one counter; which is in the ASTContext. This should get rid of; any more counter desyncronization problems when we; attach our own external sources or when parts of the; code make invalid assumptions about which external; source is currently the top most one in the ASTContext. Patch is upstreamed via LLVM phabricator review D39714.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1287:864,patch,patch,864,https://root.cern,https://github.com/root-project/root/pull/1287,2,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,"Right now we only generate modulemaps for the ROOT libraries which; are exposed to the user. But we also have generate dictionary; calls for dictionaries that are not exposed to the user and should; only be private (such as TBench, TMathCoreUnitDict etc.). Right now we fail when compiling root on those dictionaries as we; don't have a modulemap for those dictionaries and we don't generate; one. This will also break tests that use the generate dictionary; call as those also don't have a modulemap now. This patch reuses the existing CMake code for generating modulemaps; and also uses it in those cases to provide a dictionary that; rootcling can use to generate a C++ module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1091:511,patch,patch,511,https://root.cern,https://github.com/root-project/root/pull/1091,1,['patch'],['patch']
Deployability,Roc curve weights + update,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/525:20,update,update,20,https://root.cern,https://github.com/root-project/root/pull/525,1,['update'],['update']
Deployability,"RooDataSets can be written to ASCII files. However, the output stream is not exposed to the user, i.e., the user cannot modify e.g. the precision. By exposing the stream to the user, the data set can be written to any ostream with user-defined stream modifiers. The rf102 tutorial has been updated accordingly, input/output tests have been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3083:290,update,updated,290,https://root.cern,https://github.com/root-project/root/pull/3083,1,['update'],['updated']
Deployability,"RooFit currently includes the `RooCBShape` and `RooDSCBShape` to; represent the family of crystal ball distributions. The `RooCBShape`; only has a left tail, and `RooDSCBShape` has two independently; parametrized tails. Some users also want a crystal ball where the width of the Gaussian; core is different on the left and the right side (see e.g. Jira ticket; [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case; of an asymmetric Gaussian core, this commit implements a new; `RooCrystalBall` class that should cover all classes of crystal ball; shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not; necessary anymore. The new features of the `RooCrystalBall` class that make it different; from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian; core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core; (to replace `RooDSCBShape`), only left tail (to replace; `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values; with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare; values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration; ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7257:1498,integrat,integration,1498,https://root.cern,https://github.com/root-project/root/pull/7257,3,['integrat'],['integration']
Deployability,RooRealIntegral was configured to forcefully select all components when integrating.; This is not desired if single components should be projected out. The default has been; set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3905:72,integrat,integrating,72,https://root.cern,https://github.com/root-project/root/pull/3905,1,['integrat'],['integrating']
Deployability,RooRealIntegral was configured to forcefully select all components when integrating.; This is not desired if single components should be projected out. The default has been; set to not select all components. This fixes ROOT-10098. (cherry picked from commit 68f2aea99f92e9e90e345658d154164c3c96fa82),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3948:72,integrat,integrating,72,https://root.cern,https://github.com/root-project/root/pull/3948,1,['integrat'],['integrating']
Deployability,RooRealIntegral was configured to forcefully select all components when integrating.; This is not desired if single components should be projected out. The default has been; set to not select all components. This is meant to fix ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3908:72,integrat,integrating,72,https://root.cern,https://github.com/root-project/root/pull/3908,1,['integrat'],['integrating']
Deployability,"Roofit was using TInterpreter::Next, which was actually calling; TClingTypedefInfo::InternalNext. This function is iterating each decls; and is not efficient. Measured performance of this patch on stressRooFit; testcase and it didn't have a significant different but not making roofit; slower as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1713:188,patch,patch,188,https://root.cern,https://github.com/root-project/root/pull/1713,2,['patch'],['patch']
Deployability,Root CMake configuration should check against C++ standard and compiler version,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13886:11,configurat,configuration,11,https://root.cern,https://github.com/root-project/root/issues/13886,1,['configurat'],['configuration']
Deployability,"Root has two different ways to configure the build - the traditional configure script and cmake. The builds generated by the two systems are similar, but far from equivalent. Historically the configure script has been more feature complete and some things that the configure script is able to do are either missing or broken in the cmake build. However, new features are often only added to the cmake build. This has resulted in that today neither of the two is able to build root with a complete set of features. The cmake build is more standard and behaves in a more predictive way, e.g. it understands CFLAGS, LDFLAGS and friends which the configure script never did. It also integrates the test suite in the build and allows for running ""make test"", a feature that the configure script is missing. So the cmake build is in many ways better, if it wasn't for those missing and broken things mentioned earlier. This pull request is an attempt to address those missing and broken issues (though it fixes a few things for the configure script as well). Also contains a fix for ROOT-7326.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/153:679,integrat,integrates,679,https://root.cern,https://github.com/root-project/root/pull/153,1,['integrat'],['integrates']
Deployability,"Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/ext/type_traits.h:35:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/cpp_type_traits.h>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/move.h:57:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits> // Brings in std::declval too.; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_iterator.h:70:11: note: submodule of top-level module 'std' implicitly imported here; # include <type_traits>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:35:10: note: submodule of top-level module 'std' implicitly imported here; #include <iosfwd>; ^; While building module 'Core':; While building module 'R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:27483,Install,Installed,27483,https://root.cern,https://github.com/root-project/root/issues/10528,1,['Install'],['Installed']
Deployability,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9742:69,release,release,69,https://root.cern,https://github.com/root-project/root/issues/9742,2,"['configurat', 'release']","['configuration', 'release']"
Deployability,Rootcling always decided to take the most expensive path and make a; lookup even in the cases where it already has found the declaration; it looks for. This patch speeds up visibly rootcling dictionary generation time; and reduces the pcm size from 340MB to 165MB on my machine. It also; reduces the rss memory usage from 350MB to 250MB for ROOT with; runtime_cxxmodules. Patch by Axel Naumann(@Axel-Naumann) and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2421:157,patch,patch,157,https://root.cern,https://github.com/root-project/root/pull/2421,2,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,Rootcling builds a set of modules implicitly based on #including of a header; contained in the nominated module. The build system has no way to track such; dependencies and even if it could there would be no rule to execute to; regenerate the outdated module. This patch extends rootcling to also keep track of the implicitly generated; modules and delete them (to regenerate them). A more sustainable solution is to; request each module to be built explicitly which requires a bit of refactoring; in rootcling.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4219:265,patch,patch,265,https://root.cern,https://github.com/root-project/root/pull/4219,1,['patch'],['patch']
Deployability,Run the pull requests in Release mode only on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12564:25,Release,Release,25,https://root.cern,https://github.com/root-project/root/pull/12564,1,['Release'],['Release']
Deployability,"RunGraphs kindly warns the user if some of the results that were passed to it correspond to results that are already ""ready"" (i.e. for which the event loop has already run), since that is typically not the intended usage. At that point it should not quit though: it should run the event loop for the results that still need running. This patch fixes that. @vepadulano afaict the distributed version does not check this at all?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11337:338,patch,patch,338,https://root.cern,https://github.com/root-project/root/pull/11337,1,['patch'],['patch']
Deployability,"RunGraphs makes a summary log entry for the jitting time of all computation graphs that are being run concurrently. Generally this is ok, but in the case users specifically requested a log level of kDebug+10 or higher this would accidentally silence the logging of what code is being jitted.; With this patch, if log level is kDebug+10 or higher, RunGraphs avoids silencing inner logs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11832:303,patch,patch,303,https://root.cern,https://github.com/root-project/root/pull/11832,1,['patch'],['patch']
Deployability,"S/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:134:55: note: expanded from macro 'atomic_load'; #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST); ^; <built-in>:16:26: note: expanded from here; #define __ATOMIC_SEQ_CST 5; ^; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1077:33: error: expected ')'; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:134:55: note: expanded from macro 'atomic_load'; #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST); ^; <built-in>:16:26: note: expanded from here; #define __ATOMIC_SEQ_CST 5; ^; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1077:33: note: to match this '('; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:134:46: note: expanded from macro 'atomic_load'; #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST); ^; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1088:24: error: expected parameter declarator; template<class T> void atomic_s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6454:4828,install,install,4828,https://root.cern,https://github.com/root-project/root/issues/6454,1,['install'],['install']
Deployability,"SBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior; Project build successfully. ### To Reproduce; 1. Open a x64 Native Tools Command Prompt for VS 2019; 2. git clone --branch master https://github.com/root-project/root.git; 3. cd root; 4. mkdir build_amd64 && cd build_amd64; 5. pip install pytest; 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON ..; 6. cmake --build . --config Release. ### Setup; 1. Operating system: Windows 10; 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9487:3548,install,install,3548,https://root.cern,https://github.com/root-project/root/issues/9487,2,"['Release', 'install']","['Release', 'install']"
Deployability,SOFIE ONNX support breaks on macOS if own protobuf is provided and its also installed by homebrew,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14207:76,install,installed,76,https://root.cern,https://github.com/root-project/root/issues/14207,1,['install'],['installed']
Deployability,"Same as #3163, but to be applied onto v6-16-00-patches branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3182:47,patch,patches,47,https://root.cern,https://github.com/root-project/root/pull/3182,1,['patch'],['patches']
Deployability,"Same as https://github.com/root-project/root/commit/19caf55b88d16ac67d9bfb39380a4d1c89f935e6 but this time moving RKeyBlob out of the anon namespace which causes compile errors on windows (I missed this in the previous commit, now reverted). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15660:337,update,updated,337,https://root.cern,https://github.com/root-project/root/pull/15660,1,['update'],['updated']
Deployability,Same patch applied in master within bigger PR #5181,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5527:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/5527,2,['patch'],['patch']
Deployability,"SaveGraph mainly relied on static structures. Removed static maps, which were used to check if a define/filter/range node were already on the computation graph.; Solution is to pass a (non-static) map, which is created at each call of SaveGraph. Get rid of the static id initializer.; The size of the map of visited nodes is used to assign unique ids.; Now, also the action nodes are in the visited map.; The visited map is now only one and has signature std::unordered_map<void *, std::shared_ptr<GraphNode>> - in this manner, different type of nodes can use the same map. Tests were adapted accordingly. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9536:701,update,updated,701,https://root.cern,https://github.com/root-project/root/pull/9536,1,['update'],['updated']
Deployability,"ScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02); ==44592== by 0x899A53C: clang::Parser::TryAnnotateCXXScopeToken(bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02); ==44592== by 0x80E5246: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02); ==44592== by 0x801074B: TCling::GetClassSharedLibs(char const*) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02); ==44592== by 0x801507A: TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02); ==44592== by 0x4AB8C52: TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) (in /export/home/jb242989/root_v6.32.02/lib/libCore.so.6.32.02); ==44592== by 0x4AB98C0: TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, ...; ```. Are those a real leak (they accumulate and could have been deleted), hoarding (they accumulate, are in use and can not be delete until the end) or one time (they are just not cleaned-up at the end?). ### Reproducer. [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16393458/CreateTreeTestv2.tar.gz). ```; make; valgrind --suppression=$ROOTSYS/etc/valgrind-root.supp createTree; ```. ### ROOT version. Moving from 6.26/06 to 6.28/04 we’ve still a very large increase of mem leaks and it is still present in v6.32.02. ### Installation method. unknown. ### Operating system. Linux. ### Additional context. https://github.com/root-project/root/issues/13130",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16121:2623,Install,Installation,2623,https://root.cern,https://github.com/root-project/root/issues/16121,1,['Install'],['Installation']
Deployability,Script to update PDG table,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13323:10,update,update,10,https://root.cern,https://github.com/root-project/root/issues/13323,1,['update'],['update']
Deployability,"Second attempt at #5922, this time somewhat smaller patch without changing the TLS definition.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5971:52,patch,patch,52,https://root.cern,https://github.com/root-project/root/pull/5971,1,['patch'],['patch']
Deployability,See also the former PR that introduces this projected field: #12008. ## Checklist:; - [X] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12127:90,update,updated,90,https://root.cern,https://github.com/root-project/root/pull/12127,1,['update'],['updated']
Deployability,"See also this discussion here:; https://github.com/root-project/root/pull/15812#issuecomment-2252107168. The PR #15812 introduced a direct dependency of `graf3d/gl` on TASImage, which is only built if `asimage=ON`. It would be better if the PNG export would be done via the `TImage` plugin system, so there is no dependency at build time. Or if this can't be done, at least error out at configuration time if one attempts to build with this combination of flags. Here is the culprit:; https://github.com/root-project/root/blob/master/graf3d/gl/src/TGLSdfFontMaker.cxx#L198. @osschar @linev . See also:; * https://root.cern.ch/doc/master/classTASImage.html; * https://root.cern/doc/master/imgconv_8C.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16250:387,configurat,configuration,387,https://root.cern,https://github.com/root-project/root/issues/16250,1,['configurat'],['configuration']
Deployability,See https://github.com/root-project/jsroot/releases/tag/5.5.0 for details,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2296:43,release,releases,43,https://root.cern,https://github.com/root-project/root/pull/2296,1,['release'],['releases']
Deployability,See https://github.com/root-project/llvm-project/releases/tag/cling-llvm16-20240115-01 for a list of replaced commits.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14349:49,release,releases,49,https://root.cern,https://github.com/root-project/root/pull/14349,1,['release'],['releases']
Deployability,"See https://github.com/root-project/root/pull/9913. This resolved the problem seen at: https://github.com/cms-sw/cmssw/issues/36908#issuecomment-1036397481; and fix #9899. The problem is the rules are applied to a data member nested inside an object nested inside; an STL collection that is a new data member of the class reco::HaloClusterCandidateHCAL,; since it is a new member compared to the layout on file, none of the objects; from the new; member down to the object on which the rules need to be run) are actually streamed and the; code gathering the information to run the rule got a bit lost ; it is likely (I am checking; as we speak) that in previous release the rule was not even attempted to be run ... which; might actually be the desired behavior in this specific case. The solution is to have GatherArtificialElements stop drilling through data members which; are not stored in the existing TTree",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9927:662,release,release,662,https://root.cern,https://github.com/root-project/root/pull/9927,1,['release'],['release']
Deployability,See https://sft.its.cern.ch/jira/browse/ROOT-8180 ; This pull request implements the proposed patches there.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/188:94,patch,patches,94,https://root.cern,https://github.com/root-project/root/pull/188,1,['patch'],['patches']
Deployability,"See in-code comment for more details. Note: this bug is routinely seen on the CI, where it causes occasional failures to the tests in question. Despite this solution being very suboptimal (the bug is most likely still present in many places of our codebase and can be encountered by users in the wild) we should at least be able to remove the random CI failures on our side. A proper solution would be nice, but it seems hard to come up with one that doesn't have big performance implications. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16412:545,update,updated,545,https://root.cern,https://github.com/root-project/root/pull/16412,1,['update'],['updated']
Deployability,"Seems to be, buffer is not released correctly.; I guess, error should be fixed in cling repository first",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4897:27,release,released,27,https://root.cern,https://github.com/root-project/root/pull/4897,1,['release'],['released']
Deployability,SegFault in TBuildRealData::Inspect in root-5@v5-34-00-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9564:55,patch,patches,55,https://root.cern,https://github.com/root-project/root/issues/9564,1,['patch'],['patches']
Deployability,Segfault on hsimple.C in user-mode qemu cross-platform linux/arm64/v8 docker installation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13845:77,install,installation,77,https://root.cern,https://github.com/root-project/root/issues/13845,1,['install'],['installation']
Deployability,"Selection.C...; ==22765== Conditional jump or move depends on uninitialised value(s); ==22765== at 0x9D9A01A: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F2CBA: (anonymous namespace)::SymbolicallyEvaluateGEP(llvm::GEPOperator const*, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F35A1: (anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value const*, unsigned int, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F15DF: (anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap<llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo<llvm::Constant*>, llvm::detail::DenseMapPair<llvm::Constant*, llvm::Constant*> >&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F38B7: llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x91305C5: AddReachableCodeToWorklist(llvm::BasicBlock*, llvm::DataLayout const&, llvm::SmallPtrSetImpl<llvm::BasicBlock*>&, llvm::InstCombineWorklist&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9139861: combineInstructionsOverFunction(llvm::Function&, llvm::InstCombineWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, bool, llvm::LoopInfo*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11385:3041,release,release-master,3041,https://root.cern,https://github.com/root-project/root/issues/11385,1,['release'],['release-master']
Deployability,"Serious analyses involve running on MC samples which are tipically assigned a weight.; If `Filters` could be informed of event weights, `Report`s could take that into account (as requested at https://root-forum.cern.ch/t/rdataframe-feature-request-weighted-cut-reports/53570). Alternative we could add a mechanism to keep track of event weights separately, in a dedicated ""virtual"" column (that by default contains all ones, e.g., as discussed with G. Petrucciani from CMS a couple of times:. ```python; df.UpdateEventWeight(""w1""); .UpdateEventWeight(""w2""); .Filter(""x > 0""); .Histo1D(""x"", ""rdfeventweight_""); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12303:507,Update,UpdateEventWeight,507,https://root.cern,https://github.com/root-project/root/issues/12303,2,['Update'],['UpdateEventWeight']
Deployability,Set of macOS ARM patches by Fons,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6941:17,patch,patches,17,https://root.cern,https://github.com/root-project/root/pull/6941,1,['patch'],['patches']
Deployability,"SetRootSys is overwriting ROOTSYS every time:; ```; [yuka@yuka-arch normalroot]$ source bin/thisroot.sh; [yuka@yuka-arch normalroot]$ echo $ROOTSYS; /home/yuka/normalroot; [yuka@yuka-arch normalroot]$ export ROOTSYS=/hoge/huga; [yuka@yuka-arch normalroot]$ echo $ROOTSYS; /hoge/huga; [yuka@yuka-arch normalroot]$ bin/root.exe -l; root [0] gSystem->Getenv(""ROOTSYS""); (const char *) ""/home/yuka/normalroot""; root [1] .q; [yuka@yuka-arch normalroot]$ echo $ROOTSYS; /hoge/huga; ```. This is the right behavior as users can choose different ROOT binary in; cvmfs enviroment. However, as SetROOTSYS is reading the binary header; which stores the information of where the binary was built, ROOTSYS is; messed up when you relocate build directory (Without this patch):; ```; [yuka@yuka-arch ~]$ cp -r normalroot test; [yuka@yuka-arch ~]$ cd test; [yuka@yuka-arch test]$ export ROOTSYS=/hoge/huga; [yuka@yuka-arch test]$ echo $ROOTSYS; /hoge/huga; [yuka@yuka-arch test]$ bin/root.exe -l; root [0] gSystem->Getenv(""ROOTSYS""); (const char *) ""/home/yuka/normalroot"" // It should be ""/home/yuka/test""!; ```. ROOTSYS can be overwritten, but it should point to the actual binary; location. With this patch, ROOTSYS can point to the correct binary location:; ```; [yuka@yuka-arch ~]$ cp -r normalroot test; [yuka@yuka-arch ~]$ cd test; [yuka@yuka-arch test]$ export ROOTSYS=/hoge/huga; [yuka@yuka-arch test]$ echo $ROOTSYS; /hoge/huga; [yuka@yuka-arch test]$ bin/root.exe -l; root [0] gSystem->Getenv(""ROOTSYS""); (const char *) ""/home/yuka/test"" // Which is correct; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2366:755,patch,patch,755,https://root.cern,https://github.com/root-project/root/pull/2366,2,['patch'],['patch']
Deployability,"Setting the move constructor and move assignment operator to = default; causes linker errors because the copy assignment operator is not; implemented in the TIterator base class. Having the RooLinkedListIter move constructor and assignment operators; work is important to keep user code compatibility. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24 because problem exists only since https://github.com/root-project/root/pull/7641). With the current master, the linker error can be reproduces like this;; ```C++; void iterator_test() {. RooArgSet argSet1;; RooArgSet argSet2;. RooLinkedListIter iter{argSet1.iterator()};. iter = argSet2.iterator();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7910:359,release,release,359,https://root.cern,https://github.com/root-project/root/pull/7910,1,['release'],['release']
Deployability,"Several documentation updates. For TProfile, a ^2 was missing in the formulae, and weights weren't mentioned anywhere.; The TProfile one now typesets as follows:; ![image](https://user-images.githubusercontent.com/16205615/82306058-da170880-99be-11ea-9f37-4e90259e7f12.png). And TProfile2D:; ![image](https://user-images.githubusercontent.com/16205615/82306124-edc26f00-99be-11ea-9ecc-4745c374abf8.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5649:22,update,updates,22,https://root.cern,https://github.com/root-project/root/pull/5649,1,['update'],['updates']
Deployability,"Several small issues came up in the forum, and this is a collection of documentation updates, a few safety checks added to roofit and more understandable warning/error messages. Further, the class RooRealProxy (kind of a pointer with extra functionality) has been replaced by a templated class, as it always requires casting when the pointed-to object is used. Since it is internal to RooFit, this should not affect users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4739:85,update,updates,85,https://root.cern,https://github.com/root-project/root/pull/4739,1,['update'],['updates']
Deployability,Short cut to call Modified() and Update() in a single call and on Mac perform an additional ProcessEvents().; This will solve https://sft.its.cern.ch/jira/browse/ROOT-9200,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5927:33,Update,Update,33,https://root.cern,https://github.com/root-project/root/pull/5927,1,['Update'],['Update']
Deployability,"Short cut to call Modified() and Update() in a single call.; On Mac with Cocoa, it performs an additional ProcessEvents().",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14671:33,Update,Update,33,https://root.cern,https://github.com/root-project/root/pull/14671,1,['Update'],['Update']
Deployability,"Shortly after the branching of LLVM 16 (that we just upgraded to) early this year, upstream enabled the new JITLink linker by default for AArch64 and x86_64 on Linux: https://github.com/llvm/llvm-project/commit/6747fc07d1aa94e22622e278e5a02ba70675ac9b and https://github.com/llvm/llvm-project/commit/85c649bc02a6605f541b09b33a200a78275ed90f. We have our own version of this logic; https://github.com/root-project/root/blob/44299a000236b7d16a5458917167ebbd306e11c3/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp#L351-L365; so we can already follow that move, and IMHO we should do so to give it a maximum of testing, benefit from the improvements, and decouple it from future upgrades.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14209:53,upgrade,upgraded,53,https://root.cern,https://github.com/root-project/root/issues/14209,2,['upgrade'],"['upgraded', 'upgrades']"
Deployability,Should fix; ```; WARNING:discardable_shared_memory_manager.cc(197)] Less than 64MB of free space in temporary directory for shared memory files: 62; ```; and similar errors with headless chromium.; See https://stackoverflow.com/a/56941767. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13466:335,update,updated,335,https://root.cern,https://github.com/root-project/root/pull/13466,1,['update'],['updated']
Deployability,Should hold off merging this until last minute (I will push any further xroofit updates that come this week to it).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13717:80,update,updates,80,https://root.cern,https://github.com/root-project/root/pull/13717,1,['update'],['updates']
Deployability,Should solve different compilation warnings.; Use directly version from head - not waiting for next release which typically happens once a year.; Version 1.11 was released 10 September 2018 (10 days ago),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2649:100,release,release,100,https://root.cern,https://github.com/root-project/root/pull/2649,2,['release'],"['release', 'released']"
Deployability,Should we put this in as a canary?,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6596:27,canary,canary,27,https://root.cern,https://github.com/root-project/root/pull/6596,1,['canary'],['canary']
Deployability,Side effect when RBrowser runs and macro opens new TCanvas.; In such case `TCanvas::Update()` was not block and macro may fail because of it.; Now pending connection is registered and therefore `Update()` waits until connection really established. Use in demos.C normal rootgeom.C tutorial. In such case all macros works with web graphics.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14088:84,Update,Update,84,https://root.cern,https://github.com/root-project/root/pull/14088,2,['Update'],['Update']
Deployability,"Silent the following warnings when enabling arrow (`-Darrow=ON`) on Ubuntu:; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findre2.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""re2"", but; CMake did not find one. Could not find a package configuration file provided by ""re2"" with any of; the following names:. re2Config.cmake; re2-config.cmake. Add the installation prefix of ""re2"" to CMAKE_PREFIX_PATH or set ""re2_DIR""; to a directory containing one of the above files. If ""re2"" provides a; separate development package or SDK, be sure it has been installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a sepa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8832:266,configurat,configuration,266,https://root.cern,https://github.com/root-project/root/pull/8832,12,"['configurat', 'install']","['configuration', 'installation', 'installed']"
Deployability,"Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:; ```; Generating G__Core.cxx, ../bin/libCore.rootmap; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value); ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('; constexpr explicit(; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertibl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6143:89,update,update,89,https://root.cern,https://github.com/root-project/root/pull/6143,8,"['release', 'update']","['release', 'update']"
Deployability,"Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:; ```; ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type binding_completed = kind_type(bound+1);; ^; ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type detached = kind_type(binding_completed+1);; ^; ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type dying = kind_type(detached+1);; ^; 3 errors generated.; ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues; * https://github.com/root-project/root/issues/7063; * https://github.com/root-project/root/issues/8260; * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11179:914,release,release,914,https://root.cern,https://github.com/root-project/root/issues/11179,2,"['release', 'upgrade']","['release', 'upgrade']"
Deployability,Simplifies script and allows to capture (and log) essential config values. Some more drive-by code fixes. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13488:201,update,updated,201,https://root.cern,https://github.com/root-project/root/pull/13488,1,['update'],['updated']
Deployability,Simplify CMake integration of LLVM,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13221:15,integrat,integration,15,https://root.cern,https://github.com/root-project/root/pull/13221,1,['integrat'],['integration']
Deployability,"Simplify code, remove race condition. It didn't do much harm, but it's also not a good idea to show this in a tutorial ... - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9352:159,update,updated,159,https://root.cern,https://github.com/root-project/root/pull/9352,1,['update'],['updated']
Deployability,"Simultaneous.; The fit converges, but fails at the HESSE step, leading to an ""approximation only"" covariance matrix.; The label used is, from what I understood, based on label ordering and not the indices.; The mapping from category label to index however influences the fit result. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra parameters, successful HESSE. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void test_batchModeCategory() {; RooRealVar x(""x"", """", 0, 1);; RooRealVar rnd(""rnd"", """", 0, 1);; // change this mapping from labels to indices to change the fit result (slightly); RooThresholdCategory catThr(""cat"", """", rnd, ""a"", 2);; catThr.addThreshold(1./3, ""b"", 0);; catThr.addThreshold(2./3, ""c"", 1);; ; RooRealVar m(""m"", """", 0.5, 0, 1);; RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));; RooUniform rndPdf(""rndPdf"", """", rnd);; RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));; ; auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));; auto cat = dynamic_cast<RooCategory*>(ds->addColumn(catThr));; ; RooSimultaneous sim(""sim"", """", *cat);; sim.addPdf(g, ""a"");; sim.addPdf(g, ""b"");; sim.addPdf(g, ""c"");; ; sim.fitTo(*ds, RooFit::Save(true); , RooFit::BatchMode(true) // commenting this solves the issue; )->Print(""V"");; // _a_x parameter in results, cov matrix is ""Approximation only""; ; // works; //g.fitTo(*ds, RooFit::Save(true), RooFit::BatchMode(true))->Print(""V"");; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Centos7; ROOT 6.26.04 from LCG dev4. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10991:2517,install,install,2517,https://root.cern,https://github.com/root-project/root/issues/10991,1,['install'],['install']
Deployability,"Since MacOS blocks our second thread to update the GUI, rootbrowse will; run the event loop in the main thread if the underlying system is MacOS. This is a hotfix for ROOT-10787, but a general fix to enable the GUI in; Python script mode is still missing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6057:40,update,update,40,https://root.cern,https://github.com/root-project/root/pull/6057,2,"['hotfix', 'update']","['hotfix', 'update']"
Deployability,"Since ROOT 6.26/00, passing a null pointer to RooFit::ConditionalObservables results in a crash. It does not crash for ROOT 6.22/xx and 6.24/06. Reproducer:; ```; import ROOT; ws = ROOT.RooWorkspace(""ws""); # seg fault; ROOT.RooFit.ConditionalObservables(ws.set("""")); ```; Tested ROOT versions that crashes: 6.26/00 (installed from conda), 6.27/01 (from swan bleeding edge); Tested ROOT version that does not crash: 6.22/00 (LCG 98), 6.24/00 (LCG 100), 6.24/06 (LCG 101)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10232:316,install,installed,316,https://root.cern,https://github.com/root-project/root/issues/10232,1,['install'],['installed']
Deployability,"Since ROOT 6.30, we are not building ROOT with the `math/fftw`; subpackage anymore (`fftw3=OFF`). It is the interface between ROOT and; fftw3, but is incompatible with fftws GPL license. That means that for default ROOT builds, the `RooFFTConvPdf` class for; FFT convolutions is not working anymore, because it uses `math/fftw`. This commit implements a solution to make the `RooFFTConvPdf` work; again in this situation: the routine that uses fftw is declared; on-the-fly to the interpreter. This will work if the user has an; external install of `fftw3`, which is usually available in all Linux; distributions. Closes #14162. Note: the error that you get if `fftw3.h` can't be found looks like this:; ```txt; input_line_21:1:10: fatal error: 'fftw3.h' file not found; #include ""fftw3.h""; ^~~~~~~~~; [#0] ERROR:Eval -- RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header.; You have three options to fix this problem:; 1) Install fftw3 on your system so that the interpreter can find it; 2) In case fftw3.h is installed somewhere else,; tell ROOT with gInterpreter->AddIncludePath() where to find it; 3) Compile ROOT with the -Dfftw3=ON in the CMake configuration,; such that ROOT comes with built-in fftw3 convolution routines. terminate called after throwing an instance of 'std::runtime_error'; what(): RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14174:537,install,install,537,https://root.cern,https://github.com/root-project/root/pull/14174,4,"['Install', 'configurat', 'install']","['Install', 'configuration', 'install', 'installed']"
Deployability,"Since a few weeks, having pdfs with the same name in a RooSimultaneous fit with BatchMode didn't work anymore. This was because when setting up the computation graph for a given normalization set, all pdfs are cloned and redirected with `RooAbsArg::redirectServers()`, which doesn't work if servers have the same name. This commit suggests to instead delete the pdf servers and proxies and then recreate them by hand. Also, the logic of `RooSimultaneous::compileForNormSet()` was updated to iterate directly over the pdfs instead of iterating over the index categories and then getting the pdfs. The unit tests in `testAbsPdf` are now also parametrized to cover both BatchMode on and off, such that the case of the `RooSimultaneous` with one pdf in used in two channels is also covered buy the tests for BatchMode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12236:480,update,updated,480,https://root.cern,https://github.com/root-project/root/pull/12236,1,['update'],['updated']
Deployability,"Since newer releases, TBrowser considerably slowed down when used through an X-forward. I tried on SL7, root6.20, gcc9.2, C++17 (LCG_97a) & SL7, root6.22, gcc4.8,C++11. These versions have considerably slowed down. All worked well until at least 6.08 (SL6,gcc4.9,c++1y,LCG_88). Minimum example (try from home):; ```; ssh -C -X lxplus.cern.ch; root -l; new TBrowser; ```; -> Slow !. Better:; ```; ssh -C -X lxplus.cern.ch; cd /cvmfs/sft.cern.ch/lcg/releases/LCG_80/ROOT/6.04.06/x86_64-cc7-gcc48-opt/bin; . thisroot.sh; root -l; new TBrowser; ```; -> good. This issue is probably related to the new --web option, or some anti-aliasing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6730:12,release,releases,12,https://root.cern,https://github.com/root-project/root/issues/6730,2,['release'],['releases']
Deployability,"Since some time back the gradient boosting option of TMVA is called; ""BoostType=Grad"", not ""GradBoost"". This updates textual output to use; the new name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1971:109,update,updates,109,https://root.cern,https://github.com/root-project/root/pull/1971,1,['update'],['updates']
Deployability,"Since the LLVM upgrade, the following four tests:; ```; projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend; projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex; projectroot.roottest.root.io.complex.roottest_root_io_complex_readcomplex; projectroot.roottest.root.io.cpp11Containers.roottest_root_io_cpp11Containers_Names; ```; fail with; ```; In module 'std' imported from input_line_1:1:; /Library/Developer/CommandLineTools/usr/include/c++/v1/type_traits:1427:8: error: 'std::__is_same_uncvref<char [6], std::basic_string<char, std::char_traits<char>, std::allocator<char> > >' has different definitions in different modules; first difference is defined here found 0 base classes; struct __is_same_uncvref : _IsSame<typename __uncvref<_Tp>::type,; ^; /Library/Developer/CommandLineTools/usr/include/c++/v1/type_traits:1427:8: note: but in 'std.type_traits' found 1 base class; struct __is_same_uncvref : _IsSame<typename __uncvref<_Tp>::type,; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12003:15,upgrade,upgrade,15,https://root.cern,https://github.com/root-project/root/issues/12003,1,['upgrade'],['upgrade']
Deployability,"Since the distributed RDataFrame feature is experimental let's give it access to more modern features of the Python language. 3.7 seems a good compromise between maturity (released in October 2018) and features (typing, dataclasses). **NOTE**:; I'm uncertain about whether giving a message at configure time that DistRDF is active in the build process. I have put a simple message for now, could be changed or removed. Let me know your opinions",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9060:172,release,released,172,https://root.cern,https://github.com/root-project/root/pull/9060,1,['release'],['released']
Deployability,"Since the new defaults have been setup (ie the new ""Clean Style""); the bar color for graphs was by default white (equal t the frame color).; As the bars are fill area only (no borders) they were invisible by default.; This patch make sure the bar color is different form the frame color.; This PR fixes: https://github.com/root-project/root/issues/9870",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9885:223,patch,patch,223,https://root.cern,https://github.com/root-project/root/pull/9885,1,['patch'],['patch']
Deployability,"Since the upgrade to LLVM 13, at least two tests are failing because of broken interactions with multiple interpreters:; * `CodeUnloading/AtExit.C` does not find the symbol `gChild`.; * `MultipleInterpreters/MultipleInterpreters.C` cannot find the symbol `_ZN5cling7runtime6gClingE` / `cling::runtime::gCling` during `ChildInterp.echo()` (the first usage to construct `cling::Interpreter ChildInterp(*gCling, 1, argV);` seems fine). Based on this, one might theorize that the child interpreter doesn't have access to symbols declared in its parent (not sure how this worked before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12455:10,upgrade,upgrade,10,https://root.cern,https://github.com/root-project/root/issues/12455,1,['upgrade'],['upgrade']
Deployability,"Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with; ```; cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed.; #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13; #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18; #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50); #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf); #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5); #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79); #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426); #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4); #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14; #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37; #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28; #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3; #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1948:3; #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12457:10,upgrade,upgrade,10,https://root.cern,https://github.com/root-project/root/issues/12457,1,['upgrade'],['upgrade']
Deployability,"Since the upgrade to LLVM 13, the JIT infrastructure takes ownership of the Module. After JIT compilation, we get back a (const) pointer to the compiled module. This fixes the Cling test `ErrorRecovery/StoredState.C`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12456:10,upgrade,upgrade,10,https://root.cern,https://github.com/root-project/root/pull/12456,1,['upgrade'],['upgrade']
Deployability,"Since this change https://github.com/root-project/root/pull/8556 in the root master; We see some failures in DD4hep tests against the LCG Dev3 installation, more details in https://github.com/AIDASoft/DD4hep/pull/857#issuecomment-904434545. Our tests are passing again if patching out the `!fElements &&` from this line. https://github.com/root-project/root/blob/5d536b29d7ce437aad79ff046788735a33fb1dbe/geom/geom/src/TGeoMaterial.cxx#L803. Ping @agheata",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8892:143,install,installation,143,https://root.cern,https://github.com/root-project/root/issues/8892,2,"['install', 'patch']","['installation', 'patching']"
Deployability,"Since we re-organized a few things on the website, the links in doxygen need to be updated accordingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16107:83,update,updated,83,https://root.cern,https://github.com/root-project/root/pull/16107,1,['update'],['updated']
Deployability,"Sizes which are specified when canvas is created, was not properly initialized with web canvas.; Therefore web browser was using default values (500x500) to adjust browser window size. Also adjust frame wight margin when palette should be drawn. Update JSROOT with several fixes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13195:246,Update,Update,246,https://root.cern,https://github.com/root-project/root/pull/13195,1,['Update'],['Update']
Deployability,"Skip CI for the moment, i need to test it a bit more. Naming is probably not ideal. Introduce a new R__NEW_TBB macro to address the change in interface in TBB 2021 and adapt the forward declaration of task_arena accordingly. Deals with the problem @mrodozov reported in issue https://github.com/root-project/root/issues/6933 and by @krasznaa in PR https://github.com/root-project/root/pull/6174 (in whose conversation I first noticed the problem and then immediately forgot about what the real issue was and focused on the code, apologies for that). *Note*: This does not solve the ideal situation in which we can live not forward declaring `tbb::task_arena` and keep tbb hidden from the public interfaces, but patches ROOT to work with the new OneAPI and TBB versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7059:711,patch,patches,711,https://root.cern,https://github.com/root-project/root/pull/7059,1,['patch'],['patches']
Deployability,"Small patches that piled up during developing a feature. Since they are unrelated, we can review them ahead of time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6626:6,patch,patches,6,https://root.cern,https://github.com/root-project/root/pull/6626,1,['patch'],['patches']
Deployability,"Small update. When working with the cross validation manual, I came across these inconveniences.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1694:6,update,update,6,https://root.cern,https://github.com/root-project/root/pull/1694,1,['update'],['update']
Deployability,Small updates to GenVector,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2341:6,update,updates,6,https://root.cern,https://github.com/root-project/root/pull/2341,1,['update'],['updates']
Deployability,"Snapshot, Cache, Define and Filter did not check that the types of; columns used as arguments in jitted code were valid (in particular,; that the type of custom columns was correctly understood by cling).; This patch provides a function that performs the validity check,; GetValidatedArgTypes, that is used everywhere instead of GetColumnTypes; (now unused and therefore deleted) and ColumnName2ColumnTypeName. An exception with a user-friendly error message is thrown in case of; error, which fixes ROOT-10458.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5595:211,patch,patch,211,https://root.cern,https://github.com/root-project/root/pull/5595,1,['patch'],['patch']
Deployability,"So far we create our DeclCollector in the CIFactory and then tried to; get this variable back in the IncrementalParser by casting the; ASTConsumer of our compiler instance to a DeclCollector. This strategy; fails as soon as we want to have multiple collectors and start using; the clang multiplexer as this call will now fail (e.g. in this case to; have another ASTConsumer that looks in the C++ modules case for what; libraries we need to link - and the best way to add this is via; the multiplexed ASTConsumer that clang provides). This patch moves the responsibility for the DeclCollector to the; caller that relies on getting a DeclCollector back, which is in this; case the constructor of IncrementalParser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/714:539,patch,patch,539,https://root.cern,https://github.com/root-project/root/pull/714,1,['patch'],['patch']
Deployability,"So far we just hard-coded the default definitions that LLVM uses to; the CLING_CXXFLAGS. This means that once LLVM actually changes; its compile defintions, code that uses the CLING_CXXFLAGS is no; longer in sync and starts reading invalid memory and so on. This patch extracts these flags from LLVM now and properly adds; them to the CLING_CXXFLAGS instead of hardcoding them. This fixes the failing roottest-root-aclic-misc-assertROOT7027 test. Thanks to Axel for debugging this!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/967:263,patch,patch,263,https://root.cern,https://github.com/root-project/root/pull/967,1,['patch'],['patch']
Deployability,So far we only trigger an assertion in LLVM when we can't find the; modulemap file which is not very user-friendly. With this patch; we actually prints an error message in this situation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/527:126,patch,patch,126,https://root.cern,https://github.com/root-project/root/pull/527,1,['patch'],['patch']
Deployability,"So far, ROOT, in particular the `roofit_multiprocess` feature was depending on a feature developed by @egpbos that was not part of the ZeroMQ 4.3.4 release yet. Therefore, it was a bit awkward to check if ZeroMQ had that feature. Now that it's released, we can just do a proper cmake version check. The only caveat is that ZeroMQ needs to be built with `-DENABLE_DRAFTS`; to work for `roofit_multiprocess`, which is explained in the build; options documentation. Also, move some compilation flags to specifically RooFitZMQ, where they; are needed. This PR superseeds two other PRs:; * https://github.com/root-project/root/pull/13995; * https://github.com/root-project/root/pull/9473",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14003:148,release,release,148,https://root.cern,https://github.com/root-project/root/pull/14003,2,['release'],"['release', 'released']"
Deployability,"So far, the `TBranch::GetAddress` method returned a `char *`. This; causes incompatibility with PyROOT, because `char *` is automatically; converted to a Python string, which is the wrong thing to for an; address. This made the return value unusable in PyROOT. That's a bug that; currently prevents us from reimplementing some pythonizations in native; Python. Therefore, the return type of `TBranch::GetAddress()` was changed to; `void *` in this release. Even if this change is not backwards; compatible for typing reasons, the returned value is the same. With this change, the code is also more consistent because; `GetAddress()` and `SetBranchAddress()` use the same type for the; address.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14444:448,release,release,448,https://root.cern,https://github.com/root-project/root/pull/14444,1,['release'],['release']
Deployability,"So far, the whole HistFactory package was not built if `xml=OFF`, even; if only one part of HistFactory uses TXML: the `ConfigParser` class and; it's executable wrapper `hist2workspace`. With this commit, we only refrain from building the ConfigParser and the; hist2workspace executable if `xml=OFF`, but still build the rest of; HistFactory. The reason for doing this now was the RooFitHS3 package: it depends on; HistFactory, but doesn't use the XML-specific classes. After this; commit, RooFitHS3 builds also with `xml=OFF`. The RooStats tutorials that depend on `hist2workspace` are now also; disabled if XML is not ON. This PR should fix the compiler errors reported on the forum:; https://root-forum.cern.ch/t/installing-root-error-on-ubuntu/49146",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10104:716,install,installing-root-error-on-ubuntu,716,https://root.cern,https://github.com/root-project/root/pull/10104,1,['install'],['installing-root-error-on-ubuntu']
Deployability,"Solves problem with `rootbrowse` utility. In PyROOT there are different ways how event loop is running.; Finally there is special thread where gSystem->ProcessEvents() regularly called. In such special case webgui should be informed that ProcessEvents called from special thread - ; via `gEnv->SetValue(""WebGui.ExternalProcessEvents"", ""yes"")`.; In such case RWebWindowManager tries to detect thread id and really use ProcessEvents context to process WebGui functionality. In such configuration extra http thread not required and will be disabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7948:480,configurat,configuration,480,https://root.cern,https://github.com/root-project/root/pull/7948,1,['configurat'],['configuration']
Deployability,"Some columns may have no pages in a given cluster (e.g. a field with type `std::string` that contains no data). In such cases, it is still okay to use `CommitSealedPageV()`. However, the previous implementation of `RColumnBuf::HasSealedPagesOnly()` prevented that. This pull request fixes the issue and updates the unit tests accordingly. ## Checklist:; - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12980:303,update,updates,303,https://root.cern,https://github.com/root-project/root/pull/12980,2,['update'],"['updated', 'updates']"
Deployability,"Some headers contain redundant header guards around #include directives like this:. #ifndef ROOT_TTree; #include ""TTree.h""; #endif. This patch removes the #ifndef's around these includes as they don't serve any practical purpose and are no longer part of the current ROOT coding convention. This patch also fixes the 153 typos that are contained in the symbols of the #ifndef directives.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/341:137,patch,patch,137,https://root.cern,https://github.com/root-project/root/pull/341,2,['patch'],['patch']
Deployability,"Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory; * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration; * No need to check `R__HAS_MATHMORE` in roofitmore sources; * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13915:38,configurat,configuration,38,https://root.cern,https://github.com/root-project/root/pull/13915,3,['configurat'],['configuration']
Deployability,"Some libraries are layered can depend on other libraries on a private paths. That is, libA can depend on libB which is neither on the LD_LIBRARY_PATH nor on a known system path. The posix linker injects ""variables"" such as @rpath which is expanded at link time to resolve the libraries on a relative path. Prior to this patch, cling's Dyld-based symbol resolution could not trace down such cases causing failures in symbol resolution when a symbol is only defined in libB (a private library). This patch implements the basic posix linker substitutions allowing cling's Dyld-based symbol resolution implementation to follow more closely the linker rules. ## Performance. |platform|test|master|PRv1|PRv2| mem master|mem PRv2|; |:--------|:---|:---------:|:-----------:|:-----------:|:-----------:|:-----------:|; |ubu20|roottest-python-pythonizations|6.5|6.55|6.65|342076|347168|; |ubu20|roottest-cling|112.8|114.53|181.26|411048|416036|; |ubu20|roottest-python|148.5|136.26|144.72|394292|397120|; |ubu20|roottest-root-hist|16.78|17.35|15.45|465156|235084|; |ubu20|roottest-root-math|28.28|27.89|27.40|424072|371256|; |ubu20|roottest-root-tree|462.84|510.59|465.79|796512|797992|; |ubu20|roottest-root-treeformula|117.53|129.16|114.44|261184|260168|; |ubu20|root-io-stdarray|66.90|67.89|65.71|263424|255120|; |ubu20|roottest-root-treeformula|117.55|129.10|; |osx 10.15|roottest-python-pythonizations|17.25|16.06|; |osx 10.15|roottest-cling|346.06|343.46|; |osx 10.15|roottest-root-hist|36.06|36.22|; |osx 10.15|roottest-root-math|49.78|52.42|; |osx 10.15|root-io-stdarray|119.32|118.73|. That PR should reduce the number of `stat` calls improving #7774. Kudos Alexander Penev (@alexander-penev).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6969:320,patch,patch,320,https://root.cern,https://github.com/root-project/root/pull/6969,2,['patch'],['patch']
Deployability,Some numbered list did not show properly in release notes 6.24,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7789:44,release,release,44,https://root.cern,https://github.com/root-project/root/pull/7789,1,['release'],['release']
Deployability,Some of the newly added python versions of RooFit tutorials from PR https://github.com/root-project/root/pull/8091 need to be vetoes in some build configurations. I checked the `CMakeLists.txt` file for vetes C++ tutorials to see where I was missing to veto a corresponding new python tutorial. This fixes issue https://github.com/root-project/root/issues/8245.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8248:147,configurat,configurations,147,https://root.cern,https://github.com/root-project/root/pull/8248,1,['configurat'],['configurations']
Deployability,"Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7348:13,install,install,13,https://root.cern,https://github.com/root-project/root/pull/7348,3,"['install', 'patch', 'upgrade']","['install', 'patch', 'upgrade']"
Deployability,"Some systems install Vc under /usr/include which makes it reachable from within; rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the; corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue; where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where; we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7927:13,install,install,13,https://root.cern,https://github.com/root-project/root/pull/7927,3,"['install', 'patch', 'upgrade']","['install', 'patch', 'upgrade']"
Deployability,"Some tests are failing with modules such with redefinition errors; (for example `roottest-cling-parsing-scopeDict-build`). The reason for this is that we include all headers that form; the C++ module again to make sure the module is complete (some; rootcling invocations don't have all headers of the module as; arguments, most notably the Core module). The first inclusion; of these headers happens from the normal rootcling code. This patch changes this behavior that we only include the; *missing* headers that are necessary to make the C++ module; complete and not all headers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1335:437,patch,patch,437,https://root.cern,https://github.com/root-project/root/pull/1335,1,['patch'],['patch']
Deployability,"Sometime happens that `zoombox == 0` and ROOT crashes.; It happens in our QtROOT interface, where event sequence could be slightly different as with normal X.; Would be nice, if patch also will go into 6.10 branch",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1061:178,patch,patch,178,https://root.cern,https://github.com/root-project/root/pull/1061,1,['patch'],['patch']
Deployability,Soon-to-be-released Clang 15 complains:; ```; a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11167:11,release,released,11,https://root.cern,https://github.com/root-project/root/pull/11167,2,['release'],['released']
Deployability,Soon-to-be-released Clang 15 complains:; ```; a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]; ```; and; ```; passing arguments to a function without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11168:11,release,released,11,https://root.cern,https://github.com/root-project/root/pull/11168,1,['release'],['released']
Deployability,Soon-to-be-released Clang 15 will complain:; ```; warning: unqualified call to 'std::move' [-Wunqualified-std-cast-call]; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11163:11,release,released,11,https://root.cern,https://github.com/root-project/root/pull/11163,1,['release'],['released']
Deployability,Sorry Javi!. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9831:108,update,updated,108,https://root.cern,https://github.com/root-project/root/pull/9831,2,['update'],['updated']
Deployability,"Sorry for spamming PRs!. #2420 Implements the fix with an updated backport of `std::make_unique`. However, a solution with `std::vector` is probably more feasible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2422:58,update,updated,58,https://root.cern,https://github.com/root-project/root/pull/2422,1,['update'],['updated']
Deployability,"Sorry, I thought these were already merged into the 6.24 branch, but now that 6.24/02 has been released, I realized that they were not. None of these changes are essential to have, but it would be nice to have them as part of 6.24/04 in any case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8550:95,release,released,95,https://root.cern,https://github.com/root-project/root/pull/8550,1,['release'],['released']
Deployability,"Sorry, this is my third PR on this subject. This patch will fix [this](https://github.com/root-project/root/issues/6748) issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7132:49,patch,patch,49,https://root.cern,https://github.com/root-project/root/pull/7132,1,['patch'],['patch']
Deployability,"Special builds are those builds that test particular configurations, which are not meant to be considered for binaries of releases. Besides the new category, two special builds are introduced:; - The ""march=native"" build, that fixes #12291; - The ""runtime modules off"" build",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15412:53,configurat,configurations,53,https://root.cern,https://github.com/root-project/root/pull/15412,2,"['configurat', 'release']","['configurations', 'releases']"
Deployability,"Sporadic test failures are caused by the randomness of the test input.; (For some inputs the training does not converge). This patch ""fixes""; this by removing the randomness from the input to the tests. One source of randomness still remains, the dataloader shuffles the; batches internally, relying on a source of randomness that is not; reachable from the outside. However, the variability in test output is _significantly_ reduced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2251:127,patch,patch,127,https://root.cern,https://github.com/root-project/root/pull/2251,1,['patch'],['patch']
Deployability,Start up+release notes v614,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4312:9,release,release,9,https://root.cern,https://github.com/root-project/root/pull/4312,1,['release'],['release']
Deployability,Start up+release notes v616,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4313:9,release,release,9,https://root.cern,https://github.com/root-project/root/pull/4313,1,['release'],['release']
Deployability,Start up+release notes v618,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4314:9,release,release,9,https://root.cern,https://github.com/root-project/root/pull/4314,1,['release'],['release']
Deployability,"Starting from ROOT 6.24.00 we support WLCG Bearer Tokens [1] through Davix, but we still are missing infrastructure for testing them.; [1] https://root.cern/releases/release-62400/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8216:157,release,releases,157,https://root.cern,https://github.com/root-project/root/issues/8216,2,['release'],"['release-', 'releases']"
Deployability,"Starting from the `debian:sid` Docker image, create the following environment:; ```; apt update && apt dist-upgrade; apt install cmake gcc g++ git libxrootd-client-dev ninja-build python3; ```; Then clone `root.git` and configure + build with; ```; cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -Dx11=OFF ../root/; ninja; ```; Afterwards try executing `./bin/root.exe tutorials/dataframe/df103_NanoAODHiggsAnalysis.C`. It will hang and setting `XRD_LOGLEVEL=Debug` reveals:; ```; [2023-02-06 12:00:28.136048 +0000][Debug ][XRootDTransport ] [eospublic.cern.ch:1094.0] Sending authentication data; [2023-02-06 12:00:28.137346 +0000][Debug ][XRootDTransport ] [eospublic.cern.ch:1094.0] Trying to authenticate using krb5; [2023-02-06 12:00:28.137406 +0000][Debug ][XRootDTransport ] [eospublic.cern.ch:1094.0] Cannot get credentials for protocol krb5: Seckrb5: No or invalid credentials; No credentials cache found (p=xrootd/eospublic.cern.ch@CERN.CH).; [2023-02-06 12:00:28.137968 +0000][Debug ][XRootDTransport ] [eospublic.cern.ch:1094.0] Trying to authenticate using gsi; [2023-02-06 12:00:32.761097 +0000][Debug ][XRootDTransport ] [eospublic.cern.ch:1094.0] Cannot get credentials for protocol gsi: Secgsi: ErrParseBuffer: unknown CA: cannot verify server certificate: kXGS_init; ```. Instead, installing the `xrootd-client` package and running; ```; xrdcp root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod_skimmed/SMHiggsToZZTo4L.root .; ```; works just fine - the `Debug` log shows that it proceeds with `Trying to authenticate using uni` (after `Cannot get credentials for protocol gsi` was also signaled kind of immediately).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12231:89,update,update,89,https://root.cern,https://github.com/root-project/root/issues/12231,5,"['Release', 'install', 'update', 'upgrade']","['Release', 'install', 'installing', 'update', 'upgrade']"
Deployability,StreamerInfo corruption or loss upon TFile update,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14171:43,update,update,43,https://root.cern,https://github.com/root-project/root/issues/14171,1,['update'],['update']
Deployability,"Strip of ../ so that the search finds a valid longest match. With the upcoming upgrade of LLVM 13, this would otherwise lead to an error ""File name too long"" but it's already wrong now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10387:79,upgrade,upgrade,79,https://root.cern,https://github.com/root-project/root/pull/10387,1,['upgrade'],['upgrade']
Deployability,"Support now using Linear updates for edges, nodes and globals and support also null updates. When no updates are provided, the output nodes/edges/globals should be equal to input ones This PR provides now the support for this in the parsing and in the generated code.; The tutorial TMVA_SOFIE_GNN_Parser.py creates as example a graph_nets model containing an output transform where the edge update is Linear and the Node/global updates is Null.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14262:25,update,updates,25,https://root.cern,https://github.com/root-project/root/pull/14262,5,['update'],"['update', 'updates']"
Deployability,Switch CI to v6-30-00-patches. [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13839:22,patch,patches,22,https://root.cern,https://github.com/root-project/root/pull/13839,1,['patch'],['patches']
Deployability,Symlink creation at installation time does not respect DESTDIR (used for staged installations),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7964:20,install,installation,20,https://root.cern,https://github.com/root-project/root/issues/7964,2,['install'],"['installation', 'installations']"
Deployability,Sync JSROOT with v6-22-00-patches branch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5723:26,patch,patches,26,https://root.cern,https://github.com/root-project/root/pull/5723,1,['patch'],['patches']
Deployability,Synchronizes with this upstream commit and directly makes use of the new; API to avoid a patch:; https://github.com/wlav/CPyCppyy/commit/993b17bce2f43516a85931b40035ac7252e2ab7e,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15788:89,patch,patch,89,https://root.cern,https://github.com/root-project/root/pull/15788,1,['patch'],['patch']
Deployability,"T);; *setResultType = nullptr;; return 0;; ```. The call stack here is. ```; #0 0x00007fffef9dde70 in cling::Interpreter::unload(cling::Transaction&)@plt; (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #1 0x00007fffefbf28ce in cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #2 0x00007fffefb854d9 in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #3 0x00007fffefb06c54 in TCling::GetInterpreterTypeName(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool); (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #4 0x00007ffff560f184 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #5 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #6 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #7 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #8 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7657:12555,patch,patches,12555,https://root.cern,https://github.com/root-project/root/issues/7657,1,['patch'],['patches']
Deployability,"T-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed.; ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```; #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (; this=0x7fffef6df2e8); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257; #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768; #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., ; instance=0x7fffef6df2c0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791; #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (; this=0x7fffffff4430, onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341; #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, ; onlyDirect=1); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350; #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355; #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, ; cl=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11259:2145,patch,patches,2145,https://root.cern,https://github.com/root-project/root/issues/11259,2,['patch'],['patches']
Deployability,"T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195; #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823; #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096; #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true); at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140; #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270; #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096; #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233; #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045; #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065; #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457; #35 0x0000000000401009 in TMethodCall::Exec",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2776:8573,patch,patches,8573,https://root.cern,https://github.com/root-project/root/pull/2776,2,['patch'],['patches']
Deployability,"TALL_CMAKEDIR}` to the relevant binary, include and library directories. This can be a problem, especially when these paths may be evaluated from a different system folder assumed by CMake (e.g. when `CMAKE_INTSTALL_CMAKEDIR` is not the same for ROOT and CMake) as well as in other cases, when relative paths are not appropriate. Thus, it is safer in the general case to have these relative paths resolved to absolute system paths immediately before being passed to a caller. This merge request tries to accomplish just that with complete transparency and zero side-effects. It has been tested and deployed in Arch Linux x86_64, CMake 3.16.4, GCC 9.2.1:; - resulting relevant CMake config:; ```cmake; #----------------------------------------------------------------------------; # Configure the path to the ROOT headers, using a relative path if possible.; # This is only known at CMake time, so we expand a CMake supplied variable.; #. # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_INCLUDE_DIRS ""${_thisdir}/../../../include"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_INCLUDE_DIRS ""${_ROOT_INCLUDE_DIRS}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_LIBRARY_DIR ""${_thisdir}/../../root"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_LIBRARY_DIR ""${_ROOT_LIBRARY_DIR}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_BINDIR ""${_thisdir}/../../../bin"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_BINDIR ""${_ROOT_BINDIR}"" REALPATH). # Deprecated value, please don't use it and use ROOT_BINDIR instead.; get_filename_component(ROOT_BINARY_DIR ""${ROOT_BINDIR}"" REALPATH); ```; - CMake runtime check:; ```bash; $ cmake --find-package -DNAME=ROOT -DCOMPILER_ID=GNU -DLANGUAGE=CXX -DMODE=EXI",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5084:1071,install,install,1071,https://root.cern,https://github.com/root-project/root/pull/5084,1,['install'],['install']
Deployability,"TBB Compatibility Update, master branch (2020.08.12.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6174:18,Update,Update,18,https://root.cern,https://github.com/root-project/root/pull/6174,1,['Update'],['Update']
Deployability,"TBranchElement: do not set fOnfileObject for collection parent (type 3 or 4). This assignment is both unnecessary and harmfull. It is unnecessary because the pushd and popd of the onfile object address; for those cases is already handle by the usage of PushDataCache and PopDataCache; action for the branches of type 3 and 4 (via their configuration). It is harmfull because the type of the used/seen in the sub-branches might; be completely different from the type of the collection content. For example, this code was crashing some CMS jobs because the sub-branches; that had a ""OnfileObject"" corresponded to a nested sub-object (of type; reco::ParticleState) and then this was (unconditionally) associated with; the head node of the collection, which contained reco::PFCandidate objects; (One of PFCandidate base class contains a reco::ParticleState sub-object). The assignment is triggered when visiting one of the child branch (type 31 or 41); of the collection parent branch. This is a fix for the main branch commit 875e8fb91418f9e520e5d9b22fb1d32f4a42faf0; which is fix for the issue #7754.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9798:336,configurat,configuration,336,https://root.cern,https://github.com/root-project/root/pull/9798,1,['configurat'],['configuration']
Deployability,TBuffer-releated patches for 5- 34-00 branch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/44:17,patch,patches,17,https://root.cern,https://github.com/root-project/root/pull/44,1,['patch'],['patches']
Deployability,"TBufferFile::ReadObjectAny does not correctly support schema evolution,; because the fact that there is a conversion never gets passed to the; streamer. This was originally reported in ROOT-8367. See there for a reproducer.; This implements the fix proposed in that report. ATLAS trigger code relies on this. I currently have a workaround in ATLAS,; but i'd like to be able to remove that. Should probably go into 6.24-patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8222:419,patch,patches,419,https://root.cern,https://github.com/root-project/root/pull/8222,1,['patch'],['patches']
Deployability,"TClass::Init>: no dictionary for class MyEvent is available; ***********************************; * Row * Instance * data.firs *; ***********************************; * 0 * 0 * 3 *; ***********************************; ***********************************; * Row * Instance * data.seco *; ***********************************; * 0 * 0 * 5 *; * 0 * 1 * 7 *; ***********************************; free(): invalid next size (fast); ```. ### Backtrace; ```; #0 0x00007ffff6674a4f in raise () from /lib64/libc.so.6; #1 0x00007ffff6647db5 in abort () from /lib64/libc.so.6; #2 0x00007ffff66b7057 in __libc_message () from /lib64/libc.so.6; #3 0x00007ffff66be1bc in malloc_printerr () from /lib64/libc.so.6; #4 0x00007ffff66bfb58 in _int_free () from /lib64/libc.so.6; #5 0x00007ffff77bb30f in TClass::Destructor (this=this@entry=0x20ee770, obj=<optimized out>, dtorOnly=dtorOnly@entry=false) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5460 ; #6 0x00007fffe03c2cf3 in TBranchElement::ReleaseObject (this=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 ; #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 ; #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 ; #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 ; #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 ; #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 ; #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 ; #13 0x00007ffff777c508",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9543:1230,Release,ReleaseObject,1230,https://root.cern,https://github.com/root-project/root/issues/9543,1,['Release'],['ReleaseObject']
Deployability,"TClassEdit::EModType) () from /sw/atlas/sw/lcg/releases/LCG_101_ATLAS_14/ROOT/6.24.06/x86_64-centos7-gcc11-opt/lib/libCore.so; #9 0x00007f68343f23f1 in TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, std::char_traits<char> >) () from /sw/atlas/sw/lcg/releases/LCG_101_ATLAS_14/ROOT/6.24.06/x86_64-centos7-gcc11-opt/lib/libCore.so; #10 0x00007f683440dc8b in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) () from /sw/atlas/sw/lcg/releases/LCG_101_ATLAS_14/ROOT/6.24.06/x86_64-centos7-gcc11-opt/lib/libCore.so; #11 0x00007f683441e338 in TClassRef::InternalGetClass() const () from /sw/atlas/sw/lcg/releases/LCG_101_ATLAS_14/ROOT/6.24.06/x86_64-centos7-gcc11-opt/lib/libCore.so; #12 0x00007f682e411d18 in TScopeAdapter::Init(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool) () from /sw/atlas/Athena/22.0.60/InstallArea/x86_64-centos7-gcc11-opt/lib/libDataModelRoot.so; ```. The place in the code where it's crashing in GetSplit after it calls; to StdLen:. ```; if ( mode & kDropStd) {; unsigned int offset = (0==strncmp(""const "",full.c_str(),6)) ? 6 : 0;; RemoveStd( full, offset );; }; ```. where RemoveStd is inlined:. ```; static void RemoveStd(std::string &name, size_t pos = 0); {; size_t len = StdLen({name.data()+pos,name.length()-pos});; if (len) {; ```. So, it calls to StdLen, which apparently then crashes by branching to 0.; It's unfortunately difficult to then tell exactly why that happened.; FWIW, the registers at the crash were:. ```; rip: 0033:0000000000000000 eflags: 0000000000010202; rax: 00000000ffffffeb rbx: 0000000000000220; rcx: 0000000000000078 rdx: 0000000000000000; r08: ffffffffffffffff r09: 00007f68354af4d0; r10: 72543a3a444f4178 r11: 0000000000000006; r12: 00000000961170c0 r13: 00007f67e4395a90; r14: 0000000000000000 r15: 00007f683459fb22; rsi: 00000000961170c0 rdi: 000000000000001f; rbp: 00007f67e4",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10353:1742,Install,InstallArea,1742,https://root.cern,https://github.com/root-project/root/issues/10353,1,['Install'],['InstallArea']
Deployability,"TCling::IsLoaded was impressively slow because it's allowing ""header""; input file. If you already know that your file is a library, it's better; to use IsLibraryLoaded as this makes a difference in performance. Modules, w/o this patch; ```; Processing tutorials/hsimple.C...; hsimple : Real Time = 0.08 seconds Cpu Time = 0.07 seconds; (TFile *) 0x5563018a1d30; Processing /home/yuka/CERN/ROOT/memory.C...; cpu time = 1.524314 seconds; sys time = 0.157075 seconds; res memory = 546.867 Mbytes; vir memory = 895.184 Mbytes; ```; With this patch; ```; Processing tutorials/hsimple.C...; hsimple : Real Time = 0.06 seconds Cpu Time = 0.04 seconds; (TFile *) 0x555b420dca90; Processing /home/yuka/CERN/ROOT/memory.C...; cpu time = 0.470026 seconds; sys time = 0.056668 seconds; res memory = 299.688 Mbytes; vir memory = 560.188 Mbytes; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2128:229,patch,patch,229,https://root.cern,https://github.com/root-project/root/pull/2128,2,['patch'],['patch']
Deployability,TCling::UpdateListOfLoadedSharedLibraries() Linux thread safety,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6797:8,Update,UpdateListOfLoadedSharedLibraries,8,https://root.cern,https://github.com/root-project/root/issues/6797,1,['Update'],['UpdateListOfLoadedSharedLibraries']
Deployability,"TClingCallFunc provides an interface between compiled and interpreted code. That is, we can create at compile time a function to be called by the interpreter and get back its result into compiled code. To do that we require connecting to a function declaration available in the interpreter and calling it by setting input arguments. However, the input arguments are set with the SetArg which can resolve to a type and argument representation different from the signature of the interpreter function we will call. This is practically not a problem integral types because their representation is mostly the same. The problem becomes visible when we call SetArg with a `double` and the function signature expects a `float`. That works out of the box when the compiler can see both ends and insert proper representation casts. Unfortunately, when crossing the compiler/interpreter boundary we use `void*` and that information is lost. This patch adds some representation adjustments so that the compiled code (SetArg) and the interpreted code (CallFunc) can agree on the memory representation before calling. Fixes #14405",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14853:936,patch,patch,936,https://root.cern,https://github.com/root-project/root/pull/14853,1,['patch'],['patch']
Deployability,"TClingCallFunc provides an interface between compiled and interpreted code. That is, we can create at compile time a function to be called by the interpreter and get back its result into compiled code. To do that we require connecting to a function declaration available in the interpreter and calling it by setting input arguments. However, the input arguments are set with the SetArg which can resolve to a type and argument representation different from the signature of the interpreter function we will call. This is practically not a problem integral types because their representation is mostly the same. The problem becomes visible when we call SetArg with a double and the function signature expects a float. That works out of the box when the compiler can see both ends and insert proper representation casts. Unfortunately, when crossing the compiler/interpreter boundary we use void* and that information is lost. This patch adds some representation adjustments so that the compiled code (SetArg) and the interpreted code (CallFunc) can agree on the memory representation before calling. Fixes https://github.com/root-project/root/issues/14405",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14888:930,patch,patch,930,https://root.cern,https://github.com/root-project/root/pull/14888,1,['patch'],['patch']
Deployability,"TDataFrame's user guide uses the term ""column"" interchangeably with ""branch"". At the same time, ""column"" is preferred as it is more general and will still be appropriate when TDataFrame will read data formats other than ROOT's. This commit updates the user-facing method signatures and the method documentations to use preferably use ""column"". This commit also adds some minor improvements to method descriptions.; It introduces no functional changes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/814:240,update,updates,240,https://root.cern,https://github.com/root-project/root/pull/814,1,['update'],['updates']
Deployability,TDataSource upgrade,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1219:12,upgrade,upgrade,12,https://root.cern,https://github.com/root-project/root/pull/1219,1,['upgrade'],['upgrade']
Deployability,TDirectory file space should never be released.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5342:38,release,released,38,https://root.cern,https://github.com/root-project/root/pull/5342,1,['release'],['released']
Deployability,TEveElement.cxx:664; 15: Assuming field 'fDestroyOnZeroRefCnt' is true in /opt/root_src/graf3d/eve/src/TEveElement.cxx:665; 16: Left side of '&&' is true in /opt/root_src/graf3d/eve/src/TEveElement.cxx:664; 17: Assuming field 'fDenyDestroy' is <= 0 in /opt/root_src/graf3d/eve/src/TEveElement.cxx:665; 18: Taking true branch in /opt/root_src/graf3d/eve/src/TEveElement.cxx:664; 19: Assuming the condition is false in /opt/root_src/graf3d/eve/src/TEveElement.cxx:667; 20: Taking false branch in /opt/root_src/graf3d/eve/src/TEveElement.cxx:667; 21: Assuming 'gDebug' is <= 0 in /opt/root_src/graf3d/eve/src/TEveElement.cxx:677; 22: Taking false branch in /opt/root_src/graf3d/eve/src/TEveElement.cxx:677; 23: Memory is released in /opt/root_src/graf3d/eve/src/TEveElement.cxx:681; 24: Returning; memory was released in /opt/root_src/graf3d/eve/src/TEveElement.cxx:650; 25: Returning; memory was released in /opt/root_src/graf3d/eve/src/TEveElement.cxx:1345; 26: Returning; memory was released via 1st parameter in /opt/root_src/graf3d/eve/src/TEveElement.cxx:359; 27: Use of memory after it is freed in /opt/root_src/graf3d/eve/src/TEveElement.cxx:361; /opt/root_src/graf3d/eve/src/TEveFrameBox.cxx:65:40: warning: Value stored to 'p' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'p' is never read in /opt/root_src/graf3d/eve/src/TEveFrameBox.cxx:65; /opt/root_src/graf3d/eve/src/TEveFrameBox.cxx:83:40: warning: Value stored to 'p' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'p' is never read in /opt/root_src/graf3d/eve/src/TEveFrameBox.cxx:83; /opt/root_src/graf3d/eve/src/TEveGeoNode.cxx:86:11: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Calling 'TEveGeoNode::DumpShapeTree' in /opt/root_src/graf3d/eve/src/TEveGeoNode.cxx:303; 2: Assuming 'tnode' is equal to null in /opt/root_src/graf3d/eve/src/TEveGeoNode.cxx:324; 3: Assuming pointer value is null in /opt/root_src/graf3d/eve/src/TEveGeoNode.cxx:324,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7531:4939,release,released,4939,https://root.cern,https://github.com/root-project/root/issues/7531,1,['release'],['released']
Deployability,"TFormula generates a function on the fly along with a trampoline function; which ensures uniform calling of it. Once compiled, the function can be; called on different data and multiple times. We extend this concept by computing the gradient of the nominated function.; The gradient generation is done by clad and TFormula wraps it in a similar; easy-to-call trampoline function. Patch by Aleksandr Efremov(@efremale) and me!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2745:380,Patch,Patch,380,https://root.cern,https://github.com/root-project/root/pull/2745,1,['Patch'],['Patch']
Deployability,TFractionFitter:: updated documentation to be consistent with code,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4558:18,update,updated,18,https://root.cern,https://github.com/root-project/root/pull/4558,1,['update'],['updated']
Deployability,"TH1::Clone calls TH1::Copy which might published the copy-into object. to the ListOfCleanups.; Clone can call RecursiveRemove, for example via TCheckHashRecursiveRemoveConsistency; when dictionary information is initialized, so we need to keep obj->fFunction valid; during its execution and protect the update with the write lock. This issues was seen as a crash in roottest-root-multicore-threadExecutor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1818:303,update,update,303,https://root.cern,https://github.com/root-project/root/pull/1818,1,['update'],['update']
Deployability,"TH2::Fill(const char *namex, const char *namey, Double_t w) doesn't update fTsumwxy",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11746:68,update,update,68,https://root.cern,https://github.com/root-project/root/issues/11746,1,['update'],['update']
Deployability,"TL;DR:; Jit `auto f1(..) { ... }` instead of `auto l1 = [](..) { ... };`. Now that we have C++14 support available, we can jit functions; with auto return types instead of lambda expressions as helper; functions for filters and defines. Functions might compile a bit; faster (it might matter when we have thousands) and make our; jitted code a bit more readable. There is also a chance that it will help with some symbol resolution issues with `perf` and jitted code (cc: @amadio ). Most of the patch is non-functional renames of variables and functions,; the only functional change is:. ```diff; --- a/tree/dataframe/src/RDFInterfaceUtils.cxx; +++ b/tree/dataframe/src/RDFInterfaceUtils.cxx; @@ -229,7 +229,7 @@ BuildLambdaString(const std::string &expr, const ColumnNames_t &vars, const Colu; };. std::stringstream ss;; - ss << ""[]("";; + ss << ""("";; for (auto i = 0u; i < vars.size(); ++i) {; std::string fullType;; const auto &type = varTypes[i];; @@ -274,7 +274,7 @@ static std::string DeclareLambda(const std::string &expr, const ColumnNames_t &v; - const auto lambdaBaseName = ""lambda"" + std::to_string(exprMap.size());; + const auto lambdaBaseName = ""func"" + std::to_string(exprMap.size());; const auto lambdaFullName = ""R_rdf::"" + lambdaBaseName;. - const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + "" = "" + lambdaExpr + ""\nusing "" +; + const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + lambdaExpr + ""\nusing "" +; lambdaBaseName + ""_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype("" +; lambdaBaseName + "")>::ret_type;\n}"";; ROOT::Internal::RDF::InterpreterDeclare(toDeclare.c_str());; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10626:495,patch,patch,495,https://root.cern,https://github.com/root-project/root/pull/10626,2,"['patch', 'update']","['patch', 'updated']"
Deployability,"TLS is currently not suppored in the JIT. However, it's possible to; enable emulated TLS support in LLVM which means that we now support; TLS across all architectures. The performance downsides of this; should be neglectiable and can be easily worked around (by merging; TLS variables into a single one). Patch created with a lot of help from Lang Hames and Pavel Labath!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1208:305,Patch,Patch,305,https://root.cern,https://github.com/root-project/root/pull/1208,1,['Patch'],['Patch']
Deployability,TMVA Multiclass gui updates,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/707:20,update,updates,20,https://root.cern,https://github.com/root-project/root/pull/707,1,['update'],['updates']
Deployability,TMVA Userguide Update,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/316:15,Update,Update,15,https://root.cern,https://github.com/root-project/root/pull/316,1,['Update'],['Update']
Deployability,TMVA missing protection against mis-configuration.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15211:36,configurat,configuration,36,https://root.cern,https://github.com/root-project/root/issues/15211,1,['configurat'],['configuration']
Deployability,"TNamedBranchProxy did not implement a Hash method.; Therefore when adding TNamedBranchProxy instances to the THashList dedicated to their bookkeping in TTreeReader TObject::Hash was used.; Unfortunately when trying to find the TNamedBranchProxies, their name was used and the hash was built differently by THashList (based on the name).; In order to fix this the following steps were taken.; - THashList was replaced by an unordered_map with names as keys and unique_ptr<TNamedBranchProxy> as values. The unique_ptr is used to automatically manage ownership.; - The methods of TTreeReader were adapted to use this new container as well as the code in TTreeReaderValue and TTreeReaderArray. A real usecase from CMS where the mass of the W boson is studied shows a significant speedup (30%).; The code uses TDataFrame and several nodes are created which read from the same branch in an input tree which holds weights in a collection.; This configuration stressed the performance degradation pattern fixed by this commit as it triggered multiple times the deserialisation of the ""weights branch"". Thanks to Elisabetta Manca and Lorenzo Bianchini for providing the bug report and initial reproducer. These changes will need to be backported at least to ROOT 6.12",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1768:938,configurat,configuration,938,https://root.cern,https://github.com/root-project/root/pull/1768,1,['configurat'],['configuration']
Deployability,TPaletteAxis menu update,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11536:18,update,update,18,https://root.cern,https://github.com/root-project/root/pull/11536,1,['update'],['update']
Deployability,TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming field 'fHasModRoot' is false in /opt/root_src/net/net/src/TWebFile.cxx:501; 2: Taking true branch in /opt/root_src/net/net/src/TWebFile.cxx:501; 3: Calling 'TWebFile::ReadBuffers10' in /opt/root_src/net/net/src/TWebFile.cxx:502; 4: Calling 'TWebFile::SetMsgReadBuffer10' in /opt/root_src/net/net/src/TWebFile.cxx:550; 5: Calling default constructor for 'TUrl' in /opt/root_src/net/net/src/TWebFile.cxx:268; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling default constructor for 'TPBHandleDSType' in /opt/root_src/proof/proofbench/src/TProofBenchDataSet.cxx:66; 2: Calling default constructor for 'TObject' in /opt/root_src/proof/proofbench/inc/TProofBenchTypes.h:95; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'stoptimer' is true in /opt/root_src/proof/proof/src/TVirtualPacketizer.cxx:246; 2: Taking true branch in /opt/root_src/proof/proof/src/TVirtualPacketizer.cxx:246; 3: Calling 'TVirtualPacketizer::HandleTimer' in /opt/root_src/proof/proof/src/TVirtualPacketizer.cxx:246; 4: Assuming the condition is false in /opt/root_src/proof/proof/src/TVirtualPacketizer.cxx:285; 5: expanded from macro 'PDB' in /opt/root_src/proof/proof/inc/TProofDebug.h:57; 6: Left side of '&&' is false in /opt/root_src/proof/proof/src/TVirtualPacketizer.cxx:285; 7: expanded from macro 'PDB' in /opt/root_src/proof/proof/inc/TPro,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412:61537,Update,UpdateIsOnHeap,61537,https://root.cern,https://github.com/root-project/root/issues/7412,1,['Update'],['UpdateIsOnHeap']
Deployability,TStreamerElement not properly updated when pointee TClass is replaced.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6767:30,update,updated,30,https://root.cern,https://github.com/root-project/root/issues/6767,1,['update'],['updated']
Deployability,"TThreadedObject currently has a fixed amount of available slots,; the number of which can be set at construction time. This makes; it impossible to use TThreadedObject inside TBB tasks safely, because; TBB can potentially swap out worker threads for different threads at; runtime, resulting in TThreadedObject counting more thread ID's than; slots, and therefore in out-of-bound accesses to its contents. With this patch, TThreadedObject just appends a new slot when needed,; so it nevers runs out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5464:415,patch,patch,415,https://root.cern,https://github.com/root-project/root/pull/5464,1,['patch'],['patch']
Deployability,TTree::CopyAddress: update array allocation for all leaves.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5844:20,update,update,20,https://root.cern,https://github.com/root-project/root/pull/5844,1,['update'],['update']
Deployability,"TTree::CopyAddresses has the built-in pre-condition that the input and; output branches are of the same kind. Clones might be added, however,; for which the pre-condition is violated. This is currently the case,; for example, with certain usages of RDataFrame::Snapshot, which might; create an output branch that is a simple TBranch while the input branch; is e.g. a TBranchElement. This results in wrong data being written out. With this patch we detect this case and complain.; A proper fix will be proposed soon. The issue is tracked as #8295.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8314:439,patch,patch,439,https://root.cern,https://github.com/root-project/root/pull/8314,2,['patch'],['patch']
Deployability,TTree::Draw expression was mail-formed in some case. Use TWebCanvas by default in RBrowser. Update JSROOT to support more kind of log scale,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12312:92,Update,Update,92,https://root.cern,https://github.com/root-project/root/pull/12312,1,['Update'],['Update']
Deployability,TTreeCache::FillBuffer Updates,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2787:23,Update,Updates,23,https://root.cern,https://github.com/root-project/root/pull/2787,1,['Update'],['Updates']
Deployability,TTreeCache::FillBuffer updates.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2786:23,update,updates,23,https://root.cern,https://github.com/root-project/root/pull/2786,1,['update'],['updates']
Deployability,"TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #26 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #27 0x00007ffff560ee22 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #28 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #29 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #30 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #31 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #32 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #33 0x00007ffff5606b70 in TClass::LoadClassDefault(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #34 0x00007ffff560ee9c in TClass::GetClass(",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7657:7243,patch,patches,7243,https://root.cern,https://github.com/root-project/root/issues/7657,1,['patch'],['patches']
Deployability,Template WrappedMultiTF1 keeping backwards compatibility and adding a templated std::function interface for TF1. This is the first in a series of PR for the integration of the vectorization + parallelization of the fit in ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/346:157,integrat,integration,157,https://root.cern,https://github.com/root-project/root/pull/346,1,['integrat'],['integration']
Deployability,Temporary patch to help debugging writing CMS MiniAOD in RNTuple. @Dr15Jones FYI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15864:10,patch,patch,10,https://root.cern,https://github.com/root-project/root/pull/15864,1,['patch'],['patch']
Deployability,Test 628 patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15123:9,patch,patches,9,https://root.cern,https://github.com/root-project/root/pull/15123,1,['patch'],['patches']
Deployability,"Test directories should be added using ROOT_ADD_TEST_SUBDIRECTORY. If add_subdirectory is used the test binaries get installed during ""make install"". if(testing) is redundant - it is already part of the ROOT_ADD_TEST_SUBDIRECTORY macro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2247:117,install,installed,117,https://root.cern,https://github.com/root-project/root/pull/2247,2,['install'],"['install', 'installed']"
Deployability,"Test if root install has roofit, if yes add the roofit and other libraries to rootlibs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1002:13,install,install,13,https://root.cern,https://github.com/root-project/root/pull/1002,1,['install'],['install']
Deployability,Test install,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/329:5,install,install,5,https://root.cern,https://github.com/root-project/root/pull/329,1,['install'],['install']
Deployability,Testing before submitting this patch to clang upstream!. This gives 20 MB memory improvement :D :D,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2903:31,patch,patch,31,https://root.cern,https://github.com/root-project/root/pull/2903,1,['patch'],['patch']
Deployability,"Tests.h:22,; from /home/cburgard/Physics/root/src/roottest/root/roofitstats/vectorisedPDFs/VectorisedPDFTests.cxx:17:; /home/cburgard/Physics/root/src/roottest/root/roofitstats/vectorisedPDFs/VectorisedPDFTests.cxx: In member function ‘void PDFTest::compareFixedValues(double&, bool, bool, bool, unsigned int)’:; /home/cburgard/Physics/root/src/roottest/root/roofitstats/vectorisedPDFs/VectorisedPDFTests.cxx:355:21: error: no match for ‘operator/’ (operand types are ‘ROOT::Math::KahanSum<>’ and ‘std::vector<double>::size_type’ {aka ‘long unsigned int’}); 355 | EXPECT_GT(sumDiffs/outputsScalar.size(), -toleranceCompare) << ""Batch outputs biased towards negative."";; | ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~; | | |; | ROOT::Math::KahanSum<> std::vector<double>::size_type {aka long unsigned int}; /home/cburgard/Physics/root/src/roottest/root/roofitstats/vectorisedPDFs/VectorisedPDFTests.cxx:356:21: error: no match for ‘operator/’ (operand types are ‘ROOT::Math::KahanSum<>’ and ‘std::vector<double>::size_type’ {aka ‘long unsigned int’}); 356 | EXPECT_LT(sumDiffs/outputsScalar.size(), toleranceCompare) << ""Batch outputs biased towards positive."";; | ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~; | | |; | ROOT::Math::KahanSum<> std::vector<double>::size_type {aka long unsigned int}; /home/cburgard/Physics/root/src/roottest/root/roofitstats/vectorisedPDFs/VectorisedPDFTests.cxx:357:25: error: no match for ‘operator/’ (operand types are ‘ROOT::Math::KahanSum<>’ and ‘std::vector<double>::size_type’ {aka ‘long unsigned int’}); 357 | EXPECT_LT(sqrt(sumVars/outputsScalar.size()), toleranceCompare) << ""High standard deviation for batch results vs scalar."";; | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~; | | |; | ROOT::Math::KahanSum<> std::vector<double>::size_type {aka long unsigned int}. ```. ### Setup; commit 92c90e8deff323fd2eab700e384dd3944b754471; gcc (GCC) 12.2.0; 6.1.3-arch1-1; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12006:3065,install,install,3065,https://root.cern,https://github.com/root-project/root/issues/12006,1,['install'],['install']
Deployability,Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002; ```; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9424:305,integrat,integration,305,https://root.cern,https://github.com/root-project/root/issues/9424,1,['integrat'],['integration']
Deployability,"Thanks to @dpiparo suggestion, I wrote a script automatically removing unnecessary includes under a directory. In; this patch I removed unnecessary includes in roofit/roofitcore/src/ for test, but; you can use this script to any directories. Script:; https://gist.github.com/yamaguchi1024/d95843a5e549fcc6ba0e6e23da5c132a. How to use:; python3 iwyu.py /path/to/directory/you/want/. Limitations:; include-what-you-use is not complete, it sometimes remove *necessary*; includes. So you must compile and modify diff or checkout files if necessary include was; removed. I reccomend to use this script in a directory where you're; familiar with, because you anyway have to check the diff.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1748:120,patch,patch,120,https://root.cern,https://github.com/root-project/root/pull/1748,1,['patch'],['patch']
Deployability,Thanks to Tomas Dado for noticing that this was broken. We should ensure that ROOT always builds with this flag. See also:; * https://root.cern/doc/v632/release-notes.html#compile-your-code-with-memory-safe-interfaces; * https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooFit/Config.h#L16,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15946:153,release,release-notes,153,https://root.cern,https://github.com/root-project/root/pull/15946,1,['release'],['release-notes']
Deployability,The 5 second timeout was not enough when trying to build ROOT in docker.; Possibly the issue was due to lag on the server as well. Patch by Alexander Penev (@alexander-penev).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9405:131,Patch,Patch,131,https://root.cern,https://github.com/root-project/root/pull/9405,1,['Patch'],['Patch']
Deployability,"The C++ modules marks the std::vector<int> instantiation as not visible because it came from the `regex` header file which we did not explicitly include. root-project/root@a785402 introduces checks if certain declaration is visible in dictionary generation time which was intending to semantically improve the coherence by what the user ""allowed"" (or requested) rootcling to see vs what it can see globally. While this model works well it seems to not work for template instantiations as they won't be re-instantiated with visible modifier. This patch works around the current issue seen with libstdc++ 12 but a better solution would be to implement a finer grained control over the implicit template instatiations when generating a dictionary. Fixes root-project/root#11329",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11468:546,patch,patch,546,https://root.cern,https://github.com/root-project/root/pull/11468,1,['patch'],['patch']
Deployability,"The CMAKE_OSX_SYSROOT exports the exact version of the sdk which we build against. However, this means that binary releases become sensitive to minor sdk upgrades (eg. MacOSX11.1.sdk -> MacOSX11.2.sdk). Our infrastructure is relatively resilient to such changes. This patch introduces a workaround to address this issue -- it uses the fact that the current sdk's parent directory has a symlink MacOSX.sdk which points to the current sdk. This should resolve root-project/root#7021.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7625:115,release,releases,115,https://root.cern,https://github.com/root-project/root/pull/7625,3,"['patch', 'release', 'upgrade']","['patch', 'releases', 'upgrades']"
Deployability,"The CMAKE_OSX_SYSROOT exports the exact version of the sdk which we build; against. However, this means that binary releases become sensitive to minor sdk; upgrades (eg. MacOSX11.1.sdk -> MacOSX11.2.sdk). Our infrastructure is; relatively resilient to such changes. This patch introduces a workaround to address this issue -- it uses the fact; that the current sdk's parent directory has a symlink MacOSX.sdk which points; to the current sdk. This should resolve root-project/root#7021.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7628:116,release,releases,116,https://root.cern,https://github.com/root-project/root/pull/7628,6,"['patch', 'release', 'upgrade']","['patch', 'releases', 'upgrades']"
Deployability,"The GPU runner was attracting CPU-only jobs, since all runner labels in use so far were automatic github labels. Here, a unique label is added to steer the jobs correctly. Furthermore, the upload-artifact action starts warning about an imminent deprecation, so it's updated to v4 here.; This uncovered a name clash, where two builds on the same image would race to upload artifacts. This seems to be OK in v3, but not in v4.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16590:266,update,updated,266,https://root.cern,https://github.com/root-project/root/pull/16590,1,['update'],['updated']
Deployability,"The G__matchfilename() implements a file comparison check used; specifically for loading/unloading of the libraries and the source code.; On UNIX-like systems the basic filename comparison is supplemented an; additional file match condition is based on comparing file attributes; returned by the stat() syscall. On a typical load/unload call, the; G__matchfilename() is iterated over items of G__srcfile, which produces; a number of stat() calls that is quadratic in number of loaded files. In our specific case we observe an occasional poor performance on AFS; network filesystem. The suggested change introduces a cache for the; stat() calls that should allow to reduce the number of calls to scale; linearly. # This Pull request:. ## Changes or fixes:. Fixes downstream issue star-bnl/star-sw#115. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9010:852,update,updated,852,https://root.cern,https://github.com/root-project/root/pull/9010,1,['update'],['updated']
Deployability,"The Linux builds with enabled modules were failing because stdio.h; wasn't provided by a module but textually included. This seemed to; cause merging issues which caused the compilation to fail. This patch adds a modulemap for a few libc modules that seem to work; without modification as modules inside ROOT. We had to remove a few 'extern ""C""' because importing a module; inside such a context isn't allowed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/477:200,patch,patch,200,https://root.cern,https://github.com/root-project/root/pull/477,1,['patch'],['patch']
Deployability,"The OSX linker stores the symbols in a shared library by adding an; extra ""_"" as prefix to the mangled name. However, the llvm JIT gives; us a unix mangled name. This patch adds a the missing extra prefix if we are on OSX.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3440:167,patch,patch,167,https://root.cern,https://github.com/root-project/root/pull/3440,1,['patch'],['patch']
Deployability,The PR spawns a separate thread to process ROOT events if we cannot; attach the update mechanism to an exisiting hook such as existing in the; interactive Python mode or for ipython/notebooks. Related to ROOT-10774,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5654:80,update,update,80,https://root.cern,https://github.com/root-project/root/pull/5654,1,['update'],['update']
Deployability,"The RCutFlowReport class could benefit of a Merge method since it would ease the implementation of the Report RDataFrame operation in a distributed environment.; In a situation where two chunks of a dataset have been processed separately, a report for each chunk would only contain filtering information of that chunk. In this case, merging the two reports together should provide general information on the cut flow of the entire dataset. Right now, the Merge function works as follows:; It takes another RCutFlowReport as argument (passed by reference).; The fCutInfos member of the current RCutFlowReport is stored in a temporary variable and then cleared.; For each TCutInfo, another TCutInfo with the same name is searched in the other report.; The information on all the entries and the passed entries is then summed up between the two objects.; Finally a new TCutInfo with the resulting information is added to the initial RCutFlowReport. The clearing of fCutInfos is needed since the fPass and fAll members of TCutInfo are const.; If seen appropriate, the const keyword can be removed, then the fCutInfos could be just updated each time. A very simple test has been added. TODO:; - [ ] Add more thorough tests.; - [ ] Decide on the return type of the Merge function (now is void).; - [ ] Possibly overload the function with RCutFlowReport* as argument.; - [ ] Finally add documentation when everything is set.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4174:1127,update,updated,1127,https://root.cern,https://github.com/root-project/root/pull/4174,1,['update'],['updated']
Deployability,"The ROOT binaries don't come with `fft3` enabled because of licensing incompatibilities (GPL). However, it is not necessary to recompile all of ROOT to get the `fftw3` functionality. That's because the `math/fftw` library is not used directly, but nicely abstacted away with ROOTs plugin system via `TVirtualFFT`. Therefore, it would be very convenient for users if `math/fftw` could be built standalone, such that an existing ROOT installation can pick up these plugins. This was tested by building ROOT without `fftw3`, then also building and installing `math/fftw` standalone. I was running the RooFit convolution unit tests before and after installing `math/fftw` standalone. Indeed, the unit tests fail before installing it and pass after, showing that the standaline installation of the plugin works. This commit would address the question on the ROOT forum:. https://root-forum.cern.ch/t/how-to-add-optional-libraries-by-homebrew",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13774:432,install,installation,432,https://root.cern,https://github.com/root-project/root/pull/13774,5,['install'],"['installation', 'installing']"
Deployability,"The ROOT file datasource, `RRootDS`, was a proof of concept to show that RDF's generic data-source API could cover cases as complex as ROOT files. However, it never reached feature parity with the no-datasource, integrated TTree reading case (nor it was meant to). In this PR:. 1. Make ROOT::MakeRootDataFrame equal to standard constructors: ; RRootDS does not support the same set of features as ""standard"" RDF,; and this can be very surprising, see e.g.; https://root-forum.cern.ch/t/chaining-rdataframe-define-does-not-work-in-some-cases/38213; With this change, ROOT::MakeRootDataFrame returns a ""normal"" RDF, with; all expected features. This resolves ROOT-10596.; 2. Remove MakeROOTDatFrame tutorials:; `MakeRootDataFrame` is not a feature we want to advertise. RDataFrame's class constructors provide same or better functionality.; 3. Deprecate RRootDS's constructor:; users should not be constructing RRootDS directly anyway. They should; do so via `MakeRootDataFrame`, which from the next version will instead; construct a standard dataframe with no datasource.; We deprecate RRootDS's constructor as an extra cautionary measure,; so we can move RRootDS out of the public namespace and into the; internal namespace soon.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5516:212,integrat,integrated,212,https://root.cern,https://github.com/root-project/root/pull/5516,1,['integrat'],['integrated']
Deployability,"The RResult class overwrites the `new` operator to prevent (make it harder for) heap creation of RResult objects. This does not work with PyROOT. E.g., PyROOT can't call `RFieldBase::Create()`. This patch removes the new operator overwrites. This should be a small safety compromise for PyROOT usability. Also: fixes namespace layering and moves RResultBase out of the Internal namespace.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14463:199,patch,patch,199,https://root.cern,https://github.com/root-project/root/pull/14463,1,['patch'],['patch']
Deployability,The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:; added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates.; package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14015:359,update,updates,359,https://root.cern,https://github.com/root-project/root/pull/14015,2,['update'],"['updated', 'updates']"
Deployability,The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:; added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates.; package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). update of #14015 rebased to master. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14082:359,update,updates,359,https://root.cern,https://github.com/root-project/root/pull/14082,3,['update'],"['update', 'updated', 'updates']"
Deployability,The RooBernstein pdf is to be updated to have the correct definition over ranges of the variable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4506:30,update,updated,30,https://root.cern,https://github.com/root-project/root/pull/4506,2,['update'],['updated']
Deployability,The RooFit release notes were slightly outdated after the deprecation; macro R__SUGGEST_ALTERNATIVE had been merged.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3662:11,release,release,11,https://root.cern,https://github.com/root-project/root/pull/3662,1,['release'],['release']
Deployability,"The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12482:61,integrat,integration,61,https://root.cern,https://github.com/root-project/root/pull/12482,2,['integrat'],['integration']
Deployability,"The RooIntegrator1D class is refactored such that it is a wrapper around a free function with only STL dependencies that does the Romberg integration. This is very useful for R & D projects, because the integration code can be reused standalone outside of RooFit. This can serve as a reference when implementing and benchmarking new integration methods.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13336:138,integrat,integration,138,https://root.cern,https://github.com/root-project/root/pull/13336,3,['integrat'],['integration']
Deployability,"The RooList was deprecated in the previous v626 release, and is now; removed. A RooList was just a `TList` with added member functions for; convenience, so it was never necessary to have this as a separate class; supported in IO. The RooList was still used in two RooFit classes until now: `RooPlot`; and `SamplingDistPlot`. This commit also removes this remaining usage. In the case of `SamplingDistPlot`, none of the special member functions were; used: the `RooList` could be replaced trivially with a `TList`. In `RooPlot`, the `RooList` was replaced with a; `std::vector<std::pair<TObject*,std::string>>`, for which it was easy to; reimplement the algorithms that were covered by the former `RooList`; member functions. The backwards compatibility with existing RooPlot is tests by; `stressRooFit`, as the reference file stores RooPlots with the; `RooList`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9851:48,release,release,48,https://root.cern,https://github.com/root-project/root/pull/9851,1,['release'],['release']
Deployability,"The RooMinimizer interface does not allow for changing the number of points on a likelihood contour.; By promoting this parameter to a default argument, this is now accessible to the user.; Doxygen was updated accordingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3327:202,update,updated,202,https://root.cern,https://github.com/root-project/root/pull/3327,1,['update'],['updated']
Deployability,"The RooProdPdf is not trivial to deal with in BatchMode, because its; actual servers depend on the normalization set. One should rather think of the RooProdPdf as something like a caching; PDF, but instead of creating a cached HistPdf for a given normalization; set, it creates an internal computation graph representing the; normalized product for a given normalization set. This internal computation graph is not expsed via the usual; client-server interface. However, this is strictly required for the new; BatchMode: internal computation graphs are not allowed because the; RooFitDriver would not be able to manage memory copies between host and; device, and also schedeuling. For this reason, BatchMode support is removed from the RooProdPdf class.; We only keep a `RooProdPdf::calculateBatch` function that can be used to; evaluated a given cache element when all the internal args are contained; in the BatchMode data map. To correctly evaluate these computation graphs in the batchMode, a new; class is introduced that wraps them with the correct client-server; interface. Instances of this class are then created for each ProdPdf in; the original computation graph, and the ProdPdfs are replaced with these; objects. This means all the different RooProdPdf cache configurations are now; correctly dealt with in the BatchMode, making the; `RooProdPdf/TestProdPdf.CachingOpt` unit test also pass with the; BatchMode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11400:1272,configurat,configurations,1272,https://root.cern,https://github.com/root-project/root/pull/11400,1,['configurat'],['configurations']
Deployability,"The RooStringVar class is planned to get deprecated soon, hence RooFit; code that is still using it is getting migrated away from it. In the RooCmdConfig case, one can use simple configuration structs; insread of RooStringVar. This change is tested by many unit tests in RooFit, as the; `RooCmdConfig` is used in many places, for example `RooAbsPdf::fitTo`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10106:179,configurat,configuration,179,https://root.cern,https://github.com/root-project/root/pull/10106,1,['configurat'],['configuration']
Deployability,The Sum in x and y was not updated when the X and Y axis are not extendable or are not alphanumerics. . This PR fixes ROOT #11746,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11751:27,update,updated,27,https://root.cern,https://github.com/root-project/root/pull/11751,1,['update'],['updated']
Deployability,"The TEfficiency constructors for fixed or variable bin size are not appended to the current directory. The description of TEfficiency mentions that this should only happen for the constructor using two histograms (passed and total). The following code does not save the TEfficiency object to the file in version 6.24; ```; TFile* file = new TFile(""test.root"", ""RECREATE"");; TEfficiency* eff = new TEfficiency(""eff"", ""eff"", 1, 0, 1);; eff->Fill(true, 0);; file->Write();; ```; Executing in version 6.18 (latest I have installed other than 6.24) does produce the expected behaviour. After adding `eff->Write();` the TEfficiency will also be written in v6.24. I think the problem is the use of; `TDirectory::TContext ctx(nullptr);`; in TEfficiency.cxx (e. g. line 733), which was, as far as I see, implemented in version 6.24. I think in the scope after TContext the current directory is `nullptr` which is also passed to `Build(name, title);` as well. ### Setup:; ROOT v6.24 built from source; OS: Ubuntu 20.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9189:517,install,installed,517,https://root.cern,https://github.com/root-project/root/issues/9189,1,['install'],['installed']
Deployability,"The TPython library has one big caveat: it requires linking against `libpython`, which is not allowed in some context like the Python package manager. To avoid this problem that is blocking `pip install root`, this commit suggests to make TPython optional at build time. This makes also sense considering how TPython and PyROOT are used: if you intend to use ROOT via PyROOT from pip install ROOT, you probably won't need the functionality to run Python code from C++ that TPython provides. Possibly supersedes #15891, @vepadulano.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16337:195,install,install,195,https://root.cern,https://github.com/root-project/root/pull/16337,2,['install'],['install']
Deployability,The TStatistic class now includes computation of minimum and maximum values; of the vector passed to the constructor. These values have been added both to the `Print` and `Merge` functions. The testTStatistic.cxx test file has been updated accordingly to check that the class; correctly computes min and max values.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3815:232,update,updated,232,https://root.cern,https://github.com/root-project/root/pull/3815,1,['update'],['updated']
Deployability,"The _column model_ turned into an unnecessary wrapper for the column type. The patch replaces the use of the column model by using directly the column type. Along with it, some unused flags of the column information in the header are removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15991:79,patch,patch,79,https://root.cern,https://github.com/root-project/root/pull/15991,1,['patch'],['patch']
Deployability,"The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15464:367,configurat,configuration,367,https://root.cern,https://github.com/root-project/root/pull/15464,1,['configurat'],['configuration']
Deployability,The `-O1` optimization flag has nasty side effects on Windows (32 and 64 bit). These side effects are described in the issue #9809 on Win32 and the issue #9944 on Win64. To be reviewed after the upgrade of LLVM & Clang,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9945:195,upgrade,upgrade,195,https://root.cern,https://github.com/root-project/root/pull/9945,1,['upgrade'],['upgrade']
Deployability,"The `CMAKE_CXX_STANDARD` value indicated for building ROOT7 is `c++14`, however it now requires `c++17` so documentation should be updated, namely (and maybe not limited to):. - https://root.cern/for_developers/root7/; - https://root.cern/install/build_from_source/#enabling-experimental-features-aka-root7",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8743:131,update,updated,131,https://root.cern,https://github.com/root-project/root/issues/8743,2,"['install', 'update']","['install', 'updated']"
Deployability,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16314:238,upgrade,upgrade,238,https://root.cern,https://github.com/root-project/root/pull/16314,3,"['patch', 'upgrade']","['patched', 'upgrade']"
Deployability,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. (cherry picked from commit fd97311519a5d64f0110686db46e0d912503751c, backport of https://github.com/root-project/root/pull/16314)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16318:238,upgrade,upgrade,238,https://root.cern,https://github.com/root-project/root/pull/16318,3,"['patch', 'upgrade']","['patched', 'upgrade']"
Deployability,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. This differs from commit fd97311519a5d64f0110686db46e0d912503751c in master because LLVM doesn't support passing move-only lambdas. ---. This aims to backport https://github.com/root-project/root/pull/16314, but it's a bit more complicated with LLVM 13. We need to decide if we want this or just leave v6.30 and v6.28 alone.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16319:238,upgrade,upgrade,238,https://root.cern,https://github.com/root-project/root/pull/16319,3,"['patch', 'upgrade']","['patched', 'upgrade']"
Deployability,"The `ClingMMapper` must remain available until all `ClingMemoryManagers` are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. This differs from commit fd97311519a5d64f0110686db46e0d912503751c in master because LLVM doesn't support passing move-only lambdas. (cherry picked from commit 41cbd5bafaf5037f52dec9864fc01d500d54578f, backport of https://github.com/root-project/root/pull/16314 / https://github.com/root-project/root/pull/16319)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16387:238,upgrade,upgrade,238,https://root.cern,https://github.com/root-project/root/pull/16387,3,"['patch', 'upgrade']","['patched', 'upgrade']"
Deployability,"The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:; ```python; import ROOT; ROOT.PyConfig.IgnoreCommandLineOptions = True; ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:; ```python; import ROOT; ROOT.gROOT.SetBatch(True); ```; or in the command line:; ```bash; > python my_script.py -b; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3731:241,configurat,configuration,241,https://root.cern,https://github.com/root-project/root/pull/3731,2,['configurat'],['configuration']
Deployability,"The `RooAbsMinimizerFcn` and `RooMinimizerFcn` classes are; implementation details of the `RooMinimizer`. In one of the recent RooFit meetings, it was decided together with users; that this should be no problem, and doing so will greatly increase the; developers flexibility in updating the RooMinimizer implementation. This removal is mentioned in the v628 release notes. Furthermore, this PR suggests to make `RooMinimizer::applyCovarianceMatrix` a public function, and extends `RooAbsMinimizerFcn` by a `fit` function to avoid downcasting in the RooMinimizer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9874:358,release,release,358,https://root.cern,https://github.com/root-project/root/pull/9874,1,['release'],['release']
Deployability,"The `RooAbsReal::getValues` has already been established as the entry; point for evaluating RooFit objects with the batch mode and it should; not be broken. In 6.26, the `getValues` function was broken to fall back on the scalar; mode all the time, because the `evaluateSpan` funtions it used got; replaced by `computeBatch`. In this commit, the desired behavior of; using the BatchMode is restored by using the RooFitDriver. To that end, a; new constructor has been added to the RooFitDriver that takes a; `RooBatchCompute::RunContext` directly. The override of `getValues` in RooAbsPdf was also removed now, because; it's the job of the RooFitDriver to treat pdfs correctly. This PR fixes the performance regression that was observed in the vectorized pdf tests in `roottest`. To fix the performance regression completely, this PR also includes a commit to avoid some overhead in the pure CPU batch mode with RooFitDriver. This bugfix should also be backported to 6.26 as a bugfix for the patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9986:991,patch,patch,991,https://root.cern,https://github.com/root-project/root/pull/9986,2,"['patch', 'release']","['patch', 'release']"
Deployability,"The `RooEffProd` class contains some caching logic to always provide a; normalization set to the integrated pdf. However, this should better not; be done, because as the the former documentation sais it ""breaks the; default RooAbsPdf normalization handling"". It is also inconsistent,; because, other RooFit classes like `RooProduct` don't do that. Also, it is not the task of the RooEffProd to protect pdfs from being; evaluated without normalization set if their shape depends on it. The; concerned pdfs (like RooAddPdf) already do that themselves. The reason why this is removed now it that the caching of normalization; integrals doesn't work with the new RooFit batch mode. This commit is tested by the `stressRooFit` unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10100:97,integrat,integrated,97,https://root.cern,https://github.com/root-project/root/pull/10100,1,['integrat'],['integrated']
Deployability,"The `RooParamHistFunc` doesn't take any observable RooRealVar as; constructor argument. It assumes as observable the internal variables in; the passed RooDataHist. This means it is in most contexts unusable,; because the input can't be changed, other than loading a different bin; in the dataset. This also breaks the Barlow-Beeston tutorial since the new evaluation; backend is the default, and it is more sentitive to these issues:; https://root.cern.ch/doc/master/rf709__BarlowBeeston_8C.html. There was actually a constructor that took a `RooAbsArg x`, but it was; simply ignored. To fix all these problems, the existing constructors were replaced by a; new one that takes the observable explicitly, and this is mentioned in; the release notes. The class is not used much, because ussually people use HistFactory or; CMS combine for these kind of fits. To backport to ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15224:734,release,release,734,https://root.cern,https://github.com/root-project/root/pull/15224,1,['release'],['release']
Deployability,"The `RooRealIntegral` class is smart enough to figure out which; variables the function the integrated function doesn't depend on and; trivially integrates them itself by multiplying with the variable; definition range. However, if the integration range is a subrange of the variable range,; this was not considered. This resulted in wrong results. for integrals; like `pdf.createIntegral(x, ""subrange"")`, where the pdf doesn't depend; on x. These kind of integrals can occur in the projections that the; RooAddPdf does, so it's important that they work, and fixing this; partially addresses https://github.com/root-project/root/issues/11486. This change also fixes a so-far unknown bug in the `RooXYChi2Var`, which; also used these kind of integrals. Without this fix, the `Integrate()`; feature for `chi2FitTo()` was completely broken, which can be seen in; the output of the `rf609` tutorial with any previous ROOT version. The; tutorial looks okay by chance, because the function is dominted by the; quadratic term in `x` that is constant in the fit. But if one makes this; a floating parameter, the problem gets obvious. Probably that was the reason why the main model parameter was set; constant to begin with, to sweep the bug under the rug. Now, the; tutorials are updated to have the quadratic coefficient floating too.; And also `stressRooFit`, since the reference file has to be updated; anyway. To demonstrate that things work correctly now, a new unit test was; implemented that does the closure check of the `integrate()` feature of; the `RooXYChi2Var` with a linear fit function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12011:92,integrat,integrated,92,https://root.cern,https://github.com/root-project/root/pull/12011,7,"['Integrat', 'integrat', 'update']","['Integrate', 'integrate', 'integrated', 'integrates', 'integration', 'updated']"
Deployability,"The `TApplication` default constructor uses `*argc=nullptr` and `**argv=nullptr` as default values, and ignores the args if that is passed in.; For symmetry and by principle of least surprise, ensure that this also works with `TRint`, which can also be used as base class (or helper class) in existing applications. see #10090. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10094:379,update,updated,379,https://root.cern,https://github.com/root-project/root/pull/10094,1,['update'],['updated']
Deployability,"The `TVirtualCollectionProxy` class has been proved to be weakly documented (see, e.g. issues in PR #13306 and #12948). Given the situation, this pull request improves and extends the documentation of the aforementioned class. ## Checklist:; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13307:248,update,updated,248,https://root.cern,https://github.com/root-project/root/pull/13307,1,['update'],['updated']
Deployability,"The `builtin_openssl` option was specifically introduced with ROOT 6.06 for macOS support:. * https://root.cern.ch/doc/v606/release-notes.html. * https://github.com/root-project/root/commit/e113fd8e9c56f5cdf23f2fd7d5f2504234ffca0e. For Linux or Windows, it is not needed. @jblomer",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15426:124,release,release-notes,124,https://root.cern,https://github.com/root-project/root/pull/15426,1,['release'],['release-notes']
Deployability,"The `computeCategoryOldStyle` function in the RooMultiCategory class; gave wrong results in case the multi-category uses categories where the; ordinal number of the category doesn't match the category index. Since the `computeCategoryOldStyle` function was still used for; assertions in debug mode, this caused unnecessary assertion failures as; reported on the forum:. https://root-forum.cern.ch/t/roorealvar-setbinning-with-name-in-pyroot/51069. The code in the forum, together with some added printouts in; `RooMultiCategory::evaluate()` clearly demonstrated that the old-style; implementation is wrong. As the new implementation is already tested for a few releases now, the; most sustainable way to fix the wrong assertion failure is to simply; remove the comparison with the old-style interfaces in debug builds. Since after this change, the `RooMultiCatIter` is only used for the deprecated; `RooSuperCategory::MakeIterator()`, this PR also suggests to remove that; deprecated function together with the `RooMultiCatIter`. This is kind of a followup to https://github.com/root-project/root/pull/5502.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11117:661,release,releases,661,https://root.cern,https://github.com/root-project/root/pull/11117,1,['release'],['releases']
Deployability,"The `dnn_cuda` library is only an intermediate library that is not meant to be installed with ROOT, so it needs to be static since TMVA needs to export its dependencies and if this library is shared; the dependency won't be there after a `make install'. Therefore the error in CMake:. ```; CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""TMVA"" which requires target ""dnn_cuda"" that is not in the export set.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3066:79,install,installed,79,https://root.cern,https://github.com/root-project/root/pull/3066,3,['install'],"['install', 'installed']"
Deployability,The `find_package(root)` command fails when using Root installed via Homebrew.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14113:55,install,installed,55,https://root.cern,https://github.com/root-project/root/issues/14113,1,['install'],['installed']
Deployability,"The `np.float_` was removed in the NumPy 2.0 release. One should use `np.float64` instead, which is already in the same dictionary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16200:45,release,release,45,https://root.cern,https://github.com/root-project/root/pull/16200,1,['release'],['release']
Deployability,The `src` of `RColumnElement::Pack/Unpack` is not intended to be modifiable. Updated the signatures to reflect that.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16293:77,Update,Updated,77,https://root.cern,https://github.com/root-project/root/pull/16293,1,['Update'],['Updated']
Deployability,"The `target` attribute in a rule specification is mandatory, but the list can be empty, in which case `TSchemaRule::GetTarget()` returns `nullptr`. In particular, @Nowakus reported the following error for read rules associated with class `ElementLinkBase`, which happens to have an empty `target` list; ```; Fatal: rule->GetTarget() != nullptr violated at line 1006 of; `/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx'; aborting; ```; Therefore, in principle we should also allow these rules for now. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12049:620,update,updated,620,https://root.cern,https://github.com/root-project/root/pull/12049,1,['update'],['updated']
Deployability,"The `test.cmake` script is meant to automate some of the standard configure, build, test, install cycle during development, but also for continuous integration. The script can be generically called as; ```sh; ctest -VV -S test.cmake; ```; from the top directory of the repository. There are several options to customize the build, the main ones are:. | Option | Description |; |----------------------|-------------|; | -DCOVERAGE=1 | Enables test coverage analysis with gcov; | -DMEMCHECK=1 | Enables memory checking with valgrind; | -DSTATIC_ANALYSIS=1 | Enables static analysis with clang-tidy; | -DINSTALL=1 | Enables an extra step to call make install; | -DCDASH=1 | Enables submission to CDash (needs CTestConfig.cmake). When enabling coverage, a report is generated by default in the `coverage/` directory inside the build directory. The results can be viewed by opening the file `html/coverage_details.html`. This step can be disabled by passing `-DGCOVR=0` to `ctest`. It is recommended to use a debug build to generate the coverage analysis. The configuration can be specified directly on the command line via the `-C` option. For example, to run a coverage build in debug mode, with less verbose output, and showing test output when a test failure happens, one can run:; ```sh; ctest -V --output-on-failure -C Debug -DCOVERAGE=1 -S test.cmake; ```; Some environment variables can also influence the behavior of the script, like `CC`, `CXX`, `CMAKE_GENERATOR`, `CTEST_CONFIGURATION_TYPE`, `CMAKE_BUILD_PARALLEL_LEVEL`, `CTEST_PARALLEL_LEVEL`, `CMAKE_ARGS`, `CDASH`, `DESTDIR`, `BASE_REF`, `HEAD_REF`, and GitHub Actions environment variables. These are mostly self-explanatory and can be used to override the provided defaults. For example, to build with the clang compiler and use Ninja as CMake generator, one can run:; ```sh; env CC=clang CXX=clang++ CMAKE_GENERATOR=Ninja ctest -V -S test.cmake; ```; Finally, the script tries to load configuration files from the `.ci/` subdirectory in t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14999:90,install,install,90,https://root.cern,https://github.com/root-project/root/pull/14999,4,"['continuous', 'install', 'integrat']","['continuous', 'install', 'integration']"
Deployability,"The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15302:145,install,installed,145,https://root.cern,https://github.com/root-project/root/pull/15302,1,['install'],['installed']
Deployability,"The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15303:145,install,installed,145,https://root.cern,https://github.com/root-project/root/pull/15303,2,['install'],['installed']
Deployability,"The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15305:145,install,installed,145,https://root.cern,https://github.com/root-project/root/pull/15305,1,['install'],['installed']
Deployability,"The addition of this function is in anticipation for horizontal joining of RNTuples, which will be handled in the context of the `RNTupleProcessor` that is currently under development (see also #15084). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15279:254,update,updated,254,https://root.cern,https://github.com/root-project/root/pull/15279,1,['update'],['updated']
Deployability,"The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake; __only__ for build directory. So the path/to/your/build/directory was; hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for; stl and libc from the build directory even if it was installed to different; location. This was a problem for CMSSW, so in this patch I'm generating two; overlay files, one for build directory and other one for installed; directory. CMake will generate modulemap.overlay.yaml for __build__; directory from modulemap.overlay.yaml.in.build at compilation time, and; it will generate and install modulemap.overlay.yaml for __install__; directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3179:16,patch,patch,16,https://root.cern,https://github.com/root-project/root/pull/3179,7,"['install', 'patch']","['install', 'installable', 'installed', 'patch']"
Deployability,The alias was deprecated with `numpy-1.20` and now expired in `numpy-1.24`:; https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations; https://numpy.org/devdocs/release/1.24.0-notes.html#expired-deprecations. This change also works with older versions (tested with `numpy-1.19`).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12827:103,release,release,103,https://root.cern,https://github.com/root-project/root/pull/12827,2,['release'],['release']
Deployability,"The analysis software of the H1 Experiment at DESY (you may know it from the tutorial 'h1analysis.C') makes use of `TClass` `RTTI` for parameter setting. With newer releases (probably since root 5.xx?) we get a `NULL` pointer when calling `TDataMember::SetterMethod()`, whereas `TDataMember::GetterMethod()` works well. ; When looking at the source code, there is a fall-back option to guess the `Method-Name (""SetXYZ()"")` and then get it:; ```; if (GetClass()->GetMethod(settername, ""1"")); fValueSetter = new TMethodCall(cl, settername, ""1"");; ```; This does not provide the SetterMethod either. However, it would work well with `""0""` instead of `""1""`. ; The GetterMethod in TDataMember::GetterMethod() is well obtained with """".; No idea if this is a bug, or a feature, and if the ""0"" option should be included as yet another fallback option?!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6535:165,release,releases,165,https://root.cern,https://github.com/root-project/root/issues/6535,1,['release'],['releases']
Deployability,"The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14021:274,integrat,integrating,274,https://root.cern,https://github.com/root-project/root/pull/14021,3,['integrat'],"['integrating', 'integration', 'integration-of-roobdecay-and-rooabsanaconvpdf']"
Deployability,"The bonjour support in xrootd (XrdOuc/XrdOucBonjour.hh) was dropped in xrootd 3.2.0, which is now a long time ago. The code in root that requires this header is therefore now dead code since a long time. The test in configure to enable it newer worked anyway. The attached patch removes the dead code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/91:273,patch,patch,273,https://root.cern,https://github.com/root-project/root/pull/91,1,['patch'],['patch']
Deployability,"The buffer tests for histograms have slightly different rounding errors between buffered/not buffered histograms which exceed a few epsilons, so the test fails if the tolerances are too strict. *Note:* This test doesn't fail on Jenkins, but *does* fail on my machine without this patch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2138:280,patch,patch,280,https://root.cern,https://github.com/root-project/root/pull/2138,1,['patch'],['patch']
Deployability,"The build fix for FreeBSD is included already since DAVIX 0.8.6, so the `PATCH_COMMAND` is not needed (it was merged because the PR was older, opened in February, than the upgrade of the builtin in May). In fact the command breaks builtin_davix on Linux systems because `sed -i` is not portable between GNU sed and BSD sed. (Note that the same is true for the patch itself, see my comment in https://github.com/cern-fts/davix/pull/113#issuecomment-2449788349.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16802:172,upgrade,upgrade,172,https://root.cern,https://github.com/root-project/root/pull/16802,2,"['patch', 'upgrade']","['patch', 'upgrade']"
Deployability,"The build system appears to assume that `roottest` is, by default, in a subdirectory of the source directory named `roottest`. I'd love to make it easier to include `roottest` in builds to encourage developers to utilize it: this seems like a great use of `git submodule`!. Here's how a user would clone the `root` and `roottest` repos:; ```; git clone https://github.com/root-project/root.git; cd root; git submodule init; git submodule update; ```. One would then do the normal build with `cmake`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/599:438,update,update,438,https://root.cern,https://github.com/root-project/root/pull/599,1,['update'],['update']
Deployability,"The builtin Vdt and Vc builds, when enabled, cause some targets to depend on libraries (`libvdt.so`, `libVc.a`) that are the output of the `ExternalProject` command. However, unless they are explicitly listed as outputs (as done in this patch), the build tool may not know how to generate them. Typically, this isn't a problem because the builtins are done sufficiently early in the build and it's nearly impossible to hit the Vc dependency before the library is installed. `make` is satisfied as long the library is on disk by time it hits the later rule, even if it has no clue how it got there. However, some build tools (such as `ninja`) explicitly check for missing libraries and refuse to attempt the build because no rule explicitly builds the missing library. As far as I can tell, the `BUILD_BYPRODUCTS` attribute was added in CMake 3.2; as ROOT already requires 3.4.3, this patch should not be a problem. @pcanal @karies",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/323:237,patch,patch,237,https://root.cern,https://github.com/root-project/root/pull/323,3,"['install', 'patch']","['installed', 'patch']"
Deployability,"The builtin xrootd version 4.8.5 has the -Werror flag in release mode,; which causes build errors with future compilers such as happened with; gcc9. The -w flag suppresses all warnings even if -Werror is set; afterwards. Future xrootd releases (4.12 and later) have the -Werror; flag removed in release mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6294:57,release,release,57,https://root.cern,https://github.com/root-project/root/pull/6294,3,['release'],"['release', 'releases']"
Deployability,"The change in this PR fixes a segfault when defining a C++20 concept if definition shadowing is enabled.; In principle, for a `TemplateDecl`, `isDefinition()` issues a recursive call passing the templated decl as a parameter. A `ConceptDecl`, however, should always be considered a definition. Also, update the DeclShadowing test incorporating a C++20 concept. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #12779.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12781:300,update,update,300,https://root.cern,https://github.com/root-project/root/pull/12781,2,['update'],"['update', 'updated']"
Deployability,"The change of the interface of TGDMLWrite is in conflict with old DD4hep versions. To temporarily overcome this problem the old interface is kept. ; The old interface however should be removed when standard installations use a compatible pairs of DD4hep and ROOT >= 6.20. DD4hep when using ROOT 6.20.0 or greater will only use the new interface, where a partial tree is exported to GDML identified by it's TGeoNode instance.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4163:207,install,installations,207,https://root.cern,https://github.com/root-project/root/pull/4163,1,['install'],['installations']
Deployability,"The changes introduced in 4ce57e copy in the installation directory empty copies of all the directories found in the build directory. This was found out only recently when the MultiPython PR was merged. The solution introduced in 14366b does not work, since the globbing is performed at configuration time, when the build directory is still empty. Since commit 4ce57e was introduced only to install the ~10 pcms listed in ll. 4237-4253 of core/dictgen/src/rootcling_impl.cxx, here we find a more suitable solution to achieve this goal.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4763:45,install,installation,45,https://root.cern,https://github.com/root-project/root/pull/4763,3,"['configurat', 'install']","['configuration', 'install', 'installation']"
Deployability,"The cling argument `--cuda-path` is necessary if the CUDA SDK is not installed under `/usr/local/cuda`, e.g. on HPC systems. The integration tests are also updated to handle a CUDA SDK under a non-standard location. # Additional diagnostic. To find the bug, I also add some diagnostic functions for the PTX compiler. 1. Now error messages are prefixed in CUDA mode to better decide which of the two compiler pipelines is causing the error. example; ```; - example before:; error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.; error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.; error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes. - example after:; cling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.; cling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.; cling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.; ```. 2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707:69,install,installed,69,https://root.cern,https://github.com/root-project/root/pull/6707,10,"['install', 'integrat', 'pipeline', 'update']","['installation', 'installed', 'integration', 'pipelines', 'updated']"
Deployability,"The cluster pool now not only schedules loading of the compressed pages but also their prompt decompression. All the pages that have been loaded are now pushed into a follow-up pipeline step for decompression and pushing into the page pool. This is done with multiple threads. Compared to unwrapping pages on demand, we might now decompress pages from which we never read (because they get completely skipped by the analysis). The RNTuple benchmarks suggest, however, that this happens quite rarely (<1%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6106:177,pipeline,pipeline,177,https://root.cern,https://github.com/root-project/root/pull/6106,1,['pipeline'],['pipeline']
Deployability,"The code; ```; if (${CMAKE_MINIMUM_REQUIRED_VERSION} VERSION_GREATER_EQUAL ""3.10.0""); message(FATAL_ERROR ""Remove this condition""); ```; in the ROOT CMakeLists introduced in #6605 breaks the CMake configuration if another package sets a higher minimum version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8280:197,configurat,configuration,197,https://root.cern,https://github.com/root-project/root/issues/8280,1,['configurat'],['configuration']
Deployability,"The commits in this PR contain the necessary steps performed in order to allow the user to build PyROOT with more than one versions of Python. The version in use can be changed with the usual `source thisroot.sh` preceded by the specific Python version, e.g.:; `ROOT_PYTHON_VERSION=3.6 source bin/thisroot.sh`; performed inside the build directory. ; Quick summary of the commits:; (1) set the necessary CMake variables to build the PyROOT libraries in lib/pythonX.Y; (2) modify thisroot.sh to allow the user to select the Python version; (3) necessary changes to pyunittests and tutorials CMake variables; (4) installation",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279:611,install,installation,611,https://root.cern,https://github.com/root-project/root/pull/4279,1,['install'],['installation']
Deployability,"The commits in this PR propose a unified solution for the installation of the PyROOT libraries, sources and bytecodes that works both with ""make install"" and ""make package"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5666:58,install,installation,58,https://root.cern,https://github.com/root-project/root/pull/5666,2,['install'],"['install', 'installation']"
Deployability,"The compiler invokations run by ACLiC were not updated in case of a build with address sanitizer options enabled. This resulted in spurious warnings of the sort:. ```; $: root -q -l -b test.C+. Processing test.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./test_C.so; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tmpnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tempnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tmpnam_r' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tmpnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tempnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tmpnam_r' is dangerous, better use `mkstemp'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15840:47,update,updated,47,https://root.cern,https://github.com/root-project/root/pull/15840,1,['update'],['updated']
Deployability,"The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15467:377,configurat,configuration,377,https://root.cern,https://github.com/root-project/root/pull/15467,3,"['configurat', 'release']","['configuration', 'release']"
Deployability,"The corresponding leaflist letters are 'G' and 'g'.; A new class TLeafG is added -- basically a copy of TLeafL with; [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,; std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:; - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt); - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right?. ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx; - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`; - [x] update doc of class TTree; - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`; - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`; - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6600:698,update,update,698,https://root.cern,https://github.com/root-project/root/pull/6600,5,['update'],['update']
Deployability,"The ctor of `GSLMCIntegrator` creates a `GSLRngWrapper` instance on the heap and calls its `Allocate()` member function which in turn allocates memory for a GSL random number generator via `gsl_rng_alloc()`. When the `GSLMCIntegrator` instance goes out of scope, its dtor is invoked which deletes the `GSLRngWrapper` pointer and thus invokes its dtor as well. However, `~GSLRngWrapper()` frees the allocated memory only if `fOwn` pointer is set to true, which is only set so in the assignment operator, but not in the `Allocate()` member function. Therefore, the `GSLMCIntegrator` class is leaking memory. This poses a problem, when doing a large number of integrations inside a for loop. The leak was discovered by running valgrind and inspecting the code. Minimal example:; ```cpp; #include <Math/GSLMCIntegrator.h> // ROOT::Math::GSLMCIntegrator. /* built with:. g++ -ggdb3 -Og `root-config --cflags` mcintegrator.cpp -o mcintegrator \; `root-config --libs` -lMathMore. */. int; main(); {; for(unsigned i = 0; i < 20000; ++i); {; ROOT::Math::GSLMCIntegrator vegas(""vegas"", 0., 1.e-1, 10);; }; return 0;; }; ```. Before fix:; ```; valgrind --tool=memcheck --leak-check=full --show-leak-kinds=definite \; --undef-value-errors=no ./mcintegrator. ==12320== Memcheck, a memory error detector; ==12320== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==12320== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info; ==12320== Command: ./mcintegrator; ==12320==; ==12320==; ==12320== HEAP SUMMARY:; ==12320== in use at exit: 100,655,858 bytes in 44,260 blocks; ==12320== total heap usage: 67,782 allocs, 23,522 frees, 101,539,078 bytes allocated; ==12320==; ==12320== 99,089,984 (319,984 direct, 98,770,000 indirect) bytes in 19,999 blocks are definitely lost in loss record 3,515 of 3,515; ==12320== at 0x4C2BE7F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so); ==12320== by 0xAD090F2: gsl_rng_alloc (in /usr/lib/libgsl.so.23.0.0); ==12320== by 0x8223765: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/928:657,integrat,integrations,657,https://root.cern,https://github.com/root-project/root/pull/928,1,['integrat'],['integrations']
Deployability,"The current API forces the user to copy the entire fColumnRanges map and do a map lookup if they want to iterate the column ranges. With this change, one can simply access the underlying map directly, avoiding extra work in most cases. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16022:287,update,updated,287,https://root.cern,https://github.com/root-project/root/pull/16022,1,['update'],['updated']
Deployability,The current builds fail because without a valid modulemap the setresuid test failed during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/425:91,configurat,configuration,91,https://root.cern,https://github.com/root-project/root/pull/425,1,['configurat'],['configuration']
Deployability,"The current implementation is broken (fObjPtr.release() deletes the; object thet we then return by pointer) and in general it is extremely; awkward to convince a std::shared_ptr to release ownership (and for good; reason, it only makes sense if you can be absolutely sure that there is; only one shared_ptr alive that owns that object). Instead of using RResultPtr::Release, we recommend moving the result; out of the RResultPtr. This effectively reverts commit 03fd58eec04ddf96c1596c02d4269185fef42b9f.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7485:46,release,release,46,https://root.cern,https://github.com/root-project/root/pull/7485,6,"['Release', 'release']","['Release', 'release']"
Deployability,"The current logic of pseudo-automatic modulemap discovery is a little fragile as it mounts a virtual file named module.modulemap in the location where the a give system library header is found (cuda.h, etc). However, if the libraries are squashed into a single folder then we end up mounting a file over another virtual file. This should be a hard error, however, on systems such as OSX some libraries already come with modulemap files and we should just not mount our predefined ones. This makes it very difficult to distinguish when to issue the hard error. While this patch is not a solution for the general when the modulemaps are automatically discovered (-fimplicit-module-maps), we can use the real file stems in cases where we are called with -fno-implicit-module-maps. As a side effect this fixes the *non-recommended* squashing of library header files into a single folder.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5177:571,patch,patch,571,https://root.cern,https://github.com/root-project/root/pull/5177,1,['patch'],['patch']
Deployability,"The default `SIGPIPE` handler installed by `TUnixSystem` does not do anything except print a message and possibly causing an endless loop of `SIGPIPE` handling:. ```; echo 'std::cout << ""foo"" << std::endl;' | root -l |& true; python -c 'import ROOT; print ""foo""' |& true; ```. This fixes ROOT-4568 and ROOT-7659. The alternative would be to remove all pending sigpipe signals which might have occurred while handling the signal itself. This would keep the current behavior and still fix the endless loop. . However think that not handling SIGPIPE by default would be a wiser choice as I don't see a real use case for printing that a SIGPIPE was received and then continuing normally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/413:30,install,installed,30,https://root.cern,https://github.com/root-project/root/pull/413,1,['install'],['installed']
Deployability,"The default method for chaning multi-dim distributions is now `vnrou` instead of the Markov CHain based method hitro, which generates (being a MC MC) correlated values and not iid. Update also documentation and tutorial. This fixes ROOT #10222",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14886:181,Update,Update,181,https://root.cern,https://github.com/root-project/root/pull/14886,1,['Update'],['Update']
Deployability,The default should be a ROOT binary that respects its license; any build that creates GPLed binaries should be an active decision. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13686:226,update,updated,226,https://root.cern,https://github.com/root-project/root/pull/13686,1,['update'],['updated']
Deployability,"The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:; Fixes an unintended behavior. ## Changes or fixes:; The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11789:179,patch,patch,179,https://root.cern,https://github.com/root-project/root/pull/11789,2,"['patch', 'update']","['patch', 'updated']"
Deployability,The doxygen Makefile need to be updated,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10521:32,update,updated,32,https://root.cern,https://github.com/root-project/root/pull/10521,1,['update'],['updated']
Deployability,The dynamic library manager's dyld can search a symbol in the library path.; This patch uses that functionality to aid the 'unresolved while linking'; diagnostics. Now we get:; ```; cling -L lib/. ****************** CLING ******************; * Type C++ code and press enter to run it *; * Type .q to exit *; *******************************************; [cling]$ extern int gErrorIgnoreLevel;; [cling]$ gErrorIgnoreLevel; IncrementalExecutor::executeFunction: symbol 'gErrorIgnoreLevel' unresolved while linking [cling interface function]!; Symbol found in '/.../lib/libCore.so'; did you mean to load it with .L /.../lib/libCore.so ?; [cling]$; ```. We should merge it after #6385 to not disturb the upgrade process.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6606:82,patch,patch,82,https://root.cern,https://github.com/root-project/root/pull/6606,2,"['patch', 'upgrade']","['patch', 'upgrade']"
Deployability,"The enums inside `RCompressionSetting` are now enum classes rather than struct-wrapped enums. This means that converting between them and `int` requires an explicit cast. ## Remarks; While for old code I believe it's best to leave everything as-is (casts aside), it would be nice to review the root 7 code to assess where and why we still use `int` as the type for compression and see case-by-case if it would be best replaced by the strong enum type.; Of course this would be in one or more separate PRs. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR partially addresses #8444",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15714:557,update,updated,557,https://root.cern,https://github.com/root-project/root/pull/15714,1,['update'],['updated']
Deployability,The eve7 extension is built conditionally when the root7 option is enabled. The files in etc/eve7 used by this extension should only be installed when the extension is built.; In addition this PR also removes some obsolete patterns from the install rule that are no longer necessary because the files they refer to are no longer in the source tree.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3436:136,install,installed,136,https://root.cern,https://github.com/root-project/root/pull/3436,2,['install'],"['install', 'installed']"
Deployability,"The file uses `std::numeric_limits`, defined in `<limits>` . That header is transitively included in most configurations, but for example not when building with a recent libstdc++ (with less transitive includes) and configuring with cxx14 and without VDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11152:106,configurat,configurations,106,https://root.cern,https://github.com/root-project/root/pull/11152,1,['configurat'],['configurations']
Deployability,"The file uses `std::numeric_limits`, defined in `<limits>`. That header is transitively included in most configurations, but for example not when building with a recent libstdc++ (with less transitive includes) and configuring with cxx14 and without VDT. (cherry picked from commit d2e56f982e303d83784f28e1524bc24c39b350c4). Backport of PR https://github.com/root-project/root/pull/11152",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11156:105,configurat,configurations,105,https://root.cern,https://github.com/root-project/root/pull/11156,1,['configurat'],['configurations']
Deployability,The file was moved - update path,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5162:21,update,update,21,https://root.cern,https://github.com/root-project/root/pull/5162,1,['update'],['update']
Deployability,The files installed in ELISPDIR have been removed. No need to be able to configure their install location.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13714:10,install,installed,10,https://root.cern,https://github.com/root-project/root/pull/13714,2,['install'],"['install', 'installed']"
Deployability,"The fill pattern sector made a crash on Mac with Cocoa.; The problem was mentioned here: https://root-forum.cern.ch/t/fillcolor-bug-in-root-6-22/43599/2; The fix was found by Timur:; «Filling with patterns is based on callbacks, and those callbacks need an extra information from ROOT, which; is passed as a parameter. Previously, we had this information as a stack-allocated object whose address we were passing. Starting from macOS 11/SDK 10.16, the rendering callback may be triggered when stack-allocated object had already exited its scope and finished its lifetime. Another change we need now — PatternContext also has to care about ‘fImage’ — retain and release then needed, simple non-owning reference is not working anymore.»",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7264:661,release,release,661,https://root.cern,https://github.com/root-project/root/pull/7264,1,['release'],['release']
Deployability,The first call to `frame->updateNormVars(*frame->getPlotVar())` should; be made before the first call to `frame->getNormVars()` in the; `RooAbsPdf::plotOn` function. This fixes the Jira issue [ROOT-5529](https://sft.its.cern.ch/jira/browse/ROOT-5529).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8362:26,update,updateNormVars,26,https://root.cern,https://github.com/root-project/root/pull/8362,1,['update'],['updateNormVars']
Deployability,"The fix for newer TBB versions is in master, but 6.22.06 and below cannot use TBB 2021 and above, so CMake should reject these versions during the configuration phase. The error at compilation is known (usage of deprecated functionality which is dropped in TBB 2021.1.1):; ```; root-6.22.06/core/imt/src/TPoolManager.cxx:10:10: fatal error: tbb/task_scheduler_init.h: No such file or directory; #include ""tbb/task_scheduler_init.h""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~; compilation terminated.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6933:147,configurat,configuration,147,https://root.cern,https://github.com/root-project/root/issues/6933,1,['configurat'],['configuration']
Deployability,"The flag is enabled by default for CMAKE_BUILD_TYPE=Debug and dev=ON and; has the effect that the -DNDEBUG flag is **not** attached to the; CMAKE_C_FLAGS and CMAKE_CXX_FLAGS. Fixes #6448. I'll also add a sentence to the release notes before merging something. However, note that the default behaviour of ROOT has only changed for the `dev=ON` option, which has now asserts enabled. Do we like this or shall I remove it from the dev mode?. I can also take care of the infrastructure (aka rootspi) so that we actually define that flag for all interesting builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6560:220,release,release,220,https://root.cern,https://github.com/root-project/root/pull/6560,1,['release'],['release']
Deployability,"The following PR introduced some changes in the TCling shutdown; logic:; https://github.com/root-project/root/pull/4675. One of these changes affects clingwrapper.cxx in Cppyy, but the; functionality it relies on (TROOT::Initialize) is not yet in the; mini-ROOT of Cppyy, which is at the moment working with ROOT 6.18,; so we cannot push the clingwrapper change to upstream Cppyy now. For that reason, until Cppyy updates its ROOT to 6.20, we need to; keep this patch to modify our copy of Cppyy to invoke; TROOT::Initialize in the constructor of ApplicationStarter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4747:414,update,updates,414,https://root.cern,https://github.com/root-project/root/pull/4747,2,"['patch', 'update']","['patch', 'updates']"
Deployability,"The following code:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TFile.h>; #include <TTree.h>. int main() {; ROOT::RDataFrame(32).Define(""idx"", ""rdfentry_"").Snapshot(""t1"", ""f.root"");. ROOT::RDF::RSnapshotOptions opts;; opts.fMode = ""update"";; ROOT::RDataFrame(""t1"", ""f.root""); .Define(""x"", ""idx*idx""); .Snapshot(""t2"", ""f.root"", {""x"", ""idx""}, opts);. TFile f(""f.root"");; auto *tmain = f.Get<TTree>(""t1"");; auto *tfriend = f.Get<TTree>(""t2"");; tmain->AddFriend(tfriend);. ROOT::RDataFrame(*tmain).Display("".*"", 100)->Print();. return 0;; }; ```; prints. ```; idx | t2.x | x | t2.idx |; 0 | 0 | 0 | 0 |; 1 | 1 | 1 | 1 |; 2 | 4 | 4 | 2 |; 3 | 9 | 9 | 3 |; 4 | 16 | 16 | 4 |; 5 | 25 | 25 | 5 |; ```. where `idx` and `t2.idx` are actually two different columns (one in the main tree and the other in the friend tree) but `x` and `t2.x` are two valid spellings of the _same_ column, which should then be printed only once. I think `Display` gets tripped up by the output of `RLoopManager::GetColumnNames()`, which reports the two valid spellings of `x`. It should instead use the same logic as `Snapshot`, which removes duplicates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8450:239,update,update,239,https://root.cern,https://github.com/root-project/root/issues/8450,1,['update'],['update']
Deployability,"The following, very particular, combination triggers a test failure:; * Fedora 39; * C++20; * ROOT built in Release mode (-O3); * The test `dataframe-vecops`, which needs to be run via ctest and using gtest infrastructure; * The test being compiled in release mode too. The failure is:; ```; 730/2406 Test #393: gtest-tree-dataframe-test-dataframe-vecops ........................................................***Failed 5.01 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RDFAndVecOps; [ RUN ] RDFAndVecOps.ReadStdVectorAsRVec; [ OK ] RDFAndVecOps.ReadStdVectorAsRVec (4678 ms); [ RUN ] RDFAndVecOps.DefineRVec; [ OK ] RDFAndVecOps.DefineRVec (0 ms); [ RUN ] RDFAndVecOps.SnapshotRVec; [ OK ] RDFAndVecOps.SnapshotRVec (6 ms); [ RUN ] RDFAndVecOps.RVecBool; double free or corruption (out); CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ```. And gdb says:; ```; 0 0x00007f25d4eae834 in __pthread_kill_implementation () from /lib64/libc.so.6; 1 0x00007f25d4e5c8ee in raise () from /lib64/libc.so.6; 2 0x00007f25d4e448ff in abort () from /lib64/libc.so.6; 3 0x00007f25d4e457d0 in __libc_message.cold () from /lib64/libc.so.6; 4 0x00007f25d4eb87a5 in malloc_printerr () from /lib64/libc.so.6; 5 0x00007f25d4eba840 in _int_free_merge_chunk () from /lib64/libc.so.6; 6 0x00007f25d4ebd3de in free () from /lib64/libc.so.6; 7 0x00007f25d6c5efa8 in TList::Delete(char const*) () from /github/home/ROOT-CI/build/lib/libCore.so; 8 0x00007f25d6c56566 in THashList::Delete(char const*) () from /github/home/ROOT-CI/build/lib/libCore.so; 9 0x00007f25d67235b5 in TDirectoryFile::Close(char const*) () from /github/home/ROOT-CI/build/lib/libRIO.so; 10 0x00007f25d6741406 in TFile::Close(char const*) () from /github/home/ROOT-CI/build/lib/libRIO.so; 11 0x00000000004324",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14803:108,Release,Release,108,https://root.cern,https://github.com/root-project/root/pull/14803,2,"['Release', 'release']","['Release', 'release']"
Deployability,"The framework one depends on https://github.com/root-project/root/issues/6753; and https://gitlab.kitware.com/cmake/cmake/-/issues/21293; before we can potentially use it. And anyway if users install their own; Python we should be nice and use that, not Python coming with Xcode / cmd line tools. Works around:; dlopen(/Users/sftnight/build/jenkins/night/LABEL/mac10beta/SPEC/cxx17/V/master/build/lib/libROOTTPython.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3; Referenced from: /Users/sftnight/build/jenkins/night/LABEL/mac10beta/SPEC/cxx17/V/master/build/lib/libROOTTPython.so; Reason: image not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6789:192,install,install,192,https://root.cern,https://github.com/root-project/root/pull/6789,1,['install'],['install']
Deployability,"The function TLatex::DrawLatex() only copied the Text-Attributes, but not the Line-Attributes to the newly created TLatex-Object which does not seem logical to me. Please correct me if there was a purpose for not copying the Line-Attributes. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9211:293,update,updated,293,https://root.cern,https://github.com/root-project/root/pull/9211,1,['update'],['updated']
Deployability,"The function `EnforceInitOrder()` was using `ImplicitlyDefineFunction()` as a shortcut to define a function returning an int. Future upgrades of LLVM will add an assert in that function because it is not allowed to be used when compiling C++, which Cling obviously does.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12052:133,upgrade,upgrades,133,https://root.cern,https://github.com/root-project/root/pull/12052,1,['upgrade'],['upgrades']
Deployability,"The functionality to fit pulls in the RooMCStudy with a Gaussian is; widely used, and it's not good that it uses a RooGenericPdf because of; the numeric integration. Probably the RooGaussian was not used because unlike the RooMCStudy, the; RooGaussian is not in RooFitCore and using it would result in a circular; dependency. This commit suggests a way to use the RooGaussian anyway, via the; RooWorkspace factory interface. The PR also includes a second commit that gets rid of manual memory management in the `RooMCStudy` class, which also affects the friend class `RooAbsMCStudyModule` that accesses some protected members of the RooMCStudy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11777:153,integrat,integration,153,https://root.cern,https://github.com/root-project/root/pull/11777,1,['integrat'],['integration']
Deployability,"The generation of our PCH/PCM file requires only the header files to be in; place. There is no direct relationship between if the dictionaries will be; built or not. This patch fixes a build system bottleneck (esp visible when building in; -DLLVM_BUILD_TYPE=Debug), namely we use only one core to build the pch. Another; advantage is that now we can just say make Core or make Cling and fire up ROOT; without having to wait very long.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1188:171,patch,patch,171,https://root.cern,https://github.com/root-project/root/pull/1188,1,['patch'],['patch']
Deployability,The getNameAsString interface causes a lot of temporary allocations.; The analysis if a decl is a cling-style wrapper can work only on a; simple declarations on the global scope. This patch filters out complex declarations (eg in namespaces) and; checks only the identifier content. The patch reduces the memory footprint difference shown in root-project/root#3012.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3593:184,patch,patch,184,https://root.cern,https://github.com/root-project/root/pull/3593,2,['patch'],['patch']
Deployability,The headers in the new PyROOT are not installed with COMPONENT headers.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6237:38,install,installed,38,https://root.cern,https://github.com/root-project/root/pull/6237,1,['install'],['installed']
Deployability,"The idea is to catch branch names, which will lead to problems when using the tree with `Draw` or `MakeClass`.; This can either be the member variables (branch names and `b_`branch names) which have to keep the generated code compilable (and ensure it does what it is expected to do). And the variable names should not lead to confusion with formula evaluation in Draw (e.g. branch names which are pure numbers). The tests suggested here are:; - test if branch name is a valid c++ variable name (w/o testing keywords).; - test if branch name begins with ""b_"" (potential problem with MakeClass). on top of that, I also have a [black list](https://github.com/pseyfert/tmva-branch-adder/blob/master/src/blacklist.cpp) of unfortunate branch names: methods of TTrees, which would clash in MakeClass, c++ keywords, variable types, and things TTree::Draw can parse (though I don't see how `TTree::Draw(""cos(x)"")` would clash with `TTree::Draw(""cos"")` if there is a variable named `cos`. Because the function `cos` wouldn't work without argument, and the variable `cos` wouldn't work with argument). I only warn here and don't abort the branch initialisation, not to break third party code (variables with `.` are probably common [e.g. dynamically generated from float](http://lhcb-release-area.web.cern.ch/LHCb-release-area/DOC/davinci/latest_doxygen/d9/d80/_tuple_tool_cone_isolation_8cpp_source.html#l00204) ). Feedback request:; I'm unsure if putting the blacklist into TBranch.cxx is really the best solution to apply here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/185:1274,release,release-area,1274,https://root.cern,https://github.com/root-project/root/pull/185,2,['release'],['release-area']
Deployability,"The idea of the RooGenProdProj is that we divide two integral objects; each created with this makeIntgral() function to get the normalized; integral of a product. Therefore, we don't need to normalize the; numerater and denominator integrals themselves. Doing the normalization; would be expensive and it would cancel out anyway. However, if we don't; specify an explicit normalization integral in createIntegral(), the; last-used normalization set might be used to normalize the pdf,; resulting in redundant computations. For this reason, the normalization set of the integrated pdfs is fixed; to an empty set in this case. Note that in RooFit, a nullptr; normalization set and an empty normalization set is not equivalent. The; former implies taking the last-used normalization set, and the latter; means explicitly no normalization. This fixes the performance regression reported in https://github.com/root-project/root/issues/11814, and a new unit; test is implemented to make sure no new numeric integrals pop up in the; reproducer code to that issue. Unfortunately, this change means that there will be again warnings about; missing `RooAddPdf` normalization sets, but this is not a regression; because these warnings only got fixed in the 6.28 development cycle in; https://github.com/root-project/root/commit/290b478710a90351bd7b15130a7a81e01b461940. This PR also includes some other minor improvements explained in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12010:569,integrat,integrated,569,https://root.cern,https://github.com/root-project/root/pull/12010,1,['integrat'],['integrated']
Deployability,"The inconsistent types were also observed on 32-bit Linux. In ROOT, this was hotfixed by adding a check for 32-bit Linux in the; preprecessor check, but this required including `RConfig.h`. I don't; think this is desirable. A better and more direct check for the underlying problem case is to; check if `long int` and `int` have the same size. This is part of the effort to reduce the differences between PyROOT and; upstream CPyCppyy. I opened the same PR for upstream CPyCppyy, so there is no need to; create a patch file for that if the upstream PR gets merged. One of the; existing patches can actually be removed then. Related commits:; * https://github.com/wlav/CPyCppyy/commit/8a72866b423ad153403aed356e0cc25d763a5894; * https://github.com/root-project/root/commit/02251b5dac0f5ea957bf8be7c8c360bd31c8d45f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14655:77,hotfix,hotfixed,77,https://root.cern,https://github.com/root-project/root/pull/14655,3,"['hotfix', 'patch']","['hotfixed', 'patch', 'patches']"
Deployability,"The input attribute was not used in the correct way, but in the inverse mode.; This is not a problem when just transposing two axes, but it is not correct for >=3 axes. Update also the generated code by using contigous writes that shoould be faster and add more documentation. Add also a new utility function to compute strides from shape of a vector. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10348:169,Update,Update,169,https://root.cern,https://github.com/root-project/root/pull/10348,2,"['Update', 'update']","['Update', 'updated']"
Deployability,"The installation instructions in the README were outdated: they only; mentioned pre-compiled binaries, while https://root.cern/install offers; a more complete overview of available installation channels. The building instructions were misleading (see e.g.; https://root-forum.cern.ch/t/cmake-generate-step-failed-rhel8/45400/16); and incomplete (they don't mention pre-requisites and make certain; assumptions about `pwd` and directory names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8457:4,install,installation,4,https://root.cern,https://github.com/root-project/root/pull/8457,3,['install'],"['install', 'installation']"
Deployability,"The integral of the crystal ball shape might vanish quickly due to; a finite precision when integrating far from the centre.; This leads to divisions by zero.; Now, a very small value is returned.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4065:92,integrat,integrating,92,https://root.cern,https://github.com/root-project/root/pull/4065,1,['integrat'],['integrating']
Deployability,"The integrator implementations are meant to be created via the numeric integrator factory interface. Making them public is therefore not necessary, and not having them in the public interface gives us more flexibility when refactoring later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12146:4,integrat,integrator,4,https://root.cern,https://github.com/root-project/root/pull/12146,2,['integrat'],['integrator']
Deployability,"The lazy loading approach may be faster, but it is continuously leading to problems with template instantiations and ODR violation checks in the most inconvenient places.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13112:51,continuous,continuously,51,https://root.cern,https://github.com/root-project/root/pull/13112,1,['continuous'],['continuously']
Deployability,"The lazy loading approach may be faster, but it is continuously leading to problems with template instantiations and ODR violation checks in the most inconvenient places. Fixes #12003",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12238:51,continuous,continuously,51,https://root.cern,https://github.com/root-project/root/pull/12238,1,['continuous'],['continuously']
Deployability,"The link system to the notebooks was modified to appear in the brief description. The brief description and link to source files were removed from the documentation for files type ""file"". Several tutorials were updated to create notebooks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/202:211,update,updated,211,https://root.cern,https://github.com/root-project/root/pull/202,1,['update'],['updated']
Deployability,The llvm upgrade broke users builds because it double finds the llvm external; project cling. Remove the overspecification. Note that if there is still an issue with the incrementals one needs to delete; CMakeCache.txt file in the main directory.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/620:9,upgrade,upgrade,9,https://root.cern,https://github.com/root-project/root/pull/620,1,['upgrade'],['upgrade']
Deployability,The llvm9 JIT issued callbacks when a symbol was missing and we reacted on it by loading the relevant library. In root-project/root@9b2041e3 we have kept the logic but now the JIT started querying more often even for symbols which are okay to be missing. In turn that leads to scanning all libraries causing performance issues. This patch tries to limit this functionality only in contexts where automatic loading is allowed. In addition when computing the offsets of a constant variable declaration we compute the initializers instead of searching in the shared objects.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14287:333,patch,patch,333,https://root.cern,https://github.com/root-project/root/pull/14287,1,['patch'],['patch']
Deployability,"The logic from RooAbsArg is copied into RooAbsData. This allows to use the hash-map functionality of RooLinkedList; for RooAbsData objects, as the namePtr mechanism allows to track; renaming and therefore avoids false negatives that result in; linear scans of the collection. In turn, this improves significantly the run-time of large workspace; imports (x2 to x4), which were dominated by embeddedData() calls.; This patch is based on the JSON tool use-case, but presumably will; significantly also improve other heavy uses of workspace import, such; as Higgs combination workspaces manipulation workflows. The cost of one additional pointer per RooAbsData object seems a low; price to pay.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9684:418,patch,patch,418,https://root.cern,https://github.com/root-project/root/pull/9684,1,['patch'],['patch']
Deployability,The loopback option has been removed in January release.; The change in #14136 allows to disable loopback in REveManager.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14779:48,release,release,48,https://root.cern,https://github.com/root-project/root/pull/14779,1,['release'],['release']
Deployability,"The main change in this PR is that the `CustomColumn` term is replaced by the clearer, shorter `Define` term. This require quite a few changes all over RDataFrame internals. Motivation for the change can be found below, copy-pasted from the commit message. This will make future backports a bit of a pain, but I think it's worth doing it now, for the following reasons:; * we are at a historical low of RDF-related open bugs -> less backports are expected in the future; * recent large refactorings in RAction.hxx (#6220) and in the column reader logic (#6170) already make backports much less likely to apply cleanly to release branches, so if there is a less bad time to do this, it's probably now; * expected upcoming refactorings necessary to support bulk entry processing will put another nail in the coffin of backportable bug-fixes; * I think we can all agree that RCustomColumn is a terribly opaque name for something that at this point we all know as a ""Define"", and in a few years I'd rather not have doctoral students complain about how my class names are completely arbitrary and unnecessarily hard to understand . The original commit message:. Until recently, RCustomColumns could correspond to data-source columns; or defined columns. Due to recent refactorings, RCustomColumns are now; back to serving only their original purpose: representing Define nodes; in the computation graph.; RCustomColumn is a very opaque name, and it crops up when debugging,; reading code and looking at performance profilings. The new name,; RDefine, clearly describes what the class is supposed to do and it is in; line with RDF's naming convention (we already have RFilter). Other names also become much more readable and shorter:; RBookedCustomColumns becomes RBookedDefines, RJittedCustomColumn becomes; RJittedDefine, and so forth.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6223:621,release,release,621,https://root.cern,https://github.com/root-project/root/pull/6223,1,['release'],['release']
Deployability,The main change is the renaming from `RBookedDefines` to `RColumnRegister`:; we already abuse this class to also keep track of aliases.; Soon we will also keep track of defined systematic variations here.; With this patch we clarify the role of this class with a more appropriate name.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9466:216,patch,patch,216,https://root.cern,https://github.com/root-project/root/pull/9466,1,['patch'],['patch']
Deployability,"The main motivation is because it is a clear blocker for proper cross-compilation. Also, the tutorial itself is already run as the first tutorial irrespective of the build configuration so the test is actually repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15930:172,configurat,configuration,172,https://root.cern,https://github.com/root-project/root/pull/15930,1,['configurat'],['configuration']
Deployability,"The marker size in Quartz was using fixed value 1, ignoring that the size must be scaled for retina displays. # This Pull request:; Propagates the scaled marker size to the CGContextFillRect method in charge of the actual drawing. ## Changes or fixes:; Fixes (among others) the wrong ray-tracing output mentioned in #12035. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12055:375,update,updated,375,https://root.cern,https://github.com/root-project/root/pull/12055,1,['update'],['updated']
Deployability,"The marker styles 3, 5 and 31 were draw different depending on whether they were drawn by a class based on TVirtualX or based on TVirtualPS as it can be seen in this picture:; ![temp](https://user-images.githubusercontent.com/5320187/72254803-64142680-3605-11ea-8255-40dd13038c80.jpg); Furthermore, the marker styles 9-19 were treated differently (In TVirtualX classes they were treated like marker style 1 and in TVirtualPS classes they were treated like marker style 20). This patch changes the drawing of TVirtualPS based classes to the drawing of TVirtualX based classes like for example TGX11. The updated classes are TPDF, TPostscript, TImageDump and TSVG. Since this slightly changes the corresponding file output, some reference values for testing had to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4762:479,patch,patch,479,https://root.cern,https://github.com/root-project/root/pull/4762,3,"['patch', 'update']","['patch', 'updated']"
Deployability,The meta-data envelope will not be part of the v1.0 specification. It will likely come later as a minor format update. Note that this change breaks forward compatibility.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16345:111,update,update,111,https://root.cern,https://github.com/root-project/root/pull/16345,1,['update'],['update']
Deployability,The minimum dask version in requirements.txt was updated to 2022.02 by https://github.com/root-project/root/pull/11371. Also update it when looking for a dask installation in the cmake configuration.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11452:49,update,updated,49,https://root.cern,https://github.com/root-project/root/pull/11452,4,"['configurat', 'install', 'update']","['configuration', 'installation', 'update', 'updated']"
Deployability,The most common way to deal with columns containing collections in an; RDataFrame execution is through RVec. The changes in this commit allow; reading on-disk std::array fields as RVecs in memory. A new RArrayAsRVec; RField subclass is implemented with this aim. UPDATE:; Tests are present for:; 1. `std::array`; 2. Combinations of `std::array` and `ROOT::RVec` up to 4 levels of nestedness; 3. Custom classes containing `std::array` and combinations with `ROOT::RVec` in the data members,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13040:263,UPDATE,UPDATE,263,https://root.cern,https://github.com/root-project/root/pull/13040,1,['UPDATE'],['UPDATE']
Deployability,"The motivtion of this update is the following:. It would be nice to be able to use ROOT compied with c++14 in projects that require c++ 17.; Right now it is not possible because of this header even if everything was compiled with the same compiller.; e.g. that is the case for recent Fedora builds, where root is build with gcc11 (default c++17) but with c++14 standard. An alternative is to be able regulate this behaviour with a flag, i.e.; ```; #if defined( R__HAS_STD_STRING_VIEW) || ( ROOT_IGNORE_RCONFIGURE && ( (defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || __cplusplus >= 201703L ) ). #else. ```; Best regards,. Andrii",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8108:22,update,update,22,https://root.cern,https://github.com/root-project/root/pull/8108,1,['update'],['update']
Deployability,The name of the d3 library included with jsroot was changed from d3.v3; to just d3. This updates JsMVA to use the new name. Note: Not sure if more changes are required to propagate to SWAN and notebook environment. Please advise :),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2353:89,update,updates,89,https://root.cern,https://github.com/root-project/root/pull/2353,1,['update'],['updates']
Deployability,"The name of the most up-to-date `sonnet` packge is actually `dm-sonnet`:. https://github.com/google-deepmind/sonnet. The old `sonnet` can't be used, because it maximally supports Python 3.8. With ROOT, we want to support all Python versions starting from 3.8. Follows up on 7d83c00605c4. I tested locally that the GNN tests work in the updated Python environment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15605:336,update,updated,336,https://root.cern,https://github.com/root-project/root/pull/15605,1,['update'],['updated']
Deployability,"The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:; 1) Replace gROOTMutex by a TRWMutexImp; 2) Add R__READLOCKGUARD; 3) Add a TListWithRWLock and THashListWithRWLock; 4) Use those in TROOT; 5) Remove current external locks for those ROOT lists (in particular the ListOfFiles); 6) Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock.; 7) Introduce scalability test on RecursiveRemove",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/676:382,Update,Update,382,https://root.cern,https://github.com/root-project/root/pull/676,2,"['Update', 'update']","['Update', 'update']"
Deployability,"The new release includes some improvements in Reverse mode:; * Reduce the quadratic cloning complexity to linear.; * Support variable reassignments pontentially depending on control flow.; * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`.; * Allow assignments to array subscripts.; * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`; * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5282:8,release,release,8,https://root.cern,https://github.com/root-project/root/pull/5282,4,"['Release', 'patch', 'release', 'upgrade']","['ReleaseNotes', 'patch', 'release', 'upgrade']"
Deployability,The new release includes some improvements in both Forward and; Reverse mode:; * Better correctness of C++ constructs -- handle scopes properly; allow proper; variable shadowing; and preserve namespaces.; * Efficient evaluation in forward mode.; * Reduced cloning complexity.; * Handle more C++ constructs -- variable reassignments and for loops. See more at: https://github.com/vgvassilev/clad/blob/v0.3/docs/ReleaseNotes.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2714:8,release,release,8,https://root.cern,https://github.com/root-project/root/pull/2714,2,"['Release', 'release']","['ReleaseNotes', 'release']"
Deployability,"The new release includes some improvements in both Forward and; Reverse mode:; * Extend the way to specify a dependent variables. Consider function, `double f(double x, double y, double z) {...}`, `clad::differentiate(f, ""z"")` is equivalent to `clad::differentiate(f, 2)`. `clad::gradient(f, ""x, y"")` differentiates with respect to `x` and `y` but not `z`. The gradient results are stored in a `_result` parameter in the same order as `x` and `y` were specified. Namely, the result of `x` is stored in `_result[0]` and the result of `y` in `_result[1]`. If we invert the arguments specified in the string to `clad::gradient(f, ""y, x"")` the results will be stored inversely.; * Enable recursive differentiation.; * Support single- and multi-dimensional arrays -- works for arrays with constant size like `double A[] = {1, 2, 3};`, `double A[3];` or `double A[1][2][3][4];`. See more at: https://github.com/vgvassilev/clad/blob/v0.5/docs/ReleaseNotes.md. Kudos go to @efremale!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3652:8,release,release,8,https://root.cern,https://github.com/root-project/root/pull/3652,2,"['Release', 'release']","['ReleaseNotes', 'release']"
Deployability,"The new release includes some improvements in both Forward and; Reverse mode:; * Support `x += y`, `x -= y`, `x *= y`, `x /= y`, `x++`, `x--`, `++x`, `--x`; in forward mode.; * Reduce emission of unused expressions; * Add a special `#pragma clad ON/OFF/DEFAULT` to annotate regions which; contain derivatives; * Various small optimizations. See more at: https://github.com/vgvassilev/clad/blob/v0.4/docs/ReleaseNotes.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2918:8,release,release,8,https://root.cern,https://github.com/root-project/root/pull/2918,2,"['Release', 'release']","['ReleaseNotes', 'release']"
Deployability,The new release includes some improvements:; * Implement #pragma clad ON/OFF/DEFAULT to control regions where clad is active; * Add getCode() interface for interactive use. See more at: https://github.com/vgvassilev/clad/blob/v0.8/docs/ReleaseNotes.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8275:8,release,release,8,https://root.cern,https://github.com/root-project/root/pull/8275,2,"['Release', 'release']","['ReleaseNotes', 'release']"
Deployability,The new release includes some improvements:; * Implement hessian matrices via the clad::jacobian interface. See more at: https://github.com/vgvassilev/clad/blob/v0.7/docs/ReleaseNotes.md. This patch should be the last part of the fix for ROOT-10886.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6346:8,release,release,8,https://root.cern,https://github.com/root-project/root/pull/6346,3,"['Release', 'patch', 'release']","['ReleaseNotes', 'patch', 'release']"
Deployability,"The newly integrated cross validation has suffered two seemingly random failures. Reported [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15871/testReport/projectroot.tmva.tmva.test/crossvalidation/TMVA_CrossValidation_Serialise/) and [here](https://epsft-jenkins.cern.ch/job/root-incremental-master-noimt/BUILDTYPE=Debug,COMPILER=gcc49,LABEL=centos7/1803/testReport/projectroot.tmva.tmva.test/crossvalidation/TMVA_CrossValidation_Serialise/). The root cause is still not properly understood, but this patch addresses two issues discovered by valgrind and which may be related.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1568:10,integrat,integrated,10,https://root.cern,https://github.com/root-project/root/pull/1568,2,"['integrat', 'patch']","['integrated', 'patch']"
Deployability,"The next 6.28 patch release should remove the `RooPower` and; `RooExpPoly` classes. It is an unfortunate but unavoidable change:; different classes with the same name and `ClassDef` version were used in; the CMS collaboration since at least the Higgs discovery. This name; collision caused massive problems in backwards compatibility and was; blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely; advertised, so people should not be affected by this removal. Based on; the feedback to this patch release, the `RooPower` and `RooExpPoly`; classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28; because they are skipping this ROOT release for combine. However, for; the sake of consistency, the classes are retroactively removed from all; release branches <= 6.30. The corresponding PR in ROOT 6.30:; https://github.com/root-project/root/pull/15299",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15330:14,patch,patch,14,https://root.cern,https://github.com/root-project/root/pull/15330,6,"['patch', 'release']","['patch', 'release']"
Deployability,"The next 6.30 patch release should remove the `RooPower` and; `RooExpPoly` classes. It is an unfortunate but unavoidable change:; different classes with the same name and `ClassDef` version were used in; the CMS collaboration since at least the Higgs discovery. This name; collision caused massive problems in backwards compatibility and is; blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely; advertised, so people should not be affected by this removal. Based on; the feedback to this patch release, the `RooPower` and `RooExpPoly`; classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15299:14,patch,patch,14,https://root.cern,https://github.com/root-project/root/pull/15299,4,"['patch', 'release']","['patch', 'release']"
Deployability,"The non-modules system iterates over all available rootmap files and adds their libraries as potential dependencies to the library which ACLiC builds. The built library relies on the explicit linking to load its dependencies when it is dlopened. This is necessary because we have no other way to resolve symbols. Fortunately, the modules dynamic linker has superior symbol resolution. We can rely on it when loading a shared library. This patch fixes failing tests on OSX when runtime_cxxmodules are on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4742:439,patch,patch,439,https://root.cern,https://github.com/root-project/root/pull/4742,1,['patch'],['patch']
Deployability,The old code didn't query the modules if the identifier is updated. This caused some checks to fail such as CheckABICompatibility().,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/558:59,update,updated,59,https://root.cern,https://github.com/root-project/root/pull/558,1,['update'],['updated']
Deployability,"The operations done by the LookupHelper are costly in both memory and; performance. Almost every operation requires memory allocation and parsing; of often non-trivial C++ code. Unfortunately, the LookupHelper is used very intensively by rootcling and; ROOT. The callers usually do not use any caching mechanisms and redo the; expensive operations over and over even though the answer is known to be; the same as before. For instance, building the dictionary of shows:. ```; MathCore:; Cached entries: 217; Total parse requests: 54051; Cache hits: 53834; TreePlayer:; Cached entries: 183; Total parse requests: 57697; Cache hits: 57514; ```. This patch introduces the first set of caching functionality. In; particular, each LookupHelper::find* function allocates a memory buffer; which is then stored in the clang::SourceManager. We hash the buffer; content and keep a mapping between a hash and FileID and next time we; encounter the same content we do not allocate a new FileID but reuse the; old one. We see decrease in memory footprint by 7% for non-cxxmodules ROOT. For cxxmodules we see significant reduction of the pcm sizes (by half); which translates into rss improvements:. ```; master before:; cpu time = 0.291462 seconds; sys time = 0.064409 seconds; res memory = 345.816 Mbytes; vir memory = 573.508 Mbytes; master after:; cpu time = 0.235828 seconds; sys time = 0.098327 seconds; res memory = 260.012 Mbytes; vir memory = 377.945 Mbytes; ```. Patch by Yuka Takahashi and me.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2483:647,patch,patch,647,https://root.cern,https://github.com/root-project/root/pull/2483,2,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,"The option ""G"" for RedrawAxis did not work for multigraphs. This patch fixes this and restructure this method.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4789:65,patch,patch,65,https://root.cern,https://github.com/root-project/root/pull/4789,1,['patch'],['patch']
Deployability,"The option `dataframe_distpyspark` is superseded by `test_distrdf_pyspark`, to clarify that finding pyspark and its dependencies (like Java) during configuration is strictly needed only for the tests. Generally speaking, pyspark (and Java) are optional runtime dependencies that interest only users of the distributed RDataFrame python module with the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7413:148,configurat,configuration,148,https://root.cern,https://github.com/root-project/root/pull/7413,1,['configurat'],['configuration']
Deployability,"The option was deprecated in ROOT 6.32 and should be removed for the next release, as anticipated by the deprecation warnings in 6.32. Follows up on https://github.com/root-project/root/pull/14395.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15159:74,release,release,74,https://root.cern,https://github.com/root-project/root/pull/15159,1,['release'],['release']
Deployability,"The order in which declarations are removed makes a difference, e.g. `MaybeRemoveDeclFromModule()` may require access to type information to make up the mangled name. Thus, we segregate declarations to be removed in `TagDecl`s (i.e., struct / union / class / enum) and other declarations. Removal of `TagDecl`s is deferred until all the other declarations have been processed. Declarations in each group are iterated in reverse order. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #12457.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12853:486,update,updated,486,https://root.cern,https://github.com/root-project/root/pull/12853,1,['update'],['updated']
Deployability,"The order in which declarations are removed makes a difference, e.g. `MaybeRemoveDeclFromModule()` may require access to type information to make up the mangled name. Thus, we segregate declarations to be removed in `TagDecl`s (i.e., struct / union / class / enum) and other declarations. Removal of `TagDecl`s is deferred until all the other declarations have been processed. Declarations in each group are iterated in reverse order. This PR is a backport of https://github.com/root-project/root/pull/12853 to v6.28. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #12457.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12854:569,update,updated,569,https://root.cern,https://github.com/root-project/root/pull/12854,1,['update'],['updated']
Deployability,The patch is a side-effect of addressing your comments in https://github.com/root-project/root/pull/8770,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8776:4,patch,patch,4,https://root.cern,https://github.com/root-project/root/pull/8776,1,['patch'],['patch']
Deployability,The patch teaches cling to print the proper address of C++ objects with overloaded address-of operator.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1716:4,patch,patch,4,https://root.cern,https://github.com/root-project/root/pull/1716,1,['patch'],['patch']
Deployability,"The patch that disables the initializer list pythonization should in principle not be necessary. @aaronj0, let's see which tests were actually failing because of this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16338:4,patch,patch,4,https://root.cern,https://github.com/root-project/root/pull/16338,1,['patch'],['patch']
Deployability,"The patch which I suggested on https://sft.its.cern.ch/jira/browse/ROOT-8056.; If the user uses GREP_OPTIONS which add characters to the output of grep (colors, but also filenames or line numbers), root cannot be started anymore. Ideally users would prefer an alias for `grep` over `GREP_OPTIONS` but the crash can also be avoided on the root side.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/144:4,patch,patch,4,https://root.cern,https://github.com/root-project/root/pull/144,1,['patch'],['patch']
Deployability,"The plugin system is refactored such that one integrator plugin does not necessarily need to be implemented by separate classes. Like this, we can use in the future more general implementations of the integrators for different plugins, e.g., we don't need to implement separate RooIntegrator1D and RooIntegrator2D classes. The `RooIntegratorBinding` is only supposed to be an implementation; detail of the `RooIntegrator2D` and the `RooSegmentedIntegrator2D` to; wrap the integrator for the second dimension. It's better to remove it from the public user interface. It is also; changed such that it takes ownership of the integrator, avoiding the; need for ownership management in the 2D integrator classes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13350:46,integrat,integrator,46,https://root.cern,https://github.com/root-project/root/pull/13350,5,['integrat'],"['integrator', 'integrators']"
Deployability,"The previous cling patches wraps `DeferredDeclsToEmit(vector<GlobalDecl>)`; into a struct that contains a `llvm::GlobalVlaue`, but it seems that this; field is useless and can be dropped. I have tested this patch in Cling and; spotted no new tests failing, so let's give ROOT a try. Signed-off-by: Jun Zhang <jun@junz.org>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11076:19,patch,patches,19,https://root.cern,https://github.com/root-project/root/pull/11076,2,['patch'],"['patch', 'patches']"
Deployability,"The previous implementation required TGeoTessellated shapes to be read attached to a TGeoManager. This removes the limitation, and allows also reading geometry files containing shapes converted to VecGeom corresponding solids. # This Pull request:. ## Changes or fixes:; * Restructured the `TGeoFacet` helper class, eliminating referencing vertices stored in the associated `TGeoTessellated` object, since this required calling a specific method `TGeoTessellated::AfterStreamer` to fix all the facet objects. The new version moves all vertex operations from TGeoFacet to the TGeoTessellated class, making the latter readable from a root file even if not connected to a `TGeoManager`; * Added persistency to the class `TGeoVGShape` which interfaces `TGeoShape` to `vecgeom::VPlacedVolume`. This allows to write/read geometry files after being converted to VecGeom. Upon reading, a check is made that the current root version was also compiled with VecGeom support, and if this is not the case a `Fatal` exception is fired. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14283",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14327:1073,update,updated,1073,https://root.cern,https://github.com/root-project/root/pull/14327,1,['update'],['updated']
Deployability,"The public TFile constructor cannot be used for files that must be read through remote protocols. This is a common source of confusion for users. I split the error in two commits, one for the C++ constructor and one for its pythonization. I would like to discuss:; 1. The wording of the error message; 2. The usage of `std::exception` in the C++ side. This should be a better practice in general, but the rest of TFile uses the `TObject::Error` method for this kind of problems. The downside of that is that it doesn't really stop the execution of the program. With the current status, the errors would look like this; ```python; >>> import ROOT; >>> f = ROOT.TFile(""https://root.cern/files/tutorials/hsimple.root""); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/programs/rootproject/rootinstall/tfile-constructor-error-distrdf-release/lib/ROOT/_pythonization/_tfile.py"", line 88, in _TFileConstructor; raise ValueError(""Cannot handle path to remote file '{}' in TFile constructor. Use TFile::Open instead."".format(args[0])); ValueError: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead.; ```; ```; $: root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 27 2022, 19:14:18 |; | From heads/master@v6-25-02-1893-ge1d4a59786 |; | With c++ (GCC) 12.1.1 20220507 (Red Hat 12.1.1-1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TFile f{""https://root.cern/files/tutorials/hsimple.root""};; Error in <TRint::HandleTermInput()>: std::invalid_argument caught: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead; ```; ```; $: ./",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11063:876,release,release,876,https://root.cern,https://github.com/root-project/root/pull/11063,1,['release'],['release']
Deployability,"The recent commit `565e9aa19a` updated the `getPropagatedError` with; some additional checks, but these checks caused segfaults in some; specifit usecases:. * where the `RooAbsReal` is a parameter in the fit result itself. * where the `RooAbsReal` is a variable unrelated to the fit result. * where the `RooAbsReal` depends only on some of the parameters in the; fit result. This commit fixes these usecases again. A unit test that checks that these usecases don't fail anymore is now; implemented in `testRooAbsReal`. This PR also adds some other new unit tests that cover recent PRs and issues.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11445:31,update,updated,31,https://root.cern,https://github.com/root-project/root/pull/11445,1,['update'],['updated']
Deployability,"The recently introduced pythonizations for the RDataFrame API allow passing; Python callables to operations such as Define and Filter, but there is no; support for other operations. For now, hide this functionality for the 6.28; release cycle, it will be available once all common operations are supported.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12053:229,release,release,229,https://root.cern,https://github.com/root-project/root/pull/12053,1,['release'],['release']
Deployability,"The related issues for the original 6.28.00 release:; 1. https://github.com/root-project/root/issues/11856. # 6.28.02. **Backports** that need to be made for the v6.28 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/12178; - [x] https://github.com/root-project/root/pull/12125; - [x] https://github.com/root-project/root/pull/12236; - [x] https://github.com/root-project/root/pull/12250; - [x] https://github.com/root-project/root/pull/12305; - [x] https://github.com/root-project/root/pull/12287. The backports were grouped in a few PRs to `v6-28-00-patches`:. 1. https://github.com/root-project/root/pull/12321",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12319:44,release,release,44,https://root.cern,https://github.com/root-project/root/issues/12319,2,"['patch', 'release']","['patches', 'release']"
Deployability,The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508. The bugfix PRs that need to be backported in this order to the 6.26 branch before the 6.26.02 patch release:. - [x] https://github.com/root-project/root/pull/9984; - [x] https://github.com/root-project/root/pull/9981; - [x] https://github.com/root-project/root/pull/10053; - [x] https://github.com/root-project/root/pull/10051; - [x] https://github.com/root-project/root/pull/9986; - [x] https://github.com/root-project/root/pull/10070; - [x] https://github.com/root-project/root/pull/10093; - [x] https://github.com/root-project/root/pull/10082; - [x] https://github.com/root-project/root/pull/10105; - [x] https://github.com/root-project/root/pull/10111; - [x] https://github.com/root-project/root/pull/10158; - [x] https://github.com/root-project/root/pull/10104; - [x] https://github.com/root-project/root/pull/10100; - [x] https://github.com/root-project/root/pull/10229; - [x] https://github.com/root-project/root/pull/10256; - [x] https://github.com/root-project/root/pull/10213; - [x] https://github.com/root-project/root/pull/10270; - [x] https://github.com/root-project/root/pull/10263; - [x] https://github.com/root-project/root/pull/10269; - [x] https://github.com/root-project/root/pull/10352; - [x] https://github.com/root-project/root/pull/10359; - [x] https://github.com/root-project/root/pull/10362; - [x] https://github.com/root-project/root/pull/10293. The backports were grouped in a few PRs to `v6-26-00-patches`:; 1. https://github.com/root-project/root/pull/10114; 2. https://github.com/root-project/root/pull/10252; 3. https://github.com/root-project/root/pull/10367; 4. https://github.com/root-project/root/pull/10376,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10112:41,release,releases,41,https://root.cern,https://github.com/root-project/root/issues/10112,4,"['patch', 'release']","['patch', 'patches', 'release', 'releases']"
Deployability,The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112. The bugfix PRs that need to be backported in this order to the 6.26 branch before the 6.26.04 patch release:. - [x] https://github.com/root-project/root/pull/10467; - [x] https://github.com/root-project/root/pull/10477; - [x] https://github.com/root-project/root/pull/10485; - [x] https://github.com/root-project/root/pull/10495; - [x] https://github.com/root-project/root/pull/10501; - [x] https://github.com/root-project/root/pull/10499; - [x] https://github.com/root-project/root/pull/10516; - [x] https://github.com/root-project/root/pull/10525; - [x] https://github.com/root-project/root/pull/9956; - [x] https://github.com/root-project/root/pull/10550; - [x] https://github.com/root-project/root/pull/10590; - [x] https://github.com/root-project/root/pull/10612; - [x] https://github.com/root-project/root/pull/10553; - [x] https://github.com/root-project/root/pull/10627. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10513; 2. https://github.com/root-project/root/pull/10554; 3. https://github.com/root-project/root/pull/10613; 4. https://github.com/root-project/root/pull/10667,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10493:41,release,releases,41,https://root.cern,https://github.com/root-project/root/issues/10493,4,"['patch', 'release']","['patch', 'patches', 'release', 'releases']"
Deployability,The release webpage https://root.cern/releases/release-62806/ contains a 'weird' tag for Fedora:. Should `VERSION_ID=` rather be removed instead of explictly stated in the filename?. Fedoraversion_id= 36 | root_v6.28.06.Linux-fedoraVERSION_ID=36-x86_64-gcc12.2.tar.gz | 302M; -- | -- | --,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14103:4,release,release,4,https://root.cern,https://github.com/root-project/root/issues/14103,3,['release'],"['release', 'release-', 'releases']"
Deployability,The relevant highlights are:. * Support better Windows (thanks to Bertrand Bellenot!);. * Disabled automatic discovery of system LLVM -- clad should only; search for LLVM at DCLAD_PATH_TO_LLVM_BUILD. On some platforms; (discovered by Oksana Shadura via rootbench) clad discovers the; system LLVM which is compatible in principle but this is not what; we want for ROOT. * Implemented -CLAD_BUILD_STATIC_ONLY -- this covers the ROOT usecase; where we do not need shared objects but link the libraries against; another shared object (libCling.so). This allows platforms which have; disabled LLVM_ENABLE_PLUGINS to still build clad and use it. Such; example is CYGWIN and Windows. See more at: https://github.com/vgvassilev/clad/releases/tag/v0.2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2462:725,release,releases,725,https://root.cern,https://github.com/root-project/root/pull/2462,1,['release'],['releases']
Deployability,"The search for a candidate repository and branch for `roottest` now works as follows: ; - If the current head is a well-known branch, e.g. `master` or `v6-28-00-patches`, use the matching branch upstream as the forked repository may be out-of-sync.; - Otherwise, try a branch that matches the name of the current head in the forked repository, if it exists; else try using the closest upstream head/tag below `HEAD`'s parent commit.; - As a last resort, if there is no preferred candidate, checkout the remote's default head. This patchset also adds some minor changes to the new CI in order to forward additional information about pull requests. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12975:161,patch,patches,161,https://root.cern,https://github.com/root-project/root/pull/12975,2,['patch'],"['patches', 'patchset']"
Deployability,"The standard `bool`, `true`, and `false` have been used in new RooFit; code for a few years now, and it's better to update also the old code; for consistency. This helps also for doxygen, when the a function with; one way of specifying the boolean is referenced by a signature that uses; the other way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10532:116,update,update,116,https://root.cern,https://github.com/root-project/root/pull/10532,1,['update'],['update']
Deployability,"The standard `double` was used in new RooFit code for a few years now,; and it's better to update also the old code for consistency. This helps; also for doxygen, when the a function with one way of specifying the; double is referenced by a signature that uses the other way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10592:91,update,update,91,https://root.cern,https://github.com/root-project/root/pull/10592,1,['update'],['update']
Deployability,"The string-based fit options are officially deprecated with this commit,; to finally remove them in the next release (ROOT v6.28). This will give us more flexibility when refactoring the RooMinimizer to; integrate new features like the batch mode, the new likelihood classes,; or automatic differentiation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9907:109,release,release,109,https://root.cern,https://github.com/root-project/root/pull/9907,2,"['integrat', 'release']","['integrate', 'release']"
Deployability,"The string-based fit options were deprecated for a long time, and now is; a good time to remove the support for this completely. This will give us more flexibility when refactoring the RooMinimizer to; integrate new features like the batch mode, the new likelihood classes,; or automatic differentiation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9890:202,integrat,integrate,202,https://root.cern,https://github.com/root-project/root/pull/9890,1,['integrat'],['integrate']
Deployability,"The sum of all the values passed to fill the `TStatistic` object has been added as a class data member. Meanwhile, `Fill`,`Print`, and `Merge` functions have been changed to accomodate the new statistic. The sum is initialized to zero when calling the constructor of TStatistic. Docs and test have been updated; accordingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3962:303,update,updated,303,https://root.cern,https://github.com/root-project/root/pull/3962,1,['update'],['updated']
Deployability,"The sum of weight, weight square and weigth * x used for statistics computation where not update when adding/merging THnBase classes. This fixes #11333",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11407:90,update,update,90,https://root.cern,https://github.com/root-project/root/pull/11407,1,['update'],['update']
Deployability,The system integrity protection (SIP) on osx blocks 'dangerous' env variables when spawning a new process. The MetaProcessor command `.!` which calls the shell does not propagate (DY)LD_LIBRARY_PATH variables which prevents cling from finding the modules. This patch introduces a new env variable CLING_PREBUILT_MODULE_PATH which contains the prebuilt modules' location where cling should look for modules. Patch by Alexander Penev (@alexander-penev)!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4516:261,patch,patch,261,https://root.cern,https://github.com/root-project/root/pull/4516,2,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,"The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15449:285,integrat,integrate,285,https://root.cern,https://github.com/root-project/root/pull/15449,1,['integrat'],['integrate']
Deployability,"The test should be just removed since the initial reason for having that test is now void. The reason was to have *some way* to check that the packages we thought we had on our CI machines were actually there, since the Jenkins node didn't have any environment management. Now with the github actions CI our environment is more properly managed, at least for Linux. MacOS should get the same treatment at some point, but we can now more safely say ""we know which packages are installed on the CI"" than before.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15286:476,install,installed,476,https://root.cern,https://github.com/root-project/root/pull/15286,1,['install'],['installed']
Deployability,"The test should reuse the prebuilt modules in the module cache. However, due to a mismatch between the module-related flags exported by FindROOT. There is a mismatch between the -D passed by cmake. This patch make sure that the build arguments match more closely the build setup of ROOT. Thus we can reuse the already built module files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2545:203,patch,patch,203,https://root.cern,https://github.com/root-project/root/pull/2545,1,['patch'],['patch']
Deployability,"The title says it all, needs to be backported to the 6.26 branch where I forgot to add such release notes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10086:92,release,release,92,https://root.cern,https://github.com/root-project/root/pull/10086,1,['release'],['release']
Deployability,"The undo buffer should only be kept for the current line (as in GNU readline). This commit clears the undo buffer in `Editor::ResetText()`, which is called after reading an input line. Fixes #10182. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #10182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10192:250,update,updated,250,https://root.cern,https://github.com/root-project/root/pull/10192,1,['update'],['updated']
Deployability,The update of the time step for the optimizer must be each batch update and not for each epoch. ; This affects the correction for the bias applied to the computed first and second momentum when using ADam. (see https://root.cern.ch/doc/master/Adam_8h_source.html#l00147 ). . After this correction the obtained convergence results look better and compatible with what obtained when using when using Keras,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5042:4,update,update,4,https://root.cern,https://github.com/root-project/root/pull/5042,2,['update'],['update']
Deployability,The user might use utilities which print on cout and expects the output; to be shown immediately. This patch automatically flushes std::cout after each execution of a wrapper.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3533:103,patch,patch,103,https://root.cern,https://github.com/root-project/root/pull/3533,1,['patch'],['patch']
Deployability,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.06. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/10840; - [x] https://github.com/root-project/root/issues/10869. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/9423; - [x] https://github.com/root-project/root/pull/10736; - [x] https://github.com/root-project/root/pull/10740; - [x] https://github.com/root-project/root/pull/10754; - [x] https://github.com/root-project/root/pull/10802; - [x] https://github.com/root-project/root/pull/10884; - [x] https://github.com/root-project/root/pull/10885; - [x] https://github.com/root-project/root/pull/10832; - [x] https://github.com/root-project/root/pull/10921; - [x] https://github.com/root-project/root/pull/10909; - [x] https://github.com/root-project/root/pull/9912; - [x] https://github.com/root-project/root/pull/10989; - [x] https://github.com/root-project/root/pull/11018; - [x] https://github.com/root-project/root/pull/11023. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10803; 2. https://github.com/root-project/root/pull/10986; 3. https://github.com/root-project/root/pull/11057",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10758:70,patch,patch,70,https://root.cern,https://github.com/root-project/root/issues/10758,8,"['patch', 'release']","['patch', 'patches', 'release', 'releases']"
Deployability,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.08. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493; 4. https://github.com/root-project/root/issues/10758. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/11332; - [x] https://github.com/root-project/root/issues/11396. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/11023; Only the last commit, which has not been backported for the last patch release yet (the rest of PR was backported before the 6.26.04 release); - [x] https://github.com/root-project/root/pull/11123; Only the first commit that relates to the batch mode; - [x] https://github.com/root-project/root/pull/11162; - [x] https://github.com/root-project/root/pull/11129; Only the first two commits that are note just code modernization; - [x] https://github.com/root-project/root/pull/11134; Excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11195; - [x] https://github.com/root-project/root/pull/11346; - [x] https://github.com/root-project/root/pull/11343; Only the first commit that is not code modernization; - [x] https://github.com/root-project/root/pull/11401; - [x] https://github.com/root-project/root/pull/11406; Only the last commit that changes the PDF cloning behavior, also excluding the `testRooSimultaneous` changes in that commit; - [x] https://github.com/root-project/root/pull/11416; excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11417; - [x] https://github.com/root-project/root/pull/11419; - [x] https://github.com/root-project/root/pull/1084",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11059:70,patch,patch,70,https://root.cern,https://github.com/root-project/root/issues/11059,10,"['patch', 'release']","['patch', 'release', 'releases']"
Deployability,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.10. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493; 4. https://github.com/root-project/root/issues/10758; 5. https://github.com/root-project/root/issues/11059. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/11760. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/11566; - [x] https://github.com/root-project/root/pull/11584; Only the first commit that is not code modernization; - [x] https://github.com/root-project/root/pull/10873; - [x] https://github.com/root-project/root/pull/11455; Only the third commit that fixes a problem with the `RooBinSamplingPdf`, backporting the full multi-range fit implementation is way too dangerous.; - [x] https://github.com/root-project/root/pull/11912; Only the second and third commit about the `RooBinIntegrator`; - [x] https://github.com/root-project/root/pull/12119; - [x] https://github.com/root-project/root/pull/12305; Only the first commit that is not code modernization.; - [x] https://github.com/root-project/root/pull/12696; - [x] https://github.com/root-project/root/pull/12707; - [x] https://github.com/root-project/root/pull/12867; - [x] https://github.com/root-project/root/pull/12969; - [x] https://github.com/root-project/root/pull/12973. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/11748; 2. https://github.com/root-project/root/pull/11848; 3. https://github.com/root-project/root/pull/11961; 4. https://github.com/root-project/root/pull/12322; 5. https://github.com/root-project/root/pull/12709; 6. https://github.co",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11534:70,patch,patch,70,https://root.cern,https://github.com/root-project/root/issues/11534,7,"['patch', 'release']","['patch', 'release', 'releases']"
Deployability,"The variable contains the path to installation_directory/lib, where the; python packages are installed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5471:93,install,installed,93,https://root.cern,https://github.com/root-project/root/pull/5471,1,['install'],['installed']
Deployability,"The variables present in TError.h are used throughout the ROOT libraries. Anytime one of these variables is requested, e.g. with a simple test such as `python -c ""import ROOT; ROOT.kError""`, the interpreter will lookup the corresponding symbol. Previously, the variables were declared and defined in the header directly but were not generating any symbol since the linkage was internal. With this commit, provide external linkage to these variables so that the corresponding symbols are materialized in libCore.so. As a consequence, a huge number of extra lookups by cling is avoided. This is in direct reference to https://github.com/root-project/root/pull/14261#issuecomment-1863067950 , a followup issue to the original issue at https://github.com/cms-sw/cmssw/issues/43077. These are the results of the patch:. Before:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 16279; ```. After:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 417 ; ```. FYI @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14276:807,patch,patch,807,https://root.cern,https://github.com/root-project/root/pull/14276,1,['patch'],['patch']
Deployability,"The warning seems to be a false positive since the referenced object is a std::type_info, which should always have static lifetime. This patch somehow silences it. Possibly related gcc bug report: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=109671",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13045:137,patch,patch,137,https://root.cern,https://github.com/root-project/root/pull/13045,1,['patch'],['patch']
Deployability,"There are three ways to get the code of latest-stable:; a) git clone as suggested by https://root.cern/install/: 1.4GiB; b) git clone with --depth=20: 673MiB; c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10238:103,install,install,103,https://root.cern,https://github.com/root-project/root/issues/10238,1,['install'],['install']
Deployability,"There is a `if(clad)` in the CMakeLists.txt to disable clad if there is no internet connection. However, it doesn't work right now, because it's after `include(RootBuildOptions)`, meaning the `clad` flag is not even set yet (only if explicitly set by the user, but not if we go with the default `clad=ON`). This logic error is fixed by this commit. To be backported to the 6.32 release branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15488:378,release,release,378,https://root.cern,https://github.com/root-project/root/pull/15488,1,['release'],['release']
Deployability,"There is a dependency problem between the RooFit packages that will; start to annoy us soon. Right now, RooFitHS3 depends on both RooFitCore,; RooFit, and RooStats. But to really have nice interfaces for the JSON IO that can be used from; the workspace directly (like `ws.writeToFile(""ws.json"")`), RooFitHS3; needs to be merged with RooFitCore at some point. As of now, this would not work, because then there would be a circular; dependency between RooStats and RooFitCore. This can be avoided by moving the `RooStats::ModelConfig` class from; RooStats to RooFitCore, avoiding the dependency of RooFitHS3 on; RooStats. Some arguments to make for this case:. * The ModelConfig is strongly connected to the RooWorkspace, because; people often use it to save model ""metadata"" in the workspace. * RooFit is often said to be for ""model building"" and RooStats for; statisitcal procedures. Specifying model details in the; configuration object is part of model building. * Also HistFactory depends on RooStats, but only for the ModelConfig; and the Asimov dataset generation. By moving the ModelConfig to; RooFit, we are also half way done avoiding the dependency of; HistFactory on RooStats. * The only thing that people use from RooStats is often only the; ModelConfig anyway, because it lets them specify analysis details in; the workspace, and then the analysis is done with other frameworks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12578:917,configurat,configuration,917,https://root.cern,https://github.com/root-project/root/pull/12578,1,['configurat'],['configuration']
Deployability,"There is an error here that was introduced in `dc65afe`:. https://github.com/root-project/root/blob/6abb8e90d9bea276269f375a67855c4065813343/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx#L760-L762. This error should only be thrown when the number of observables is not 1, 2 or 3, but currently fires if the number is equal to 3. See the change from `dc65afe` here where the mistake is evident:. https://github.com/root-project/root/commit/dc65afe00ec72d18ebc5d31e7b2d6b50c6a20423#diff-42ea09980f1ed2bacde4381f212c35d78be6ddedccf746953dc99d6455525d8aL1256-R1221. The conditional should be; `if (fObsNameVec.empty() || fObsNameVec.size() > 3)`. This needs to be backported to ROOT 6.26 and 6.28 to make it into the next patch releases. Thanks to @CoffeeIntoScience for reporting this bug!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12707:727,patch,patch,727,https://root.cern,https://github.com/root-project/root/pull/12707,2,"['patch', 'release']","['patch', 'releases']"
Deployability,"There is an infinite loop in; `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++; while (!fObjectMap.empty()) {; auto elem = fObjectMap.begin();; auto cppobj = elem->first;; auto klassid = elem->second;; auto pyclass = CreateScopeProxy(klassid);; auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {; ...; } else {; // Non-owning proxy, just unregister to clean tables.; // The proxy deletion by Python will have no effect on C++, so all good; MemoryRegulator::UnregisterPyObject(pyobj, pyclass);; }; }; ```. In the second code branch, the object is not removed from the `fObjMap`,; if `UnregisterPyObject` doesn't call the unregister hook because it; quits early. This can happen if there is not C++ object corresponding to; the regulated python object, causing an infinite loop because; `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed; after the cppyy upgrade. Probably the code path was not hit before. Addresses; https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15106:1000,upgrade,upgrade,1000,https://root.cern,https://github.com/root-project/root/pull/15106,1,['upgrade'],['upgrade']
Deployability,"There is no equivalent 'gsl' option, so since mathcore is the main; consumer of GSL, it makes sense to enable the builtin version when; the user requests to build mathmore rather than disabling mathmore.; The behavior is still to fail when mathmore is ON and builtin_gsl is OFF,; however. The previous behavior was to turn OFF mathmore instead. We also have a problem in some build nodes where GSL is installed,; but is not found.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/751:401,install,installed,401,https://root.cern,https://github.com/root-project/root/pull/751,1,['install'],['installed']
Deployability,"There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:; https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15402:693,update,update,693,https://root.cern,https://github.com/root-project/root/pull/15402,1,['update'],['update']
Deployability,There was an update to Pythia8 8.310 with my fix for compatibility with C++20.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14216:13,update,update,13,https://root.cern,https://github.com/root-project/root/pull/14216,1,['update'],['update']
Deployability,"There's a bug in the server-mode reader in MSVC that causes extended minimum required strings to fail. This hopefully will be fixed, but for now, this improves compatibility with MSVC in server mode. Also bumping maximum verified version of CMake to 3.12, since that has been released.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2338:276,release,released,276,https://root.cern,https://github.com/root-project/root/pull/2338,1,['release'],['released']
Deployability,"There's a bug on 32-bit non-intel such as armv7l where root-config lists `-lROOTDataFrame` because it passes the check this patch adjusts, but libROOTDataFrame is not built on any 32-bit due to https://github.com/root-project/root/blob/v6-16-00-patches/tree/dataframe/CMakeLists.txt#L7 . Old check only hid DataFrame on i686; this patch changes the check to have the exact same conditions as the check for building DataFrame itself to prevent build failures in apps using root-config.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3442:124,patch,patch,124,https://root.cern,https://github.com/root-project/root/pull/3442,3,['patch'],"['patch', 'patches']"
Deployability,Therewith removing all the intermittent failures in the integration builds for this branch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15099:56,integrat,integration,56,https://root.cern,https://github.com/root-project/root/pull/15099,1,['integrat'],['integration']
Deployability,"These 3 small patches I am using for ROOT + Intel QuickAssist Technology (QAT). QAT provides HW-accelerated (de)compression and crypto (incl. hashing). For easy integration Intel provides zlib-shim and openssl-shim, support the most common interfaces (but not everything). Note, that QAT also has software fallback mechanism. More details are available in the commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/523:14,patch,patches,14,https://root.cern,https://github.com/root-project/root/pull/523,2,"['integrat', 'patch']","['integration', 'patches']"
Deployability,These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn; - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. ; - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13634:82,update,update,82,https://root.cern,https://github.com/root-project/root/pull/13634,1,['update'],['update']
Deployability,These are changes for 5-34-00-patches branch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/23:30,patch,patches,30,https://root.cern,https://github.com/root-project/root/pull/23,1,['patch'],['patches']
Deployability,"These changes allow the user to generate a dictionary with rootcling and selecting classes with a selection XML file, the selection file format of genreflex, instead of a traditional LinkDef file. Fixes https://github.com/root-project/root/issues/13543. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13902:349,update,updated,349,https://root.cern,https://github.com/root-project/root/pull/13902,1,['update'],['updated']
Deployability,"These changes are on top of the first draft that I submitted, that was merged as part of [PR13929](https://github.com/root-project/root/pull/13929). The requested changes can be tracked in my personal drafts repo [here](https://github.com/QuillPusher/QP_Drafts/pull/3). Changes:. - RooFit intro before AD support -> already covered in ""Overview on RooFit implementation details..."" section by @guitargeek. - **Extracting free functions** to a separate header file is **optional**, re-wrote it as one of the two currently recommended approaches. - changed to ""Support **Code Generation**"" instead of ""AD Support"" in most places. - minor formatting and spelling errors changed. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14018:771,update,updated,771,https://root.cern,https://github.com/root-project/root/pull/14018,1,['update'],['updated']
Deployability,"These commands, bound respectively to `ESC l` and `ESC u`, should {lower,upper}case the next word; however, only the first character was changed. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #10136.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10144:197,update,updated,197,https://root.cern,https://github.com/root-project/root/pull/10144,1,['update'],['updated']
Deployability,"These files are unused and can be removed. This should fix this warning in the ROOT nightlies on the mac13 node:. ```; core/clib/src/mmtrace.c:32:14: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]; extern char *getenv ();; ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13764:568,update,updated,568,https://root.cern,https://github.com/root-project/root/pull/13764,1,['update'],['updated']
Deployability,They should not be part of the `v6-34-00-patches` branch. This reverts commit 24da4ed1e3e03203cf6dcaf9c3d1c26a66c3eccc.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16835:41,patch,patches,41,https://root.cern,https://github.com/root-project/root/pull/16835,1,['patch'],['patches']
Deployability,"This PR addresses the code quality issues identified by @Axel-Naumann and @lmoneta . One of the points raised can be tackled in multiple ways. The purpose of publishing this PR now with the **[Do Not Merge]** tag is to facilitate discussion (see last section). I can then apply what we agree upon, update the PR and Lorenzo can merge. . ## Solved; The following issues have been addressed (1 commit per issue more or less): . * Compilation warnings are solved.; * Assumptions about the size of passed matrices are asserted where appropriate.; * Flow of control in unit tests is simplified by exiting early with an error code when a test fails.; * Floating point arithmetic issue solved when checking whether a float is actually an int. ## Discussion. One of the comments has to do with the overly verbose signature of propagation functions in all architectures. This is caused because we always need to pass the convolution parameters besides the actual inputs and outputs (strides, padding, kernel sizes are already 7 parameters that are often passed together). . One proposed solution is to capture them in a struct (perhaps called `ConvParams`) and then pass this struct around instead. I like this approach because it greatly simplifies the signatures. . An alternative approach could be to let the layer methods pass a pointer (or reference) to the calling object (`this`). The advantage is that the verbose functions accept different parameters, for example the forward prop expects the convolution parameters (stride, padding, kernel size) while the backward pass expects the input and output size. Passing a reference to the layer itself will allow each function to pick what it needs, thus allowing us to simplify all calls with a common strategy. I would like to hear opinions on which method to choose.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2321:298,update,update,298,https://root.cern,https://github.com/root-project/root/pull/2321,1,['update'],['update']
Deployability,"This PR adds a new callback to the PyKeras method.; I've build ROOT without any errors and run the ctests and all of them passed. . You can try out this new callback with:; `sudo pip install keras --upgrade`; `sudo pip install tensorflow --upgrade`. And then run: `python tutorials/tmva/keras/ClassificationKeras.py`. The callback will create a new directory called 'logs'.; Then you can call while or after training tensorboard: `tensorboard --logdir=./logs`; Now you can open the link from your terminal and visualize the network and training. ; The `ClassificationKeras.py` script, seems to be not compatible with the Keras 2.x API right now, therefore you can revert the changes of this PR in this specific script after testing. More information on TensorBoard: https://www.tensorflow.org/get_started/summaries_and_tensorboard. Also pointing to the author of the PyKeras implementation: @stwunsch. Thanks in advance for reviewing this PR!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1353:183,install,install,183,https://root.cern,https://github.com/root-project/root/pull/1353,4,"['install', 'upgrade']","['install', 'upgrade']"
Deployability,"This PR adds a new data source for `RDataFrame` that is able to provide data from SQlite `SELECT` queries. It will be useful for cvmfs, where we have file catalogs and monitoring information in sqlite files. For instance, one can do. auto rdf = ROOT::RDF::MakeSqliteDataFrame(""catalog.sqlite"", ""select * from catalog"");; auto h = rdf.Define(""lname"", ""name.length()"").Histo1D(""lname"");. to show the distribution of file name sizes. There are probably more use cases, for instance sqlite export of conditions data. This is work in progress, I'm posting it for early comments and feedback. My open points are. - Unit and integration tests are yet to be done; - The data source work single-threaded only at the moment. I initially thought it might be enough to return only a single row in `GetEntryRanges()` to make it thread-safe but that's apparently not enough. So I'm now thinking to wrap `SetEntry()` and `GetEntryRanges()` in a mutex.; - The code is not reusing `TSQLiteServer`. It felt like it requires stretching the `TSQLServer` interface in perhaps unwanted ways, for saving only a handful of direct sqlite API calls. On the other hand, with (probably quite a bit) more work it might be possible to have a more general data source that works on any SQL result set.; - Determining column types in SQlite is tricky as it is dynamically typed and in principle each row can have different column types. If a table column is queried as is, I can use the default/declared column type. For expressions, I'll use the type of the first row of the result set. Still it can result in a column to be of type `NULL` where subsequent rows actually have meaningful values. My guess is that the current heuristic is practical enough, and of course the user can formulate the `SELECT` query to avoid ambiguity.; - It would not be impossible to add support for remote reading of sqlite files. To do so, one can add a custom implementation of an sqlite virtual file system to have data pouring in directly from HTT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2322:618,integrat,integration,618,https://root.cern,https://github.com/root-project/root/pull/2322,1,['integrat'],['integration']
Deployability,"This PR adds an extra factory function for creating an `RNTupleImporter` by directly providing a pointer to the `TTree` to import, rather than the tree name and file name. With this, it should also become possible to import `TChain`s down the road, but this will require another PR. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12475:319,update,updated,319,https://root.cern,https://github.com/root-project/root/pull/12475,1,['update'],['updated']
Deployability,"This PR adds branch type inference to Histo1D with weights, as well as Histo2D, Histo3D, Profile1D and Profile2D both with and without weights.; Code has been simplified. Docs have been updated. A related PR in roottest introduces testing for the new functionality.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/532:186,update,updated,186,https://root.cern,https://github.com/root-project/root/pull/532,1,['update'],['updated']
Deployability,"This PR adds some (mostly size and compression-related) methods to the `RNTupleInspector` utility class. There are some small TODOs left, but I first wanted to collect some feedback. - [x] tested changes locally; - [x] updated the docs (if necessary); - [ ] add support for all field structures in `GetColumnsForField`; - [ ] decide on when to collect the (size) data: on creation of the `RNTupleInspector` object (how it is done now), or in a more on-the-fly approach",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12395:219,update,updated,219,https://root.cern,https://github.com/root-project/root/pull/12395,1,['update'],['updated']
Deployability,"This PR adds some (mostly size and compression-related) methods to the `RNTupleInspector` utility class. There are some small TODOs left, but I first wanted to collect some feedback. - [x] tested changes locally; - [x] updated the docs (if necessary); - [x] add support for all field structures in `GetColumnsForField`; - [x] decide on when to collect the (size) data: on creation of the `RNTupleInspector` object (how it is done now), or in a more on-the-fly approach",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12396:219,update,updated,219,https://root.cern,https://github.com/root-project/root/pull/12396,1,['update'],['updated']
Deployability,"This PR adds support for `std::multimap` and `std::unordered_multimap` fields. The on-disk representation is exactly the same as `std::(unordered)_map`, so the only addition is the type name resolution for type-erased fields and the `RField` template specializations. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16331:319,update,updated,319,https://root.cern,https://github.com/root-project/root/pull/16331,1,['update'],['updated']
Deployability,"This PR adds support for `std::multiset` and `std::unordered_multiset` fields. The on-disk representation is exactly the same as `std::(unordered)_set`, so the only addition is the type name resolution for type-erased fields and the `RField` template specializations. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16330:319,update,updated,319,https://root.cern,https://github.com/root-project/root/pull/16330,1,['update'],['updated']
Deployability,"This PR adds support for defining, parsing and generating code for custom operator in TMVA SOFIE. SOFIE is being developed following the ONNX standards, but cases may arise when a particular operator is not defined or developed. In those scenarios, an user can still integrate the operator using the custom operator implementation. . For adding a custom operator in `RModel`, the user has to define the input tensor names, output tensor names, attribute values, output tensor shapes and a header file name. The `Generate()` function for the custom operator must be defined in a separate header file under a namespace, which is called for computing the output tensor values. . ## Checklist:; - [x] `ROperator_Custom` class; - [x] Including usage in generated code; - [x] Tests for ROperator_Custom operator; - [ ] Tutorials explaining the usage",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11065:267,integrat,integrate,267,https://root.cern,https://github.com/root-project/root/pull/11065,1,['integrat'],['integrate']
Deployability,This PR adds support for parsing the Keras Reshape layer in SOFIE RModel. ## Checklist:; - [x] Parsing function; - [x] Tests; - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11055:162,update,updated,162,https://root.cern,https://github.com/root-project/root/pull/11055,1,['update'],['updated']
Deployability,This PR adds support for the latest changes in clad gradient. Please do not merge till a new version (0.9) of clad is released and the version number for clad in ROOT is set to that.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8830:118,release,released,118,https://root.cern,https://github.com/root-project/root/pull/8830,1,['release'],['released']
Deployability,"This PR adds the `RNTupleDescriptor::GetColumnIterable()` method, which returns an iterator over all (logical) columns of the RNTuple (without having to specify a field). Some questions to still consider:; 1. The original `RNTupleDescriptor::GetColumnIterable(const RFieldDescriptor &field)` method returns an iterator over the _logical_ columns. Would it make more sense to return physical columns for this method or should we stay consistent across methods? For the `RNTupleInspector`, we're interested in physical columns but if we have the logical columns we could filter out the non-physical ones.; 2. The original method only returns the columns for the specified field, without considering its potential sub-fields. Would it be useful to add a flag to toggle whether the columns for sub-fields should be included (in a separate PR)?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12893:759,toggle,toggle,759,https://root.cern,https://github.com/root-project/root/pull/12893,1,['toggle'],['toggle']
Deployability,This PR adds the `RNTupleInspector` functionality to get a histogram showing the distribution of the compressed page sizes for either a single column (provided its physical ID) or all columns of a given type. The lower and upper bounds of the returned histogram are determined by the smallest and largest page size. The number of bins can be provided when calling the function (the default is set to 64). ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14099:456,update,updated,456,https://root.cern,https://github.com/root-project/root/pull/14099,1,['update'],['updated']
Deployability,This PR adds the changes and new implementations in TMVA SOFIE in the release notes for version 6.30,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14019:70,release,release,70,https://root.cern,https://github.com/root-project/root/pull/14019,1,['release'],['release']
Deployability,"This PR adds the feature to get a histogram representing different possible column type-related properties. These properties are the type count, number of elements per type, compressed size per type and uncompressed size per type. The current version automatically sets the histogram title based on the information it shows. The title can be changed after returning it using `TH1::SetTitle`. An alternative could be to add another argument which has the default value that is currently used but can be used to provided an alternative title. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13715:592,update,updated,592,https://root.cern,https://github.com/root-project/root/pull/13715,1,['update'],['updated']
Deployability,"This PR adds the following fixes and improvements to `RNTupleInspector::GetPageSizeDistribution`:; * When the provided column type is not present in the RNTuple being inspected, an empty histogram is returned.; * When a provided column ID is not present in the RNTuple being inspected, an exception is thrown.; * Default axis titles have been added.; * An overloaded method to provide multiple column IDs at once has been added. The method taking only one ID has been adapted to use this overload.; * The option to provide multiple column types at once has been added. Here, a `THStack` is returned rather than a `TH1D`. The method taking only one type has been adapted to use this overload. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14323:743,update,updated,743,https://root.cern,https://github.com/root-project/root/pull/14323,1,['update'],['updated']
Deployability,"This PR adds the possibility to specify which fields should be read by the `RNTupleProcessor` by passing an `RNTupleModel` to its constructor. The processor will create and own an `REntry` based on this, but it will use the pointers from the model's default entry to hold the field values during iteration. This way, the pointers returned by `RNTupleModel::MakeField` can be used in the processor iteration to access the values being read. Passing a model is optional; if not provided, one will be created from the descriptor of the first specified RNTuple. A follow-up PR will add the possibility to change the model after the processor has been created (useful when the set of fields to read cannot be decided at compile-time). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15985:781,update,updated,781,https://root.cern,https://github.com/root-project/root/pull/15985,1,['update'],['updated']
Deployability,"This PR allows us to use [`liburing`](https://github.com/axboe/liburing), the ""application-level"" interface to [`io_uring`](https://kernel.dk/io_uring.pdf), the new Linux kernel IO interface.; `liburing` takes care of many of the low-level details (e.g. `mmap` calls, barriers) required to correctly use `io_uring`. `io_uring` is supported on Linux kernels 5.1 and up, but it's up to the user to download and install `liburing` themselves, either from source (`make && make install`) or through a package manager. The rationale for including `liburing` in ROOT is to experiment with `io_uring`'s parallel, async IO features. This may drive performance improvements in low-level IO. . I based the CMake changes on how `jemalloc` is handled. I am not very experienced with CMake and would be happy to find out that I've done something wrong here. We need to able to include (at least) two `liburing` header files and link against the shared library, namely . * `#include ""liburing.h""`; * `#include ""liburing/io_uring.h""`; * `liburing.so`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5919:409,install,install,409,https://root.cern,https://github.com/root-project/root/pull/5919,2,['install'],['install']
Deployability,"This PR and their roottest sibling PR contain fixes for the following tests:. Roottest python basic tests:; - roottest-python-basic-basic; - roottest-python-basic-overload. Roofit tutorials fixed by the addition of a pythonisation to get the using declarations of `RooAbsData` into `RooDataHist`. This pythonisation will not be needed anymore when a general solution is provided by the bindings, mainly by merging this Cppyy patch into ROOT: https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/using_decls.diff; - tutorial-roofit-rf106_plotdecoration-py; - tutorial-roofit-rf610_visualerror-py; - pyunittests-pyroot-pyz-roodatahist-ploton; - tutorial-roofit-rf315_projectpdf-py; - tutorial-roofit-rf402_datahandling-py. Related to https://bitbucket.org/wlav/cppyy/issues/66/cppoverload-addmethod-cppoverload-clears; - tutorial-roofit-rf307_fullpereventerrors-py; - tutorial-roofit-rf706_histpdf-py. Some fixes for the following test, although it still can't be re-enabled due to https://bitbucket.org/wlav/cppyy/issues/145/enum-values-not-defined-as-constants; - roottest-python-basic-datatype. Some fixes for the following test, but still can't be re-enabled (more issues to investigate):; - roottest-python-regression-regression",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4294:425,patch,patch,425,https://root.cern,https://github.com/root-project/root/pull/4294,2,['patch'],"['patch', 'patches']"
Deployability,"This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel; 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars; 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11161:92,update,updateCoefficients,92,https://root.cern,https://github.com/root-project/root/pull/11161,1,['update'],['updateCoefficients']
Deployability,This PR back ports fixes from these PR's:. - #9499; - #9513 ; - #9718 (in Math); - #9776 (release notes),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9806:90,release,release,90,https://root.cern,https://github.com/root-project/root/pull/9806,1,['release'],['release']
Deployability,This PR backports in 6.26 some fixes from master in the build configuration for SOFIE. . - backport fix from #PR 11481 (movie some Sofie parser definition in implementation); - backport fix from #PR 11545 (fix some issues with no rt modules); - backport fix from the tests #11529 (apply some fixes in the building of SOFIE tests),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11576:62,configurat,configuration,62,https://root.cern,https://github.com/root-project/root/pull/11576,1,['configurat'],['configuration']
Deployability,"This PR changes the size-related `RNTupleInspector` methods from `GetOnDiskSize` and `GetInMemorySize` to `GetCompressedSize` and `GetUncompressedSize`, respectively. An earlier version of `RNTuple` stored index fields as 32bit on-disk but kept them as 64bit in memory, causing a slight mismatch between the in-memory representation and actual non-compressed on-disk data. This is not the case anymore and moreover, the name `GetInMemorySize` may be confusing as it can be interpreted as the number of bytes that are actually currently stored in memory rather than the total uncompressed size. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13726:630,update,updated,630,https://root.cern,https://github.com/root-project/root/pull/13726,1,['update'],['updated']
Deployability,This PR contains some follow-up changes to https://github.com/root-project/root/pull/8700 and https://github.com/root-project/root/pull/9078:. * avoid using `std::shared_ptr` for return values; * change copyright of roofitcore/TestStatistics to `(c) CERN` (requested by @Axel-Naumann in https://github.com/root-project/root/pull/8700#discussion_r738407080); * I used now the same copyright headers from https://github.com/root-project/root/pull/9078 also for the TestStatistics; * fix a build warning in non-debug mode; * don't install zmq.hpp header from builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9345:528,install,install,528,https://root.cern,https://github.com/root-project/root/pull/9345,1,['install'],['install']
Deployability,"This PR continues the work started in #4019 . The discussed changes have been applied. . Regarding the usage of a header just for the Python version of the tutorial, for the moment the name of the header has been extended with ""_python"". Plus, the comments at the top already stressed the fact that it is declared in the Python version. Of course the C++ version could be refactored in order to declare the header as well, at the moment the only main difference would be that in C++ some filtering functions are written as lambdas, while in Python they have been added as free functions in the header and then get declared to the interpreter. In general, the following suggested changes have been applied:; 1. The tutorial is now PEP8 compliant; 2. The header has been updated with the latest version of the C++ tutorial ([commit](https://github.com/root-project/root/commit/bd821cc6ec7ce18d0105ca97959a7ed9fb0a7004)); 3. Weights are now passed as formatted strings of constant values to the `Histo1D` functions; 4. Path to the header *should* be platform independent. Further suggestions are deeply appreciated",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4071:769,update,updated,769,https://root.cern,https://github.com/root-project/root/pull/4071,1,['update'],['updated']
Deployability,"This PR does two things:. 1. move the cloning or updating of `roottest` from the `CMake` step to the `build-root.py` step and update the step to take the `roottest` branch with the same name as the PR branch from the submitter's `rootttest` repository if it exist.; 2. Rather than using the symbolic name for the PR branch, use the commit seen at the triggering of the CI to rebase the code. This insures that all runners sees the same code (before hand an update to the incoming or target branch would have changed what the various runners see). 2. is implemented by:; a. looking at the merge commit create by github; b. extracting the parents commit (from base and from the incoming branch); c. checkout the incoming branch commit; d. rebasing the base branch onto it. An alternative implementation could have been; e. checkout the commit merge; f. rebase the base branch (using the base fork point) onto it (and hope/expect that git will remove the commit merge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14052:126,update,update,126,https://root.cern,https://github.com/root-project/root/pull/14052,2,['update'],['update']
Deployability,This PR extends the support for `std::map` fields with `std::unordered_map` fields. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14089:135,update,updated,135,https://root.cern,https://github.com/root-project/root/pull/14089,1,['update'],['updated']
Deployability,"This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types.; 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394:1214,install,install,1214,https://root.cern,https://github.com/root-project/root/pull/394,2,['install'],['install']
Deployability,"This PR fixes #15617, where the number of files is incorrectly returned by `RInterfaceBase`/`RDFDescription` for RDF's constructed from an `RDataSource`. It involves the addition of `GetNFiles` to the public interface of `RDataSource` and calling it in the relevant places. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15653:325,update,updated,325,https://root.cern,https://github.com/root-project/root/pull/15653,1,['update'],['updated']
Deployability,"This PR fixes ; - #15919; ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:; https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python; import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())""; ```. Gives:; ```; Warning: failed offset calculation between TList and TViewPubFunctions; Type: TViewPubFunctions; ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()); ```; and the warning disappears:. ```; Type: TList; ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16177:77,update,updated,77,https://root.cern,https://github.com/root-project/root/pull/16177,2,['update'],"['update', 'updated']"
Deployability,"This PR fixes ROOT-10081. ; When calling TRandom1::SetSeed(seed ) a different initialization was done respect to calling ; TRandom1::SetSeeds( { seed, 0}, 0); With this PR the same initialization is now performed . In addition the documentation is updated for TRandom2::SetSeed. In that case the store seed value is not the same passed and the user needs to store by himself the seed value in order to reproduce the generated sequence.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4925:248,update,updated,248,https://root.cern,https://github.com/root-project/root/pull/4925,1,['update'],['updated']
Deployability,"This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```; /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'); 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'); 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;; ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/453:50,update,update,50,https://root.cern,https://github.com/root-project/root/pull/453,2,['update'],['update']
Deployability,"This PR fixes some formatting for displaying the leaf count arrays RNTuple schema, as well as some other (very) minor formatting improvements. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14141:194,update,updated,194,https://root.cern,https://github.com/root-project/root/pull/14141,1,['update'],['updated']
Deployability,This PR fixes teh usage in ROOT of TF1::IntegralError when running in MT; In this case the global TVirtualFitter object is not existing and one needs to pass the covariance matrix from TFitResult. Update error message when using TF1::IntegralError when running in MT . Update also documentation to indicate this case,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5702:197,Update,Update,197,https://root.cern,https://github.com/root-project/root/pull/5702,2,['Update'],['Update']
Deployability,"This PR fixes the incorrect calculation of the compressed size by the `RNTupleInspector`. Because the vector of compressed page sizes is not cleared after each loop iteration, the accumulation needs to happen only after the loop has finished. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14316:279,update,updated,279,https://root.cern,https://github.com/root-project/root/pull/14316,1,['update'],['updated']
Deployability,This PR fixes the incorrect fetching of the type for branches containing split collections of user-defined classes. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12073:167,update,updated,167,https://root.cern,https://github.com/root-project/root/pull/12073,1,['update'],['updated']
Deployability,"This PR fixes tons of memory leaks in RooFitHS3 by never using manual memory allocation in RooFitHS3. To facilitate this, an overload of `RooAbsArg::addOwnedComponents` was added that takes transfers the ownership via smart pointers (otherwise one would have to use raw owning pointers or `std::unique_ptr<T>::release()` which I want to avoid). If the CI passes, I'll squash the second and third commit and add commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9690:310,release,release,310,https://root.cern,https://github.com/root-project/root/pull/9690,1,['release'],['release']
Deployability,"This PR follows up on https://github.com/root-project/root/pull/7723, which introduced the pythonization of `RooAbsReal::plotOn`. However, the unit test that came with #7723 also assumed pythonizations of `RooAbsPdf::plotOn` and `RooAbsData::plotOn`. This was not noticed before since the unit tests were not run in the continuous integration. This PR refactors the RooFit pythonization code to easily pythonize also `RooAbsPdf::plotOn` and `RooAbsData::plotOn` such that the unit tests pass. I need to figure out what needs to be done to run the pythonization unit tests in the bot tests for the future. Please take a look @Harshalzzzzzzz, this should be interesting for you!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7753:320,continuous,continuous,320,https://root.cern,https://github.com/root-project/root/pull/7753,2,"['continuous', 'integrat']","['continuous', 'integration']"
Deployability,"This PR for now fixes #14748, but IMO down the line we might need a more tailored representation for friends (at least in how they are presented to the user). Friends are (virtually) represented as untyped records. To properly create them as fields (neede e.g. for `Show` and `PrintInfo`), we artificially bind them to an untyped `RRecordField`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14749:397,update,updated,397,https://root.cern,https://github.com/root-project/root/pull/14749,1,['update'],['updated']
Deployability,"This PR handles the case in Minos when a lower function value is found. ; The iteration to find the crossing function point (in MnFunctionCross) is stopped and the new found point state with lower function value is returned. ; The Minuit2Minimizer then handles the case by re-minimizing t he function from the new point and then run again Minos from the new found minimum. In the case of TMinuit this was handles, although maybe not in the optimal case. . Fix also when a new Minimum is found that both in Minimizer and Fitter that the result with the new minimum is updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4782:567,update,updated,567,https://root.cern,https://github.com/root-project/root/pull/4782,1,['update'],['updated']
Deployability,"This PR improves VecCore integration into ROOT. Before we copied all VecCore and Vc headers into the build directory, since rootcling did not get the right includes when Vc or VecCore were builtin. Now the right includes are propagates by calling `set_property()` with the necessary include directories. Ideally, in the future we should take the includes not from the `DIRECTORY` property, but from the target dependencies for each subcomponent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/830:25,integrat,integration,25,https://root.cern,https://github.com/root-project/root/pull/830,1,['integrat'],['integration']
Deployability,"This PR improves the speed for evaluating weights in `RooHistPdf`; and `RooHistFunc` for one dimensional histograms with no interpolation.; In the future, `RooDataHist::weights()` can be extended to cover; cases with higher dimensions and interpolation. The function `RooDataHist::weights()` was implemented to enable; vectorized evaluations of bin weights. In `RooHistPdf` it is implemented; using the new function `RooHistPdf::computeBatch()`, which calls; `RooDataHist::weights()` in the case of no interpolation and 1D; histograms, and `RooAbsReal::computeBatch()` otherwise. In; `RooHistFunc::computeBatch`, `RooDataHist::weights()` is called in the; case of no interpolation and 1D histograms and is unchanged in the other cases. To calculate the weight, bin indices are stored as a vector; using `RooAbsBinning::binNumbers`, which was implemented in #11151. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11171:960,update,updated,960,https://root.cern,https://github.com/root-project/root/pull/11171,1,['update'],['updated']
Deployability,"This PR includes the commits of; * PR #833 ; * a fix (dependent on #833) for task-unsafety in TDataFrame's TColumnValue; * PR #828 ; * a patch for task-unsafety in TDataFrame's thread-slot distribution by @dpiparo (commit 2787af2). If we want to push these commits little by little, PR #833 and PR #828 should be merged first, then I can open a third PR with the second (and fourth?) fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/835:137,patch,patch,137,https://root.cern,https://github.com/root-project/root/pull/835,1,['patch'],['patch']
Deployability,"This PR integrates recently developed `RNTupleMerger` (#13858) into `TFileMerger` so that it can be used via `hadd` etc. For the time being, the PR is in draft mode to facilitate the discussion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14398:8,integrat,integrates,8,https://root.cern,https://github.com/root-project/root/pull/14398,1,['integrat'],['integrates']
Deployability,"This PR integrates the remaining tutorial translations that were still missing after https://github.com/root-project/root/pull/8091. After this PR, Jira issue [ROOT-10966](https://sft.its.cern.ch/jira/browse/ROOT-10966) can be resolved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8463:8,integrat,integrates,8,https://root.cern,https://github.com/root-project/root/pull/8463,1,['integrat'],['integrates']
Deployability,"This PR introduces a new format option for `RNTupleReader::Show()` that shows all fields if no model is specified, and only the fields present in the model if there is one. It also changes the default show format to this option. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). Fixes #12031.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12026:280,update,updated,280,https://root.cern,https://github.com/root-project/root/pull/12026,1,['update'],['updated']
Deployability,"This PR introduces new PyROOT features that allow for conversion between the RooDataHist and the NumPy arrays, following up a PR that already introduced similar functionality for the RooDataSet:; https://github.com/root-project/root/pull/9346. The new methods are (with checkmarks if they are already implemented in this PR):. - [x] `RooDataHist.to_numpy()`; - [x] `RooDataHist.from_numpy()`. These new methods are also advertised in the release notes, and the existing `rf409_NumPyPandasToRooFit.py` tutorial is extended to also explain the functionality introduced in this PR. Note that any new Python functions prefixed with an underscore are not meant to be part of the public stable user interface, which is why they are not advertised in the release notes and also don't have docstrings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8784:438,release,release,438,https://root.cern,https://github.com/root-project/root/pull/8784,2,['release'],['release']
Deployability,"This PR introduces the NumericalDerivatorMinuit2 class, based on original code by @lmoneta (https://github.com/lmoneta/root/blob/lvmini/math/mathcore/src/NumericalDerivator.cxx). It replicates the Minuit2 numerical derivator calculations, but in a a stand alone class. This allows it to be used from RooFit to manually calculate gradients outside of Minuit2, e.g. in a parallelized way. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8567:438,update,updated,438,https://root.cern,https://github.com/root-project/root/pull/8567,1,['update'],['updated']
Deployability,"This PR introduces the possibility of converting all `TTree`s that are present in a `TFile` to `RNTuple`s at once. Concretely, it implements an additional factory method that requires only the source file path and the destination path. Because we now deal with multiple trees at the same time, `SetNTupleName` has been replaced by `SetNTupleNames`, which takes the name of the original tree and the name of the corresponding ntuple. Optionally, we could keep `SetNTupleName` as well in case there's only one tree and throw an exception when multiple trees are being imported at the same time. The `Create` factory method could be expanded with an optional parameter that takes a list of tree names (or regexes) to import, in case it is not desired that every tree is imported. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12486:828,update,updated,828,https://root.cern,https://github.com/root-project/root/pull/12486,1,['update'],['updated']
Deployability,"This PR is a backport of #12781. The change in this PR fixes a segfault when defining a C++20 concept if definition shadowing is enabled.; In principle, for a `TemplateDecl`, `isDefinition()` issues a recursive call passing the templated decl as a parameter. A `ConceptDecl`, however, should always be considered a definition. Also, update the DeclShadowing test incorporating a C++20 concept. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #12779.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12782:333,update,update,333,https://root.cern,https://github.com/root-project/root/pull/12782,2,['update'],"['update', 'updated']"
Deployability,"This PR is a backport of #9965 (see #9954) for 6.26. Optional, but it would be nice to avoid patching conda-forge root https://github.com/conda-forge/root-feedstock/issues/160.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9999:93,patch,patching,93,https://root.cern,https://github.com/root-project/root/pull/9999,1,['patch'],['patching']
Deployability,This PR is a continuation of #12145 and adds the option to specify the maximum number of entries in the original `TTree` to import. ## Checklist; - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12472:182,update,updated,182,https://root.cern,https://github.com/root-project/root/pull/12472,1,['update'],['updated']
Deployability,"This PR is a do-over of #8385 and #8412 and, as such, again the second part of a split and clean-up of #8294. The most important blocker in those PRs was the inclusion of a patched libzmq in RooFitZMQ itself. [This patch has now been included in libzmq proper](https://github.com/zeromq/libzmq/pull/4255). Another blocking review comment was that libzmq symbols must not be allowed to be exported through our libraries. [This has been solved in theory, and in practice is pending another PR to libzmq](https://github.com/zeromq/libzmq/pull/4266). Having fixed these two blockers, we should now be able to continue. To recap:. > In this PR, we introduce two packages: RooFitZMQ and RooFit::MultiProcess. It also adds two builtins for ZeroMQ to ease dependency management: libzmq and cppzmq. The builtin for libzmq is especially necessary at this point because it has recently gained a necessary feature that has not been released yet.; > ; > RooFit::MultiProcess is a task-based parallelization framework.; > ; > It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.; > ; > The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. Will un-draft the PR once the following is done (based on previous review comments by @guitargeek @hageboeck @amadio @lmoneta and also some other things from myself):; - [x] includes: correct order (matching header, RooF",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078:173,patch,patched,173,https://root.cern,https://github.com/root-project/root/pull/9078,3,"['patch', 'release']","['patch', 'patched', 'released']"
Deployability,"This PR is a follow-up on https://github.com/root-project/root/pull/15746. Make it possible to build RooFit CUDA evaluation library standalone to use in existing ROOT release, as discussed on the forum:; https://root-forum.cern.ch/t/installing-root-with-cuda-support-in-a-conda-environment/59208/5. To try it out:; * Build the content of `roofit/batchcompute` in this repository, replacing the CMakeLists.txt file with the code listing below:; * Build the project. You should now have a `libRooBatchCompute_CUDA.so` file. Make sure it's in the `LD_LIBRARY_PATH`; * Your fits should now work with `EvalBackend(""cuda"")` (see also the [RooAbsPdf](https://root.cern.ch/doc/master/classRooAbsPdf.html#a24b1afec4fd149e08967eac4285800de) documentation about this). ```cmake; # Adapt to your system; set (CMAKE_CUDA_ARCHITECTURES ""native"" CACHE STRING """" FORCE); set (CMAKE_CUDA_HOST_COMPILER /usr/bin/g++-13 CACHE STRING """" FORCE); set (CMAKE_CUDA_COMPILER ""/opt/cuda/bin/nvcc"" CACHE STRING """" FORCE). find_package(ROOT REQUIRED); include(${ROOT_USE_FILE}). cmake_minimum_required(VERSION 3.14); project(batchcompute-cuda LANGUAGES CUDA). # in the src directory, put all files from roofit/batchcompute/src and roofit/batchcompute/res; add_library(RooBatchCompute_CUDA SHARED src/RooBatchCompute.cu src/ComputeFunctions.cu src/CudaInterface.cu); target_include_directories(RooBatchCompute_CUDA PRIVATE src res). target_compile_options(RooBatchCompute_CUDA PRIVATE -lineinfo --expt-relaxed-constexpr); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15775:167,release,release,167,https://root.cern,https://github.com/root-project/root/pull/15775,2,"['install', 'release']","['installing-root-with-cuda-support-in-a-conda-environment', 'release']"
Deployability,This PR is a leftover update of the specifications after adding #14069.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14090:22,update,update,22,https://root.cern,https://github.com/root-project/root/pull/14090,1,['update'],['update']
Deployability,"This PR is a proposed solution for a problem of MacOS builds. It is more of a policy decision than a technical discussion, even if there is a technical aspect involved. Since 2019 U9, the one of 6.28, does not build any more on macos for C++ standards equal or greater than 2017 if the new sdk is used. Unfortunately, to continue to support older setups, branching has been put in place. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13724:483,update,updated,483,https://root.cern,https://github.com/root-project/root/pull/13724,1,['update'],['updated']
Deployability,"This PR is related to https://github.com/root-project/root/issues/8707. ROOT_ADD_TEST now takes FIXTURES_SETUP, FIXTURES_CLEANUP and; FIXTURES_REQUIRED arguments (lists). also add RESOURCE_LOCK to prevent parallel execution of a test; takes a single lock name. n.b: fixtures and resource lock namespaces are each different from; test namespaces. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (in the file)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8722:397,update,updated,397,https://root.cern,https://github.com/root-project/root/pull/8722,1,['update'],['updated']
Deployability,This PR is shipping updated minimized version of RenderCore (v14).; It has minor changes in the projected geo shape outlines and minor changes in geo_cms.C demo. Here is the reference to the change in RenderCore: ; https://github.com/UL-FRI-LGM/RenderCore/pull/19,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15514:20,update,updated,20,https://root.cern,https://github.com/root-project/root/pull/15514,1,['update'],['updated']
Deployability,"This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:; - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally.; - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8412:1238,update,updated,1238,https://root.cern,https://github.com/root-project/root/pull/8412,1,['update'],['updated']
Deployability,"This PR modifies the TBufferMerger callback (that CMS requested) so that it wraps the merge operation--the callback is passed the function to perform the merge and is responsible for calling it. The motivation for this change is that the merge operation is taking enough CPU time that we need it to be executed in the CMSSW framework's TBB task arena so that we don't overrun our CPU commitment. With this change, we can use a callback like. ```; mergeExec_ = [this](const std::function<void()> &f){; std::promise<void> barrier;; auto fwrap = [&]() { ; auto set_value = [](decltype(barrier)* b) { b->set_value(); };; std::unique_ptr<decltype(barrier), decltype(set_value)> release(&barrier, set_value);; f();; };; taskArena_->enqueue(fwrap);; barrier.get_future().wait();; };; ```. to queue the merge operation to our task arena and wait for it to complete. This also ensures that any IMT operations invoked by the merge operation are also executed in our task arena. Since the callback can still perform any operations it wants after executing the merge operation, this is a superset of the previous callback functionality.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1706:673,release,release,673,https://root.cern,https://github.com/root-project/root/pull/1706,1,['release'],['release']
Deployability,"This PR propagates the disconnect action from TFileCacheRead to TFilePrefetch. This is needed to restore TFilePrefetch compatibility with the CMS use of kDoNotDisconnect to swap TTreeCaches. CMS frequently swaps TTree caches with code like. filePtr_->SetCacheRead(cache, nullptr , TFile::kDoNotDisconnect);; branch->GetEntry(entryNumber);; filePtr_->SetCacheRead(nullptr, nullptr , TFile::kDoNotDisconnect);. This is done partially for ownership reasons and partially because CMS uses multiple TTreeCaches for different use cases (one cache for frequently read branches, a second for less frequently accessed branches, and potentially one or two more specialized use cases). kDoNotDisconnect tells the TFile that this cache may later be reconnected to the TFile, so it should not disconnect the cache from the file. TFile propagates the flag to TFileCacheRead, but TFileCacheRead does not propagate it to TFilePrefetch. If pre-fetching is enabled, TFilePrefetch clears its cached blocks due to this commit:. https://github.com/root-project/root/commit/4290bf4942285b754b2edb7bffd122bcf36c979d. which added clearing of the read and pending prefetch lists when SetFile() is called. This violates the assumptions made by TTreeCache in the kDoNotDisconnect case, leading to a deadlock where `TTreeCache::ReadBufferPrefetch` waits forever on a buffer that has been cleared from the prefetched and pending lists. This patch propagates the kDisconnect/kDoNotDisconnect action flag to `TFilePrefetch::SetFile`, only clearing the fetched and pending lists in the kDisconnect case. (The same end could be accomplished more simply by just not calling TFilePrefetch::SetFile() for the kDoNotDisconnect case; propagating the action seems more correct to me, but it is a matter of taste.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1769:1412,patch,patch,1412,https://root.cern,https://github.com/root-project/root/pull/1769,1,['patch'],['patch']
Deployability,This PR provides some optimisation for Cuda. In particular: . - optimise update weights/gradient of SGD and ADAM/ ; - We avoid now creating temporary matrices in SGD ; - For ADAM it is more efficient defining three new updates functions which will blenched on the GPU. This also avoid creating temporaries . These changes speed-up by almost a factor of 2 the code in GPU for dense layer when using ADAM and restore the previous performances for SGD. - optimise also computation of convolutional weight gradients. ; In this case we can just simply use the ScaleAdd function. A speed up of ~ 20% is obtained . This PR also adds a commit that remove the computation of correlation matrix in case of large number of variables,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2502:73,update,update,73,https://root.cern,https://github.com/root-project/root/pull/2502,2,['update'],"['update', 'updates']"
Deployability,"This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR.; Other additions that will be accounted for in one or more follow-up PRs include:; - The possibility for users to provide their own entries/value pointers to the processor.; - The possibility for users to specify the `RNTupleModel` used to construct the processor entry.; - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15084:1182,update,updated,1182,https://root.cern,https://github.com/root-project/root/pull/15084,1,['update'],['updated']
Deployability,"This PR purges the old ; ```c++; ""evaluateBatch|getValBatch|getLogValBatch""(std::size_t begin, std::size_t batchSize); ```; interface of the roofit classes with the ; ```c++; ""evaluateSpan|getValues|getLogs""(BatchHelpers::RunContext& evalData, const RooArgSet* normSet); ```. To this point, both interfaces exist. In this PR the old methods are deleted and the code is cleared, with the exception of marking the purged methods as `= delete` in RooAbsReal.cxx, to prevent users that write their own PDF classes to use them or overwrite them. In the very few cases where users have already implemented such a deleted function, they will get a compilation error, so I will make sure that there's a detailed and easy walkthrough in the release notes of the next versions of how to port their code to use the new interface. The process is very simple, so the users that have used the old interface are more advanced than needed to make this change.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6841:732,release,release,732,https://root.cern,https://github.com/root-project/root/pull/6841,1,['release'],['release']
Deployability,"This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:; - code is simpler to follow, more consistent among different flags and extracted from main; - adding new flags is easier; - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic).; - allows passing flags after the positional arguments; - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16090:927,update,updated,927,https://root.cern,https://github.com/root-project/root/pull/16090,1,['update'],['updated']
Deployability,"This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8569:618,update,updated,618,https://root.cern,https://github.com/root-project/root/pull/8569,1,['update'],['updated']
Deployability,"This PR removes some remnants of the previous PR, preventing proper installation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3095:68,install,installation,68,https://root.cern,https://github.com/root-project/root/pull/3095,1,['install'],['installation']
Deployability,This PR removes the `RResult` wrapper from the public `RNTupleImporter` interface; private methods are still wrapped. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12565:169,update,updated,169,https://root.cern,https://github.com/root-project/root/pull/12565,1,['update'],['updated']
Deployability,"This PR replaces #3924 by Susrya. Integrates his code with the new developments (RTensor) for CPu and in addition extends his implmentation by : ; - fixing backpropagation for GRU; - add cuDNN implmentation for GPU for simple RNN, LSTM and GRU",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4911:34,Integrat,Integrates,34,https://root.cern,https://github.com/root-project/root/pull/4911,1,['Integrat'],['Integrates']
Deployability,"This PR roots our llvm vendor drop to the LLVM's 5.0 release. Updating llvm will enable C++17 support in ROOT. There are many advantages of doing that such as relying on a release which is very thoroughly tested. After many years, this update removes practically all cling/ROOT-specific patches from llvm which means that technically we can link against vanilla llvm. Note that we still have (a reduced) set of patches in clang. Note this comes with a few issues (thus the do-not-merge label):; * We have two failures in cling's testsuite (visible when building with -Dclingtest=On) -- they seem to be coming from a stack-corruption when the JIT is supposed to throw an exception;; * A few roottest failures which I want to make sure it is the same set as on my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1218:53,release,release,53,https://root.cern,https://github.com/root-project/root/pull/1218,5,"['patch', 'release', 'update']","['patches', 'release', 'update']"
Deployability,"This PR serves the same purpose as this one: #4695 ; However, I think that older PR was never merged, because it was opened before the hotfix #4698 and therefore was not able to compile. In this PR I simply format all code that has been added for the TGraphMultiErrors class using clang-format and the format settings file provided by ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4777:135,hotfix,hotfix,135,https://root.cern,https://github.com/root-project/root/pull/4777,1,['hotfix'],['hotfix']
Deployability,"This PR should be merged after `TSlotStack` is upgraded to not use static thread-local storage,; and one test case is expected to fail until this happens.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2238:47,upgrade,upgraded,47,https://root.cern,https://github.com/root-project/root/pull/2238,1,['upgrade'],['upgraded']
Deployability,"This PR solves ROOT-8873 ""Reinforce the mechanism to detect non existing branches"". All transformations and actions now throw an exception right when called if at least one of the columns they will work on is not present in the data nor is a custom column (created via `Define`). `test_missingBranches` is expected to start failing -- a PR in roottest will update the reference file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/775:357,update,update,357,https://root.cern,https://github.com/root-project/root/pull/775,1,['update'],['update']
Deployability,"This PR supersedes #2899. We need to make sure the ROOT C++ kernel of Jupyter runs with the same Python version that ROOT was built with. Since running the kernel with a particular Python installation cannot be enforced by the user by setting the `$PATH` variable (Jupyter ignores that variable and picks Python from the system), we need to enforce it from the kernel file. We can't define a full path to the right Python binary in the kernel.json file because that path could be different in the machine where ROOT is built and the machine where the C++ kernel runs.; The best we can do is include the major and minor version in the kernel.json file, so that we make sure the kernel is not executed with an incompatible version, which would likely lead to a crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2906:188,install,installation,188,https://root.cern,https://github.com/root-project/root/pull/2906,1,['install'],['installation']
Deployability,"This PR supersedes #3424. The reference counting is greatly improved and the data is kept alive until the datasource dies, which gets delete at the end of the lifetime of the computational graph. See here for the use-case:. ```python; import ROOT; import numpy. data = {; ""x"": numpy.array([1, 2, 3]),; ""y"": numpy.array([4, 5, 6]); }. df = ROOT.ROOT.RDF.MakeNumpyDataFrame(data); df = df.Define(""z"", ""x + y""). print(df.Mean(""z"").GetValue()) # Returns 7.0; ```. The feature plays well along with the `RDataFrame.AsNumpy` feature:. ```python; import ROOT. df = ROOT.ROOT.RDataFrame(10).Define(""x"", ""(int)rdfentry_""); data = df.AsNumpy(). df2 = ROOT.ROOT.RDF.MakeNumpyDataFrame(data); df2.Snapshot(""tree"", ""file.root""); ```. TODO:. - [x] Figure out how to install the header needed for the `NumyDataSource`; - [x] How to call the header (current name `MakeNumpyDataFrame.hxx`)? We should put it in a scope.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3669:752,install,install,752,https://root.cern,https://github.com/root-project/root/pull/3669,1,['install'],['install']
Deployability,"This PR supersedes https://github.com/root-project/root/pull/15476 since there were changes to be made also in roottest, available at https://github.com/root-project/roottest/pull/1127. From the original PR:. # This Pull request:; Update the distributed RDataFrame to use the HeadNode _localrdf to keep track of transform operations, and add the ability to call GetColumnNames on a NodeProxy object. . ## Changes or fixes:; - Add GetColumnNames method to NodeProxy which calls the HeadNode GetColumnNames method; - Propagate transform operations to the HeadNode _localrdf, mainly to keep track of user-defined columns",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15672:231,Update,Update,231,https://root.cern,https://github.com/root-project/root/pull/15672,1,['Update'],['Update']
Deployability,This PR tries to make progress with upstreaming our lazy template specialization patch lives only in our llvm forks ( https://reviews.llvm.org/D41416) in favor of re-implementing it in a way that we can upstream it (llvm/llvm-project#76774),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495:81,patch,patch,81,https://root.cern,https://github.com/root-project/root/pull/14495,1,['patch'],['patch']
Deployability,"This PR updates Cppyy and adapts experimental PyROOT to the changes. It also re-enables a few tests. The following PRs merged and issues fixed in Cppyy are incorporated by this update:. https://bitbucket.org/wlav/cpycppyy/pull-requests/24/fixes-for-memoryregulator-recursiveremove; https://bitbucket.org/wlav/cpycppyy/pull-requests/25/proposal-for-setting-hooks-for-custom. https://bitbucket.org/wlav/cppyy/issues/113/assignment-to-c-global-from-python-does; https://bitbucket.org/wlav/cppyy/issues/115/instantiation-for-c-float-picked-when; https://bitbucket.org/wlav/cppyy/issues/121/dir-does-not-return-auto-instantiated; https://bitbucket.org/wlav/cppyy/issues/131/problem-constructing-object-of-templated; https://bitbucket.org/wlav/cppyy/issues/138/crash-when-deleting-an-object-of-a-python; https://bitbucket.org/wlav/cppyy/issues/139/wrong-overload-picked-when-passing-object. There is still one more pending issue, introduced recently in Cppyy, which affects a few tests:; https://bitbucket.org/wlav/cppyy/issues/136/item-assignment-not-working-in-templated; Those tests have been disabled temporarily. Once a bug fix is available it will be ported right away to experimental PyROOT's Cppyy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4264:8,update,updates,8,https://root.cern,https://github.com/root-project/root/pull/4264,2,['update'],"['update', 'updates']"
Deployability,This PR updates Cppyy to the following versions:; - cppyy to 1.4.2; - cppyy-backend to clingwrapper-1.9.0; - CPyCppyy to 1.8.2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4051:8,update,updates,8,https://root.cern,https://github.com/root-project/root/pull/4051,1,['update'],['updates']
Deployability,"This PR updates the Cppyy copy of experimental PyROOT, in particular with:; - cppyy v1.4.1; - cppyy_backend v1.7.0 (clingwrapper); - CPyCppyy v1.5.1. This update brings in, among other things:; * A few fixes in Cppyy for Windows.; * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:; https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/; * A fix for `addressof` in Cppyy.; * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit.; * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3322:8,update,updates,8,https://root.cern,https://github.com/root-project/root/pull/3322,3,['update'],"['update', 'updates']"
Deployability,"This PR updates the Cppyy packages to the following versions:; - cppyy 1.4.7; - cppyy-backend 1.8.1 (clingwrapper); - CPyCppyy 1.7.1. This update brings several fixes/features, including:; - @bellenot 's fixes for Windows; - Fixes for overload resolution when implicit conversion can be applied; - Improved template support; - Fixes to remove compiler warnings; - and many more. After this PR is merged, another PR (https://github.com/root-project/root/pull/3640) will be necessary to support using declarations for methods. The corresponding patch in cppyy is being updated at the moment. Piggybacked with in this PR there is also a fix for getting using directives of namespaces when those namespaces are nested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3664:8,update,updates,8,https://root.cern,https://github.com/root-project/root/pull/3664,4,"['patch', 'update']","['patch', 'update', 'updated', 'updates']"
Deployability,This PR updates the documentation for TMVA SOFIE.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13095:8,update,updates,8,https://root.cern,https://github.com/root-project/root/pull/13095,1,['update'],['updates']
Deployability,This PR:; - adds the RRVecField type for type-erased I/O of RVecs with RNTuple; - removes some special-casing of `RVec<bool>` which is unnecessary now that we have RVec 2.0; - adds RPrintValueVisitor support for RVecs; - adds tests for type-erased I/O of RVecs; - adds tests for `ntuple->Show` + RVecs; - adds tests for interop I/O of std::vectors and RVecs (i.e. writing one and reading the other). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary): I don't think it's necessary. This PR fixes #6347 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8770:451,update,updated,451,https://root.cern,https://github.com/root-project/root/pull/8770,1,['update'],['updated']
Deployability,"This Pull request adds Google Test fixture functionality in the RNTuple DAOS test suite, enabling automatic storage cleanup when running unit tests with real DAOS clusters. ## Changes or fixes:. - Introduces a fixture class for the test suite and registers all five existing tests under it through the `TEST_F` macro. ; - Consolidates shared functionality in the fixture definition. Namely, pool and container label data and expected diagnostics messages from `ROOT::TestSupport`. ; - Uses the `TearDownTestSuite()` call to automatically destroy DAOS containers created for the unit tests when all of them are completed.; - Replaces some duplicated string literals that specify ntuples and models for variables.; - Introduces preproc definition `R__DAOS_TEST_MOCK` to CMake to bypass container destruction system call if using the mock library as underlying storage. ## Pending:. - One error message is not currently suppressed, as it is not emitted by ROOT's exception diagnostics: `client ERR src/client/api/container.c:148 daos_cont_create_with_label() daos_cont_create label=test-multiple-ntuples failed, DER_EXIST(-1004): 'Entity already exists'`. This is the (normal) output of `RDaosContainer` attempting to create a container by default, and ignoring the error if it already exists in the DAOS pool. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12106:1359,update,updated,1359,https://root.cern,https://github.com/root-project/root/pull/12106,1,['update'],['updated']
Deployability,"This Pull request adds a missing period in a member-function description for better readability. Changes or fixes: cosmetic change in the description of the `TH1::LabelsInflate()`. Without this change there is no newline between ""Refill histogram"" and ""This function is called by..."" as shown in this screenshot:; ![image](https://user-images.githubusercontent.com/7541582/123423509-4dc71400-d5c8-11eb-8ea5-ca6ebad9dfe7.png). Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8540:474,update,updated,474,https://root.cern,https://github.com/root-project/root/pull/8540,1,['update'],['updated']
Deployability,"This Pull request extends `RPageSink::RPageSinkDaos` to implement `RPageSinkDaos::CommitSealedPageVImpl()`, of signature: ; ```c++; vector<RNTupleLocator> RPageSinkDaos::CommitSealedPageVImpl(span<RPageStorage::RSealedPageGroup> ranges); ```; , which is virtually declared in the parent class `RPageSink` since PR #10775. . The implemented method modifies the default behavior for committing page ranges, i.e. calling `::CommitSealedPage` repeatedly for each individual page. ; Instead, it coalesces the buffered page ranges - e.g. all pages in a column or cluster - into a batch of vector writes, enabling I/O parallelization after recent optimizations to the `RDaos` library. . As with the batched fetching case in `RPageSourceDaos::LoadClusters()`, the page write requests are aggregated by the pair (Object ID, Distribution Key). This pair is part of the `RDaosKey` determined by the mapping strategy set in `kDefaultDaosMapping` from the pages metadata and the `RPageSinkDaos` instance's atomic counter `fPageId` that uniquely identifies pages in the storage sink. ## Changes or fixes:. * Implements `std::vector<RNTupleLocator> RPageSinkDaos::CommitSealedPageVImpl(std::span<RPageStorage::RSealedPageGroup> ranges)`; * Modifies the default behavior in `RPageSink::CommitSealedPageV()` to coalesce pages before sending out the write request to storage; * Enables optimized (i.e. batched) vector write requests of multiple pages within a column range by exploiting the refactored `RDaos` interface and the generalized ntuple-object mappings in `RPageStorageDaos`. ## Checklist:. - [x] tested changes locally and on openlab cluster `olsky-03` with DAOS 2.0.x; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10944:1669,update,updated,1669,https://root.cern,https://github.com/root-project/root/pull/10944,1,['update'],['updated']
Deployability,"This Pull request fixes a bug in `RPageSourceDaos` in which the cluster bunch default size does not get overridden by the one provided in `RNTupleReadOptions`. This change thus enables the prefetching of a configurable number of clusters while the current bunch is being processed, similarly to what is done in the constructor for `RPageSourceFile`. ## Changes or fixes:. - `RPageSourceDaos` ctor now uses the value in `RNTupleReadOptions::fClusterBunchSize` to initialize its `RClusterPool` with configurable read-ahead number of clusters, overwriting the default value of `1`. The change parallels the constructor implementation of `RPageSourceFile`. . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). Related to PR #9100, which introduced the prefetching capability.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10889:706,update,updated,706,https://root.cern,https://github.com/root-project/root/pull/10889,1,['update'],['updated']
Deployability,"This Pull request introduces the Root Storage for BDT. ; Initially developed by @guitargeek(https://github.com/guitargeek/tmva-to-xgboost/) this PR implements the data structure for storing the model configuration & weights, Parse function for translating a TMVA BDT `.xml` file, and a mapping interface for generating inference code. ## Progress; - [x] Data structure for storing model configuration and weights; - [x] Serialization of the class for writing/reading to `.root` files; - [x] `Parse()` function for translating a TMVA BDT `.xml` file ; - [ ] Mapping Interface to TMVA Tree Inference for generating inference code. ## Checklist:; - [x] tested changes for `Parse()`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8873:200,configurat,configuration,200,https://root.cern,https://github.com/root-project/root/pull/8873,2,['configurat'],['configuration']
Deployability,"This Pull request introduces wrappers to obfuscate backend-specific implementation details, distancing the storage layer functionality in `RPageStorageDaos` from the concrete backend in `RDaos` and `libdaos`. . ## Changes or fixes:. - Wraps the dictionary that groups page requests by their co-locality keys (a type previously aliased as `MultiObjectRWOperation_t`) into a new wrapper class `MultiObjectRWOperation`. The class manages the insertion of new request akeys and associated IOVs into the dictionary and exposes `begin` and `end` iterators for it.; - Moves `RDaosKey` to the header file and aliases the concrete types of `DistributionKey_t` and `AttributeKey_t`, used by other structures in the backend.; - Introduce wrapper structure `RDaosIov` to obfuscate the libdaos-specific `d_iov_t` structure and `d_iov_set()` call from the storage layer for object stores.; - Hide DAOS error code resolution function (`d_errstr`) in `GetDaosError()`.; - Directly use existing `RDaosObject::ObjClassId` wrapper structure around the default metadata class definition in the storage layer. ## Checklist:. - [x] tested changes locally + DAOS `delphi` node; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12109:1161,update,updated,1161,https://root.cern,https://github.com/root-project/root/pull/12109,1,['update'],['updated']
Deployability,This Pull request makes the conversion of stl vectors to RVec optional when using Snapshot() . ## Changes or fixes:; Propagating the relevant flag to the Snapshot() call. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #15503,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15895:222,update,updated,222,https://root.cern,https://github.com/root-project/root/pull/15895,1,['update'],['updated']
Deployability,"This Pull request refactors `DaosEventQueue` and asynchronous event management in `RDaos`, with improved performance and simplified polling of pending read-write requests. ; Better performance is achieved by eliminating the significant overhead that comes with instantiating event queues with every new request. Instead, event queues are now permanent and pool-wide, managed by `RPool`. ; The use of a symbolic parent event per call to `VectorReadWrite` better represents the intent behind that function, which is to only return upon successful processing of all asynchronous requests sent through it. ## Changes or fixes:; - Symbolic parent events are tied to batched asynchronous events originating from a single RW call, for easier polling.; - Poolwide event queues that are shared among its underlying containers and persist between RW calls, thus avoiding the expensive operation of creating queues every time `VectorReadWrite` is called.; - Explicit marking of request calls as synchronous in `FetchUpdateArgs` to bypass the queue. In such cases, object fetch/update calls to DAOS are sent with a null event pointer to signal that the request is blocking.; - The functions `daos_event_test` and `daos_event_parent_barrier`, used for polling and sending parent events respectively, are added to `libdaos_mock`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10795:1066,update,update,1066,https://root.cern,https://github.com/root-project/root/pull/10795,2,['update'],"['update', 'updated']"
Deployability,"This Pull request refactors `RPageSourceDaos::LoadClusters()` to coalesce the fetch requests for pages in the same cluster bunch before calling `RDaosContainer::ReadV`, instead of launching a call to remote storage for the pages of each cluster separately. A cluster bunch corresponds to all clusters being fetched together by `LoadClusters()` at a time. . Since the call by `ReadV()` is ultimately blocking until all requests are done, this change enables the asynchronous page fetch requests from different clusters to share queue and flight time; thus, remote storage can parallelize them toward a higher read throughput. . The requests are still coalesced according to object ID and distribution key resulting from the mapping strategy in `kDefaultDaosMapping`. The modification allows support for new mappings that do not feature the ntuple cluster ID among the object ID and distribution key (i.e. such page requests may now be parallelized despite not being from the same cluster). ## Changes or fixes:; - `RPageSourceDaos::LoadClusters()` has been refactored to batch up page requests from all provided clusters before the blocking `RDaosContainer::ReadV()` call. ## Checklist:. - [x] tested changes locally + openlab `olsky-03`; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10982:1244,update,updated,1244,https://root.cern,https://github.com/root-project/root/pull/10982,1,['update'],['updated']
Deployability,This Pull request updates the ROOT::Math::Minimizer reference documentation and adds the list of all Minimizer plugins that are available in ROOT. . This PR fixes the JIRA issue [3452](https://sft.its.cern.ch/jira/browse/ROOT-3452),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12819:18,update,updates,18,https://root.cern,https://github.com/root-project/root/pull/12819,1,['update'],['updates']
Deployability,This Pull request updates xrootd version (by M.K.Simon). ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8963:18,update,updates,18,https://root.cern,https://github.com/root-project/root/pull/8963,2,['update'],"['updated', 'updates']"
Deployability,This Pull request: fixes some error messages and spelling mistakes in operators . ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10435:133,update,updated,133,https://root.cern,https://github.com/root-project/root/pull/10435,1,['update'],['updated']
Deployability,This Pull request: updates `CladDerivator.h` to follow Clad custom derivative where all functions are based on pushforwards and pullbacks. ## Changes: [CladDerivator.h](https://github.com/root-project/root/blob/master/math/mathcore/inc/Math/CladDerivator.h); ## Checklist:. - [ X] tested changes locally; - [ ] updated the docs (if necessary): not required. This PR fixes # https://github.com/vgvassilev/clad/issues/510,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12021:19,update,updates,19,https://root.cern,https://github.com/root-project/root/pull/12021,2,['update'],"['updated', 'updates']"
Deployability,This addresses the rest of the comments of root-project/root#4717. Patch by Alexander Penev (@alexander-penev) and me.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5637:67,Patch,Patch,67,https://root.cern,https://github.com/root-project/root/pull/5637,1,['Patch'],['Patch']
Deployability,"This adds a new standalone Minuit2 build system built in CMake to replace the old one that no longer works. The following features are part of the design:. * Full featured CMake build, based on https://github.com/GooFit/Minuit2; - Only requires CMake 3.1+; - Support for adding as a subdirectory, using from build directory, or installing; - Works inside of ROOT or standalone; - Support for CPack binary `make package`; - Options for MPI and OpenMP integrated with main ROOT build; - Support for macOS, Linux, and Windows; - Version captured from ROOT; - CTest support; - `make docs` support (CMake 3.8+ only); * No need for extra ""prepare"" shell scripts, everything is done cross-platform through CMake and CPack; - Files can be copied in to make redistributable source with `-Dminuit2-standalone=ON`; - `make package_source` on Unix creates `.tar.gz` and `.zip` files (non-binary CPack); - `make purge` can remove copied files; * Helpful `README.md` and `DEVELOP.md` files. ### To produce a source distribution:; Make sure you have CMake 3.1+ (ROOT requires 3.4.3+, so that's likely). Then, from `/math/minuit2/build` run:. ```bash; cmake .. -Dminuit2-standalone=ON; make package_source; make purge; ```. ### You can also build Minuit2 for testing (standalone option on or off) with:. ```; make; ```. ### And you can make a prebuilt binary package with:. ```; make package; ```. (Standard CPack option for different generators apply.). ### Maintenence. If new files are needed by Minuit2 due to additions to ROOT, they should be added to the source files lists in `/math/minuit2/src/Math/CMakeLists.txt` and `/math/minuit2/src/CMakeLists.txt` (depending on if it's a new Math or Minuit2 requirement). ### Windows; This works on Windows; and you can even then create binary installers for Windows trivially. (Though ""package_source"" does not seem to be supported on Windows). This is the procedure on Windows:. First, install Visual Studio 17, Git, CMake, and NSIS. Then from the `math/minuit2/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680:328,install,installing,328,https://root.cern,https://github.com/root-project/root/pull/1680,2,"['install', 'integrat']","['installing', 'integrated']"
Deployability,"This adds back commit ff557b3, but this time we release the merge lock before calling a registered callback. That way, if the callback itself triggers another Merge(), it does not deadlock.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1751:48,release,release,48,https://root.cern,https://github.com/root-project/root/pull/1751,1,['release'],['release']
Deployability,"This adds gdb pretty printers for a few objects such as TString and TNamed, as well; as a couple of RooFit objects. gdb can automatically load them if `add-auto-load-safe-path`; is set to ROOT's lib directory.; The printers should only be installed during debug builds. A couple of things are still unclear:; - `file(COPY ...` is used to copy the printers into the build directory. This will only run when cmake is run, but not during make. The pretty-printers will therefore not get updated. Is that a problem? A solution should be to create targets that are being kept up-to-date by make.; - Is it correct to use `install(FILES ...)` to install?; - I added a roottest that starts root.exe in gdb, and tries to load the printers. This may fail; o With old gdbs; o With release builds. gdb should fail to load the printers because they are not installed. Probably, the test should be disabled during release builds. Let's see if it fails as expected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3633:239,install,installed,239,https://root.cern,https://github.com/root-project/root/pull/3633,7,"['install', 'release', 'update']","['install', 'installed', 'release', 'updated']"
Deployability,"This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:; ```C++; void repro(); {; using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};; RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};; RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};; auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);; std::cout << data1.weightError() << std::endl;; data2.get(0);; std::cout << data2.weightError() << std::endl;; }; ```. The output will be:. ```; [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor.; 0.3; 0; ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12453:999,release,releases,999,https://root.cern,https://github.com/root-project/root/issues/12453,1,['release'],['releases']
Deployability,"This allows our binary releases to be used without needing to `source thisroot.sh` by default on Linux as well as on macOS. The only setup required will be to `export PYTHONPATH=$(root-config --libdir)` with the `root-config` from the binary release, so that python knows where to get ROOT when the user tries to `import ROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8576:23,release,releases,23,https://root.cern,https://github.com/root-project/root/pull/8576,2,['release'],"['release', 'releases']"
Deployability,This allows to interactively adjust histogram parameters before; performing a projection to a lower dimensional representation. This patch implements ROOT-4515. A unit test is being added in root-mirror/roottest/pull/6.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/212:133,patch,patch,133,https://root.cern,https://github.com/root-project/root/pull/212,1,['patch'],['patch']
Deployability,This allows us to create daily releases and binaries for arbitrary tags (not just `x.yy.zz` as currently allowed by `build/version_number`),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3104:31,release,releases,31,https://root.cern,https://github.com/root-project/root/pull/3104,1,['release'],['releases']
Deployability,This allows us to use a single modulemap file across multiple libstdc++ versions and gives us a way forward to deal with deprecated files. This patch will be submitted for a review upstream. It fixes our gcc 4.8 builds where codecvt and cuchar header files do not exist.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4394:144,patch,patch,144,https://root.cern,https://github.com/root-project/root/pull/4394,1,['patch'],['patch']
Deployability,"This allows us to use a single modulemap file across multiple libstdc++; versions and gives us a way forward to deal with deprecated files. This patch will be submitted for a review upstream. It fixes our; gcc 4.8 builds where codecvt, cuchar and string_view header files do not exist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7303:145,patch,patch,145,https://root.cern,https://github.com/root-project/root/pull/7303,1,['patch'],['patch']
Deployability,"This almost broke me... I've been trying to find for days why ROOT would not build correctly in one particular (fairly complicated) setup for me. I just couldn't figure out why I wouldn't get the files meant for the `etc/` directory in my installation. Turns out that it was because in this weird setup I put the ROOT source code into a directory inside of another CMake project, into a directory that had `/CMakeFiles/` as part of its path. And would you know, macOS still comes with a case insensitive file system, so this exclusion rule was triggering for the full contents of the `etc/` directory in this setup. After realising this, I modified my project's setup to put the ROOT source code into a safer location. But this update should still help people avoid a similar situation later on... P.S. I checked in a simple standalone example that this formalism should do the right thing. (Took me some tries to find ""just the right"" incantation.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1625:239,install,installation,239,https://root.cern,https://github.com/root-project/root/pull/1625,2,"['install', 'update']","['installation', 'update']"
Deployability,"This avoids the following warning when building `rootbench` (gcc 13.2.1):. ```txt; In file included from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RInterface.hxx:15,; from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDataFrame.hxx:21,; from /home/rembserj/spaces/master/root/src/root/rootbench/root/tree/dataframe/RDataFrameBenchmarks.cxx:1:; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here; /home/rembserj/spaces/master/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14044:530,Update,UpdateCArraysPtrs,530,https://root.cern,https://github.com/root-project/root/pull/14044,1,['Update'],['UpdateCArraysPtrs']
Deployability,"This bug report:; ![obraz_2021-01-05_030717](https://user-images.githubusercontent.com/483575/103598565-36ee1180-4f03-11eb-891b-2a66e7bb2062.png). Reference from tutorial: https://root.cern.ch/doc/master/alice__vsd_8C.html; ![image](https://user-images.githubusercontent.com/483575/103598652-6e5cbe00-4f03-11eb-9716-f77d792b80e9.png). ### Describe the bug; By running one of the ROOT tutorials:. $ root alice_vsd.C. I do not see any button to change events (see the image above). Apparently, from the log:. > gif2ASImage():2300:</usr/lib/root/6.22/icons/GoBack.gif> (null); > Warning in <TASImage::GetMask>: No image; > gif2ASImage():2300:</usr/lib/root/6.22/icons/GoForward.gif> (null); > Warning in <TASImage::GetMask>: No image. however:; ```; $ ls -all /usr/lib/root/6.22/icons/GoBack.gif /usr/lib/root/6.22/icons/GoForward.gif; -rw-r--r-- 1 root root 1177 11-27 16:00 /usr/lib/root/6.22/icons/GoBack.gif; -rw-r--r-- 1 root root 1166 11-27 16:00 /usr/lib/root/6.22/icons/GoForward.gif; ```. ### Expected behavior; I expect to see buttons with figures. ### To Reproduce; $ root alice_vsd.C. from the eve tutorials. ### Setup. 1. ROOT version: 6.22.06; 2. Operating system: Linux Gentoo; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: compiled from sources via Gentoo package manager/portage, uses external libafterimage",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6985:1229,install,install,1229,https://root.cern,https://github.com/root-project/root/issues/6985,1,['install'],['install']
Deployability,"This causes a flood of ""NON_XML_CHAR"" etc output in Jenkins, cluttering the output and making the actual failure virtually invisible. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12908:229,update,updated,229,https://root.cern,https://github.com/root-project/root/pull/12908,1,['update'],['updated']
Deployability,"This chane is an optimization of the PyROOT value printing. Instead of jitting the value printing at every invocation of the __str__ method, the jitting now happens only once per type. The printer function pointers are stored in a map. The time needed to print is now equivalent to the previous one only for the first print, much faster afterwards. The memory used is also much lower, since traces in the AST are left only at the first print and only the type name and function pointer are stored in an unordered_map. Fixes https://github.com/root-project/root/issues/12817. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13901:670,update,updated,670,https://root.cern,https://github.com/root-project/root/pull/13901,1,['update'],['updated']
Deployability,"This change is an optimization of the PyROOT value printing. Instead of jitting the value printing at every invocation of the __str__ method, the jitting now happens only once per type. The printer function pointers are stored in a map. The time needed to print is now equivalent to the previous one only for the first print, much faster afterwards. The memory used is also much lower, since traces in the AST are left only at the first print and only the type name and function pointer are stored in an unordered_map. Fixes https://github.com/root-project/root/issues/12817. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # https://github.com/root-project/root/issues/12817",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13876:671,update,updated,671,https://root.cern,https://github.com/root-project/root/pull/13876,1,['update'],['updated']
Deployability,"This change is done in order to avoid that the pythonizations modules; depend on methods defined in TPython. This commit can be descarded when we will update to CPyCppyy-1.9.7,; since TPython::CPPInstance_FromVoidPtr will become; CPyCppyy::CPPInstance_FromVoidPtr.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4643:151,update,update,151,https://root.cern,https://github.com/root-project/root/pull/4643,1,['update'],['update']
Deployability,"This change is redesign of REveDataCollection to visualize heavy events using DigitSets or REveCaloData elements.; This change also makes online tooltips in calorimeters possible.; Note: In macro collection_proxies.C is an example of REveDigitSet using REveDataCollection. The demo has calorimeters included, but are not yet integrated in collections, e.g. individual towers can't be queried in table view.; ![caloyellow](https://user-images.githubusercontent.com/2516492/96306020-b844a080-0fb3-11eb-953f-0de383b61517.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6656:325,integrat,integrated,325,https://root.cern,https://github.com/root-project/root/pull/6656,1,['integrat'],['integrated']
Deployability,"This change reflects the nature of vecops, which have nothing to do with treeplayer in principle. In addition, this refactoring paves the way for the future evolution of vecops, for example in the context of an integration with VDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1827:211,integrat,integration,211,https://root.cern,https://github.com/root-project/root/pull/1827,1,['integrat'],['integration']
Deployability,"This code is outdated and needs to be updated. But we anyway don't use or; test this code in any way, so let's send it to the git history were dead; code belongs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1461:38,update,updated,38,https://root.cern,https://github.com/root-project/root/pull/1461,1,['update'],['updated']
Deployability,"This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** segmentation violation; ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3; * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10); * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13926:164,configurat,configurations,164,https://root.cern,https://github.com/root-project/root/pull/13926,2,['configurat'],['configurations']
Deployability,"This commit removes some functions from the RooFit data classes:. * `RooAbsData::valid()` (virtual method that was overridden in; RooDataHist but not RooDataSet). * `RooDataHist::valid(std::size_t i)` and `RooDataHist::valid()`. * `RooDataHist::cacheValidEntries()`. The `cacheValidEntries` method was originally intended to be used in; `RooAbsOptTestStatistic` to mask histogram entries out of the variable; range in case of a subrange fit. The reasons why `cacheValidEntries` and; the related `valid()` methods should be removed are:. 1. It is redundant. In a subrange fit, the `RooAbsOptTestStatistic` is; creating a clone of the dataset with the subrange only using; `RooAbsData::reduce()`. So all entries are valid by definition. 2. RooDataHist and RooDataSet have inconistent implementations. For; the RooDataHist, `valid()` tells you ""if bin `i` is considered; valid within the current range definitions of all observables""; (according to the documentation). For the RooDataSet, it always; returns `true`. This inconsistency leaves plenty of room for error. 3. The masking of out-of-range entries unnessecarily increases the; `mutable` state of the RooDataHist, which can cause trouble if one; updates the observable range but then forgets to call; `cacheValidEntries()`. 4. Even the documentation said that `RooDataHist::cacheValidEntries()`; was a ""shortcut function only for RooAbsOptTestStatistic"". Why keep; it if `RooAbsOptTestStatistic` doesn't even use it in a meaningful; way anymore?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9168:1201,update,updates,1201,https://root.cern,https://github.com/root-project/root/pull/9168,1,['update'],['updates']
Deployability,This commit reverts root-project/root@69568116cd. The CtorsConstants variable is not used. The commit log has a simple tests which now works without this patch. Thanks to Jonas Hahnfeld (@hahnjo) for pointing this out!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10827:154,patch,patch,154,https://root.cern,https://github.com/root-project/root/pull/10827,1,['patch'],['patch']
Deployability,"This ctor makes the following buggy code compile, but we would prefer it to rather not compile:. ```cpp; TList mylist = new TList();; ```. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary) - added to deprecation list",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15451:190,update,updated,190,https://root.cern,https://github.com/root-project/root/pull/15451,1,['update'],['updated']
Deployability,This enables ROOT to run without requiring to source thisroot.sh and also run from installed public locations (via gnuinstall). Patch by Oksana Shadura and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4519:83,install,installed,83,https://root.cern,https://github.com/root-project/root/pull/4519,2,"['Patch', 'install']","['Patch', 'installed']"
Deployability,"This ensures that each thread-local TChain knows which tree contains; which global entry number without having to open all intermediate; files to check how many entries they contain, resulting in much; less contention in TTreeProcessorMT when multiple threads are loading; the right file to process. An artificial example running on 342 files of about 2MB each, with 8 cores, release build of ROOT, has the following timings:; * current master, 8 cores: ~10s; * with this fix, 8 cores: ~3.5s; * no imt (current master and with the fix): ~1s. To merge after #2115.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116:376,release,release,376,https://root.cern,https://github.com/root-project/root/pull/2116,1,['release'],['release']
Deployability,"This extends ""98ee7a19d0 [cling] Fix clang::CodeGen EH assert on MacOS:"".; Just as for BeginEH, EndEH might not see the complete picture of an already; evaluated EST from a different Decl in the redecl chain. Teach it to look; at the most recent. This assert hits when:; - a deserialized decl with unevaluated EST is emitted, but a later redecl has the EST evaluated;; - during the emission, CompleteRedeclChain() is not triggered, and the emitted decl does not get; an updated EST; In EmitEndEHSpec, the decl thus still has EST unevaluated, despite EmitBeginEHSpec having looked; at an evaluated EST from the most recent decl. This fixes e.g. ./tree/dataframe/test/dataframe_ranges in ROOT on MacOS 10.15 with C++17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6139:470,update,updated,470,https://root.cern,https://github.com/root-project/root/pull/6139,1,['update'],['updated']
Deployability,"This failure exists since ROOT 6: while CINT happily converted 1 to the world, cling refuses to convert it to e.g. const char*. Pass `0` which is ""more compatible"" with datatypes. This is still terrible design, but at least it is not making things worse, only better... Before TNamed::SetName was looked up as a call `named.SetName(1)` which - with cling - means that no method is found. Now `named.SetName(0)` finds the right method. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12956:530,update,updated,530,https://root.cern,https://github.com/root-project/root/pull/12956,1,['update'],['updated']
Deployability,"This feature, originally added in commit 22b1606f, was reverted to make the LLVM upgrade to version 13 easier. This commit adds back all functionality as it was just before the LLVM upgrade. Edit: Unfortunately, still doesn't work with embedded debugging info:; ```; epsftws build $ env CLING_DEBUG=1 EXTRA_CLING_ARGS='-gdwarf-5 -gembed-source' gdb -- bin/root.exe; GNU gdb (Gentoo 12.1 vanilla) 12.1; Copyright (C) 2022 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law.; Type ""show copying"" and ""show warranty"" for details.; This GDB was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from bin/root.exe...; (gdb) break f; Function ""f"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (f) pending.; (gdb) run; Starting program: /srv/root/build/bin/root.exe ; warning: File ""/srv/root/build/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /srv/root/build/lib/libCore.so-gdb.py; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging us",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11882:81,upgrade,upgrade,81,https://root.cern,https://github.com/root-project/root/pull/11882,4,"['configurat', 'upgrade']","['configuration', 'upgrade']"
Deployability,This fix corresponds to a cppyy patch for MetaCling:. https://bitbucket.org/wlav/cppyy-backend/src/dfb9f7a46d7b703325179deea193bb1eb823728e/cling/patches/nodeleted.diff. Drops properties of deleted methods and chooses move in wrapper generator if no copy available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5925:32,patch,patch,32,https://root.cern,https://github.com/root-project/root/pull/5925,2,['patch'],"['patch', 'patches']"
Deployability,This fixed ROOT-10630 for 6.20 patches and is a backport of #4909,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5262:31,patch,patches,31,https://root.cern,https://github.com/root-project/root/pull/5262,1,['patch'],['patches']
Deployability,"This fixes #11907. Inadvertently a previous commit (79a669b) disabled the ability to cleanup the thread local gDirectory in other; threads when the TFile they pointed to is deleted. Also fix a set of rare race conditions:. Fix race condition between RegisterContext and gDirectory cleanup. Description of the race conditions:. (1) thread one create TFile, gDirectory now points to that file.; (2) thread two delete TFile, the destructor calls CleanTargets which has 4 distinct phase; (a) take the TFile spin lock and update all the TContext that points to the file; (b) still hold the spin lock, clean the other thread's directory.; (c) deal with the TContext that were being destructed at the same time; (d) update the local gDirectory. If between (2)(a) and (2)(b), thread (1) starts the creation of a TContext, and; is held at the start of RegisterContext after thread 2 release the spin lock,; thread 1 might awaken only after the TFile object has been deleted and thus; RegisterContext would access delete memory. If during the destruction of the TFile by thread 2, thread (1) starts the; creation of a TContext, but is suspended right before the start of RegisterContext,; when it comes back it will use deleted memory to try to acquire the spin lock.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11908:517,update,update,517,https://root.cern,https://github.com/root-project/root/pull/11908,12,"['release', 'update']","['release', 'update']"
Deployability,This fixes #12498. TTime objects were not (anymore) split because TTime is still using the automatically generated but streamer-function based I/O. (The splitting stopped when `TTree` was upgraded to respect custom streamers).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12499:188,upgrade,upgraded,188,https://root.cern,https://github.com/root-project/root/pull/12499,1,['upgrade'],['upgraded']
Deployability,"This fixes #14372. During the upgrade to LLVM16, the check for validity of the existing `FileEntry` was removed:. ```; - if (UFE.isValid() &&; - llvm::sys::toTimeT(Status.getLastModificationTime()) == UFE.ModTime) {; + if (llvm::sys::toTimeT(Status.getLastModificationTime()) == UFE->ModTime) {; ```. In praticed this resulted in the usage of the zero-initialized `FileEntry` for files with mtime equal zero. The check for the mod time is a ROOT specific patch introduced by commit 8d492b6b9ca359294d018995d097736f762866c8 we the commit log:. Make sure the inode did not get updated since we read it. During the upgrade to LLVM svn revision 214630, the code was sub-optimally merged with the new related code:. ```; + if (UFE.isValid()) { // Already have an entry with this inode, return it.; +; + // FIXME: this hack ensures that if we look up a file by a virtual path in; + // the VFS that the getDir() will have the virtual path, even if we found; + // the file by a 'real' path first. This is required in order to find a; + // module's structure when its headers/module map are mapped in the VFS.; + // We should remove this as soon as we can properly support a file having; + // multiple names.; + if (DirInfo != UFE.Dir && Data.IsVFSMapped); + UFE.Dir = DirInfo;; + }; if (UFE.isValid() && Data.ModTime == UFE.ModTime) {; - // Already have an entry with this inode, return it.; - // If the stat process opened the file, close it to avoid a FD leak.; - if (F); - delete F;; -; return &UFE;; }; ```. where the new code (top part) should also have not been executed unless the UFE was actually returned. This also made meger the LLVM code more challenged were one the change was:; ```; - if (UFE.isValid()) { // Already have an entry with this inode, return it.; + if (ReusingEntry) { // Already have an entry with this inode, return it. ```; this lead to the inadvertent removal of `UFE.isValid() conditional` in the patched part (and the forgetting of adding `ReusingEntry conditional`). This pat",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14373:30,upgrade,upgrade,30,https://root.cern,https://github.com/root-project/root/pull/14373,4,"['patch', 'update', 'upgrade']","['patch', 'updated', 'upgrade']"
Deployability,"This fixes #14425 (the reproducer is added as test). Note that the patch comes straight from upstream cppyy https://github.com/wlav/cppyy-backend/blob/25caf988cef1f2f76705c07b7262f076e8ed0e01/cling/src/core/metacling/src/TClingCallFunc.cxx#L468-L485 even though it's a patch in TCling. I open this PR as a draft to start the discussion as to how we can integrate this change, since it's necessary to fix a bug that also affects usage of ROOT classes via PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14426:67,patch,patch,67,https://root.cern,https://github.com/root-project/root/pull/14426,3,"['integrat', 'patch']","['integrate', 'patch']"
Deployability,This fixes ROOT-9068 issue.; Tests in roottest have also been updated.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1238:62,update,updated,62,https://root.cern,https://github.com/root-project/root/pull/1238,1,['update'],['updated']
Deployability,"This fixes a bug recently introduced by commit bdf7502. Fixes issue https://github.com/root-project/root/issues/8474. Thank you so much @VanyaBelyaev for using ROOT master, which was crucial for me to fix this bug before it made it into any release!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8486:241,release,release,241,https://root.cern,https://github.com/root-project/root/pull/8486,1,['release'],['release']
Deployability,"This fixes a bug visible only in runtime_cxxmodules where the include guards; are ignored. This can happen when we are building a two modules which need; the same definition. In this case the usual include guards will only work if; we call a proper `#include ""something""` and this something should be defined; in a modulemap. There is no better solution for this at the moment. This is a rare case which; will likely not affect external use-cases. Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only without cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6 and puts in place; a better fix. Now roottest-root-io-tuple-make should work with modules. Patch by Philippe Canal and me!. This PR should supersede PR#3982.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3990:684,Patch,Patch,684,https://root.cern,https://github.com/root-project/root/pull/3990,1,['Patch'],['Patch']
Deployability,"This fixes a bug when a parameter is ""released"" when it was not ""fixed"" before. Without the fix, the internal consistency of MnUserParameterState is destroyed when a user calls Release() on a parameter that is not fixed, since the call appends a wrong index to fIntParameters. The issue was discovered by an iminuit user and I tracked down the source, see https://github.com/scikit-hep/iminuit/issues/648",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8175:38,release,released,38,https://root.cern,https://github.com/root-project/root/pull/8175,2,"['Release', 'release']","['Release', 'released']"
Deployability,This fixes a display issue on TBrowser on the mac (compiled to coca) where items in the list that had checkboxes against them have their text erroneously displayed that the top of the list rather than next to the item. Please can we backport this fix as well into the patch releases. Thanks!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11535:268,patch,patch,268,https://root.cern,https://github.com/root-project/root/pull/11535,2,"['patch', 'release']","['patch', 'releases']"
Deployability,"This fixes a race condition in which a TTreeReader and its; TTreeReaderValues could be deleted concurrently:; Thread #1) a task ends and pushes back processing slot; Thread #2) a task starts and overwrites thread-local TTreeReaderValues; Thread #1) first task deletes TTreeReader. I have not run a stress-test on this PR yet, to check for rare crashes. Will update as soon as I do.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/837:358,update,update,358,https://root.cern,https://github.com/root-project/root/pull/837,1,['update'],['update']
Deployability,"This fixes an issue with the compilation of GEANT3 on M1. GEANT3 cmake includes ROOT_USE_FILE and updates CMAKE_Fortran_FLAGS, so -m64 was propagated to the compiler and not recognised.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7287:98,update,updates,98,https://root.cern,https://github.com/root-project/root/pull/7287,1,['update'],['updates']
Deployability,"This fixes and cleans up the Travis runner; most notably, things like modern CMake and clang 5.0 now come by default (since last December). In theory, this should build much faster since several minutes per job was being spent waiting for apt-get to work. This moves the scripts in `.travis` to `.ci/*`. * CMake 3.9 is now installed by default on Travis: https://docs.travis-ci.com/user/build-environment-updates/2017-12-12/; * Clang 5.0 (and clang-format, clang-tidy) are now installed on Travis; * Move extensive setup to .ci/*; * Fix usage of yaml keys; * Avoid if statements by using build matrix entries; * Note clearly that one block of code will not run; * Remove comments about interleaved macOS",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1775:323,install,installed,323,https://root.cern,https://github.com/root-project/root/pull/1775,3,"['install', 'update']","['installed', 'updates']"
Deployability,This fixes building ROOT (and installing the prerequisite python packages) e.g. on Alma9. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12517:30,install,installing,30,https://root.cern,https://github.com/root-project/root/pull/12517,2,"['install', 'update']","['installing', 'updated']"
Deployability,This fixes https://sft.its.cern.ch/jira/browse/ROOT-8702. The fix is taken from Fedora's patch to their LLVM package:. http://pkgs.fedoraproject.org/cgit/rpms/llvm.git/tree/0001-Fix-R_AARCH64_MOVW_UABS_G3-relocation.patch. This is in turn based on the changes from the upstream change:. https://reviews.llvm.org/D27609,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/430:89,patch,patch,89,https://root.cern,https://github.com/root-project/root/pull/430,2,['patch'],['patch']
Deployability,"This fixes random failures of the `R__USE_IMT` part of the `datasource-root` test on Windows, due to file name corruptions, like for example:; ```; [ RUN ] TRootTDS.DefineSlotMT; Error in <TFile::TFile>: file C:/root-dev/build/x64/debug/tree/dataframe/test/G__NTupleStruct.vcx does not exist; [ OK ] TRootTDS.DefineSlotMT (191 ms); [ RUN ] TRootTDS.FromARDFMT; Error in <TFile::Init>: C:/root-dev/build/x64/debug/tree/dataframe/test/INSTALL.vcxproj not a ROOT file; C:\root-dev\git\master\tree\dataframe\test\datasource_root.cxx(175): error: Expected equality of these values:; 29.; Which is: 29; *max; Which is: 23; [ FAILED ] TRootTDS.FromARDFMT (6 ms); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13469:433,INSTALL,INSTALL,433,https://root.cern,https://github.com/root-project/root/pull/13469,1,['INSTALL'],['INSTALL']
Deployability,This fixes that regex characters in the source directory path; cause the CMake configuration to fail with cryptic error messages. This happens because we interpret the source directory as a regex in a; few places in our CMake code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/923:79,configurat,configuration,79,https://root.cern,https://github.com/root-project/root/pull/923,1,['configurat'],['configuration']
Deployability,This fixes that we often rebuild parts of ROOT by just doing simple git things. Before this change; we had this dependency on the header VCSRevision.h which is used by different parts of LLVM:; ```; interpreter/llvm/src/include/llvm/Support/VCSRevision.h:; input: CUSTOM_COMMAND; /home/teemperor/root/root-trunk2/.git/logs/HEAD <- Timestamp of this changes a lot!; /home/teemperor/root/root-trunk2/interpreter/llvm/src/cmake/modules/GenerateVersionFromCVS.cmake; outputs:; interpreter/llvm/src/include/llvm/Support/llvm_vcsrevision_h; interpreter/llvm/src/include/llvm/Support/CMakeFiles/llvm_vcsrevision_h; ```. After this change we no longer have the git head in here:. ```; teemperor@ftlserver ~/r/trunk-build2> ninja -t query interpreter/llvm/src/include/llvm/Support/VCSRevision.h; interpreter/llvm/src/include/llvm/Support/VCSRevision.h:; outputs:; interpreter/llvm/src/include/llvm/Support/CMakeFiles/llvm_vcsrevision_h; ```. I added two commits: One that fixes the current builds in a hacky way and one that is doing it properly but only goes into effect once we have the next LLVM upgrade (as the flag for configuring this is just added recently).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/813:1090,upgrade,upgrade,1090,https://root.cern,https://github.com/root-project/root/pull/813,1,['upgrade'],['upgrade']
Deployability,This fixes the errors in #3222. Patch by Oksana and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3242:32,Patch,Patch,32,https://root.cern,https://github.com/root-project/root/pull/3242,1,['Patch'],['Patch']
Deployability,"This fixes the following compilation errors on Windows:; ```; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C2039: 'TreeUtils': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1120): message : while compiling class template member function 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' mus",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11153:240,release,release,240,https://root.cern,https://github.com/root-project/root/pull/11153,3,['release'],['release']
Deployability,"This fixes the results of multi-range fits where the shape of the pdf; depends on the normalization set, e.g. with a multidimenstional; `RooProdPdf`. A unit test was implemented to test that the result of such a 2D; multi-range fit is compatible with the fit result over the full range.; It is expected that if the union of the ranges is the full range, the; result will exactly match the full-range fit. This has already been; checked so far in the 1D case. The `stressRooFit` reference file has been updated, because there is; such a 2D multi-range fits in the tests (see also the; rf312_multirangefit tutorial).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9150:502,update,updated,502,https://root.cern,https://github.com/root-project/root/pull/9150,1,['update'],['updated']
Deployability,"This fixes warnings such as these:; ```; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL19make_ROperator_SeluERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Selu(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; ```; # This Pull request:. ## Changes or fixes:. Move private declarations away from the public header file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10145:1248,update,updated,1248,https://root.cern,https://github.com/root-project/root/pull/10145,1,['update'],['updated']
Deployability,"This fixes:; - The installation of `libJupyROOTX_Y`; - The compilation, at installation time, of the Python source files of the various PyROOT packages",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5363:19,install,installation,19,https://root.cern,https://github.com/root-project/root/pull/5363,2,['install'],['installation']
Deployability,"This follow-up PR further improved the situation after #12380. In particular, the staging area of a collection cannot (apparently) be iterated -- see; https://github.com/root-project/root/blob/master/io/io/src/TGenCollectionProxy.cxx#L1573.; Other uses in the ROOT repository rely on `TVirtualCollectionProxy::At()`. However, we can instead exploit the fact that the staging area is backed by an array, i.e. the elements are contiguous in memory. Use this optimization also for `kSTLvector` collections, which was a TODO anyways. This should also provide an advantage/simplification to PR #12948. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13197:648,update,updated,648,https://root.cern,https://github.com/root-project/root/pull/13197,1,['update'],['updated']
Deployability,"This follows the folder restructuring done in VecGeom 1.2, allowing the TGeoVGConverter to work with newer versions. Partially addresses #11271. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR partially addresses #11271, missing for the moment the TGeoVGconverter test",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11790:240,update,updated,240,https://root.cern,https://github.com/root-project/root/pull/11790,1,['update'],['updated']
Deployability,"This follows up on a previous commit 92fbd0db47 with the title:; ```; [RF] Modernize `RooVectorDataStore::RealFullVector` class; ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element; ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12503:1554,release,released,1554,https://root.cern,https://github.com/root-project/root/pull/12503,1,['release'],['released']
Deployability,"This generalization of the RooArgusBG pdf in RooFit allows integration with parameter c (slope parameter) >= 0. Therefor unwanted (and unnecessary) mathematical restrictions are lifted, making ; the pdf and fitting more stable by not reaching a parameter edge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3009:59,integrat,integration,59,https://root.cern,https://github.com/root-project/root/pull/3009,1,['integrat'],['integration']
Deployability,This guarantees valid patch files.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12892:22,patch,patch,22,https://root.cern,https://github.com/root-project/root/pull/12892,1,['patch'],['patch']
Deployability,This happened when we moved the cxxmodules code before the add_subdirectory; which where responsible for filling the variable that contains the generated; contents. With this patch we wait with writing the variable contents to the; file until the variable actually contains the whole modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/470:175,patch,patch,175,https://root.cern,https://github.com/root-project/root/pull/470,1,['patch'],['patch']
Deployability,"This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration); - Enable multi-class classification; - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification; - Add return error codes to `PyMethodBase::Unserialize()` function; - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/303:81,integrat,integration,81,https://root.cern,https://github.com/root-project/root/pull/303,2,['integrat'],['integration']
Deployability,"This header is directly included by TObject.h and directly including; it from some other header doesn't seem to be supported. As C++ modules; with submodule visibility simulate directl including each module header,; we seem to get some errors according to the comments in this header. This patch removes it from the argument list of the; ROOT_GENERATE_DICTIONARY call which prevents it from getting directly; included in the `Core` C++ module. We can also remove it from the header; blacklist after this change. The normal dictionary won't be affected by this. This header is anyway; not supposed to contain TVersionCheck.h but only TObject.h which will; still provide it in the right way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1459:290,patch,patch,290,https://root.cern,https://github.com/root-project/root/pull/1459,1,['patch'],['patch']
Deployability,"This helps when python modules are not in the default library path, e.g. when installed in the default system location for python modules like /usr/lib64/pythonX.X/site-packages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/569:78,install,installed,78,https://root.cern,https://github.com/root-project/root/pull/569,1,['install'],['installed']
Deployability,"This hotfixes the crashes seen in the recent PR builds. However, having to use `std::move` in pyROOT is quite unpythonic and we; should think about an improved interface for creating RooFit datasets; from RDataFrame in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8768:5,hotfix,hotfixes,5,https://root.cern,https://github.com/root-project/root/pull/8768,1,['hotfix'],['hotfixes']
Deployability,"This implements a proof of concept of a new histogram auto binning mode designed to produced mergeable histograms when run in multi-threaded / multi-process mode. The algorithm chooses powers of 2 to chose the boundaries, ranges and number of bins. The idea is described in the following document: https://docs.google.com/document/d/1TEntRbVnRzZRLio8JhND51FTNqqTAvu0ngnhLGneahg/edit?usp=sharing. A method to adjust the final looking of the histogram is also included in the patch. Two multicore tutorials illustrate the usage: mt303_fillHistosAutobin.C and mt301_fillHistos.C .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1227:474,patch,patch,474,https://root.cern,https://github.com/root-project/root/pull/1227,1,['patch'],['patch']
Deployability,"This includes to patches reported at the root forum for compilation of root 5 using gcc 9 and 10. * gcc 9 patchset: https://root-forum.cern.ch/t/root-5-compilation-with-gcc-9/33981; * gcc 10 patchset: https://root-forum.cern.ch/t/root-5-compilation-with-gcc-10-2/43258/3. I know root 5 is now longer maintained, but if any of the admins could shortly have a glance and think about including these, I would be very thankful.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7089:17,patch,patches,17,https://root.cern,https://github.com/root-project/root/pull/7089,3,['patch'],"['patches', 'patchset']"
Deployability,This integrates the work of @mohammaduzair9 on stratified splitting for cross validation. Superseeds PR #2557.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2914:5,integrat,integrates,5,https://root.cern,https://github.com/root-project/root/pull/2914,1,['integrat'],['integrates']
Deployability,"This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3044:228,configurat,configuration,228,https://root.cern,https://github.com/root-project/root/pull/3044,2,['configurat'],['configuration']
Deployability,"This is a backport from llvm revision 278983:; ""PR18417: Increase -ftemplate-depth to the value 1024 recommended; by the C++ standard's Annex B"". Motivation: the current template instantiation depth limit (256) makes; it impossible to move-construct std::tuple's of size equal or greater than 17. Thanks @vgvassilev for pointing me to the right llvm patch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/478:350,patch,patch,350,https://root.cern,https://github.com/root-project/root/pull/478,1,['patch'],['patch']
Deployability,This is a backport of #12025 by @hahnjo and fixes the corresponding test failure in v6-28-00-patches.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12212:93,patch,patches,93,https://root.cern,https://github.com/root-project/root/pull/12212,1,['patch'],['patches']
Deployability,"This is a backport of #2116.; Changes are mostly refactorings that prepare for the last commit, ""Pass number of entries when building friend chains"", which is the actual fix for ROOT-9437. An artificial example running on 342 files of about 2MB each, with 8 cores, BUILD_TYPE=Release, has the following timings:. * current master, 8 cores: ~10s; * with this fix, 8 cores: ~3.5s; * no imt (current master and with the fix): ~1s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2136:276,Release,Release,276,https://root.cern,https://github.com/root-project/root/pull/2136,1,['Release'],['Release']
Deployability,"This is a backport of #7031 to the 6-24-00-patches branch. I cherry-picked two of the three commits.; I left the test suite out, as it finally should go to roottest.git, as far as I understood it. This is basically to get the thing started. cc: @pcanal, @dennisklein",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7794:43,patch,patches,43,https://root.cern,https://github.com/root-project/root/pull/7794,1,['patch'],['patches']
Deployability,"This is a backport of all the RooFit PRs that were merged to `master` edit to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9683; 2. https://github.com/root-project/root/pull/9734. I would have liked to collect more PRs, but the second one is urgently needed to fix a compiler warning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9749:88,patch,patches,88,https://root.cern,https://github.com/root-project/root/pull/9749,1,['patch'],['patches']
Deployability,"This is a backport of all the RooFit PRs that were merged to `master` edit to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9721; 2. https://github.com/root-project/root/pull/9795; 3. https://github.com/root-project/root/pull/9767; 4. https://github.com/root-project/root/pull/9799",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9800:88,patch,patches,88,https://root.cern,https://github.com/root-project/root/pull/9800,1,['patch'],['patches']
Deployability,"This is a backport of all the RooFit PRs that were merged to `master` edit to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9881 (only first commit); 2. https://github.com/root-project/root/pull/9896",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9901:88,patch,patches,88,https://root.cern,https://github.com/root-project/root/pull/9901,1,['patch'],['patches']
Deployability,"This is a backport of all the RooFit PRs that were merged to `master` in the last two weeks to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9478; 2. https://github.com/root-project/root/pull/9504; 3. https://github.com/root-project/root/pull/9458; 4. https://github.com/root-project/root/pull/9553; 5. https://github.com/root-project/root/pull/9447; 6. https://github.com/root-project/root/pull/9552",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9559:105,patch,patches,105,https://root.cern,https://github.com/root-project/root/pull/9559,1,['patch'],['patches']
Deployability,"This is a backport of all the RooFit PRs that were merged to `master` in the last week to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/8784; 2. https://github.com/root-project/root/pull/9177; 3. https://github.com/root-project/root/pull/8595; 4. https://github.com/root-project/root/pull/9444",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9614:100,patch,patches,100,https://root.cern,https://github.com/root-project/root/pull/9614,1,['patch'],['patches']
Deployability,"This is a backport of all the RooFit PRs that were merged to `master` in the last week to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9456; 2. https://github.com/root-project/root/pull/9640; 3. https://github.com/root-project/root/pull/9482; 4. https://github.com/root-project/root/pull/9690; 5. https://github.com/root-project/root/pull/9700; 6. https://github.com/root-project/root/pull/9680; 7. https://github.com/root-project/root/pull/9685; 8. https://github.com/root-project/root/pull/9684",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9710:100,patch,patches,100,https://root.cern,https://github.com/root-project/root/pull/9710,1,['patch'],['patches']
Deployability,"This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10111; 2. https://github.com/root-project/root/pull/10158; 3. https://github.com/root-project/root/pull/10104; 4. https://github.com/root-project/root/pull/10100; 5. https://github.com/root-project/root/pull/10229; 6. https://github.com/root-project/root/pull/10256; 7. https://github.com/root-project/root/pull/10213; 8. https://github.com/root-project/root/pull/10270; 9. https://github.com/root-project/root/pull/10263; 10. https://github.com/root-project/root/pull/10269",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10252:83,patch,patches,83,https://root.cern,https://github.com/root-project/root/pull/10252,1,['patch'],['patches']
Deployability,"This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10293",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10376:83,patch,patches,83,https://root.cern,https://github.com/root-project/root/pull/10376,1,['patch'],['patches']
Deployability,"This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10352; 2. https://github.com/root-project/root/pull/10359; 3. https://github.com/root-project/root/pull/10362",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10367:83,patch,patches,83,https://root.cern,https://github.com/root-project/root/pull/10367,1,['patch'],['patches']
Deployability,"This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10467; 2. https://github.com/root-project/root/pull/10477; 3. https://github.com/root-project/root/pull/10485; 4. https://github.com/root-project/root/pull/10495; 5. https://github.com/root-project/root/pull/10501; 6. https://github.com/root-project/root/pull/10499",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10513:83,patch,patches,83,https://root.cern,https://github.com/root-project/root/pull/10513,1,['patch'],['patches']
Deployability,"This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10516; 2. https://github.com/root-project/root/pull/10525; 3. https://github.com/root-project/root/pull/10550",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10554:83,patch,patches,83,https://root.cern,https://github.com/root-project/root/pull/10554,1,['patch'],['patches']
Deployability,"This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9956; 2. https://github.com/root-project/root/pull/10590; 3. https://github.com/root-project/root/pull/10612",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10613:83,patch,patches,83,https://root.cern,https://github.com/root-project/root/pull/10613,1,['patch'],['patches']
Deployability,"This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9984; 2. https://github.com/root-project/root/pull/9981; 3. https://github.com/root-project/root/pull/10053; 4. https://github.com/root-project/root/pull/10051; 5. https://github.com/root-project/root/pull/9986; 6. https://github.com/root-project/root/pull/10070; 7. https://github.com/root-project/root/pull/10093; 8. https://github.com/root-project/root/pull/10082; 9. https://github.com/root-project/root/pull/10105",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10114:83,patch,patches,83,https://root.cern,https://github.com/root-project/root/pull/10114,1,['patch'],['patches']
Deployability,"This is a backport of all the RooFit PRs that were merged to `master` yesterday to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9716; 2. https://github.com/root-project/root/pull/9727; 3. https://github.com/root-project/root/pull/9715; 4. https://github.com/root-project/root/pull/9720; 5. https://github.com/root-project/root/pull/9723; 6. https://github.com/root-project/root/pull/9717; 7. https://github.com/root-project/root/pull/9728",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9746:93,patch,patches,93,https://root.cern,https://github.com/root-project/root/pull/9746,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant RooFit PRs that were recently merged to master to v6-28-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11940; 2. https://github.com/root-project/root/pull/11941; 3. https://github.com/root-project/root/pull/10210; Except for the commit to RooStats, which is a fixup only relevant to a commit in master; 4. https://github.com/root-project/root/pull/11953; Excluding the one technical commit about the `snapshot()` overload; 5. https://github.com/root-project/root/pull/9539; Only the first four commits that are not about code modernization. Related to https://github.com/root-project/root/issues/11856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11960:98,patch,patches,98,https://root.cern,https://github.com/root-project/root/pull/11960,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant RooFit PRs that were recently merged to master to v6-28-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11969; 2. https://github.com/root-project/root/pull/11962; 3. https://github.com/root-project/root/pull/11970; 4. https://github.com/root-project/root/pull/11966. Related to https://github.com/root-project/root/issues/11856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11979:98,patch,patches,98,https://root.cern,https://github.com/root-project/root/pull/11979,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant RooFit PRs that were recently merged to master to v6-28-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11984; 2. https://github.com/root-project/root/pull/11986; 3. https://github.com/root-project/root/pull/11841; 4. https://github.com/root-project/root/pull/11985; 5. https://github.com/root-project/root/pull/11988. Related to https://github.com/root-project/root/issues/11856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11993:98,patch,patches,98,https://root.cern,https://github.com/root-project/root/pull/11993,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant RooFit PRs that were recently merged to master to v6-28-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11995; 2. https://github.com/root-project/root/pull/11999; 3. https://github.com/root-project/root/pull/12000; 4. https://github.com/root-project/root/pull/12010; 5. https://github.com/root-project/root/pull/12011. Related to https://github.com/root-project/root/issues/11856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12014:98,patch,patches,98,https://root.cern,https://github.com/root-project/root/pull/12014,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant RooFit PRs that were recently merged to master to v6-28-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/12017; 2. https://github.com/root-project/root/pull/12022; Only the commits 1, 2, 5, and 6 that are relevant to fix the problem and testing; 3. https://github.com/root-project/root/pull/12024; 4. https://github.com/root-project/root/pull/12029; 5. https://github.com/root-project/root/pull/12030; 6. https://github.com/root-project/root/pull/12033; 7. https://github.com/root-project/root/pull/12039; 8. https://github.com/root-project/root/pull/12046; 9. https://github.com/root-project/root/pull/12051. Related to https://github.com/root-project/root/issues/11856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12057:98,patch,patches,98,https://root.cern,https://github.com/root-project/root/pull/12057,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant RooFit PRs that were recently merged to master to v6-28-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/12048; 2. https://github.com/root-project/root/pull/12061; 3. https://github.com/root-project/root/pull/12071; Only the first commit that is not a fixup to a recent typo is `master`. Related to https://github.com/root-project/root/issues/11856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12083:98,patch,patches,98,https://root.cern,https://github.com/root-project/root/pull/12083,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant RooFit PRs that were recently merged to master to v6-28-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/12089; 2. https://github.com/root-project/root/pull/12022; Commits 3 and 4 that have not been backported yet, as the next PR in this list depends on that change (everything is backported from that PR now except the last commit); 4. https://github.com/root-project/root/pull/12079; 5. https://github.com/root-project/root/pull/12040. Related to https://github.com/root-project/root/issues/11856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12092:98,patch,patches,98,https://root.cern,https://github.com/root-project/root/pull/12092,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant RooFit PRs that were recently merged to master to v6-28-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/12114; 2. https://github.com/root-project/root/pull/12066; 3. https://github.com/root-project/root/pull/12001. Related to https://github.com/root-project/root/issues/11856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12115:98,patch,patches,98,https://root.cern,https://github.com/root-project/root/pull/12115,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant RooFit PRs that were recently merged to master to v6-28-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/12119; 2. https://github.com/root-project/root/pull/12056; 3. https://github.com/root-project/root/pull/12103. Related to https://github.com/root-project/root/issues/11856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12120:98,patch,patches,98,https://root.cern,https://github.com/root-project/root/pull/12120,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant RooFit PRs that were recently merged to master to v6-28-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/12160; 2. https://github.com/root-project/root/pull/12157; 3. https://github.com/root-project/root/pull/12161; 4. https://github.com/root-project/root/pull/12129. Related to https://github.com/root-project/root/issues/11856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12169:98,patch,patches,98,https://root.cern,https://github.com/root-project/root/pull/12169,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant RooFit PRs that were recently merged to master to v6-28-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/12178; 2. https://github.com/root-project/root/pull/12125; 3. https://github.com/root-project/root/pull/12236; 4. https://github.com/root-project/root/pull/12250; 5. https://github.com/root-project/root/pull/12305; 6. https://github.com/root-project/root/pull/12287. Related to https://github.com/root-project/root/issues/12319.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12321:98,patch,patches,98,https://root.cern,https://github.com/root-project/root/pull/12321,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10553; 2. https://github.com/root-project/root/pull/10627",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10667:108,patch,patches,108,https://root.cern,https://github.com/root-project/root/pull/10667,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10884; 2. https://github.com/root-project/root/pull/10885; 3. https://github.com/root-project/root/pull/10832; 4. https://github.com/root-project/root/pull/10921; 5. https://github.com/root-project/root/pull/10909",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10986:108,patch,patches,108,https://root.cern,https://github.com/root-project/root/pull/10986,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11023; Only the last commit, which has not been backported for the last patch release yet (the rest of PR was backported before the 6.26.04 release); 2. https://github.com/root-project/root/pull/11123; Only the first commit that relates to the batch mode; 3. https://github.com/root-project/root/pull/11162; 4. https://github.com/root-project/root/pull/11129; Only the first two commits that are note just code modernization; 5. https://github.com/root-project/root/pull/11134; 6. https://github.com/root-project/root/pull/11195; 7. https://github.com/root-project/root/pull/11346; 8. https://github.com/root-project/root/pull/11343; Only the first commit that is not code modernization. Furthermore, an initial commit is added to sync the RooLagrangianMorphFunc with the `master` before the first backported commit, in order to make the cherry-picking of backport commits easier. Addresses https://github.com/root-project/root/issues/11059.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11133:108,patch,patches,108,https://root.cern,https://github.com/root-project/root/pull/11133,4,"['patch', 'release']","['patch', 'patches', 'release']"
Deployability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11401; 2. https://github.com/root-project/root/pull/11406; Only the last commit that changes the PDF cloning behavior, also excluding the `testRooSimultaneous` changes in that commit",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11402:108,patch,patches,108,https://root.cern,https://github.com/root-project/root/pull/11402,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11416; excluding the first commit with the code modernization; 2. https://github.com/root-project/root/pull/11417; 3. https://github.com/root-project/root/pull/11419; 4. https://github.com/root-project/root/pull/10842",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11427:108,patch,patches,108,https://root.cern,https://github.com/root-project/root/pull/11427,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11500; Excluding the last commit that only updates the tutorials",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11505:108,patch,patches,108,https://root.cern,https://github.com/root-project/root/pull/11505,2,"['patch', 'update']","['patches', 'updates']"
Deployability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11507; 2. https://github.com/root-project/root/pull/10811; 3. https://github.com/root-project/root/pull/11531; Except for the second commit that fixes something that was introduced in the 6.28 development cycle",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11528:108,patch,patches,108,https://root.cern,https://github.com/root-project/root/pull/11528,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9423; 2. https://github.com/root-project/root/pull/10736; 3. https://github.com/root-project/root/pull/10740; 4. https://github.com/root-project/root/pull/10754; 5. https://github.com/root-project/root/pull/10802",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10803:108,patch,patches,108,https://root.cern,https://github.com/root-project/root/pull/10803,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9912; 2. https://github.com/root-project/root/pull/10989; 3. https://github.com/root-project/root/pull/11018; 4. https://github.com/root-project/root/pull/11023",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11057:108,patch,patches,108,https://root.cern,https://github.com/root-project/root/pull/11057,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to master to v6-26-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10873; 2. https://github.com/root-project/root/pull/11455; Only the third commit that fixes a problem with the `RooBinSamplingPdf`, backporting the full multi-range fit implementation is way too dangerous. Related to https://github.com/root-project/root/issues/11534.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11848:105,patch,patches,105,https://root.cern,https://github.com/root-project/root/pull/11848,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to master to v6-26-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11566; 2. https://github.com/root-project/root/pull/11584; Only the first commit that is not code modernization. Related to https://github.com/root-project/root/issues/11534.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11748:105,patch,patches,105,https://root.cern,https://github.com/root-project/root/pull/11748,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to master to v6-26-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11912; Only the second and third commit about the `RooBinIntegrator`; 2. https://github.com/root-project/root/pull/10574; 3. https://github.com/root-project/root/pull/9542. The final two PRs are backported to resolve the clang warnings that appear in the CI. Related to https://github.com/root-project/root/issues/11534.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11961:105,patch,patches,105,https://root.cern,https://github.com/root-project/root/pull/11961,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to master to v6-26-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/12119; 2. https://github.com/root-project/root/pull/12305; Only the first commit that is not code modernization. Related to https://github.com/root-project/root/issues/11534.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12322:105,patch,patches,105,https://root.cern,https://github.com/root-project/root/pull/12322,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to master to v6-26-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/12696; 2. https://github.com/root-project/root/pull/12707. Related to https://github.com/root-project/root/issues/11534.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12709:105,patch,patches,105,https://root.cern,https://github.com/root-project/root/pull/12709,1,['patch'],['patches']
Deployability,"This is a backport of commit 68509691, fixing bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907). Do you guys plan to release a new patch to the v6.12 series?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3310:130,release,release,130,https://root.cern,https://github.com/root-project/root/pull/3310,2,"['patch', 'release']","['patch', 'release']"
Deployability,This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 0. https://github.com/root-project/root/pull/12459; 1. https://github.com/root-project/root/pull/12518; 2. https://github.com/root-project/root/pull/12556; 3. https://github.com/root-project/root/pull/12578; 4. https://github.com/root-project/root/pull/12577; 5. https://github.com/root-project/root/pull/12595; 6. https://github.com/root-project/root/pull/12608; Only the second commit that does not remove deprecated functionality; 7. https://github.com/root-project/root/pull/12594. Related to https://github.com/root-project/root/issues/12319.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12630:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/12630,1,['patch'],['patches']
Deployability,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `aa270ad60b`) are the ones that are not in `v6-28-00-patches` (as of `44db6e0`). ```txt; 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar; 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma; f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`; b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation; 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf.; 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files.; 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial.; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12723:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/12723,2,['patch'],['patches']
Deployability,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `d6cb771d7f`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 7c88a7414b [RF] Migrate more RooFit functions to `RooFit::OwningPtr<T>`; 5d5e1bcce1 [RF] Fix build due to changed compute() signature; f69a346520 [RF] Update FitParabola test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashConte",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12722:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/12722,3,"['Update', 'patch']","['Update', 'patches']"
Deployability,This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/11942; 2. https://github.com/root-project/root/pull/9539; The final commit with the code modernization (others have already been backported in #11960); 3. https://github.com/root-project/root/pull/11963; 4. https://github.com/root-project/root/pull/12015; 5. https://github.com/root-project/root/pull/12022; Only the last one about throwing the exception in `RooAbsArg::redirectServers (the other commits have been backported already in #12057 and #12092); 6. https://github.com/root-project/root/pull/12180; 7. https://github.com/root-project/root/pull/12223; 8. https://github.com/root-project/root/pull/12232; 9. https://github.com/root-project/root/pull/12219; Except for the first and last commit that relate to the RooFit AD work; 10. https://github.com/root-project/root/pull/12304; 11. https://github.com/root-project/root/pull/12442; Only the first two commits that were not already backported; 12. https://github.com/root-project/root/pull/12447. Related to https://github.com/root-project/root/issues/12319.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/12590,1,['patch'],['patches']
Deployability,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12227; 2. https://github.com/root-project/root/pull/12016; Only the commits 1, 2, 5, 6, 8 that don't change the definition of `RooNumber::infinity()`; 3. https://github.com/root-project/root/pull/12328; 4. https://github.com/root-project/root/pull/12330; 5. https://github.com/root-project/root/pull/12207. Related to https://github.com/root-project/root/issues/12319.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12618:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/12618,1,['patch'],['patches']
Deployability,This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12392; 2. https://github.com/root-project/root/pull/12340; 3. https://github.com/root-project/root/pull/12399; 4. https://github.com/root-project/root/pull/12413; Except for commits 5 and 6 that are unrelated to RooFitHS3; 6. https://github.com/root-project/root/pull/12467; 7. https://github.com/root-project/root/pull/12471; 8. https://github.com/root-project/root/pull/12470; 9. https://github.com/root-project/root/pull/12487; 10. https://github.com/root-project/root/pull/12490; 11. https://github.com/root-project/root/pull/12504. Related to https://github.com/root-project/root/issues/12319.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12620:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/12620,1,['patch'],['patches']
Deployability,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12640; 2. https://github.com/root-project/root/pull/12638; 3. https://github.com/root-project/root/pull/12636; 4. https://github.com/root-project/root/pull/12614; 5. https://github.com/root-project/root/pull/12643; 6. https://github.com/root-project/root/pull/12641; 7. https://github.com/root-project/root/pull/12647; 8. https://github.com/root-project/root/pull/12660; 9. https://github.com/root-project/root/pull/12668. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `4afc9f56bb`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12681:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/12681,4,['patch'],['patches']
Deployability,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12682; 2. https://github.com/root-project/root/pull/12696; 3. https://github.com/root-project/root/pull/12699; 4. https://github.com/root-project/root/pull/12702; 5. https://github.com/root-project/root/pull/12707. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `d6cb771d7f`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 7c88a7414b [RF] Migrate more RooFit functions to `RooFit::OwningPtr<T>`; 5d5e1bcce1 [RF] Fix build due to changed compute() signature; f69a346520 [RF] Update FitParabola test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRea",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12708:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/12708,3,"['Update', 'patch']","['Update', 'patches']"
Deployability,This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12725; 2. https://github.com/root-project/root/pull/12141. Related to https://github.com/root-project/root/issues/12319.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12733:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/12733,1,['patch'],['patches']
Deployability,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12768; Only the first commit that fixes a compiler warning; 2. https://github.com/root-project/root/pull/12809; 3. https://github.com/root-project/root/pull/12835; 4. https://github.com/root-project/root/pull/12741; 5. https://github.com/root-project/root/pull/12880; 6. https://github.com/root-project/root/pull/12891. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of 21f97bd1ee) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt; 21f97bd1ee [RF][HF] Fix memory leaks in HistFactory from RooAbsArg::getComponents; 70535a7426 [RF][HS3] Support a few more pdfs in RooFit HS3; d10b28bfbb [RF] Consistent proxy names in RooGamma; b9cfff2e71 [RF][HF] More efficient creation of combined dataset in HistFactory; 8ca8d848ae [RF][HS3] Necessary tweaks to pass tests also with `rapidyaml` backend; 66615833e5 [RF][HS3] Add IO of external constrains from/to ModelConfig; 2607947ee3 [RF][HF] Add missing LinkDefs for systematics classes in HistFactory; f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; 1b886c3e77 [RF] Improve Copy Constructor of HypoTestResult; 2e4b30b8c2 [RF] Better server redirection in compileForNormSet without attributes; d5ca98077e [RF] New function for server changing without setting attributes; 1f8a1666d1 [RF] Factor out marking compiled args in `NormalizationHelpers`; 7db5be20e9 [RF] Support multiple NLL with BatchMode existing at the same time; 24f1ca4fc1 [RF] Add exception if `RooAbsArg::_dataToken` is corrupted; ef69ad7633 [RF] Refactor BatchMode likelihood creation code; 364f67393d [RF] Disable RooFit multiprocess ProcessTimer test; e7d4ec3a69 [RF] Introduce `ROOFIT_MEMORY_SAFE_INTERFACES` macro; 3fd6057316 [RF] Use `RooFit::OwningPtr<>` also for RooAbsReal::createIntegral(); 8ad",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12905:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/12905,2,['patch'],['patches']
Deployability,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12877; 2. https://github.com/root-project/root/pull/12896; 3. https://github.com/root-project/root/pull/12838; 4. https://github.com/root-project/root/pull/12909; 5. https://github.com/root-project/root/pull/12916; 6. https://github.com/root-project/root/pull/12921; 7. https://github.com/root-project/root/pull/12927; 8. https://github.com/root-project/root/pull/12925; 9. https://github.com/root-project/root/pull/12928; 10. https://github.com/root-project/root/pull/12938; 11. https://github.com/root-project/root/pull/12936; 12. https://github.com/root-project/root/pull/12969; 13. https://github.com/root-project/root/pull/12962; 14. https://github.com/root-project/root/pull/12973; 15. https://github.com/root-project/root/pull/12974. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:; https://github.com/root-project/root/pull/12905. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt; 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson.; a493684a19 [RF] Add Code-Squash AD support for the Hist* classes.; cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD; 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`; f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; cf98956266 [RF] Add exceptions to setter methods for non-existing objects; 1cc5ec46c8 [RF] Forbid resetting RooFormula; b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`; b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test; 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes; 3dcea7036a [RF] Support simultaneous fits in NLL code generation; a470a3d85e [RF] Remove internal `RooFormula` from publi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12971:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/12971,1,['patch'],['patches']
Deployability,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12961; 2. https://github.com/root-project/root/pull/12934; Excluding the 2nd commit that fixes a problem only present in `master`, and excluding the 4th commit that updates the tutorials; 3. https://github.com/root-project/root/pull/12998; Only the first commit that is not related to AD; 4. https://github.com/root-project/root/pull/12987; 5. https://github.com/root-project/root/pull/13020; 6. https://github.com/root-project/root/pull/13025; 7. https://github.com/root-project/root/pull/13033; 8. https://github.com/root-project/root/pull/12970; 9. https://github.com/root-project/root/pull/13043. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:; https://github.com/root-project/root/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt; 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson.; a493684a19 [RF] Add Code-Squash AD support for the Hist* classes.; cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD; 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`; f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; cf98956266 [RF] Add exceptions to setter methods for non-existing objects; 1cc5ec46c8 [RF] Forbid resetting RooFormula; b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`; b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test; 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes; 3dcea7036a [RF] Support simultaneous fits in NLL code generation; a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface; 3d01cd2e8f [RF] Remove deprecated RooAbsString; 059af6d55a [RF] Remove RooAbsRootFinder; bdc19e090e [RF] Get rid of RooSca",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13044:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/13044,3,"['patch', 'update']","['patches', 'updates']"
Deployability,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:; https://github.com/root-project/root/pull/13044. After merging this PR, the following RooFit commits in ROOT `master` (as of 6276954184) are the ones that are not in `v6-28-00-patches` (as of `8c19761`). ```txt; 9b93dbb7d2 [RF] Apply clang-tidy `performance-faster-string-find`; 04fbc4efb3 [RF] Don't have RooFitCuda as dependency for RooFitCore; cf653869f7 [RF] Don't bar xroofit behind `root7` anymore; e5a67bc647 [RF] More type safety and better memory management with CUDA interface; bbeb520a1a [RF] Implement `RooPower` and `RooExpPoly` in RooBatchCompute; 529ba82432 [RF] RAII management of CUDA events and streams; cc3ee9200a [RF] Only allow automatic memory management for CUDA device arrays; 77299a2c34 [RF] Reduce public headers of `roobatchcompute`; 8b0a768f0c [RF] Refactor CUDA code in RooFit; 853e93a23a [RF] Add new `RooSpline` class contributed by Ruggero Turra; a5ebdc7291 [RF] Add documentation to `RooB*Decay` constructors; e5b7ba0d35 [RF] Make plotting of histograms work for all orders of magnitude; 95816f07c5 [RF] Modernize RooStepFunction and RooParametricStepFunction; 49b7c88181 [RF] Apply clang-tidy `readability-redundant-string-cstr`; bb1b313d7a [RF] Apply clang-tidy `modernize-use-bool-literals`; 52f67f84ec [RF] Apply clang-tidy `modernize-deprecated-headers`; 0fdb1e98ea [RF] Apply clang-tidy `readability-container-size-empty`; e7dfbfb1df [RF] Apply clang-format to RooGlobalFunc.cxx; 8462bb48e9 [RF] Apply clang-tidy modernize-use-nullptr; 4999c486de [RF] Use `RooFit::OwningPtr<T>` for RooAbsData member functions; 742d4018ad [RF] Don't store reference to `RooDataSet` in RooNDKeysPdf; 9b98ed181c [RF] Replace ReooRealAnalytic with `createIntegral` plus RooRealBinding; b3acd81280 [RF] Remove `RooIntegratorBinding` from public interface; e11a5e4d8c [RF] Improve `RooNumInt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13295:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/13295,2,['patch'],['patches']
Deployability,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13111; - https://github.com/root-project/root/pull/14176; - https://github.com/root-project/root/pull/14248; - https://github.com/root-project/root/pull/14249; - https://github.com/root-project/root/pull/14251; - https://github.com/root-project/root/pull/14257; - https://github.com/root-project/root/pull/14253; - https://github.com/root-project/root/pull/14265; * at least the first commit that is not applying to new developments after 6.30; - https://github.com/root-project/root/pull/14266; - https://github.com/root-project/root/pull/14236. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; https://github.com/root-project/root/pull/14167,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14252:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/14252,1,['patch'],['patches']
Deployability,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13812; - https://github.com/root-project/root/pull/13784; - https://github.com/root-project/root/pull/13853; - https://github.com/root-project/root/pull/13813. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; *None*,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13870:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/13870,1,['patch'],['patches']
Deployability,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13822; - https://github.com/root-project/root/pull/14058; - https://github.com/root-project/root/pull/14289. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; https://github.com/root-project/root/pull/14252,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14407:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/14407,1,['patch'],['patches']
Deployability,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13879; - https://github.com/root-project/root/pull/13881; - https://github.com/root-project/root/pull/13883; - https://github.com/root-project/root/pull/12390; - https://github.com/root-project/root/pull/7539; - https://github.com/root-project/root/pull/13894; - https://github.com/root-project/root/pull/7993; - https://github.com/root-project/root/pull/5361; - https://github.com/root-project/root/pull/7687. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; https://github.com/root-project/root/pull/13870,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13891:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/13891,1,['patch'],['patches']
Deployability,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13890; - https://github.com/root-project/root/pull/13896. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; https://github.com/root-project/root/pull/13891,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13909:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/13909,1,['patch'],['patches']
Deployability,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13911; - https://github.com/root-project/root/pull/13914; - https://github.com/root-project/root/pull/13109; - https://github.com/root-project/root/pull/13905; - https://github.com/root-project/root/pull/13925; - https://github.com/root-project/root/pull/13912; - https://github.com/root-project/root/pull/13915. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; https://github.com/root-project/root/pull/13909,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13930:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/13930,1,['patch'],['patches']
Deployability,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13918; - https://github.com/root-project/root/pull/13931; - https://github.com/root-project/root/pull/13929. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; https://github.com/root-project/root/pull/13930,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13940:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/13940,1,['patch'],['patches']
Deployability,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/14021; - https://github.com/root-project/root/pull/14043; - https://github.com/root-project/root/pull/14044; - https://github.com/root-project/root/pull/13373 (as a dependency of the next PR on Minuit 2); - https://github.com/root-project/root/pull/14026; - https://github.com/root-project/root/pull/13863; - https://github.com/root-project/root/pull/14100. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; https://github.com/root-project/root/pull/13940,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14047:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/14047,1,['patch'],['patches']
Deployability,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/14164; - https://github.com/root-project/root/pull/14185; - https://github.com/root-project/root/pull/14174. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; https://github.com/root-project/root/pull/14047,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14167:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/14167,1,['patch'],['patches']
Deployability,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/14759; - https://github.com/root-project/root/pull/14762; - https://github.com/root-project/root/pull/14814. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; https://github.com/root-project/root/pull/14407,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14768:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/14768,1,['patch'],['patches']
Deployability,This is a backport of the release notes updates contained in #7680 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7689:26,release,release,26,https://root.cern,https://github.com/root-project/root/pull/7689,2,"['release', 'update']","['release', 'updates']"
Deployability,"This is a cherry pick of the `loader.py` in cppyy-backend version clingwrapper-1.7.2, which has the new treatment of `CLING_STANDARD_PCH` and its setting to `'none'` to prevent the PCH check by Cppyy. It should fix the new test failures that appeared last night in the experimental PyROOT builds. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/76/. A complete update will come for the three packages of Cppyy once the functionality of this PR:; https://github.com/root-project/root/pull/3579; is merged into `TCling`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3581:363,update,update,363,https://root.cern,https://github.com/root-project/root/pull/3581,1,['update'],['update']
Deployability,"This is a collection of commits that are preparing the update of category functions. Since this is a very heavy change, it's better to first merge the preparation works here. So, here we have:; - Improvements of docs, especially to group legacy interfaces into dedicated legacy groups; - Cleanups, such as removing unnecessary overrides, dead files; - Introduce small feature to batch data storage such that batch data from function calls like `getVal()` doesn't get overwritten by a subsequent call to `getLogVal()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5213:55,update,update,55,https://root.cern,https://github.com/root-project/root/pull/5213,1,['update'],['update']
Deployability,"This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make; it possible to use also variable clones as integration variables, but it; failed to cover the case where the integration variable is only an; indirect server of the integrated function. This was because; `valueClients()` used for the graph traversal was still called on the; clone, not the variable in the actual computation graph of the; integrated function. This commit fixes this by passing the correct variable to; `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the; RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597; * https://github.com/root-project/root/pull/11619; * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,; using the RooWorkspace factory. This reduces the time of increamental builds; where one changes the RooFit library, because the RooFitCore tests don't need; to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11783:189,integrat,integration,189,https://root.cern,https://github.com/root-project/root/pull/11783,4,['integrat'],"['integrated', 'integration']"
Deployability,"This is a fix for ROOT-7121. If a cache is updated in RooVectorDataStore and the cache has more than 1000 elements to be updated, an array on the stack will overrun and smash the stack. roofit will therefore crash. Solution: RooVectorDataStore uses a std::vector instead of an array[1000] to hold the pointers to the cache elements. Comments on the speed of the fix:; Using a std::vector placed on the stack (mimicking the original implementation), the fits would get slower. Therefore I added the vector as a member of RooVectorDataStore. This saves the time of constantly having to reallocate the vector. I tested with my (private) workspace: The crash is fixed. Unfortunately, I cannot provide this workspace.; To give a more meaningful test for you guys, I ran all the roofit/roostats tutorials and diffed the logs to check if roofit gives the same results. The diffs are attached. Apart from out-of-order execution and time measurements, there is no difference.; From the time measurements you can also see that the fixed version is not slower. [tutorials_roofit.diff.txt](https://github.com/root-mirror/root/files/56528/tutorials_roofit.diff.txt); [tutorials_roostats.diff.txt](https://github.com/root-mirror/root/files/56529/tutorials_roostats.diff.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/115:43,update,updated,43,https://root.cern,https://github.com/root-project/root/pull/115,2,['update'],['updated']
Deployability,"This is a fix for ROOT-7121. If a cache is updated in RooVectorDataStore and the cache has more than 1000 elements to be updated, an array on the stack will overrun and smash the stack. roofit will therefore crash. Solution: RooVectorDataStore uses a std::vector instead of an array[1000] to hold the pointers to the cache elements. Comments on the speed of the fix:; Using a std::vector placed on the stack (mimicking the original implementation), the fits would get slower. Therefore I added the vector as a member of RooVectorDataStore. This saves the time of constantly having to reallocate the vector. I tested with my (private) workspace: The crash is fixed. Unfortunately, I cannot provide this workspace.; To give a more meaningful test for you guys, I ran all the roofit/roostats tutorials and diffed the logs to check if roofit gives the same results. The diffs are attached. Apart from out-of-order execution and time measurements, there is no difference.; From the time measurements you can also see that the fixed version is not slower. [tutorials_roofit.diff.txt](https://github.com/root-mirror/root/files/56546/tutorials_roofit.diff.txt); [tutorials_roostats.diff.txt](https://github.com/root-mirror/root/files/56547/tutorials_roostats.diff.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/116:43,update,updated,43,https://root.cern,https://github.com/root-project/root/pull/116,2,['update'],['updated']
Deployability,"This is a follow-up on 8c9c1a3fbe3a1c5704635f8941abeb9596104c77. At the moment, the derived class StreamerInfo contains the base class version number :(; This means we need to update the derived class version number when the base class number increases ... This solves the problem seen at: https://root-forum.cern.ch/t/problem-in-opening-past-rootfile-tclonesarray-with-th1s-with-root-v6-16-and-ubuntu18/33293/1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3619:176,update,update,176,https://root.cern,https://github.com/root-project/root/pull/3619,3,['update'],['update']
Deployability,"This is a followup to commit 2f7936a, using range-based loops or at; least the `begin()` and `end()` member functions for RooLinkedLists; everywhere in RooFit/RooStats. This is not an important update but just a small technical change, which I found in some of my older development branches but forgot to open a PR so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9177:194,update,update,194,https://root.cern,https://github.com/root-project/root/pull/9177,1,['update'],['update']
Deployability,"This is a followup to commit 47c250898f3. The new algorithm to figure out the servers of a RooRealIntegral could get very expensive for large computation graphs, as seen with the ATLAS Higgs combinaiton. The problem was that there was a loop over an arguments clients for each argument in the computation graph. In this commit, loop is replaced by another loop over the computation graph in which one iterates only over the servers of the arguments that depend on the integration variables. I think this logic is even more intuitive to understand as well. I learned also that iterating over clients is never a good idea, because while the number of servers is well defined, there can be arbitrary many clients, making the performance very unpredictable. It was verified with flamegraphs that the performance of the likelihood creation for the ATLAS Higgs combinaiton model is now again identical to the state before commit 47c250898f3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11619:468,integrat,integration,468,https://root.cern,https://github.com/root-project/root/pull/11619,1,['integrat'],['integration']
Deployability,This is a forward port of the 6.24 release notes update. Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>; (cherry picked from commit 0d49f6f399cb9ae95b0b3471f4ed918de723baef). [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7459:35,release,release,35,https://root.cern,https://github.com/root-project/root/pull/7459,2,"['release', 'update']","['release', 'update']"
Deployability,"This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,; dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:; ```; CMake Error at cmake_install.cmake:132 (file):; file INSTALL cannot find; ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"".; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3094:119,patch,patch,119,https://root.cern,https://github.com/root-project/root/pull/3094,3,"['INSTALL', 'install', 'patch']","['INSTALL', 'install', 'patch']"
Deployability,This is a minor clarification in the README installation instructions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8119:44,install,installation,44,https://root.cern,https://github.com/root-project/root/pull/8119,1,['install'],['installation']
Deployability,"This is a port of the cppyy patch which enables accessing lambdas in PyROOT. The patch: https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/lambda.diff. Reproducer:; ```python; import cppyy; cppyy.cppdef(""auto l = []{cout << 100 << endl;};""); cppyy.gbl.l(); ```; Related Jira issue: https://sft.its.cern.ch/jira/browse/ROOT-7704. The PR is for now mainly meant as a proof of concept and to identify the missing feature in ROOT meta to get this working. Edit:. Here an updated link to the diff:. https://bitbucket.org/wlav/cppyy-backend/src/clingwrapper-1.12.0/cling/patches/lambda.diff",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5541:28,patch,patch,28,https://root.cern,https://github.com/root-project/root/pull/5541,5,"['patch', 'update']","['patch', 'patches', 'updated']"
Deployability,This is a preparation because we want to ship module configuration; files in the future in the cling resource directory (Clang VFS overlay; files and modulemaps). This means that we will need to know this path; in a few other places (e.g. where we specify the -ivfsoverlayPATH; arguments and potential -fmodule-map-file=PATH args). It also makes this giant function a bit easier on the eyes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/922:53,configurat,configuration,53,https://root.cern,https://github.com/root-project/root/pull/922,1,['configurat'],['configuration']
Deployability,"This is a proof of concept for a part of a TMVA GUI replacement. The basic ideas:; - Make it modular, no monolithic tool; - Provide tight integration with RDataFrame. I copy below the tutorial that I've added in the PR. Known issues:; - The automatic range for the histos is very weird.; - Naming of the class is not optimal. ```cpp; void tmva005_RVariablePlotter(); // Initialize ROOT dataframes from signal and background datasets; const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";; ROOT::RDataFrame sig1(""TreeS"", filename);; ROOT::RDataFrame bkg1(""TreeB"", filename);. // Apply transformations on the datasets to be included in the study; auto transform = [](auto df) { return df.Define(""var5"", ""var1 * var2""); };; auto sig2 = transform(sig1);; auto bkg2 = transform(bkg1);; auto sig3 = sig2.Filter(""var1 > 0"");. // Create a variable plotter object giving the dataframes and the class labels.; RVariablePlotter plotter({sig2, bkg2, sig3},; {""Signal"", ""Background"", ""Signal (var1 > 0)""});. // Create a canvas with four pads for plotting; auto c = new TCanvas("""", """", 1200, 800);; c->Divide(3, 2);. // Place plots on the pads of the canvas; const std::vector<std::string> variables = {""var1"", ""var2"", ""var3"", ""var4"", ""var5""};; for (unsigned int i = 0; i < variables.size(); i++) {; c->cd(i + 1);; plotter.Draw(variables[i]);; }; c->cd(6);; plotter.DrawLegend();; c->DrawClone();; }; ```. ![x](https://user-images.githubusercontent.com/6951222/63058987-7b33d880-beee-11e9-974d-264d06ea0869.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4211:138,integrat,integration,138,https://root.cern,https://github.com/root-project/root/pull/4211,1,['integrat'],['integration']
Deployability,"This is a proposal for an update of the Python-related documentation of RDataFrame. The first commit just moves the Python-related docs from `RDataFrame.cxx` to `_rdataframe.py` (in the `_pythonization` folder), so that it is shown in the PyROOT box. The second commit does a bit of rewording / reordering of what was there; it also removes the part about `AsRNode` (to be discussed). The third commit adds a new subsection about the pythonizations of `Histo1D`, etc. to accept a tuple for the model argument. EDIT: to be discussed too what to do with the section ""Distributed execution in Python"", I think it deserves to be outside of the PyROOT box, but perhaps we could rename it to just ""Distributed execution"". EDIT2: The doxygen entry for `MakeNumpyDataFrame` comes from the function with that name that implements the pythonization. If we don't want it to appear in the reference guide with that name, we could rename it to e.g. `MakeNumpyDataFrameImpl`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9611:26,update,update,26,https://root.cern,https://github.com/root-project/root/pull/9611,1,['update'],['update']
Deployability,This is a pull request based on the patch in https://sft.its.cern.ch/jira/browse/ROOT-5494. Fixes compilation errors and warnings in the THDFS module.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/89:36,patch,patch,36,https://root.cern,https://github.com/root-project/root/pull/89,1,['patch'],['patch']
Deployability,"This is a pull request based on the patch in https://sft.its.cern.ch/jira/browse/ROOT-7541. The public (installed) header TXSocket.h #includes the private (not installed) header XrdProofConn.h. This means it can not be used in compilations:. g++ -I/usr/include/root -x c++ - <<< '#include ""TXSocket.h""'; In file included from <stdin>:1:0:; /usr/include/root/TXSocket.h:47:26: fatal error: XrdProofConn.h: No such file or directory; compilation terminated. A possible fix is provided in the attached patch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/88:36,patch,patch,36,https://root.cern,https://github.com/root-project/root/pull/88,4,"['install', 'patch']","['installed', 'patch']"
Deployability,"This is a pull request based on the patches in https://sft.its.cern.ch/jira/browse/ROOT-7457. There are two problem with the code. Looking at a hexdump of a Type 1 font:. ```; 00000000 80 01 fb 15 00 00 25 21 50 53 2d 41 64 6f 62 65 |......%!PS-Adobe|; 00000010 46 6f 6e 74 2d 31 2e 30 3a 20 53 74 61 6e 64 61 |Font-1.0: Standa|; [ ... ]; 00008390 30 30 30 30 30 30 30 30 30 30 30 30 30 30 0d 63 |00000000000000.c|; 000083a0 6c 65 61 72 74 6f 6d 61 72 6b 0a 80 03 |leartomark...|; ```. The code currently reads beyond the 80 03 at the end of the file by trying to determing the length of the following block - but an end of file block does not have a length, the file ends right after the end of file block tag 08 03. The length is in little endian format - as can be seen in the beginning of the file. The ascii block tag 80 01 is followed by fb 15 00 00 which is little endian for 000015fb. So it is big endian architectures that needs to do a byte swap, not little endian ones as in the current code. The first attached patch addresses these issues. The second patch implements returning the fontname for Type 1 embedding.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/90:36,patch,patches,36,https://root.cern,https://github.com/root-project/root/pull/90,3,['patch'],"['patch', 'patches']"
Deployability,"This is a request for backport of https://github.com/root-project/root/pull/7035; to 6-22 patches because of this ClassDef change:; ` ClassDef(TF1, 11) // The Parametric 1-D function` (previous was 10); which we are checking in this test:; https://github.com/cms-sw/cmssw/blob/master/DQMServices/Components/test/testSchemaEvolution.cpp#L44; and should have one or the other version, and we better use this fix in 6-22 anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7193:90,patch,patches,90,https://root.cern,https://github.com/root-project/root/pull/7193,1,['patch'],['patches']
Deployability,"This is a specialization of iterator::next for vector<bool> that always returns a nullptr and should never be used.; IIUC, this code only exists to avoid compilation errors when compiling I/O code for `vector<bool>`. With this patch we error out rather than silently returning a nullptr.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6891:227,patch,patch,227,https://root.cern,https://github.com/root-project/root/pull/6891,1,['patch'],['patch']
Deployability,This is a testing PR to unveil all other possible remaining time bombs; in TMVA that blow off once some requirements are installed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15306:121,install,installed,121,https://root.cern,https://github.com/root-project/root/pull/15306,1,['install'],['installed']
Deployability,"This is a updated pull request from #59 The same experiments have been run and performance results are shown here:. | Algorithm | compression(write) | decompression(read) | Compressed File Size |; | --- | --- | --- | --- |; | zlib | 11.74 MB/s | 131.06 MB/s | 181 MB |; | lzma | 0.86 MB/s | 17.36 MB/s | 157 MB |; | lz4 | 5.22 MB/s | 143.81 MB/s | 221 MB |. The following performance is from the root file @pcanal's ticket (https://root.cern.ch/files/CMS_7250E9A5-682D-DF11-8701-002618943934.root). The file is 1.9 GB large, and I tried to decompressed it and it seems its original size is 6.4 GB. The following compression/decompression speeds are calculated by dividing 6.4 GB by the time each test run. @bbockelm , we could discuss implementation details of my tests tomorrow. . | Algorithm | compression(write) | decompression(read) | Compressed File Size |; | --- | --- | --- | --- |; | zlib | 15.83 MB/s | 63.23 MB/s | 1.6 GB |; | lzma | 1.28 MB/s | 22.62 MB/s | 1.2 GB |; | lz4 | 8.32 MB/s | 66.53 MB/s | 1.8 GB |",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/81:10,update,updated,10,https://root.cern,https://github.com/root-project/root/pull/81,1,['update'],['updated']
Deployability,"This is a very early draft for caching `RNTuple`s. The goal is to save only the portions (clusters) of the original RNTuple that are actually read during an analysis to a new RNTuple . In this draft it is shown an attempt at exercising the part where the compressed clusters are saved during the IO pipeline already implemented in RClusterPool. To this end, an `RPageSink` is created at the beginning of the pipeline with the same header as the RNTuple being read. After the compressed cluster is retrieved in memory, its columns and pages are traversed and saved to the cached RNTuple. For now this feature can be reproduced with a very limited example, divided in three pieces; ### 1. Write an RNTuple; ```cpp; void write_ntuple(); {; auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");. std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleWriter::Recreate(std::move(model), ntuplename, filename);. constexpr int nentries = 10;; for (int i = 0; i < nentries; i++) {; *myintfield = i;; *myintfieldsquared = i*i;; ntuple->Fill();; // Create a cluster every 5 entries; if (i == 4 || i == 9) ntuple->CommitCluster();; }; }; ```; ### 2. Read the RNTuple (this will create a `cachedntuple.root` file); ```cpp; void read_ntuple(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleReader::Open(ntuplename, filename);. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; }; }; ```; ### 3. Print info of the cached RNTuple; ```cpp; void read_cache(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""cachedntuple.root""};. auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");; auto ntuple = RNTupleReader::Open(std::move(model), ntuplename, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8329:299,pipeline,pipeline,299,https://root.cern,https://github.com/root-project/root/pull/8329,2,['pipeline'],['pipeline']
Deployability,"This is a workaround for https://bugs.python.org/issue21591 which; affect Python 2 versions before 2.7.9. This includes Python 2.7.5; which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:; ```; + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1; Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7; Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ...; SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198); error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install); ```. ### test1.py. This is a minimal reproducer of the existing code:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()); print(locals()['b']); return inner(); test(); ```; This produces the expected output with Python 3:; ```; $ python3 test1.py ; 123; 456; ```; But when using Python 2 it reproduces the error from the root build:; ```; $ python2 test1.py ; File ""test1.py"", line 5; exec('print(a); b = 456', glob, locals()); SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function; ```. ### test2.py . If the Python 2 syntax is used for the exec command:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; Then Python 3 fails as expected since this syntax is not valid Pathon 3:; ```; $ python3 test2.py ; Traceback (most recent call last):; File ""test2.py"", line 8, in <module>; test(); File ""test2.py"", line 7, in test; return inner(); File ""test2.py"", line 5, in inner; exec('print(a); b = 456') in glob, locals(); File ""<string>"", line 1, in <module>; NameError: name 'a' is not defined; `",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5960:766,install,install,766,https://root.cern,https://github.com/root-project/root/pull/5960,1,['install'],['install']
Deployability,"This is a workaround until we decide how to handle builtin externals; that have headers used by ROOT at runtime from the build directory.; If ROOT is installed, or if Vc/VecCore are external, no workaround is; needed, as ROOT finds the headers at runtime without problems.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/865:150,install,installed,150,https://root.cern,https://github.com/root-project/root/pull/865,1,['install'],['installed']
Deployability,"This is achieved by parallelizing the weight update process. This PR does not fix the code quality issues mentioned by @Axel-Naumann or the warnings, since these issues are handled by #2321",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2386:45,update,update,45,https://root.cern,https://github.com/root-project/root/pull/2386,1,['update'],['update']
Deployability,This is actually from @pzhristov and it's needed to be able to build with ALICE patched versions of ROOT which we tag with `<official-root-tag>-alice<X>` where `<X>` is a number. Any better idea?,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5394:80,patch,patched,80,https://root.cern,https://github.com/root-project/root/pull/5394,1,['patch'],['patched']
Deployability,"This is an adaptation of commit 6627da727b88ef70b74b7d87f274e0a21a9cea45 Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK. # This Pull request:; Unfortunately the directory structure of our llvm changed, and it was not possible to cherry-pick. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #13698",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13722:383,update,updated,383,https://root.cern,https://github.com/root-project/root/pull/13722,1,['update'],['updated']
Deployability,"This is an alternative approach to solve the problem of colliding LLVM symbols, if other libraries bring in their own LLVM.; The original approach was to force other LLVM libraries to be compiled with -fvisibility=hidden or being opened with dlopen after TROOT::InitInterpreter(). This patch solves the issue on the ROOT side, which seems to me the much cleaner approach because we do not pose any limitations on 3rd party libraries. I tried it locally and it works for me. Marked as ""Work in Progress"", since this might need some more thought, in particular for other OS, and for old glibc versions that do not support RTLD_DEEPBIND.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668:286,patch,patch,286,https://root.cern,https://github.com/root-project/root/pull/4668,1,['patch'],['patch']
Deployability,"This is an alternative fix vs. #3360 mentioned on Mattermost; this renames `root/ROOT/RConfig.h` to `root/ROOT/RConfig.hxx` so that on case insensitive filesystems `root/RConfig.h` doesn't end up including itself if a user has the base directory ROOT is installed in before the `root` include in the include path. A file `root/ROOT/RConfig.h` is provided that also points at `root/ROOT/RConfig.hxx` for backward compatibility, and it prints a removal message. Since including `ROOT/RConfig.h` is probably quite rare, this could be dropped. Or it could avoid printing a message because it does no harm. (Even `RConfig.h` probably tends to be included mostly by ROOT). If most/all other includes are `.h`, this might be better for consistency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3361:254,install,installed,254,https://root.cern,https://github.com/root-project/root/pull/3361,1,['install'],['installed']
Deployability,This is an attempt to fix https://github.com/root-project/root/issues/16774 once the next release is created.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16775:90,release,release,90,https://root.cern,https://github.com/root-project/root/pull/16775,1,['release'],['release']
Deployability,"This is an overhaul of the optimize baskets algorithm, primarily done by Ilija Vukotic and extended by David Smith. Goal of this algorithm is to minimize overall memory size when writing and number of baskets in a cluster. Since this work predates ROOT moving to GitHub, it appears the patches primarily are floating around in various people's inbox. This is my attempt to ""capture"" the knowledge and ideas, even if we don't decide to go this direction. @pcanal @smithdh",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/657:286,patch,patches,286,https://root.cern,https://github.com/root-project/root/pull/657,1,['patch'],['patches']
Deployability,This is an update of https://github.com/root-project/root/pull/134 to work compile on MacOS and rename TSigHandling into TSignalManager. This is a work in progress as the new TSignalManager no longer calls TSystem::StackTrace but is also only implementing support for unix systems. @zzxuanyuan Could you update the code to support at least MacOS (and attempt to support Windows)?,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1053:11,update,update,11,https://root.cern,https://github.com/root-project/root/pull/1053,2,['update'],['update']
Deployability,This is an update to #5798 which had to be reverted due to its incompatibility with CMake 3.12 and below. . @vgvassilev @bellenot,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5903:11,update,update,11,https://root.cern,https://github.com/root-project/root/pull/5903,1,['update'],['update']
Deployability,"This is an update to PR #40 that includes:; - a rebase with all CMA-ES commits at the tip of master (as of 04/17/2017); - a set of small fixes as requested by @vgvassilev . As a reminder, this PR fetches, builds and wraps https://github.com/beniz/libcmaes/ with ROOT. This PR builds ROOT with CMA-ES support and I've been able to run some of the tests, indicating that it is working fine. **Issues**; However, some caveats remain, on which help is required, at the moment. - [ ] `build/include/libcmaes/cmaes.h` and `build/include/Eigen` are not properly passed to the compiler at build time. I cannot find how to do it properly. At the moment I am using symlinks as a temporary hack (see how to build below). - [ ] To access the inner option of the CMA-ES Minimizer, I was using code similar to; ```C++; ROOT::Math::IOptions &opts = ROOT::Math::MinimizerOptions::Default(fitter);; opts.SetIntValue(""lambda"",lambda);; ```; Code above now appears to fail with errors such as:; ```; root [0] .L tutorials/fit/cmaesFitBench.C++g; Info in <TUnixSystem::ACLiC>: creating shared library /home/beniz/research/siminole/dev/tmp/root/build/./tutorials/fit/cmaesFitBench_C.so; In file included from input_line_11:9:; ././tutorials/fit/cmaesFitBench.C:58:16: error: no type named 'IOptions' in namespace 'ROOT::Math'; ROOT::Math::IOptions *opts = ROOT::Math::MinimizerOptions::Default(fitter);; ~~~~~~~~~~~~^; ././tutorials/fit/cmaesFitBench.C:58:45: error: no member named 'MinimizerOptions' in namespace 'ROOT::Math'; ROOT::Math::IOptions *opts = ROOT::Math::MinimizerOptions::Default(fitter);; ~~~~~~~~~~~~^; Error in <ACLiC>: Dictionary generation failed!; ```; Help is needed to fix the above. **How to build**; ```; cd build; cmake ../ -Dminuit2=on -Dtesting=on -Dlibcmaes=on; make; ```; The build will fail because of the header issue mentioned above, so do:; ```; cd include; ln -s eigen3/Eigen .; ln -s eigen3/unsupported .; cd ..; make; ```; You can then use the newly built ROOT and test that CMA-ES is",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/507:11,update,update,11,https://root.cern,https://github.com/root-project/root/pull/507,1,['update'],['update']
Deployability,"This is an updated PR of #507 that is an update of #40. . As a reminder, this PR integrates a new minimizer in ROOT, CMA-ES see https://github.com/beniz/libcmaes/ . It rebases the new commits from @beniz to the current master and fixes the Eigen configuration issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7044:11,update,updated,11,https://root.cern,https://github.com/root-project/root/pull/7044,4,"['configurat', 'integrat', 'update']","['configuration', 'integrates', 'update', 'updated']"
Deployability,"This is applying most of the suggestions from the CMSSW clang-tidy configuration:; https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13953:67,configurat,configuration,67,https://root.cern,https://github.com/root-project/root/pull/13953,2,['configurat'],['configuration']
Deployability,"This is applying most of the suggestions from the CMSSW clang-tidy configuration:; https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`. **Note:** the trivial `nullptr` changes are in a separate commit for easier reviewing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13988:67,configurat,configuration,67,https://root.cern,https://github.com/root-project/root/pull/13988,1,['configurat'],['configuration']
Deployability,This is causing `hadd` to ignore the compression options when merging RNTuples. We didn't catch this bug because the unit tests were bypassing TFileMerger and calling directly into RNTupleMerger. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16700:247,update,updated,247,https://root.cern,https://github.com/root-project/root/pull/16700,1,['update'],['updated']
Deployability,This is currently the only tutorial calling `RCanvas::SaveAs()` and it fails very often (more than 90% of the time) on fedora38 and fedora39 since the last update of chromium.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14750:156,update,update,156,https://root.cern,https://github.com/root-project/root/pull/14750,1,['update'],['update']
Deployability,"This is done because the manual memory management in the `rs101_limitexample` tutorial deleted the object in the wrong way. For example, it deleted the workspace first, and then the `lrinterval` object that pointed to the PDF stored in the workspace. This caused crashes in configurations that are sentitive to the resulting dangling pointers, like in the new BatchMode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11834:274,configurat,configurations,274,https://root.cern,https://github.com/root-project/root/pull/11834,1,['configurat'],['configurations']
Deployability,"This is done for consistency with the other backports.; The old header RStringView.h is left for backwards compatibility, and it simply includes ROOT/RStringView.hxx. Due to our cmake rules this change requires a removal of $ROOTSYS/core; (or anyway a regeneration of the cmake rules for it) in build; directories used for incremental builds. I think of this PR as a ""nice to have"", and I see no downsides, but feel free to close it if you are against such a change. @vgvassilev I did not know how to update `build/unix/module.modulemap` so I left it as is, let me know if it requires changes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1635:501,update,update,501,https://root.cern,https://github.com/root-project/root/pull/1635,1,['update'],['update']
Deployability,"This is done make the life of the developer easier when passing `nullptr` to the RooFit message logger. After all, just `nullptr` is much less verbose than the modern C++ code that had to be used so far (`static_cast<TObject*>(nullptr)`). It also often confused new contributors why `nullptr` could not be passed directly. All existing code was updated to not do the explicit casting to `TObject*` anymore. With this, we also avoid a lot of C-style casts in RooFit code. More info in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10546:345,update,updated,345,https://root.cern,https://github.com/root-project/root/pull/10546,1,['update'],['updated']
Deployability,"This is done to avoid this compiler warning that I get when compiling; ROOT with gcc:. ```; core/base/inc/TStorage.h:131:37: warning: declaration of ‘static void TStorage::UpdateIsOnHeap(const volatile UInt_t&, volatile UInt_t&)’ with attribute ‘noinline’ follows inline declaration [-Wattributes]; 131 | R__NEVER_INLINE void TStorage::UpdateIsOnHeap(volatile const UInt_t &uniqueID, volatile UInt_t &bits) {; | ^~~~~~~~; core/base/inc/TStorage.h:91:20: note: previous declaration of ‘static void TStorage::UpdateIsOnHeap(const volatile UInt_t&, volatile UInt_t&)’ here; 91 | static void UpdateIsOnHeap(volatile const UInt_t &uniqueID, volatile UInt_t &bits);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10500:172,Update,UpdateIsOnHeap,172,https://root.cern,https://github.com/root-project/root/pull/10500,4,['Update'],['UpdateIsOnHeap']
Deployability,This is final 7.5.0 release.; Branch 7.5 will be used as base for ROOT 6.30,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13810:20,release,release,20,https://root.cern,https://github.com/root-project/root/pull/13810,1,['release'],['release']
Deployability,"This is first attempt to provide support of custom classes in web-based canvas; For now one has to register list of such classes and provide JavaScript code where painters are implemented. . Similar approach can be implemented in the future for ROOT7 RCanvas.; Probably, such custom JS code can be ""embed"" directly into C++ code making maintenance much easier. Update JSROOT with many improvements for TGeo monitoring",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4094:361,Update,Update,361,https://root.cern,https://github.com/root-project/root/pull/4094,1,['Update'],['Update']
Deployability,"This is first step to make Web GUI code running in multiple threads.; There are many threads introduced and many communication patterns are supported. 1. Provide special thread, which handle all http requests of THttpServer.; This thread serves JavaScript/HTML files and redirects websocket requests to recipients.; Try to reduce access to global ROOT structures from that thread - only list of classes for the moment is used. Potentially many THttpServer instances with such thread can run fully independent. 2. Let run websocket handlers (THttpWSHandler) in separate threads. ; Requires correct locking of shared resources. 3. Support special threads for sending data via websocket from server to clients. ; When many clients are connected to the same TWebWindow, slowest client can ; break down performance. With use of such specialized thread problem can be solved. 4. Implement all necessary locks and protections to use many TWebWindows in different user threads. ; Provide TWebWindow::Run(double) method, which allows to run window code in any user thread. . Introduce tutorials/v7/draw_mt.cxx macro, which shows how three RCanvas instances can run; in three independent thread and regularly updated. Of course, default behavior should work - all functionality runs in main thread. ; Means THttpServer requests processing, websockets processing, RCanvas handling - ; everything runs in main application thread. Simple, but not scalable. This is very preliminary code , I still plan to change/extend some API.; Any comments comments are welcome",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2487:1199,update,updated,1199,https://root.cern,https://github.com/root-project/root/pull/2487,1,['update'],['updated']
Deployability,This is in prepare for the upcoming llvm upgrade. The future orc jit compile; layer needs a std::shared_ptr<llvm::Module>. The current design passes a; llvm::Module* around and any conversions to a shared_ptr cause the; destruction of the llvm::Module which is a long-lived object in cling.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1047:41,upgrade,upgrade,41,https://root.cern,https://github.com/root-project/root/pull/1047,1,['upgrade'],['upgrade']
Deployability,"This is in reference to this forum post - https://root-forum.cern.ch/t/feature-request-make-uninstall/32663. This is but a naive implementation of make uninstall (https://gitlab.kitware.com/cmake/community/wikis/FAQ#can-i-do-make-uninstall-with-cmake). This feature does have some issues.. quoting from the forum post - ""One of the problems could be the removal of files that were installed independently of ROOT. """,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3405:381,install,installed,381,https://root.cern,https://github.com/root-project/root/pull/3405,1,['install'],['installed']
Deployability,This is just a cherry-pick of the Davix update from #2829. @amadio I'm not sure what you meant by dropping the commit. So I just opened another branch with only this one commit instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2833:40,update,update,40,https://root.cern,https://github.com/root-project/root/pull/2833,1,['update'],['update']
Deployability,This is just to align the release notes file with the master branch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12135:26,release,release,26,https://root.cern,https://github.com/root-project/root/pull/12135,1,['release'],['release']
Deployability,"This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2829:113,update,update,113,https://root.cern,https://github.com/root-project/root/pull/2829,5,"['configurat', 'release', 'update']","['configuration', 'release', 'update']"
Deployability,"This is minimal changes to make ROOT working with that nlohmann/json.hpp version of parser; Same patch will be applied for v6-22-00-patches branch to resolve problem in ROOT-10993. Later one have to provide way to use external version of the parser.; But this requires significant changes in build system and in source code,; therefore will be provided later and only for master branch",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6663:97,patch,patch,97,https://root.cern,https://github.com/root-project/root/pull/6663,2,['patch'],"['patch', 'patches']"
Deployability,"This is necessary to avoid ROOT's installed cmake modules to point to the build directory when using builtin GSL, since `$GSL_LIBRARIES` is the full path to `<BINARY_DIR>/lib/libgsl.so` when using builtin GSL.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4050:34,install,installed,34,https://root.cern,https://github.com/root-project/root/pull/4050,1,['install'],['installed']
Deployability,This is needed also in v6-28-00-patches for building with GCC 13 since adding the `memory_resource` header in commit f7adbd2b04. (cherry picked from commit e9a8c48e4f207d7015bbd212116486bbecbac066 and commit aae1cd064679f440ad80f39e4ee56bb0c1d9d396). Backport of the following two PRs:; * https://github.com/root-project/root/pull/12765; * https://github.com/root-project/root/pull/12793,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12901:32,patch,patches,32,https://root.cern,https://github.com/root-project/root/pull/12901,1,['patch'],['patches']
Deployability,This is needed so that the new RooBrowser doesn't need to access the private collision grid of the TPad. These additional options allow the placement of the box with choice of priority over directions as well as option to place within the margins of the pad. . Wanted for 6.28 release too!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12066:277,release,release,277,https://root.cern,https://github.com/root-project/root/pull/12066,1,['release'],['release']
Deployability,"This is not intended to enter master (as of now at least). I am sharing a patch to produce taskstream for RunTreeProcessorMT. The RLoopManager produces a raw data, that can very easily be given to this small program that does the magic:; ```py; import pandas as pd; samples = pd.read_csv('test.csv'). startTime = min(samples['StartTime']) # the earliest ; allEntries = sum(samples['EntriesProcessed']); samples['StartTime'] -= startTime; samples['EndTime'] -= startTime; samples['Duration'] = samples['EndTime'] - samples['StartTime']; samples['EntriesPercentProc'] = samples['EntriesProcessed']/allEntries*100. import altair as alt; import altair_saver. chart = alt.Chart(samples[['Slot','ThreadID','CoreID',; 'StartTime','EndTime','EntriesProcessed', 'EntriesPercentProc', 'Duration']]).mark_bar(; cornerRadiusTopLeft=2,; cornerRadiusTopRight=2,; cornerRadiusBottomLeft=2,; cornerRadiusBottomRight=2; ).encode(; x='StartTime',; x2='EndTime',; y='ThreadID',; tooltip=['Slot', 'CoreID', 'EntriesProcessed', 'EntriesPercentProc', 'Duration']; ).properties(width=1200).interactive(). chart.save('taskstream.html'); ```; Requirements are pandas, altair and altair_saver. Example resulting taskstream is in this draft PR: https://github.com/root-project/root/blob/2dffbaab2ef3c280cc1b5a98fe8123250353d35e/tutorials/dataframe/dashboard/taskstream.html. Any suggestions for improvements are welcome :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11620:74,patch,patch,74,https://root.cern,https://github.com/root-project/root/pull/11620,1,['patch'],['patch']
Deployability,"This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,; starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace; manipulation workflows, as it takes place at each workspace::import; call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all.; ~RooAbsArg takes care of properly breaking all the client-server links,; both uplinks and downlinks, for every object. I couldn't find a logical; case where a crash would occur if the safeDeleteList logic were to be; removed. All RooFit tests pass after this patch. No problem for my heavy; workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9685:668,patch,patch,668,https://root.cern,https://github.com/root-project/root/pull/9685,1,['patch'],['patch']
Deployability,This is required to build LLVM18.; This version of CMake was eleased in March 2021 https://github.com/Kitware/CMake/releases/tag/v3.20.0. Associated PR in roottest https://github.com/root-project/roottest/pull/1184,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16396:116,release,releases,116,https://root.cern,https://github.com/root-project/root/pull/16396,1,['release'],['releases']
Deployability,This is required to build LLVM18.; This version of CMake was eleased in March 2021; https://github.com/Kitware/CMake/releases/tag/v3.20.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16397:117,release,releases,117,https://root.cern,https://github.com/root-project/root/pull/16397,1,['release'],['releases']
Deployability,This is revised version of #1227.; Main change is the addition of an auto adjust mode that removes the need of a final adjust.; Still limited to the 1D case. The test failure in MemberComments is due to a missing update of MemberComments.ref .; A patch for roottest is available already. . Clang-format not applied this time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1305:213,update,update,213,https://root.cern,https://github.com/root-project/root/pull/1305,2,"['patch', 'update']","['patch', 'update']"
Deployability,"This is spinning off the commits from #15616 that don't depend on a new Clad release, so we can merge and validate the development in the nightlies early.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16007:77,release,release,77,https://root.cern,https://github.com/root-project/root/pull/16007,1,['release'],['release']
Deployability,This is the complete set of patches used by ALICE on top of v6-20-02. AFAICT they are all in master already. Any chance we can get them included in the next v6-20-XX tag?,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5407:28,patch,patches,28,https://root.cern,https://github.com/root-project/root/pull/5407,1,['patch'],['patches']
Deployability,"This is the current state of my experiment towards enabling finer-grained axis binning comparisons that ""axis configuration is exactly the same"" or ""axis configuration is different"". Once finished, this should enable switching between several histogram merging logics, including... - The current implementation, which is maximally fast but a bit too limited (it doesn't even allow the target histogram to grow to span the source histogram range if it is able to).; * Note that said implementation did already gain some superpowers in the current state of this PR, such as ability to merge when axis bin borders are _slightly_ different.; - More permissive implementations, which trade speed for generality. Here's what should IMO be added before this PR can be considered ready to merge:. - [x] Tests, lots of them. There's some very tricky code in there, even if it got clearer over time...; - [ ] Performance optimizations to reduce the impact of comparing axis binning, including...; * [ ] Not comparing every axis bin border when the axes are equidistant; * [ ] Reducing reliance on virtual function calls, especially in loops; * [ ] Possibly early algorithm exit as soon as complete conclusions are reached (but this will only benefit worst-case scenarios where axis binnings are very different, so...); - [ ] Demonstration of a more permissive histogram merging algorithm, to cross-check that the current binning comparison info adequately enables writing one as intended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5725:110,configurat,configuration,110,https://root.cern,https://github.com/root-project/root/pull/5725,2,['configurat'],['configuration']
Deployability,"This is the final version of ""printValue"" discussion. We agreed that printValue interface should be altered to to_string; interface, which can be invoked `gInterpreter->to_string(XYZ)`. This patch contains:. - Implementation of to_string in Interpreter.cpp; - Re-Implementation of ClingPrintValue to use to_string because I changed to use Evaluate some time ago.; - Removing of RVec version of printValue which wasn't used at all; - Fix test/vecops_rvec.cxx, printValue is never supposed to be called by a normal user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2698:191,patch,patch,191,https://root.cern,https://github.com/root-project/root/pull/2698,1,['patch'],['patch']
Deployability,"This is the second attempt for merging the bulk IO APIs (hidden inside the ROOT::Internal namespace); original version was in #943; this is a large rebase and update (particularly, removing the buffer sharing between the ROOT and the user). The initial goal here is to get another round of @pcanal attention and feedback. The bulk IO APIs aim to provide as fast access as possible in the case where the user is using relatively simple datatypes and the objects can be deserialized ""non-destructively"" (i.e., in-place in the existing memory buffers). For example - primitives and lists of primitives are supported; anything needing references are not. Despite the fact many of ROOT's very useful deserialization features are not supported, the limited feature set covers a range of analysis use cases. In particular, the current version of CMS's proposed NanoAOD format can be read solely via bulk APIs. Where the bulk IO APIs are applicable, we see an order-magnitude improvement in event rates for some use cases (including CMS NanoAOD). The speedup becomes more noticeable as the data read from the event is smaller (meaning the traditional ROOT IO overheads are larger). Somewhere in the neighborhood of 5KB objects read per event is the point where bulk IO APIs should be noticeably faster. This PR provides three interfaces:. * A raw, low-level interface. The user can invoke the bulk IO APIs directly and get a buffer of primitive types, serialized or deserialized. It is not envisioned this is used by users, but by API writers.; * A TTreeReader-like interface, TTreeReaderFast. This is meant to be used by users; it utilizes the low-level interface to retrieve the serialized buffer and templated code will inline the deserializing as part of iterating through the tree. The speed here is gained by the fact only a single pass in memory is needed to deserialize and apply user code, rather than two.; * The intent is that this interface can be extended in the future and used by TDataFrame, pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519:159,update,update,159,https://root.cern,https://github.com/root-project/root/pull/2519,1,['update'],['update']
Deployability,"This is to avoid output that doesn't indicate any problem and only makes; the test output harder to interpret. That's how the output of test 27 was before this commit:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y); Test 27 : Integration over non-rectangular regions...............OK; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8611:278,integrat,integrator,278,https://root.cern,https://github.com/root-project/root/pull/8611,2,"['Integrat', 'integrat']","['Integration', 'integrator']"
Deployability,"This is to avoid the following warning at configuration time when building ROOT with `cuda` enabled:. ```; CMake Warning (dev) at cmake/modules/SearchInstalledSoftware.cmake:18 (_find_package):; Policy CMP0146 is not set: The FindCUDA module is removed. Run ""cmake; --help-policy CMP0146"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. Call Stack (most recent call first):; cmake/modules/SearchInstalledSoftware.cmake:1705 (find_package); CMakeLists.txt:347 (include); This warning is for project developers. Use -Wno-dev to suppress it.; ```. Indeed, FindCUDA is deprecated since CMake 3.10:; https://cmake.org/cmake/help/latest/module/FindCUDA.html. The minimum required CMake version by ROOT is 3.16, so it should be no problem to use the suggested new alternative: call the enable_language() command with CUDA. Similar to `enable_language(Fortran)`, this is now done in `CheckCompiler.cmake`. Also, some logic of managing the configuration flags was moved from `SearchInstalledSoftware.cmake` to `RootBuildOptions.cmake` where it belongs. What remains in `SearchInstalledSoftware.cmake` is only the code to find the CuDNN library. Also, since CUDA is now registered as a language in CMake, we can use the official `CMAKE_CUDA_COMPILER` variable in `RootConfiguration.cmake` when invoking nvcc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13437:42,configurat,configuration,42,https://root.cern,https://github.com/root-project/root/pull/13437,2,['configurat'],['configuration']
Deployability,"This is to get rid of deprecation warninigs when building on Ubuntu; 22.04. Should cause no backwards compatibility poblems, as the functions that; are used now are around at least since OpenSSL 1.0.2:; https://www.openssl.org/docs/man1.0.2/man3/EVP_DigestInit_ex.html. This patch was already applied to upstream civet:; https://github.com/civetweb/civetweb/pull/1072",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10380:275,patch,patch,275,https://root.cern,https://github.com/root-project/root/pull/10380,1,['patch'],['patch']
Deployability,"This is to test a potential fix to a recent regression in llvm wrt exposing symbols to the JIT from dlopened with RTLD_LOCAL libraries. This regression forced ROOT to revert this patch, adding one more patch to the list of llvm patches. We want to check if D33529 fixes our issue and make sure it goes in the next llvm release (coming soon). @marsupial, I failed to apply D33657 on top and D33658. They are marked as dependencies but it looks like they do not apply cleanly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744:179,patch,patch,179,https://root.cern,https://github.com/root-project/root/pull/744,4,"['patch', 'release']","['patch', 'patches', 'release']"
Deployability,"This is useful for external users to specify a writable modules cache path where the global module index can be generated on demand. This patch should resolve an issue in cmssw where the default module cache path (ROOTSYS/lib) is in a non-writable area in cvmfs. cc: @oshadura, @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5100:138,patch,patch,138,https://root.cern,https://github.com/root-project/root/pull/5100,1,['patch'],['patch']
Deployability,"This is very first prototype for testing and further development. Idea to scan geometry and create render data on C++ side, ; only final WebGL display implemented in web browser. Also will be test-case for OpenUI TableTree integration. One need specialized OData-like requests to show only visible part of geometry hierarchy. tutorials/eve7/viewer.C shows basic usage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3194:223,integrat,integration,223,https://root.cern,https://github.com/root-project/root/pull/3194,1,['integrat'],['integration']
Deployability,"This issue only occurs when the conda environment is activated.; I followed the default install method with `conda create -c conda-forge --name <my-environment> root`. I want to use a wrapper class for TChain called [Ntuple](https://github.com/Allen319/Ntuple/blob/master/python/Ntuple.py); https://github.com/Allen319/Ntuple/blob/master/python/Ntuple.py; But I cannot initialize this class with conda environment (If I use ROOT installed from source codes, it works well).; The error message:; ```; Traceback (most recent call last):; File ""./example_ntuple.py"", line 9, in <module>; n = Ntuple(""DataTree""); File ""/Users/allen/Documents/GitHub/tuple/python/Ntuple.py"", line 29, in __init__; TChain.__init__(self, name); TypeError: none of the 2 overloaded methods succeeded. Full details:; TChain::TChain() =>; TypeError: takes at most 0 arguments (1 given); no constructor available for 'TChain'; ```; It is strange that there is no other overloaded method with 2 args",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6467:88,install,install,88,https://root.cern,https://github.com/root-project/root/issues/6467,2,['install'],"['install', 'installed']"
Deployability,This leads to errors due to absolute paths if ROOT is already; installed in the configured prefix (e.g. /usr/lib64/root):. CMake Error at cmake/modules/RootNewMacros.cmake:288 (message):; Header path; '/usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx'; /usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx; is not relative!; Call Stack (most recent call first):; cmake/modules/RootNewMacros.cmake:968 (ROOT_GENERATE_DICTIONARY); graf2d/gpadv7/CMakeLists.txt:6 (ROOT_STANDARD_LIBRARY_PACKAGE),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3303:63,install,installed,63,https://root.cern,https://github.com/root-project/root/pull/3303,1,['install'],['installed']
Deployability,"This line was introduced by commit 0f1f12931f in 2016, in what looks like an unrelated change. All ROOT tests pass after removing it. @Axel-Naumann unless you happen to remember why this was introduced, I will synchronize this to the monorepo and we get rid of another patch...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13123:269,patch,patch,269,https://root.cern,https://github.com/root-project/root/pull/13123,1,['patch'],['patch']
Deployability,"This line:; https://github.com/root-project/root/blob/7aab9a2be02967dc75342b4fb3c01c98f2a5a2c9/hist/hist/src/TH2.cxx#L485. Should be `fTsumwxy += z * x * y;` instead, as in the other versions `TH2::Fill`.; This was changed by 4465976d5da9b6c18adff75c430958112e79bf94, previously `fTsumwxy` was updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11746:294,update,updated,294,https://root.cern,https://github.com/root-project/root/issues/11746,1,['update'],['updated']
Deployability,"This looks like a regression from https://github.com/root-project/root/commit/7a1cc8ffe576490b2f977ba2c262e10ec53a797a#diff-93558e500b17901f800fbb40a2c2fdfd6ee229077db63413bd4a91ee7ec66ea7. It seems like interpreter/llvm-project/llvm/tools/clang would not be a thing, while a following compilation error is observed with builtin_llvm=OFF:. In file included from interpreter/cling/lib/Utils/AST.cpp:12:; In file included from interpreter/llvm-project/clang/include/clang/AST/ASTContext.h:18:; interpreter/llvm-project/clang/include/clang/AST/ASTFwd.h:21:10: fatal error: 'clang/AST/DeclNodes.inc' file not found; #include ""clang/AST/DeclNodes.inc""; ^~~~~~~~~~~~~~~~~~~~~~~~~; 1 error generated. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14238:789,update,updated,789,https://root.cern,https://github.com/root-project/root/pull/14238,1,['update'],['updated']
Deployability,This makes `check-cling` clean on `v6-28-00-patches`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13318:44,patch,patches,44,https://root.cern,https://github.com/root-project/root/pull/13318,1,['patch'],['patches']
Deployability,"This makes it possible to drop our custom `CompilerInvocation::addOverlay` functionality (but the rest of the patch that introduced it is still needed with LLVM 13, so it cannot be reverted for now).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13222:110,patch,patch,110,https://root.cern,https://github.com/root-project/root/pull/13222,1,['patch'],['patch']
Deployability,"This makes it unnecessary to veto these files in case RooFit is not enabled, and also makes it easier to consider the `man` and `etc` files when building RooFit standalone. I checked the build and install directories that everything is still where it should be.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16597:197,install,install,197,https://root.cern,https://github.com/root-project/root/pull/16597,1,['install'],['install']
Deployability,"This makes sure that the list of directories is actually empty in case neither `inc/` nor `v7/inc/` exist, and does not contain left-overs that were stored in this variable in a parent scope. After this change, `roottest/root/meta/rootcling/module.modulemap` is much shorter and in particular free of non-existent entries complained about by the LLVM 13 upgrade.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10682:354,upgrade,upgrade,354,https://root.cern,https://github.com/root-project/root/pull/10682,1,['upgrade'],['upgrade']
Deployability,This mapping should be fixed before shipping the RDF Numba execution pipeline to users,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16413:69,pipeline,pipeline,69,https://root.cern,https://github.com/root-project/root/pull/16413,1,['pipeline'],['pipeline']
Deployability,This means that we won't have to install any headers from xrootd when using `builtin_xrootd=ON`. This makes systems that have both XRootD standalone and ROOT with builtin XRootD installed more stable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16660:33,install,install,33,https://root.cern,https://github.com/root-project/root/pull/16660,2,['install'],"['install', 'installed']"
Deployability,"This might fix e.g. `-mmacosx-version-min=12.6` not being passed to ACLiC, causing linker warnings about incompatible deployment targets. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12139:118,deploy,deployment,118,https://root.cern,https://github.com/root-project/root/pull/12139,2,"['deploy', 'update']","['deployment', 'updated']"
Deployability,This new release includes performance and stability improvements. See more at: https://github.com/vgvassilev/clad/releases/tag/v1.3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14654:9,release,release,9,https://root.cern,https://github.com/root-project/root/pull/14654,2,['release'],"['release', 'releases']"
Deployability,This new release includes several fixes helping to scale the RooFit AD backend. See more at: https://github.com/vgvassilev/clad/releases/tag/v1.5,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15030:9,release,release,9,https://root.cern,https://github.com/root-project/root/pull/15030,2,['release'],"['release', 'releases']"
Deployability,This new release includes several fixes helping to simplify RooFit AD backend. See more at: https://github.com/vgvassilev/clad/releases/tag/v1.4,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14794:9,release,release,9,https://root.cern,https://github.com/root-project/root/pull/14794,2,['release'],"['release', 'releases']"
Deployability,"This new release includes some improvements:; * Add experimental support for forward vector mode; * Add pushforwards for std::floor and std::ceil; * Improve AD function interfaces with bitmasked options. For example:; clad::differentiate<<clad::order::first, clad::opts::vector_mode>(f) will; be equivalent to clad::differentiate<<1, clad::opts::vector_mode>(f) and; will request the first order derivative of f in forward vector mode.; * LLVM16 Support. See more at: https://github.com/vgvassilev/clad/blob/v1.2/docs/internalDocs/ReleaseNotes.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13269:9,release,release,9,https://root.cern,https://github.com/root-project/root/pull/13269,2,"['Release', 'release']","['ReleaseNotes', 'release']"
Deployability,This new release includes some improvements:; * Add support for pushforward- and pullback-style functions; * More supported constructs in forward and reverse mode; * Forward mode support for CUDA programs; * AD-based Floating Point Error Estimation Framework; * Integration with Enzyme. See more at: https://github.com/vgvassilev/clad/blob/v1.0/docs/internalDocs/ReleaseNotes.md. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11544:9,release,release,9,https://root.cern,https://github.com/root-project/root/pull/11544,4,"['Integrat', 'Release', 'release', 'update']","['Integration', 'ReleaseNotes', 'release', 'updated']"
Deployability,This new release includes some improvements:; * Extended array support; * Add cmake variables to control the locations where find_package discovers LLVM and Clang: `LLVM_CONFIG_EXTRA_PATH_HINTS` and `Clang_CONFIG_EXTRA_PATH_HINTS` respectively. See more at: https://github.com/vgvassilev/clad/blob/v0.9/docs/ReleaseNotes.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8848:9,release,release,9,https://root.cern,https://github.com/root-project/root/pull/8848,2,"['Release', 'release']","['ReleaseNotes', 'release']"
Deployability,This new release includes some improvements:; * Improvements in the array handling in the Error Estimation Framework; * Fixed numerical stability of the pow pushforward; * Fixed handling of for-loop conditions in reverse mode; * LLVM15 Support. See more at: https://github.com/vgvassilev/clad/blob/v1.1/docs/internalDocs/ReleaseNotes.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12075:9,release,release,9,https://root.cern,https://github.com/root-project/root/pull/12075,2,"['Release', 'release']","['ReleaseNotes', 'release']"
Deployability,"This option gives clean/raw Cling without any includes. This is intended; to be used for debugging purposes. ```; [yuka@yuka-arch module-release]$ bin/root.exe --pedantic. ****************** CLING ******************; * Type C++ code and press enter to run it *; * Type .q to exit *; *******************************************; [cling]$ int a = 1;; [cling]$ a; (int) 1; [cling]$ std::vector<int> b;; input_line_7:2:7: error: no member named 'vector' in namespace 'std'; std::vector<int> b;; ~~~~~^; input_line_7:2:17: error: expected '(' for function-style cast or type construction; std::vector<int> b;; ~~~^; input_line_7:2:19: error: use of undeclared identifier 'b'; std::vector<int> b;; ^; [cling]$ #include <vector>; [cling]$ std::vector<int> b;; [cling]$ b = {1,2,3}; (std::vector &) { 1, 2, 3 }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2561:137,release,release,137,https://root.cern,https://github.com/root-project/root/pull/2561,1,['release'],['release']
Deployability,This patch actually loads the modulemap as previously it wrongly detected; it was already loaded.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3695:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/3695,1,['patch'],['patch']
Deployability,"This patch adds `df.DefinePerSample`, a method that lets user define; new columns that are only updated per ""data-block"" rather than per; entry, where a ""data-block"" is made of several entries that have the; same data-block ID (e.g. that belong to the same TTree in a TChain). The data-block ID is passed as an argument to the callback, so that; quantities can be defined based on the sample being processed. Currently a jitted version is not available and RDataSources have; no way to hook into the mechanism (they get one data-block per task; with empty data-block ID). Support for these cases will be added by; later commits. This resolves #6745. This PR should make @stwunsch happy. To do:. - [x] test `RDataBlockID` with entry ranges; - [x] naming: `RDataBlockID -> RDataBlockInfo`? `DefinePerSample -> DefinePerDataBlock`?; - [x] add support for jitted `df.DefinePerSample(""myconstant"", ""rdfdatablock_.Contains(\""MC\"") ? 42. : 8."")`; - [ ] add release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8841:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/8841,3,"['patch', 'release', 'update']","['patch', 'release', 'updated']"
Deployability,"This patch adds a few IO benchmarks. Some of them were hosted by @amadio in an external repository. The nature of some of the benchmarks is to create multiple times files on disk. Running repeatedly, this can wear out machines disk drives. For that reason we extend the `TFileMerger` to work with `TFile*` directly. Passing an externally created `TFile*` allows us to pass a `TMemFile`. Being able to benchmark based on in-memory files gives us another advantage: we can emulate very fast drives or certain delay patterns.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1062:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/1062,1,['patch'],['patch']
Deployability,"This patch adds deprecation messages in the pq2 steering main, in rootd, proofd, ssh2rpd, and in all related man pages. Part of the agreed deprecation campaign.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1755:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/1755,1,['patch'],['patch']
Deployability,This patch affords trimming of redundant Jupyter notebook information contained within TCanvas .JSON objects. Specifically this includes the removing the list of TColors which reduces the size of a benchmark notebook (a compiled test notebook of Root Primer graphics) by up to 80% upon preliminary tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/760:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/760,1,['patch'],['patch']
Deployability,This patch allows TFileMerger to work with externally created TFile-s. Being; able to control the creation of the TFile objects give us a chance to use; in-memory files. This is very helpful in benchmarking when we want to simulate; fast disks or we just want to avoid disk wearout.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1073:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/1073,1,['patch'],['patch']
Deployability,This patch allows to tell vectorized from scalar evaluations and will fix the multidimensional scalar evaluation of a vectorized TF1 on non-SIMD data.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/827:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/827,1,['patch'],['patch']
Deployability,This patch allows us to resolve system-specific header search directories such as the location of libc. This patch fixes experimental runtime_cxxmodules on OSX where libc is in /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/. cc: @oshadura,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4659:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/4659,2,['patch'],['patch']
Deployability,"This patch already landed in https://reviews.llvm.org/rL336660 in Clang. This was biting us to enable runtime modules in CMSSW. Detailed desciption:; https://bugs.llvm.org/show_bug.cgi?id=37878. lookupModule was falling back to loadSubdirectoryModuleMaps when it couldn't; find ModuleName in (proper) search paths. This was causing iteration over all; files in the search path subdirectories for example ""/usr/include/foobar"" in; bugzilla case. Users don't expect Clang to load modulemaps in subdirectories implicitly, and; also the disk access is not cheap. if (AllowExtraModuleMapSearch) true with ObjC with @import ModuleName.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2307:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/2307,1,['patch'],['patch']
Deployability,This patch already landed in llvm. Clang emits error when implicit modules was relocated from the; first build directory. However this was biting our usecase where we copy; the contents of build directory to another directory in order to; distribute.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2407:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/2407,1,['patch'],['patch']
Deployability,This patch also fixes an accidental merge problem where we essentially; added the same content of the modulemap twice. cc @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6075:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/6075,1,['patch'],['patch']
Deployability,"This patch also instruct the build system to not copy {libc,std}.modulemap in OSX because the standard libraries are already modularized. Fixes a regression introduced by root-project/root@603a1c3e96",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5244:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/5244,1,['patch'],['patch']
Deployability,This patch also reports the branch name when a class cannot be loaded by the importer to make debugging easier.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12019:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/12019,1,['patch'],['patch']
Deployability,This patch also untangles the generation code of PCMs and PCHs.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/504:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/504,1,['patch'],['patch']
Deployability,"This patch came from Sean Benson and Wouter Verkerke, and is needed; to allow LHCb's P2VV-style analyses to have different time acceptances; for different categories of events. All tests continue to pass.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3776:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/3776,1,['patch'],['patch']
Deployability,"This patch consolidates the symbol resolution facilities throughout TCling into; a new singleton class Dyld part of the cling's DynamicLibraryManager. The new dyld is responsible for:; * Symlink resolution -- it implements a memory efficient representation of; the full path to shared objects allowing search at constant time O(1). This; also fixes issues when resolving symbols from OSX where the system libraries; contain multiple levels of symlinks.; * Bloom filter optimization -- it uses a stohastic data structure which gives; a definitive answer if a symbol is not in the set. The implementation checks; the .gnu.hash section in ELF which is the GNU implementation of a bloom; filter and uses it. If the symbol is not in the bloom filter, the; implementation builds its own and uses it. The measured performance of the; bloom filter is 30% speed up for 2mb more memory. The custom bloom filter on; top of the .gnu.hash filter gives 1-2% better performance.; The advantage for the custom bloom filter is that it works on all; implementations which do not support .gnu.hash (windows and osx). It is also; customizable if we want to further reduce the false positive rates; (currently at p=2%).; * Hash table optimization -- we build a hash table which contains all symbols; for a given library. This allows us to avoid the fallback symbol iteration; if multiple symbols from the same library are requested. The hash table; optimization targets to optimize the case where the bloom filter tells us; the symbol is *maybe* in the library. Patch by Alexander Penev (@alexander-penev) and me!. Performance Report; ===. |platform|test|PCH-time|Module-time|Module-PR-time|; |:--------|:---|:---------:|:-----------:|:---------------|; |osx 10.14|roottest-python-pythonizations|22,82|26,89|20,08|; |osx 10.14| roottest-cling| 589,67|452,97|307,34|; |osx 10.14| roottest-python| 377,69|475,78|311,5|; |osx 10.14| roottest-root-hist| 60,59|90,98|49,65|; |osx 10.14| roottest-root-math| 106,18|140,41|73,96|",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4717:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/4717,1,['patch'],['patch']
Deployability,"This patch disables default building proofd and proofx modules, the PROOF ones requiring XRootD. The possibility to build these modules is provided as legacy and controlled by the switch 'xproofd' (-Dxproofd=ON). Note that these modules require XRootD v4 and the xrootd-private-devel RPM installed (or equivalent on Debian systems). Or -Dbuiltin_xrootd=ON . The patch also fixes a possible segv introduced last February.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5432:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/5432,3,"['install', 'patch']","['installed', 'patch']"
Deployability,This patch enables the module file to mmap the rdict memory region before the; request to load it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3967:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/3967,1,['patch'],['patch']
Deployability,This patch fixes a few recent runtime_cxxmodules failures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2331:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/2331,1,['patch'],['patch']
Deployability,This patch fixes a few recent runtime_cxxmodules failures. Fixes ROOT-9709.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2977:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/2977,1,['patch'],['patch']
Deployability,This patch fixes an assertion in the incremental builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3802:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/3802,1,['patch'],['patch']
Deployability,This patch fixes the following error:. In file included from input_line_12:3:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-16/build/include\TGWin32.h:24:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-16/root/graf2d/win32gdk/gdk/src\gdk/gdk.h:30:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-16/root/graf2d/win32gdk/gdk/src\gdk/gdkcc.h:4:; C:/build/night/LABEL/windows10/SPEC/default/V/6-16/root/graf2d/win32gdk/gdk/src\gdk/gdktypes.h:32:10: fatal error: 'glib.h' file not found; #include <glib.h>; ^~~~~~~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5142:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/5142,1,['patch'],['patch']
Deployability,This patch fixes the following error:. In file included from input_line_12:3:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-18/build/include\TGWin32.h:24:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-18/root/graf2d/win32gdk/gdk/src\gdk/gdk.h:30:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-18/root/graf2d/win32gdk/gdk/src\gdk/gdkcc.h:4:; C:/build/night/LABEL/windows10/SPEC/default/V/6-18/root/graf2d/win32gdk/gdk/src\gdk/gdktypes.h:32:10: fatal error: 'glib.h' file not found; #include <glib.h>; ^~~~~~~~; CUSTOMBUILD : error : C:/build/night/LABEL/windows10/SPEC/default/V/6-18/build/bin/rootcling.exe: compilation failure (C:/build/night/LABEL/windows10/SPEC/default/V/6-18/build/bin/libWin32gdk1fec221199_dictUmbrella.h) [C:\build\night\LABEL\windows10\SPEC\default\V\6-18\build\graf2d\win32gdk\G__Win32gdk.vcxproj],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5067:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/5067,1,['patch'],['patch']
Deployability,"This patch fixes the histhistv7testUnit test, which was failing with the following errors:. 77: [ OK ] AxisTest.Irregular (0 ms); 77: [ RUN ] AxisTest.Labels; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5054:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/5054,1,['patch'],['patch']
Deployability,This patch gives us control over the addition in subfolders in cmake.; It is necessary ingredient for the root package manager where it needs; to control precisely how the build is confugured and possibly ignore; some of the non-requested components.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2406:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/2406,1,['patch'],['patch']
Deployability,"This patch hasn't landed in 5.0, so the LLVM upgrade overwrote this; patch without bringing in the upstreamed fixed version. Original commit message:. The default VFS for the FileManager should be created from the CompilerInvocation; instead of assuming there is none.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1274:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/1274,3,"['patch', 'upgrade']","['patch', 'upgrade']"
Deployability,This patch improves the previous check whether the current compiler; is using an incompatible libstdc++ version or not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/460:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/460,1,['patch'],['patch']
Deployability,"This patch includes:; - Remove existing modulemap.overlay files; Cling now can generate virtual overlay files on-demand.; - Implement `-modulemap_overlay` flag to Cling; This flag is used to tell Cling the location of modulemaps to be; overlayed. (eg. stl.modulemap, libc.modulemap); - Generate and load virtual modulemap in Cling; It is in Interpreter constructor, happens as part of cxxmodules; initialization step.; - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer; Previously, Clang only took a ""string of filenames"" which clearly doesn't; work for our usecase. We already discussed this new interface at; modules meeting, so this change will land upstream.; - Add a file existence check in Clang; When compiling a pcm and when Clang saw the #include with which pcm was available; (or being generated implicitly), Clang was putting a notation of the full path to this pcm.; This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it; work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3267:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/3267,2,['patch'],['patch']
Deployability,"This patch installs python modules to python site-dir standard location (see some doc here:https://docs.python.org/2/library/site.html), see https://sft.its.cern.ch/jira/browse/ROOT-3316. It avoids to have to set PYTHONPATH when installing to a system folder /usr or /usr/local, and even the user site-dir ~/.local. Packaging may have to be reworked though (https://www.debian.org/doc/packaging-manuals/python-policy/ch-python.html#s-paths)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/73:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/73,3,"['install', 'patch']","['installing', 'installs', 'patch']"
Deployability,This patch instead prints an error with some useful debugging; information that should help identify the cause of this issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/777:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/777,1,['patch'],['patch']
Deployability,This patch is a backport of; https://reviews.llvm.org/rG638d84b60b7e7b7fa9099939ab4de2ec1e0c52c3. Fixes #8060.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8085:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/8085,1,['patch'],['patch']
Deployability,"This patch is a complementary chenge to root-project/root@d2c0929e0d It will turn off the isOutOfDate checks for transient files with different size on disk. This is quite dangerous but we are supposed to control the build environment which prepares the distributable binaries. This should fix the cmssw issue:. StdDictionaries/src/DataFormatsStdDictionaries/a/DataFormatsStdDictionaries_all_def.xml; input_line_8:1:22: error: file '/usr/include/linux/falloc.h' from the precompiled header has been overridden; ^; rootcling: /build/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/slc7_amd64_gcc820/lcg/root/6.17.01/root-6.17.01/interpreter/llvm/src/tools/clang/include/clang/Serialization/Module.h:72: clang::serialization::InputFile::InputFile(const clang::FileEntry*, bool, bool): Assertion `!(isOverridden && isOutOfDate) && ""an overridden cannot be out-of-date""' failed. The error tells us that `falloc.h` has different file size on the build machine and; on the distribution machine. We should probably rely on an environment variable; to turn off this diagnostic selectively and more the reponsibility if something goes; wrong to the distribution team. They should have better knowledge what is safe to; be ignored anyway. cc: @davidlange6, @oshadura, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4495:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/4495,1,['patch'],['patch']
Deployability,"This patch is a tentative fix to JIRA bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907) (TGeoNavigator::FindNextBoundaryAndStep yields nonsensical answers with overlapping volumes). The bug seems to be due to the fact that `/CUVE_1/FAIS_1/PLAQUE_2` fails the `Contains()` check on line 1416, despite the fact that (or because?) the point is exactly on the volume boundary. Therefore, `PLAQUE_2` is not considered **at all** for limiting the current step length, which is unsound. By suppressing the `Contains()` check, we allow `snext` to be set to 0.0, which is a sensible response in this situation. I am not sure whether suppressing this check is entirely reasonable. I perused the source code for a few `TGeoShape`s and I have the impression that `DistFromOutside()` returne `TGeoShape::Big()` if the point happens to be inside the shape, but I could not find any documentation where this post-condition is clearly spelt out. If this is true for any shape, then I would argue that it is safe to omit the `Contains()` check (at worst we will end up with `snext=TGeoShape::Big()`, which is exactly what we had with the check anyway). @agheata, I hope you can take a look at this patch. Perhaps you are also aware of other places in `TGeoNavigator` where it may be wise to apply a similar correction...? Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3291:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/3291,2,['patch'],['patch']
Deployability,This patch is a workaround once again for the poor LCG design where we have all header files (and modulemaps) installed in the same folder.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6104:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/6104,2,"['install', 'patch']","['installed', 'patch']"
Deployability,This patch is backported from https://reviews.llvm.org/D91983; also in https://reviews.llvm.org/D94183. For more discussion see https://github.com/numba/numba/issues/4026. Fixes root-project/root#8072 and root-project/root#9297,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9398:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/9398,1,['patch'],['patch']
Deployability,This patch is backported from https://reviews.llvm.org/D94183. For more discussion see https://github.com/numba/numba/issues/4026. Fixes root-project/root#8072 and root-project/root#9297. cc: @smuzaffar,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9380:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/9380,1,['patch'],['patch']
Deployability,This patch is to fix a warning by duplicated definitions of SIGSYS in signal.h; and in TUnixSystem.cxx.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3287:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/3287,1,['patch'],['patch']
Deployability,"This patch is to verify if we really need to store identifiers that; are namespace in GlobalModuleIndex, which greatly increase the maximum; memory pressure. Send this to trigger ROOT's CI so we can have a full; test, and will be closed if the direction is wrong. **No need for code review or merge**. Signed-off-by: Jun Zhang <jun@junz.org>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10969:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/10969,1,['patch'],['patch']
Deployability,This patch makes it more difficult for people to avoid the 'automatic' memory; ownership done by TMemFile. It forces people to explicitly construct the; data structure describing memory blob and makes it easier to grep for.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3977:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/3977,1,['patch'],['patch']
Deployability,This patch makes the implementation reusable and ready to configure it such; that we can remove the redundant information for modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3687:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/3687,1,['patch'],['patch']
Deployability,This patch makes the include paths related to the given target. The side effect is that rootcling gets significantly less -I flags because cmake scans for the content of the INCLUDE_DIRECTORIES which now contains less and more relevant information.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2529:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/2529,1,['patch'],['patch']
Deployability,This patch moves code which does similar things into standalone routines. This; way we make more clear the intent of use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3865:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/3865,1,['patch'],['patch']
Deployability,This patch prepares the infrastructure to be able to work with a; global module index.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3444:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/3444,1,['patch'],['patch']
Deployability,"This patch provides the method TGDMLWrite::WriteGDMLfile allowing to write the gdml corresponding to a volume hierarchy (like a detector). A geometry can be therefore exported in pieces, and the gdml parser was modified to avoid duplication of materials and other components upon reading.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1445:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/1445,1,['patch'],['patch']
Deployability,"This patch reduces loaded libraries to half, nearly the same amount of pch's.; ; What I did is:; 1. Change DeclCollector and Transaction to collect clang::Decls, not; clang::Modules so that we still have decls information after finishing; deserialization.; 2. In TClingCallbacks, we check if the decl is ""isUsed()"" or not. If; not, we don't want to load corresponding libararies. ```; w/o; yuka@yukadesk:~/module-release$ lsof -p 25477 | grep so | wc -l; 88; with; yuka@yukadesk:~/module-release$ lsof -p 23676 | grep so | wc -l ; 37. PCH; yuka@yukadesk:~/root-release$ lsof -p 9664 | grep so | wc -l; 32. w/o; Processing tutorials/hsimple.C...; hsimple : Real Time = 0.08 seconds Cpu Time = 0.07 seconds; (TFile *) 0x5563018a1d30; Processing /home/yuka/CERN/ROOT/memory.C...; cpu time = 1.524314 seconds; sys time = 0.157075 seconds; res memory = 546.867 Mbytes; vir memory = 895.184 Mbytes. with; Processing tutorials/hsimple.C...; hsimple : Real Time = 0.05 seconds Cpu Time = 0.05 seconds; (TFile *) 0x55c8a399bfa0; Processing /home/yuka/CERN/ROOT/memory.C...; cpu time = 0.371789 seconds; sys time = 0.069116 seconds; res memory = 273.5 Mbytes; vir memory = 461.43 Mbytes. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2009:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/2009,4,"['patch', 'release']","['patch', 'release']"
Deployability,This patch reduces the code bloat in TClingCallFunc trying to make the code more readable. cc: @sudo-panda,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10850:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/10850,1,['patch'],['patch']
Deployability,This patch reduces the duplicate content in the GenVector.pcm thus reducing; the amount of decl merging.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2881:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/2881,1,['patch'],['patch']
Deployability,"This patch reimplemented signal handling in CMSSW. It avoids async-unsafe functions in signal handler. For reference, see the link https://github.com/bbockelm/cmssw/blob/stacktrace_handler_revisit/FWCore/Services/src/InitRootHandlers.cc. I tried this patch with some simple multi-thread test cases and it worked fine. Is there any complicated test cases I can run? I think this patch is not very ready to merge, but it achieved basic functions. Any criticisms are welcome.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/96:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/96,3,['patch'],['patch']
Deployability,"This patch reimplements the broken patch in clang: ""Fix fwddecls of templates; with tmplt arg defauls coming from dictionaries (CMS / std::less). (#849)"". And partially reimplements:""Disable diags of dupe default args (func, templt); temporarily."". It also fixes the failing cling test Autoloading/AutoForwarding.C which; is visible when building root with -Dclingtest=On.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1268:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/1268,2,['patch'],['patch']
Deployability,"This patch removes a wrongly implemented copy constructor, which lost the fUseGrad setting (if it was `true` in the original, the copy had `false`), effectively replacing it with the default copy ctor, which is perfectly fine here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6761:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/6761,1,['patch'],['patch']
Deployability,"This patch removes an unnecessary assert, which is probably a left-over from early debugging. Asserts are a way to document certain runtime assumptions that the code makes. They should be only used if the code cannot run correctly if the condition is not fulfilled. This assert here does not serve that purpose. Starting the minimization iteration with an invalid initial state is fine as far as the algorithm is concerned, because it does not make use of that property. Edit: This is not a cosmetic change, because this assert triggers an abort in one of the iminuit tests if the code is compiled in debug mode, while the test runs fine in release mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6762:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/6762,2,"['patch', 'release']","['patch', 'release']"
Deployability,"This patch series should finish up the cleanup of `core/zip` (well, for now...). Beyond fixing up some variable names and compiler warnings, this separates out the implementation of reading the ROOT framing format (the magic 9 byte headers) from the inflate implementation for the old compression algorithm..",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1254:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/1254,1,['patch'],['patch']
Deployability,"This patch set enabled C++17 (C++1z) support in ROOT. This will require at least GCC 7.1.0 (soon to be released, probably in a month). GCC 7 fully implements C++17 language features. CMSSW builds using GCC 6.2.0, GCC 6.3.0 and GCC 7.0.1 are all compiled with C++17. Note that biggest issues came from `TString` and `std::string` interaction due to `std::string_view` conversion operator in `TString`. This makes mixing `TString` and `std::string` painful. Thus to avoid ambiguity errors `std::string_view` operator is now marked as explicit. Otherwise in a lot of places I had to use `static_cast<>` to pick one of conversion operators (which makes the patch bigger).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/522:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/522,3,"['patch', 'release']","['patch', 'released']"
Deployability,This patch should fix ROOT-10272.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4215:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/4215,1,['patch'],['patch']
Deployability,This patch should fix an assert in the incrementals.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3873:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/3873,2,['patch'],['patch']
Deployability,This patch should fix root-project/root#7125 and root-project/root#8959,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9056:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/9056,1,['patch'],['patch']
Deployability,"This patch should simplify the cmssw modules setup. cc: @davidlange6, @smuzaffar, @oshadura",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4660:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/4660,1,['patch'],['patch']
Deployability,This patch teaches cling to detect if the essential libraries have modulemaps and if necessary it adds an overlay around libc and std. This tightens the implementation and makes cling standalone easier to run in -fmodules mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4563:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/4563,1,['patch'],['patch']
Deployability,This patch tells cmake not to call rootcling ... -m cppyy3_7.pcm as if cppyy has a dictionary.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5447:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/5447,1,['patch'],['patch']
Deployability,This patch tightens the implementation of the collection of modulemap files. It still gathers all 'system' modulemaps necessary for cling to run if -fno-implicit-module-maps is specified. This patch should unbreak our osx builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4562:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/4562,2,['patch'],['patch']
Deployability,This patch was developed as part of an llvm upgrade in 2015. This patch is not needed anymore considering that the LLVM JIT has advanced significantly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10964:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/10964,3,"['patch', 'upgrade']","['patch', 'upgrade']"
Deployability,This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green (@chissg) this patch should resolve ROOT-10677.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5423:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/5423,2,['patch'],['patch']
Deployability,This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green this patch should resolve ROOT-10677. Depends on #5423,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5424:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/5424,2,['patch'],['patch']
Deployability,"This patch; https://github.com/root-project/root/commit/ae9f8ae62553f9150fdee1f8739be6996d539694; had an unintended side-effect. The code to check the external gradient against the numerical gradient when `CheckGradient()` returns `true` is now never executed. Whether the user provides an analytical gradient or not, only this implementation is called; https://github.com/root-project/root/blob/master/math/minuit2/src/MnSeedGenerator.cxx#L42; while the other implementation is now never executed; https://github.com/root-project/root/blob/master/math/minuit2/src/MnSeedGenerator.cxx#L103. I suggest to revert https://github.com/root-project/root/commit/ae9f8ae62553f9150fdee1f8739be6996d539694, because it also confused iminuit users, see https://github.com/scikit-hep/iminuit/issues/644. People usually use the analytical gradient only when the calculation of the likelihood is extremely expensive, and then it is undesired that some gradients are still computed numerically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8716:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/issues/8716,1,['patch'],['patch']
Deployability,"This prevents certain ugly error messages in case an exception is; thrown during a multi-thread event loop: before this patch, in that; case the thread's slot number was never returned to the RSlotStack; and it could result in some misleading error messages being printed on; screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6601:120,patch,patch,120,https://root.cern,https://github.com/root-project/root/pull/6601,2,['patch'],['patch']
Deployability,"This pull request adds RField support for `std::pair<T1, T2>` (see details below). This PR supersedes #8103 (many thanks to @mxxo for the prototype implementation). ## Changes or fixes:; - Add `RPairField` class that represent a type-erased RField of `std::tuple<T1, T2>`. This class inherits from `RRecordField`.; Offsets to the `first` and `second` members are specified manually, either via `offsetof()` (for `RField<std::pair<T1, T2>>`), or using TClass for the type-erased `RPairField`.; - Update `doc/specifications.md`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR is a follow-up of: #10631. This PR fixes #10324.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10635:495,Update,Update,495,https://root.cern,https://github.com/root-project/root/pull/10635,2,"['Update', 'update']","['Update', 'updated']"
Deployability,"This pull request adds [VecCore](https://gitlab.cern.ch/VecGeom/VecCore) external project and build options to ROOT. Some comments:. Vc is used by VecCore, and since it is not relocatable, it must be built by the VecCore build system in order to avoid the situation in which VecCore finds a broken temporary installed version of Vc in ROOT's `${CMAKE_BINARY_DIR}`. It is perfectly fine to use a builtin VecCore with an externally installed Vc, however. Ideally, though, both should be externally installed. When both are enabled as builtins, they will get installed at the end along with ROOT into the final prefix, with correct configurations. I can not test the build on ARM, please let me know if Jenkins shows any failures. @xvallspl Since you have been using VecCore within ROOT, could you please try this branch out? I did not find any code currently in ROOT that uses VecCore. I've marked this as work in progress to be able to make sure everything is ok prior to merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/393:308,install,installed,308,https://root.cern,https://github.com/root-project/root/pull/393,5,"['configurat', 'install']","['configurations', 'installed']"
Deployability,"This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:; - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type.; - Add `std::tuple` RField support.; ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`.; Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). ; **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list.; Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail.; This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below).; - Update `specifications.md` accordingly. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10652:654,configurat,configurations,654,https://root.cern,https://github.com/root-project/root/pull/10652,3,"['Update', 'configurat', 'update']","['Update', 'configurations', 'updated']"
Deployability,"This pull request adds the attribute `uint64_t iod_flags`, introduced in DAOS v2.0, to the definition of `daos_iod_t` in our mock implementation of libdaos for development. See: https://docs.daos.io/v2.0/doxygen/html/structdaos__iod__t.html. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11683:293,update,updated,293,https://root.cern,https://github.com/root-project/root/pull/11683,1,['update'],['updated']
Deployability,"This pull request applies a number of fixes after the merge or PR #5913 (see below). ## Changes or fixes:; - Fix issues with documentation generation on macOS. In particular: ; 1. Fix `mktemp` command lines to only use template `X`s at the end.; 2. Use `sysctl -n hw.ncpu` instead to get the number of available CPUs on Darwin.; 3. Move OS-dependent variable assignments to the `Makefile`; - Ensure `libs.C` is ACLiC'ed before `modifyClassWebpage.sh` runs. Specifically, `modifyClassWebpages.sh` might spawn many `modifyClassWebpage.sh` processes via `xargs -P`. In turn, `modifyClassWebpage.sh` depends on `libs.C` which is ACLiC'ed if to generate `libs_C.so` where required.; However, if `libs_C.so` does not exist, multiple processes might race to create it. Thus, ensure that the macro is ACLiC'ed before `modifyClassWebpage.sh` runs. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10930:890,update,updated,890,https://root.cern,https://github.com/root-project/root/pull/10930,1,['update'],['updated']
Deployability,"This pull request completes the implementation of late model extension landed in https://github.com/root-project/root/pull/12376. In particular, it allows the model to be updated at any time, even if entries have been already filled. To do so, a new flag is added to the column description, `kFlagDeferredColumn`, which indicates that the index of the first on-disk element in the column is not zero (i.e., the column was added at a later point during write). If the flag is set, an additional 64bit integer ($firstElementIndex$) specifies the global index of the first stored element.; Compliant implementations should yield synthetic data pages made up of `0x00` bytes when trying to read back elements in the range $[0, firstElementIndex-1]$. This ensures zero-initialized values for fields of any supported C++ type, including `std::variant<Ts...>` and collections such as `std::vector<T>`. ## Changes or fixes:; - Allow for including the index of the first element in a column in the column description. This introduces the column flag `kFlagDeferredColumn` which specifies that the column has no on-disk data for elements preceding the given element index.; - `RPageSink::UpdateSchema()` now takes an additional argument (firstEntry) that specifies the first entry that stores an on-disk value for the fields in the changeset. The entry index is translated to column element index by `EntryToColumnElementIndex()`.; - `RPage::MakePageZero()`: this function returns a page that is comprised of `0x00` bytes only.; - Introduce locator type `kTypePageZero`. This locator type represents unmaterialized (i.e., in-memory only) zero pages for deferred columns.; - Add `RPageRange::ExtendToFitColumnRange()`: this function extends a RPageRange to fit the given RColumnRange, i.e. prepend as many synthetic `RPageInfo`s as needed to cover the entire range. `RPageInfo`s are constructed to contain as many elements given a page size limit in bytes; the locator for the referenced pages is `kPageZero`.; T",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12676:171,update,updated,171,https://root.cern,https://github.com/root-project/root/pull/12676,1,['update'],['updated']
Deployability,"This pull request contains the changes to add initial support for RISC-V. It was developed during the past months on a StarFive VisionFive v1 that was kindly provided to me as part of the [RISC-V Developer Boards Program](https://riscv.org/risc-v-developer-boards/). More details about the challenges are available in the form of a [blog post on my website](https://www.hahnjo.de/blog/2023/01/28/riscv-higgs.html), a [presentation at the CaaS meeting in January](https://compiler-research.org/meetings/#caas_12Jan2023), and a [recording of that talk](https://youtu.be/3PWeLGrF41g). Please note that this PR only contains the necessary changes to the build system and ROOT's configuration files and utilities. Making the interpreter actually functional requires a number of backports to ROOT's copy of LLVM 13, that are available separately in a branch (https://github.com/hahnjo/root/tree/riscv-backports).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12351:674,configurat,configuration,674,https://root.cern,https://github.com/root-project/root/pull/12351,1,['configurat'],['configuration']
Deployability,"This pull request extends `RPageSink` to allow for vector commit of sealed pages. The prototype of the new functions is as follows:; ```c++; virtual std::vector<RNTupleLocator> CommitSealedPageVImpl(std::span<RPageStorage::RSealedPageGroup> ranges);; void CommitSealedPageV(std::span<RPageStorage::RSealedPageGroup> ranges);; ```. These changes enable (parallel) vector writes in concrete backends, e.g. in DAOS. Derived classes that do not override the base implementation will see a sequence of calls to `CommitSealedPage()`. The first measurements of vector writes on DAOS based on this PR, indicate an improvement of _an order of magnitude_ in the write throughput. The refactor in this PR passes all the RPageSinkBuf tests. ## Changes or fixes:; - Add `CommitSealedPageV()` to the public interface of `RPageSink`. This function carries out a vector write of a number of sealed page ranges. Each range applies to a given columnId.; The default implementation of `CommitSealedPageVImpl()` sequentially calls `CommitSealedPageImpl()` for each page on each range, but derived classes can override it to provide an optimized implementation.; - Use `CommitSealedPageV()` in RPageSinkBuf. If a buffered column contains only sealed pages, commit the whole range; via `CommitSealedPageV()`.; - If all buffered columns consist solely of sealed pages, coalesce all pages to be committed in a single `CommitSealedPageV()` call that includes a sealed page range per column. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #10719.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10775:1517,update,updated,1517,https://root.cern,https://github.com/root-project/root/pull/10775,1,['update'],['updated']
Deployability,This pull request extends the description of a ROOT compression block in the RNTuple binary format specification. ## Checklist:; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13549:135,update,updated,135,https://root.cern,https://github.com/root-project/root/pull/13549,1,['update'],['updated']
Deployability,This pull request fixes / improves the documentation for the `TDataMember::GetXyzTypeName()` member functions. ## Checklist:; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13250:132,update,updated,132,https://root.cern,https://github.com/root-project/root/pull/13250,1,['update'],['updated']
Deployability,"This pull request fixes a defect in the implementation of `RColumn::AppendV()`, which resulted in `FlushShadowWritePage()` not being called in certain circumstances. This in turn resulted in a [failed assertion](https://github.com/root-project/root/blob/master/tree/ntuple/v7/inc/ROOT/RColumn.hxx#L87) in the next call to `SwapWritePagesIfFull()`:; ```; Fatal: fWritePage[otherIdx].IsEmpty() violated at line 87 of `/home/jalopezg/CERN/repos/root/tree/ntuple/v7/inc/ROOT/RColumn.hxx'; ```. Given that `RPage::GrowUnchecked()` affects the number of elements returned by `RPage::GetNElements()`, the main write page should only be grown after the check for flushing the shadow page. ## Checklist:; - [X] tested changes locally; - [X] `ntuple_storage` test has been updated accordingly against this bug. This PR fixes #12742.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12743:763,update,updated,763,https://root.cern,https://github.com/root-project/root/pull/12743,1,['update'],['updated']
Deployability,"This pull request fixes a misuse of the `TVirtualCollectionProxy` iterator interface. Specifically the `Next()` and `DeleteTwoIterators()` functions take a pointer to the iterator itself (not a pointer-to-pointer). The misuse was most likely due to the lack of proper documentation on the `TVirtualCollectionProxy` class. The documentation for this class should be thus updated in a follow-up PR. The issue was originally introduced in https://github.com/root-project/root/pull/12380 and first noticed by @Nowakus on March 13, when trying to write a `xAOD::DataVector<T>` into RNTuple. This PR should fix the observed misbehavior. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12542:370,update,updated,370,https://root.cern,https://github.com/root-project/root/pull/12542,1,['update'],['updated']
Deployability,"This pull request fixes a number of failures in cling tests. See below for the specific tests that are fixed by this PR. After this PR and https://github.com/root-project/root/pull/12853, the remaining tests that still fail are; ```; 1: Failed Tests (2):; 1: Cling :: CodeUnloading/AtExit.C; 1: Cling :: MultipleInterpreters/MultipleInterpreters.C; ```; , which seem to have a common underlying cause: child interpreters are unable to resolve symbols defined in the parent. @hahnjo, @vgvassilev, do you have time to take a look?; ; ## Changes or fixes:; - SourceCall/ErrorMacro.C: the failure here is due to `diag::warn_falloff_nonvoid_function` not being promoted from warning to error. This should always be done, regardless of the ignoring state in `FilteringDiagConsumer`.; The failure became visible after merging https://github.com/root-project/root/pull/12654, given that `IgnorePromptDiags`; now defaults to 0 in `makeDefaultCompilationOptions()`.; - CodeUnloading/Macros.C: clang diagnostic verification was unhappy with the previous state of affairs. Move affected `expected-(warning|note)` markers to `Macros.h`.; - DynamicLibraryManager/callable_lib_L_AB_order1.C: `--enable-new-dtags` is needed in some toolchains to emit the new ELF dynamic tags, i.e. RUNPATH.; Per ld(1) manual page: `By default, the new dynamic tags are not created.`; - DynamicLibraryManager/cached_realpath.C: fetching the value of `errno` only makes sense after a failed call to; `realpath()`, i.e. if the return value of the function is NULL. Fix that. ## Checklist:; - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12855:1591,update,updated,1591,https://root.cern,https://github.com/root-project/root/pull/12855,1,['update'],['updated']
Deployability,"This pull request fixes a number of failures in cling tests. See below for the specific tests that are fixed by this PR. This is a backport of PR #12855.; ; ## Changes or fixes:; - SourceCall/ErrorMacro.C: the failure here is due to `diag::warn_falloff_nonvoid_function` not being promoted from warning to error. This should always be done, regardless of the ignoring state in `FilteringDiagConsumer`.; The failure became visible after merging https://github.com/root-project/root/pull/12654, given that `IgnorePromptDiags`; now defaults to 0 in `makeDefaultCompilationOptions()`.; - CodeUnloading/Macros.C: clang diagnostic verification was unhappy with the previous state of affairs. Move affected `expected-(warning|note)` markers to `Macros.h`.; - DynamicLibraryManager/callable_lib_L_AB_order1.C: `--enable-new-dtags` is needed in some toolchains to emit the new ELF dynamic tags, i.e. RUNPATH.; Per ld(1) manual page: `By default, the new dynamic tags are not created.`; - DynamicLibraryManager/cached_realpath.C: fetching the value of `errno` only makes sense after a failed call to; `realpath()`, i.e. if the return value of the function is NULL. Fix that. ## Checklist:; - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12856:1216,update,updated,1216,https://root.cern,https://github.com/root-project/root/pull/12856,1,['update'],['updated']
Deployability,This pull request fixes a remaining issue after merging #5913 and #10930 (see below). ## Changes or fixes:; - Remove the `.so` suffix and any trailing whitespace in the output generated by `libs.C`. This should fix the following errors found in the log:; ```; Error: file /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/html/libRMVA.so __coll__graph.svg not found.; ```; - Remove dead code in `libs.C`. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10943:481,update,updated,481,https://root.cern,https://github.com/root-project/root/pull/10943,1,['update'],['updated']
Deployability,"This pull request fixes an issue introduced accidentally in PR #12751. In particular, the `.exe` suffix is not expected in non-Windows builds. ## Checklist:; - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes some failures seen in the nightly builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12785:194,update,updated,194,https://root.cern,https://github.com/root-project/root/pull/12785,1,['update'],['updated']
Deployability,"This pull request fixes the remaining failing cling tests. See below for the concrete changes. @vgvassilev After the changes proposed in this PR, _all_ the cling tests are passing. ## Changes or fixes:; - Restore symbol lookup in child interpreters: prior to the upgrade to LLVM13, child interpreters used to also lookup symbols; in their parent. This PR introduces a `DefinitionGenerator` that allows for symbol lookup across different `IncrementalJIT` instances, which restores the old behavior.; This change fixes the following tests: CodeUnloading/AtExit.C, MultipleInterpreters/MultipleInterpreters.C.; - `cling::DeclExtractor::EnforceInitOrder`: do not use `ActOnReturnStmt()`, given that the scope returned by `m_Sema->getCurScope()` might be == m_Sema->TUScope which obviously is not a function scope; use `BuildReturnStmt()` instead.; This fixes the following crash:; ```; 1: https://github.com/root-project/root/pull/3 0x0000556b6a50389e clang::Sema::ActOnReturnStmt(clang::SourceLocation, clang::Expr*, clang::Scope*) (/home/jalopezg/CERN/repos/root/_build/interpreter/llvm/src/bin/cling+0x225389e); 1: https://github.com/root-project/root/pull/4 0x0000556b69215c56 cling::DeclExtractor::EnforceInitOrder(llvm::SmallVector<clang::Stmt*>&) (/home/jalopezg/CERN/repos/root/_build/interpreter/llvm/src/bin/cling+0xf65c56); 1: https://github.com/root-project/root/pull/5 0x0000556b69216788 cling::DeclExtractor::ExtractDecl(clang::FunctionDecl*) (/home/jalopezg/CERN/repos/root/_build/interpreter/llvm/src/bin/cling+0xf66788); 1: https://github.com/root-project/root/pull/6 0x0000556b69216a75 cling::DeclExtractor::Transform(clang::Decl*) (/home/jalopezg/CERN/repos/root/_build/interpreter/llvm/src/bin/cling+0xf66a75); ```. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #12455.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12900:263,upgrade,upgrade,263,https://root.cern,https://github.com/root-project/root/pull/12900,2,"['update', 'upgrade']","['updated', 'upgrade']"
Deployability,"This pull request fixes the remaining failing cling tests. See below for the concrete changes. This PR is a backport of #12900. ## Changes or fixes:; - Restore symbol lookup in child interpreters: prior to the upgrade to LLVM13, child interpreters used to also lookup symbols; in their parent. This PR introduces a `DefinitionGenerator` that allows for symbol lookup across different `IncrementalJIT` instances, which restores the old behavior.; This change fixes the following tests: CodeUnloading/AtExit.C, MultipleInterpreters/MultipleInterpreters.C.; - `cling::DeclExtractor::EnforceInitOrder`: do not use `ActOnReturnStmt()`, given that the scope returned by `m_Sema->getCurScope()` might be == m_Sema->TUScope which obviously is not a function scope; use `BuildReturnStmt()` instead.; This fixes the following crash:; ```; 1: https://github.com/root-project/root/pull/3 0x0000556b6a50389e clang::Sema::ActOnReturnStmt(clang::SourceLocation, clang::Expr*, clang::Scope*) (/home/jalopezg/CERN/repos/root/_build/interpreter/llvm/src/bin/cling+0x225389e); 1: https://github.com/root-project/root/pull/4 0x0000556b69215c56 cling::DeclExtractor::EnforceInitOrder(llvm::SmallVector<clang::Stmt*>&) (/home/jalopezg/CERN/repos/root/_build/interpreter/llvm/src/bin/cling+0xf65c56); 1: https://github.com/root-project/root/pull/5 0x0000556b69216788 cling::DeclExtractor::ExtractDecl(clang::FunctionDecl*) (/home/jalopezg/CERN/repos/root/_build/interpreter/llvm/src/bin/cling+0xf66788); 1: https://github.com/root-project/root/pull/6 0x0000556b69216a75 cling::DeclExtractor::Transform(clang::Decl*) (/home/jalopezg/CERN/repos/root/_build/interpreter/llvm/src/bin/cling+0xf66a75); ```. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #12455.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12902:210,upgrade,upgrade,210,https://root.cern,https://github.com/root-project/root/pull/12902,2,"['update', 'upgrade']","['updated', 'upgrade']"
Deployability,"This pull request fixes the unloading of member functions of templated classes. Specifically, the body of member functions of a templated class only gets instantiated when the function is first used, e.g. in this example below, the body for the member function `T f(T x)` (where `T` is a typename template argument for the templated struct `Foo`) will not get instantiated until `f()` is first used.; ```; `-ClassTemplateDecl; |-TemplateTypeParmDecl referenced typename depth 0 index 0 T; |-CXXRecordDecl struct Foo definition; | |-DefinitionData; | `-CXXMethodDecl f 'T (T)'; | |-ParmVarDecl 0x55e5787cac70 referenced x 'T'; | `-CompoundStmt; | `-ReturnStmt; | `-DeclRefExpr 'T' lvalue ParmVar 0x55e5787cac70 'x' 'T'; `-ClassTemplateSpecializationDecl struct Foo definition; |-DefinitionData; |-TemplateArgument type 'int'; | `-BuiltinType 'int'; |-CXXMethodDecl f 'int (int)' <<<< Instantiation pending; | `-ParmVarDecl x 'int':'int'; |-CXXConstructorDecl implicit used constexpr Foo 'void () noexcept' inline default trivial; ```; Such functions should not be deleted from the AST, but returned to the 'pending instantiation' state. Also, any function template instantiation, even if coming from an external AST source, needs some handling in order for it to be re-emitted the next time. ## Changes or fixes:; - Replace `StaticVarCollector` by simpler code. Static local variables always appear in the enclosing `DeclContext`; - Apply the patch described above. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary); - [x] Passes cling test suite. This PR fixes #10049, #6439, #7970, [ROOT-10848](https://sft.its.cern.ch/jira/browse/ROOT-10848) and [ROOT-8084](https://sft.its.cern.ch/jira/browse/ROOT-8084) and (hopefully also [ROOT-8245](https://sft.its.cern.ch/jira/browse/ROOT-8245)).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13565:1442,patch,patch,1442,https://root.cern,https://github.com/root-project/root/pull/13565,2,"['patch', 'update']","['patch', 'updated']"
Deployability,"This pull request fixes value printing of an expression of type `AutoType`, which ended up in calling the general fallback `printValue(const void *)`.; To call the appropriate overload, the deduced type should be used instead. ## Changes or fixes:; - Value printing of expressions of type `AutoType` use the deduced type instead.; - Update CREDITS.txt file. ## Checklist:; - [X] tested changes locally. This PR fixes [ROOT-9687](https://sft.its.cern.ch/jira/browse/ROOT-9687).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9949:333,Update,Update,333,https://root.cern,https://github.com/root-project/root/pull/9949,1,['Update'],['Update']
Deployability,"This pull request generalizes the `RDaos` backend to support multiple attribute keys per read-write operation, grouping requested blobs by their corresponding <object id, distribution key> pairs - defined as a struct `RDaosContainer::ROidDkeyPair(daos_obj_id_t, DistributionKey_t)`. . ## Changes or fixes:. - `RDaosObject::FetchUpdateArgs`, which prepares the arguments for requests to `daos_obj_fetch` or `daos_obj_update`. Now supports multiple attribute keys, I/O operation descriptors and I/O vectors, to send in one RW call to distributed storage.; - `RDaosContainer::RWOperation`, which interfaces between `RPageStorageDaos` and `RDaosObject`, supports multiple attribute keys and I/O vectors. ; - `RPageSourceDaos::LoadClusters` collects requested pages in an `unordered_map<ROidDkeyPair, RWOperation, ROidDkeyPair::Hash>` by their corresponding object IDs and distribution keys (currently, OID: unique page number and Dkey: const, so this PR should have no real effect on performance or results); - `RDaosContainer::VectorReadWrite` and its wrappers `WriteV`, `ReadV` now take an `unordered_map<ROidDkeyPair. RWOperation, ROidDkeyPair::Hash>` instead of `vector<RWOperation>`. This should allow for multiple requests spread throughout the container to be sent out in once call, each of which fetching or updating several blobs at once.; - `RDaosContainer::VectorReadWrite` implementation has been moved to `RDaos.cxx` file, de-templating the function argument (which is always expected to be either a `RDaosObject::Fetch` or a `::Update` non-static method). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10860:1538,Update,Update,1538,https://root.cern,https://github.com/root-project/root/pull/10860,2,"['Update', 'update']","['Update', 'updated']"
Deployability,"This pull request improves the support for storage of collections that use `TVirtualCollectionProxy`, which was initially landed in #11525. However, `TVirtualCollectionProxy` allows for traversing a collection using iterators, which should be faster than using `TVirtualCollectionProxy::At()`. Also, this interface avoids (where possible) an additional copy during element insertion. ## Changes or fixes:; - Switches from using `TVirtualCollectionProxy::{Size,At}()` to the use of iterators. After merging this PR, an implementation for the following functions is required instead: `TVirtualCollectionProxy::GetFunctionCreateIterators()`, `GetFunctionNext()`, and `GetFunctionDeleteTwoIterators`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11671.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12380:748,update,updated,748,https://root.cern,https://github.com/root-project/root/pull/12380,1,['update'],['updated']
Deployability,"This pull request integrates the `TF1Convolution` object into `TF1` so that one can directly create a `TF1` with a convolution in it. The syntax to construct such a convolution is:; `new TF1(""f"", ""CONV(f1, f2)"")`; Convolutions can also be nested with each other and `NSUM`s. Note: this is the corrected version of PR #846.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/853:18,integrat,integrates,18,https://root.cern,https://github.com/root-project/root/pull/853,1,['integrat'],['integrates']
Deployability,"This pull request integrates the `TF1Convolution` object into `TF1` so that one can directly create a `TF1` with a convolution in it. The syntax to construct such a convolution is:; `new TF1(""f"", ""CONV(f1, f2)"")`; Note that convolutions can be nested with each other and `NSUM`s. Also, if you are helping me merge, please note that this pull request contains within it the `TF1NormSum` code from PR #799. . **Edit:** Due to problems with the rebase, this PR has been closed. Please see PR #853 instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/846:18,integrat,integrates,18,https://root.cern,https://github.com/root-project/root/pull/846,1,['integrat'],['integrates']
Deployability,"This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details).; The implementation provided here also fixes issue #11732.; ; ## Changes or fixes:; - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays.; - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. ; - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`; - Add array unit tests. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11756:805,Update,Update,805,https://root.cern,https://github.com/root-project/root/pull/11756,2,"['Update', 'update']","['Update', 'updated']"
Deployability,"This pull request introduces ntuple management at the DAOS container level, extending support for more than one ntuple to populate a container. ## Changes or fixes:; - Support for up to 2\^32 - 1 ntuples in a DAOS container, by assigning an index to a previously-unused portion of the DAOS Object ID address space. The index thus induces a subspace dedicated for all objects belonging to a given ntuple. The zeroth space (index `0`) is reserved for any container-wide metadata objects that may need to be stored in the future.; - `ROOT::Experimental::Detail::RDaosContainerNTupleLocator` is a structure that concentrates the functionality for locating and retrieving stored metadata from an ntuple by its name.; - The structure hashes the name into a well-distributed 32-bit index. Collisions are expressly forbidden to simplify implementation; a different ntuple name must be provided to the sink upon creation if an ntuple stored in the container with another name happens to have the same hash (index).; - The sink (in `RPageSinkDaos` ctor) uses the locator to assign an index for a new ntuple, which may fail if the name's resulting hash collides with some other ntuple present unless the name matches. Overwriting (""recreating"") an existing ntuple is allowed in this context.; - The source (in `RPageSourceDaos::AttachImpl()`) locates the ntuple by the name to validate that it is indeed present in storage (otherwise, an exception is thrown). The objects that are read for this validation are reused as part of the ntuple metadata deserialization procedure when attaching. ; - Unit test coverage is provided for the following cases: write and read from different ntuples in a container; and attempt to open an ntuple that was not stored there. ## Checklist:. - [x] tested changes locally + cluster on single client with libdaos 2.2.0; - [x] updated the docs (if necessary). This PR fixes #10958",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11480:1847,update,updated,1847,https://root.cern,https://github.com/root-project/root/pull/11480,1,['update'],['updated']
Deployability,"This pull request is a backport of PR #13534 (a NFC; makes the code more readable) and PR #13565 (actual fix for unloading member functions of templated classes).; The aforementioned PRs have been reviewed separately. ## Changes or fixes:; For the actual list of changes, see; - https://github.com/root-project/root/pull/13534; - https://github.com/root-project/root/pull/13565. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary); - [x] Passes cling test suite . This PR fixes #10049, #6439, #7970, [ROOT-10848](https://sft.its.cern.ch/jira/browse/ROOT-10848) and [ROOT-8084](https://sft.its.cern.ch/jira/browse/ROOT-8084) and (hopefully also [ROOT-8245](https://sft.its.cern.ch/jira/browse/ROOT-8245)).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13618:430,update,updated,430,https://root.cern,https://github.com/root-project/root/pull/13618,1,['update'],['updated']
Deployability,This pull request is a backport of https://github.com/root-project/root/pull/12298 to the `v6-28-00-patches` branch. This fixes an unfortunate memory leak we introduced in https://github.com/root-project/root/pull/10775.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12377:100,patch,patches,100,https://root.cern,https://github.com/root-project/root/pull/12377,1,['patch'],['patches']
Deployability,"This pull request is a follow-up of #13197, improving the implementation of the internal class `RCollectionClassField::RCollectionIterableOnce`. ## Changes or fixes:; - Allow for faster iteration of elements in a collection whose elements are guaranteed to be contiguous in memory (e.g. a vector), i.e. the address of each element is known given the base pointer. For such cases, a non-zero value for the `stride` argument can be provided, thus avoiding an indirect call on each `operator++` call.; - Fix and clarify the use of read/write iterators on a proxied collection. The meaning of the `read` argument in many; TVirtualCollectionProxy functions is ""read from disk"", i.e. write in memory. This should improve the situation for the PR introducing support for `std::set<T>` fields (#12948). ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13235:846,update,updated,846,https://root.cern,https://github.com/root-project/root/pull/13235,1,['update'],['updated']
Deployability,"This pull request makes `UnsealPage()` a no-op for the page zero. To this end, the prototype of `RPageSource::UnsealPage()` had to be changed to return an `RPage`, per previous conversation. The buffer for the returned page is usually allocated using the `RPageAllocatorHeap`, and thus `RPageAllocatorHeap::DeletePage()` should be called to delete the returned object. Note that storage backends may still provide their own page unsealing code, e.g. for custom memory allocation. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #12958.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13208:531,update,updated,531,https://root.cern,https://github.com/root-project/root/pull/13208,1,['update'],['updated']
Deployability,"This pull request provides a page allocator that caches previous allocations up to a certain limit. The cache is thread-local and defaults to 16 pages per thread (~1MiB per thread for default-sized pages). This PR is largely based on the concepts in #8634. Reuse of memory allocations in `RPageAllocatorCache` not only reduces calls to the global allocator but also heap fragmentation. The global allocator is thread-safe albeit locked; thus, to also reduce contention, the cache in `RPageAllocatorCache` is thread-local.; Given the small size of the (per-thread) cache, the internal structure is a simple `std::deque`. Anything more complex is not justified at the moment of this writing. . **NOTE:** Performance evaluation (specially for the multi-threaded case) should be inserted here tomorrow. ## Changes or fixes:; - Add `RPageAllocatorCache`: this templated allocator returns pages that have at least the required capacity. `DeletePage()` does not immediately deallocate memory; instead, pages are returned to a thread-local cache, dropping the smallest allocated buffer if the cache is full. If a previous page cannot be recycled, the underlying allocator `AllocT` (`RPageAllocatorHeap` by default) is used to allocate memory.; - Change the signature of `RPageSource::UnsealPage()`: `SealPage()`, the counterpart of `UnsealPage()` takes an RPage and returns an RSealedPage. Make the interface of `UnsealPage()` symmetric and return an RPage.; - Make `UnsealPage()` use `RPageAllocatorCache` by default.; - Remove stray `RPageAllocator{File,Daos}` classes. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR supersedes #8634.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12279:1615,update,updated,1615,https://root.cern,https://github.com/root-project/root/pull/12279,1,['update'],['updated']
Deployability,"This pull request removes deprecated RDataFrame functions marked for removal in ROOT v6.30. These changes fix the warnings reported by the CI on pull requests targeting `master`, e.g. ; ```; .../build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes]; .../build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attribute]; ```. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). Sibling PR in roottest: https://github.com/root-project/roottest/pull/931",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11994:485,update,updated,485,https://root.cern,https://github.com/root-project/root/pull/11994,1,['update'],['updated']
Deployability,"This pull request updates the description of `TClass:CopyCollectionProxy()`, which was (sort of) misleading. Probably the name of the member function is not descriptive either, but that's a different topic. ## Checklist:; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11066:18,update,updates,18,https://root.cern,https://github.com/root-project/root/pull/11066,2,['update'],"['updated', 'updates']"
Deployability,"This pull request updates the release notes (sections ""Interpreter"", ""RNTuple"", and ""Build, Configuration, and Testing Infrastructure"") for the upcoming v6.28 release. ## Checklist:; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11871:18,update,updates,18,https://root.cern,https://github.com/root-project/root/pull/11871,5,"['Configurat', 'release', 'update']","['Configuration', 'release', 'updated', 'updates']"
Deployability,This pull request updates the release notes for ROOT v6.30 (changes up to 25-Jul). ## Checklist:; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13315:18,update,updates,18,https://root.cern,https://github.com/root-project/root/pull/13315,3,"['release', 'update']","['release', 'updated', 'updates']"
Deployability,This pull-request adds some missing information about RNTuple and the `latest-stable` branch in the v6.26 release notes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9905:106,release,release,106,https://root.cern,https://github.com/root-project/root/pull/9905,1,['release'],['release']
Deployability,This pull-request adds some missing information about RNTuple and the `latest-stable` branch in the v6.26 release notes. Backport of PR #9905.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9906:106,release,release,106,https://root.cern,https://github.com/root-project/root/pull/9906,1,['release'],['release']
Deployability,"This pull-request fixes a couple of issues related to `roottest` branch sync'ing. See issue #8783 for more information. ## Changes or fixes:; - Checkout the correct `roottest` head/tag if root is at `latest-stable`. If the current checked out branch is `latest-stable`, resolve it to the latest merged head/tag (i.e. second parent of latest-stable), and use that to clone `roottest`. These two commands illustrate the proposed behavior:; ```bash; $ git for-each-ref --points-at=latest-stable^2 --format=%(refname:short); v6-24-06; $ git clone -b v6-24-06 https://github.com/root-project/roottest.git; ```. - If the checked out ref in `root` is a tag (e.g. as a result of `$ git checkout v6-24-06`), `roottest` is not cloned at the expected revision. The previous implementation relied on `git rev-parse --abbrev-ref HEAD` to get the name of the checked out branch. While this works for branch heads, it fails for tags, i.e.; ```bash; $ git checkout v6-24-06; HEAD is now at 3b796f86a3 ""Update ROOT version files to v6.24/06.""; $ git rev-parse --abbrev-ref HEAD; HEAD; ```; The proposed solution in this case is to use `git for-each-ref` (or alternatively `git describe`), i.e.; ```bash; $ git for-each-ref --points-at=HEAD --format='%(refname:short)'; v6-24-06; ```. ## Checklist:; - [X] tested changes locally. This PR fixes #8783.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9025:986,Update,Update,986,https://root.cern,https://github.com/root-project/root/pull/9025,1,['Update'],['Update']
Deployability,This pull-request updates the release notes for v6.26 and the `CREDITS` file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9034:18,update,updates,18,https://root.cern,https://github.com/root-project/root/pull/9034,2,"['release', 'update']","['release', 'updates']"
Deployability,"This replaces the homegrown MnRefCountedPointer with std::shared_ptr. Using standard components is better, of course, and clang's address sanitizer has reported issues with MnRefCountedPointer, another reason to do this. I removed obsolete implementations of copy constructors, copy assignment operators and destructors from the affected classes, that just implemented the default behaviour. The patch currently looks very complicated, because I used the new clang-formatted style, but will become much more easy to read when #6917 is accepted.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6918:396,patch,patch,396,https://root.cern,https://github.com/root-project/root/pull/6918,1,['patch'],['patch']
Deployability,"This resolved the problem seen at: https://github.com/cms-sw/cmssw/issues/36908#issuecomment-1036397481; and fix #9899. The problem is the rules are applied to a data member nested inside an object nested inside; an STL collection that is a new data member of the class reco::HaloClusterCandidateHCAL,; since it is a new member compared to the layout on file, none of the objects; from the new; member down to the object on which the rules need to be run) are actually streamed and the; code gathering the information to run the rule got a bit lost ; it is likely (I am checking; as we speak) that in previous release the rule was not even attempted to be run ... which; might actually be the desired behavior in this specific case. The solution is to have GatherArtificialElements stop drilling through data members which; are not stored in the existing TTree.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9913:610,release,release,610,https://root.cern,https://github.com/root-project/root/pull/9913,1,['release'],['release']
Deployability,This revert https://github.com/vgvassilev/clang/commit/d5f1068de9. I have tested it in the cling and it breaks no new tests so I assume it; should be a NFC patch and we should remove it as it makes upstream; test suite failed.; Signed-off-by: Jun Zhang <jun@junz.org>. Let's test it in the ROOT repo.; CC @vgvassilev @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10830:156,patch,patch,156,https://root.cern,https://github.com/root-project/root/pull/10830,1,['patch'],['patch']
Deployability,"This revert is in place because python scripts now hang whenever the ROOT module is imported on macos 12, 13 and 14. This reverts commit 06b86c3a3408fec00eaa615790a9298bb9b7eb41. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13754:274,update,updated,274,https://root.cern,https://github.com/root-project/root/pull/13754,1,['update'],['updated']
Deployability,"This reverts a change from commit 64f299ce3c08501d3ba42e164ad6e40c151bb25b from https://github.com/root-project/root/pull/7973. The change was causing crashes in in python code. This PR is analogous to https://github.com/root-project/root/pull/7994. Even thought crashes were not observed in 6.20, I think it's better to also not use `TStorage:: ObjectAlloc` in 6.20 because it has not been used before either. In addition, the following [warnings](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-20-00-patches/LABEL=ROOT-centos7,SPEC=noimt,V=6-20/178/parsed_console/) that appeared in the nightly builds should be fixed by this commit:. `warning: missing initializer for member ‘std::array<int, 6000ul>::_M_elems’ [-Wmissing-field-initializers]`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7995:540,patch,patches,540,https://root.cern,https://github.com/root-project/root/pull/7995,1,['patch'],['patches']
Deployability,"This reverts a change from commit b874ed534f40ad80db3f8a3395d5dd44183811bb from https://github.com/root-project/root/pull/7972. The change was causing crashes in in python code. The problem was that I took the same MemPoolForRooSets code from master also for the old releases, not noticing that the old releases didn't use `TStroage::ObjectAlloc` yet, which caused problems. The problem can be reproduced with the following python code and is fixed with this commit (thanks @lmoneta for having providing the code):; ```Python; import ROOT; x = ROOT.RooRealVar(""x"",""x"",1); d = ROOT.RooDataSet(""d"",""d"",ROOT.RooArgSet(x)); w = ROOT.RooWorkspace(""w""); getattr(w, 'import')(d); w.Print(); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7994:267,release,releases,267,https://root.cern,https://github.com/root-project/root/pull/7994,2,['release'],['releases']
Deployability,"This reverts ae9f8ae62553f9150fdee1f8739be6996d539694. While the patch makes sense to me, it breaks a lot of iminuit's tests. I cannot say why, but the results are very far off in some cases. I can provide a log of the failing tests as proof if needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7085:65,patch,patch,65,https://root.cern,https://github.com/root-project/root/pull/7085,1,['patch'],['patch']
Deployability,This reverts commit 0363aed.; Use llvm-upstream commit instead!# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12831:158,update,updated,158,https://root.cern,https://github.com/root-project/root/pull/12831,1,['update'],['updated']
Deployability,"This reverts commit 1e8c04dd4beff8fc3d34cfd21e45358e85ae0f79.; In this commit, main idea was to use clang binary to retrieve information; about resource-clang-dir. Sadly ROOT patched LLVM/Clang is built; without clang binary and ROOT CMake crash then with next error:. -- /home/oksana/CERN_sources/llvm-clang-root/inst/bin; CMake Error at core/clingutils/CMakeLists.txt:80 (message):; Cannot determine clang resource directory path",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4259:175,patch,patched,175,https://root.cern,https://github.com/root-project/root/pull/4259,1,['patch'],['patched']
Deployability,"This reverts commit 2ee691da61ca51e4dd857ac8c88f778948fb49a7, it breaks configuration with the latest XRootD 5.6.3, for example already found in EPEL.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14170:72,configurat,configuration,72,https://root.cern,https://github.com/root-project/root/pull/14170,1,['configurat'],['configuration']
Deployability,This reverts commit 5f7fd3aa6007c04e9d761816fea6d9b3146bd79a. clang.git patch id: 4412120,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/684:72,patch,patch,72,https://root.cern,https://github.com/root-project/root/pull/684,1,['patch'],['patch']
Deployability,"This reverts commit 8bb0a978a34e8f026a98642afe118e15d2356b6c. With ACLiC, which means if you do ""root.exe hsimple.C+"", ROOT generates; library for hsimple.C and execute this library instead of interpreting it at; runtime. This didn't work with our ""preloading modules"" infrastructure,; as it's not even interpreting. We can fix this by; 1. Adding NEEDED section when generating so files.; This is like a ""static linker"" solution, which means we'll change; rootcling_impl to properly add dependency libraries.; 2. Try to get callback from library; I think this makes ACLiC slower, so I like the 1st solution. However, for now, let's just revert this patch. edit:; https://gist.github.com/yamaguchi1024/644b7ee431fce460fb27c1402e92c903; https://gist.github.com/yamaguchi1024/d5a69666d1e10f0b2cfc176a07792420",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2187:649,patch,patch,649,https://root.cern,https://github.com/root-project/root/pull/2187,1,['patch'],['patch']
Deployability,This reverts commit 8e355c2c565af555f75209ea0f1c2ce255f85cc6 from #10301. /cc @ellert @bellenot . # This Pull request:. ## Changes or fixes:. Sets `builtin_gtest` to `OFF` by default. It is already the case that `builtin_gtest` will be enabled automatically if `GTest` is not found. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12149:334,update,updated,334,https://root.cern,https://github.com/root-project/root/pull/12149,1,['update'],['updated']
Deployability,This reverts commit d6b623fff5a6d47ae66ec6db09dad26e987deb4e to no longer restrict numba versions to <0.6 which also unlocks support for numpy 2.0. The corresponding PR in rootest (https://github.com/root-project/roottest/pull/1162) updates the error style in the numba test to be backwards compatible. The numpy version is temporarily locked to below 2.0 to prevent both upgrades at the same time. - [X] tested changes locally. Fixes https://github.com/root-project/root/issues/16201,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16209:233,update,updates,233,https://root.cern,https://github.com/root-project/root/pull/16209,2,"['update', 'upgrade']","['updates', 'upgrades']"
Deployability,"This reverts commit eb52895d22aaad0a88d47b8e7bb18c7f47ff35be. As discussed, we should try to make clang parse input containing solely a function-style cast (e.g. `bool(i)`) as an expression instead of a declaration. In the interim, this patch is reverted to silence unwanted warnings in third-party code.; The PR https://github.com/root-project/root/pull/9695 will also be closed. ## Checklist:; - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064) and reopens issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9706:237,patch,patch,237,https://root.cern,https://github.com/root-project/root/pull/9706,1,['patch'],['patch']
Deployability,"This reverts https://github.com/vgvassilev/clang/commit/a5ee33ae48. This patch previous tried to solve some problems with virtual files, but; when trying to upstream it, it brokes the tests below:. * Modules/module-file-modified.c; * Modules/explicit-build-missing-files.cpp",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10633:73,patch,patch,73,https://root.cern,https://github.com/root-project/root/pull/10633,1,['patch'],['patch']
Deployability,"This set of patches makes THDFSFile work again. ; It also enables CMake build and allows linking against libhdfs3 (experimental native HDFS client implementation). Kind of major change: HDFS URLs are now absolute instead of relative as it was before. I.e. one have to use ""hdfs:///user/username/dir1/file2.root"" notation to access file in the home directory. ; This makes HDFS URLs somewhat standard in the sense that they could be used interchangeably between ROOT and Hadoop API and command-line utilities.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/94:12,patch,patches,12,https://root.cern,https://github.com/root-project/root/pull/94,1,['patch'],['patches']
Deployability,"This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5359:71,patch,patch,71,https://root.cern,https://github.com/root-project/root/pull/5359,1,['patch'],['patch']
Deployability,This should be code also for next ROOT 6.26 release. Next JSROOT version will have many changes and will be applied only after 6.26,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9336:44,release,release,44,https://root.cern,https://github.com/root-project/root/pull/9336,1,['release'],['release']
Deployability,This should be more accurate than the current check. Follow up to #3096 and will remove a patch for the conda package.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3413:90,patch,patch,90,https://root.cern,https://github.com/root-project/root/pull/3413,1,['patch'],['patch']
Deployability,This should fix the regressed runtime_cxxmodules on osx. Patch by Alexander Penev(@alexander-penev)!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5302:57,Patch,Patch,57,https://root.cern,https://github.com/root-project/root/pull/5302,1,['Patch'],['Patch']
Deployability,This should reduce the amount of patches we have in clang making the PCH; relocatable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/893:33,patch,patches,33,https://root.cern,https://github.com/root-project/root/pull/893,1,['patch'],['patches']
Deployability,"This slightly changes lookup order: Namely, the system-folder ""/usr/include/postgresql""; is now preferred over ""/usr/include/"" even if both container libpq-fe.h.; This finds the correct path on a standard Gentoo installation, where ""/usr/include/postgresql""; is a symlink to the folder with all include-files for the user-selected postgresql-version,; while ""/usr/include/libpq-fe.h"" is a single symlink provided for backwards-compatibility. Since ROOT uses also e.g. ""pg_config.h"", selecting ""/usr/include/"" over ""/usr/include/postgresql""; leads to failure on Gentoo. I hope this will not break any other existing setups but I don't see how it should. ; That should prevent any downstream-patching which Gentoo is doing right now for old-style configure once it has moved to cmake.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/159:212,install,installation,212,https://root.cern,https://github.com/root-project/root/pull/159,2,"['install', 'patch']","['installation', 'patching']"
Deployability,This supersedes https://github.com/root-project/root/pull/6248 and should fix the case when JupyROOT is installed on Python directories. Uses the same solution implemented by @eguiraud for `libROOTPythonizations`:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/CMakeLists.txt#L145-L146,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6312:104,install,installed,104,https://root.cern,https://github.com/root-project/root/pull/6312,1,['install'],['installed']
Deployability,"This syncs `core/imt/CMakeLists.txt` with the `master` branch, which does not have the problem of installed ROOT pointing to the build directory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3763:98,install,installed,98,https://root.cern,https://github.com/root-project/root/pull/3763,1,['install'],['installed']
Deployability,"This teaches again the IncrementalExecutor to emit only one module at a time. In the old MCJIT days, the API worked with module sets and cling assumed llvm's jit infrastructure is moving in this direction. LLVM 5.0 moves away from this concept and works with single llvm::Modules. This patch will make the upgrade to LLVM 5.0 smoother.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1050:286,patch,patch,286,https://root.cern,https://github.com/root-project/root/pull/1050,2,"['patch', 'upgrade']","['patch', 'upgrade']"
Deployability,"This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:; ```; pip install -r requirements.txt; ```; it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux.; Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:; ```; /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'me",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15272:65,install,install,65,https://root.cern,https://github.com/root-project/root/pull/15272,4,"['configurat', 'install']","['configuration', 'install', 'installed']"
Deployability,This the upstream version of a patch to ROOT meta that exposes the `isAggregate()` class property from Cling. The current `master` branch of CPyCppyy relies on this property. Originally implemented in this commit by @wlav:; https://github.com/wlav/cppyy-backend/commit/fe1c0f114800ab45b8136fa74ade3a71c137e86f. This PR is part of the larger effort to sync `CPyCppyy`:; https://github.com/root-project/root/pull/14507,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14596:31,patch,patch,31,https://root.cern,https://github.com/root-project/root/pull/14596,1,['patch'],['patch']
Deployability,This updates Minuit2 build options and uses proper configuration for OpenMP and MPI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1699:5,update,updates,5,https://root.cern,https://github.com/root-project/root/pull/1699,2,"['configurat', 'update']","['configuration', 'updates']"
Deployability,This updates the checked in version of the TMVA User's guide to reflect the state of the tex sources.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2465:5,update,updates,5,https://root.cern,https://github.com/root-project/root/pull/2465,1,['update'],['updates']
Deployability,"This updates the following cppyy packages to the indicated versions:; - cppyy: cppyy-1.5.3; - cppyy_backend: clingwrapper-1.10.3; - CPyCppyy: CPyCppyy-1.9.3. This incorporates a fix for the issue reported here:; https://bitbucket.org/wlav/cppyy/issues/160/memoryregulator-and-the-deletion-of-python. and also this PR:; https://bitbucket.org/wlav/cppyy-backend/pull-requests/21/fix-logic-and-silence-wparentheses-warning. There are still two remaining Cppyy issues not solved yet by this update, which affect a few tests:; https://bitbucket.org/wlav/cppyy/issues/136/item-assignment-not-working-in-templated; https://bitbucket.org/wlav/cppyy/issues/145/enum-values-not-defined-as-constants",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4386:5,update,updates,5,https://root.cern,https://github.com/root-project/root/pull/4386,2,['update'],"['update', 'updates']"
Deployability,"This warning was first seen in rootbench:. ```c++; root-benchmark/BUILDTYPE/Release/COMPILER/gcc62/LABEL/performance-cc7/build/include/ROOT/TDFActionHelpers.hxx:745:34:; warning: parameter ‘slot’ set but not used [-Wunused-but-set-parameter]; void SetBranches(unsigned int slot, BranchTypes&... values, StaticSeq<S...> /*dummy*/); ^~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1811:76,Release,Release,76,https://root.cern,https://github.com/root-project/root/pull/1811,1,['Release'],['Release']
Deployability,"This was applied from a .patch from the PR GooFit/Minuit2#1 from @gudlaugu. All credit/blame should be directed to @gudlaugu, I'm just the middleman. This patch is useful because MPI 3 no longer even includes support for the C++ bindings. I've added one small obvious fix to warnings, but otherwise all credit/blame should be directed to @gudlaugu. Original discussion in #1689.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1843:25,patch,patch,25,https://root.cern,https://github.com/root-project/root/pull/1843,2,['patch'],['patch']
Deployability,"This was applied from a `.patch` from the PR GooFit/Minuit2#1 from @gudlaugu. All credit/blame should be directed to @gudlaugu, I'm just the middleman. This patch is useful because apparently MPI 3 no longer even includes support for the C++ bindings. Once #1680 is merged, this will be much easier to test. For future reference, the ugly use of environment variables instead of CMake option for MPI options in the main ROOT::Minuit2 CMakeLists.txt needs to be fixed, and also could be moved to FindMPI instead of the current hardcoded method.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1689:26,patch,patch,26,https://root.cern,https://github.com/root-project/root/pull/1689,2,['patch'],['patch']
Deployability,This was detected by redundant loading on libRooStats when we are trying; to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol; but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending; on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2764:203,patch,patch,203,https://root.cern,https://github.com/root-project/root/pull/2764,1,['patch'],['patch']
Deployability,"This was naturally available before commit 92807f3591 (backported in commit 281a162ace) from LLVM's configuration file. Fixes #13597, applies https://github.com/root-project/root/pull/13598 to `v6-28-00-patches` with the old, pre-monorepo path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13599:100,configurat,configuration,100,https://root.cern,https://github.com/root-project/root/pull/13599,2,"['configurat', 'patch']","['configuration', 'patches']"
Deployability,This was naturally available before commit 92807f3591 from LLVM's configuration file. Fixes #13597,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13598:66,configurat,configuration,66,https://root.cern,https://github.com/root-project/root/pull/13598,1,['configurat'],['configuration']
Deployability,"This was the intent, the regex was simply broken and did not take the trailing versioning part into account.; Now, -patches as minor "".99"", otherwise as expected.; This can be improved in the future by also adding the commit count to patches, aka 6.16.06.42 for the 42th commit after 6.16.06.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3864:116,patch,patches,116,https://root.cern,https://github.com/root-project/root/pull/3864,2,['patch'],['patches']
Deployability,"This will be required for future LLVM upgrades that rely on a common `cmake/` directory next to `clang/` and `llvm/`. ---. To have any chance at reviewing this change, the mechanical moving is in the first commit and the other two commits are the actual changes (build system, then `llvm-diff` workflow). I will squash the commits on merge because the state after the first commit obviously won't build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13049:38,upgrade,upgrades,38,https://root.cern,https://github.com/root-project/root/pull/13049,1,['upgrade'],['upgrades']
Deployability,This works better for me (i.e. I have multiple clang versions installed and it works as well). Please check that it works for you and let me know so I can merge. The Jenkins builds are not able to actually test this.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3807:62,install,installed,62,https://root.cern,https://github.com/root-project/root/pull/3807,1,['install'],['installed']
Deployability,"Through continuous changes in TFile/TDirectoryFile functionality,; sub-directory support in TXMLFile was lost. Now reintroduced again. Make similar changes for TSQLFile (only for historical reasons, seems to be nobody using it). Reformat source code with clang format",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1386:8,continuous,continuous,8,https://root.cern,https://github.com/root-project/root/pull/1386,1,['continuous'],['continuous']
Deployability,Title object always created - even when empty.; But if drawn - it must be hidden to remove TPave decoration. Fix problem with TFrame when `THStack` and `TMultiGraph` are drawn - frame object is required. Update JSROOT with recent changes in master,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15718:204,Update,Update,204,https://root.cern,https://github.com/root-project/root/pull/15718,1,['Update'],['Update']
Deployability,"To avoid fallback to numeric differentiation because the function is not; inlined. The pullbacks were automatically generated with Clad master, and then; manually simplified. It was carefully checked that the updated unit; tests cover all code branches of the pullback.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15501:209,update,updated,209,https://root.cern,https://github.com/root-project/root/pull/15501,1,['update'],['updated']
Deployability,"To be able compile with `-Dcxxmodules=ON`, one has to avoid `${CMAKE_BINARY_DIR}/include` in all include paths. Otherwise compiler can find same include (like `TString.h`) in ROOT source directories and in `${CMAKE_BINARY_DIR}/include`. But many builtins using `${CMAKE_BINARY_DIR}/include` to install their headers and therefore library appends that path to public include paths. . This PR tries to copy `VDT` and `TBB` includes into `ginclude` directory and use this directory for the compilation. . Solves compilation problem on Linux platform with `cxxmodules` enabled. Probably same adjustment could be done for other builtins",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5445:294,install,install,294,https://root.cern,https://github.com/root-project/root/pull/5445,1,['install'],['install']
Deployability,To be done for this PR:; - Update math/unuran directory. and for next iteration try to move components to use only ROOT_STANDARD_LIBRARY_PACKAGE():; genvector & smatrix.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2737:27,Update,Update,27,https://root.cern,https://github.com/root-project/root/pull/2737,1,['Update'],['Update']
Deployability,To differentiate between versions installed on runners with identical labels.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15934:34,install,installed,34,https://root.cern,https://github.com/root-project/root/pull/15934,1,['install'],['installed']
Deployability,To enable setting default draw option before drawing a graph like TH1::SetOption. Fixes https://github.com/root-project/root/issues/14539. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14686:234,update,updated,234,https://root.cern,https://github.com/root-project/root/pull/14686,1,['update'],['updated']
Deployability,"To use C++ modules during runtime we need to generate a modulemap; and install it alongside the ROOT headers. However, right now; we need to turn on cxxmodules to generate a modulemap, which would; force experiments to fulfill all the depndencies that cxxmodules; brings with it (that is, a modern clang that can build ROOT with C++; modules). This patch untangles the modulemap generation from the cxxmodules; option, so that we always generate a modulemap even when cxxmodules; is turned off. We now also install the modulemap alongside; the ROOT headers. No functional change for normal ROOT expected here, as the modulemap; will just be ignored without having runtime C++ modules enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/700:71,install,install,71,https://root.cern,https://github.com/root-project/root/pull/700,3,"['install', 'patch']","['install', 'patch']"
Deployability,"Today I read User's Guide and spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them.; I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:; https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3; is the use the TTree::Show method; \- to use; 14.4; the branches and the leaves, is TTree::Print.; \- no need for a comma; 14.6; boxes"".; \- no need for the quote.; witch is marked; \- which is marked; exposed expression; \- I think that would sound better as ""set expression"" or another adjective.; Below them there are two text widgets; \- possible, but I think 'there' is redundant here.; for specifying; \- to specify; \-\- I think this text should be checked by a native speaker for articles and other issues.; When the “Rec” box is checked, the Draw and Scan commands; \- no need for quotes around Rec (or add them around Draw and Scan); 14.7; This picture shows the TTree class:; \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line!; 14.7.3; save all branch buffers every n byte.; \- bytes.; 14.7.4; When a TTree is memory resident, you set it up so that it retains retain only the last few entries.; \- retains; For example, this can be very useful for monitoring purpose.; \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase.; 14.7.6; The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number.; \- allows to add to the tree any user\-defined object that doesn't depend on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284:381,release,release,381,https://root.cern,https://github.com/root-project/root/issues/7284,1,['release'],['release']
Deployability,"Today, I discovered that `ROOT::TestSupport` does not always work as intended: Consider a ROOT7 build without IMT, and the unit tests `tree/ntuple/v7/test/ntuple_extended` and `tree/ntuple/v7/test/ntuple_storage`. Both call `ROOT::EnableImplicitMT()` which results in a warning (this should be fixed separately). `TestSupport.cxx` has a `ForbidDiagnostics noDiagCheckerInstance` that should call `SetErrorHandler` and fail the test if there is an unexpected diagnostic. It turns out this works fine for `ntuple_extended` (which is currently failing in configurations without IMT), but not for `ntuple_storage`. The reason seems to be that `ntuple_storage` doesn't use any other code from `ROOT::TestSupport`, and because it's a static library (since https://github.com/root-project/root/pull/9528) the linker can just skip it. (This was different for the object library before, there you link in the individual object files.). I'm not sure what the best solution is: Is it possible and reasonable to install object libraries? If not, an ugly approach is to emit an undefined symbol from `TestSupport.hxx` that will force the linker to add the static library...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12828:552,configurat,configurations,552,https://root.cern,https://github.com/root-project/root/issues/12828,2,"['configurat', 'install']","['configurations', 'install']"
Deployability,Trouble with CMake Integration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:19,Integrat,Integration,19,https://root.cern,https://github.com/root-project/root/issues/7982,1,['Integrat'],['Integration']
Deployability,Try to fix build of llvm in Release mode for multi-configuration gene…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4400:28,Release,Release,28,https://root.cern,https://github.com/root-project/root/pull/4400,2,"['Release', 'configurat']","['Release', 'configuration']"
Deployability,Try to simply update xrootd version (by M.K.Simon),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8963:14,update,update,14,https://root.cern,https://github.com/root-project/root/pull/8963,2,['update'],['update']
Deployability,"Two implementations are provided, i.e. for Python versions older than 3.8, for which PEP 587 is not in force, and newer. # This Pull request:. ## Changes or fixes:; Implements TPython::ExecFile for Python 3. ## Checklist:. - [v] tested changes locally; - [] updated the docs (if necessary). This PR fixes #9058",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13532:258,update,updated,258,https://root.cern,https://github.com/root-project/root/pull/13532,1,['update'],['updated']
Deployability,Two optimizations fro the ci:; 1) Use zstd with 8 threads to compress ROOT builds for nightlies and releases.; 2) Use gzip compression level 2 instead of level 6 to compress artifacts.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15802:100,release,releases,100,https://root.cern,https://github.com/root-project/root/pull/15802,1,['release'],['releases']
Deployability,"Two substantive changes:; 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d); 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look); 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. test.py; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):; print(f""call attempt {i}""); try:; res = ROOT.call_helper(helper); print(""helper call succeeded:"", res); except Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12449:376,rolling,rolling,376,https://root.cern,https://github.com/root-project/root/pull/12449,2,"['rollback', 'rolling']","['rollback', 'rolling']"
Deployability,Two tweaks for release notes. [Skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5875:15,release,release,15,https://root.cern,https://github.com/root-project/root/pull/5875,1,['release'],['release']
Deployability,Two updates to clingwrapper for memory management,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16014:4,update,updates,4,https://root.cern,https://github.com/root-project/root/pull/16014,1,['update'],['updates']
Deployability,"UPDATE:; The RDataFrame created in each task can now be modified with the correct entry range of the task via an internal function. The internal representation in case of an RDataFrame with no data source has been modified to store a pair of integers indicating the range, instead of only one integer. This is only for internal purposes, the public API is unchanged. See https://github.com/root-project/roottest/pull/923 for test changes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11843:0,UPDATE,UPDATE,0,https://root.cern,https://github.com/root-project/root/pull/11843,1,['UPDATE'],['UPDATE']
Deployability,Unable to install pytest on MacOS with python2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6686:10,install,install,10,https://root.cern,https://github.com/root-project/root/issues/6686,1,['install'],['install']
Deployability,"Under some circumstances TStreamerInfo::BuildOld crashes in TStreamerInfo::AddReadAction. See original report: cms-sw/cmsdist#6314 (comment). With the recent updates to switch more std::pair's TClass to be auto-generated from the typename (as opposed to generated from interpreter information), more STL's collection TClass have their StreamerInfo build earlier. In the case above, a file is being fast cloned and thus the StreamerInfo to the new file. In particular there is this sequence of operation. Get TClass for pair(type1, vector<type2>>; ** At this point the dictionary for vector<type2> is not loaded.; ** The TClass for the pair is generated nonetheless; *** This requires the building of the StreamerInfo for the TClass for vector<type2>, let's call it c1 but (intentionaly because it is not needed yet) does not trigger the loading of the dictionary the vector<type2>; Some other operation requires the loading of the library that contains the dictionary for vector<type2>; ** SInce c1 exists, it is replaced by the dictionary generated TClass for vector<type2>, let's call it c2; ** Part of this replacement is to transfer c1's StreamerInfo into c2 (after 'reseting` it's state); Then the StreamerInfos are copied form the input file to the output; ** This includes ""building"" and ""compiling"" the StreamerInfo; *** This crasesd when calling AddReadAction. An STL collection's TClass (like c1 and c2)'s StreamerInfo contains an artificial StreamerElement (for infrastructures purposes) that points back to its owner. So when the StreamerInfo is created it has internally a pointer to c1. The deficiency is that whenc1 is replaced by c2 and then deleted, the StreamerInfo was not updated and thus the later building of the StreamerInfo was using a stale pointer to c1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6768:158,update,updates,158,https://root.cern,https://github.com/root-project/root/pull/6768,4,['update'],"['updated', 'updates']"
Deployability,"Under some circumstances TStreamerInfo::BuildOld crashes in TStreamerInfo::AddReadAction. See original report: https://github.com/cms-sw/cmsdist/pull/6314#issuecomment-721115953. With the recent updates to switch more std::pair's TClass to be auto-generated from the typename (as opposed to generated from interpreter information), more STL's collection TClass have their StreamerInfo build earlier. In the case above, a file is being fast cloned and thus the StreamerInfo to the new file. In particular there is this sequence of operation. * Get `TClass` for `pair(type1, vector<type2>>`; ** At this point the dictionary for `vector<type2>` is not loaded.; ** The TClass for the pair is generated nonetheless; *** This requires the building of the `StreamerInfo` for the `TClass` for `vector<type2>`, let's call it `c1` but (intentionaly because it is not needed yet) does not trigger the loading of the dictionary the `vector<type2>`; * Some other operation requires the loading of the library that contains the dictionary for `vector<type2>`; ** SInce `c1` exists, it is replaced by the dictionary generated TClass for `vector<type2>`, let's call it `c2`; ** Part of this replacement is to transfer `c1`'s StreamerInfo into `c2` (after 'reseting` it's state); * Then the `StreamerInfos` are copied form the input file to the output ; ** This includes ""building"" and ""compiling"" the StreamerInfo; *** This crasesd when calling `AddReadAction`. An STL collection's TClass (like `c1` and `c2`)'s StreamerInfo contains an artificial StreamerElement (for infrastructures purposes) that points back to its owner. So when the `StreamerInfo` is created it has internally a pointer to `c1`. The deficiency is that when`c1` is replaced by `c2` and then deleted, the StreamerInfo was not updated and thus the later building of the `StreamerInfo` was using a stale pointer to `c1`. ```; #4 <signal handler called>; #5 0x00002af4f3e84290 in TStreamerInfo::AddReadAction (this=0x2af506a31000, readSequence=0x2af5",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6767:195,update,updates,195,https://root.cern,https://github.com/root-project/root/issues/6767,1,['update'],['updates']
Deployability,Unfortunately I can't install Win64 version of Root 6.26 becasue of virus detection. See error during unzip and Btdefender report. ![error1](https://user-images.githubusercontent.com/75624059/193414303-f5b7d9c8-4837-431d-b7e2-e7f04c94e34b.JPG); ![error2](https://user-images.githubusercontent.com/75624059/193414309-ece88fe7-b75c-47ce-ac39-620b567ba7b3.JPG),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11473:22,install,install,22,https://root.cern,https://github.com/root-project/root/issues/11473,1,['install'],['install']
Deployability,Unify builtin PCRE configuration for UNIX and Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3284:19,configurat,configuration,19,https://root.cern,https://github.com/root-project/root/pull/3284,1,['configurat'],['configuration']
Deployability,"Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:; Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:; An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally; - [ not needed ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11183:1341,update,updated,1341,https://root.cern,https://github.com/root-project/root/pull/11183,1,['update'],['updated']
Deployability,"Unsplit fields update the extra type info block in the RNTuple meta-data, which needs to be explicitly merged. Also, the unsplit field revealed a lifetime issue with the output model, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15729:15,update,update,15,https://root.cern,https://github.com/root-project/root/pull/15729,1,['update'],['update']
Deployability,"Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. ; This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`.; But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:; ```; <script type=""importmap"">; {; ""imports"": {; ""jsroot"": ""./jsrootsys/modules/main.mjs"",; ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",; ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",; ""jsrootsys/"" :: ""./jsrootsys/""; }; }; ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. ; But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. ; Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes.; Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16042:1722,Update,Update,1722,https://root.cern,https://github.com/root-project/root/pull/16042,1,['Update'],['Update']
Deployability,"Up to now there was no way to draw open marker symbols or marker symbols consisting of lines with higher linewidths than the default 1.; I looked into several ways to implement this feature and at the end just added additional marker smbols above the current maximum of 50 with wider lines as proposed by @couet in #4721 . This example plot demonstrates the feature:; ![c2](https://user-images.githubusercontent.com/5320187/72336265-b7977a80-36c0-11ea-8d25-3e3aa0697211.png). Please note that I tested the feature as far as I could. However, I don't have a ROOT installation on Windows or a Mac, so I could not test the corresponding implementations which is why I consider further tests (and especially a build test) mandatory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4772:562,install,installation,562,https://root.cern,https://github.com/root-project/root/pull/4772,1,['install'],['installation']
Deployability,Update --help option,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5206:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5206,1,['Update'],['Update']
Deployability,Update .gitignore,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4412:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/4412,1,['Update'],['Update']
Deployability,"Update 6.22 Release notes for TMVA , Math and Histogram Library",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5783:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5783,2,"['Release', 'Update']","['Release', 'Update']"
Deployability,Update 6.32 release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15611:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/15611,2,"['Update', 'release']","['Update', 'release']"
Deployability,Update CMake policy settings to use CMake version 3.4.3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/958:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/958,1,['Update'],['Update']
Deployability,Update ChangeLabel and GetNlabels helps,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10290:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/10290,1,['Update'],['Update']
Deployability,Update Davix builtin,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1766:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/1766,1,['Update'],['Update']
Deployability,Update Delaunay2D doc.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14066:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/14066,1,['Update'],['Update']
Deployability,Update Doxyfile to doxygen 1.9.3 (doxygen -u),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9111:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/9111,1,['Update'],['Update']
Deployability,Update Doxyfile to doxygen version 1.9,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8061:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/8061,1,['Update'],['Update']
Deployability,Update Doxyfile to the version of doxygen ROOT is using ie: 1.9.8,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13204:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/13204,1,['Update'],['Update']
Deployability,Update Enable If pattern in GenVector Vc test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/431:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/431,1,['Update'],['Update']
Deployability,Update FSF address,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/270:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/270,1,['Update'],['Update']
Deployability,Update FindArrow.cmake,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5405:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5405,1,['Update'],['Update']
Deployability,Update FindCFITSIO.cmake,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3942:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3942,1,['Update'],['Update']
Deployability,Update FindZSTD.cmake,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14078:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/14078,1,['Update'],['Update']
Deployability,Update GitHub Actions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11677:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/11677,1,['Update'],['Update']
Deployability,"Update IncrementalCUDADeviceCompiler.cpp - change string comparison to exact match for ""-include""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16196:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/16196,1,['Update'],['Update']
Deployability,Update JSROOT after 7 release. Fix several minor issues in RCanvas,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10526:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/10526,2,"['Update', 'release']","['Update', 'release']"
Deployability,Update JSROOT and ui5 code,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3885:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3885,1,['Update'],['Update']
Deployability,"Update JSROOT and ui5 code, v6.18",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3886:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3886,1,['Update'],['Update']
Deployability,Update JSROOT release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1447:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/1447,2,"['Update', 'release']","['Update', 'release']"
Deployability,Update JSROOT with `TScatter`. Also add batch mode flag when creating JSON. Data may differ when JSON created for image production or for; interactive drawing. Like interactively TF1 can fail and request new; data with saved buffers. In batch mode saved buffer must be there; to be able do fallback immediately.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13180:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/13180,1,['Update'],['Update']
Deployability,"Update JSROOT, fix small typo in geometry viewer code [skip-ci]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8970:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/8970,1,['Update'],['Update']
Deployability,"Update JSROOT, where TRatioPlot now supported. Make use of functionality: https://jsroot.gsi.de/dev/examples.htm#tratioplot_r6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7299:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7299,1,['Update'],['Update']
Deployability,Update JsMVA imports,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15427:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/15427,1,['Update'],['Update']
Deployability,Update LLVM build type setup for multi-configuration generators,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4348:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/4348,2,"['Update', 'configurat']","['Update', 'configuration']"
Deployability,Update LinkDef3.h,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/762:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/762,1,['Update'],['Update']
Deployability,Update MakeProject to use unique_ptr rather than auto_ptr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3861:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3861,1,['Update'],['Update']
Deployability,Update Math links,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7166:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7166,1,['Update'],['Update']
Deployability,Update PR of Oliver,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/182:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/182,1,['Update'],['Update']
Deployability,Update RCompressionSettings struct with enum value of ZSTD default c…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4839:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/4839,1,['Update'],['Update']
Deployability,Update RDF code owners,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2261:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/2261,1,['Update'],['Update']
Deployability,Update README.AUTH,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14206:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/14206,1,['Update'],['Update']
Deployability,Update README.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6534:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/6534,1,['Update'],['Update']
Deployability,Update ROCCurve.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6984:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/6984,1,['Update'],['Update']
Deployability,Update ROOT and Cling to LLVM 16,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13273:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/13273,1,['Update'],['Update']
Deployability,Update ROOT and Cling to LLVM18,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15696:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/15696,1,['Update'],['Update']
Deployability,Update ROOT's R interface for Rcpp 1.0.13,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16075:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/16075,1,['Update'],['Update']
Deployability,Update ROOT's llvm to llvm13.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/10294,1,['Update'],['Update']
Deployability,Update R__DEPRECATED macros.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1820:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/1820,1,['Update'],['Update']
Deployability,Update Release notes (startup speedup) [NOBUILDS],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4311:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/4311,2,"['Release', 'Update']","['Release', 'Update']"
Deployability,Update RooFit AD to support ATLAS and CMS Higgs combinations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15616:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/15616,1,['Update'],['Update']
Deployability,Update RootMacros.cmake,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6306:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/6306,2,['Update'],['Update']
Deployability,Update TBB to 2020_U1 version [gcc10] [skip-ci] [ROOT-10816],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5840:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5840,1,['Update'],['Update']
Deployability,Update TBranchElement docs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2354:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/2354,1,['Update'],['Update']
Deployability,Update TColor enum since rainbow is one word,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11850:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/11850,1,['Update'],['Update']
Deployability,Update TGProgressBar.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6561:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/6561,1,['Update'],['Update']
Deployability,Update TGraph2D properties before painting,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13919:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/13919,1,['Update'],['Update']
Deployability,Update TGraph2D properties before painting [6.30],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13920:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/13920,1,['Update'],['Update']
Deployability,Update THStack documentation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15766:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/15766,1,['Update'],['Update']
Deployability,Update TLatex.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9211:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/9211,1,['Update'],['Update']
Deployability,Update TMVA BDT parallelisation PR. This is un update of PR #723,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1781:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/1781,2,"['Update', 'update']","['Update', 'update']"
Deployability,"Update TMVA UsersGuide for new DeepLearning features (MethodDL, CNN, RNN",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5710:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5710,1,['Update'],['Update']
Deployability,Update TMVA documentation for CV + more,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1851:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/1851,1,['Update'],['Update']
Deployability,Update TMVA scripts for ROOT6,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/53:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/53,1,['Update'],['Update']
Deployability,Update TPad.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6506:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/6506,2,['Update'],['Update']
Deployability,Update TProfile2D.cxx - copy all attributes of axis to projection histograms,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16194:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/16194,1,['Update'],['Update']
Deployability,Update TSelector doc according to https://sft.its.cern.ch/jira/browse/ROOT-3992,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7650:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7650,1,['Update'],['Update']
Deployability,Update User's Guide pdf,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7279:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/issues/7279,1,['Update'],['Update']
Deployability,Update Vc to version 1.3.0 in CMake externals,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/360:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/360,1,['Update'],['Update']
Deployability,Update Vc version to 1.3.2 and suppress warnings by including it as a system header,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/608:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/608,1,['Update'],['Update']
Deployability,Update Vincenzo's credits info,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5698:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5698,1,['Update'],['Update']
Deployability,Update XRootD version to cope with new compilers (gcc 8.1),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1974:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/1974,1,['Update'],['Update']
Deployability,Update `CladDerivator.h` to the pushforward/pullback model,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12021:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/12021,1,['Update'],['Update']
Deployability,Update `clad` to master to investigate regression in RooFit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15875:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/15875,2,['Update'],['Update']
Deployability,Update `geom/geodemo.C` and `geom/csgdemo.C` tutorials [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11911:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/11911,1,['Update'],['Update']
Deployability,Update `root` header to current year.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/132:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/132,1,['Update'],['Update']
Deployability,Update a warning message when using RooFit::NumCpu with strategy=3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5735:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5735,1,['Update'],['Update']
Deployability,Update all TH1 derived class version number.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3619:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3619,3,['Update'],['Update']
Deployability,Update also contributor list adding the GSOC and summer student of 2021; that have contributed to the TMVA developments,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9776:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/9776,1,['Update'],['Update']
Deployability,Update and improve description for fitting histograms ans graphs.; Add missing documentation for the Minimizer options in ROOT::Math::MinimizerOptions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9631:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/9631,1,['Update'],['Update']
Deployability,"Update and move content into the main group page, remove duplicated pages. ```; Co-authored-by: Bertrand Bellenot <Bertrand.Bellenot@cern.ch>; Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>; ```. [skip-ci]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9608:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/9608,1,['Update'],['Update']
Deployability,Update and replace PR #723 fixing the conflict with master,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1781:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/1781,1,['Update'],['Update']
Deployability,Update and simplify some code for C++14,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9071:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/9071,1,['Update'],['Update']
Deployability,Update basket optimization,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/238:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/238,1,['Update'],['Update']
Deployability,Update bernstein,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4506:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/4506,1,['Update'],['Update']
Deployability,Update bindings/jupyroot/README.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16086:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/16086,1,['Update'],['Update']
Deployability,Update boost.modulemap for boost 1.75,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7568:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7568,1,['Update'],['Update']
Deployability,Update build badges to point to new Jenkins instance,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/742:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/742,1,['Update'],['Update']
Deployability,Update build guide for cling,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15972:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/15972,1,['Update'],['Update']
Deployability,Update build system threads related variables,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6405:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/6405,1,['Update'],['Update']
Deployability,Update builtin Davix and OpenSSL,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1845:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/1845,1,['Update'],['Update']
Deployability,Update builtin Davix back to version 0.6.7,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1907:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/1907,1,['Update'],['Update']
Deployability,Update builtin LZMA version,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3290:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3290,1,['Update'],['Update']
Deployability,Update builtin OpenSSL and TBB,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3895:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3895,1,['Update'],['Update']
Deployability,Update builtin VecCore to 0.7.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7064:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7064,1,['Update'],['Update']
Deployability,Update builtin VecCore to 0.7.0 for ROOT 6.22,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7147:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7147,1,['Update'],['Update']
Deployability,Update builtin XRootD to v5.4.1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9967:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/issues/9967,1,['Update'],['Update']
Deployability,Update builtin XRootD to version 4.9.1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3868:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3868,1,['Update'],['Update']
Deployability,Update builtin openssl to 1.0.2q,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3071:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3071,1,['Update'],['Update']
Deployability,Update builtin version of OpenSSL to 1.0.2q,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3072:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3072,1,['Update'],['Update']
Deployability,Update builtin version of Vc to 1.4.1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3004:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3004,1,['Update'],['Update']
Deployability,Update builtin version of VecCore to 0.5.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2641:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/2641,1,['Update'],['Update']
Deployability,Update builtin version of XRootD to 4.8.5,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3067:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3067,1,['Update'],['Update']
Deployability,Update builtin versions of VecCore (0.5.2) and Vc (1.4.0),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2976:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/2976,1,['Update'],['Update']
Deployability,Update builtins and disable Alien if XRootD is disabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4181:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/4181,1,['Update'],['Update']
Deployability,Update civetweb to 1.16 once it's released,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10403:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/issues/10403,2,"['Update', 'release']","['Update', 'released']"
Deployability,Update clad to v0.2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2462:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/2462,1,['Update'],['Update']
Deployability,Update clingUtils/CMakeLists.txt to copy module.modulemap in cling includes for Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5086:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5086,1,['Update'],['Update']
Deployability,Update comment in patch to DiagnosticsEngine::DiagStateMap::append,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4890:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/4890,2,"['Update', 'patch']","['Update', 'patch']"
Deployability,Update concurrentfill.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8492:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/8492,1,['Update'],['Update']
Deployability,Update credits.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1452:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/1452,1,['Update'],['Update']
Deployability,Update df003_profiles.C,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5672:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5672,1,['Update'],['Update']
Deployability,Update doc to express deprecation of genreflex and usage of rootcling as a replacement,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13481:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/issues/13481,1,['Update'],['Update']
Deployability,"Update documentation of `TChain::Add(const char* name, Long64_t nentries ` :; * show correct way to add a file with a sub tree name using the ""?#treename"" syntax; * Provide better separation of contents, highlighting different sections according to the description of the various behaviours with respect to the input parameters; * Modernize a bit the code example to loop over the files in the chain",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8894:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/8894,1,['Update'],['Update']
Deployability,Update geom/geocad CMakeLists.txt,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3031:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3031,1,['Update'],['Update']
Deployability,"Update glvox2.C tutorial, update jsroot [skip-ci]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14013:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/14013,2,"['Update', 'update']","['Update', 'update']"
Deployability,Update gtest to latest version 1.10.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5228:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5228,1,['Update'],['Update']
Deployability,Update hadd docs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11254:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/11254,1,['Update'],['Update']
Deployability,Update header and footer to Doxygen 1.8.14 [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5104:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5104,1,['Update'],['Update']
Deployability,Update help,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5205:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5205,1,['Update'],['Update']
Deployability,Update higgs cpp tutorial with `DeltaR` function,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4115:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/4115,1,['Update'],['Update']
Deployability,Update histops tutorial to match current RHist addition semantics,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5052:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5052,1,['Update'],['Update']
Deployability,Update index.md for eve-7,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3086:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3086,1,['Update'],['Update']
Deployability,Update issue templates,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6328:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/6328,1,['Update'],['Update']
Deployability,Update issue templates [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6330:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/6330,1,['Update'],['Update']
Deployability,Update jsroot with fixes for profiling tools [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7510:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7510,1,['Update'],['Update']
Deployability,"Update jsroot, fix several RCanvas problems [skip-ci]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10526:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/10526,1,['Update'],['Update']
Deployability,Update libc.modulemap,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3574:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3574,2,['Update'],['Update']
Deployability,Update links,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8075:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/8075,1,['Update'],['Update']
Deployability,Update links for documentation on contributing,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/847:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/847,1,['Update'],['Update']
Deployability,Update links in TFile layout pages,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8075:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/8075,1,['Update'],['Update']
Deployability,Update links of the ref guide main page,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8062:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/8062,1,['Update'],['Update']
Deployability,Update links to math manual,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7148:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7148,1,['Update'],['Update']
Deployability,Update llvm to r302975,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/589:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/589,1,['Update'],['Update']
Deployability,Update llvm to release 5.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1218:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/1218,2,"['Update', 'release']","['Update', 'release']"
Deployability,Update location of stressIOPlugin eos files,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7835:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7835,1,['Update'],['Update']
Deployability,Update makerootfile.C to the new JSRoot API,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8028:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/8028,2,['Update'],['Update']
Deployability,Update masses of Omega_c0 and Xi_cc++ according to PDG 2022,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12968:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/12968,1,['Update'],['Update']
Deployability,Update minimal CMake version in favour of advances features it offers,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8336:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/8336,1,['Update'],['Update']
Deployability,Update minimum dask version found with cmake,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11452:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/11452,2,['Update'],['Update']
Deployability,Update minimum required version of CMake to 3.6,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3036:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3036,1,['Update'],['Update']
Deployability,Update nlohmann/json.hpp to version 3.10.5,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11223:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/11223,1,['Update'],['Update']
Deployability,Update of the previous pull request #4077,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4078:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/4078,1,['Update'],['Update']
Deployability,"Update qt5web in 6.24, fix small issue in QWebEngine initialization [skip-ci]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7813:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7813,1,['Update'],['Update']
Deployability,Update readme about web geom viewer,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5075:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5075,1,['Update'],['Update']
Deployability,Update release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/612:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/612,10,"['Update', 'release']","['Update', 'release']"
Deployability,Update release notes for v6 24 00,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7864:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7864,4,"['Update', 'release']","['Update', 'release']"
Deployability,"Update release notes with missing items, fixes #7858",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7864:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7864,4,"['Update', 'release']","['Update', 'release']"
Deployability,Update roo keys pdf,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4440:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/4440,1,['Update'],['Update']
Deployability,Update root welcome logo to current year,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1935:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/1935,1,['Update'],['Update']
Deployability,Update script for PDG table,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13354:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/13354,1,['Update'],['Update']
Deployability,"Update the ROOT file layout documentation with a correction, ROOT 3 -> 6 changes, and more detail.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7817:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7817,1,['Update'],['Update']
Deployability,Update the TMatrix reference documentation. Fix ROOT-10726,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5539:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5539,1,['Update'],['Update']
Deployability,Update the TTree user's as requested in: ; https://sft.its.cern.ch/jira/browse/ROOT-10809,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6358:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/6358,1,['Update'],['Update']
Deployability,Update the checksum for xrootd-5.4.2.tar.gz (fixes #10503),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10505:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/10505,2,['Update'],['Update']
Deployability,"Update the cleanup routine. Add cleaning up failed fits as well, i.e.,; CLs < 0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6219:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/6219,1,['Update'],['Update']
Deployability,Update the copyright year from 2020 to 2021 (good first issue),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7227:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/issues/7227,1,['Update'],['Update']
Deployability,Update the documentation of TRandom::GetSeed,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6723:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/6723,1,['Update'],['Update']
Deployability,Update the documentation of the TImer class showing that one needs to call ; TMVA::gConfig().SetDrawProgressBar(true);. to have the progress bar visible. . This fixes ROOT-9974,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5120:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5120,1,['Update'],['Update']
Deployability,Update the freetype library from 2.6.1 to 2.12.1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10712:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/10712,1,['Update'],['Update']
Deployability,Update the ref guide main page,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8887:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/8887,1,['Update'],['Update']
